#!/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 2019 Joyent, Inc.
#

#
# Call this to move a cr.joyent.us Gerrit CR to a Joyent GitHub PR.
#
# This will do the following:
# - Download the CR info from the archive and verify that it is open and for a
#   "joyent" org repo.
# - Summarize the CR discussion (if any) in a Markdown file to be used for the
#   PR description.
# - Get a clone of the repo, from which a PR will be created.
# - Download
#
#
#
# Usage (prompts for parameters):
#   bash -c "$(curl -ksSL https://raw.githubusercontent.com/joyent/gerrit-migration/master/bin/cr2pr)"
#
# or:
#   curl -ksSL -O https://raw.githubusercontent.com/joyent/gerrit-migration/master/bin/cr2pr
#   chmod +x ./cr2pr
#   ./cr2pr [-y] [-u GITHUB-USER] CR-NUM
#

if [[ -n "$TRACE" ]]; then
    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail


# ---- support functions

function fatal
{
    echo "$0: fatal error: $*"
    exit 1
}

function usage
{
    echo "Usage: ./cr2pr [-y] [-u GITHUB-USER] CR-NUM"
}


# ---- mainline

TOP=$(cd $(dirname $0)/../; pwd)

JSON=$(which json)
[[ -n "$JSON" ]] || fatal "'json' is not on your PATH"
HUB=$(which hub)
[[ -n "$HUB" ]] \
    || fatal "'hub' is not on your PATH, install it https://hub.github.com/"

skipConfirmations=no
# If this is other than "joyent", then we are working on a fork of the Joyent
# repo.
githubUser=joyent

if [[ $# -gt 0 ]]; then
    while getopts "hu:y" opt
    do
        case "$opt" in
            h)
                usage
                exit 0
                ;;
            u)
                githubUser=$OPTARG
                ;;
            y)
                skipConfirmations=yes
                ;;
            *)
                usage
                fatal "unknown option: -$opt"
                exit 1
                ;;
        esac
    done
    shift $(( $OPTIND - 1 ))

    crNum=$1
    [[ -n "$crNum" ]] || fatal "missing CR-NUM argument"
else
    echo "Please provide the following CR info:"
    echo -n " - CR number: "
    read crNum
    [[ -n "$crNum" ]] || fatal "CR number cannot be empty"
    echo -n " - GitHub repo user or org (default 'joyent'): "
    read githubUser
    [[ -z "$githubUser" ]] && githubUser=joyent
    echo ""
fi

# Working temp dir.
wrkDir=/var/tmp/cr2pr-$crNum-$(date '+%Y%m%dT%H%M%S')
echo "Temporary working dir: $wrkDir"
mkdir $wrkDir
cd $wrkDir

# Get the change info and some validation.
curl -sSO https://raw.githubusercontent.com/joyent/gerrit-migration/master/archive/$crNum/change.json
project=$(json -f change.json project)
echo "Repository: $project"
if [[ ${project} != joyent/* ]]; then
    fatal "'$project' not a joyent/NAME repo: this script doesn't support those"
fi
isOpen=$(json -f change.json open)
if [[ ${isOpen} != "true" ]]; then
    fatal "this CR is not open!"
fi
repoName=$(basename $project)

# Create a PR message
CR2MD=$TOP/bin/cr2md
if [[ ! -f $CR2MD ]]; then
    # This isn't running in the gerrit-migration repo, so we need to download
    # the script.
    curl -ksSL -O https://raw.githubusercontent.com/joyent/gerrit-migration/master/bin/cr2md
    chmod +x cr2md
    CR2MD=./cr2md
fi
$CR2MD change.json > pr-message.md

# Get the currentPatchSet diff.
curl -sSO https://raw.githubusercontent.com/joyent/gerrit-migration/master/archive/$crNum/currentPatchSet.diff

# Get a repo clone to work with.
echo "Getting a local clone of git@github.com:$githubUser/$repoName"
repoCacheDir=/var/tmp/cr2pr-repo-cache
mkdir -p $repoCacheDir
if [[ ! -d $repoCacheDir/$repoName ]]; then
    (cd $repoCacheDir && git clone git@github.com:$githubUser/$repoName)
else
    (cd $repoCacheDir/$repoName && git fetch)
fi
cp -PR $repoCacheDir/$repoName ./$repoName

# Create a feature branch based off the parent.
branchName=cr$crNum
primaryTicket=$(json -f change.json subject | cut -d' ' -f1 | cut -d: -f1)
if [[ -n "$primaryTicket" ]]; then
    branchName+=-$primaryTicket
fi
parentCommit=$(json -f change.json currentPatchSet.parents.0)
[[ -n $parentCommit ]] || fatal "no parent commit sha?"
echo "Creating PR branch $branchName (from parent commit $parentCommit)"
cd $repoName
git branch $branchName $parentCommit
git checkout $branchName
git am --committer-date-is-author-date < ../currentPatchSet.diff


# Create the pull request.
#XXX dryrun
echo hub pull-request -F ../pr-message.md

## Note: There is some bug in "gerrit review" such that it cannot handle
## spaces in the "--message" arg, so we've simplified our abandonment message.
pullUrl=XXX
revision=$(json -f ../change.json currentPatchSet.revision)
#XXX dryrun
echo ssh cr gerrit review --abandon -m $pullUrl $revision

pwd
XXX
