From 984f38c4018b7800bd024d4609be220589ad9d70 Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <jwilsdon@joyent.com>
Date: Wed, 27 Mar 2019 12:15:32 -0700
Subject: [PATCH] TRITON-1338 cn-agent should have server_reboot task Reviewed
 by: Orlando Vazquez <orlando@joyent.com> Approved by: Orlando Vazquez
 <orlando@joyent.com>

---
 lib/backends/dummy/index.js                   |  1 +
 lib/backends/dummy/tasks/server_reboot.js     | 63 ++++++++++++++++
 .../dummy/tasks/server_update_nics.js         | 50 +------------
 lib/backends/dummy/tasks/shared.js            | 51 ++++++++++++-
 lib/backends/smartos/bin/reboot-server.js     | 71 +++++++++++++++++++
 lib/backends/smartos/index.js                 |  1 +
 lib/backends/smartos/tasks/server_reboot.js   | 56 +++++++++++++++
 package.json                                  |  2 +-
 8 files changed, 245 insertions(+), 50 deletions(-)
 create mode 100644 lib/backends/dummy/tasks/server_reboot.js
 create mode 100755 lib/backends/smartos/bin/reboot-server.js
 create mode 100644 lib/backends/smartos/tasks/server_reboot.js

diff --git a/lib/backends/dummy/index.js b/lib/backends/dummy/index.js
index 1db6362..b176ad2 100644
--- a/lib/backends/dummy/index.js
+++ b/lib/backends/dummy/index.js
@@ -76,6 +76,7 @@ var queueDefns = [
         name: 'server_tasks',
         tasks: [
             'command_execute',
+            'server_reboot',
             'server_sysinfo',
             'server_update_nics'
         ]
diff --git a/lib/backends/dummy/tasks/server_reboot.js b/lib/backends/dummy/tasks/server_reboot.js
new file mode 100644
index 0000000..5337305
--- /dev/null
+++ b/lib/backends/dummy/tasks/server_reboot.js
@@ -0,0 +1,63 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
+var spawn = require('child_process').spawn;
+
+var assert = require('assert');
+
+var common = require('../common');
+var shared = require('./shared');
+var SysinfoGetter = require('../lib/sysinfo');
+var Task = require('../../../task_agent/task');
+
+var ServerRebootTask = module.exports = function (req) {
+    Task.call(this);
+    this.req = req;
+};
+
+Task.createTask(ServerRebootTask);
+
+function start() {
+    var self = this;
+
+    assert.object(self.req, 'self.req');
+    assert.object(self.req.sysinfo, 'self.req.sysinfo');
+    assert.object(self.req.serverAddress, 'self.req.serverAddress');
+
+    (new SysinfoGetter()).get({
+        serverAddress: self.req.serverAddress,
+        serverUuid: self.req.sysinfo.UUID
+    }, function _onSysinfo(getErr, sysinfo) {
+        if (getErr) {
+            self.fatal(getErr.message);
+            return;
+        }
+
+        self.progress(50);
+
+        sysinfo['Boot Time'] = (Math.floor(Date.now() / 1000)).toString();
+
+        shared.writeSysinfo({
+            log: self.log,
+            serverRoot: common.SERVER_ROOT
+        },
+        sysinfo,
+        function _onWroteSysinfo(err) {
+            if (err) {
+                self.fatal(err.message);
+                return;
+            }
+
+            self.finish();
+        });
+    });
+}
+
+ServerRebootTask.setStart(start);
diff --git a/lib/backends/dummy/tasks/server_update_nics.js b/lib/backends/dummy/tasks/server_update_nics.js
index 582f7c4..6c10d80 100644
--- a/lib/backends/dummy/tasks/server_update_nics.js
+++ b/lib/backends/dummy/tasks/server_update_nics.js
@@ -15,6 +15,7 @@ var assert = require('assert-plus');
 var vasync = require('vasync');
 
 var common = require('../common');
+var shared = require('./shared');
 var SysinfoGetter = require('../lib/sysinfo');
 var Task = require('../../../task_agent/task');
 
@@ -26,53 +27,6 @@ var NicUpdateTask = module.exports = function (req) {
 
 Task.createTask(NicUpdateTask);
 
-function writeSysinfo(opts, sysinfo, callback) {
-    assert.object(opts, 'opts');
-    assert.object(opts.log, 'opts.log');
-    assert.string(opts.serverRoot, 'opts.serverRoot');
-    assert.object(sysinfo, 'sysinfo');
-    assert.func(callback, 'callback');
-
-    var fd;
-    var filename;
-    var tmpFilename;
-
-    filename = path.join(opts.serverRoot, sysinfo.UUID, 'sysinfo.json');
-    tmpFilename = filename + '.' + process.pid;
-
-    vasync.pipeline({
-        funcs: [
-            function _openFile(_, cb) {
-                fs.open(tmpFilename, 'wx', function _onOpen(err, openedFd) {
-                    if (err) {
-                        cb(err);
-                        return;
-                    }
-
-                    fd = openedFd;
-                    cb();
-                });
-            }, function _writeThenCloseFile(_, cb) {
-                var buf = new Buffer(JSON.stringify(sysinfo, null, 2) + '\n');
-
-                fs.write(fd, buf, 0, buf.length, null, function _onWrite(err) {
-                    if (err) {
-                        cb(err);
-                        return;
-                    }
-                    fs.close(fd, function _onWritten() {
-                        cb();
-                    });
-                });
-            }, function _atomicReplace(_, cb) {
-                fs.rename(tmpFilename, filename, cb);
-            }
-        ]
-    }, function _onWroteSysinfo(err) {
-        opts.log.debug({err: err, sysinfo: sysinfo}, 'Wrote sysinfo');
-        callback(err);
-    });
-}
 
 function start() {
     var self = this;
@@ -123,7 +77,7 @@ function start() {
         }
 
         if (modified) {
-            writeSysinfo({
+            shared.writeSysinfo({
                 log: self.log,
                 serverRoot: serverRoot
             },
diff --git a/lib/backends/dummy/tasks/shared.js b/lib/backends/dummy/tasks/shared.js
index 5723dd5..1235fa3 100644
--- a/lib/backends/dummy/tasks/shared.js
+++ b/lib/backends/dummy/tasks/shared.js
@@ -714,9 +714,58 @@ function refreshAgents(opts, callback) {
     ]}, callback);
 }
 
+function writeSysinfo(opts, sysinfo, callback) {
+    assert.object(opts, 'opts');
+    assert.object(opts.log, 'opts.log');
+    assert.string(opts.serverRoot, 'opts.serverRoot');
+    assert.object(sysinfo, 'sysinfo');
+    assert.func(callback, 'callback');
+
+    var fd;
+    var filename;
+    var tmpFilename;
+
+    filename = path.join(opts.serverRoot, sysinfo.UUID, 'sysinfo.json');
+    tmpFilename = filename + '.' + process.pid;
+
+    vasync.pipeline({
+        funcs: [
+            function _openFile(_, cb) {
+                fs.open(tmpFilename, 'wx', function _onOpen(err, openedFd) {
+                    if (err) {
+                        cb(err);
+                        return;
+                    }
+
+                    fd = openedFd;
+                    cb();
+                });
+            }, function _writeThenCloseFile(_, cb) {
+                var buf = new Buffer(JSON.stringify(sysinfo, null, 2) + '\n');
+
+                fs.write(fd, buf, 0, buf.length, null, function _onWrite(err) {
+                    if (err) {
+                        cb(err);
+                        return;
+                    }
+                    fs.close(fd, function _onWritten() {
+                        cb();
+                    });
+                });
+            }, function _atomicReplace(_, cb) {
+                fs.rename(tmpFilename, filename, cb);
+            }
+        ]
+    }, function _onWroteSysinfo(err) {
+        opts.log.debug({err: err, sysinfo: sysinfo}, 'Wrote sysinfo');
+        callback(err);
+    });
+}
+
 
 module.exports = {
     installAgent: installAgent,
     installAgentsShar: installAgentsShar,
-    refreshAgents: refreshAgents
+    refreshAgents: refreshAgents,
+    writeSysinfo: writeSysinfo
 };
diff --git a/lib/backends/smartos/bin/reboot-server.js b/lib/backends/smartos/bin/reboot-server.js
new file mode 100755
index 0000000..1063179
--- /dev/null
+++ b/lib/backends/smartos/bin/reboot-server.js
@@ -0,0 +1,71 @@
+#!/opt/smartdc/agents/lib/node_modules/cn-agent/node/bin/node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
+/*
+ * Overview: Reboots the server in a manner similar to what ur-agent does when
+ * a script has exited with code 113.
+ *
+ */
+
+var execFile = require('child_process').execFile;
+
+var bunyan = require('bunyan');
+
+var log = bunyan.createLogger({name: 'reboot-server.js'});
+
+function main() {
+    execFile(
+        '/usr/sbin/shutdown',
+        ['-y', '-g', '0', '-i', '6'],
+        function (error, stdout, stderr) {
+            if (error) {
+                log.error({
+                    err: error,
+                    stderr: stderr,
+                    stdout: stdout
+                }, '/usr/sbin/shutdown failed');
+                throw new Error(stderr.toString());
+            } else {
+                log.info({
+                    stderr: stderr,
+                    stdout: stdout
+                }, '/usr/sbin/shutdown');
+            }
+            setTimeout(function () {
+                log.info('forcing reboot');
+                forceReboot();
+            }, 5 * 60 * 1000);
+        });
+}
+
+function forceReboot() {
+    execFile(
+        '/usr/sbin/reboot',
+        [],
+        function (error, stdout, stderr) {
+            if (error) {
+                log.error({
+                    err: error,
+                    stderr: stderr,
+                    stdout: stdout
+                }, '/usr/sbin/reboot failed');
+                throw new Error(stderr.toString());
+            } else {
+                log.info({
+                    stderr: stderr,
+                    stdout: stdout
+                }, '/usr/sbin/reboot');
+            }
+            // Wait for reboot
+        });
+}
+
+main();
diff --git a/lib/backends/smartos/index.js b/lib/backends/smartos/index.js
index 2f6a97f..585de55 100644
--- a/lib/backends/smartos/index.js
+++ b/lib/backends/smartos/index.js
@@ -55,6 +55,7 @@ var queueDefns = [
         tasks: [
             'command_execute',
             'server_overprovision_ratio',
+            'server_reboot',
             'server_sysinfo'
         ]
     },
diff --git a/lib/backends/smartos/tasks/server_reboot.js b/lib/backends/smartos/tasks/server_reboot.js
new file mode 100644
index 0000000..24cb9e1
--- /dev/null
+++ b/lib/backends/smartos/tasks/server_reboot.js
@@ -0,0 +1,56 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
+var path = require('path');
+var spawn = require('child_process').spawn;
+
+var Task = require('../../../task_agent/task');
+
+var ServerRebootTask = module.exports = function (req) {
+    Task.call(this);
+    this.req = req;
+};
+
+Task.createTask(ServerRebootTask);
+
+function start() {
+    var self = this;
+
+    var child;
+    var rebooter = path.join(__dirname, '/../bin/reboot-server.js');
+
+    // Use ctrun so that rebooter doesn't get killed when this task does.
+    child = spawn('/usr/bin/ctrun', [rebooter], {
+        cwd: '/',
+        detached: true,
+        env: {},
+        stdio: 'inherit'
+    });
+
+    child.on('error', function (err) {
+        self.log.error({err: err}, 'failed to spawn rebooter child');
+        self.fatal({error: err});
+    });
+
+    self.log.info({
+        pid: child.pid
+    }, 'attempted to spawn rebooter child');
+
+    if (child.pid) {
+        // If child.pid is undefined, we'll get to:
+        //
+        //   child.on('error', ...);
+        //
+        // above because we'll have failed to spawn.
+        self.finish();
+    }
+}
+
+ServerRebootTask.setStart(start);
diff --git a/package.json b/package.json
index 5168a58..71fd5ae 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cn-agent",
   "description": "Triton Compute Node Agent",
-  "version": "2.10.1",
+  "version": "2.11.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

