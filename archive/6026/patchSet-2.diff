From a5b97679cb63164f2f76b3068856d2a7ded59582 Mon Sep 17 00:00:00 2001
From: Kody Kantor <kody@kkantor.com>
Date: Thu, 28 Mar 2019 21:02:17 +0000
Subject: [PATCH] joyent/pgstatsmon#24 track vacuum start time

---
 CHANGES.md     |  2 +-
 lib/dbinit.js  | 30 +++++++++++++++++++++++++-----
 lib/queries.js | 15 +++++----------
 3 files changed, 31 insertions(+), 16 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index 2ef4314..e9821ae 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -1,7 +1,7 @@
 # pgstatsmon Changelog
 
 ## Not yet released
-None
+* #24 track vacuum start time
 
 ## 1.1.0
 * #18 pgstatsmon shouldn't try to create functions that depend on missing functions
diff --git a/lib/dbinit.js b/lib/dbinit.js
index 6977b1f..e86ac70 100644
--- a/lib/dbinit.js
+++ b/lib/dbinit.js
@@ -1,3 +1,11 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
 var mod_assert = require('assert-plus');
 var mod_bunyan = require('bunyan');
 var mod_pg = require('pg');
@@ -29,10 +37,9 @@ var PostgresInRecoveryError = 'PostgresInRecoveryError';
  * To accomplish this, this file:
  * - Connects to Postgres as the 'postgres' superuser
  * - Creates a 'pgstatsmon' role with limited privileges
- * - Creates a function in the given database ('moray' for Triton/Manta) to
- *   access unfiltered pg_stat_activity information
- * - Creates a function in the given database to access unfiltered
- *   pg_stat_replication information
+ * - Creates a few functions that will allow pgstatsmon to learn more about
+ *   how Postgres is operating (allows it to read everything from
+ *   pg_stat_progress_vacuum, etc.)
  *
  * The steps that create users or functions don't run if the target backend is
  * identified as being a synchronous or asynchronous replica.
@@ -209,6 +216,15 @@ function create_replication_function(args, callback) {
 
 /*
  * create a function for pgstatsmon to gather vacuum progress
+ *
+ * This Postgres function's return values changed when it began tracking the
+ * start time of vacuums. Postgres does not allow 'CREATE OR REPLACE FUNCTION'
+ * directives to change the name, argument types, or return types of functions.
+ * We must first explicitly drop the old function before creating a new function
+ * with a different signature.
+ *
+ * The DROP + CREATE is done in one logical operation for convenience and
+ * because it most closely resembles the behavior of previous versions.
  */
 function create_progress_vacuum_function(args, callback) {
 	if (args.pg_version < 90600) {
@@ -217,8 +233,10 @@ function create_progress_vacuum_function(args, callback) {
 		return;
 	}
 	var query;
-	query = 'CREATE OR REPLACE FUNCTION public.get_stat_progress_vacuum('
+	query = 'DROP FUNCTION IF EXISTS get_stat_progress_vacuum(); '
+	+ 'CREATE FUNCTION public.get_stat_progress_vacuum('
 	+ 'out relname name, '
+	+ 'out query_start double precision, '
 	+ 'out phase bigint, '
 	+ 'out heap_blks_total bigint, '
 	+ 'out heap_blks_scanned bigint, '
@@ -228,6 +246,7 @@ function create_progress_vacuum_function(args, callback) {
 	+ 'out num_dead_tuples bigint)'
 	+ ' AS $$'
 	+ ' SELECT T.relname AS relname,'
+	+ '	  EXTRACT (EPOCH FROM A.query_start) AS query_start,'
 	+ '	  S.param1+1 AS phase,'
 	+ '	  S.param2 AS heap_blks_total,'
 	+ '	  S.param3 AS heap_blks_scanned,'
@@ -238,6 +257,7 @@ function create_progress_vacuum_function(args, callback) {
 	+ ' FROM pg_stat_get_progress_info(\'VACUUM\') AS S '
 	+ ' JOIN pg_database D ON (S.datid = D.oid) '
 	+ ' JOIN pg_stat_all_tables As T ON (T.relid = S.relid)'
+	+ ' JOIN pg_stat_activity A ON (S.pid = A.pid)'
 	+ ' $$'
 	+ ' LANGUAGE SQL VOLATILE'
 	+ ' SECURITY DEFINER;';
diff --git a/lib/queries.js b/lib/queries.js
index e844ce4..52e5187 100644
--- a/lib/queries.js
+++ b/lib/queries.js
@@ -3,7 +3,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/.
  *
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var mod_ajv = require('ajv');
@@ -320,19 +320,14 @@ function getQueries(config) {
 	     'statkey': 'relname',
 	     'metadata': [ 'relname'],
 	     'sql': [
-	         'SELECT relname, ',
-	         '		phase, ',
-	         '		heap_blks_total, ',
-	         '		heap_blks_scanned, ',
-	         '		heap_blks_vacuumed, ',
-	         '		index_vacuum_count, ',
-	         '		max_dead_tuples, ',
-	         '		num_dead_tuples ',
-	         'FROM get_stat_progress_vacuum()'
+	         'SELECT * FROM get_stat_progress_vacuum()'
 	     ].join('\n'),
 	     'gauges': [
 	         { 'attr': 'phase', 'help': 'current processing phase of ' +
 	           'vacuum', 'expires': true, 'expiryPeriod': expiryPeriod },
+	         { 'attr': 'query_start', 'help': 'unix epoch timestamp of ' +
+	           'the vacuum began', 'expires': true,
+		    'expiryPeriod': expiryPeriod },
 	         { 'attr': 'heap_blks_total', 'help': 'total number of heap ' +
 	           'blocks in the table as of the beginning of the scan',
 	           'expires': true, 'expiryPeriod': expiryPeriod },
-- 
2.21.0

