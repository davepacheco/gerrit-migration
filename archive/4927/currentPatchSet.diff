commit 6a1255390f2359e83cc7d46a0ebdbc73021cc0b8 (refs/changes/27/4927/5)
Author: Dave Eddy <dave@daveeddy.com>
Date:   2018-10-10T12:14:44-04:00 (12 months ago)
    
    TRITON-826 vminfod timeout during `vmadm update`
    Reviewed by: Jorge Schrauwen <sjorge@blackdot.be>
    Reviewed by: Mike Gerdts <mike.gerdts@joyent.com>
    Approved by: Josh Wilsdon <josh@wilsdon.ca>

diff --git a/src/vm/man/vmadm.1m.md b/src/vm/man/vmadm.1m.md
index da91c625..0417697d 100644
--- a/src/vm/man/vmadm.1m.md
+++ b/src/vm/man/vmadm.1m.md
@@ -1108,6 +1108,18 @@ tab-complete UUIDs rather than having to type them out for every command.
         update: yes (but does nothing for OS VMs)
         default: the value of zonename
 
+    hvm:
+
+        A boolean that depicts whether or not the VM is hardware virtualized.
+        This property is computed based on the "brand" property and is not
+        modifiable.
+
+        type: boolean
+        vmtype: ANY
+        listable: yes
+        create: no
+        update: no
+
     image_uuid:
 
         This should be a UUID identifying the image for the VM if a VM was
diff --git a/src/vm/node_modules/VM.js b/src/vm/node_modules/VM.js
index a13313dc..ac72b7b2 100644
--- a/src/vm/node_modules/VM.js
+++ b/src/vm/node_modules/VM.js
@@ -15088,6 +15088,7 @@ exports.update = function (uuid, payload, options, callback)
                     'uuid',
                     'last_modified',
                     'server_uuid',
+                    'hvm',
 
                     // these are modified via set/remove/add/update
                     'nics',
@@ -15343,27 +15344,39 @@ exports.update = function (uuid, payload, options, callback)
                  * payload)
                  */
                 if (key === 'ram') {
+                    assert.bool(vmobj.hvm, 'vmobj.hvm');
+
                     [
                         'max_physical_memory',
                         'max_locked_memory',
-                        vmobj.brand === 'kvm' ? 'ram' : 'tmpfs'
+                        vmobj.hvm ? 'ram' : 'tmpfs'
                     ].forEach(function (newkey) {
-                        var v;
+                        var v = value;
+
+                        if (newkey !== 'ram') {
+                            if (keys.indexOf(newkey) > -1) {
+                                /*
+                                 * The key we are attempting to set as a result
+                                 * of the "ram" key being set is set explicitly
+                                 * in the original payload - skip it
+                                 */
+                                return;
+                            }
 
-                        if (newkey !== 'ram' && keys.indexOf(newkey) > -1) {
-                            /*
-                             * The key we are attempting to set as a result of
-                             * the "ram" key being set is set explicitly in
-                             * the original payload - skip it
-                             */
-                            return;
+                            switch (vmobj.brand) {
+                            case 'kvm':
+                                v += KVM_MEM_OVERHEAD;
+                                break;
+                            case 'bhyve':
+                                v += BHYVE_MEM_OVERHEAD;
+                                break;
+                            default:
+                                assert(!vmobj.hvm,
+                                    'HVM VM "ram" case not handled');
+                                break;
+                            }
                         }
 
-                        if (vmobj.brand === 'kvm' && newkey !== 'ram')
-                            v = value + KVM_MEM_OVERHEAD;
-                        else
-                            v = value;
-
                         var localChange = {
                             path: [newkey],
                             newValue: v
diff --git a/src/vm/node_modules/expander.js b/src/vm/node_modules/expander.js
index c56ab5cc..d79db38e 100644
--- a/src/vm/node_modules/expander.js
+++ b/src/vm/node_modules/expander.js
@@ -312,5 +312,8 @@ console.log('exports.KVM_MEM_OVERHEAD = ' + proptable.KVM_MEM_OVERHEAD + ';\n');
 
 output = 'exports.BRAND_OPTIONS = '
     + JSON.stringify(proptable.brand_options, null, 2) + ';\n\n';
+console.log(output);
 
+output = 'exports.HVM_BRANDS = '
+    + JSON.stringify(proptable.HVM_BRANDS, null, 2) + ';\n\n';
 console.log(output);
diff --git a/src/vm/node_modules/proptable.js b/src/vm/node_modules/proptable.js
index 36198549..56604d76 100644
--- a/src/vm/node_modules/proptable.js
+++ b/src/vm/node_modules/proptable.js
@@ -35,6 +35,14 @@
  *
  */
 
+// Hardware virtualized brands
+var HVM_BRANDS = [
+    'bhyve',
+    'kvm'
+];
+
+exports.HVM_BRANDS = HVM_BRANDS;
+
 // This can likely be lowered once we use large pages.
 var BHYVE_MEM_OVERHEAD = 1024 + 256;
 var BHYVE_MIN_MEM_OVERHEAD = 256;
diff --git a/src/vm/node_modules/vmload/index.js b/src/vm/node_modules/vmload/index.js
index 0629976b..87613848 100644
--- a/src/vm/node_modules/vmload/index.js
+++ b/src/vm/node_modules/vmload/index.js
@@ -50,6 +50,7 @@ var trim = utils.trim;
 
 // load generated tables of data
 var BRAND_OPTIONS = props.BRAND_OPTIONS;
+var HVM_BRANDS = props.HVM_BRANDS;
 var LOAD_DEPENDS = props.LOAD_DEPENDS;
 var SYSINFO_PROPERTIES = props.SYSINFO_PROPERTIES;
 var XML_PROPERTIES = props.XML_PROPERTIES;
@@ -738,6 +739,8 @@ function getVmobj(uuid, options, callback)
                 vmobj.zonename = zoneadm_info.zonename;
                 vmobj.zonepath = zoneadm_info.zonepath;
 
+                vmobj.hvm = HVM_BRANDS.indexOf(vmobj.brand) >= 0;
+
                 if (wantField(options, 'zoneid')
                     && zoneadm_info.zoneid !== '-') {
                     vmobj.zoneid = zoneadm_info.zoneid;
diff --git a/src/vm/sbin/vmadm.js b/src/vm/sbin/vmadm.js
index c2952478..4df266d5 100755
--- a/src/vm/sbin/vmadm.js
+++ b/src/vm/sbin/vmadm.js
@@ -94,6 +94,7 @@ var LIST_FIELDS = {
     exit_timestamp: {header: 'EXIT_TIMESTAMP', width: 24},
     firewall_enabled: {header: 'FIREWALL_ENABLED', width: 16},
     hostname: {header: 'HOSTNAME', width: 32},
+    hvm: {header: 'HVM', width: 5},
     image_uuid: {header: 'IMAGE_UUID', width: 36},
     indestructible_delegated: {header: 'INDESTR_DATA', width: 12},
     indestructible_zoneroot: {header: 'INDESTR_ROOT', width: 12},
diff --git a/src/vm/tests/test-defaults.js b/src/vm/tests/test-defaults.js
index 244abf6a..270e40ac 100644
--- a/src/vm/tests/test-defaults.js
+++ b/src/vm/tests/test-defaults.js
@@ -57,6 +57,7 @@ var zone_defaults = {
     do_not_inventory: [true],
     firewall_enabled: [false],
     headnode_id: ['<OPTIONAL-NON-EMPTY>'],
+    hvm: [false],
     image_uuid: [image_uuid],
     internal_metadata: ['<EMPTY-OBJ>'],
     last_modified: ['<NON-EMPTY>'],
@@ -102,6 +103,7 @@ var kvm_defaults = {
     billing_id: ['00000000-0000-0000-0000-000000000000'],
     brand: ['kvm'],
     disks: ['<EMPTY-ARRAY>'],
+    hvm: [true],
     /* JSSTYLED */
     limit_priv: ['default,-file_link_any,-net_access,-proc_fork,-proc_info,-proc_session'],
     max_physical_memory: [1280],
