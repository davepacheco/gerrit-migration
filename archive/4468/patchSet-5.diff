From c7bfe5adb88f274bb79d94999fc710c259600cf8 Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Mon, 2 Jul 2018 23:00:05 +0000
Subject: [PATCH] MORAY-483 Prevent new queries when Postgres client has
 emitted an error Reviewed by: Jan Wyszynski <jan.wyszynski@joyent.com>
 Approved by: Jan Wyszynski <jan.wyszynski@joyent.com>

---
 lib/pg.js | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/lib/pg.js b/lib/pg.js
index c1d6949..f3a43b7 100644
--- a/lib/pg.js
+++ b/lib/pg.js
@@ -247,6 +247,18 @@ PGClient.prototype.query = function clientQuery(sql, args) {
     var self = this;
     var timer;
 
+    if (self._moray_had_err !== null) {
+        /*
+         * If we've hit a connection error, then we need to make sure to
+         * avoid calling the node-postgres .query() method, since it won't
+         * emit anything.
+         */
+        setImmediate(function () {
+            res.emit('error', self._moray_had_err);
+        });
+        return res;
+    }
+
     /*
      * Moray will periodically issue the query 'SELECT NOW() AS when' to
      * available PGClients as a health checking facility (see pgCheck).
@@ -274,7 +286,7 @@ PGClient.prototype.query = function clientQuery(sql, args) {
             return ([reqid, sql, err.toString()]);
         });
 
-        done('error', err);
+        setImmediate(done, 'error', err);
     }
 
     req = new pg.Query(sql, args);
@@ -377,7 +389,7 @@ PGClient.prototype.query = function clientQuery(sql, args) {
         args: args
     }, 'pg.query: started');
 
-    return (res);
+    return res;
 };
 
 
-- 
2.21.0

