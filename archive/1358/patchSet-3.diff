commit 335552e276aaf8a4d24198dffa51481c4984847e (refs/changes/58/1358/3)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2017-05-18T01:03:48+00:00 (2 years, 5 months ago)
    
    FWAPI-274 Want a fresher firewaller

diff --git a/Makefile b/Makefile
index 97d5adb..39d9a5a 100644
--- a/Makefile
+++ b/Makefile
@@ -33,6 +33,9 @@ JSL_CONF_NODE	 = tools/jsl.node.conf
 JSL_FILES_NODE	 = $(JS_FILES)
 JSSTYLE_FILES	 = $(JS_FILES)
 JSSTYLE_FLAGS	 = -f tools/jsstyle.conf
+ESLINT		= ./node_modules/.bin/eslint
+ESLINT_CONF	= tools/eslint.node.conf
+ESLINT_FILES	= $(JS_FILES)
 REPO_MODULES	 = src/node-dummy
 SMF_MANIFESTS_IN = smf/manifests/firewaller.xml.in
 SDC_CLIENTS		 = node_modules/sdc-clients
@@ -70,6 +73,7 @@ $(SDC_CLIENTS):
 	./tools/mk-sdc-clients-light.sh $(shell json -f package.json platformDependencies.sdc-clients | cut -d'#' -f2) $(SDC_CLIENTS) fwapi.js vmapi.js
 
 $(NODEUNIT): node_modules
+$(ESLINT): node_modules
 
 # Remove binary modules - we use the ones in the platform that are built
 # against the platform node
@@ -130,6 +134,9 @@ publish: release
 	cp $(TOP)/$(RELEASE_TARBALL) $(BITS_DIR)/$(NAME)/$(RELEASE_TARBALL)
 	cp $(TOP)/$(RELEASE_MANIFEST) $(BITS_DIR)/$(NAME)/$(RELEASE_MANIFEST)
 
+.PHONY: check
+check:: $(ESLINT)
+	$(ESLINT) -c $(ESLINT_CONF) $(ESLINT_FILES)
 
 include ./tools/mk/Makefile.deps
 ifeq ($(shell uname -s),SunOS)
diff --git a/lib/endpoints/rules.js b/lib/endpoints/rules.js
index 6cb517a..85c284c 100644
--- a/lib/endpoints/rules.js
+++ b/lib/endpoints/rules.js
@@ -30,7 +30,7 @@ function getRule(req, res, next) {
 
     fw.get(opts, function (err, rule) {
         if (err) {
-            if (err.code == 'ENOENT') {
+            if (err.code === 'ENOENT') {
                 return next(new restify.ResourceNotFoundError(
                     'rule not found'));
             }
diff --git a/lib/endpoints/rvms.js b/lib/endpoints/rvms.js
index 14fc6ae..b8d639c 100644
--- a/lib/endpoints/rvms.js
+++ b/lib/endpoints/rvms.js
@@ -30,7 +30,7 @@ function getRVM(req, res, next) {
 
     fw.getRVM(opts, function (err, rvm) {
         if (err) {
-            if (err.code == 'ENOENT') {
+            if (err.code === 'ENOENT') {
                 return next(new restify.ResourceNotFoundError(
                     'remote VM not found'));
             }
diff --git a/lib/tasks/sync.js b/lib/tasks/sync.js
index a25acb4..c20d302 100644
--- a/lib/tasks/sync.js
+++ b/lib/tasks/sync.js
@@ -94,7 +94,7 @@ function removeDeletedRules(opts, callback) {
 
     opts.allRules.forEach(function (rule) {
         // Omit local-only rules
-        if (rule.created_by != 'fwapi') {
+        if (rule.created_by !== 'fwapi') {
             local.push(rule);
             return;
         }
@@ -160,9 +160,7 @@ function syncFromAPIs(opts, callback) {
  */
 function syncToFWAPI(opts, callback) {
     opts.log.debug('Syncing rules to FWAPI');
-    /*jsl:ignore*/
     var hitError = false;
-    /*jsl:end*/
     var toSync = [];
 
     for (var r in opts.allRules) {
diff --git a/lib/tasks/update-rule.js b/lib/tasks/update-rule.js
index 4414f40..cd169d7 100644
--- a/lib/tasks/update-rule.js
+++ b/lib/tasks/update-rule.js
@@ -43,7 +43,7 @@ function updateRule(opts, callback) {
             req_id: opts.req_id
         }, function (getErr, res) {
             if (getErr) {
-                if (getErr.code == 'ENOENT') {
+                if (getErr.code === 'ENOENT') {
                     opts.log.info(opts.value, 'rule did not affect any VMs '
                         + 'and did not exist: not updating');
                     return callback();
diff --git a/lib/vm.js b/lib/vm.js
index 2f4371b..47e1a53 100644
--- a/lib/vm.js
+++ b/lib/vm.js
@@ -22,7 +22,7 @@ var VMADM = '/usr/sbin/vmadm';
 
 function isLocal(vms, vm) {
     for (var v in vms) {
-        if (vms[v].uuid == vm.uuid) {
+        if (vms[v].uuid === vm.uuid) {
             return vms[v];
         }
     }
diff --git a/package.json b/package.json
index f74385b..bfe64f9 100644
--- a/package.json
+++ b/package.json
@@ -23,6 +23,8 @@
         "sdc-clients": "git+https://github.com/joyent/node-sdc-clients.git#9d4678c"
     },
     "devDependencies": {
+        "eslint": "2.13.1",
+        "eslint-plugin-joyent": "1.0.1",
         "once": "1.3.0",
         "ldapjs": "0.7.0",
         "mockery": "1.4.0",
diff --git a/test/unit/mocks.js b/test/unit/mocks.js
index 24f9b21..3f98918 100644
--- a/test/unit/mocks.js
+++ b/test/unit/mocks.js
@@ -118,7 +118,7 @@ function mockFWAPI(opts) {
 }
 
 
-mockFWAPI.prototype._addReq = function addReq(route, params, callback) {
+mockFWAPI.prototype._addReq = function addReq(route, params) {
     if (!FWAPI_REQS.hasOwnProperty(route)) {
         FWAPI_REQS[route] = [];
     }
@@ -255,7 +255,7 @@ function getVMAPIrequests() {
 function localVMs() {
     return clone(values(VMS).filter(function (vm) {
         return (vm.hasOwnProperty('server_uuid') &&
-            vm.server_uuid == LOCAL_SERVER);
+            vm.server_uuid === LOCAL_SERVER);
     }));
 }
 
diff --git a/tools/eslint.node.conf b/tools/eslint.node.conf
new file mode 100644
index 0000000..285c1af
--- /dev/null
+++ b/tools/eslint.node.conf
@@ -0,0 +1,22 @@
+{
+    "plugins": [ "joyent" ],
+    "extends": [
+        "eslint:recommended",
+        "plugin:joyent/style",
+        "plugin:joyent/lint"
+    ],
+    "parserOptions": {
+        "ecmaVersion": 5,
+        "sourceType": "script",
+        "ecmaFeatures": {
+        }
+    },
+    "env": {
+        "node": true
+    },
+    "rules": {
+        //"strict": [ "error", "global" ],
+        "consistent-return": "off",
+        "object-curly-newline": "off"
+    }
+}
