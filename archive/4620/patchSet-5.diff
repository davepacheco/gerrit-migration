From 91e0ccd9bcbc0a13033959cef2732d186f3fcfb0 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Wed, 8 Aug 2018 18:22:54 +0200
Subject: [PATCH] TOOLS-1966 'sdcadm create -s dhcpd' should set 'dhcpd_server'
 flag to admin Nic Reviewed by: Marsell Kukuljevic <marsell@joyent.com>

---
 CHANGES.md                                   |  4 ++
 lib/common.js                                | 75 ++++++++++++++++++++
 lib/procedures/create-service-instance-v1.js | 57 +++++++++++++++
 3 files changed, 136 insertions(+)

diff --git a/CHANGES.md b/CHANGES.md
index a011425..d97a16b 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -10,6 +10,10 @@
 
 # sdcadm Changelog
 
+### 1.20.2 (not yet released)
+
+- TOOLS-1966 `sdcadm create -s dhcpd` should set `dhcpd_server` flag to admin Nic
+
 ## 1.20.1
 
 - TOOLS-1958 / TOOLS-1959 `sdcadm experimental update-agents` Uses a consistent
diff --git a/lib/common.js b/lib/common.js
index 9a6152a..4ab25c1 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -611,6 +611,80 @@ function vmGetRemote(opts, cb) {
     });
 }
 
+
+function waitUntilTaskCompletes(opts, cb) {
+    assert.object(opts, 'opts');
+    assert.object(opts.cnapi, 'opts.cnapi');
+    assert.uuid(opts.taskid, 'opts.taskid');
+    assert.func(cb, 'cb');
+
+    var counter = 0;
+    var limit = 360;
+
+    function _waitTask() {
+        counter += 1;
+        opts.cnapi.getTask(opts.taskid, function getTaskCb(err, task) {
+            if (err) {
+                cb(new errors.SDCClientError(err, 'cnapi'));
+                return;
+            }
+
+            if (task.status === 'failure') {
+                var msg = format('Task %s failed', opts.taskid);
+                var taskErr = task.history[0].event.error;
+                if (taskErr) {
+                    msg += ' with error: ' +
+                        taskErr.message;
+                }
+                cb(new errors.InternalError({ message: msg}));
+            } else if (task.status === 'complete') {
+                cb();
+            } else if (counter < limit) {
+                setTimeout(_waitTask, 5000);
+            } else {
+                cb(new errors.InternalError({
+                    message: 'Timeout(30m) waiting for CNAPI task ' +
+                        opts.taskid
+                }));
+            }
+        });
+    }
+    _waitTask();
+}
+
+
+function vmUpdateRemote(opts, cb) {
+    assert.object(opts, 'opts');
+    assert.string(opts.uuid, 'opts.uuid');
+    assert.string(opts.server, 'opts.server');
+    assert.object(opts.cnapi, 'opts.cnapi');
+    assert.object(opts.params, 'opts.params');
+    assert.func(cb, 'cb');
+
+    var vmPath = util.format('/servers/%s/vms/%s/update',
+        opts.server, opts.uuid);
+    opts.cnapi.post({
+        path: vmPath
+    }, opts.params, function upVmCb(err, res) {
+        if (err) {
+            cb(new errors.SDCClientError(err, 'cnapi'));
+            return;
+        }
+
+        if (!res || !res.id) {
+            cb(new errors.InternalError({
+                message: 'Unexpected response from CNAPI'
+            }));
+            return;
+        }
+
+        waitUntilTaskCompletes({
+            cnapi: opts.cnapi,
+            taskid: res.id
+        }, cb);
+    });
+}
+
 function getZoneIP(opts, cb) {
     assert.object(opts, 'opts');
     assert.string(opts.uuid, 'opts.uuid');
@@ -1727,6 +1801,7 @@ module.exports = {
     waitUntilZoneInDNS: waitUntilZoneInDNS,
     waitUntilZoneOutOfDNS: waitUntilZoneOutOfDNS,
     vmGetRemote: vmGetRemote,
+    vmUpdateRemote: vmUpdateRemote,
     imgadmGetRemote: imgadmGetRemote,
     manateeAdmRemote: manateeAdmRemote,
     manateeFreeze: manateeFreeze,
diff --git a/lib/procedures/create-service-instance-v1.js b/lib/procedures/create-service-instance-v1.js
index 974d3f5..aaa5333 100644
--- a/lib/procedures/create-service-instance-v1.js
+++ b/lib/procedures/create-service-instance-v1.js
@@ -171,6 +171,63 @@ CreateServiceInstanceV1.prototype.execute = function csiv1Execute(opts, cb) {
                         },
                         change: change
                     }, next);
+                },
+                function getVmFromVmapi(ctx, next) {
+                    if (change.service.name !== 'dhcpd') {
+                        next();
+                        return;
+                    }
+
+                    sdcadm.vmapi.getVm({
+                        uuid: change.inst.zonename
+                    }, function getVmCb(getErr, theVm) {
+                        if (getErr) {
+                            next(getErr);
+                            return;
+                        }
+                        ctx.currVm = theVm;
+                        next();
+                    });
+                },
+                function enableDhcpServer(ctx, next) {
+                    if (change.service.name !== 'dhcpd') {
+                        next();
+                        return;
+                    }
+
+                    var nics = ctx.currVm.nics;
+
+                    if (!nics) {
+                        next(new errors.InternalError({
+                            message: 'Unable to retrieve ' + alias + ' VM'
+                        }));
+                        return;
+                    }
+
+                    var adminNic = nics.filter(function findAdm(n) {
+                        return (n.nic_tag === 'admin');
+                    })[0];
+
+                    if (!adminNic || !adminNic.mac) {
+                        next(new errors.InternalError({
+                            message: 'Cannot find ' + alias + ' VM admin NIC'
+                        }));
+                        return;
+                    }
+
+                    common.vmUpdateRemote({
+                        uuid: change.inst.zonename,
+                        server: server,
+                        cnapi: sdcadm.cnapi,
+                        params: {
+                            update_nics: [
+                                {
+                                    mac: adminNic.mac,
+                                    dhcp_server: true
+                                }
+                            ]
+                        }
+                    }, next);
                 }
             );
         });
-- 
2.21.0

