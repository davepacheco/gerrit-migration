commit 043b9635a105a896e932517a44f96d19f8211d32 (refs/changes/34/434/3)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2016-09-09T21:29:56+00:00 (3 years, 1 month ago)
    
    FWAPI-248 fwadm rvm-rules lists rules twice
    Reviewed by: Trent Mick <trent.mick@joyent.com>
    Approved by: Trent Mick <trent.mick@joyent.com>

diff --git a/src/fw/lib/filter.js b/src/fw/lib/filter.js
index d94ba14d..ae7ef15f 100644
--- a/src/fw/lib/filter.js
+++ b/src/fw/lib/filter.js
@@ -87,6 +87,14 @@ function rulesByRVMs(remoteVMs, rules, log, callback) {
     }
 
     var matchingRules = [];
+    var matchingUUIDs = {};
+
+    function pushRule(rule) {
+        if (!matchingUUIDs[rule.uuid]) {
+            matchingRules.push(rule);
+            matchingUUIDs[rule.uuid] = true;
+        }
+    }
 
     ruleTypeWalk(rules, ['tags', 'vms', 'wildcards'], function (rule, type, t) {
         if (type === 'wildcards' && t === 'any') {
@@ -96,13 +104,13 @@ function rulesByRVMs(remoteVMs, rules, log, callback) {
         if (remoteVMs[type].hasOwnProperty(t)
             && !objEmpty(remoteVMs[type][t])) {
             if (!rule.hasOwnProperty('owner_uuid')) {
-                matchingRules.push(rule);
+                pushRule(rule);
                 return;
             }
 
             for (var uuid in remoteVMs[type][t]) {
                 if (remoteVMs[type][t][uuid].owner_uuid == rule.owner_uuid) {
-                    matchingRules.push(rule);
+                    pushRule(rule);
                     return;
                 }
             }
diff --git a/src/fw/test/unit/remote-vms.test.js b/src/fw/test/unit/remote-vms.test.js
index 3ec75c78..46f87f50 100644
--- a/src/fw/test/unit/remote-vms.test.js
+++ b/src/fw/test/unit/remote-vms.test.js
@@ -690,6 +690,48 @@ exports['local VM to remote tag'] = function (t) {
 };
 
 
+exports['FWAPI-248 - only list an applicable rule once'] = function (t) {
+    var rvm = helpers.generateVM({ tags: { foo: true, bar: false } });
+    var rule = {
+        owner_uuid: rvm.owner_uuid,
+        rule: 'FROM tag foo TO tag bar ALLOW tcp PORT 80',
+        enabled: true
+    };
+    var payload = {
+        remoteVMs: [ rvm ],
+        rules: [ clone(rule) ],
+        vms: []
+    };
+
+    async.series([
+    function (cb) {
+        fw.validatePayload(payload, function (err, res) {
+            t.ifError(err);
+            cb();
+        });
+    }, function (cb) {
+        fw.add(payload, function (err, res) {
+            t.ifError(err);
+            if (err) {
+                cb(err);
+                return;
+            }
+            helpers.fillInRuleBlanks(res.rules, [ rule ]);
+            cb();
+        });
+    }, function (cb) {
+        helpers.fwRvmRulesEqual({
+            t: t,
+            rules: [ rule ],
+            rvm: rvm.uuid,
+            vms: []
+        }, cb);
+    }], function () {
+        t.done();
+    });
+};
+
+
 exports['local VM and remote VM to IP'] = function (t) {
     var vm = helpers.generateVM({
         uuid: '5293cc31-189c-4b10-be90-7c74c78de927' });
