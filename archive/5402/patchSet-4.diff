From 47b969ad57ba142a91368953b3a59d526023d722 Mon Sep 17 00:00:00 2001
From: dyep <dyep49@gmail.com>
Date: Tue, 12 Feb 2019 22:37:33 -0800
Subject: [PATCH] TRITON-1099 VMAPI should expose free_space for bhyve VMs

---
 docs/index.md            |  4 +++-
 lib/common/validation.js | 13 ++++++++-----
 lib/common/vm-common.js  |  8 ++++++--
 package.json             |  2 +-
 4 files changed, 18 insertions(+), 9 deletions(-)

diff --git a/docs/index.md b/docs/index.md
index 1995bdd..8166d4c 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -10,7 +10,7 @@ markdown2extras: tables, code-friendly
 -->
 
 <!--
-    Copyright (c) 2018, Joyent, Inc.
+    Copyright (c) 2019, Joyent, Inc.
 -->
 
 # Introduction to VMs API
@@ -55,6 +55,8 @@ update time.
 | dns_domain               | String                        | Search domain value for /etc/resolv.conf (max length 255 chars)                                                                                                                                                   | No                  | Yes    | No     |
 | do_not_inventory         | Boolean                       | The primary use-case of this attribute is for test VMs that are created but you don't want their existence propagated up to VMAPI since they'll be short-lived and its lifecycle will be physically managed in the server | No                  | Yes    | Yes    |
 | firewall_enabled         | Boolean                       | Enable firewall for the VM                                                                                                                                                                                                | Yes                 | Yes    | Yes    |
+| flexible_disk_size       | Number (MiB)                  | The amount of space a bhyve instance may use for its disks and snapshots of those disks | No                 | Yes    | Yes    |
+| free_space               | Number (MiB)                  | Space that is not allocated to bhyve instance disks nor in use by snapshots of those disks) | No                 | Yes    | Yes    |
 | fs_allowed               | String (comma-separated list) | Filesystems allowed for the VM                                                                                                                                                                                            | No                  | Yes    | Yes    |
 | hostname                 | String                        | Hostname (excluding DNS suffix) for the VM (max length 63 chars, must be DNS-safe)                                                                                                                                        | No                  | Yes    | No     |
 | image_uuid               | UUID                          | Image of the VM                                                                                                                                                                                                           | Yes                 | Yes    | No     |
diff --git a/lib/common/validation.js b/lib/common/validation.js
index b75ad34..b18d187 100644
--- a/lib/common/validation.js
+++ b/lib/common/validation.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
@@ -2176,7 +2176,7 @@ exports.validateMetadataNamespaces = validateMetadataNamespaces;
 /*
  * Validates that the disks for the VM have a valid format
  */
-function validDisks(disks, errs) {
+function validDisks(disks, brand, errs) {
     var i;
     var ndisks = disks.length;
     var disk0 = disks[0];
@@ -2187,7 +2187,7 @@ function validDisks(disks, errs) {
         errs.push(errors.invalidUuidErr('disks.0.image_uuid'));
     }
 
-    if (disk0.size !== undefined) {
+    if (disk0.size !== undefined && brand !== 'bhyve') {
         errs.push(errors.invalidParamErr('disks.0.size', 'Not Allowed'));
     }
 
@@ -2232,7 +2232,7 @@ function validateBrandParams(params, errs) {
         if (!Array.isArray(params.disks) || (params.disks.length < 1)) {
             errs.push(errors.invalidParamErr('disks'));
         } else {
-            validDisks(params.disks, errs);
+            validDisks(params.disks, params.brand, errs);
         }
 
     } else {
@@ -2480,7 +2480,10 @@ exports.setDefaultValues = function (params, options) {
     if (['bhyve', 'kvm'].indexOf(params.brand) !== -1) {
         console.log(params);
         params.disks[0].image_name = params.image.name;
-        params.disks[0].image_size = params.image.image_size;
+
+        if (!params.disks[0].image_size) {
+            params.disks[0].image_size = params.image.image_size;
+        }
 
         // We don't set the refreservation via VMAPI for bhyve and instead
         // allow SmartOS to determine the refreservation.
diff --git a/lib/common/vm-common.js b/lib/common/vm-common.js
index 32e1c98..5453f01 100644
--- a/lib/common/vm-common.js
+++ b/lib/common/vm-common.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -172,7 +172,8 @@ function translateVm(obj, fullObject) {
         'pid',
         'tmpfs',
         'zfs_data_compression',
-        'flexible_disk_size'
+        'flexible_disk_size',
+        'free_space'
     ];
 
     optionalFields.forEach(function (field) {
@@ -188,6 +189,9 @@ function translateVm(obj, fullObject) {
         if (obj.hostname) {
             vm.hostname = obj.hostname;
         }
+        if (obj.brand === 'bhyve' && obj.free_space !== undefined) {
+            vm.free_space = obj.free_space;
+        }
     } else {
         vm.image_uuid = obj.image_uuid;
     }
diff --git a/package.json b/package.json
index a4df7f3..f803b9e 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "vmapi",
   "description": "VMs API",
-  "version": "9.6.6",
+  "version": "9.7.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

