commit 1d06bbf3498de34e129347988c804d88b590358c (refs/changes/79/3679/1)
Author: Josh Wilsdon <josh@wilsdon.ca>
Date:   2018-03-18T17:06:09-07:00 (1 year, 7 months ago)
    
    OS-6788 Failed bhyve provision doesn't clean up dataset

diff --git a/src/vm/node_modules/VM.js b/src/vm/node_modules/VM.js
index 6c0f3463..8cb3c354 100644
--- a/src/vm/node_modules/VM.js
+++ b/src/vm/node_modules/VM.js
@@ -3047,6 +3047,7 @@ function saveRoutes(payload, log, callback)
 
 function createVM(payload, log, callback)
 {
+    var created_zoneroot = false;
     var tracers_obj;
 
     assert(log, 'no logger passed to createVM()');
@@ -3086,6 +3087,9 @@ function createVM(payload, log, callback)
                 payload.zpool + '/' + payload.uuid];
 
             zfs(args, log, function _onZfsCreate(err) {
+                if (!err) {
+                    created_zoneroot = true;
+                }
                 cb(err);
             });
         }, function (cb) {
@@ -3100,8 +3104,46 @@ function createVM(payload, log, callback)
             createZone(payload, log, cb);
         }
     ], function (err, results) {
+        var zonecfg_file = '/etc/zones/' + payload.uuid + '.xml';
+        var zonepath_ds = payload.zpool + '/' + payload.uuid;
+
         if (err) {
-            callback(err);
+            // For bhyve, we create the zonepath dataset up-front. This means
+            // however that if something fails before the zone is created, we
+            // could be left without a VM but with a leftover dataset. In that
+            // case we'll try to delete it here.
+            if (created_zoneroot) {
+                fs.exists(zonecfg_file, function _zonecfgExists(exists) {
+                    var args = ['destroy', zonepath_ds];
+
+                    log.debug({
+                        exists: exists,
+                        zonecfg: zonecfg_file
+                    }, 'created zonepath then provision failed, checking if '
+                        + 'vm created');
+
+                    if (!exists) {
+                        log.info('attempting to remove ' + zonepath_ds);
+
+                        zfs(args, log, function _onZfsDestroy(zfsErr) {
+                            if (zfsErr) {
+                                // NOTE: we only log failure here because the VM
+                                // already failed to create so there's nothing
+                                // we can do but log.
+                                log.warn(zfsErr, 'failed to remove '
+                                    + zonepath_ds + ', manual cleanup will be '
+                                    + 'required');
+                            } else {
+                                log.info('destroyed ' + zonepath_ds);
+                            }
+                        });
+                    }
+
+                    callback(err);
+                });
+            } else {
+                callback(err);
+            }
         } else {
             callback(null, results);
         }
