{"project":"joyent/smartos-live","branch":"master","id":"Iec373865ea8334884e882c56418674dd23a285a0","number":"3679","subject":"OS-6788 Failed bhyve provision doesn\u0027t clean up dataset Reviewed by: Trent Mick \u003ctrentm@gmail.com\u003e Approved by: Trent Mick \u003ctrentm@gmail.com\u003e","owner":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"url":"https://cr.joyent.us/3679","commitMessage":"OS-6788 Failed bhyve provision doesn\u0027t clean up dataset\nReviewed by: Trent Mick \u003ctrentm@gmail.com\u003e\nApproved by: Trent Mick \u003ctrentm@gmail.com\u003e\n","createdOn":1521417970,"lastUpdated":1521493369,"open":false,"status":"MERGED","comments":[{"timestamp":1521417970,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 1."},{"timestamp":1521417971,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 1:\n\nNew commits:\n    \n    commit 1a44e1259dcf152a78d4b2431b7937e530631479\n    \n    remove zonepath dataset when vm creation fails"},{"timestamp":1521418017,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1521484123,"reviewer":{"name":"Dave Eddy","email":"dave.eddy@joyent.com","username":"bahamas10"},"message":"Patch Set 1: Code-Review+1\n\n(1 comment)"},{"timestamp":1521486993,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1521487093,"reviewer":{"name":"Dave Eddy","email":"dave.eddy@joyent.com","username":"bahamas10"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1521489400,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1521489579,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1521489761,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1521493072,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 2."},{"timestamp":1521493073,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 2:\n\nNew commits:\n    \n    commit b8787056f6c6b64dcee9996dfda7c45cb160b7ad\n    \n    updates after CR feedback\n    \n    commit 418f3b71509a67f1ca5fc7b21c25564289bcd82e\n    \n    remove zonepath dataset when vm creation fails"},{"timestamp":1521493117,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1521493137,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 2: Code-Review+1 Integration-Approval+1"},{"timestamp":1521493181,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 3: Commit message was updated."},{"timestamp":1521493369,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Josh Wilsdon"}],"currentPatchSet":{"number":"3","revision":"ec373865ea8334884e882c56418674dd23a285a0","parents":["6b5445891f7c4cf39b41681e51bf3ce25aa728d2"],"ref":"refs/changes/79/3679/3","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1521493181,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1521493117,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1521493137,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1521493137,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"SUBM","value":"1","grantedOn":1521493369,"by":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"src/vm/node_modules/VM.js","type":"MODIFIED","insertions":47,"deletions":-3}],"sizeInsertions":47,"sizeDeletions":-3},"patchSets":[{"number":"1","revision":"1d06bbf3498de34e129347988c804d88b590358c","parents":["c61623144fdc6459de2ebb6aaa0740ca02f5d689"],"ref":"refs/changes/79/3679/1","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1521417970,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1521418017,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1521484123,"by":{"name":"Dave Eddy","email":"dave.eddy@joyent.com","username":"bahamas10"}}],"comments":[{"file":"src/vm/node_modules/VM.js","line":3133,"reviewer":{"name":"Dave Eddy","email":"dave.eddy@joyent.com","username":"bahamas10"},"message":"nit: not totally related to this CR, but just a quick question.  I\u0027ve always logged errors with something like:\n\n\n log.warn({err: zfsErr}, ...);\n\n\nI remember specifically not trying to put raw objects into the first argument of a bunyan log line.   I guess my question might be for trent, but does it matters if the argument is an error object?"},{"file":"src/vm/node_modules/VM.js","line":3133,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"If the first arg is an error object, that is a special case supported explicitly by Bunyan log methods. See https://github.com/trentm/node-bunyan/#log-method-api\n\nUsing `log.warn({err: zfsErr}, ...);` and `log.warn(zfsErr, ...);` behave identically if `zfsErr` is an instance of `Error`."},{"file":"src/vm/node_modules/VM.js","line":3133,"reviewer":{"name":"Dave Eddy","email":"dave.eddy@joyent.com","username":"bahamas10"},"message":"Ah, thank you Trent that clears things up for me - I had overlooked the special case of Error instances."},{"file":"src/vm/node_modules/VM.js","line":3142,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"This calls back with the `err` without waiting for the potential `zfs destroy $zonepath_ds` to complete. Depending on how fast `vmadm ...` completes and if it uses `process.exit()` to exit, could that interrupt the `zfs destroy ...` before it is done?"},{"file":"src/vm/node_modules/VM.js","line":3142,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"It\u0027s a good point. This should probably move into the zfs callback, even though we don\u0027t care about the failure."},{"file":"src/vm/node_modules/VM.js","line":3142,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"When I faked a failure via:\n\n```\ndiff --git a/src/vm/node_modules/VM.js b/src/vm/node_modules/VM.js\nindex 8cb3c354..bc2a16e4 100644\n--- a/src/vm/node_modules/VM.js\n+++ b/src/vm/node_modules/VM.js\n@@ -3093,6 +3093,9 @@ function createVM(payload, log, callback)\n                 cb(err);\n             });\n         }, function (cb) {\n+            cb(new Error(\u0027XXX trent go boom\u0027));\n+            return;\n+       \n             if (!payload.create_only) {\n                 // progress(29, \u0027creating volumes\u0027);\n                 createVolumes(payload, log, cb);\n\n```\n\nand looked at the cn-agent machine_create task log which ran that \"vmadm create\", I see this in the log output from \"vmadm create\":\n\n```\n[root@headnode (coal) /var/tmp]# cat cn-agent-machine-create.log | grep \u0027error executing vmadm\u0027 | json stderrLines | json -a | bunyan\n...\n[2018-03-19T19:51:45.819Z] DEBUG: vmadm/19302 on headnode: created zonepath then provision failed, checking if vm created (req_id\u003d823be09d-f51a-43b3-8191-2b775de32b46, stack\u003dvmadm.create.createVM, action\u003dcreate, vm\u003d6ffe38be-fcc2-6dfe-be31-baff65e59281, exists\u003dfalse)\n    zonecfg: /etc/zones/6ffe38be-fcc2-6dfe-be31-baff65e59281.xml\n[2018-03-19T19:51:45.820Z]  INFO: vmadm/19302 on headnode: attempting to remove zones/6ffe38be-fcc2-6dfe-be31-baff65e59281 (req_id\u003d823be09d-f51a-43b3-8191-2b775de32b46, stack\u003dvmadm.create.createVM, action\u003dcreate, vm\u003d6ffe38be-fcc2-6dfe-be31-baff65e59281)\n[2018-03-19T19:51:45.820Z]  INFO: vmadm/19302 on headnode: executing command (req_id\u003d823be09d-f51a-43b3-8191-2b775de32b46, stack\u003dvmadm.create.createVM.zfs.destroy, action\u003dcreate, vm\u003d6ffe38be-fcc2-6dfe-be31-baff65e59281, cmd\u003d/usr/sbin/zfs, opts\u003d{})\n    args: [\n      \"destroy\",\n      \"zones/6ffe38be-fcc2-6dfe-be31-baff65e59281\"\n    ]\n    --\n    evt: {\n      \"name\": \"zfs.destroy\",\n      \"ph\": \"b\"\n    }\n[2018-03-19T19:51:45.832Z]  INFO: vmadm/19302 on headnode:  (req_id\u003d823be09d-f51a-43b3-8191-2b775de32b46, stack\u003dvmadm.create.createVM, action\u003dcreate, vm\u003d6ffe38be-fcc2-6dfe-be31-baff65e59281)\n    evt: {\n      \"args\": {\n        \"result\": -1\n      },\n      \"ph\": \"e\",\n      \"name\": \"createVM\"\n    }\n[2018-03-19T19:51:45.832Z]  INFO: vmadm/19302 on headnode:  (req_id\u003d823be09d-f51a-43b3-8191-2b775de32b46, stack\u003dvmadm.create)\n    evt: {\n      \"args\": {\n        \"result\": -1\n      },\n      \"ph\": \"e\",\n      \"name\": \"create\"\n    }\nXXX trent go boom\n```\n\nIOW, it looks like the \u0027zfs destroy ...\u0027 started, but we don\u0027t see either of the log statements in the \"_onZfsDestroy\":\n\n```\n                            if (zfsErr) {\n                                // NOTE: we only log failure here because the VM\n                                // already failed to create so there\u0027s nothing\n                                // we can do but log.\n                                log.warn(zfsErr, \u0027failed to remove \u0027\n                                    + zonepath_ds + \u0027, manual cleanup will be \u0027\n                                    + \u0027required\u0027);\n                            } else {\n                                log.info(\u0027destroyed \u0027 + zonepath_ds);\n                            }\n```"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"src/vm/node_modules/VM.js","type":"MODIFIED","insertions":43,"deletions":-1}],"sizeInsertions":43,"sizeDeletions":-1},{"number":"2","revision":"687c0f0f328966ffb34c929ec95b578d4e64e374","parents":["6b5445891f7c4cf39b41681e51bf3ce25aa728d2"],"ref":"refs/changes/79/3679/2","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1521493072,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1521493117,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1521493137,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1521493137,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/vm/node_modules/VM.js","type":"MODIFIED","insertions":47,"deletions":-3}],"sizeInsertions":47,"sizeDeletions":-3},{"number":"3","revision":"ec373865ea8334884e882c56418674dd23a285a0","parents":["6b5445891f7c4cf39b41681e51bf3ce25aa728d2"],"ref":"refs/changes/79/3679/3","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1521493181,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1521493117,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1521493137,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1521493137,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"SUBM","value":"1","grantedOn":1521493369,"by":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"src/vm/node_modules/VM.js","type":"MODIFIED","insertions":47,"deletions":-3}],"sizeInsertions":47,"sizeDeletions":-3}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Dave Eddy","email":"dave.eddy@joyent.com","username":"bahamas10"},{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"}]}