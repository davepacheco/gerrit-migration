commit f4708bec8d7ff1b75a17fc8b39eef935a04d17b6 (refs/changes/53/1053/4)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2016-12-16T20:24:17+00:00 (2 years, 10 months ago)
    
    MORAY-363 Validate index names
    Reviewed by: Patrick Mooney <patrick.mooney@joyent.com>
    Reviewed by: David Pacheco <dap@joyent.com>
    Approved by: David Pacheco <dap@joyent.com>

diff --git a/docs/index.md b/docs/index.md
index 16cc1f6..9972644 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -41,14 +41,22 @@ Upon creating a bucket you are allowed to define the bucket to have indexes,
 which allow you to later `search` for multiple records that match those
 indexes.  If indexes are defined on a bucket, when you write a key/value pair,
 the value is automatically indexed server-side in Moray for you.  Indexes can
-be defined to be of type `number`, `boolean`, `string`, or `inet` (IP address
-or network). They can optionally be defined to enforce uniqueness of a value.
+be defined to be of type `number`, `boolean`, `string`, `ip` or `subnet`. They
+can optionally be defined to enforce uniqueness of a value. Index names must:
+
+- Contain only Latin letters, Arabic numerals, and underscores.
+- Start with a Latin letter or an underscore.
+- Not end with an underscore.
+- When starting with an underscore, not contain any further underscores.
+- Not start with `moray`.
+- Not be a reserved name (`_etag`, `_id`, `_key`, `_atime`, `_ctime`, `_mtime`,
+  `_rver`, `_txn_snap`, `_value`, or `_vnode`).
 
 ## Arrays
 
-As of git commit `#ccb80c9`, Moray now supports the ability to define
-multi-valued entries such that indexing still works (mostly) as expected.  A
-small example is given, and then explained:
+As of release 20130822 (integrated in Git commit `#ccb80c9`), Moray now supports
+the ability to define multi-valued entries such that indexing still works
+(mostly) as expected. A small example is given, and then explained:
 
     var assert = require('assert-plus');
     var moray = require('moray');
diff --git a/lib/buckets/common.js b/lib/buckets/common.js
index fdc8d75..9898366 100644
--- a/lib/buckets/common.js
+++ b/lib/buckets/common.js
@@ -40,8 +40,24 @@ var INDEX_TYPES = {
 // <= 63 characters in length
 var BUCKET_NAME_RE = /^[a-zA-Z]\w{0,62}$/;
 
+var INDEX_NAME_RE =
+    /^(_[a-zA-Z0-9]+|[a-zA-Z][_a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])$/;
+
 var RESERVED_BUCKETS = ['moray', 'search'];
 
+var RESERVED_INDEXES = [
+    '_etag',
+    '_id',
+    '_key',
+    '_atime',
+    '_ctime',
+    '_mtime',
+    '_rver',
+    '_txn_snap',
+    '_value',
+    '_vnode'
+];
+
 
 ///--- API
 
@@ -131,6 +147,23 @@ function validateIndexes(schema) {
                                                'objects');
         }
 
+        if (!INDEX_NAME_RE.test(k)) {
+            throw new InvalidBucketConfigError(
+                'invalid index name "' + k + '"');
+        }
+
+        var kLC = k.toLowerCase();
+
+        if (RESERVED_INDEXES.indexOf(kLC) !== -1) {
+            throw new InvalidBucketConfigError(
+                'index name "' + k + '" is reserved for use by Moray');
+        }
+
+        if (/^_*moray/.test(kLC)) {
+            throw new InvalidBucketConfigError(
+                'index names cannot start with "moray": "' + k + '"');
+        }
+
         sub = schema[k];
         subKeys = Object.keys(sub);
         for (j = 0; j < subKeys.length; j++) {
