From 53e81c66524466dae944a035b022643812e2e7e6 Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Wed, 14 Dec 2016 11:51:37 -0800
Subject: [PATCH] TOOLS-1636 updates-imgadm et al with node v4 will not flush
 stdout on normal exit Reviewed by: Julien Gilli <julien.gilli@joyent.com>

---
 CHANGES.md         |  3 ++
 Makefile           | 22 ++++++++++++
 README.md          | 83 +++++++++++++++++++++++++---------------------
 TODO.txt           |  4 ---
 bin/imgapi-cli     |  9 +++--
 bin/joyent-imgadm  |  9 +++--
 bin/sdc-imgadm     |  9 +++--
 bin/updates-imgadm |  9 +++--
 lib/common.js      | 33 +++++++++++++++++-
 package.json       |  2 +-
 10 files changed, 127 insertions(+), 56 deletions(-)
 delete mode 100644 TODO.txt

diff --git a/CHANGES.md b/CHANGES.md
index 237044c..e4489d4 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -2,6 +2,9 @@
 
 ## not yet released
 
+## 2.2.3
+
+- TOOLS-1636 Fix updates-imgadm et al to flush stdout on exit.
 - IMGAPI-603 Support node v4 and later. Drop support for node v0.8.
 
 ## 2.2.2
diff --git a/Makefile b/Makefile
index 3043141..5d07632 100644
--- a/Makefile
+++ b/Makefile
@@ -31,6 +31,28 @@ all:
 test: | node_modules/.bin/tape
 	node_modules/.bin/tape test/*.test.js
 
+check:: versioncheck
+
+# Ensure CHANGES.md and package.json have the same version.
+.PHONY: versioncheck
+versioncheck:
+	@echo version is: $(shell cat package.json | json version)
+	[[ `cat package.json | json version` == `grep '^## ' CHANGES.md | head -2 | tail -1 | awk '{print $$2}'` ]]
+
+# This repo doesn't publish to npm, so a 'release' is just a tag.
+.PHONY: cutarelease
+cutarelease: versioncheck
+	[[ -z `git status --short` ]]  # If this fails, the working dir is dirty.
+	@which json 2>/dev/null 1>/dev/null && \
+	    ver=$(shell json -f package.json version) && \
+	    echo "** Are you sure you want to tag v$$ver?" && \
+	    echo "** Enter to continue, Ctrl+C to abort." && \
+	    read
+	ver=$(shell cat package.json | json version) && \
+	    date=$(shell date -u "+%Y-%m-%d") && \
+	    git tag -a "v$$ver" -m "version $$ver ($$date)" && \
+	    git push --tags origin
+
 DISTCLEAN_FILES += node_modules
 
 
diff --git a/README.md b/README.md
index 22962bd..1a9ed34 100644
--- a/README.md
+++ b/README.md
@@ -1,50 +1,56 @@
-<!--
-    This Source Code Form is subject to the terms of the Mozilla Public
-    License, v. 2.0. If a copy of the MPL was not distributed with this
-    file, You can obtain one at http://mozilla.org/MPL/2.0/.
--->
-
-<!--
-    Copyright (c) 2014, Joyent, Inc.
--->
-
 # sdc-imgapi-cli
 
-This is a CLI library that allows interacting with an
-[IMGAPI](https://github.com/joyent/sdc-imgapi) instance.
-
-This repository is part of the Joyent SmartDataCenter project (SDC).  For
-contribution guidelines, issues, and general documentation, visit the main
-[SDC](http://github.com/joyent/sdc) project page.
-
-# Overview
+This repository is part of the Joyent Triton project. See the [contribution
+guidelines](https://github.com/joyent/triton/blob/master/CONTRIBUTING.md) --
+*Triton does not use GitHub PRs* -- and general documentation at the main
+[Triton project](https://github.com/joyent/triton) page.
 
-There are typically two IMGAPI instances with which we interact:
+This repository provides a number of CLIs interacting with a Triton
+[IMGAPI](https://github.com/joyent/sdc-imgapi) instance. There are typically
+three IMGAPI instances with which we interact:
 
 1. <https://images.joyent.com> The central repository of Joyent-vetted images
-   for using on SmartOS instances and in SDC setups. There is a `joyent-imgadm`
-   tool that is typically used for this.
-2. The IMGAPI running in an SDC7 datacenter. A `sdc-imgadm` wrapper is provided
-   in the headnode global zone for this.
+   for using in Triton DataCenters and SmartOS machines. The `joyent-imgadm`
+   tool is made for this.
+2. <https://updates.joyent.com> The repository of Joyent-provided images for
+   updating components of Triton DataCenter itself. The `updates-imgadm` tool
+   is made for this.
+3. The IMGAPI service running inside a Triton DataCenter on the (private)
+   "admin" network for operators of that DC. The `sdc-imgadm` tool is made for
+   this.
+
+All the `*-imgadm` tools are similar, differing only in basic config such as
+which endpoint URL, where to gather config, whether the IMGAPI uses auth
+(#1 and #2 do, #3 does not), etc. `updates-imgadm` and `joyent-imgadm` can
+be used from any machine (i.e. they do not have to be run from a Triton DC
+headnode global zone). `sdc-imgadm` is typically just for running in a Triton DC
+headnode global or 'sdc0' zone. There is also a general `imgapi-cli` command
+that can be used for other IMGAPI endpoints, or for development and testing.
+
+Note that these `*-imgadm` tools are distinct from
+[imgadm(1m)](https://smartos.org/man/1m/imgadm). `imgadm` is part of SmartOS
+itself and manages Triton images in a SmartOS server's zpool. It imports images
+from IMGAPI repositories (such as the 3 listed above).
 
-Both `joyent-imgadm` and `sdc-imgadm` use the imgapi-cli tools from this repo.
-Note that these two tools are distinct from the `imgadm` tool available in all
-SmartOS installations.
 
 # Installation
 
-The 'joyent-imgadm' tool can be installed like so:
+The `*-imgadm` tools can be installed like so:
+
+    npm install -g git+https://github.com/joyent/sdc-imgapi-cli.git
+
+If you are a Triton DC operator these tools will already be setup for use
+in the headnode GZ and the headnode 'sdc0' zone.
 
-    npm install -g git+ssh://git@github.com:joyent/sdc-imgapi-cli.git
 
 # Development
 
-Typically sdc-imgapi-cli development on a local SDC instance is done by:
+Typically sdc-imgapi-cli development on a local Triton COAL instance is done by:
 
-- making edits to a clone of sdc-imgapi-cli.git on a Mac (likely Linux too, but
-  that's untested) or a SmartOS development zone,
+- making edits to a clone of sdc-imgapi-cli.git on your dev machine (e.g.
+  a Mac, Linux, or a SmartOS dev zone):
 
-        git clone git@github.com:joyent/sdc-imgapi-cli.git
+        git clone https://github.com/joyent/sdc-imgapi-cli.git
         cd sdc-imgapi-cli
         git submodule update --init   # not necessary first time
         vi
@@ -54,12 +60,13 @@ Typically sdc-imgapi-cli development on a local SDC instance is done by:
         make all
         make check
 
-- syncing changes to a running SDC (typically a COAL running locally in VMWare)
-  via:
+- syncing changes to your running Triton DC (typically a COAL running locally in
+  VMWare) via:
+
         ./tools/rsync-to coal
 
-- then testing changes in that SDC (e.g. COAL) by using the sdc-imgadm tool. For
-  example, if changes are made to the `list` command then they can immediately
-  be observed by running the following command in the SDC headnode:
+- then testing changes in that Triton DC (e.g. COAL) by using the sdc-imgadm
+  tool. For example, if changes are made to the `list` command then they can
+  immediately be observed by running the following command in the SDC headnode:
 
-  		sdc-imgadm list
+        sdc-imgadm list
diff --git a/TODO.txt b/TODO.txt
deleted file mode 100644
index ac394d1..0000000
--- a/TODO.txt
+++ /dev/null
@@ -1,4 +0,0 @@
-- cli getfile     # [mostly, 'ext' support remains] GetImageFile
-- man page
-- missing IMGAPI endpoints: UpdateImage (cli update), etc.
-- bash completion
diff --git a/bin/imgapi-cli b/bin/imgapi-cli
index f084ce7..1430719 100755
--- a/bin/imgapi-cli
+++ b/bin/imgapi-cli
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,9 @@
  */
 
 var format = require('util').format;
+
 var CLI = require('../lib/cli');
+var common = require('../lib/common');
 
 
 //---- globals
@@ -61,11 +63,12 @@ function main(argv) {
         connectTimeout: 10000
     });
     cli.main(argv, function (err, verbose) {
+        var code = 0;
         if (err) {
             logerror(err, verbose);
-            process.exit(err.exitStatus || 1);
+            code = err.exitStatus || 1;
         }
-        process.exit(0);
+        common.softProcessExit(code);
     });
 }
 
diff --git a/bin/joyent-imgadm b/bin/joyent-imgadm
index 7dee488..a0be775 100755
--- a/bin/joyent-imgadm
+++ b/bin/joyent-imgadm
@@ -11,11 +11,13 @@
 
 /*
  * CLI for working with the central Joyent Images API:
- *      https://images.joyent.com.
+ *      https://images.joyent.com
  */
 
 var format = require('util').format;
+
 var CLI = require('../lib/cli');
+var common = require('../lib/common');
 
 
 //---- globals
@@ -72,11 +74,12 @@ function main(argv) {
         connectTimeout: 10000
     });
     cli.main(argv, function (err, verbose) {
+        var code = 0;
         if (err) {
             logerror(err, verbose);
-            process.exit(err.exitStatus || 1);
+            code = err.exitStatus || 1;
         }
-        process.exit(0);
+        common.softProcessExit(code);
     });
 }
 
diff --git a/bin/sdc-imgadm b/bin/sdc-imgadm
index 34e6850..0a357e7 100755
--- a/bin/sdc-imgadm
+++ b/bin/sdc-imgadm
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,9 @@
 
 var format = require('util').format;
 var execFile = require('child_process').execFile;
+
 var CLI = require('../lib/cli');
+var common = require('../lib/common');
 
 
 //---- globals
@@ -62,11 +64,12 @@ function main(argv) {
         connectTimeout: 4000
     });
     cli.main(argv, function (err, verbose) {
+        var code = 0;
         if (err) {
             logerror(err, verbose);
-            process.exit(err.exitStatus || 1);
+            code = err.exitStatus || 1;
         }
-        process.exit(0);
+        common.softProcessExit(code);
     });
 }
 
diff --git a/bin/updates-imgadm b/bin/updates-imgadm
index ff21077..6e2783a 100755
--- a/bin/updates-imgadm
+++ b/bin/updates-imgadm
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
 /*
@@ -19,7 +19,9 @@
  */
 
 var format = require('util').format;
+
 var CLI = require('../lib/cli');
+var common = require('../lib/common');
 
 
 //---- globals
@@ -77,11 +79,12 @@ function main(argv) {
         connectTimeout: 10000
     });
     cli.main(argv, function (err, verbose) {
+        var code = 0;
         if (err) {
             logerror(err, verbose);
-            process.exit(err.exitStatus || 1);
+            code = err.exitStatus || 1;
         }
-        process.exit(0);
+        common.softProcessExit(code);
     });
 }
 
diff --git a/lib/common.js b/lib/common.js
index d154893..344ff8b 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -84,10 +84,41 @@ function objCopy(obj) {
 }
 
 
+/*
+ * Set the process exit code, only using `process.exit` if necessary.
+ *
+ * We'd like to NOT use `process.exit` because node then doesn't in
+ * general allow std handles to flush. For some node versions it
+ * *will* flush if stdout is a TTY. However, you are then screwed
+ * when piping output to anything. IOW, that is no help.
+ *
+ * In node 0.12, `process.exitCode` provided a way to set the exit
+ * code without the hard immediate `process.exit()`.
+ *
+ * Note: A side-effect of avoiding `process.exit()` is that this process will
+ * hang if there are active node handles. Arguably that means this app has
+ * other bugs to deal with.
+ */
+function softProcessExit(code) {
+    var supportsProcessExitCode = true;
+    var nodeVer = process.versions.node.split('.').map(Number);
+    if (nodeVer[0] === 0 && nodeVer[1] <= 10) {
+        supportsProcessExitCode = false;
+    }
+
+    if (supportsProcessExitCode) {
+        process.exitCode = code;
+    } else if (code !== 0) {
+        process.exit(code);
+    }
+}
+
+
 //---- exports
 
 module.exports = {
     getVersion: getVersion,
     getPassword: getPassword,
-    objCopy: objCopy
+    objCopy: objCopy,
+    softProcessExit: softProcessExit
 };
diff --git a/package.json b/package.json
index ea71035..cb972e4 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "imgapi-cli",
   "description": "a CLI for an Triton's IMGAPI (https://images.joyent.com/docs/)",
-  "version": "2.2.2",
+  "version": "2.2.3",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

