commit 339139ff623cae3f07efb1308ce4eaff9578975a (refs/changes/99/199/2)
Author: dboldyrev <Arc3111@gmail.com>
Date:   2016-08-03T20:34:05+03:00 (3 years, 2 months ago)
    
    ADMINUI-2324 AdminUI Needs to provide a Warning when enabling/disabling Global FW Rules

diff --git a/www/js/components/pages/user/firewall.jsx b/www/js/components/pages/user/firewall.jsx
index aec2c07d..f1b5ce1d 100644
--- a/www/js/components/pages/user/firewall.jsx
+++ b/www/js/components/pages/user/firewall.jsx
@@ -27,7 +27,6 @@ var UserFirewall = React.createClass({
     },
     componentWillMount: function() {
         this.fwrulesList = new FWRulesList({
-            app: adminui,
             user: this.props.user
         });
 
diff --git a/www/js/components/pages/vm/fwrules-list.js b/www/js/components/pages/vm/fwrules-list.js
index 21771ecc..46199280 100644
--- a/www/js/components/pages/vm/fwrules-list.js
+++ b/www/js/components/pages/vm/fwrules-list.js
@@ -5,13 +5,42 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var Backbone = require('backbone');
 var $ = require('jquery');
 var FWRules = require('../../../models/fwrules');
 var _ = require('underscore');
+var adminui = require('../../../adminui');
+
+var firewallWarning = Backbone.Marionette.ItemView.extend({
+    template: require('./global-rule-warning.hbs'),
+    id: 'global-rule-warning',
+    attributes: {
+        'class': 'modal'
+    },
+    events: {
+        'click button[type=submit]': 'onSubmit'
+    },
+    
+    initialize: function (options) {
+        this.action = options.action;
+        this.onSubmit = options.onSubmit;
+    },
+
+    serializeData: function () {
+        return {
+            'action': this.action,
+            'titleAction': this.action[0].toUpperCase() + this.action.substr(1)
+        };
+    },
+    
+    onRender: function () {
+        this.$el.modal().on('hidden', this.remove.bind(this));
+        this.$el.modal('show');
+    }
+});
 
 var FWRulesListItem = Backbone.Marionette.ItemView.extend({
     tagName: 'li',
@@ -22,20 +51,37 @@ var FWRulesListItem = Backbone.Marionette.ItemView.extend({
         'click .disable-rule': 'onDisableRule',
         'click .delete-rule': 'onDeleteRule'
     },
-    onEnableRule: function() {
-        this.trigger('enable:rule');
+    
+    globalRuleWarning: function (action) {
+        if (this.model.attributes.global) {
+            var self = this;
+            return new firewallWarning({
+                action: action,
+                onSubmit: function () {
+                    self.trigger(action + ':rule');
+                }
+            }).render();
+        }
+        this.trigger(action + ':rule');
+    },
+
+    onEnableRule: function () {
+        this.globalRuleWarning('enable');
     },
-    onDisableRule: function() {
-        this.trigger('disable:rule');
+    
+    onDisableRule: function () {
+        this.globalRuleWarning('disable');
     },
-    onDeleteRule: function() {
+    
+    onDeleteRule: function () {
         this.trigger('delete:rule');
     },
-    onEditRule: function() {
+
+    onEditRule: function () {
         this.trigger('edit:rule');
     },
 
-    serializeData: function() {
+    serializeData: function () {
         var rule = this.model.tokenizeRule();
         var vars = this.model.toJSON();
 
@@ -58,7 +104,7 @@ var FWRulesList = require('../../../views/collection').extend({
 
     itemView: FWRulesListItem,
 
-    itemViewOptions: function() {
+    itemViewOptions: function () {
         return {
             emptyViewModel: this.collection
         };
@@ -74,57 +120,54 @@ var FWRulesList = require('../../../views/collection').extend({
      * @param  {Object} options.vm VM object to scope fw rules
      * @param  {string} options.user User UUID to scope fw rules
      */
-    initialize: function(options) {
-        var app = this.app = options.app;
+    initialize: function (options) {
         if (options.vm) {
-            this.collection = new FWRules(null, {params: { vm_uuid: options.vm.get('uuid') }});
+            this.collection = new FWRules(null, {params: {vm_uuid: options.vm.get('uuid')}});
         } else if (options.user) {
-            this.collection = new FWRules(null, {params: { owner_uuid: options.user }});
+            this.collection = new FWRules(null, {params: {owner_uuid: options.user}});
         } else {
             this.collection = new FWRules();
         }
 
-        this.on('itemview:disable:rule', function(iv) {
-            iv.model.on('sync', function() {
-                app.vent.trigger('notification', {
-                    level: 'success',
-                    message: "Firewall rule disabled successfully."
-                });
-                this.collection.fetch({reset: true});
-            }, this);
-            iv.model.set({enabled: false});
-            iv.model.save();
-        }, this);
-
-        this.on('itemview:enable:rule', function(iv) {
-            iv.model.on('sync', function() {
-                app.vent.trigger('notification', {
-                    level: 'success',
-                    message: "Firewall rule enabled successfully."
-                });
-                this.collection.fetch({reset: true});
-            }, this);
-            iv.model.set({enabled: true});
-            iv.model.save();
-        }, this);
+        this.on('itemview:disable:rule', this.actionHandler('disable'), this);
+        this.on('itemview:enable:rule', this.actionHandler('enable'), this);
+        this.on('itemview:delete:rule', this.actionHandler('delete'), this);
+    },
 
+    actionHandler: function (action) {
         var self = this;
-        this.on('itemview:delete:rule', function(iv) {
-            $.delete_(iv.model.url(), function(data) {
-                app.vent.trigger('notification', {
-                    level: 'success',
-                    message: "Firewall rule deleted successfully."
-                });
-                self.collection.fetch({reset: true});
+
+        var callback = function () {
+            adminui.vent.trigger('notification', {
+                level: 'success',
+                message: 'Firewall rule ' + action + 'd successfully.'
             });
-        }, this);
+            self.collection.fetch({reset: true});
+        };
+
+        return function (rule) {
+            rule.model.on('error', function (model, res) {
+                adminui.vent.trigger('notification', {
+                    level: 'error',
+                    message: 'Failed to ' + action + ' rule: ' + res.statusText
+                });
+            }, this);
+            
+            if (action === 'delete') {
+                $.delete_(rule.model.url(), callback);
+                return;
+            }
+            rule.model.on('sync', callback, this);
+            rule.model.set({enabled: action === 'enable'});
+            rule.model.save();
+        }
     },
 
-    refresh: function() {
+    refresh: function () {
         this.collection.fetch({reset: true});
     },
 
-    onShow: function() {
+    onShow: function () {
         this.collection.fetch();
     }
 });
diff --git a/www/js/components/pages/vm/global-rule-warning.hbs b/www/js/components/pages/vm/global-rule-warning.hbs
new file mode 100644
index 00000000..5c72aaa0
--- /dev/null
+++ b/www/js/components/pages/vm/global-rule-warning.hbs
@@ -0,0 +1,28 @@
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright (c) 2016, Joyent, Inc.
+-->
+
+<div class="modal-dialog">
+    <div class="modal-content">
+        <div class="modal-header">
+            <h3 class="modal-title">Warning: {{titleAction}} global firewall rule</h3>
+        </div>
+        <div class="modal-body">
+            <p class="alert alert-warning">
+                You are attempting to {{action}} a Global firewall rule.
+                This action will immediately affect ALL VM's with firewall enabled in this data center.
+                Are you sure you want to do this?
+            </p>
+        </div>
+        <div class="modal-footer">
+            <button class="btn" data-dismiss="modal">No</button>
+            <button class="btn btn-danger" data-dismiss="modal" type="submit">Yes</button>
+        </div>
+    </div>
+</div>
diff --git a/www/js/components/pages/vm/index.jsx b/www/js/components/pages/vm/index.jsx
index b62c9516..4da6618d 100644
--- a/www/js/components/pages/vm/index.jsx
+++ b/www/js/components/pages/vm/index.jsx
@@ -66,7 +66,6 @@ var VMPage = React.createClass({
     },
     componentDidMount: function () {
         this.fwrulesList = new FWRulesList({
-            app: this.props.adminui,
             vm: new VMModel({uuid: this.props.vmUuid})
         });
         this.fwrulesList.on('itemview:edit:rule', function (iv) {
