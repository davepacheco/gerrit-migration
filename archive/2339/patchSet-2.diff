From 214b4fe7beb1b30c5b01a5c3e8688755aa81098d Mon Sep 17 00:00:00 2001
From: Marsell Kukuljevic <marsell@joyent.com>
Date: Tue, 8 Aug 2017 00:56:59 +1200
Subject: [PATCH] ADMINUI-2381: Increase linting/styling coverage

---
 Makefile                                       |  9 +++++----
 lib/api/page-vm.js                             |  2 +-
 lib/auth.js                                    |  7 +++++--
 lib/images.js                                  |  7 ++++---
 lib/networks.js                                |  4 +++-
 lib/packages.js                                |  6 ++++--
 lib/servers.js                                 | 10 +++++++---
 lib/users.js                                   | 18 +++++++++++++-----
 lib/vms.js                                     |  6 ++++--
 tools/jsl.node.conf                            |  5 +++--
 tools/jsl.web.conf                             | 14 ++++++++++----
 www/js/adminui.js                              |  3 ++-
 .../components/pages/user/limits/constants.js  |  2 +-
 www/js/components/pages/vm/fwrules-list.js     |  2 +-
 www/js/models/addresses.js                     |  2 +-
 www/js/models/fabrics-vlan-network.js          |  1 +
 www/js/models/fabrics-vlan.js                  |  1 +
 www/js/models/fabrics-vlans.js                 |  2 +-
 www/js/models/model.js                         |  2 +-
 www/js/models/network.js                       |  2 +-
 www/js/models/platforms.js                     |  2 ++
 www/js/models/probe-group.js                   |  4 +++-
 www/js/models/probe-groups.js                  |  3 ++-
 www/js/models/probe.js                         |  3 +++
 www/js/models/server.js                        |  2 +-
 www/js/models/service.js                       |  3 ++-
 www/js/models/user.js                          |  2 +-
 www/js/router.js                               |  2 +-
 www/js/views/{fabrics.js => fabrics.jsx}       |  1 +
 .../{job-progress.js => job-progress.jsx}      |  2 ++
 www/js/views/{job.js => job.jsx}               |  2 +-
 www/js/views/jobs-list.js                      |  2 +-
 www/js/views/network-form.js                   |  9 ++++-----
 .../views/{nictag-form.js => nictag-form.jsx}  |  0
 www/js/views/{nictags.js => nictags.jsx}       |  1 +
 www/js/views/package.js                        |  1 -
 www/js/views/packages.js                       | 10 ++++++----
 www/js/views/provision-vm.js                   |  8 ++++----
 www/js/views/server-boot-options.js            |  2 +-
 www/js/views/server.js                         |  2 +-
 www/js/views/servers.js                        |  2 +-
 www/js/views/tags-list.js                      | 16 ++++++++--------
 www/js/views/traits-editor.js                  |  1 +
 www/js/views/typeahead-image.js                | 16 +---------------
 www/js/views/user-form.js                      |  5 +++--
 www/js/views/users.js                          |  2 +-
 46 files changed, 121 insertions(+), 87 deletions(-)
 rename www/js/views/{fabrics.js => fabrics.jsx} (99%)
 rename www/js/views/{job-progress.js => job-progress.jsx} (99%)
 rename www/js/views/{job.js => job.jsx} (99%)
 rename www/js/views/{nictag-form.js => nictag-form.jsx} (100%)
 rename www/js/views/{nictags.js => nictags.jsx} (99%)

diff --git a/Makefile b/Makefile
index 09a388f7..e5dacdfa 100644
--- a/Makefile
+++ b/Makefile
@@ -26,11 +26,12 @@ NAME		:= adminui
 #
 # Files
 #
-JS_FILES	:= $(shell ls *.js) $(shell find lib tools -name '*.js')
 JSL_CONF_NODE	 = tools/jsl.node.conf
-JSL_FILES_NODE   = $(JS_FILES)
-JSSTYLE_FILES	 = $(JS_FILES)
-JSSTYLE_FLAGS    = -o "indent=2,doxygen,unparenthesized-return=0,line-length=120"
+JSL_CONF_WEB	 = tools/jsl.web.conf
+JSL_FILES_NODE	 = $(shell ls *.js) $(shell find lib tools -name '*.js')
+JSL_FILES_WEB	 = $(shell find www/js -name '*.js' | grep -v www/js/lib)
+JSSTYLE_FILES	 = $(JSL_FILES_NODE)
+JSSTYLE_FLAGS	 = -o "indent=2,doxygen,unparenthesized-return=0,line-length=120"
 
 REPO_MODULES	 =
 SMF_MANIFESTS_IN = smf/manifests/adminui.xml.in
diff --git a/lib/api/page-vm.js b/lib/api/page-vm.js
index 9ee2decd..60b4de4b 100644
--- a/lib/api/page-vm.js
+++ b/lib/api/page-vm.js
@@ -25,7 +25,7 @@ function getPageVmData(req, res, next) {
             imageUuid = vm.disks && vm.disks.length && vm.disks[0].image_uuid ? vm.disks[0].image_uuid : '';
         }
 
-        async.parallel([
+        return async.parallel([
             function getPackage(cb) {
                 req.sdc[req.dc].papi.get(vm.billing_id, {}, function getPackageCb(getImageErr, pkg) {
                     data.package = pkg;
diff --git a/lib/auth.js b/lib/auth.js
index 6ba9c9ae..0425b3a9 100644
--- a/lib/auth.js
+++ b/lib/auth.js
@@ -61,11 +61,14 @@ Auth.requireRole = function requireRole() {
         req.log.debug('requireRole', roles);
         req.log.info(req.session.data, 'session data');
         var userRoles = req.session.data.roles;
-        roles.forEach(function (r) {
+
+        for (var i = 0; i < roles.length; i++) {
+            var r = roles[i];
             if (userRoles.indexOf(r) !== -1) {
                 return next();
             }
-        });
+        }
+
         return next(new restify.ForbiddenError('No Permission'));
     };
 };
diff --git a/lib/images.js b/lib/images.js
index c2e6c0e1..cdd796c6 100644
--- a/lib/images.js
+++ b/lib/images.js
@@ -94,7 +94,8 @@ function listImages(req, res, next) {
                     filter[tagKey === 'billing_tag' ? tagKey : 'tag.' + tagKey] = tagValue;
                 } else {
                     res.send([]);
-                    return next();
+                    next();
+                    return;
                 }
             } else {
                 filter.name = '~' + queryParams;
@@ -103,7 +104,7 @@ function listImages(req, res, next) {
         }
     }
 
-    var done = function (err, result) {
+    function done(err, result) {
         if (err) {
             if (err.name === 'ResourceNotFoundError') {
                 res.send([]);
@@ -114,7 +115,7 @@ function listImages(req, res, next) {
         }
         res.send(Array.isArray(result) ? result : [result]);
         return next();
-    };
+    }
 
     if (uuid) {
         client.getImage(uuid, done);
diff --git a/lib/networks.js b/lib/networks.js
index 1d239cda..fd1e7843 100644
--- a/lib/networks.js
+++ b/lib/networks.js
@@ -280,8 +280,10 @@ module.exports.listIPs = function (req, res, next) {
         req.sdc[req.dc].napi.listIPs(networkid, params, options, function (err, list) {
             if (err) {
                 req.log.error(err);
-                return next(err);
+                next(err);
+                return;
             }
+
             ips = ips ? ips.concat(list) : list;
             if (list.length === params.limit) {
                 params.offset += params.limit;
diff --git a/lib/packages.js b/lib/packages.js
index e3abb8dc..66da16ca 100644
--- a/lib/packages.js
+++ b/lib/packages.js
@@ -73,7 +73,8 @@ module.exports.update = function (req, res, next) {
     pkgclient.get(req.params.uuid, {headers: {'x-request-id': req.getId()}}, function (err, pkg) {
         if (err) {
             req.log.fatal(err, 'Error retrieving package info', req.params.uuid);
-            return next(err);
+            next(err);
+            return;
         }
 
         var changes = req.body;
@@ -95,7 +96,8 @@ module.exports.update = function (req, res, next) {
         pkgclient.update(pkg.uuid, changes, {headers: {'x-request-id': req.getId()}}, function (updateErr) {
             if (updateErr) {
                 req.log.fatal(updateErr, 'Error updating package', pkg.uuid, changes);
-                return next(updateErr);
+                next(updateErr);
+                return;
             }
             done();
         });
diff --git a/lib/servers.js b/lib/servers.js
index 20d24176..8f0948d2 100644
--- a/lib/servers.js
+++ b/lib/servers.js
@@ -19,8 +19,10 @@ var querystring = require('querystring');
 function getSetupStatus(req, server, callback) {
     server.setup_state = server.setup ? 'succeeded' : 'running';
     if (server.setup) {
-        return callback(null, server);
+        callback(null, server);
+        return;
     }
+
     req.sdc[req.dc].workflow.get({
         path: sprintf('/jobs?%s', querystring.stringify({
             server_uuid: server.uuid,
@@ -60,7 +62,8 @@ module.exports.get = function getServer(req, res, next) {
         function listServersCallback(err, obj, _req, _res) {
         if (err) {
             req.log.fatal(err, 'CNAPI Error retrieving server');
-            return next(err, _res.httpCode);
+            next(err, _res.httpCode);
+            return;
         }
 
         getSetupStatus(req, obj, function (error, server) {
@@ -167,7 +170,8 @@ module.exports.list = function listServers(req, res, next) {
         function (err, servers) {
         if (err) {
             req.log.error(err);
-            return next(err);
+            next(err);
+            return;
         }
 
         Object.keys(query).forEach(function (key) {
diff --git a/lib/users.js b/lib/users.js
index 161756a6..949bdf80 100644
--- a/lib/users.js
+++ b/lib/users.js
@@ -990,23 +990,28 @@ function _translateRole(r) {
 function listRoles(req, res, next) {
     req.ufds.listRoles(req.params.uuid, function (err, result) {
         if (err) {
-            return next(err);
+            next(err);
+            return;
         }
+
         var roles = [];
         var membersCache = {};
         async.each(result.map(_translateRole), function (role, callback) {
             var members = [];
+
             async.each(role.members, function (member, cb) {
                 var memberExists = true;
                 var done = function () {
                     if (memberExists) {
                         members.push(member);
                     }
-                    return cb();
+                    cb();
+                    return;
                 };
                 if (membersCache.hasOwnProperty(member)) {
                     memberExists = membersCache[member];
-                    return done();
+                    done();
+                    return;
                 }
                 /* JSSTYLED */
                 var uuids = member.match(/uuid=([a-z0-9-]+), uuid=([a-z0-9-]+)/);
@@ -1023,8 +1028,10 @@ function listRoles(req, res, next) {
                 });
             }, function (error) {
                 if (error) {
-                    return callback(error);
+                    callback(error);
+                    return;
                 }
+
                 role.members = members;
                 roles.push(role);
                 callback();
@@ -1136,7 +1143,8 @@ function deleteUser(req, res, next) {
     var account = req.params.account;
 
     if (!account) {
-        return _deleteUser();
+        _deleteUser();
+        return;
     }
 
     _listKeys()
diff --git a/lib/vms.js b/lib/vms.js
index 15182bfb..76ec6fbf 100644
--- a/lib/vms.js
+++ b/lib/vms.js
@@ -276,12 +276,13 @@ function get(req, res, next) {
         try {
             params.sync = utils.boolFromString(req.params.sync, false, 'sync');
         } catch (boolErr) {
-            return next(new errors.InvalidParameterError(boolErr,
+            next(new errors.InvalidParameterError(boolErr,
                 boolErr.message, [ {
                     field: 'sync',
                     code: 'Invalid',
                     message: boolErr.message
                 } ]));
+            return;
         }
     }
 
@@ -485,7 +486,8 @@ function groupedByCustomer(req, res, next) {
                                 uuid: uuid
                             };
                         } else {
-                            return next(err);
+                            next(err);
+                            return;
                         }
                     }
                     if (owner.cn !== NOT_AVAILABLE) {
diff --git a/tools/jsl.node.conf b/tools/jsl.node.conf
index 0b8e8ea4..79f6999b 100644
--- a/tools/jsl.node.conf
+++ b/tools/jsl.node.conf
@@ -12,7 +12,7 @@
 +ambiguous_else_stmt          # the else statement could be matched with one of multiple if statements (use curly braces to indicate intent
 +ambiguous_nested_stmt        # block statements containing block statements should use curly braces to resolve ambiguity
 +ambiguous_newline            # unexpected end of line; it is ambiguous whether these lines are part of the same statement
--anon_no_return_value         # anonymous function does not always return value
++anon_no_return_value         # anonymous function does not always return value
 +assign_to_function_call      # assignment to a function call
 -block_without_braces         # block statement without curly braces
 +comma_separated_stmts        # multiple statements separated by commas (use semicolons?)
@@ -41,7 +41,7 @@
 +missing_semicolon_for_lambda # missing semicolon for lambda assignment
 +multiple_plus_minus          # unknown order of operations for successive plus (e.g. x+++y) or minus (e.g. x---y) signs
 +nested_comment               # nested comment
--no_return_value              # function {name} does not always return a value
++no_return_value              # function {name} does not always return a value
 +octal_number                 # leading zeros make an octal number
 +parseint_missing_radix       # parseInt missing radix parameter
 +partial_option_explicit      # the "option explicit" control comment, if used, must be in the first script tag
@@ -119,6 +119,7 @@
 +define process
 +define require
 +define setInterval
++define setImmediate
 +define setTimeout
 +define Buffer
 +define JSON
diff --git a/tools/jsl.web.conf b/tools/jsl.web.conf
index b135000d..ac8a6e28 100644
--- a/tools/jsl.web.conf
+++ b/tools/jsl.web.conf
@@ -51,17 +51,17 @@
 +trailing_decimal_point       # trailing decimal point may indicate a number or an object member
 +undeclared_identifier        # undeclared identifier: {name}
 +unreachable_code             # unreachable code
-+unreferenced_argument        # argument declared but never referenced: {name}
-+unreferenced_function        # function is declared but never referenced: {name}
+-unreferenced_argument        # argument declared but never referenced: {name}
+-unreferenced_function        # function is declared but never referenced: {name}
 +unreferenced_variable        # variable is declared but never referenced: {name}
 +unsupported_version          # JavaScript {version} is not supported
 +use_of_label                 # use of label
 +useless_assign               # useless assignment
 +useless_comparison           # useless comparison; comparing identical expressions
-+useless_quotes               # the quotation marks are unnecessary
+-useless_quotes               # the quotation marks are unnecessary
 +useless_void                 # use of the void type may be unnecessary (void is always undefined)
 +var_hides_arg                # variable {name} hides argument
-+want_assign_or_call          # expected an assignment or function call
+-want_assign_or_call          # expected an assignment or function call
 +with_statement               # with statement hides undeclared variables; use temporary variable instead
 
 
@@ -118,7 +118,13 @@
 +define clearInterval
 +define clearTimeout
 +define confirm
++define console
 +define document
++define model
++define module
++define location
++define process  # added by browserify
++define require
 +define setInterval
 +define setTimeout
 +define window
diff --git a/www/js/adminui.js b/www/js/adminui.js
index c67ce02b..cfce6da0 100644
--- a/www/js/adminui.js
+++ b/www/js/adminui.js
@@ -94,6 +94,7 @@ Handlebars.registerHelper('ifCond', function (v1, operator, v2, options) {
             break;
         default:
             condition = false;
+            break;
     }
     return condition ? options.fn(this) : options.inverse(this);
 });
@@ -153,7 +154,7 @@ jQuery.extend({
 var adminui = window.$a = module.exports = new Backbone.Marionette.Application();
 adminui.version = require('../../package.json').version;
 
-adminui.addInitializer(function(options) {
+adminui.addInitializer(function (options) {
     var Router = require('./router');
     this.pinger = new Pinger();
     this.state = new Backbone.Model();
diff --git a/www/js/components/pages/user/limits/constants.js b/www/js/components/pages/user/limits/constants.js
index 6377243b..c54f7194 100644
--- a/www/js/components/pages/user/limits/constants.js
+++ b/www/js/components/pages/user/limits/constants.js
@@ -16,7 +16,7 @@ module.exports.OPERATING_SYSTEMS = [
     "windows",
     "bsd",
     "illumos",
-    "other",
+    "other"
 ];
 
 module.exports.DATACENTERS = [
diff --git a/www/js/components/pages/vm/fwrules-list.js b/www/js/components/pages/vm/fwrules-list.js
index 3521f7f4..79346e70 100644
--- a/www/js/components/pages/vm/fwrules-list.js
+++ b/www/js/components/pages/vm/fwrules-list.js
@@ -131,7 +131,7 @@ var FWRulesList = require('../../../views/collection').extend({
             rule.model.on('sync', callback, this);
             rule.model.set({enabled: action === 'enable'});
             rule.model.save();
-        }
+        };
     },
     refresh: function () {
         this.collection.fetch({reset: true});
diff --git a/www/js/models/addresses.js b/www/js/models/addresses.js
index 620dd43c..4af937b7 100644
--- a/www/js/models/addresses.js
+++ b/www/js/models/addresses.js
@@ -16,7 +16,7 @@ module.exports = PageableCollection.extend({
     model: Backbone.Model.extend({
         idAttribute: 'ip',
         urlRoot: function () {
-            return '/api/networks/' + this.get('network_uuid') + '/ips'
+            return '/api/networks/' + this.get('network_uuid') + '/ips';
         }
     }),
     url: function () {
diff --git a/www/js/models/fabrics-vlan-network.js b/www/js/models/fabrics-vlan-network.js
index 27d558b3..4a44b8de 100644
--- a/www/js/models/fabrics-vlan-network.js
+++ b/www/js/models/fabrics-vlan-network.js
@@ -10,6 +10,7 @@
 
 var Backbone = require('backbone');
 var Model = require('./model');
+var _ = require('underscore');
 
 module.exports = Model.extend({
     idAttribute: 'uuid',
diff --git a/www/js/models/fabrics-vlan.js b/www/js/models/fabrics-vlan.js
index 61f61dfa..b46177c7 100644
--- a/www/js/models/fabrics-vlan.js
+++ b/www/js/models/fabrics-vlan.js
@@ -10,6 +10,7 @@
 
 var Backbone = require('backbone');
 var Model = require('./model');
+var _ = require('underscore');
 
 module.exports = Model.extend({
     idAttribute: 'vlan_id',
diff --git a/www/js/models/fabrics-vlans.js b/www/js/models/fabrics-vlans.js
index b00fab6e..ae50fe6c 100644
--- a/www/js/models/fabrics-vlans.js
+++ b/www/js/models/fabrics-vlans.js
@@ -17,7 +17,7 @@ var FabricsVlans = Collection.extend({
         if (owner_uuid) {
             return '/api/fabrics/' + owner_uuid + '/vlans';
         }
-        return '/api/fabrics'
+        return '/api/fabrics';
     }
 });
 
diff --git a/www/js/models/model.js b/www/js/models/model.js
index 45f9a049..83ed43c0 100644
--- a/www/js/models/model.js
+++ b/www/js/models/model.js
@@ -18,7 +18,7 @@ var Model = Backbone.Model.extend({
         options.error = function(xhr, err, statusText) {
             var contentType = xhr.getResponseHeader('content-type');
             if (contentType === 'application/json') {
-                xhr.responseData = jQuery.parseJSON(xhr.responseText);
+                xhr.responseData = JSON.parse(xhr.responseText);
             }
             model.trigger('error', model, xhr, options);
         };
diff --git a/www/js/models/network.js b/www/js/models/network.js
index 9e7e9574..83176f6d 100644
--- a/www/js/models/network.js
+++ b/www/js/models/network.js
@@ -18,5 +18,5 @@ module.exports = Model.extend({
 
     update: function(attrs, cb) {
         api.put(this.url()).send(attrs).end(cb);
-    },
+    }
 });
diff --git a/www/js/models/platforms.js b/www/js/models/platforms.js
index ff2d9c02..aa6856bb 100644
--- a/www/js/models/platforms.js
+++ b/www/js/models/platforms.js
@@ -9,6 +9,8 @@
  */
 
 var Backbone = require('backbone');
+var _ = require('underscore');
+
 var Platforms = Backbone.Collection.extend({
     url: '/api/platforms',
     parse: function (res) {
diff --git a/www/js/models/probe-group.js b/www/js/models/probe-group.js
index 7e2753a0..847ada19 100644
--- a/www/js/models/probe-group.js
+++ b/www/js/models/probe-group.js
@@ -9,6 +9,8 @@
  */
 
 var Backbone = require('backbone');
+var _ = require('underscore');
+
 var ProbeGroup = Backbone.Model.extend({
     idAttribute: 'uuid',
     url: function() {
@@ -20,4 +22,4 @@ var ProbeGroup = Backbone.Model.extend({
     }
 });
 
-module.exports = ProbeGroup;
\ No newline at end of file
+module.exports = ProbeGroup;
diff --git a/www/js/models/probe-groups.js b/www/js/models/probe-groups.js
index 9ade9ba8..57b505ae 100644
--- a/www/js/models/probe-groups.js
+++ b/www/js/models/probe-groups.js
@@ -10,6 +10,7 @@
 
 var ProbeGroup = require('./probe-group');
 var Backbone = require('backbone');
+var _ = require('underscore');
 
 var ProbeGroups = Backbone.Collection.extend({
     model: ProbeGroup,
@@ -18,4 +19,4 @@ var ProbeGroups = Backbone.Collection.extend({
     }
 });
 
-module.exports = ProbeGroups;
\ No newline at end of file
+module.exports = ProbeGroups;
diff --git a/www/js/models/probe.js b/www/js/models/probe.js
index 0d303543..992f5591 100644
--- a/www/js/models/probe.js
+++ b/www/js/models/probe.js
@@ -9,6 +9,7 @@
  */
 
 var Backbone = require('backbone');
+var _ = require('underscore');
 
 
 var Probe = Backbone.Model.extend({
@@ -41,6 +42,8 @@ var Probe = Backbone.Model.extend({
         if (_.size(errors) > 0) {
             return errors;
         }
+
+        return null;
     }
 });
 
diff --git a/www/js/models/server.js b/www/js/models/server.js
index 46b02558..72136554 100644
--- a/www/js/models/server.js
+++ b/www/js/models/server.js
@@ -79,7 +79,7 @@ var Server = Model.extend({
         $.delete_(this.url(), {}, function (data) {
             cb();
         });
-    },
+    }
 });
 
 module.exports = Server;
diff --git a/www/js/models/service.js b/www/js/models/service.js
index 6ff7457d..0d9c9061 100644
--- a/www/js/models/service.js
+++ b/www/js/models/service.js
@@ -18,7 +18,8 @@ var Service = Model.extend({
         var req = api.post(this.url()).send(attrs);
         req.end(function (res) {
             if (res.ok) {
-                return cb(null, res.body);
+                cb(null, res.body);
+                return;
             }
             cb(res.body);
         });
diff --git a/www/js/models/user.js b/www/js/models/user.js
index 633b7357..372fc2bc 100644
--- a/www/js/models/user.js
+++ b/www/js/models/user.js
@@ -82,7 +82,7 @@ var User = module.exports = Model.extend({
 
         if (user.length === 0 || pass.length === 0) {
             this.trigger('error', 'Username and Password Required');
-            return false;
+            return;
         }
 
         var authData = {
diff --git a/www/js/router.js b/www/js/router.js
index d88defd0..ffd68c48 100644
--- a/www/js/router.js
+++ b/www/js/router.js
@@ -147,7 +147,7 @@ module.exports = Backbone.Marionette.AppRouter.extend({
                 $.ajax({
                     type: 'GET',
                     timeout: 15000,
-                    url: '/api/auth',
+                    url: '/api/auth'
                 }).fail(function (xhr, t, m) {
                     reject();
                     self.showSignin();
diff --git a/www/js/views/fabrics.js b/www/js/views/fabrics.jsx
similarity index 99%
rename from www/js/views/fabrics.js
rename to www/js/views/fabrics.jsx
index 3002a299..282e0b5b 100644
--- a/www/js/views/fabrics.js
+++ b/www/js/views/fabrics.jsx
@@ -10,6 +10,7 @@
 
 var adminui = require('adminui');
 
+var Backbone = require('backbone');
 var React = require('react');
 var FabricVlans = require('../models/fabrics-vlans');
 var $ = require('jquery');
diff --git a/www/js/views/job-progress.js b/www/js/views/job-progress.jsx
similarity index 99%
rename from www/js/views/job-progress.js
rename to www/js/views/job-progress.jsx
index 5a66ab2f..dd346965 100644
--- a/www/js/views/job-progress.js
+++ b/www/js/views/job-progress.jsx
@@ -63,6 +63,8 @@ var JobProgressSummary = React.createClass({
                                         </div>
                                     );
                                 }
+
+                                return '';
                             })()}
                         </li>);
                     })}
diff --git a/www/js/views/job.js b/www/js/views/job.jsx
similarity index 99%
rename from www/js/views/job.js
rename to www/js/views/job.jsx
index 6dd7ae23..221fff6f 100644
--- a/www/js/views/job.js
+++ b/www/js/views/job.jsx
@@ -69,7 +69,7 @@ var JobDetailsComponent = React.createClass({
 
                     <div className="duration"><i className="fa fa-clock-o"></i><div className="value">{task.duration}</div></div>
                 </li>
-            )
+            );
         });
 
         var jobStatus = (
diff --git a/www/js/views/jobs-list.js b/www/js/views/jobs-list.js
index 5042dd7c..2d92db9b 100644
--- a/www/js/views/jobs-list.js
+++ b/www/js/views/jobs-list.js
@@ -74,7 +74,7 @@ var JobsItemView = Backbone.Marionette.ItemView.extend({
 
 var JobsItemEmptyView = require('./empty').extend({
     emptyMessage: "No Jobs found with the selected criteria",
-    columns: 3,
+    columns: 3
 });
 
 var JobsList = Backbone.Marionette.CompositeView.extend({
diff --git a/www/js/views/network-form.js b/www/js/views/network-form.js
index 8b8add18..b1618f8f 100644
--- a/www/js/views/network-form.js
+++ b/www/js/views/network-form.js
@@ -148,9 +148,9 @@ var View = Backbone.Marionette.Layout.extend({
         }
 
         var routes = {};
-        _.each(data.routes, function(data) {
-            if (data.subnet.length && data.gateway.length) {
-                routes[data.subnet] = data.gateway;
+        _.each(data.routes, function(datum) {
+            if (datum.subnet.length && datum.gateway.length) {
+                routes[datum.subnet] = datum.gateway;
             }
         });
 
@@ -218,7 +218,7 @@ var View = Backbone.Marionette.Layout.extend({
             });
 
             this.model.update(params, function (err, res) {
-                var err = err || !res.ok && res.body.errors;
+                err = err || !res.ok && res.body.errors;
                 if (err) {
                     self.showError(err);
                     return;
@@ -235,7 +235,6 @@ var View = Backbone.Marionette.Layout.extend({
 
     showError: function (errors) {
         $('.form-group').removeClass('has-error');
-        var ul = $('<ul />');
         _(errors).each(function (error) {
             var $field = this.$('[name="' + error.field + '"]');
             $field.parents('.form-group').addClass('has-error').find('.text-danger').remove();
diff --git a/www/js/views/nictag-form.js b/www/js/views/nictag-form.jsx
similarity index 100%
rename from www/js/views/nictag-form.js
rename to www/js/views/nictag-form.jsx
diff --git a/www/js/views/nictags.js b/www/js/views/nictags.jsx
similarity index 99%
rename from www/js/views/nictags.js
rename to www/js/views/nictags.jsx
index 1671c791..df78bc32 100644
--- a/www/js/views/nictags.js
+++ b/www/js/views/nictags.jsx
@@ -12,6 +12,7 @@
 
 var adminui = require('adminui');
 
+var Backbone = require('backbone');
 var React = require('react');
 var NicTags = require('../models/nictags');
 var ErrorAlert = require('../components/error-alert');
diff --git a/www/js/views/package.js b/www/js/views/package.js
index c64a5b56..0cea3d25 100644
--- a/www/js/views/package.js
+++ b/www/js/views/package.js
@@ -26,7 +26,6 @@ var NetworkPoolsList = React.createFactory(require('../components/pages/networki
 var TraitsEditor = require('./traits-editor');
 var PackageTemplate = require('../tpl/package.hbs');
 
-var React = require('react');
 var NotesComponent = React.createFactory(require('../components/notes'));
 
 var Handlebars = require('handlebars');
diff --git a/www/js/views/packages.js b/www/js/views/packages.js
index e2cd1951..caf76183 100644
--- a/www/js/views/packages.js
+++ b/www/js/views/packages.js
@@ -218,7 +218,7 @@ var PackagesView = Backbone.Marionette.Layout.extend({
         var self = this;
         var getValue = function (name) {
             return $((name === 'active' ? 'select' : 'input') + '[name=' + name + ']').val();
-        }
+        };
 
         var data = {
             active: getValue('active'),
@@ -226,13 +226,15 @@ var PackagesView = Backbone.Marionette.Layout.extend({
             traits: getValue('traits'),
             group: getValue('group'),
             billing_id: getValue('billing_id')
-        }
+        };
+
         Object.keys(data).forEach(function (key) {
             var value = data[key];
             if (value && ((key === 'active' && value === 'true' || value === 'false') || key !== 'active')) {
-                return self.filterOptions[key] = value;
+                self.filterOptions[key] = value;
+            } else {
+                delete self.filterOptions[key];
             }
-            delete self.filterOptions[key];
         });
 
         var ram_val = this.$('input[name="ram-value"]').val();
diff --git a/www/js/views/provision-vm.js b/www/js/views/provision-vm.js
index b1441953..aea4bf18 100644
--- a/www/js/views/provision-vm.js
+++ b/www/js/views/provision-vm.js
@@ -173,7 +173,7 @@ var View = Backbone.Marionette.Layout.extend({
     removeNic: function (nic) {
         if (this.nicSelects.length === 1) {
             window.alert('Cannot Remove last Network Interface');
-            return false;
+            return;
         }
         var self = this;
         React.unmountComponentAtNode(nic.getDOMNode());
@@ -195,7 +195,7 @@ var View = Backbone.Marionette.Layout.extend({
             this.userPreview.close();
             this.removeAllNics();
             this.checkFields();
-            return;
+            return null;
         }
         if (this.selectedUser && this.selectedUser.id === user.id) {
             return this.userPreview.show(new UserPreview({model: user}));
@@ -231,6 +231,8 @@ var View = Backbone.Marionette.Layout.extend({
         this.sshKeys = new SSHKeys(null, {user: user});
         this.listenTo(this.sshKeys, 'sync', this.onFetchKeys);
         this.sshKeys.fetch();
+
+        return null;
     },
 
     onFetchKeys: function (collection) {
@@ -364,7 +366,6 @@ var View = Backbone.Marionette.Layout.extend({
 
         var values = this.extractFormValues();
         var valid;
-        var image_uuid;
 
         if (!values.owner_uuid ||
             !values.owner_uuid.length ||
@@ -386,7 +387,6 @@ var View = Backbone.Marionette.Layout.extend({
         if (!values.image_uuid && (!values.disks || !values.disks[0] || !values.disks[0].image_uuid)) {
             valid = valid && false;
         } else {
-            image_uuid = values['image_uuid'] || values['disks'][0]['image_uuid'];
             valid = valid && true;
         }
 
diff --git a/www/js/views/server-boot-options.js b/www/js/views/server-boot-options.js
index ea86c799..d32cf00c 100644
--- a/www/js/views/server-boot-options.js
+++ b/www/js/views/server-boot-options.js
@@ -55,7 +55,7 @@ module.exports = Backbone.Marionette.ItemView.extend({
     onInputKeyup: _.debounce(function () {
         var text = this.$('textarea').val();
         try {
-            var json = JSON.parse(text);
+            JSON.parse(text);
             this.$('.error').text();
             this.$('.error').hide();
             this.$('.save').prop('disabled', false);
diff --git a/www/js/views/server.js b/www/js/views/server.js
index fda156bf..6e3d5d97 100644
--- a/www/js/views/server.js
+++ b/www/js/views/server.js
@@ -63,7 +63,7 @@ var getInterfaces = function (sysInfo) {
         });
     });
     return result;
-}
+};
 
 var ServerView = Backbone.Marionette.Layout.extend({
     id: 'page-server',
diff --git a/www/js/views/servers.js b/www/js/views/servers.js
index eab7d8b4..c2654816 100644
--- a/www/js/views/servers.js
+++ b/www/js/views/servers.js
@@ -16,7 +16,7 @@ var app = require('adminui');
 var $ = require('jquery');
 var Servers = require('../models/servers');
 var ServerBootOptionsView = require('./server-boot-options');
-var utils = require('../lib/utils')
+var utils = require('../lib/utils');
 var NicTags = require('../models/nictags');
 
 var GLYPH_ICON_CLASS = 'glyphicon';
diff --git a/www/js/views/tags-list.js b/www/js/views/tags-list.js
index dd17838e..df6e9659 100644
--- a/www/js/views/tags-list.js
+++ b/www/js/views/tags-list.js
@@ -65,7 +65,7 @@ var EditingView = Backbone.Marionette.ItemView.extend({
         this.tag.name = this.$('input[name=name]').val();
         this.tag.value = this.$('input[name=value]').val();
         if ((!this.tag.name.length) || (!this.tag.value.length)) {
-            return false;
+            return;
         }
         this.trigger('save', this.tag);
         this.model.set({editing: false});
@@ -193,10 +193,10 @@ var TagsList = Backbone.Marionette.ItemView.extend({
             var tv = val[1];
             var view = new EditingView({ name: tn, value: tv });
             view.on('save', function(tag) {
-                var tags = this.getTags();
-                delete tags[tn];
-                tags[tag.name] = tag.value;
-                this.saveTags(tags);
+                var modifiedTags = this.getTags();
+                delete modifiedTags[tn];
+                modifiedTags[tag.name] = tag.value;
+                this.saveTags(modifiedTags);
             }, this);
 
             view.on('change:editing', this.onEditMode, this);
@@ -207,10 +207,10 @@ var TagsList = Backbone.Marionette.ItemView.extend({
                     return;
                 }
 
-                var tags = this.getTags();
-                delete tags[tag.name];
+                var modifiedTags = this.getTags();
+                delete modifiedTags[tag.name];
 
-                this.saveTags(tags).done(function() {
+                this.saveTags(modifiedTags).done(function() {
                     view.$el.fadeOut(200, function() {
                         view.remove();
                     });
diff --git a/www/js/views/traits-editor.js b/www/js/views/traits-editor.js
index 44a9714c..f7d2762b 100644
--- a/www/js/views/traits-editor.js
+++ b/www/js/views/traits-editor.js
@@ -43,6 +43,7 @@ var View = Backbone.Marionette.ItemView.extend({
         } catch (e) {
             this.$('.btn-primary').attr('disabled', 'disabled');
             this.showError('JSON Error: ' + e.message);
+            return null;
         }
     },
     onClickSave: function() {
diff --git a/www/js/views/typeahead-image.js b/www/js/views/typeahead-image.js
index ac054a7c..78ee5e83 100644
--- a/www/js/views/typeahead-image.js
+++ b/www/js/views/typeahead-image.js
@@ -10,6 +10,7 @@
 
 var Backbone = require('backbone');
 var Bloodhound = require('bloodhound');
+var app = require('adminui');
 
 var Image = require('../models/image');
 
@@ -125,21 +126,6 @@ var ImageTypeaheadView = Backbone.Marionette.View.extend({
         this.$el.parent().parent().find(".tt-loading").hide();
     },
     renderInput: function () {
-        var self = this;
-        var substringMatcher = function (strs, property) {
-            return function findMatches(q, cb) {
-                var matches = [];
-                var substrRegex = new RegExp(q, 'i');
-                strs.forEach(function (str) {
-                    if (substrRegex.test(property ? str[property] : str.toString())) {
-                        matches.push(str);
-                    }
-                });
-
-                cb(matches.sort(self.engine.sorter).slice(0, self.engine.limit));
-            };
-        };
-
         this.$el.typeahead({
             name: 'images',
             minLength: 3,
diff --git a/www/js/views/user-form.js b/www/js/views/user-form.js
index 63fa6c3d..b3d4d620 100644
--- a/www/js/views/user-form.js
+++ b/www/js/views/user-form.js
@@ -124,12 +124,13 @@ module.exports = Backbone.Marionette.ItemView.extend({
         validation.disableRequiredValidation = this.mode === 'edit';
         utils.validate(model, validation, function (err) {
             if (err) {
-                return self.showError(err);
+                self.showError(err);
+                return;
             }
 
             self.model.save(null, {
                 patch: true,
-                success: function (model, resp) {
+                success: function (_model, resp) {
                     adminui.vent.trigger('showcomponent', 'user', self.redirect || {user: self.model});
                     adminui.vent.trigger('notification', {
                         level: 'success',
diff --git a/www/js/views/users.js b/www/js/views/users.js
index 2cc9df53..2c8d7248 100644
--- a/www/js/views/users.js
+++ b/www/js/views/users.js
@@ -29,7 +29,7 @@ var UsersListItem = Backbone.Marionette.ItemView.extend({
     },
     events: {
         'click a.login-link': 'onClickLoginName',
-        'click a.account-link': 'onClickAccountName',
+        'click a.account-link': 'onClickAccountName'
     },
     onRender: function () {
         var container = this.$('.groups-container').get(0);
-- 
2.21.0

