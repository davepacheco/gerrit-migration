commit 603ffdbdb645c5dc632fe5b027d8e7b290589327 (refs/changes/46/1246/3)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2017-01-13T20:55:18+01:00 (2 years, 9 months ago)
    
    TOOLS-1631 'sdcadm experimental update SOME-AGENT' fails if there are no instances yet

diff --git a/lib/procedures/update-agent-v1.js b/lib/procedures/update-agent-v1.js
index 83aa868..a547353 100644
--- a/lib/procedures/update-agent-v1.js
+++ b/lib/procedures/update-agent-v1.js
@@ -177,6 +177,11 @@ UpdateAgentV1.prototype.execute = function uaExecute(opts, callback) {
             },
 
             function checkCNsAvailability(_, next) {
+                // Move into the next step if we have zero instances:
+                if (change.insts.length === 0) {
+                    next();
+                    return;
+                }
                 sdcadm.cnapi.listServers({
                     uuids: change.insts.map(function (i) {
                         return (i.server);
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 4d72903..4f38e8f 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -2789,10 +2789,9 @@ SdcAdm.prototype.getCandidateImages = function getCandidateImages(opts, cb) {
             currImgUuids = Object.keys(currImgUuids);
             if (currImgUuids.length === 0) {
                 // No insts -> use the image_uuid set on the service.
-                assert.ok(opts.service.params.image_uuid,
-                    'service object has no "params.image_uuid": '
-                    + JSON.stringify(opts.service));
-                currImgUuids.push(opts.service.params.image_uuid);
+                if (opts.service.params.image_uuid) {
+                    currImgUuids.push(opts.service.params.image_uuid);
+                }
             }
 
             self.log.debug({currImgUuids: currImgUuids},
@@ -3517,10 +3516,9 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
                                 ch.service.name !== 'sdcadm') {
                             // No insts -> use the image_uuid set on the
                             // service.
-                            assert.ok(ch.service.params.image_uuid,
-                                'service object has no "params.image_uuid": '
-                                + JSON.stringify(ch.service));
-                            currImgUuids.push(ch.service.params.image_uuid);
+                            if (ch.service.params.image_uuid) {
+                                currImgUuids.push(ch.service.params.image_uuid);
+                            }
                         }
                         if (currImgUuids.length === 1) {
                             var sansCurr = ch.images.filter(function (img) {
