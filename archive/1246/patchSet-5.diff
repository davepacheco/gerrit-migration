From 096a1a2ad5e4fe7e1c681d0ff65ffd48b9772b65 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Fri, 13 Jan 2017 10:57:51 +0100
Subject: [PATCH] TOOLS-1631 'sdcadm experimental update SOME-AGENT' fails if
 there are no instances yet Reviewed by: Trent Mick <trent.mick@joyent.com>

---
 lib/procedures/index.js           | 16 ++++++++++++----
 lib/procedures/update-agent-v1.js | 13 ++++++++++---
 lib/sdcadm.js                     | 14 ++++++--------
 3 files changed, 28 insertions(+), 15 deletions(-)

diff --git a/lib/procedures/index.js b/lib/procedures/index.js
index 17131d2..5e5b8b2 100644
--- a/lib/procedures/index.js
+++ b/lib/procedures/index.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -744,13 +744,21 @@ function coordinatePlan(opts, cb) {
 
             if (handle.length) {
                 changes = remaining;
+                // Do not add the procedure in case we're updating an agent
+                // not setup yet:
+                handle = handle.filter(function (h) {
+                    return (h.insts.length);
+                });
+
                 log.debug({
                     changes: handle
                 }, 'UpdateAgentV1 will handle %d change(s)', handle.length);
 
-                procs.push(new UpdateAgentV1({
-                    changes: handle
-                }));
+                if (handle.length) {
+                    procs.push(new UpdateAgentV1({
+                        changes: handle
+                    }));
+                }
 
             }
             var err = null;
diff --git a/lib/procedures/update-agent-v1.js b/lib/procedures/update-agent-v1.js
index 83aa868..af87737 100644
--- a/lib/procedures/update-agent-v1.js
+++ b/lib/procedures/update-agent-v1.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright 2017, Joyent, Inc.
  */
 
 
@@ -42,8 +42,10 @@ UpdateAgentV1.prototype.summarize = function uaSummarize() {
     var img = c0.image;
     var out = [sprintf('update "%s" service to image %s ',
                 c0.service.name, img.uuid),
-            common.indent(sprintf('%s@%s', img.name, img.version)),
-            sprintf('in %d servers', c0.insts.length)];
+                common.indent(sprintf('%s@%s', img.name, img.version))];
+    if (c0.insts.length) {
+        out.push(sprintf('in %d servers', c0.insts.length));
+    }
     return out.join('\n');
 };
 
@@ -177,6 +179,11 @@ UpdateAgentV1.prototype.execute = function uaExecute(opts, callback) {
             },
 
             function checkCNsAvailability(_, next) {
+                // Move into the next step if we have zero instances:
+                if (change.insts.length === 0) {
+                    next();
+                    return;
+                }
                 sdcadm.cnapi.listServers({
                     uuids: change.insts.map(function (i) {
                         return (i.server);
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 4d72903..4f38e8f 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -2789,10 +2789,9 @@ SdcAdm.prototype.getCandidateImages = function getCandidateImages(opts, cb) {
             currImgUuids = Object.keys(currImgUuids);
             if (currImgUuids.length === 0) {
                 // No insts -> use the image_uuid set on the service.
-                assert.ok(opts.service.params.image_uuid,
-                    'service object has no "params.image_uuid": '
-                    + JSON.stringify(opts.service));
-                currImgUuids.push(opts.service.params.image_uuid);
+                if (opts.service.params.image_uuid) {
+                    currImgUuids.push(opts.service.params.image_uuid);
+                }
             }
 
             self.log.debug({currImgUuids: currImgUuids},
@@ -3517,10 +3516,9 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
                                 ch.service.name !== 'sdcadm') {
                             // No insts -> use the image_uuid set on the
                             // service.
-                            assert.ok(ch.service.params.image_uuid,
-                                'service object has no "params.image_uuid": '
-                                + JSON.stringify(ch.service));
-                            currImgUuids.push(ch.service.params.image_uuid);
+                            if (ch.service.params.image_uuid) {
+                                currImgUuids.push(ch.service.params.image_uuid);
+                            }
                         }
                         if (currImgUuids.length === 1) {
                             var sansCurr = ch.images.filter(function (img) {
-- 
2.21.0

