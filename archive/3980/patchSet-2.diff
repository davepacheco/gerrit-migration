From fc5c94fafc6d1c495e79eb3330f975ff860f0593 Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Tue, 29 May 2018 11:04:21 -0700
Subject: [PATCH] TRITON-52 x-DC image copy

---
 CHANGES.md    |  5 +++
 lib/imgapi.js | 89 +++++++++++++++++++++++++++++++++++++++++++++++++++
 package.json  |  2 +-
 3 files changed, 95 insertions(+), 1 deletion(-)

diff --git a/CHANGES.md b/CHANGES.md
index fa5e924..024512b 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -8,6 +8,11 @@
 
 ## not yet released
 
+## 10.6.0
+
+- TRITON-52 Add imgapi.importImageFromDatacenter method, which can be used to
+  copy an image between different datacenters in the same cloud.
+
 ## 10.5.0
 
 - DOCKER-524 Implement docker push
diff --git a/lib/imgapi.js b/lib/imgapi.js
index 0431eed..b331848 100644
--- a/lib/imgapi.js
+++ b/lib/imgapi.js
@@ -2529,6 +2529,95 @@ function deleteImage(uuid, account, options, callback) {
 };
 
 
+/**
+ * Imports an image from the provided datatcenter.
+ *
+ * @param {String} uuid : the UUID of the image.
+ * @param {UUID} account : The UUID of the account on behalf of whom
+ *      this request is being made.
+ * @param {Object} options: Required.
+ *      - datacenter {String} Required. The datacenter to import the image from.
+ *      - headers {Object} Optional. Additional request headers.
+ * @param {Function} callback : `function (err, job, res)`
+ */
+IMGAPI.prototype.importImageFromDatacenter =
+function importImageFromDatacenter(uuid, account, options, callback) {
+    var self = this;
+    assert.uuid(uuid, 'uuid');
+    assert.uuid(account, 'account');
+    assert.object(options, 'options');
+    assert.string(options.datacenter, 'options.datacenter');
+    assert.optionalObject(options.headers, 'options.headers');
+    assert.func(callback, 'callback');
+
+    var path = self._path(format('/images/%s', uuid), {
+        account: account,
+        action: 'import-from-datacenter',
+        channel: self.channel,
+        datacenter: options.datacenter
+    });
+    self._getAuthHeaders(function (hErr, headers) {
+        if (hErr) {
+            callback(hErr);
+            return;
+        }
+        if (options.headers) {
+            simpleMerge(headers, options.headers);
+        }
+        var reqOpts = {
+            path: path,
+            headers: headers
+        };
+        self.client.post(reqOpts, function (err, req, res, obj) {
+            if (err) {
+                callback(err, null, res);
+            } else {
+                callback(null, obj, res);
+            }
+        });
+    });
+};
+
+
+/**
+ * Imports an image from the provided datatcenter.
+ *
+ * @param {String} uuid : the UUID of the image.
+ * @param {UUID} account : The UUID of the account on behalf of whom
+ *      this request is being made.
+ * @param {Object} options: Required.
+ *      - datacenter {String} Required. The datacenter to import the image from.
+ *      - headers {Object} Optional. Additional request headers.
+ * @param {Function} callback : `function (err, image, res)`
+ */
+IMGAPI.prototype.importImageFromDatacenterAndWait =
+function importImageFromDatacenterAndWait(uuid, account, options, callback) {
+    var self = this;
+
+    self.importImageFromDatacenter(uuid, account, options,
+            function (err, job, res) {
+        if (err) {
+            callback(err, null, res);
+            return;
+        }
+
+        var wfapiUrl = res.headers['workflow-api'];
+
+        assert.string(wfapiUrl, 'wfapiUrl');
+        assert.string(job['job_uuid'], 'job_uuid');
+        assert.string(job['image_uuid'], 'image_uuid');
+
+        waitForJob(wfapiUrl, job['job_uuid'], function (jErr) {
+            if (jErr) {
+                callback(jErr);
+                return;
+            }
+            self.getImage(job['image_uuid'], callback);
+        });
+    });
+};
+
+
 /**
  * ListChannels
  * <https://mo.joyent.com/docs/imgapi/master/#ListChannels>
diff --git a/package.json b/package.json
index a319985..48cf29e 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdc-clients",
   "description": "node.js client libraries for Triton core REST APIs.",
-  "version": "10.5.0",
+  "version": "10.6.0",
   "homepage": "http://www.joyent.com",
   "repository": {
     "type": "git",
-- 
2.21.0

