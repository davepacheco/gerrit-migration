From 91c1539e75122ab025ed7dc747b93af10137d92c Mon Sep 17 00:00:00 2001
From: John Levon <john.levon@joyent.com>
Date: Wed, 1 May 2019 13:42:18 +0000
Subject: [PATCH] TRITON-1353 Triton systems should ship with HT disabled

---
 bin/capacity.js                               |  4 +-
 bin/check.js                                  |  4 +-
 docs/index.md                                 |  4 +-
 lib/algorithms/calculate-server-unreserved.js |  8 ++-
 lib/algorithms/hard-filter-hvm.js             | 14 +++--
 package.json                                  |  2 +-
 .../calculate-server-unreserved.test.js       | 37 +++++++++++-
 test/algorithms/hard-filter-hvm.test.js       | 57 ++++++++++++++++++-
 test/validations.test.js                      |  6 +-
 9 files changed, 121 insertions(+), 15 deletions(-)

diff --git a/bin/capacity.js b/bin/capacity.js
index 9aa9058..fc575aa 100644
--- a/bin/capacity.js
+++ b/bin/capacity.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
@@ -60,6 +60,8 @@ calculateCapacity(servers, processServerCap)
 
 		vms = server.vms;
 		cpu = server.sysinfo['CPU Total Cores'] * 100;
+		if (server.sysinfo.hasOwnProperty('CPU Online Count'))
+			cpu = server.sysinfo['CPU Online Count'] * 100;
 		ram = server.memory_total_bytes *
 		    (1 - server.reservation_ratio);
 		disk = server.disk_pool_size_bytes;
diff --git a/bin/check.js b/bin/check.js
index e5d9e97..ad4048a 100644
--- a/bin/check.js
+++ b/bin/check.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -58,6 +58,8 @@ servers.forEach(function (server) {
 
 	vms = server.vms;
 	cpu = server.sysinfo['CPU Total Cores'] * 100;
+	if (server.sysinfo.hasOwnProperty('CPU Online Count'))
+		cpu = server.sysinfo['CPU Online Count'] * 100;
 	ram = server.memory_total_bytes * (1 - server.reservation_ratio);
 
 	disk = server.disk_pool_size_bytes -
diff --git a/docs/index.md b/docs/index.md
index c3efafb..c44f883 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -10,7 +10,7 @@ markdown2extras: wiki-tables, code-friendly
 -->
 
 <!--
-    Copyright (c) 2018, Joyent, Inc.
+    Copyright 2019 Joyent, Inc.
 -->
 
 # sdc-designation (formerly known as DAPI)
@@ -208,7 +208,7 @@ As an example of a valid server payload:
 		reserved: false,
 		setup: true,
 		sysinfo: {
-			'CPU Total Cores': 32,
+			'CPU Online Count': 32,
 			'Network Interfaces': {
 				'igb0': {
 					'MAC Address': '00:25:90:95:89:50',
diff --git a/lib/algorithms/calculate-server-unreserved.js b/lib/algorithms/calculate-server-unreserved.js
index 4431dbf..1ff6ea2 100644
--- a/lib/algorithms/calculate-server-unreserved.js
+++ b/lib/algorithms/calculate-server-unreserved.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -69,7 +69,13 @@ calculateServerUnreserved(servers, opts, cb)
 		    DEFAULT_SERVER_OVERPROVISIONING;
 
 		/* also convert to MiB and cpu_cap units */
+
 		server.unreserved_cpu = server.sysinfo['CPU Total Cores'] * 100;
+		if (server.sysinfo.hasOwnProperty('CPU Online Count')) {
+			server.unreserved_cpu = server.sysinfo
+				['CPU Online Count'] * 100;
+		}
+
 		server.unreserved_ram = server.memory_total_bytes / MB *
 		    (1 - server.reservation_ratio);
 		server.unreserved_disk = calcUnreservedDisk(server);
diff --git a/lib/algorithms/hard-filter-hvm.js b/lib/algorithms/hard-filter-hvm.js
index fba981a..7cb936c 100644
--- a/lib/algorithms/hard-filter-hvm.js
+++ b/lib/algorithms/hard-filter-hvm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -56,14 +56,16 @@ function filterHVM(servers, opts, cb) {
 	adequateServers = servers.filter(function checkServer(server) {
 		var bhyveMaxVcpus;
 		var bhyveSupport;
-		var serverTotalCores;
+		var serverTotalCpus;
 		var sysinfo = server.sysinfo;
 		var vms = server.vms;
 		var vmNames = Object.keys(vms);
 
 		bhyveMaxVcpus = Number(sysinfo['Bhyve Max Vcpus']);
 		bhyveSupport = sysinfo['Bhyve Capable'];
-		serverTotalCores = Number(sysinfo['CPU Total Cores']);
+		serverTotalCpus = Number(sysinfo['CPU Total Cores']);
+		if (sysinfo.hasOwnProperty('CPU Online Count'))
+			serverTotalCpus = Number(sysinfo['CPU Online Count']);
 
 		// Older builds did not have 'Bhyve Max Vcpus', and the max
 		// there was 16
@@ -72,9 +74,9 @@ function filterHVM(servers, opts, cb) {
 		}
 
 		// Even if bhyve supports more vcpus, the system might not
-		// *have* that many cores. If so, we'll reduce max.
-		if (serverTotalCores < bhyveMaxVcpus) {
-			bhyveMaxVcpus = serverTotalCores;
+		// *have* that many online CPUs. If so, we'll reduce max.
+		if (serverTotalCpus < bhyveMaxVcpus) {
+			bhyveMaxVcpus = serverTotalCpus;
 		}
 
 		if (newVmBrand === 'bhyve' && bhyveSupport !== true) {
diff --git a/package.json b/package.json
index db70e0e..f8cd391 100644
--- a/package.json
+++ b/package.json
@@ -8,7 +8,7 @@
     "assert-plus": "~1.0.0",
     "bunyan": "1.8.5",
     "libuuid": "0.2.1",
-    "joyent-schemas": "git+https://github.com/joyent/schemas.git#09cebfca94169601568fec60f7a6144130f7fd31",
+    "joyent-schemas": "git+https://github.com/joyent/schemas.git#d45f38bacb8c0d9adbf52e447cffbf16ad5342e3",
     "jsprim": "1.3.1",
     "vasync": "~1.6.4",
     "xregexp": "3.1.0"
diff --git a/test/algorithms/calculate-server-unreserved.test.js b/test/algorithms/calculate-server-unreserved.test.js
index 1022bfe..7b613ed 100644
--- a/test/algorithms/calculate-server-unreserved.test.js
+++ b/test/algorithms/calculate-server-unreserved.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var test = require('tape');
@@ -219,6 +219,39 @@ test('calculateServerUnreserved()', function (t) {
 					max_physical_memory: 128
 				}
 			}
+		},
+		// [6] same as [5], but with half the online CPUs
+		{
+			memory_total_bytes: 2942881792,
+			disk_pool_size_bytes: 2048 * GB,
+			disk_pool_alloc_bytes: 1024 * GB,
+			disk_system_used_bytes: 10 * GB,
+			disk_installed_images_used_bytes: 1 * GB,
+			disk_zone_quota_bytes: 0,
+			disk_zone_quota_used_bytes: 0,
+			disk_kvm_quota_bytes: 0,
+			disk_kvm_zvol_volsize_bytes: 0,
+			disk_cores_quota_used_bytes: 1 * GB,
+			reservation_ratio: 0.15,
+			sysinfo: {
+				'Zpool Size in GiB': 2048,
+				'CPU Total Cores': 16,
+				'CPU Online Count': 8
+			},
+			vms: {
+				'372a07dc-6e83-4c5f-b0e3-27e413f4a925': {
+					brand: 'bhyve',
+					cpu_cap: 350,
+					quota: 25,
+					max_physical_memory: 2048
+				},
+				'3066c163-31cb-4a2f-87c4-eec9b1aa2218': {
+					brand: 'bhyve',
+					cpu_cap: 350,
+					quota: 5,
+					max_physical_memory: 128
+				}
+			}
 		}
 	];
 
@@ -253,6 +286,8 @@ test('calculateServerUnreserved()', function (t) {
 		t.equal(servers[5].unreserved_ram,  209);
 		t.equal(servers[5].unreserved_cpu,  1425);
 
+		t.equal(servers[6].unreserved_cpu,  625);
+
 		t.end();
 	});
 });
diff --git a/test/algorithms/hard-filter-hvm.test.js b/test/algorithms/hard-filter-hvm.test.js
index 9b35453..3555b49 100644
--- a/test/algorithms/hard-filter-hvm.test.js
+++ b/test/algorithms/hard-filter-hvm.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var test = require('tape');
@@ -283,6 +283,61 @@ test('filterHVM() vcpus total less than bhyve -- under', function (t) {
 	checkFilter(t, servers, opts, expectServers, expectReasons);
 });
 
+// Ensure we are limited by online CPUs.
+test('filterHVM() online CPUs less than bhyve -- over', function (t) {
+	var servers = [ {
+		sysinfo: {
+			'Bhyve Capable': true,
+			'Bhyve Max Vcpus': 56,
+			'CPU Total Cores': 32,
+			'CPU Online Count': 16
+		},
+		uuid: 'f667e0fa-33db-48da-a5d0-9fe837ce93fc',
+		vms: []
+	} ];
+
+	var expectServers = [];
+	var expectReasons = {
+		'f667e0fa-33db-48da-a5d0-9fe837ce93fc':
+		    'bhyve VM undefined is requesting 17 vcpus whereas ' +
+		    'server supports 1 - 16 vcpus'
+	};
+
+	var opts = {
+		vm:  { brand: 'bhyve', ram: 512, vcpus: 17 },
+		pkg: {},
+		defaults: {}
+	};
+
+	checkFilter(t, servers, opts, expectServers, expectReasons);
+});
+
+
+// Same as above but with 16 and it should succeed
+test('filterHVM() online CPUs less than bhyve -- under', function (t) {
+	var servers = [ {
+		sysinfo: {
+			'Bhyve Capable': true,
+			'Bhyve Max Vcpus': 56,
+			'CPU Total Cores': 32,
+			'CPU Online Count': 16
+		},
+		uuid: 'f667e0fa-33db-48da-a5d0-9fe837ce93fc',
+		vms: []
+	} ];
+
+	var expectServers = servers.slice(0, 1);
+	var expectReasons = {};
+
+	var opts = {
+		vm:  { brand: 'bhyve', ram: 512, vcpus: 16 },
+		pkg: {},
+		defaults: {}
+	};
+
+	checkFilter(t, servers, opts, expectServers, expectReasons);
+});
+
 
 // 0 is too few
 test('filterHVM() 0 vcpus bhyve', function (t) {
diff --git a/test/validations.test.js b/test/validations.test.js
index 6a8a835..fd1c56c 100644
--- a/test/validations.test.js
+++ b/test/validations.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var test = require('tape');
@@ -35,6 +35,10 @@ var SERVER = {
 		'UUID': 'c0100000-0000-0000-ab1c-002520ca42b7',
 		'Hostname': 'server0001',
 		'CPU Total Cores': 32,
+		'CPU Socket Count': 2,
+		'CPU Core Count': 16,
+		'CPU Online Count': 16,
+		'CPU Count': 32,
 		'MiB of Memory': '262110',
 		'Zpool': 'zones',
 		'Zpool Profile': 'mirror',
-- 
2.21.0

