From 2e53a5a18c6faf96cd9e01d01edead3a2704060a Mon Sep 17 00:00:00 2001
From: Robert Mustacchi <rm@joyent.com>
Date: Thu, 20 Dec 2018 19:00:37 +0000
Subject: [PATCH] OS-7468 ofmt(3OFMT) should talk about the callback handler
 OS-7469 vxlan(7P) example is wrong OS-7470 bzero(9F) header is wrong

---
 usr/src/man/man3ofmt/ofmt.3ofmt | 17 +++++++++++++++--
 usr/src/man/man7p/vxlan.7p      | 17 ++++++++++++-----
 usr/src/man/man9f/bzero.9f      | 11 +----------
 3 files changed, 28 insertions(+), 17 deletions(-)

diff --git a/usr/src/man/man3ofmt/ofmt.3ofmt b/usr/src/man/man3ofmt/ofmt.3ofmt
index 99b431f014..bc996dafa1 100644
--- a/usr/src/man/man3ofmt/ofmt.3ofmt
+++ b/usr/src/man/man3ofmt/ofmt.3ofmt
@@ -11,8 +11,9 @@
 .\"
 .\" Copyright 2010 Sun Microsystems, Inc.  All rights reserved.
 .\" Copyright 2017 Nexenta Systems, Inc.
+.\" Copyright 2018 Joyent, Inc.
 .\"
-.Dd June 1, 2017
+.Dd December 20, 2018
 .Dt OFMT 3OFMT
 .Os
 .Sh NAME
@@ -158,9 +159,21 @@ as follows:
 is the application-specified callback function with the following prototype that
 provides a string representation of the value to be printed for the field:
 .Bd -literal -offset indent
-(*of_cb)(ofmt_arg_t *ofmt_arg, char *buf, uint_t bufsize)
+boolean_t (*of_cb)(ofmt_arg_t *ofmt_arg, char *buf, uint_t bufsize)
 .Ed
 .Pp
+The callback must not write beyond
+.Fa bufsize
+bytes of the string form into
+.Fa buf .
+If the function successfully translates the field into its string
+representation and places it into
+.Fa buf ,
+then the callback function should return
+.Dv B_TRUE .
+Otherwise, the callback function should return
+.Dv B_FALSE .
+.Pp
 The interpretation of the
 .Va of_id
 field is completely private to the caller, and can be optionally used by the
diff --git a/usr/src/man/man7p/vxlan.7p b/usr/src/man/man7p/vxlan.7p
index 43c4756585..59c1d3d9d8 100644
--- a/usr/src/man/man7p/vxlan.7p
+++ b/usr/src/man/man7p/vxlan.7p
@@ -9,9 +9,9 @@
 .\" http://www.illumos.org/license/CDDL.
 .\"
 .\"
-.\" Copyright 2015 Joyent, Inc.
+.\" Copyright 2018 Joyent, Inc.
 .\"
-.Dd Apr 10, 2015
+.Dd December 20, 2018
 .Dt VXLAN 7P
 .Os
 .Sh NAME
@@ -96,11 +96,18 @@ validate_vxlan(void *buf, int len, uint32_t *vidp)
 	vxlan_hdr_t *hdr;
 
 	if (len < sizeof (vxlan_hdr_t))
-		return (EINAVL);
+		return (EINVAL);
 
 	hdr = buf;
-	if ((ntohl(hdr->vxlan_flags) & VXLAN_MAGIC) == 0)
-		return (EINAVL);
+
+	/*
+	 * This verifies that the required flag is set; however, it does
+	 * not look at any of the other bist that are reserved in the
+	 * header. Software needs to evaluate how it should handle other
+	 * bits being set in the vxlan_flags member.
+	 */
+	if ((ntohl(hdr->vxlan_flags) & VXLAN_F_VDI) == 0)
+		return (EINVAL);
 
 	*vidp = ntohl(vxlan->vxlan_id) >> VXLAN_ID_SHIFT;
 
diff --git a/usr/src/man/man9f/bzero.9f b/usr/src/man/man9f/bzero.9f
index 41185de295..ce3ac6012c 100644
--- a/usr/src/man/man9f/bzero.9f
+++ b/usr/src/man/man9f/bzero.9f
@@ -10,20 +10,15 @@ bzero \- clear memory for a given number of bytes
 .SH SYNOPSIS
 .LP
 .nf
-#include <sys/types.h>
-#include <sys/ddi.h>
-
-
+#include <sys/sunddi.h>
 
 \fBvoid\fR \fBbzero\fR(\fBvoid *\fR\fIaddr\fR, \fBsize_t\fR \fIbytes\fR);
 .fi
 
 .SH INTERFACE LEVEL
-.sp
 .LP
 Architecture independent level 1 (DDI/DKI).
 .SH PARAMETERS
-.sp
 .ne 2
 .na
 \fB\fIaddr\fR\fR
@@ -42,24 +37,20 @@ The number of bytes to clear starting at \fIaddr\fR.
 .RE
 
 .SH DESCRIPTION
-.sp
 .LP
 The \fBbzero()\fR function clears a contiguous portion of memory by filling it
 with zeros.
 .SH CONTEXT
-.sp
 .LP
 The \fBbzero()\fR function can be called from user, interrupt, or kernel
 context.
 .SH SEE ALSO
-.sp
 .LP
 \fBbcopy\fR(9F), \fBclrbuf\fR(9F), \fBkmem_zalloc\fR(9F)
 .sp
 .LP
 \fIWriting Device Drivers\fR
 .SH WARNINGS
-.sp
 .LP
 The address range specified must be within the kernel space. No range checking
 is done.  If an address outside of the kernel space is selected, the driver may
-- 
2.21.0

