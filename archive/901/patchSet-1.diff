From 2cc906a6d23e6a7fcd1cc5de8c585d5a0c6a62d2 Mon Sep 17 00:00:00 2001
From: David Pacheco <dap@joyent.com>
Date: Mon, 14 Nov 2016 17:11:16 -0800
Subject: [PATCH] MANTA-3030 muskie should support detailed moray errors
 MANTA-2914 muskie stack traces should clarify the problematic component

---
 lib/common.js           |  3 ++-
 lib/dir.js              |  4 +++-
 lib/errors.js           | 37 +++++++++++++------------------------
 lib/medusa/connector.js |  5 +++--
 lib/obj.js              |  4 +++-
 lib/picker.js           |  1 -
 package.json            |  1 +
 7 files changed, 25 insertions(+), 30 deletions(-)

diff --git a/lib/common.js b/lib/common.js
index d006e09..7ee2a83 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -19,6 +19,7 @@ var assert = require('assert-plus');
 var libmanta = require('libmanta');
 var vasync = require('vasync');
 var restify = require('restify');
+var VError = require('verror');
 
 require('./errors');
 
@@ -471,7 +472,7 @@ function getMetadata(req, res, next) {
 function loadMetadata(req, opts, callback) {
     req.moray.getMetadata(opts, function (err, md, wrap) {
         if (err) {
-            if (err.name === 'ObjectNotFoundError') {
+            if (VError.findCauseByName(err, 'ObjectNotFoundError') !== null) {
                 md = {
                     type: (req.isRootDirectory() ?
                            'directory' :
diff --git a/lib/dir.js b/lib/dir.js
index 165bd00..d2d3bba 100644
--- a/lib/dir.js
+++ b/lib/dir.js
@@ -12,6 +12,7 @@ var util = require('util');
 
 var deepEqual = require('deep-equal');
 var once = require('once');
+var VError = require('verror');
 
 var common = require('./common');
 require('./errors');
@@ -106,7 +107,8 @@ function getDirectoryCount(req, res, next) {
         requestId: req.id()
     };
     req.moray.getDirectoryCount(opts, function (err, count, obj) {
-        if (err && err.name !== 'ObjectNotFoundError') {
+        if (err &&
+            VError.findCauseByName(err, 'ObjectNotFoundError') === null) {
             next(translateError(err, req));
         } else {
             req._dircount = count || 0;
diff --git a/lib/errors.js b/lib/errors.js
index ba16d3f..e6556a2 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -14,6 +14,7 @@ var path = require('path');
 var util = require('util');
 
 var restify = require('restify');
+var VError = require('verror');
 
 
 
@@ -600,39 +601,27 @@ function translateError(err, req) {
         return (err);
 
     var e;
-    if (err.jse_cause)
-        err = err.jse_cause;
-
-    switch (err.name) {
-    case 'ObjectNotFoundError':
+    if (VError.findCauseByName(err, 'ObjectNotFoundError') !== null) {
         e = new restify.ResourceNotFoundError(err,
-                                              '%s does not exist',
-                                              req.path());
-        break;
-
-    case 'PreconditionFailedError':
-        e = err;
-        break;
-
-    case 'RequestedRangeNotSatisfiableError':
+            '%s does not exist', req.path());
+    } else if (VError.findCauseByName(err,
+        'RequestedRangeNotSatisfiableError') !== null) {
         e = new RequestedRangeNotSatisfiableError(req, err);
-        break;
-
-    case 'EtagConflictError':
-    case 'UniqueAttributeError':
+    } else if (VError.findCauseByName(err,
+        'EtagConflictError') !== null ||
+        VError.findCauseByName(err, 'UniqueAttributeError') !== null) {
         e = new ConcurrentRequestError(req.path());
-        break;
-
-    default:
-        e = new InternalError();
-        break;
+    } else {
+        e = VError.findCauseByName(err, 'PreconditionFailedError');
+        if (e === null) {
+            e = new InternalError();
+        }
     }
 
     return (e);
 }
 
 
-
 ///--- Exports
 
 // Make it easy to access all Errors by injecting into the global
diff --git a/lib/medusa/connector.js b/lib/medusa/connector.js
index bc71d6b..35ab6ad 100644
--- a/lib/medusa/connector.js
+++ b/lib/medusa/connector.js
@@ -15,6 +15,7 @@ var moray = require('moray');
 var util = require('util');
 var Watershed = require('watershed').Watershed;
 var utils = require('../utils');
+var VError = require('verror');
 
 
 ///--- Globals
@@ -51,7 +52,6 @@ function MedusaConnector(options) {
     self.inactivityTimeout = options.inactivityTimeout || 30000;
     self.watershed = new Watershed();
     self.moray = moray.createClient({
-        unwrapErrors: true,
         log: options.log,
         connectTimeout: self.connectTimeout,
         host: options.moray.host,
@@ -111,7 +111,8 @@ findMedusaBackend(requestId, jobId, orDefaults, callback) {
     self.moray.getObject('medusa_sessions', jobId, function (err, obj) {
         var out;
 
-        if (err && err.name !== 'ObjectNotFoundError') {
+        if (err &&
+            VError.findCauseByName(err, 'ObjectNotFoundError') === null) {
             log.debug({ err: err }, 'unexpected error');
             callback(err);
             return;
diff --git a/lib/obj.js b/lib/obj.js
index f1abb2c..4e9272d 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -61,6 +61,7 @@ var once = require('once');
 var restify = require('restify');
 var libuuid = require('libuuid');
 var vasync = require('vasync');
+var VError = require('verror');
 
 var common = require('./common');
 var CheckStream = require('./check_stream');
@@ -318,7 +319,8 @@ function enforceDirectoryCount(req, res, next) {
     };
 
     req.moray.getDirectoryCount(opts, function (err, count, obj) {
-        if (err && err.name !== 'ObjectNotFoundError') {
+        if (err &&
+            VError.findCauseByName(err, 'ObjectNotFoundError') === null) {
             next(translateError(err, req));
         } else {
             count = count || 0;
diff --git a/lib/picker.js b/lib/picker.js
index cb982a1..f70f6c3 100644
--- a/lib/picker.js
+++ b/lib/picker.js
@@ -314,7 +314,6 @@ function Picker(opts) {
     var self = this;
 
     this.client = moray.createClient({
-        unwrapErrors: true,
         log: opts.log,
         connectTimeout: opts.connectTimeout,
         url: opts.url
diff --git a/package.json b/package.json
index 1558f1c..30922b1 100644
--- a/package.json
+++ b/package.json
@@ -32,6 +32,7 @@
         "once": "1.3.0",
         "restify": "2.6.3",
         "vasync": "1.4.3",
+        "verror": "^1.7.0",
         "watershed": "0.3.0",
         "xtend": "2.1.1"
     },
-- 
2.21.0

