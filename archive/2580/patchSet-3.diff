commit fb3b57fb2327f7da9fcc8ab5a5c6412c27a5776e (refs/changes/80/2580/3)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2017-09-15T17:58:15+00:00 (2 years, 1 month ago)
    
    joyent/node-fast#7 fsr_context isn't always unpiped from fsr_encoder, which causes memory leaks
    Reviewed by: David Pacheco <dap@joyent.com>
    Approved by: David Pacheco <dap@joyent.com>

diff --git a/CHANGES.md b/CHANGES.md
index 6cd84b9..def0764 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -4,6 +4,10 @@
 
 No changes.
 
+## v2.2.4
+
+* #7 fsr_context isn't always unpiped from fsr_encoder, which causes memory leaks
+
 ## v2.2.3
 
 * #5 Server shutdown crashes when a connection had a socket error
diff --git a/lib/fast_server.js b/lib/fast_server.js
index 17b81cb..b4a0f21 100644
--- a/lib/fast_server.js
+++ b/lib/fast_server.js
@@ -768,6 +768,18 @@ FastServer.prototype.requestFail = function (request, error)
 
 	request.fsr_conn.fc_msgencoder.write(requestMakeMessage(
 	    request, mod_protocol.FP_STATUS_ERROR, error));
+
+
+	/*
+	 * In the case of normal termination, the implementor ends the
+	 * context stream, which tears down the pipeline between that
+	 * stream, the request's encoder, and the connection's encoder.
+	 * In this case, though, that pipeline is still set up, and we
+	 * must explicitly tear it off at the connection end of the
+	 * pipeline so the rest can be garbage collected.
+	 */
+	request.fsr_encoder.unpipe(request.fsr_conn.fc_msgencoder);
+
 	this.requestCleanup(request);
 };
 
diff --git a/package.json b/package.json
index 66d7c62..2cc02e8 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
 	"name": "fast",
 	"description": "streaming JSON RPC over TCP",
-	"version": "2.2.3",
+	"version": "2.2.4",
 	"main": "./lib/fast.js",
 	"repository": {
 		"type": "git",
