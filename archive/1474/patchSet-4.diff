From 476253e2f762fc531d95bae21589a09a8b16e714 Mon Sep 17 00:00:00 2001
From: Orlando Vazquez <ovazquez@gmail.com>
Date: Thu, 9 Feb 2017 12:36:09 -0800
Subject: [PATCH] CNAPI-687 CNAPI should avoid sending cn-agent tasks to
 servers with status unknown

---
 lib/endpoints/index.js   | 73 +++++++++++++++++++++++++++++++++++++++-
 lib/endpoints/nics.js    |  2 ++
 lib/endpoints/servers.js |  9 +++++
 lib/endpoints/ur.js      |  1 +
 lib/endpoints/vms.js     | 21 ++++++++++++
 lib/errors.js            | 16 +++++++++
 6 files changed, 121 insertions(+), 1 deletion(-)

diff --git a/lib/endpoints/index.js b/lib/endpoints/index.js
index 7628e57..6e6b7d7 100644
--- a/lib/endpoints/index.js
+++ b/lib/endpoints/index.js
@@ -14,12 +14,14 @@ var path = require('path');
 var VError = require('verror');
 var restify = require('restify');
 var assert = require('assert-plus');
+var jsprim = require('jsprim');
 
 
 var ModelImage = require('../models/image');
 var ModelServer = require('../models/server');
 
 var allocations = require('./allocations');
+var errors = require('../errors');
 var boot_params = require('./boot_params');
 var images = require('./images');
 var nics = require('./nics');
@@ -76,6 +78,33 @@ function ensureConnectionTimeout(opts, req, res, next) {
     next();
 }
 
+
+/* BEGIN JSSTYLED */
+/**
+ * Restify handler to ensure the requested server has status "running".
+ *
+ * @param {Object} opts options object
+ * @param {Object} req Restify `req` object
+ * @param {Object} res Restify `res` object
+ */
+/* END JSSTYLED */
+
+function ensureServerRunning(opts, req, res, next) {
+    assert.object(opts, 'opts');
+    assert.object(req, 'req');
+    assert.object(res, 'res');
+    assert.func(next, 'next');
+    req.stash.server.getRaw(function (err, serverobj) {
+        if (serverobj.status !== 'running') {
+            next(new errors.ServerNotRunningError());
+            return;
+        } else  {
+            next();
+        }
+    });
+}
+
+
 function prepopulateServer(opts, req, res, next) {
     assert.string(req.params.server_uuid, 'server_uuid');
 
@@ -134,13 +163,49 @@ function prepopulateImage(opts, req, res, next) {
     next();
 }
 
+/* BEGIN JSSTYLED */
+/**
+ * `ensure()` returns an array of functions. This array is to be passed in when
+ * registering restify endpoint handlers. The functions returned correspond to
+ * directives passed in by the caller, checking for running status, ensuring
+ * that connection dependencies are available and in working order, and certain
+ * attributes are populated.
+ *
+ * @param {Object} opts options object
+ * @param {Object} opts.connectionTimeoutSeconds restify connection timeout
+ * @param {Object} opts.app CNAPI `App` obkect
+ * @param {Array} opts.prepopulate Prepopulate stash with CNAPI objects (server, vm)
+ * @param {Array} opts.connected Asserts CNAPI is connected to service dependencies (moray, workflow, amqp)
+ */
+/* END JSSTYLED */
+
 function ensure(opts) {
+    assert.object(opts, 'opts');
+    assert.object(opts.app, 'opts.app');
+    assert.optionalNumber(opts.connectionTimeoutSeconds,
+                    'opts.connectionTimeoutSeconds');
+    assert.optionalArray(opts.prepopulate, 'opts.prepopulate');
+    assert.optionalArray(opts.connected, 'opts.connected');
+
+    // Copy `opts` so we don't modify the caller's version
+    opts = jsprim.deepCopy(opts);
+
     var fns = [];
 
     opts.log = opts.app.getLog();
     opts.connectionTimeoutSeconds = opts.connectionTimeoutSeconds || 60 * 60;
 
-    // Override timeout
+    if (opts.serverRunning) {
+        if (!opts.prepopulate) {
+            opts.prepopulate = ['server'];
+        } else if (opts.prepopulate.indexOf('server') === -1) {
+            opts.log.warn(
+                'ensure `serverRunning` adding \"server\" to `prepopulate` ');
+            opts.prepopulate.push('server');
+        }
+    }
+
+    // override timeout
     fns.push(function handlerEnsureStash(req, res, next) {
         if (!req.stash) {
             req.stash = {};
@@ -213,6 +278,12 @@ function ensure(opts) {
         fns.push(makeHandler(opts, handlerName, CONNECTION_CHECKS, service));
     });
 
+    if (opts.serverRunning) {
+        fns.push(function handlerEnsureServerRunning(req, res, next) {
+            ensureServerRunning(opts, req, res, next);
+        });
+    }
+
     return fns;
 }
 
diff --git a/lib/endpoints/nics.js b/lib/endpoints/nics.js
index df671fb..c090e75 100644
--- a/lib/endpoints/nics.js
+++ b/lib/endpoints/nics.js
@@ -135,6 +135,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
@@ -147,6 +148,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
diff --git a/lib/endpoints/servers.js b/lib/endpoints/servers.js
index 9f7bb0b..489c0c1 100644
--- a/lib/endpoints/servers.js
+++ b/lib/endpoints/servers.js
@@ -1085,6 +1085,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray', 'workflow']
         }),
@@ -1096,6 +1097,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray', 'workflow']
         }),
@@ -1119,6 +1121,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
@@ -1131,6 +1134,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
@@ -1143,6 +1147,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray', 'workflow']
         }),
@@ -1155,6 +1160,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray', 'workflow']
         }),
@@ -1179,6 +1185,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
@@ -1190,6 +1197,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
@@ -1229,6 +1237,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
diff --git a/lib/endpoints/ur.js b/lib/endpoints/ur.js
index 667eace..80cf293 100644
--- a/lib/endpoints/ur.js
+++ b/lib/endpoints/ur.js
@@ -80,6 +80,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['amqp', 'moray']
         }),
diff --git a/lib/endpoints/vms.js b/lib/endpoints/vms.js
index a4b066e..3ba821e 100644
--- a/lib/endpoints/vms.js
+++ b/lib/endpoints/vms.js
@@ -1214,6 +1214,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
@@ -1226,6 +1227,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1248,6 +1250,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server'],
             connected: ['moray']
         }),
@@ -1259,6 +1262,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1270,6 +1274,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1281,6 +1286,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1292,6 +1298,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1303,6 +1310,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1314,6 +1322,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1325,6 +1334,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1336,6 +1346,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1347,6 +1358,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1358,6 +1370,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1379,6 +1392,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1395,6 +1409,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1410,6 +1425,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1430,6 +1446,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1450,6 +1467,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1464,6 +1482,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1478,6 +1497,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
@@ -1492,6 +1512,7 @@ function attachTo(http, app) {
         ensure({
             connectionTimeoutSeconds: 60 * 60,
             app: app,
+            serverRunning: true,
             prepopulate: ['server', 'vm'],
             connected: ['moray']
         }),
diff --git a/lib/errors.js b/lib/errors.js
index b6a335c..0b83716 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -182,6 +182,21 @@ VmNotRunningError.statusCode = 409;
 VmNotRunningError.description =
     'Operation attempted on vm which is not running';
 
+
+function ServerNotRunningError() {
+    _CnapiBaseError.call(this, {
+        restCode: this.constructor.restCode,
+        statusCode: this.constructor.statusCode,
+        message:
+            'Operation attempted on server which is not running' });
+}
+util.inherits(ServerNotRunningError, _CnapiBaseError);
+ServerNotRunningError.prototype.name = 'ServerNotRunningError';
+ServerNotRunningError.restCode = 'ServerNotRunning';
+ServerNotRunningError.statusCode = 409;
+ServerNotRunningError.description =
+    'Operation attempted on server which is not running';
+
 function FileNotFoundError() {
     _CnapiBaseError.call(this, {
         restCode: this.constructor.restCode,
@@ -227,6 +242,7 @@ module.exports = {
     CommandTimeoutError: CommandTimeoutError,
     NotImplementedError: NotImplementedError,
     VmNotRunningError: VmNotRunningError,
+    ServerNotRunningError: ServerNotRunningError,
     FileNotFoundError: FileNotFoundError,
     PathNotDirectoryError: PathNotDirectoryError
 };
-- 
2.21.0

