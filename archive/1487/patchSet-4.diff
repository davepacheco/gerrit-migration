commit b52b692c7a13eee37ef80b4d9876c20cf00ebbb8 (refs/changes/87/1487/4)
Author: Jordan Paige Hendricks <jordan.hendricks@joyent.com>
Date:   2017-02-13T19:21:26+00:00 (2 years, 8 months ago)
    
    MANTA-3150 muskie logging about shards is sometimes incorrect, and could also be more useful

diff --git a/lib/audit.js b/lib/audit.js
index 36bfa92..93b380b 100644
--- a/lib/audit.js
+++ b/lib/audit.js
@@ -231,7 +231,8 @@ function auditLogger(options) {
             obj.objectId = req.metadata.objectId;
         }
         obj.sharksContacted = req.sharksContacted;
-        obj.shard = req.shard;
+        obj.entryShard = req.entryShard;
+        obj.parentShard = req.parentShard;
 
         if (req._timeToLastByte !== undefined &&
             req._totalBytes !== undefined) {
diff --git a/lib/common.js b/lib/common.js
index 8996f9f..e9dbc00 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -372,6 +372,10 @@ function ensureParent(req, res, next) {
 }
 
 
+/*
+ * Resolves the metadata for the entry at req.key, and the entry's parent
+ * metadata, if necessary.
+ */
 function getMetadata(req, res, next) {
     var log = req.log;
 
@@ -392,6 +396,11 @@ function getMetadata(req, res, next) {
                             metadata: md,
                             etag: (w || {})._etag
                         };
+
+                        if (w && w._node) {
+                            obj.shard = w._node.pnode;
+                        }
+
                         cb(null, obj);
                     }
                 });
@@ -426,6 +435,11 @@ function getMetadata(req, res, next) {
                             metadata: md,
                             etag: (w || {})._etag
                         };
+
+                        if (w && w._node) {
+                            obj.shard = w._node.pnode;
+                        }
+
                         cb(null, obj);
                     }
                 });
@@ -449,10 +463,14 @@ function getMetadata(req, res, next) {
                     var d = new Date(r.metadata.mtime);
                     res.set('Last-Modified', d);
                 }
+
+                req.entryShard = r.shard;  // useful for logging
                 break;
 
             case 'parent':
                 req.parentMetadata = r.metadata;
+
+                req.parentShard = r.shard;  // useful for logging
                 break;
 
             default:
@@ -469,6 +487,13 @@ function getMetadata(req, res, next) {
 }
 
 
+/*
+ * Helper for getMetadata that looks up a key in Moray and fetches any roles
+ * on the object.
+ *
+ * If the key doesn't exist, it passes a dummy metadata object to the callback
+ * that can be used across various handlers.
+ */
 function loadMetadata(req, opts, callback) {
     req.moray.getMetadata(opts, function (err, md, wrap) {
         if (err) {
@@ -481,13 +506,6 @@ function loadMetadata(req, opts, callback) {
             } else {
                 return (callback(err, req));
             }
-        } else {
-            /*
-             * We want to save which shard the metadata was fetched from for
-             * logging purposes, but `wrap` will only contain this information
-             * if there wasn't an error, whether fatal or not.
-             */
-            req.shard = wrap._node.pnode;
         }
 
         if (md.roles) {
