From 096c10a4f3d851ed89b56c751003d42b1acff51e Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Thu, 10 Oct 2019 16:14:49 -0700
Subject: [PATCH] Revert "TRITON-1822 `sdcadm up manatee` should not left
 registrar svc disabled on the moray instances"

This reverts commit f3376b4cd7e3c43b35660929fc98f5adff907148.
---
 lib/procedures/shared.js            | 52 +++++++++++++----------------
 lib/procedures/update-manatee-v2.js | 38 ++++-----------------
 2 files changed, 31 insertions(+), 59 deletions(-)

diff --git a/lib/procedures/shared.js b/lib/procedures/shared.js
index 5aba0a2..7c8d94c 100644
--- a/lib/procedures/shared.js
+++ b/lib/procedures/shared.js
@@ -342,13 +342,8 @@ function waitForInstToBeUp(arg, cb) {
     var inst = arg.change.inst;
     var uuid = (arg.tmpUUID) ? arg.tmpUUID : inst.zonename;
 
-    // Timeout in seconds:
-    var waitTimeout = arg.waitTimeout || 60 * 5;
-
-
     var counter = 0;
-    var limit = Math.ceil(waitTimeout / 5);
-    var waitMins = Math.ceil(waitTimeout / 60);
+    var limit = 60;
 
     // 1 - Check the VM is running:
     var running = false;
@@ -421,30 +416,31 @@ function waitForInstToBeUp(arg, cb) {
                 }
             ]
         }, function (err) {
-            if (!err || running) {
-                cb(null);
-                return;
-            }
-            // If any service went into maintenance we rather fail now:
-            var hErrs = inst.health_errors;
-            if (hErrs && hErrs.length && hErrs[0].message &&
-                /* eslint-disable */
-                hErrs[0].message.match(/State\: maintenance/)) {
-                /* eslint-enable */
-                cb(new errors.InstanceIsDownError(
-                            hErrs[0].message));
-                return;
-            }
+            if (err || !running) {
+
+                // If any service went into maintenance we rather fail now:
+                var hErrs = inst.health_errors;
+                if (hErrs && hErrs.length && hErrs[0].message &&
+                    /* eslint-disable */
+                    hErrs[0].message.match(/State\: maintenance/)) {
+                    /* eslint-enable */
+                    cb(new errors.InstanceIsDownError(
+                                hErrs[0].message));
+                    return;
+                }
 
-            if (counter < limit) {
-                // Cleanup errors for next iteration, or it'll fail again:
-                delete inst.health_errors;
-                setTimeout(_waitForInstance, 5000);
-                return;
+                if (counter < limit) {
+                    // Cleanup errors for next iteration, or it'll fail again:
+                    delete inst.health_errors;
+                    setTimeout(_waitForInstance, 5000);
+                } else {
+                    cb(new errors.InstanceIsDownError(format(
+                        'Timeout (5m) waiting for %s instance %s ' +
+                        'to come up', inst.service, uuid)));
+                }
+            } else {
+                cb(null);
             }
-            cb(new errors.InstanceIsDownError(format(
-                'Timeout (%dm) waiting for %s instance %s ' +
-                'to come up', waitMins, inst.service, uuid)));
         });
     }
     progress('Waiting for %s instance %s to come up',
diff --git a/lib/procedures/update-manatee-v2.js b/lib/procedures/update-manatee-v2.js
index 7af5dc2..82f9d27 100644
--- a/lib/procedures/update-manatee-v2.js
+++ b/lib/procedures/update-manatee-v2.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2019 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 
@@ -1004,7 +1004,7 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
              * the amount of time it takes to rebuild)
              */
             function freezeBeforePrimary(_, next) {
-                freeze(_, next);
+                freeze(_,  next);
             },
 
             // ---- Shared between HA and no-HA -------------------------------
@@ -1035,7 +1035,6 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
             function disableMorayRegistrars(_, next) {
                 progress(
                     'Force SAPI to use local cache during primary update');
-                progress('Disable registrar SMF service on moray instances');
                 vasync.forEachParallel({
                     inputs: morayVms,
                     func: function disableRegistrar(vm, next_) {
@@ -1049,12 +1048,7 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
                 }, next);
             },
 
-            // Despite of success or failure waiting for manatee primary to
-            // come up, we want to restory the registrar svc into the moray
-            // zones we disabled before. Therefore, we'll save error waiting
-            // for the primary and do not break the pipeline until next step
-            // if necessary
-            function waitForPrimaryInstance(ctx, next) {
+            function waitForPrimaryInstance(_, next) {
                 if (arg.HA &&
                     arg.updated_vms.indexOf(primary.zoneId) !== -1) {
                     next();
@@ -1083,23 +1077,12 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
                     opts: {
                         progress: progress,
                         sdcadm: sdcadm,
-                        log: log,
-                        // The previous timeout of 5 minutes has been found to
-                        // be too short in QA lab testing. Bumped to 10 minutes
-                        // to try to give all the services running into manatee
-                        // primary time enough to be up and running:
-                        maxTimeout: 600
-                    }
-                }, function waitPrimaryCb(err) {
-                    if (err) {
-                        ctx.waitPrimaryFailure = err;
+                        log: log
                     }
-                    next();
-                });
+                }, next);
             },
 
-            function enableMorayRegistrars(ctx, next) {
-                progress('Enable registrar SMF service on moray instances');
+            function enableMorayRegistrars(_, next) {
                 vasync.forEachParallel({
                     inputs: morayVms,
                     func: function enableRegistrar(vm, next_) {
@@ -1110,14 +1093,7 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
                             log: log
                         }, next_);
                     }
-                }, function enableRegistrarsCb(regErr) {
-                    if (ctx.waitPrimaryFailure) {
-                        next(ctx.waitPrimaryFailure);
-                        return;
-                    }
-
-                    next(regErr);
-                });
+                }, next);
             },
             // ----------- Again, no-HA only ----------------------------------
 
-- 
2.17.2 (Apple Git-113)

