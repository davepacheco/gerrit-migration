commit be8614a9f0b532dbf6d29e2871581ef0e4b3b9ce
Author: Robert Bogart <robert.bogart@joyent.com>
Date:   2019-04-11T06:19:20+00:00 (6 months ago)
    
    MANTA-4215 Accelerated garbage collection exponential backoff does not appear to be exponential

diff --git a/lib/moray_delete_record_reader.js b/lib/moray_delete_record_reader.js
index 96c643d..ae232c0 100644
--- a/lib/moray_delete_record_reader.js
+++ b/lib/moray_delete_record_reader.js
@@ -331,15 +331,21 @@ state_running(S)
 	req.on('end', function () {
 		if (record_keys.length === 0) {
 			/*
-			 * Begin exponential backoff if we've received 0 delete
-			 * records twice in a row. The queue is likely empty at
-			 * this point.
+			 * Back off exponentially each time we consecutively
+			 * receive 0 delete records. The queue is not
+			 * necessarily empty at this point.
 			 */
 			if (self.mr_prev_records_received === 0) {
 				self._update_empty_backoff();
 			}
 
-			self._reset_offset();
+			/*
+			 * If we have reached the ceiling on backoff without
+			 * receiving any new records, the queue is most likely
+			 * empty and we can reset our offset within the table.
+			 */
+			if (self.mr_empty_backoff >= self.mr_empty_backoff_ceil)
+				self._reset_offset();
 		} else {
 			self.mr_log.info({
 				bucket: self.mr_bucket,
@@ -440,7 +446,7 @@ state_waiting(S)
 
 	var timer = setTimeout(function () {
 		S.gotoState('running');
-	}, self._get_delay());
+	}, self._get_delay() + self.mr_empty_backoff);
 
 	S.on(self, 'assertPause', function () {
 		clearTimeout(timer);
