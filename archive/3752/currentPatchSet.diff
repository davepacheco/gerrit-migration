From 96aa44353d9794199838f317ced1457f451b53ff Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Fri, 3 Nov 2017 15:23:46 -0700
Subject: [PATCH] TOOLS-1916 Add a -t option to bin/crrestore for passing --tls
 to docker TOOLS-1917 Don't use account login with CNS when using
 bin/crrestore against staging DCs

---
 bin/crrestore | 41 ++++++++++++++++++++++-------------------
 1 file changed, 22 insertions(+), 19 deletions(-)

diff --git a/bin/crrestore b/bin/crrestore
index 9a24958..be11c3d 100755
--- a/bin/crrestore
+++ b/bin/crrestore
@@ -10,6 +10,7 @@ gr_mode=dev
 gr_backup_path=
 gr_client_id=
 gr_client_secret=
+gr_docker_opts=
 
 # Container names: configured from command-line arguments
 gr_name_prefix=gerrit$$
@@ -100,12 +101,13 @@ function main
 {
 	set -o errexit
 
-	while getopts "c:n:ps:" c; do
+	while getopts "c:n:ps:t" c; do
 		case "$c" in
 		c)	gr_client_id=$OPTARG ;;
 		n)	gr_name_prefix=$OPTARG ;;
 		p)	gr_mode=prod ;;
 		s)	gr_client_secret=$OPTARG ;;
+		t)	gr_docker_opts+=" --tls" ;;
 		*)	usage ;;
 		esac
 	done
@@ -119,23 +121,23 @@ function main
 	gr_configure || fail "failed to configure"
 
 	echo "Pulling latest copies of cr.joyent.us images ... "
-	if ! docker pull $gr_image_appserver ||
-	   ! docker pull $gr_image_frontdoor; then
+	if ! docker $gr_docker_opts pull $gr_image_appserver ||
+	   ! docker $gr_docker_opts pull $gr_image_frontdoor; then
 	   	fail "failed"
 	fi
 
 	echo -n "Creating database volume container ... "
-	docker run --name=$gr_name_volume_db \
+	docker $gr_docker_opts run --name=$gr_name_volume_db \
 	    -v /gerrit-postgres-db-data $gr_image_volumes \
 	    echo "database volume container created." || fail "failed"
 
 	echo -n "Creating Gerrit volume container ... "
-	docker run --name=$gr_name_volume_gerrit \
+	docker $gr_docker_opts run --name=$gr_name_volume_gerrit \
 	    -v /var/gerrit/review_site $gr_image_volumes \
 	    echo "gerrit volume container created." || fail "failed"
 
 	echo -n "Creating PostgreSQL runtime container ... "
-	docker run \
+	docker $gr_docker_opts run \
 	    --name $gr_name_postgres \
 	    --label triton.cns.services=$gr_cnssvc_postgres \
 	    -e POSTGRES_USER=gerrit2 \
@@ -148,14 +150,14 @@ function main
 	echo "done."
 
 	echo -n "Uploading PostgreSQL backup ... "
-	docker cp "$gr_backup_path/postgresdb" \
+	docker $gr_docker_opts cp "$gr_backup_path/postgresdb" \
 	    $gr_name_postgres:/var/tmp/postgresdb || fail "failed"
 	echo "done."
 
 	echo -n "Waiting up to $pg_timeout seconds for" \
 	    "PostgreSQL to come up ... "
 	for (( i = 0; i < $pg_timeout; i++ )) {
-		if docker exec -i $gr_name_postgres \
+		if docker $gr_docker_opts exec -i $gr_name_postgres \
 		    psql -U gerrit2 -c 'select NOW()' \
 		    reviewdb > /dev/null 2>&1; then
 		    pg_okay=true
@@ -169,7 +171,7 @@ function main
 	echo "done."
 
 	echo -n "Restoring PostgreSQL backup ... "
-	docker exec $gr_name_postgres \
+	docker $gr_docker_opts exec $gr_name_postgres \
 	    pg_restore -U gerrit2 -d reviewdb /var/tmp/postgresdb || \
 	    fail "failed"
 	echo "done."
@@ -187,26 +189,27 @@ function main
 	# container.
 	#
 	echo -n "Creating restore container for Gerrit data directory ... "
-	docker run -d --volumes-from $gr_name_volume_gerrit \
+	docker $gr_docker_opts run -d --volumes-from $gr_name_volume_gerrit \
 	    --name=$gr_name_restore --entrypoint="/native/usr/bin/bash" \
 	    $gr_image_appserver -c 'sleep 3600' || \
 	    fail "failed"
 
 	echo -n "Uploading backup to restore container ... "
-	docker cp "$gr_backup_path/data.tgz" $gr_name_restore:/var/tmp || \
-	    fail "failed"
+	docker $gr_docker_opts cp "$gr_backup_path/data.tgz" \
+	    $gr_name_restore:/var/tmp || fail "failed"
 	echo "uploaded."
 
 	echo -n "Restoring backup of Gerrit data directory ... "
-	docker exec $gr_name_restore tar -C /var/gerrit -xzf /var/tmp/data.tgz \
-	    || fail "failed"
+	docker $gr_docker_opts exec $gr_name_restore
+	    tar -C /var/gerrit -xzf /var/tmp/data.tgz || fail "failed"
 	echo "done."
 
 	echo -n "Removing restore container ... "
-	docker rm -f $gr_name_restore || fail "failed to remove container"
+	docker $gr_docker_opts rm -f $gr_name_restore || \
+	    fail "failed to remove container"
 
 	echo -n "Starting Gerrit application container ... "
-	docker run -d \
+	docker $gr_docker_opts run -d \
 	    --name $gr_name_appserver \
 	    --label triton.cns.services=$gr_cnssvc_appserver \
 	    --volumes-from=$gr_name_volume_gerrit \
@@ -214,7 +217,7 @@ function main
 	echo "done."
 
 	echo -n "Deploying nginx frontdoor container ... "
-	docker run -d \
+	docker $gr_docker_opts run -d \
 	    --name=$gr_name_frontdoor \
 	    --label triton.cns.services=$gr_cnssvc_frontdoor \
 	    -e MY_NAME=$gr_frontdoor_name \
@@ -293,7 +296,7 @@ function gr_configure
 	echo "   'triton' reports account $gr_account_login ($gr_account_uuid)"
 
 	echo -n "Checking Docker configuration ... "
-	dockerinfo="$(docker info 2>/dev/null)" || \
+	dockerinfo="$(docker $gr_docker_opts info 2>/dev/null)" || \
 	    fail "failed to run 'docker info'"
 	gr_datacenter="$(awk '$1 == "Name:"{ print $2 }' <<< "$dockerinfo")"
 	sdcaccount="$(awk '$1 == "SDCAccount:"{ print $2 }' <<< "$dockerinfo")"
@@ -411,7 +414,7 @@ function gr_cnsname_internal
 	if [[ $gr_datacenter =~ ^us- ]]; then
 		printf "$gr_account_uuid.$gr_datacenter.cns.joyent.com"
 	else
-		printf "$gr_account_login.$gr_datacenter.cns.joyent.us"
+		printf "$gr_account_uuid.$gr_datacenter.cns.joyent.us"
 	fi
 }
 
-- 
2.21.0

