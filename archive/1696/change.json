{"project":"joyent/sdc-napi","branch":"master","id":"Iad55ff896857f0d895b628d8fdc2b9d8970c0339","number":"1696","subject":"NAPI-385 NAPI allowed multiple NIC MACs to have same IP NAPI-146 Specifying IPs w/o any network_uuid should take subnet into account NAPI-358 Updating \"cn_uuid\" should generate shootdown messages NAPI-365 Use node-moray-sandbox in unit tests NAPI-396 NIC ","owner":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"url":"https://cr.joyent.us/1696","commitMessage":"NAPI-385 NAPI allowed multiple NIC MACs to have same IP\nNAPI-146 Specifying IPs w/o any network_uuid should take subnet into account\nNAPI-358 Updating \"cn_uuid\" should generate shootdown messages\nNAPI-365 Use node-moray-sandbox in unit tests\nNAPI-396 NIC provisions shouldn\u0027t retry forever\nNAPI-397 Calling UpdateNic on a fabric NIC crashes NAPI\nNAPI-400 Use Moray client v2\nReviewed by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e\nReviewed by: Richard Kiene \u003crichard.kiene@joyent.com\u003e\nApproved by: Richard Kiene \u003crichard.kiene@joyent.com\u003e\n","createdOn":1490144830,"lastUpdated":1493162171,"open":false,"status":"MERGED","comments":[{"timestamp":1490144830,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 1."},{"timestamp":1490144930,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1490382401,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 2."},{"timestamp":1490382512,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1491256976,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Patch Set 2:\n\n(4 comments)\n\nThis is what I have so far. I\u0027ll be doing this in chunks since this is such a large set to review."},{"timestamp":1491446718,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Patch Set 2: Code-Review+1\n\n(15 comments)\n\nI think it would be worth while to get a second reviewer on this. Most of my comments are about subtleties and lack of comments. This is such a big commit that I\u0027m not sure I\u0027d feel good about an IA+1 without another set of eyes."},{"timestamp":1491847813,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 3."},{"timestamp":1491847906,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1491847972,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 3:\n\n(16 comments)"},{"timestamp":1492026370,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 3:\n\n(24 comments)\n\nI made some progress reviewing this. I\u0027m not done yet but I won\u0027t be able to make any progress today, so I thought I\u0027d post the feedback I already have. I\u0027ll resume reviewing this tomorrow (Thursday)."},{"timestamp":1492108779,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 3:\n\n(22 comments)\n\nMade a bit of progress on reviewing this CR. My comments are still very superficial. I will try to finish this asap, but probably not before next week."},{"timestamp":1492108965,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 3:\n\n(1 comment)"},{"timestamp":1492461555,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 3:\n\n(11 comments)"},{"timestamp":1492557222,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 4."},{"timestamp":1492557297,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1492557550,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 3:\n\n(53 comments)"},{"timestamp":1493061924,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 4: Code-Review+1\n\n(5 comments)"},{"timestamp":1493066941,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 5: Commit message was updated."},{"timestamp":1493078378,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Patch Set 5: Code-Review+1 Integration-Approval+1"},{"timestamp":1493081367,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 6: Commit message was updated."},{"timestamp":1493162171,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Cody Peter Mello"}],"currentPatchSet":{"number":"6","revision":"ad55ff896857f0d895b628d8fdc2b9d8970c0339","parents":["6dcd7540d5171e71260f54150ac6b5e43cf75acc"],"ref":"refs/changes/96/1696/6","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1493081367,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1492557297,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493061924,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493078378,"by":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493078378,"by":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"}},{"type":"SUBM","value":"1","grantedOn":1493162171,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":16,"deletions":0},{"file":".gitignore","type":"MODIFIED","insertions":1,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"README.md","type":"MODIFIED","insertions":9,"deletions":-3},{"file":"lib/apis/moray.js","type":"MODIFIED","insertions":4,"deletions":-3},{"file":"lib/migrate.js","type":"MODIFIED","insertions":8,"deletions":-6},{"file":"lib/models/aggregation.js","type":"MODIFIED","insertions":49,"deletions":-26},{"file":"lib/models/ip/common.js","type":"MODIFIED","insertions":32,"deletions":-16},{"file":"lib/models/ip/provision.js","type":"MODIFIED","insertions":148,"deletions":-167},{"file":"lib/models/network-pool.js","type":"MODIFIED","insertions":8,"deletions":-10},{"file":"lib/models/network.js","type":"MODIFIED","insertions":126,"deletions":-46},{"file":"lib/models/nic/common.js","type":"MODIFIED","insertions":144,"deletions":-109},{"file":"lib/models/nic/create.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"lib/models/nic/del.js","type":"MODIFIED","insertions":37,"deletions":-42},{"file":"lib/models/nic/obj.js","type":"MODIFIED","insertions":7,"deletions":-6},{"file":"lib/models/nic/provision.js","type":"MODIFIED","insertions":431,"deletions":-193},{"file":"lib/models/nic/update.js","type":"MODIFIED","insertions":83,"deletions":-203},{"file":"lib/models/vlan.js","type":"MODIFIED","insertions":10,"deletions":-7},{"file":"lib/napi.js","type":"MODIFIED","insertions":9,"deletions":-8},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":7,"deletions":-2},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":25,"deletions":-11},{"file":"package.json","type":"MODIFIED","insertions":7,"deletions":-7},{"file":"test/integration/fabrics-invalid.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":435,"deletions":-15},{"file":"test/integration/migration-1.2.0-networks.test.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"test/integration/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/nics.test.js","type":"MODIFIED","insertions":5,"deletions":-3},{"file":"test/integration/provision.test.js","type":"MODIFIED","insertions":6,"deletions":-5},{"file":"test/lib/common.js","type":"MODIFIED","insertions":25,"deletions":-1},{"file":"test/lib/err.js","type":"MODIFIED","insertions":1,"deletions":-3},{"file":"test/lib/fabric-net.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/migration.js","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"test/lib/mock-moray.js","type":"DELETED","insertions":0,"deletions":-778},{"file":"test/lib/moray.js","type":"MODIFIED","insertions":46,"deletions":-117},{"file":"test/lib/net.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/lib/nic-tag.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/nic.js","type":"MODIFIED","insertions":4,"deletions":-6},{"file":"test/lib/portolan.js","type":"MODIFIED","insertions":123,"deletions":-15},{"file":"test/lib/server.js","type":"MODIFIED","insertions":117,"deletions":-42},{"file":"test/lib/vlan.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/unit/aggregations.test.js","type":"MODIFIED","insertions":21,"deletions":-18},{"file":"test/unit/helpers.js","type":"MODIFIED","insertions":32,"deletions":-31},{"file":"test/unit/ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6},{"file":"test/unit/network-owner.test.js","type":"MODIFIED","insertions":34,"deletions":-19},{"file":"test/unit/network-pools.test.js","type":"MODIFIED","insertions":73,"deletions":-23},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":136,"deletions":-73},{"file":"test/unit/nic-tags.test.js","type":"MODIFIED","insertions":67,"deletions":-55},{"file":"test/unit/nics.test.js","type":"MODIFIED","insertions":786,"deletions":-190},{"file":"test/unit/run.js","type":"ADDED","insertions":42,"deletions":0},{"file":"test/unit/search-ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6}],"sizeInsertions":3139,"sizeDeletions":-2293},"patchSets":[{"number":"1","revision":"9c73964f6675de0ab36c73fa09d496f67b6bb054","parents":["6dcd7540d5171e71260f54150ac6b5e43cf75acc"],"ref":"refs/changes/96/1696/1","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1490144830,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1490144930,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":13,"deletions":0},{"file":".gitignore","type":"MODIFIED","insertions":1,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"README.md","type":"MODIFIED","insertions":9,"deletions":-3},{"file":"lib/apis/moray.js","type":"MODIFIED","insertions":4,"deletions":-3},{"file":"lib/migrate.js","type":"MODIFIED","insertions":8,"deletions":-6},{"file":"lib/models/aggregation.js","type":"MODIFIED","insertions":29,"deletions":-6},{"file":"lib/models/ip/common.js","type":"MODIFIED","insertions":29,"deletions":-16},{"file":"lib/models/ip/provision.js","type":"MODIFIED","insertions":145,"deletions":-167},{"file":"lib/models/network-pool.js","type":"MODIFIED","insertions":6,"deletions":-10},{"file":"lib/models/network.js","type":"MODIFIED","insertions":73,"deletions":-12},{"file":"lib/models/nic/common.js","type":"MODIFIED","insertions":123,"deletions":-108},{"file":"lib/models/nic/create.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"lib/models/nic/del.js","type":"MODIFIED","insertions":31,"deletions":-42},{"file":"lib/models/nic/obj.js","type":"MODIFIED","insertions":7,"deletions":-6},{"file":"lib/models/nic/provision.js","type":"MODIFIED","insertions":385,"deletions":-183},{"file":"lib/models/nic/update.js","type":"MODIFIED","insertions":78,"deletions":-202},{"file":"lib/models/vlan.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"lib/napi.js","type":"MODIFIED","insertions":9,"deletions":-8},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":7,"deletions":-2},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":8,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":7,"deletions":-7},{"file":"test/integration/fabrics-invalid.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":435,"deletions":-15},{"file":"test/integration/migration-1.2.0-networks.test.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"test/integration/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/nics.test.js","type":"MODIFIED","insertions":5,"deletions":-3},{"file":"test/integration/provision.test.js","type":"MODIFIED","insertions":6,"deletions":-5},{"file":"test/lib/common.js","type":"MODIFIED","insertions":24,"deletions":-1},{"file":"test/lib/fabric-net.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/migration.js","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"test/lib/mock-moray.js","type":"DELETED","insertions":0,"deletions":-778},{"file":"test/lib/moray.js","type":"MODIFIED","insertions":44,"deletions":-117},{"file":"test/lib/net.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/lib/nic-tag.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/nic.js","type":"MODIFIED","insertions":4,"deletions":-6},{"file":"test/lib/portolan.js","type":"MODIFIED","insertions":123,"deletions":-15},{"file":"test/lib/server.js","type":"MODIFIED","insertions":117,"deletions":-42},{"file":"test/lib/vlan.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/unit/aggregations.test.js","type":"MODIFIED","insertions":21,"deletions":-18},{"file":"test/unit/helpers.js","type":"MODIFIED","insertions":27,"deletions":-31},{"file":"test/unit/ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6},{"file":"test/unit/network-owner.test.js","type":"MODIFIED","insertions":34,"deletions":-19},{"file":"test/unit/network-pools.test.js","type":"MODIFIED","insertions":73,"deletions":-23},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":136,"deletions":-73},{"file":"test/unit/nic-tags.test.js","type":"MODIFIED","insertions":67,"deletions":-55},{"file":"test/unit/nics.test.js","type":"MODIFIED","insertions":786,"deletions":-190},{"file":"test/unit/run.js","type":"ADDED","insertions":42,"deletions":0},{"file":"test/unit/search-ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6}],"sizeInsertions":2947,"sizeDeletions":-2213},{"number":"2","revision":"2c0b878cba6267269c8112e7ed91dd6406fe5ca6","parents":["6dcd7540d5171e71260f54150ac6b5e43cf75acc"],"ref":"refs/changes/96/1696/2","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1490382401,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1490382512,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1491446718,"by":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"}}],"comments":[{"file":"README.md","line":156,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Is it safe to assume that the nightly servers have this?"},{"file":"README.md","line":156,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"These are the unit tests, and only run in local dev environments. The integration tests get run in nightly."},{"file":"lib/models/ip/common.js","line":142,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"This could use a comment"},{"file":"lib/models/ip/common.js","line":142,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/ip/provision.js","line":18,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Why not dap\u0027s jsprim?"},{"file":"lib/models/ip/provision.js","line":18,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I\u0027ve refactored this to work with jsprim.deepCopy()."},{"file":"lib/models/network.js","line":1976,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"This needs a comment and perhaps a better name? Calling this will nuke the private property this._cache, so it isn\u0027t safe to call again right?"},{"file":"lib/models/network.js","line":1976,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This is a constructor for the NetworkCache object, so this is initializing the \"_cache\" field for each new object made."},{"file":"lib/models/nic/common.js","line":66,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"If we\u0027re going to blindly assign parsedParams.nic_tag to network.nic_tag, perhaps we should assert that network.nic_tag is valid?"},{"file":"lib/models/nic/common.js","line":66,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":74,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Same as above, should we assert that network.params.vlan_id is valid?"},{"file":"lib/models/nic/common.js","line":74,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":123,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Seems like we should assert or callback verify that opts has app and log properties and perhaps assert or callback verify the other params."},{"file":"lib/models/nic/provision.js","line":42,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"It seems like we could detect this case and not call this function at all. I don\u0027t really like calling a function only to have it be a no-op based on a variable the caller provides."},{"file":"lib/models/nic/provision.js","line":42,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"For posterity: Richard and I talked about this, and I explained that _removeIPs will always exist once RFD 32 is finished, and this guard can be removed once nicAndIP() is updated to always create it."},{"file":"lib/models/nic/provision.js","line":97,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"I don\u0027t follow the dontStop param. I feel like this function could use a comment defining the acceptable values for params passed in and what they mean."},{"file":"lib/models/nic/provision.js","line":97,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/provision.js","line":255,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"We don\u0027t want to error if the subnet is full? I\u0027d guess there is sound reasoning for this, and I\u0027d suggest a block comment here with the explanation."},{"file":"lib/models/nic/provision.js","line":255,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This is _not_ equal to \"SubnetFullError\", so if it\u0027s a SubnetFullError we then compare the network UUID. If it\u0027s something else (like \"ETagConflictError\"), then we return false."},{"file":"lib/models/nic/provision.js","line":259,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"What does the inverse case mean? i.e. the error net uuid is not strictly equal to this net uuid. Again, I\u0027m sure there is reasoning here, but it isn\u0027t obvious."},{"file":"lib/models/nic/provision.js","line":259,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Hitting the inverse case isn\u0027t currently possible since we will only be working on one network at a time, but once we have IPv6 support this will be important. For example, if we were trying to provision a dual-stack NIC, then err.network_uuid might refer to the IPv4 network, but this.network.uuid might refer to the IPv6 network."},{"file":"lib/models/nic/provision.js","line":267,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"haveNetFailure() returns false if the network is full, does this work correctly here?"},{"file":"lib/models/nic/provision.js","line":267,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"See above."},{"file":"lib/models/nic/provision.js","line":271,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"I would assign true to a variable that describes what it is. In this case var dontStop \u003d true; would work."},{"file":"lib/models/nic/provision.js","line":273,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Are we necessarily trying again here? Is it never the case that this isn\u0027t the first and only successful call?"},{"file":"lib/models/nic/provision.js","line":273,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"If this were our first call, then this.network or this.ip would be non-null, and we would have taken one of the first two branches. If we got here, then network is non-null, ip is non-null, and we didn\u0027t encounter a relevant network or etag failure."},{"file":"lib/models/nic/provision.js","line":292,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"I don\u0027t follow this. Why would it be a nicEtagFail if cause.context.bucket is strictly equal to common.BUCKET.name, but not otherwise?"},{"file":"lib/models/nic/provision.js","line":292,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Because we do the NIC put inside a batch() with multiple requests, an EtagConflictError could be the result of conflicting with multiple possible objects: the NIC, an IP address, or, when adding a fabric gateway NIC, the network. We therefore need to check exactly what bucket is responsible for the error here, since it might not be \"napi_nics\", but a \"napi_ips_*\" bucket."},{"file":"lib/models/nic/provision.js","line":315,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"In the case where opts.nic is set but nicEtagFail() is false, do we really want to replace the existing opts.nic with a new one?"},{"file":"lib/models/nic/update.js","line":209,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Does this mean that if we don\u0027t have a _ip property on opts.validated that we simply have nothing to prepare for update? This could probably use a comment to signal what we\u0027re doing here."},{"file":"lib/models/nic/update.js","line":209,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/update.js","line":229,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Is it an error state if oldNIC.isFabric() is true, newCN is undefined? and/or oldCN \u003d\u003d\u003d newCN? We only set shoodownNIC true in one particular scenario, so I\u0027m concerened that this will soldier on otherwise even if oldNIC.isFabric() is true."},{"file":"lib/models/nic/update.js","line":229,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Part of the .isFabric() logic is ensuring that cn_uuid is defined, so newCN couldn\u0027t be undefined. Additionally, as of NAPI-374, it\u0027s now a requirement that NICs on fabric networks have a cn_uuid. (But old fabric NICs could be missing one. Hopefully not, because then they won\u0027t work, as discussed in the ticket.)"},{"file":"lib/util/constants.js","line":151,"reviewer":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},"message":"Any particular reason for 100?"},{"file":"lib/util/constants.js","line":151,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I picked 100 to be higher than IP_PROVISION_RETRIES (20) + MAC_RETRIES (50), so that those retries could be fully exhausted, plus allow for some temporary errors like DatabaseNotConnectedErrors and QueryTimeoutErrors.\n\nThis number could perhaps be lower, but I wanted to set it to something high for now, since I\u0027m changing it away from infinite retries. I took a look through us-east-1 NAPI logs for last month to get a feel for how many repeats we normally end up doing, and the average was 5.2, with a maximum of 15."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":13,"deletions":0},{"file":".gitignore","type":"MODIFIED","insertions":1,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"README.md","type":"MODIFIED","insertions":9,"deletions":-3},{"file":"lib/apis/moray.js","type":"MODIFIED","insertions":4,"deletions":-3},{"file":"lib/migrate.js","type":"MODIFIED","insertions":8,"deletions":-6},{"file":"lib/models/aggregation.js","type":"MODIFIED","insertions":29,"deletions":-6},{"file":"lib/models/ip/common.js","type":"MODIFIED","insertions":29,"deletions":-16},{"file":"lib/models/ip/provision.js","type":"MODIFIED","insertions":145,"deletions":-167},{"file":"lib/models/network-pool.js","type":"MODIFIED","insertions":6,"deletions":-10},{"file":"lib/models/network.js","type":"MODIFIED","insertions":73,"deletions":-12},{"file":"lib/models/nic/common.js","type":"MODIFIED","insertions":123,"deletions":-108},{"file":"lib/models/nic/create.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"lib/models/nic/del.js","type":"MODIFIED","insertions":31,"deletions":-42},{"file":"lib/models/nic/obj.js","type":"MODIFIED","insertions":7,"deletions":-6},{"file":"lib/models/nic/provision.js","type":"MODIFIED","insertions":385,"deletions":-183},{"file":"lib/models/nic/update.js","type":"MODIFIED","insertions":78,"deletions":-202},{"file":"lib/models/vlan.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"lib/napi.js","type":"MODIFIED","insertions":9,"deletions":-8},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":7,"deletions":-2},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":8,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":7,"deletions":-7},{"file":"test/integration/fabrics-invalid.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":435,"deletions":-15},{"file":"test/integration/migration-1.2.0-networks.test.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"test/integration/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/nics.test.js","type":"MODIFIED","insertions":5,"deletions":-3},{"file":"test/integration/provision.test.js","type":"MODIFIED","insertions":6,"deletions":-5},{"file":"test/lib/common.js","type":"MODIFIED","insertions":24,"deletions":-1},{"file":"test/lib/fabric-net.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/migration.js","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"test/lib/mock-moray.js","type":"DELETED","insertions":0,"deletions":-778},{"file":"test/lib/moray.js","type":"MODIFIED","insertions":44,"deletions":-117},{"file":"test/lib/net.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/lib/nic-tag.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/nic.js","type":"MODIFIED","insertions":4,"deletions":-6},{"file":"test/lib/portolan.js","type":"MODIFIED","insertions":123,"deletions":-15},{"file":"test/lib/server.js","type":"MODIFIED","insertions":117,"deletions":-42},{"file":"test/lib/vlan.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/unit/aggregations.test.js","type":"MODIFIED","insertions":21,"deletions":-18},{"file":"test/unit/helpers.js","type":"MODIFIED","insertions":27,"deletions":-31},{"file":"test/unit/ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6},{"file":"test/unit/network-owner.test.js","type":"MODIFIED","insertions":34,"deletions":-19},{"file":"test/unit/network-pools.test.js","type":"MODIFIED","insertions":73,"deletions":-23},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":136,"deletions":-73},{"file":"test/unit/nic-tags.test.js","type":"MODIFIED","insertions":67,"deletions":-55},{"file":"test/unit/nics.test.js","type":"MODIFIED","insertions":786,"deletions":-190},{"file":"test/unit/run.js","type":"ADDED","insertions":42,"deletions":0},{"file":"test/unit/search-ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6}],"sizeInsertions":2947,"sizeDeletions":-2213},{"number":"3","revision":"7f7cc5f1919ea0303462b5b2c7cc2d3b4fbf7121","parents":["6dcd7540d5171e71260f54150ac6b5e43cf75acc"],"ref":"refs/changes/96/1696/3","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1491847813,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1491847906,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/migrate.js","line":314,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"If we\u0027re making cosmetic changes, we might as well name this function."},{"file":"lib/migrate.js","line":314,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/aggregation.js","line":286,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is there a reason why this object is not sealed when an instance created with the constructor \"Aggr\" is always sealed?"},{"file":"lib/models/aggregation.js","line":286,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I started sealing classes in NAPI because historically fields would be added to objects after they were created in different parts of the codebase, which made determining what should and shouldn\u0027t be present on an object difficult. \n\nI\u0027ve only really done it inside constructors, as an additional assertion to make sure my understanding of the code is correct. I\u0027ve avoided doing it with objects like this, since they get passed to libraries that sometimes try to modify them. For example, the Moray client will add an \"operation\" field to this object for you if you didn\u0027t specify one, and libraries like jsprim will add and delete a \"__deepCopy\" field when you call deepCopy()."},{"file":"lib/models/aggregation.js","line":286,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Sounds good, thank you for the clarification!"},{"file":"lib/models/aggregation.js","line":343,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is it a good opportunity to rename \"err2\" to something that better reflects its semantics and is less confusing? This applies to all similar changes in this CR that call \"VError.hasCauseWithName\" with a first parameter named \"err2\"."},{"file":"lib/models/aggregation.js","line":343,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/aggregation.js","line":377,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is mutating the value to add the etag semantically correct, or just a way to conveniently create a \"params\" argument for the \"Aggr\" constructor?\n\nWould \"var params \u003d jsprim.deepCopy(rec.value); params.etag \u003d rec._etag;\" be cleaner?"},{"file":"lib/models/aggregation.js","line":377,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I believe it\u0027s correct, since the Moray client doesn\u0027t try to do anything else with it once it passes it to you. Taking a look at other Triton and Manta code, it doesn\u0027t look like anyone makes a copy of the returned value.\n\nAt some point it would be good to refactor the constructors to take in an options object with separate \"value\" and \"etag\" fields, but I think I\u0027ll do that separately in the future."},{"file":"lib/models/aggregation.js","line":377,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Sounds good!"},{"file":"lib/models/ip/common.js","line":134,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Why was this removed? Is it because we don\u0027t need the to support handling of the old IP addresses format anymore?"},{"file":"lib/models/ip/common.js","line":134,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We do still need to support it. This logic is now done as part of the call to .raw() in .unassignBatch()."},{"file":"lib/models/ip/common.js","line":151,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Why don\u0027t we use this.batch()?"},{"file":"lib/models/ip/common.js","line":151,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We could. I\u0027ve updated this to manipulate the batch result."},{"file":"lib/models/ip/provision.js","line":454,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Do all errors.SubnetFullError instances have a property \"stop\" set to \"true\"?"},{"file":"lib/models/ip/provision.js","line":454,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Yes. I moved setting the field into the constructor, since it\u0027s always true that if a network is full we want to stop processing it (and maybe move onto the next one if we\u0027re processing a pool)."},{"file":"lib/models/network-pool.js","line":176,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Can we name this function while we\u0027re at it?"},{"file":"lib/models/network-pool.js","line":176,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/network-pool.js","line":182,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same here."},{"file":"lib/models/network-pool.js","line":182,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/network.js","line":1915,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Can we rename err2 to delErr and name the callback function while we\u0027re here?"},{"file":"lib/models/network.js","line":1915,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I wasn\u0027t too happy with this code in general, so I\u0027ve redone it to be in a vasync pipeline."},{"file":"lib/models/network.js","line":1920,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: move declaration of bucketName to the top of the callback\u0027s scope."},{"file":"lib/models/network.js","line":1922,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: rename err3 to delBucketErr."},{"file":"lib/models/network.js","line":1941,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Would it help to assert on the parameters\u0027 types? It seems it could be easy to mix things up."},{"file":"lib/models/network.js","line":1941,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/network.js","line":1992,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: this callback needs a name."},{"file":"lib/models/network.js","line":1992,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":60,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: should we assert on the parameters\u0027 type?"},{"file":"lib/models/nic/common.js","line":60,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":125,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: should we assert on the parameters\u0027 type?"},{"file":"lib/models/nic/common.js","line":125,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":143,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name that callback."},{"file":"lib/models/nic/common.js","line":143,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":253,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What\u0027s the purpose of renaming \"params\" to \"_\"?"},{"file":"lib/models/nic/common.js","line":253,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"The parameter is unused in the function, but we need to keep it to match the expected signature that the validation function uses. I renamed it to \"_\" so that the linter doesn\u0027t warn on the unused variable."},{"file":"lib/models/nic/common.js","line":305,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: assert on parameters\u0027 type."},{"file":"lib/models/nic/common.js","line":305,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":307,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What happens if \"parsedParams.vnet_id\" is truthy but not valid (e.g \u003d\u003d\u003d true)? Asserting on the type of parsedParams.vnet_id would avoid this anti-pattern."},{"file":"lib/models/nic/common.js","line":307,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I realized that vnet_id is allowed to be 0, which would be falsey, so I decided to change this and findContaining() to just check against undefined and null."},{"file":"lib/models/nic/common.js","line":311,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name this function."},{"file":"lib/models/nic/common.js","line":311,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/common.js","line":317,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is uuids always a non-null array? I.e: can it be null, undefined or a object that is not an array when \"err\" is falsy?"},{"file":"lib/models/nic/common.js","line":317,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Yes, this will always be an array, unless there was an error."},{"file":"lib/models/nic/common.js","line":331,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name this function and rename err2 to \"getNetErr\"."},{"file":"lib/models/nic/common.js","line":331,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/del.js","line":70,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: Should we assert that \"opts\" is an object and that \"opts.existingNic\" is an optional object?\n\nOtherwise dereferencing \"opts\" might throw an error if it\u0027s not a non-null object. Asserting seems like it would make the error case clearer."},{"file":"lib/models/nic/del.js","line":70,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/del.js","line":84,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same as above regarding asserting on delIP\u0027s parameters\u0027 type."},{"file":"lib/models/nic/del.js","line":84,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/provision.js","line":41,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"It seems this function is not performing any async work, does it really need to call a callback?"},{"file":"lib/models/nic/provision.js","line":41,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This needs to come after listVnetCns() in the pipeline, so I wrote it to fit in as its own step. Even if I made this not take a callback, I would need to add an anonymous function to the pipeline to call this, and then invoke the callback."},{"file":"lib/models/nic/provision.js","line":42,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: should we assert on opts\u0027 and callback\u0027s type?"},{"file":"lib/models/nic/provision.js","line":42,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/provision.js","line":52,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name this function."},{"file":"lib/models/nic/provision.js","line":52,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/provision.js","line":91,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What is a provisioner? A comment describing its purpose could be helpful.\n\nWhy is this object not sealed as a lot of others I\u0027ve seen in this CR?\n\nnit: generally, declaring/defining instances properties in the constructor function is helpful if only for documentation purposes. It has the added benefit of generating code that performs generally better as it incurs less hidden class changes, even though I don\u0027t think it\u0027s critical here. In other words, I think it could be considered part of our best practices.\n\nAfter reading more of the code below, it seems this is an interface that subclasses are meant to implement? If so, then it\u0027d be helpful to mention that at least."},{"file":"lib/models/nic/provision.js","line":91,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I\u0027ve added documentation about writing Provisioners, and made this constructor throw, since it should never be instantiated."},{"file":"lib/models/nic/provision.js","line":108,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name that callback."},{"file":"lib/models/nic/provision.js","line":108,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/provision.js","line":126,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Does this function need a callback? Why not just have it return undefined?"},{"file":"lib/models/nic/provision.js","line":126,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"batchIP() is called when the current Provisioner is finished with its work for the time being, so I figured I\u0027d write it this way rather than calling callback() immediately after batchIP() everywhere it\u0027s used."},{"file":"lib/models/nic/provision.js","line":137,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"The name of the function and the comment that describes it seem to convey to different concepts. As a result I find the implementation a bit difficult to read.\n\nI would expect a function named \"checkEtagFail\" to just check that \"err\" is an instance of a \"EtagConflictError\", not to do anything else. Maybe renaming that function to better reflect what it\u0027s doing would be helpful for readability?"},{"file":"lib/models/nic/provision.js","line":137,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I\u0027ve renamed this to causedEtagFailure, since what it\u0027s checking is whether the specific address that it selected is responsible for the current failure."},{"file":"lib/models/nic/provision.js","line":163,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"In general, it might be helpful to prevent constructor functions from being called as regular functions and not as constructors with something along the lines of \"if (!(this instanceof IPProvision)) { throw new Error(\u0027some error message\u0027) }\""},{"file":"lib/models/nic/provision.js","line":163,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"NAPI uses strict mode, so if the constructor is called as a regular function, \"this\" will be undefined, and throw a TypeError on the first assignment.\n\nAt some point I would like to turn on ESLint\u0027s \"new-cap\" option in NAPI, but there are several functions that will need to be renamed first. I plan on enabling jsstyle\u0027s \"strict-indent\" in NAPI and fixing some indentation issues, so I\u0027ll probably do that at the same time."},{"file":"lib/models/nic/provision.js","line":163,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Excellent, I didn\u0027t know that about \"\u0027use strict\u0027;\", thanks for clarifying!"},{"file":"lib/models/nic/provision.js","line":323,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is opts.nic needed if \"opts.ips.length \u003c\u003d 0\"?\n\nSince this function doesn\u0027t seem to perform any async work, I\u0027d like to suggest potential alternatives to calling a callback:\n\n1. Pass the new Nic instance as the 2nd parameter of the callback, and an error as the first parameter of the callback\n\n2. Return an object {err: potentialError, nic: newlyCreatedNic} and not pass a callback\n\nAlso, could modifying the passed-in \"opts\" parameter be an issue or callers expect it to be mutated? I usually try to avoid mutating parameters if possible."},{"file":"lib/models/nic/provision.js","line":323,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"opts.nic is created even if there are no IPs, since NAPI allows for creating NICs that aren\u0027t on a network (such as server NICs that haven\u0027t been set up yet).\n\nThis function\u0027s signature is written this way so that it can be used in the nicAndIP() pipeline. It needs to come after the provisioners have run, and before the .batch() call. I could make an anonymous function in between, call the synchronous functions in there, and then the callback, but I decided to just write them as separate functions in the pipeline, so that it can be read as a series of steps (and show up separately in the pipeline\u0027s status object)."},{"file":"lib/models/nic/provision.js","line":323,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Sounds good!"},{"file":"lib/models/nic/provision.js","line":338,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same commments as above regarding the callback model and mutating \"opts\"."},{"file":"lib/models/nic/provision.js","line":413,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same comments as above regarding the callback model and mutating \"opts\"."},{"file":"lib/models/nic/provision.js","line":413,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This is written this way so that it can be a step in the mod_nic.create() pipeline."},{"file":"lib/models/nic/provision.js","line":456,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Should we assert on \"opts.ips[0].params\" and \"opts.ips[0].params.network\" being objects?"},{"file":"lib/models/nic/provision.js","line":456,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"These should always be there and get asserted when an IP is constructed. To make it clearer that they should be there, I\u0027ve added an .isFabric() method to IP and now call that here."},{"file":"lib/models/nic/provision.js","line":467,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: this function should be named."},{"file":"lib/models/nic/provision.js","line":467,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/provision.js","line":489,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What is the purpose of this function?\n\nShould we assert on the type of its parameters?"},{"file":"lib/models/nic/provision.js","line":489,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I\u0027ve added a comment explaining what this does, and added some assertions."},{"file":"lib/models/nic/provision.js","line":510,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Should we start by asserting on \"opts\"?\nShould we also assert on \"callback\"?"},{"file":"lib/models/nic/provision.js","line":510,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/provision.js","line":550,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: this function should be named.\nnit: \"cb2\" is a confusing name. Suggestion: rename it to \"next\"."},{"file":"lib/models/nic/provision.js","line":550,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I moved things around so that this is just \"runProvisions\"."},{"file":"lib/models/nic/update.js","line":91,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: this function should be named."},{"file":"lib/models/nic/update.js","line":91,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/nic/update.js","line":119,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same comment as for other functions regarding the callback model used by this function.\n\nAlso nit: should we assert on this function\u0027s parameters\u0027 type?"},{"file":"lib/models/nic/update.js","line":253,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"This function should be named."},{"file":"lib/models/nic/update.js","line":253,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/models/vlan.js","line":245,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: while we\u0027re at it, can we rename \"err2\" to something that is a bit clearer about what error it is?"},{"file":"lib/models/vlan.js","line":245,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"lib/napi.js","line":371,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Would something along the lines of RFD 78 help to handle this case a bit better? That is, having the server respond to the requests that require a specific behavior with metadata that includes what the server was able to do.\n\nI guess it is currently safe to throw an error if the moray server\u0027s version \u003c 2 because it\u0027s an old version and all our deployments are probably on a version that satisfies this requirement, but the current failure mode seems to be letting the service transition to maintenance, which seems unfortunate."},{"file":"lib/napi.js","line":371,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"The goal of this code was to make sure that Moray had been updated to a version that supports all of the types used by the buckets before starting any updates and reindexing. Since this only did a single version() call though, it only ever checked the version of a single Moray. If the versions of deployed Morays were different, then this doesn\u0027t really work.\n\nRFD 78 helps with some of this, since \"requireIndexes\" could be used to make sure that all of the indexes being searched on were being honored. (Moray treats types that it doesn\u0027t recognize as \"string\" in several places, so you can create/update buckets w/ new types through a new Moray, and then get weird behaviour when trying to search through an old one.)"},{"file":"lib/napi.js","line":371,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"I do understand the limitation of checking the version against a minimum supported version why this can\u0027t work when using multiple instances of moray.\n\nI just wanted to suggest that a different model where we\u0027d check the output of the request for things that indicate support for what\u0027s required might be worth exploring. I didn\u0027t mean to suggest using what\u0027s described in RFD 78 per se.\n\nIt seems it would be difficult to use such a mechanism with requests that mutate the schema of buckets though, because then we\u0027d need to roll back changes in case the response indicated that the moray instance that handled that request does not provide the minimum requirements.\n\nAnyway, that was more me thinking out loud in case that could be helpful :)"},{"file":"package.json","line":26,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"It seems for a few of the dependencies that changed, we moved from fully specifying the version number to using a range (using the caret character). Is that intended?"},{"file":"package.json","line":26,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I\u0027d initially intended to do so, but on second thought I think it\u0027s probably best to fix them to a specific version. I\u0027ve updated the non-dev dependencies."},{"file":"test/lib/common.js","line":293,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"I\u0027m not familiar with the code base and the semantics of the \"s\" suffix is obscure to me. Maybe that would be worth a comment? Basically, what does it mean for opts.type to end with an \u0027s\u0027?"},{"file":"test/lib/common.js","line":293,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/lib/moray.js","line":25,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: assert on \"callback\"\u0027s type."},{"file":"test/lib/moray.js","line":25,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/lib/moray.js","line":26,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name this function."},{"file":"test/lib/moray.js","line":26,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/lib/moray.js","line":82,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Would it make sense to set the \"limit\" option of \"findObjects\" to \"1\" and use the \"_count\" field of the first and only record instead of performing the full search?"},{"file":"test/lib/moray.js","line":82,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/lib/server.js","line":43,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name this function."},{"file":"test/lib/server.js","line":43,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/lib/server.js","line":115,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name this function."},{"file":"test/lib/server.js","line":115,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/unit/aggregations.test.js","line":395,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Why does that need to be sorted? Would it be worth adding a comment?"},{"file":"test/unit/aggregations.test.js","line":395,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"It needs to be sorted since they get sorted when the error message is created. If they\u0027re not sorted, then the this test can fail randomly, depending on what random values were generated for the MAC addresses.\n\nI\u0027ve moved the sort() call to below to make it clearer that it\u0027s just for the error message."},{"file":"test/unit/helpers.js","line":77,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: maybe assert on the type of \"opts\" and \"callback\"?"},{"file":"test/unit/helpers.js","line":77,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/unit/helpers.js","line":124,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: assert on \"willFail\"\u0027s type?"},{"file":"test/unit/helpers.js","line":124,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/unit/networks.test.js","line":913,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: name this function."},{"file":"test/unit/networks.test.js","line":1150,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: rename \"err3\" to a name that better conveys the semantics of that error."},{"file":"test/unit/networks.test.js","line":1150,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":13,"deletions":0},{"file":".gitignore","type":"MODIFIED","insertions":1,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"README.md","type":"MODIFIED","insertions":9,"deletions":-3},{"file":"lib/apis/moray.js","type":"MODIFIED","insertions":4,"deletions":-3},{"file":"lib/migrate.js","type":"MODIFIED","insertions":8,"deletions":-6},{"file":"lib/models/aggregation.js","type":"MODIFIED","insertions":29,"deletions":-6},{"file":"lib/models/ip/common.js","type":"MODIFIED","insertions":33,"deletions":-16},{"file":"lib/models/ip/provision.js","type":"MODIFIED","insertions":148,"deletions":-167},{"file":"lib/models/network-pool.js","type":"MODIFIED","insertions":6,"deletions":-10},{"file":"lib/models/network.js","type":"MODIFIED","insertions":78,"deletions":-12},{"file":"lib/models/nic/common.js","type":"MODIFIED","insertions":125,"deletions":-108},{"file":"lib/models/nic/create.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"lib/models/nic/del.js","type":"MODIFIED","insertions":31,"deletions":-42},{"file":"lib/models/nic/obj.js","type":"MODIFIED","insertions":7,"deletions":-6},{"file":"lib/models/nic/provision.js","type":"MODIFIED","insertions":393,"deletions":-183},{"file":"lib/models/nic/update.js","type":"MODIFIED","insertions":82,"deletions":-202},{"file":"lib/models/vlan.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"lib/napi.js","type":"MODIFIED","insertions":9,"deletions":-8},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":7,"deletions":-2},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":8,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":7,"deletions":-7},{"file":"test/integration/fabrics-invalid.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":435,"deletions":-15},{"file":"test/integration/migration-1.2.0-networks.test.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"test/integration/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/nics.test.js","type":"MODIFIED","insertions":5,"deletions":-3},{"file":"test/integration/provision.test.js","type":"MODIFIED","insertions":6,"deletions":-5},{"file":"test/lib/common.js","type":"MODIFIED","insertions":24,"deletions":-1},{"file":"test/lib/fabric-net.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/migration.js","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"test/lib/mock-moray.js","type":"DELETED","insertions":0,"deletions":-778},{"file":"test/lib/moray.js","type":"MODIFIED","insertions":44,"deletions":-117},{"file":"test/lib/net.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/lib/nic-tag.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/nic.js","type":"MODIFIED","insertions":4,"deletions":-6},{"file":"test/lib/portolan.js","type":"MODIFIED","insertions":123,"deletions":-15},{"file":"test/lib/server.js","type":"MODIFIED","insertions":117,"deletions":-42},{"file":"test/lib/vlan.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/unit/aggregations.test.js","type":"MODIFIED","insertions":21,"deletions":-18},{"file":"test/unit/helpers.js","type":"MODIFIED","insertions":27,"deletions":-31},{"file":"test/unit/ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6},{"file":"test/unit/network-owner.test.js","type":"MODIFIED","insertions":34,"deletions":-19},{"file":"test/unit/network-pools.test.js","type":"MODIFIED","insertions":73,"deletions":-23},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":136,"deletions":-73},{"file":"test/unit/nic-tags.test.js","type":"MODIFIED","insertions":67,"deletions":-55},{"file":"test/unit/nics.test.js","type":"MODIFIED","insertions":786,"deletions":-190},{"file":"test/unit/run.js","type":"ADDED","insertions":42,"deletions":0},{"file":"test/unit/search-ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6}],"sizeInsertions":2973,"sizeDeletions":-2213},{"number":"4","revision":"95cc56c009f5bfcb9cc3756e4eb8b5bdf364e81e","parents":["6dcd7540d5171e71260f54150ac6b5e43cf75acc"],"ref":"refs/changes/96/1696/4","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1492557222,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1492557297,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493061924,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":13,"deletions":0},{"file":".gitignore","type":"MODIFIED","insertions":1,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"README.md","type":"MODIFIED","insertions":9,"deletions":-3},{"file":"lib/apis/moray.js","type":"MODIFIED","insertions":4,"deletions":-3},{"file":"lib/migrate.js","type":"MODIFIED","insertions":8,"deletions":-6},{"file":"lib/models/aggregation.js","type":"MODIFIED","insertions":49,"deletions":-26},{"file":"lib/models/ip/common.js","type":"MODIFIED","insertions":32,"deletions":-16},{"file":"lib/models/ip/provision.js","type":"MODIFIED","insertions":148,"deletions":-167},{"file":"lib/models/network-pool.js","type":"MODIFIED","insertions":8,"deletions":-10},{"file":"lib/models/network.js","type":"MODIFIED","insertions":126,"deletions":-46},{"file":"lib/models/nic/common.js","type":"MODIFIED","insertions":144,"deletions":-109},{"file":"lib/models/nic/create.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"lib/models/nic/del.js","type":"MODIFIED","insertions":37,"deletions":-42},{"file":"lib/models/nic/obj.js","type":"MODIFIED","insertions":7,"deletions":-6},{"file":"lib/models/nic/provision.js","type":"MODIFIED","insertions":431,"deletions":-193},{"file":"lib/models/nic/update.js","type":"MODIFIED","insertions":83,"deletions":-203},{"file":"lib/models/vlan.js","type":"MODIFIED","insertions":10,"deletions":-7},{"file":"lib/napi.js","type":"MODIFIED","insertions":9,"deletions":-8},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":7,"deletions":-2},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":25,"deletions":-11},{"file":"package.json","type":"MODIFIED","insertions":7,"deletions":-7},{"file":"test/integration/fabrics-invalid.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":435,"deletions":-15},{"file":"test/integration/migration-1.2.0-networks.test.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"test/integration/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/nics.test.js","type":"MODIFIED","insertions":5,"deletions":-3},{"file":"test/integration/provision.test.js","type":"MODIFIED","insertions":6,"deletions":-5},{"file":"test/lib/common.js","type":"MODIFIED","insertions":25,"deletions":-1},{"file":"test/lib/err.js","type":"MODIFIED","insertions":1,"deletions":-3},{"file":"test/lib/fabric-net.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/migration.js","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"test/lib/mock-moray.js","type":"DELETED","insertions":0,"deletions":-778},{"file":"test/lib/moray.js","type":"MODIFIED","insertions":46,"deletions":-117},{"file":"test/lib/net.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/lib/nic-tag.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/nic.js","type":"MODIFIED","insertions":4,"deletions":-6},{"file":"test/lib/portolan.js","type":"MODIFIED","insertions":123,"deletions":-15},{"file":"test/lib/server.js","type":"MODIFIED","insertions":117,"deletions":-42},{"file":"test/lib/vlan.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/unit/aggregations.test.js","type":"MODIFIED","insertions":21,"deletions":-18},{"file":"test/unit/helpers.js","type":"MODIFIED","insertions":32,"deletions":-31},{"file":"test/unit/ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6},{"file":"test/unit/network-owner.test.js","type":"MODIFIED","insertions":34,"deletions":-19},{"file":"test/unit/network-pools.test.js","type":"MODIFIED","insertions":73,"deletions":-23},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":136,"deletions":-73},{"file":"test/unit/nic-tags.test.js","type":"MODIFIED","insertions":67,"deletions":-55},{"file":"test/unit/nics.test.js","type":"MODIFIED","insertions":786,"deletions":-190},{"file":"test/unit/run.js","type":"ADDED","insertions":42,"deletions":0},{"file":"test/unit/search-ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6}],"sizeInsertions":3139,"sizeDeletions":-2293},{"number":"5","revision":"b56e28116f154e5bf1dc6906c1b10ba36eaf8331","parents":["6dcd7540d5171e71260f54150ac6b5e43cf75acc"],"ref":"refs/changes/96/1696/5","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1493066941,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1492557297,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493078378,"by":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493078378,"by":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493061924,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":15,"deletions":0},{"file":".gitignore","type":"MODIFIED","insertions":1,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"README.md","type":"MODIFIED","insertions":9,"deletions":-3},{"file":"lib/apis/moray.js","type":"MODIFIED","insertions":4,"deletions":-3},{"file":"lib/migrate.js","type":"MODIFIED","insertions":8,"deletions":-6},{"file":"lib/models/aggregation.js","type":"MODIFIED","insertions":49,"deletions":-26},{"file":"lib/models/ip/common.js","type":"MODIFIED","insertions":32,"deletions":-16},{"file":"lib/models/ip/provision.js","type":"MODIFIED","insertions":148,"deletions":-167},{"file":"lib/models/network-pool.js","type":"MODIFIED","insertions":8,"deletions":-10},{"file":"lib/models/network.js","type":"MODIFIED","insertions":126,"deletions":-46},{"file":"lib/models/nic/common.js","type":"MODIFIED","insertions":144,"deletions":-109},{"file":"lib/models/nic/create.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"lib/models/nic/del.js","type":"MODIFIED","insertions":37,"deletions":-42},{"file":"lib/models/nic/obj.js","type":"MODIFIED","insertions":7,"deletions":-6},{"file":"lib/models/nic/provision.js","type":"MODIFIED","insertions":431,"deletions":-193},{"file":"lib/models/nic/update.js","type":"MODIFIED","insertions":83,"deletions":-203},{"file":"lib/models/vlan.js","type":"MODIFIED","insertions":10,"deletions":-7},{"file":"lib/napi.js","type":"MODIFIED","insertions":9,"deletions":-8},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":7,"deletions":-2},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":25,"deletions":-11},{"file":"package.json","type":"MODIFIED","insertions":7,"deletions":-7},{"file":"test/integration/fabrics-invalid.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":435,"deletions":-15},{"file":"test/integration/migration-1.2.0-networks.test.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"test/integration/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/nics.test.js","type":"MODIFIED","insertions":5,"deletions":-3},{"file":"test/integration/provision.test.js","type":"MODIFIED","insertions":6,"deletions":-5},{"file":"test/lib/common.js","type":"MODIFIED","insertions":25,"deletions":-1},{"file":"test/lib/err.js","type":"MODIFIED","insertions":1,"deletions":-3},{"file":"test/lib/fabric-net.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/migration.js","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"test/lib/mock-moray.js","type":"DELETED","insertions":0,"deletions":-778},{"file":"test/lib/moray.js","type":"MODIFIED","insertions":46,"deletions":-117},{"file":"test/lib/net.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/lib/nic-tag.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/nic.js","type":"MODIFIED","insertions":4,"deletions":-6},{"file":"test/lib/portolan.js","type":"MODIFIED","insertions":123,"deletions":-15},{"file":"test/lib/server.js","type":"MODIFIED","insertions":117,"deletions":-42},{"file":"test/lib/vlan.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/unit/aggregations.test.js","type":"MODIFIED","insertions":21,"deletions":-18},{"file":"test/unit/helpers.js","type":"MODIFIED","insertions":32,"deletions":-31},{"file":"test/unit/ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6},{"file":"test/unit/network-owner.test.js","type":"MODIFIED","insertions":34,"deletions":-19},{"file":"test/unit/network-pools.test.js","type":"MODIFIED","insertions":73,"deletions":-23},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":136,"deletions":-73},{"file":"test/unit/nic-tags.test.js","type":"MODIFIED","insertions":67,"deletions":-55},{"file":"test/unit/nics.test.js","type":"MODIFIED","insertions":786,"deletions":-190},{"file":"test/unit/run.js","type":"ADDED","insertions":42,"deletions":0},{"file":"test/unit/search-ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6}],"sizeInsertions":3139,"sizeDeletions":-2293},{"number":"6","revision":"ad55ff896857f0d895b628d8fdc2b9d8970c0339","parents":["6dcd7540d5171e71260f54150ac6b5e43cf75acc"],"ref":"refs/changes/96/1696/6","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1493081367,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"SUBM","value":"1","grantedOn":1493162171,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1492557297,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493078378,"by":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493078378,"by":{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493061924,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":16,"deletions":0},{"file":".gitignore","type":"MODIFIED","insertions":1,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"README.md","type":"MODIFIED","insertions":9,"deletions":-3},{"file":"lib/apis/moray.js","type":"MODIFIED","insertions":4,"deletions":-3},{"file":"lib/migrate.js","type":"MODIFIED","insertions":8,"deletions":-6},{"file":"lib/models/aggregation.js","type":"MODIFIED","insertions":49,"deletions":-26},{"file":"lib/models/ip/common.js","type":"MODIFIED","insertions":32,"deletions":-16},{"file":"lib/models/ip/provision.js","type":"MODIFIED","insertions":148,"deletions":-167},{"file":"lib/models/network-pool.js","type":"MODIFIED","insertions":8,"deletions":-10},{"file":"lib/models/network.js","type":"MODIFIED","insertions":126,"deletions":-46},{"file":"lib/models/nic/common.js","type":"MODIFIED","insertions":144,"deletions":-109},{"file":"lib/models/nic/create.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"lib/models/nic/del.js","type":"MODIFIED","insertions":37,"deletions":-42},{"file":"lib/models/nic/obj.js","type":"MODIFIED","insertions":7,"deletions":-6},{"file":"lib/models/nic/provision.js","type":"MODIFIED","insertions":431,"deletions":-193},{"file":"lib/models/nic/update.js","type":"MODIFIED","insertions":83,"deletions":-203},{"file":"lib/models/vlan.js","type":"MODIFIED","insertions":10,"deletions":-7},{"file":"lib/napi.js","type":"MODIFIED","insertions":9,"deletions":-8},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":7,"deletions":-2},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":25,"deletions":-11},{"file":"package.json","type":"MODIFIED","insertions":7,"deletions":-7},{"file":"test/integration/fabrics-invalid.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":435,"deletions":-15},{"file":"test/integration/migration-1.2.0-networks.test.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"test/integration/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"test/integration/nics.test.js","type":"MODIFIED","insertions":5,"deletions":-3},{"file":"test/integration/provision.test.js","type":"MODIFIED","insertions":6,"deletions":-5},{"file":"test/lib/common.js","type":"MODIFIED","insertions":25,"deletions":-1},{"file":"test/lib/err.js","type":"MODIFIED","insertions":1,"deletions":-3},{"file":"test/lib/fabric-net.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/migration.js","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"test/lib/mock-moray.js","type":"DELETED","insertions":0,"deletions":-778},{"file":"test/lib/moray.js","type":"MODIFIED","insertions":46,"deletions":-117},{"file":"test/lib/net.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/lib/nic-tag.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/lib/nic.js","type":"MODIFIED","insertions":4,"deletions":-6},{"file":"test/lib/portolan.js","type":"MODIFIED","insertions":123,"deletions":-15},{"file":"test/lib/server.js","type":"MODIFIED","insertions":117,"deletions":-42},{"file":"test/lib/vlan.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/unit/aggregations.test.js","type":"MODIFIED","insertions":21,"deletions":-18},{"file":"test/unit/helpers.js","type":"MODIFIED","insertions":32,"deletions":-31},{"file":"test/unit/ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6},{"file":"test/unit/network-owner.test.js","type":"MODIFIED","insertions":34,"deletions":-19},{"file":"test/unit/network-pools.test.js","type":"MODIFIED","insertions":73,"deletions":-23},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":136,"deletions":-73},{"file":"test/unit/nic-tags.test.js","type":"MODIFIED","insertions":67,"deletions":-55},{"file":"test/unit/nics.test.js","type":"MODIFIED","insertions":786,"deletions":-190},{"file":"test/unit/run.js","type":"ADDED","insertions":42,"deletions":0},{"file":"test/unit/search-ips.test.js","type":"MODIFIED","insertions":2,"deletions":-6}],"sizeInsertions":3139,"sizeDeletions":-2293}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Richard Kiene","email":"richard.kiene@joyent.com","username":"richardkiene"},{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}]}