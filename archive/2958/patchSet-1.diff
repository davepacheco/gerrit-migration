From 2504a8340ba52ba277498c5d36eed824126112cf Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Thu, 16 Nov 2017 15:33:43 -0800
Subject: [PATCH] joyent/node-watershed#2 Use crypto.randomBytes() for key
 generation

---
 lib/watershed.js | 11 ++---------
 1 file changed, 2 insertions(+), 9 deletions(-)

diff --git a/lib/watershed.js b/lib/watershed.js
index fd58fdc..ade164e 100644
--- a/lib/watershed.js
+++ b/lib/watershed.js
@@ -113,11 +113,7 @@ Watershed()
 Watershed.prototype.generateKey = function
 generateKey()
 {
-	var nonce = new Buffer(NONCE_LENGTH);
-	for (var i = 0; i < nonce.length; i++) {
-		nonce[i] = Math.floor(Math.random() * 256);
-	}
-	return (nonce.toString('base64'));
+	return (crypto.randomBytes(NONCE_LENGTH).toString('base64'));
 };
 
 /*
@@ -551,10 +547,7 @@ _ws_writeFrameCommon(opcode, data)
 	 * According to the RFC, the client MUST mask their outgoing frames.
 	 */
 	if (this._options.localShouldMask) {
-		maskbuf = new Buffer(4);
-		for (var i = 0; i < maskbuf.length; i++) {
-			maskbuf[i] = Math.floor(Math.random * 256);
-		}
+		maskbuf = crypto.randomBytes(4);
 		for (var j = 0; j < data.length; j++) {
 			data[j] = data[j] ^ maskbuf[j % maskbuf.length];
 		}
-- 
2.21.0

