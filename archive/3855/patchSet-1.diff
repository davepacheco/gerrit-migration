commit 879746a227cf6aad2fe96a64f5c8d2026a1e6eda (refs/changes/55/3855/1)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2018-04-20T23:16:07+00:00 (1 year, 6 months ago)
    
    NAPI-431 Overlapping fabric networks should be scoped by vnet_id and not owner

diff --git a/lib/models/network.js b/lib/models/network.js
index a7a0ed2..f3c1f46 100644
--- a/lib/models/network.js
+++ b/lib/models/network.js
@@ -140,6 +140,15 @@ var IMMUTABLE_FABRIC_FIELDS = [
 var CONTAINING_NET_SQL = 'SELECT uuid FROM %s' +
     ' WHERE subnet >> $1 AND vlan_id = $2 AND nic_tag = $3';
 
+var OVERLAP_SQL_PREFIX =
+    'SELECT _id, uuid FROM %s WHERE (subnet >> $1 OR subnet_start << $2)';
+
+var OVERLAP_NORMAL_NET_SQL = OVERLAP_SQL_PREFIX +
+    ' AND fabric != true;';
+
+var OVERLAP_FABRIC_NET_SQL = OVERLAP_SQL_PREFIX +
+    ' AND fabric = true AND vnet_id = $3;';
+
 
 // --- Schema validation objects
 
@@ -764,16 +773,18 @@ function validateProvisionRangeUpdate(opts, params, parsed, cb) {
     if (!parsed.hasOwnProperty('provision_start_ip') &&
         !parsed.hasOwnProperty('provision_end_ip') &&
         !parsed.hasOwnProperty('gateway')) {
-        return cb();
+        cb();
+        return;
     }
 
     var toValidate = {
+        vnet_id: params.network.params.vnet_id,
         subnet_bits: params.network.params.subnet_bits,
         subnet_start: params.network.params.subnet_start,
         provision_start_ip: parsed.provision_start_ip ||
-        params.network.params.provision_start_ip,
+            params.network.params.provision_start_ip,
         provision_end_ip: parsed.provision_end_ip ||
-        params.network.params.provision_end_ip
+            params.network.params.provision_end_ip
     };
 
     if (parsed.hasOwnProperty('gateway')) {
@@ -905,25 +916,27 @@ function validateProvisionRange(opts, _, parsedParams, callback) {
 
     // Finally, check for overlaps with existing networks.
 
-    var overlapSQL = fmt('select * from %s where (' +
-        // subnet starts inside another network
-        'subnet >> inet(\'%s\') OR ' +
-        // another network starts inside subnet
-        'subnet_start << inet(\'%s\')) %s',
-        BUCKET.name,
-        subnetStart.toString(),
-        subnet.toString(),
-        opts.owner_uuid ?
-            fmt(' AND \'%s\' = ANY(owner_uuids_arr) AND fabric = true',
-                opts.owner_uuid)
-            : ' AND fabric != true');
+    var sql, args;
+
+    if (opts.fabric) {
+        sql = fmt(OVERLAP_FABRIC_NET_SQL, BUCKET.name);
+        args = [
+            subnetStart.toString(),
+            subnet.toString(),
+            parsedParams.vnet_id
+        ];
+    } else {
+        sql = fmt(OVERLAP_NORMAL_NET_SQL, BUCKET.name);
+        args = [ subnetStart.toString(), subnet.toString() ];
+    }
 
     opts.log.debug({
-        sql: overlapSQL,
+        sql: sql,
+        args: args,
         subnet: subnet.toString()
     }, 'validateProvisionRange: finding overlapping subnets');
 
-    var req = opts.app.moray.sql(overlapSQL);
+    var req = opts.app.moray.sql(sql, args);
     var overlapping = [];
 
     req.on('record', function (r) {
