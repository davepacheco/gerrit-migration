{"project":"joyent/sdc-docker-build","branch":"master","id":"I2c5cafc2275587ab6b3f714cce3f6f38cfe9a1a9","number":"176","subject":"DOCKER-900: docker build: ensure chroot-gtar is only run once per directory","owner":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"url":"https://cr.joyent.us/176","commitMessage":"DOCKER-900: docker build: ensure chroot-gtar is only run once per directory\n","createdOn":1469830764,"lastUpdated":1470421637,"open":false,"status":"MERGED","comments":[{"timestamp":1469830764,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Uploaded patch set 1."},{"timestamp":1469833232,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 1:\n\n(4 comments)"},{"timestamp":1469835416,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Uploaded patch set 2."},{"timestamp":1469835704,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 1:\n\n(4 comments)"},{"timestamp":1469837357,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 2: Code-Review+1\n\n(3 comments)"},{"timestamp":1469837510,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1470168822,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Uploaded patch set 3."},{"timestamp":1470173433,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 3:\n\n(2 comments)"},{"timestamp":1470328061,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Uploaded patch set 4."},{"timestamp":1470329339,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 4:\n\n(2 comments)"},{"timestamp":1470331685,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 4: Code-Review+1\n\n(1 comment)"},{"timestamp":1470332229,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Uploaded patch set 5."},{"timestamp":1470332796,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 5: Code-Review+1"},{"timestamp":1470420737,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 5: Integration-Approval+1"},{"timestamp":1470421637,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Todd Whiteman"}],"currentPatchSet":{"number":"5","revision":"2c5cafc2275587ab6b3f714cce3f6f38cfe9a1a9","parents":["f26f6de19a3860ddb8f7f57848903cf25cc34b8d"],"ref":"refs/changes/76/176/5","uploader":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"createdOn":1470332229,"author":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1470332796,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1470420737,"by":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"}},{"type":"SUBM","value":"1","grantedOn":1470421637,"by":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/build.js","type":"MODIFIED","insertions":37,"deletions":-33},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/files/addLotsOfFiles.tar.gz","type":"ADDED","insertions":0,"deletions":0},{"file":"test/test_build.js","type":"MODIFIED","insertions":39,"deletions":0}],"sizeInsertions":77,"sizeDeletions":-33},"patchSets":[{"number":"1","revision":"7c15a2616be5e705d16a2a25cb9da7756025291a","parents":["f26f6de19a3860ddb8f7f57848903cf25cc34b8d"],"ref":"refs/changes/76/176/1","uploader":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"createdOn":1469830764,"author":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"isDraft":false,"kind":"REWORK","comments":[{"file":"lib/build.js","line":2007,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is that comment about \"copy[ing] a file\" still up to date? Should it be \"then copy content to it\" or something more general?"},{"file":"lib/build.js","line":2007,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Right - that should be contents."},{"file":"lib/build.js","line":2060,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"chownr seems to handle recursively changing the ownership of directories and their files, but also of single files. Would it make sense to factor out the code than changes the ownership to a single function called by both doCopyOneDirectory and doCopyOneFile? It looks like both of these functions\u0027 internal \"onExtractedCb\" could be the same."},{"file":"lib/build.js","line":2060,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Yes, will do."},{"file":"lib/build.js","line":2079,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"chownr uses fs.readdir to list all entries in a given directory, and then recursively calls fs.chown on files and directories.\n\nUnfortunately fs.readdir does not stream directories\u0027 contents, and as such can grow memory usage if a directory is really large. Is that a sufficiently common use case to be worried about this?"},{"file":"lib/build.js","line":2079,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"That is a good point - though a lot of the existing (previously executed) code in sdc-docker-build also relies on fs.readdir, so it\u0027ll require some major changes to work around that - likely a candidate for https://devhub.joyent.com/jira/browse/DOCKER-872."},{"file":"test/test_build.js","line":1236,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"If I understand correctly, the issue these changes fix is that copying a context with lots of files would be slow. Is there a way this test could fail if the performance becomes poor again? Relying on a timeout seems like it would be less than ideal, I\u0027m wondering if  there is another way to do that without relying on timing."},{"file":"test/test_build.js","line":1236,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I\u0027ve added a time check too."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/build.js","type":"MODIFIED","insertions":40,"deletions":-28},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/files/addLotsOfFiles.tar","type":"ADDED","insertions":0,"deletions":0},{"file":"test/test_build.js","type":"MODIFIED","insertions":13,"deletions":0}],"sizeInsertions":54,"sizeDeletions":-28},{"number":"2","revision":"ea0c3249e9f27fc28377e049a4215981241b5dc3","parents":["f26f6de19a3860ddb8f7f57848903cf25cc34b8d"],"ref":"refs/changes/76/176/2","uploader":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"createdOn":1469835416,"author":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1469837357,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"comments":[{"file":"lib/build.js","line":2000,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"I would suggest asserting on all parameters, including properties and sub-properties of ci. But if it\u0027s not been done so far in that codebase, it\u0027s fine to do it later."},{"file":"test/test_build.js","line":1241,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is there a way for this test to actually check the contents of the image that it builds to make sure that all the content is there and with the proper paths? If not, maybe it\u0027s a good candidate for another ticket?"},{"file":"test/test_build.js","line":1246,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"If this test used to error without the fix, it\u0027s probably better to just not rely on a timeout at all to avoid false positives. But I don\u0027t want to make you remove something that I may have accidentally suggested doing :)"},{"file":"test/test_build.js","line":1246,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"If keeping the timeout is useful, is it worth it to use the timeout options provided by tape, as described at: https://github.com/substack/tape#testname-opts-cb ?"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/build.js","type":"MODIFIED","insertions":35,"deletions":-32},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/files/addLotsOfFiles.tar.gz","type":"ADDED","insertions":0,"deletions":0},{"file":"test/test_build.js","type":"MODIFIED","insertions":24,"deletions":0}],"sizeInsertions":60,"sizeDeletions":-32},{"number":"3","revision":"cf4fce6358f3752ad7ebd85da45c311c58cc8e65","parents":["f26f6de19a3860ddb8f7f57848903cf25cc34b8d"],"ref":"refs/changes/76/176/3","uploader":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"createdOn":1470168822,"author":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"isDraft":false,"kind":"REWORK","comments":[{"file":"test/test_build.js","line":1252,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is it that \"addLotsOfFiles.tar.gz\" has files with names ranging from 1 to 100? Would it be possible to get that info by reading from the tar file itself rather than hardcoding it?\n\nIf not, is it possible to add a comment that maybe explains what we expect the tarball\u0027s entries to look like?"},{"file":"test/test_build.js","line":1252,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Why it\u0027s possible to get the info from the tarfile, I\u0027m going with the comment (less work)."},{"file":"test/test_build.js","line":1255,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"If hardcoding the number of entries in the tarball is the best way to go, is it worth it to not hardcode the value \"100\" and instead store it in a variable?"},{"file":"test/test_build.js","line":1255,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Okay, added."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/build.js","type":"MODIFIED","insertions":37,"deletions":-33},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/files/addLotsOfFiles.tar.gz","type":"ADDED","insertions":0,"deletions":0},{"file":"test/test_build.js","type":"MODIFIED","insertions":37,"deletions":0}],"sizeInsertions":75,"sizeDeletions":-33},{"number":"4","revision":"00ccbcf5080ccc4e265246faa266a74c61550eb9","parents":["f26f6de19a3860ddb8f7f57848903cf25cc34b8d"],"ref":"refs/changes/76/176/4","uploader":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"createdOn":1470328061,"author":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1470331685,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"comments":[{"file":"test/test_build.js","line":1248,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"\"const\" with node \u003c v4.0.0 in a non-strict mode program will silently drop modifications. That is NUM_FILES_AND_DIRS \u003d someOtherValue; later will just do nothing but won\u0027t fail. In strict mode, \"const\" is not supported with node \u003c v4.0.0 . I think so far we\u0027ve avoided using \"const\" for that reason.\n\nSo in this case I would simply use \"var\", keep the upper case variable name and use it as a constant, even though it\u0027s technically not for the runtime."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/build.js","type":"MODIFIED","insertions":37,"deletions":-33},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/files/addLotsOfFiles.tar.gz","type":"ADDED","insertions":0,"deletions":0},{"file":"test/test_build.js","type":"MODIFIED","insertions":39,"deletions":0}],"sizeInsertions":77,"sizeDeletions":-33},{"number":"5","revision":"2c5cafc2275587ab6b3f714cce3f6f38cfe9a1a9","parents":["f26f6de19a3860ddb8f7f57848903cf25cc34b8d"],"ref":"refs/changes/76/176/5","uploader":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"createdOn":1470332229,"author":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1470420737,"by":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1470332796,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"SUBM","value":"1","grantedOn":1470421637,"by":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/build.js","type":"MODIFIED","insertions":37,"deletions":-33},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/files/addLotsOfFiles.tar.gz","type":"ADDED","insertions":0,"deletions":0},{"file":"test/test_build.js","type":"MODIFIED","insertions":39,"deletions":0}],"sizeInsertions":77,"sizeDeletions":-33}],"allReviewers":[{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"}]}