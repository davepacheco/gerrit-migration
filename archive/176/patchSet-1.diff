commit 7c15a2616be5e705d16a2a25cb9da7756025291a (refs/changes/76/176/1)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2016-07-29T15:03:01-07:00 (3 years, 2 months ago)
    
    DOCKER-900: docker build: ensure chroot-gtar is only run once per directory

diff --git a/lib/build.js b/lib/build.js
index 8b9b6a3..86586ed 100644
--- a/lib/build.js
+++ b/lib/build.js
@@ -27,6 +27,7 @@ var url = require('url');
 var assert = require('assert-plus');
 var async = require('async');
 var bunyan = require('bunyan');
+var chownr = require('chownr');
 var dockerFileParser = require('docker-file-parser');
 var jsprim = require('jsprim');
 var lazyProperty = require('lazy-property');
@@ -1995,43 +1996,32 @@ Builder.prototype.doCopy = function doCopy(ci, callback)
     builder.doCopyOneFile(ci, callback);
 };
 
-Builder.prototype.doCopyOneFile = function doCopyOneFile(ci, callback)
+Builder.prototype._doCopy = function _doCopy(ci, callback)
 {
     var builder = this;
-    var parentDir = path.dirname(ci.zoneDestPath);
+    var parentDir = ci.zoneDestPath;
+    if (!ci.contextPathIsDirectory) {
+        parentDir = path.dirname(ci.zoneDestPath);
+    }
 
-    builder.log.debug('copying file %j to %j', ci.contextPath, ci.zoneDestPath);
     // Ensure parent directory exists, then copy file to it.
     builder.mkdirpChown(parentDir, function (err) {
         if (err) {
             callback(err);
             return;
         }
-
-        //var opts = {
-        //    'uid': builder.chownUid,
-        //    'gid': builder.chownGid,
-        //    'log': builder.log
-        //};
-        //utils.fileCopy(ci.contextPath, ci.zoneDestPath, opts, callback);
-        //return;
-
-        function onExtractedCb(err2, result) {
-            if (err2) {
-                callback(err2);
-                return;
-            }
-            fs.chown(ci.zoneDestPath, builder.chownUid, builder.chownGid,
-                callback);
-        }
-
         // Extract   /foo/bar/baz.txt    /dir/boo.txt
         // Remove leading slash to have a relative path (from root dir).
         var containerRelativePath = ci.containerAbsPath.slice(1);
         var stripDirCount = containerRelativePath.split('/').length - 1;
+        // Per docker rules, for a directory, only the contents of the directory
+        // are copied, so we need an additional strip here.
+        if (ci.contextPathIsDirectory) {
+            stripDirCount += 1;
+        }
 
         var event = {
-            callback: onExtractedCb,
+            callback: callback,
             compression: builder.contextFileCompressionType,
             extractDir: parentDir,
             paths: [containerRelativePath],
@@ -2056,19 +2046,41 @@ Builder.prototype.doCopyOneFile = function doCopyOneFile(ci, callback)
     });
 };
 
+Builder.prototype.doCopyOneFile = function doCopyOneFile(ci, callback)
+{
+    var builder = this;
+
+    builder.log.debug('copying file %j to %j', ci.contextPath, ci.zoneDestPath);
+
+    function onExtractedCb(err, result) {
+        if (err) {
+            callback(err);
+            return;
+        }
+        fs.chown(ci.zoneDestPath, builder.chownUid, builder.chownGid,
+            callback);
+    }
+
+    builder._doCopy(ci, onExtractedCb);
+};
+
 Builder.prototype.doCopyOneDirectory = function doCopyOneDirectory(ci, callback)
 {
     var builder = this;
-    builder.mkdirpChown(ci.zoneDestPath, function (err) {
+
+    builder.log.debug('copying directory %j to %j',
+        ci.contextPath, ci.zoneDestPath);
+
+    function onExtractedCb(err, result) {
         if (err) {
             callback(err);
             return;
         }
-        builder.log.debug('copying directory %j to %j',
-            ci.contextPath, ci.zoneDestPath);
-        async.eachSeries(ci.getAllChildren(), builder.doCopy.bind(builder),
+        chownr(ci.zoneDestPath, builder.chownUid, builder.chownGid,
             callback);
-    });
+    }
+
+    builder._doCopy(ci, onExtractedCb);
 };
 
 Builder.prototype.reprovisionImage =
diff --git a/package.json b/package.json
index 5bd984b..c244cac 100644
--- a/package.json
+++ b/package.json
@@ -33,6 +33,7 @@
     "assert-plus": "0.1.5",
     "async": "0.9.0",
     "bunyan": "1.3.4",
+    "chownr": "1.0.1",
     "docker-file-parser": "git+https://github.com/joyent/node-docker-file-parser.git#ba6b4ce0e09a1432b200a55851d2899109d68ae2",
     "jsprim": "1.2.2",
     "lazy-property": "1.0.0",
diff --git a/test/files/addLotsOfFiles.tar b/test/files/addLotsOfFiles.tar
new file mode 100644
index 0000000..2827cc2
Binary files /dev/null and b/test/files/addLotsOfFiles.tar differ
diff --git a/test/test_build.js b/test/test_build.js
index dab3fb4..7e06790 100644
--- a/test/test_build.js
+++ b/test/test_build.js
@@ -1232,5 +1232,18 @@ tape('onbuild', function (t) {
 });
 
 
+tape('addLotsOfFiles', function (t) {
+    var contextFilepath = path.join(testContextDir, t.name + '.tar');
+
+    testBuildContext(t, contextFilepath, function (err, result) {
+        if (showError(t, err, result.builder)) {
+            return;
+        }
+
+        testEnd(t, result.builder);
+    });
+});
+
+
 // Other:
 // 1. Test different command formats, i.e. 'RUN foo' and 'RUN ["foo"]'
