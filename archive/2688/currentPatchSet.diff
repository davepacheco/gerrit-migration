commit afaf960cfdc42cd6f7706993ce292b97e441f083 (refs/changes/88/2688/1)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-09-29T01:09:40+00:00 (2 years ago)
    
    MANTA-3426 Want tool to show shard information on object prior to it existing

diff --git a/lib/client.js b/lib/client.js
index e08178c..641bc42 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -724,6 +724,32 @@ MorayClient.prototype.getObject = function getObject(b, k, opts, cb) {
 };
 
 
+/**
+ * Fetches the shard for an object without querying postgres.
+ *
+ * See https://mo.joyent.com/docs/moray/master/#GetShard for more info.
+ *
+ * @param {String} b    - Bucket name
+ * @param {String} k    - Key name
+ * @param {Object} opts - request parameters
+ * @param {Function} cb - callback
+ */
+MorayClient.prototype.getShard = function getShard(b, k, opts, cb) {
+    assert.string(b, 'bucket');
+    assert.string(k, 'key');
+    if (typeof (opts) === 'function') {
+        cb = opts;
+        opts = {};
+    }
+    assert.object(opts, 'options');
+    assert.func(cb, 'callback');
+
+    var rpcctx = this.ctxCreateForCallback(cb);
+    if (rpcctx)
+        objects.getShard(rpcctx, b, k, opts, this.makeReleaseCb(rpcctx, cb));
+};
+
+
 /**
  * Deletes an Object
  *
diff --git a/lib/objects.js b/lib/objects.js
index 917c6ba..a7e59f8 100644
--- a/lib/objects.js
+++ b/lib/objects.js
@@ -88,6 +88,37 @@ function getObject(rpcctx, bucket, key, options, callback) {
     });
 }
 
+function getShard(rpcctx, bucket, key, options, callback) {
+    var opts, log;
+
+    assert.object(rpcctx, 'rpcctx');
+    assert.string(bucket, 'bucket');
+    assert.string(key, 'key');
+    assert.object(options, 'options');
+    assert.func(callback, 'callback');
+
+    opts = makeOptions(options);
+    log = rpc.childLogger(rpcctx, opts);
+    rpc.rpcCommonBufferData({
+        'rpcctx': rpcctx,
+        'log': log,
+        'rpcmethod': 'getShard',
+        'rpcargs': [ bucket, key, opts ]
+    }, function (err, data) {
+        if (!err && data.length != 1) {
+            err = new VError('expected exactly 1 data message, found %d',
+                data.length);
+        }
+
+        if (err) {
+            callback(err);
+        } else {
+            callback(null, data[0]);
+        }
+    });
+}
+
+
 function deleteObject(rpcctx, bucket, key, options, callback) {
     var opts, log;
 
@@ -512,6 +543,7 @@ function makeOptions(options, value) {
 module.exports = {
     putObject: putObject,
     getObject: getObject,
+    getShard: getShard,
     deleteObject: deleteObject,
     findObjects: findObjects,
     batch: batch,
