From f797be03a43b9f9835f771db25073ce6163ad05a Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Mon, 12 Nov 2018 22:57:46 +0000
Subject: [PATCH] MANTA-4014 store snaplinkDisabled flag as ufds attribute

---
 cmd/server.js                                 | 34 +++++++--
 etc/config.json.template                      | 10 +--
 etc/testconfig.json.template                  |  5 ++
 lib/gc_manager.js                             | 71 +++++++++++++++++--
 lib/http_server.js                            | 25 +++++++
 package.json                                  |  1 +
 .../manta-garbage-collector/template          |  5 ++
 7 files changed, 135 insertions(+), 16 deletions(-)

diff --git a/cmd/server.js b/cmd/server.js
index fe540cf..a84ba40 100644
--- a/cmd/server.js
+++ b/cmd/server.js
@@ -22,6 +22,8 @@ var mod_util = require('util');
 var mod_vasync = require('vasync');
 var mod_verror = require('verror');
 
+var UFDS = require('ufds');
+
 var mod_gc_manager = require('../lib/gc_manager');
 var mod_schema = require('../lib/schema');
 
@@ -89,13 +91,6 @@ load_config(ctx, done)
 			return;
 		}
 
-		schema_err = mod_schema.validate_creators_cfg(
-			out.allowed_creators);
-		if (schema_err) {
-			done(new VE(schema_err, 'malformed creators config'));
-			return;
-		}
-
 		schema_err = mod_schema.validate_tunables_cfg(
 			out.tunables);
 		if (schema_err) {
@@ -155,6 +150,25 @@ setup_sapi_client(ctx, done)
 }
 
 
+function
+setup_ufds_client(ctx, done)
+{
+	var ufds_cfg = ctx.ctx_cfg.ufds;
+
+	ufds_cfg = mod_jsprim.mergeObjects(ufds_cfg, {
+	    log: ctx.ctx_log.child({
+	        component: 'UFDS'
+	    })
+	});
+
+	ctx.ctx_ufds = new UFDS(ufds_cfg);
+
+	ctx.ctx_log.debug('Created UFDS client.');
+
+	done();
+}
+
+
 function
 load_manta_application(ctx, done)
 {
@@ -301,6 +315,12 @@ main()
 		 */
 		setup_sapi_client,
 
+		/*
+		 * Create a UFDS client to read and refresh the list of
+		 * snaplink-disabled users for.
+		 */
+		setup_ufds_client,
+
 		/*
 		 * Load 'manta' application object.
 		 */
diff --git a/etc/config.json.template b/etc/config.json.template
index 825a2f0..c97181d 100644
--- a/etc/config.json.template
+++ b/etc/config.json.template
@@ -16,6 +16,11 @@
         "connectTimeout": 1000,
         "rejectUnauthorized": false
     },
+    "ufds": {
+        "url": "ldaps://ufds.coal-1.example.com",
+        "bindDN": "cn=root",
+        "bindPassword": "secret"
+    },
     "moray": {
         "options": {
             "cueballOptions": {
@@ -39,11 +44,6 @@
         }
     ],
     "concurrency": 1,
-    "allowed_creators": [
-        {
-            "uuid": "2f1c9213-44ca-c7c5-a57b-a9deb14589c4"
-        }
-    ],
     "tunables": {
         "instr_upload_batch_size": 100,
         "instr_upload_flush_delay": 30000,
diff --git a/etc/testconfig.json.template b/etc/testconfig.json.template
index b0691f6..50f3309 100644
--- a/etc/testconfig.json.template
+++ b/etc/testconfig.json.template
@@ -16,6 +16,11 @@
         "connectTimeout": 1000,
         "rejectUnauthorized": false
     },
+    "ufds": {
+        "url": "ldaps://ufds.coal-1.example.com",
+        "bindDN": "cn=root",
+        "bindPassword": "secret"
+    },
     "moray": {
         "options": {
             "cueballOptions": {
diff --git a/lib/gc_manager.js b/lib/gc_manager.js
index 1746c47..1a86ef7 100644
--- a/lib/gc_manager.js
+++ b/lib/gc_manager.js
@@ -49,14 +49,29 @@ state_init(S)
 {
 	var self = this;
 
-	self._create_clients_and_workers(function (err) {
+	mod_vasync.pipeline({ funcs: [
+		function (_, next) {
+			self.refresh_users(next);
+		},
+		function (_, next) {
+			self._create_clients_and_workers(next);
+		}
+	] }, function (err, _) {
 		if (err) {
 			self.gcm_log.error(err, 'Unable to initialize ' +
 				'GC manager.');
 			/*
-			 * If the gc manager initializiation failed, then we
-			 * cannot establish a good state and the error likely
-			 * requires operator intervention.
+			 * If the gc manager initializiation failed, then it
+			 * cannot establish a good state. An error at this
+			 * phase could be caused by:
+			 *
+			 * - Problems with name resolution
+			 * - An assigned shard being unresponsive
+			 * - UFDS being unresponsive
+			 *
+			 * In any case, the issue is likely linked to a
+			 * component the collector depends on or a
+			 * misconfiguration of the collector itself.
 			 */
 			process.exit(1);
 		}
@@ -122,6 +137,54 @@ _create_moray_client(shard, done)
 };
 
 
+// --- User management
+
+
+GCManager.prototype.refresh_users = function
+refresh_users(done)
+{
+	var self = this;
+
+	var base = 'ou=users, o=smartdc';
+
+	var opts = {
+	    filter: '(&(snaplinks_disabled=true)(objectclass=sdcperson))',
+	    scope: 'sub'
+	};
+
+	var no_cache = true;
+
+	function callback(ufds_err, entries) {
+		if (ufds_err) {
+			self.gcm_log.error({ err: ufds_err }, 'Unable to ' +
+			    'refresh snaplink-disabled users list.');
+			done(ufds_err);
+			return;
+		}
+		var old_users = self.gcm_ctx.ctx_cfg.allowed_creators || [];
+		var new_users = entries.map(function (entry) {
+			return ({
+			    uuid: entry.uuid
+			});
+		});
+
+		self.gcm_log.debug({
+			old_uuids: old_users.map(function (user) {
+				return (user.uuid);
+			}),
+			new_uuids: new_users.map(function (user) {
+				return (user.uuid);
+			})
+		}, 'Refreshed snaplink-disabled users list.');
+
+		self.gcm_ctx.ctx_cfg.allowed_creators = new_users;
+		done();
+	}
+
+	self.gcm_ctx.ctx_ufds.search(base, opts, callback, no_cache);
+};
+
+
 // --- Worker management
 
 
diff --git a/lib/http_server.js b/lib/http_server.js
index f957b46..0365dc4 100644
--- a/lib/http_server.js
+++ b/lib/http_server.js
@@ -65,6 +65,29 @@ handle_ping(req, res, next)
 }
 
 
+function
+handle_refresh_users(req, res, next)
+{
+	var ctx = req.ctx;
+
+	req.log.debug('refresh users');
+
+	ctx.ctx_gc_manager.refresh_users(function (err) {
+		if (err) {
+			res.send(500, {
+				ok: false,
+				err: err.message
+			});
+			return;
+		}
+		res.send(200, {
+			ok: true,
+			when: (new Date()).toISOString()
+		});
+	});
+}
+
+
 function
 handle_get_workers(req, res, next)
 {
@@ -238,6 +261,8 @@ create_http_server(ctx, done)
 
 	s.get('/ping', handle_ping);
 
+	s.get('/users/refresh', handle_refresh_users);
+
 	s.get('/workers/get', handle_get_workers);
 	s.post('/workers/pause', handle_pause_workers);
 	s.post('/workers/resume', handle_resume_workers);
diff --git a/package.json b/package.json
index afcf0f8..7b147dd 100644
--- a/package.json
+++ b/package.json
@@ -25,6 +25,7 @@
     "sdc-clients": "11.3.1",
     "triton-metrics": "0.2.0",
     "uuid": "3.2.1",
+    "ufds": "1.5.0",
     "vasync": "^2.1.0",
     "verror": "^1.10.0"
   }
diff --git a/sapi_manifests/manta-garbage-collector/template b/sapi_manifests/manta-garbage-collector/template
index ea0d5ed..7833e70 100644
--- a/sapi_manifests/manta-garbage-collector/template
+++ b/sapi_manifests/manta-garbage-collector/template
@@ -16,6 +16,11 @@
 		"connectTimeout": 1000,
 		"rejectUnauthorized": {{MANTA_REJECT_UNAUTHORIZED}}
 	},
+	"ufds": {
+		"url": "{{{UFDS_URL}}}",
+		"bindDN": "{{{UFDS_ROOT_DN}}}",
+		"bindPassword": "{{{UFDS_ROOT_PW}}}"
+	},
 	"moray": {
 		"options": {
 			"cueballOptions": {
-- 
2.21.0

