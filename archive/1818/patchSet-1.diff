From 74c742fd6c82da5d530e7ac860bf2a00dd6c393a Mon Sep 17 00:00:00 2001
From: David Pacheco <dap@joyent.com>
Date: Thu, 20 Apr 2017 16:26:10 -0700
Subject: [PATCH] MANTA-3224 authcache crashes on malformed requests

---
 lib/server/server.js | 25 +++++++++++++++++++++++--
 test/server.test.js  | 42 +++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 64 insertions(+), 3 deletions(-)

diff --git a/lib/server/server.js b/lib/server/server.js
index 33a562d..e1c8031 100644
--- a/lib/server/server.js
+++ b/lib/server/server.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -263,6 +263,13 @@ function createServer(opts) {
 function getAccountUuid(req, res, next) {
     var account = req.params.account || req.params.login;
     req.log.debug({account: account}, 'getAccountUuid handler: entered');
+
+    if (!account) {
+        setImmediate(next,
+            new restify.BadRequestError('"account" is required'));
+        return;
+    }
+
     lib.getAccountUuid({
         account: account,
         log: req.log,
@@ -319,6 +326,12 @@ function getUserUuid(req, res, next) {
         accountid: accountUuid,
         user: user
     }, 'getUserUuid handler: entered');
+
+    if (!user) {
+        setImmediate(next, new restify.BadRequestError('"user" is required'));
+        return;
+    }
+
     lib.getUuid({
         accountUuid: accountUuid,
         name: user,
@@ -390,7 +403,9 @@ function getRoles(req, res, next) {
 
 function getName(req, res, next) {
     var uuids = req.params.uuid || /* deprecated */ req.params.uuids;
-    if (uuids && !Array.isArray(uuids)) {
+    if (!uuids) {
+        uuids = [];
+    } else if (!Array.isArray(uuids)) {
         uuids = [uuids];
     }
     req.log.debug({uuids: uuids}, 'getName handler: entered');
@@ -450,6 +465,12 @@ function getUuid(req, res, next) {
         names: names
     }, 'getUuid handler: entered');
 
+    if (!account) {
+        setImmediate(next,
+            new restify.BadRequestError('"account" is required'));
+        return;
+    }
+
     lib.getAccountUuid({
         account: account,
         log: req.log,
diff --git a/test/server.test.js b/test/server.test.js
index 8b7f69b..2f260a9 100644
--- a/test/server.test.js
+++ b/test/server.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var Server = require('../lib/server/server.js').Server;
@@ -251,3 +251,43 @@ test('generate lookup', function (t) {
         t.end();
     });
 });
+
+test('/accounts: missing arguments', function (t) {
+    this.client.get('/accounts', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
+
+test('/users: missing argument (account)', function (t) {
+    this.client.get('/users', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
+
+test('/users: missing argument (user)', function (t) {
+    this.client.get('/users?account=banks', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
+
+test('/names: missing arguments', function (t) {
+    this.client.get('/names', function (err, req, res, obj) {
+        t.ok(!err);
+        t.deepEqual(obj, {});
+        t.end();
+    });
+});
+
+test('/uuids: missing arguments', function (t) {
+    this.client.get('/uuids', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
-- 
2.21.0

