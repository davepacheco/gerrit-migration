From a70428e514f8a4e462f3279d1a741c90e7efe6b8 Mon Sep 17 00:00:00 2001
From: David Pacheco <dap@joyent.com>
Date: Tue, 25 Apr 2017 18:00:31 -0700
Subject: [PATCH] MANTA-3224 authcache crashes on malformed requests

---
 docs/index.md        | 21 ++++++++++++++-------
 lib/server/server.js | 25 +++++++++++++++++++++++--
 test/server.test.js  | 42 +++++++++++++++++++++++++++++++++++++++++-
 3 files changed, 78 insertions(+), 10 deletions(-)

diff --git a/docs/index.md b/docs/index.md
index a85db17..cdb9149 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -9,7 +9,7 @@ apisections: Task Control API
     file, You can obtain one at http://mozilla.org/MPL/2.0/.
 -->
 <!--
-    Copyright (c) 2014, Joyent, Inc.
+    Copyright (c) 2017, Joyent, Inc.
 -->
 
 # Mahi
@@ -41,6 +41,7 @@ The account object.
 | Code | HTTP Status Code | Description |
 | ---- | ---------------- | ----------- |
 | AccountDoesNotExistError | 404 | No account exists with the given login |
+| BadRequestError | 400 | "login" was not specified |
 | RedisError | 500 | Error contacting redis |
 
 ### Example
@@ -147,6 +148,7 @@ The user object.
 | Code | HTTP Status Code | Description |
 | ---- | ---------------- | ----------- |
 | AccountDoesNotExistError | 404 | No account exists with the given account login |
+| BadRequestError | 400 | "account" or "login" was not specified |
 | UserDoesNotExistError | 404 | No user with the given login exists under the given account |
 | RedisError | 500 | Error contacting redis |
 
@@ -323,10 +325,12 @@ The user object.
 ## NameToUuid (GET /uuids)
 
 ### Inputs
-|| **Field** || **Type** || **Required?** || **Notes** ||
-|| account (query param) || string || Yes || account login to translate ||
-|| name (query param) || string || No || name of policy/user/role under the given account to translate. required if type is specified. specify multiple times for multiple translations ||
-|| type (query param) || string || No || type of the names to translate (policy, user, role). required if any names are specified ||
+
+| Field | Type | Required? | Notes |
+| --------- | -------- | ------------- | --------- |
+| account (query param) | string | Yes | account login to translate |
+| name (query param) | string | No | name of policy/user/role under the given account to translate. required if type is specified. specify multiple times for multiple translations |
+| type (query param) | string | No | type of the names to translate (policy, user, role). required if any names are specified |
 
 ### Returns
 
@@ -339,6 +343,7 @@ name. Check for undefined.
 | Code | HTTP Status Code | Description |
 | ---- | ---------------- | ----------- |
 | AccountDoesNotExist | 404 | No account exists with the given login |
+| BadRequestError | 400 | "account" was not specified |
 | RedisError | 500 | Error contacting redis |
 
 ### Examples
@@ -362,8 +367,10 @@ name. Check for undefined.
 ## UuidToName (GET /names)
 
 ### Inputs
-|| **Field** || **Type** || **Required?** || **Notes** ||
-|| uuid (query param) || UUID || Yes || repeat param for multiple translations ||
+
+| Field | Type | Required? | Notes |
+| ----- | ---- | --------- | ----- |
+| uuid (query param) | UUID | Yes | repeat param for multiple translations |
 
 ### Returns
 
diff --git a/lib/server/server.js b/lib/server/server.js
index 33a562d..e1c8031 100644
--- a/lib/server/server.js
+++ b/lib/server/server.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -263,6 +263,13 @@ function createServer(opts) {
 function getAccountUuid(req, res, next) {
     var account = req.params.account || req.params.login;
     req.log.debug({account: account}, 'getAccountUuid handler: entered');
+
+    if (!account) {
+        setImmediate(next,
+            new restify.BadRequestError('"account" is required'));
+        return;
+    }
+
     lib.getAccountUuid({
         account: account,
         log: req.log,
@@ -319,6 +326,12 @@ function getUserUuid(req, res, next) {
         accountid: accountUuid,
         user: user
     }, 'getUserUuid handler: entered');
+
+    if (!user) {
+        setImmediate(next, new restify.BadRequestError('"user" is required'));
+        return;
+    }
+
     lib.getUuid({
         accountUuid: accountUuid,
         name: user,
@@ -390,7 +403,9 @@ function getRoles(req, res, next) {
 
 function getName(req, res, next) {
     var uuids = req.params.uuid || /* deprecated */ req.params.uuids;
-    if (uuids && !Array.isArray(uuids)) {
+    if (!uuids) {
+        uuids = [];
+    } else if (!Array.isArray(uuids)) {
         uuids = [uuids];
     }
     req.log.debug({uuids: uuids}, 'getName handler: entered');
@@ -450,6 +465,12 @@ function getUuid(req, res, next) {
         names: names
     }, 'getUuid handler: entered');
 
+    if (!account) {
+        setImmediate(next,
+            new restify.BadRequestError('"account" is required'));
+        return;
+    }
+
     lib.getAccountUuid({
         account: account,
         log: req.log,
diff --git a/test/server.test.js b/test/server.test.js
index 8b7f69b..2f260a9 100644
--- a/test/server.test.js
+++ b/test/server.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var Server = require('../lib/server/server.js').Server;
@@ -251,3 +251,43 @@ test('generate lookup', function (t) {
         t.end();
     });
 });
+
+test('/accounts: missing arguments', function (t) {
+    this.client.get('/accounts', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
+
+test('/users: missing argument (account)', function (t) {
+    this.client.get('/users', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
+
+test('/users: missing argument (user)', function (t) {
+    this.client.get('/users?account=banks', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
+
+test('/names: missing arguments', function (t) {
+    this.client.get('/names', function (err, req, res, obj) {
+        t.ok(!err);
+        t.deepEqual(obj, {});
+        t.end();
+    });
+});
+
+test('/uuids: missing arguments', function (t) {
+    this.client.get('/uuids', function (err, req, res, obj) {
+        t.equal(err.restCode, 'BadRequestError');
+        t.equal(obj.code, 'BadRequestError');
+        t.end();
+    });
+});
-- 
2.21.0

