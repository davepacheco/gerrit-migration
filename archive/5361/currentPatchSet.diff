commit 5f393d06d047e5f9595c917b5a4fd17b15d94103 (refs/changes/61/5361/1)
Author: Peter Marton <pmarton@netflix.com>
Date:   2019-01-14T10:23:44-08:00 (9 months ago)
    
    fix MultiError test assertations

diff --git a/test/tst.multierror.js b/test/tst.multierror.js
index bc8bac7..849a11f 100644
--- a/test/tst.multierror.js
+++ b/test/tst.multierror.js
@@ -60,23 +60,23 @@ function main()
 	/* errorFromList */
 	mod_assert.throws(function () {
 		console.error(errorFromList());
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList(null));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList({}));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList('asdf'));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList([ new Error(), 17 ]));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList([ new Error(), {} ]));
@@ -95,23 +95,23 @@ function main()
 	/* errorForEach */
 	mod_assert.throws(function () {
 		console.error(errorForEach());
-	}, /^AssertionError: err must be an Error$/);
+	}, /err must be an Error$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach(null));
-	}, /^AssertionError: err must be an Error$/);
+	}, /err must be an Error$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach(err1));
-	}, /^AssertionError: func \(func\) is required$/);
+	}, /func \(func\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach(err1, {}));
-	}, /^AssertionError: func \(func\) is required$/);
+	}, /func \(func\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach({}, function () {}));
-	}, /^AssertionError: err must be an Error$/);
+	}, /err must be an Error$/);
 
 	accum = [];
 	doAccum = function (e) { accum.push(e); };
