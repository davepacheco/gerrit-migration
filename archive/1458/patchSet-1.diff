From d6b88c7978ec149b2666aee3c312fb7829499e2b Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Tue, 7 Feb 2017 13:42:24 +0100
Subject: [PATCH] TOOLS-1683 `sdcadm exp up agent` should support updates of
 individual instances

---
 lib/procedures/index.js               | 41 +++++++++++++++++----------
 lib/procedures/update-agent-v1.js     | 20 ++++++++-----
 lib/procedures/update-dockerlogger.js | 24 ++++++++++------
 3 files changed, 55 insertions(+), 30 deletions(-)

diff --git a/lib/procedures/index.js b/lib/procedures/index.js
index db38672..9e5c3b5 100644
--- a/lib/procedures/index.js
+++ b/lib/procedures/index.js
@@ -712,7 +712,8 @@ function coordinatePlan(opts, cb) {
             }
 
             changes.forEach(function (change) {
-                if (change.type !== 'update-service' ||
+                if ((change.type !== 'update-service' &&
+                    change.type !== 'update-instance') ||
                     change.service.type !== 'agent' ||
                     change.service.name === 'dockerlogger') {
                     remaining.push(change);
@@ -724,13 +725,18 @@ function coordinatePlan(opts, cb) {
                     return;
                 }
 
-                var svcInsts = instsFromSvcName[change.service.name] || [];
-                // If we have a given set of servers, just filter instances
-                // present on the given list:
-                if (opts.servers && opts.servers.length) {
-                    svcInsts = svcInsts.filter(function (ins) {
-                        return (opts.servers.indexOf(ins.server) !== -1);
-                    });
+                var svcInsts;
+                if (change.type === 'update-service') {
+                    svcInsts = instsFromSvcName[change.service.name] || [];
+                    // If we have a given set of servers, just filter instances
+                    // present on the given list:
+                    if (opts.servers && opts.servers.length) {
+                        svcInsts = svcInsts.filter(function (ins) {
+                            return (opts.servers.indexOf(ins.server) !== -1);
+                        });
+                    }
+                } else if (change.instance) {
+                    svcInsts = [change.instance];
                 }
 
                 if (allowed.indexOf(change.service.name) !== -1) {
@@ -796,13 +802,18 @@ function coordinatePlan(opts, cb) {
                     return;
                 }
 
-                var svcInsts = instsFromSvcName[change.service.name] || [];
-                // If we have a given set of servers, just filter instances
-                // present on the given list:
-                if (opts.servers && opts.servers.length) {
-                    svcInsts = svcInsts.filter(function (ins) {
-                        return (opts.servers.indexOf(ins.server) !== -1);
-                    });
+                var svcInsts;
+                if (change.type === 'update-service') {
+                    svcInsts = instsFromSvcName[change.service.name] || [];
+                    // If we have a given set of servers, just filter instances
+                    // present on the given list:
+                    if (opts.servers && opts.servers.length) {
+                        svcInsts = svcInsts.filter(function (ins) {
+                            return (opts.servers.indexOf(ins.server) !== -1);
+                        });
+                    }
+                } else if (change.instance) {
+                    svcInsts = [change.instance];
                 }
 
                 change.insts = svcInsts;
diff --git a/lib/procedures/update-agent-v1.js b/lib/procedures/update-agent-v1.js
index 40629f9..7b8c213 100644
--- a/lib/procedures/update-agent-v1.js
+++ b/lib/procedures/update-agent-v1.js
@@ -40,12 +40,20 @@ util.inherits(UpdateAgentV1, Procedure);
 UpdateAgentV1.prototype.summarize = function uaSummarize() {
     var c0 = this.changes[0];
     var img = c0.image;
-    var out = [sprintf('update "%s" service to image %s ',
-                c0.service.name, img.uuid),
-                common.indent(sprintf('%s@%s', img.name, img.version))];
-    if (c0.insts.length) {
-        out.push(sprintf('on %d servers', c0.insts.length));
+    var out;
+    if (c0.type === 'update-service') {
+        out = [sprintf('update "%s" service to image %s ',
+                    c0.service.name, img.uuid),
+                    common.indent(sprintf('%s@%s', img.name, img.version))];
+        if (c0.insts.length) {
+            out.push(sprintf('on %d servers', c0.insts.length));
+        }
+    } else if (c0.type === 'update-instance') {
+        out = [sprintf('update "%s" instance of "%s" service to image %s ',
+                    c0.instance.instance, c0.service.name, img.uuid),
+                    common.indent(sprintf('%s@%s', img.name, img.version))];
     }
+
     return out.join('\n');
 };
 
@@ -56,8 +64,6 @@ UpdateAgentV1.MIN_CNAPI_VERSION = '20150407T172714Z';
 UpdateAgentV1.MIN_CN_AGENT_VERSION = '2015-11-14T08:05:36Z';
 
 
-// TODO: Ensure contact with all the selected servers (all the setup servers
-// when none is given).
 UpdateAgentV1.prototype.execute = function uaExecute(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.sdcadm, 'opts.sdcadm');
diff --git a/lib/procedures/update-dockerlogger.js b/lib/procedures/update-dockerlogger.js
index 120d4f2..62a1205 100644
--- a/lib/procedures/update-dockerlogger.js
+++ b/lib/procedures/update-dockerlogger.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 
@@ -44,13 +44,21 @@ UpdateDockerlogger.prototype.summarize = function udSummarize() {
 
     var c0 = this.changes[0];
     var img = c0.image;
-    var out = [
-        sprintf('update "dockerlogger" service to image %s ', img.uuid),
-        common.indent(sprintf('%s@%s', img.name, img.version)),
-        sprintf('in %s servers', (
-                    c0.insts.length ?
-                    c0.insts.length : 'all the setup'))
-    ];
+    var out;
+    if (c0.type === 'update-service') {
+        out = [
+            sprintf('update "dockerlogger" service to image %s ', img.uuid),
+            common.indent(sprintf('%s@%s', img.name, img.version)),
+            sprintf('in %s servers', (
+                        c0.insts.length ?
+                        c0.insts.length : 'all the setup'))
+        ];
+    } else if (c0.type === 'update-instance') {
+        out = [sprintf('update "%s" instance of "dockerlogger"' +
+                    ' service to image %s ',
+                    c0.instance.instance, img.uuid),
+                    common.indent(sprintf('%s@%s', img.name, img.version))];
+    }
     return out.join('\n');
 };
 
-- 
2.21.0

