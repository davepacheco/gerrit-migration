From 54b24441903a73a75ca938d7e3f0f03b47c3d3f0 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Fri, 28 Jun 2019 20:31:14 +0200
Subject: [PATCH] TRITON-1780 Bhyve instances "disk" attribute should have the
 value of "flexible_disk_space" Reviewed by: Mike Gerdts
 <mike.gerdts@joyent.com> Approved by: Mike Gerdts <mike.gerdts@joyent.com>

---
 lib/machines.js          | 12 ++++++++----
 test/machines.94.test.js | 36 ++++++++++++++++++++++++++++--------
 test/machines/common.js  |  8 ++++++--
 3 files changed, 42 insertions(+), 14 deletions(-)

diff --git a/lib/machines.js b/lib/machines.js
index 3b82b4a..bb0028d 100644
--- a/lib/machines.js
+++ b/lib/machines.js
@@ -136,7 +136,7 @@ function translateState(state) {
 }
 
 
-function translate(machine, req)  {
+function translate(machine, req) {
     assert.ok(machine);
 
     var credentials = req.params.credentials;
@@ -173,9 +173,13 @@ function translate(machine, req)  {
         msg.image = machine.disks[0].image_uuid;
     }
 
-    if (msg.type === 'virtualmachine' && machine.disks[1] &&
-            machine.disks[1].size) {
-        msg.disk = Number(machine.disks[1].size);
+    if (msg.type === 'virtualmachine') {
+        delete msg.quota;
+        if (machine.flexible_disk_size) {
+            msg.disk = machine.flexible_disk_size;
+        } else if (machine.disks[1] && machine.disks[1].size) {
+            msg.disk = Number(machine.disks[1].size);
+        }
     }
 
     if (machine.nics && machine.nics.length) {
diff --git a/test/machines.94.test.js b/test/machines.94.test.js
index ae04ff9..c61d89e 100644
--- a/test/machines.94.test.js
+++ b/test/machines.94.test.js
@@ -257,6 +257,33 @@ test('CreateMachine - Disks size is greater than quota', function (t) {
     });
 });
 
+test('CreateMachine - `remaining` disk w/o available size', function (t) {
+    if (!BHYVE_IMAGE_UUID) {
+        t.ok(true, 'No bhyve images. Test skipped');
+        t.end();
+        return;
+    }
+
+    var obj = {
+        disks: [
+            {},
+            { size: 5120 },
+            { size: 'remaining' }
+        ],
+        image: BHYVE_IMAGE_UUID,
+        name: 'bhyve-remaining-no-space-test-' + process.pid,
+        package: BHYVE_128_FLEXIBLE.uuid
+    };
+
+    CLIENT.post('/my/machines', obj,
+        function createdMachine(err, req, res, body) {
+            t.ok(err);
+            t.equal(err.statusCode, 409);
+            t.equal(body.code, 'ValidationFailed');
+            t.end();
+    });
+});
+
 function stopMachine(t) {
     if (!BHYVE_IMAGE_UUID) {
         t.ok(true, 'No bhyve images. Test skipped');
@@ -408,7 +435,6 @@ test('No disks/inflexible disk package', function (suite) {
         });
 
         tt.test('GetMachineDisk has disk', function getMachineDiskTest(t) {
-
             diskPath = vmPath + '/disks/' + DISK_UUID;
 
             CLIENT.get(diskPath, function gotDisk(err, req, res, disk) {
@@ -494,7 +520,6 @@ test('No disks/inflexible disk package', function (suite) {
     });
 
     suite.end();
-
 });
 
 
@@ -577,6 +602,7 @@ test('No disks/package has disks', function (suite) {
                     BHYVE_128_FLEXIBLE_DISKS.quota - body.free_space);
                 t.strictEqual(body.flexible, true);
                 t.equal(body.free_space, expectedFree);
+                t.ok(!body.quota, 'no "quota" for "bhyve" machines');
                 t.end();
         });
     });
@@ -609,7 +635,6 @@ test('Disks/flexible disk package', function (suite) {
     var diskPath, vmPath;
 
     suite.test('CreateMachine', function (t) {
-
         DISK_UUID = 'dea91a7f-5fe3-4408-b25a-994c97a7975e';
 
         var obj = {
@@ -924,7 +949,6 @@ test('Disks/flexible disk package', function (suite) {
                 t.equal(res.statusCode, 204, 'statusCode');
                 poll();
             });
-
         });
 
         tt.test('CreateMachineDisk - size remaining',
@@ -986,7 +1010,6 @@ test('Disks/flexible disk package', function (suite) {
     });
 
     suite.end();
-
 });
 
 
@@ -1199,7 +1222,6 @@ test('Disks with remaining/flex disk package', function (suite) {
     });
 
     suite.end();
-
 });
 
 
@@ -1292,7 +1314,6 @@ test('No disks/flexible disk package', function (suite) {
     });
 
     suite.end();
-
 });
 
 
@@ -1382,7 +1403,6 @@ test('Package has remaining boot disk', function (suite) {
     });
 
     suite.end();
-
 });
 
 test('teardown', function (t) {
diff --git a/test/machines/common.js b/test/machines/common.js
index 77e260f..5e4fca9 100644
--- a/test/machines/common.js
+++ b/test/machines/common.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -105,6 +105,10 @@ function checkMachine(t, m) {
     // t.ok(m.created, 'checkMachine created ok');
     // t.ok(m.updated, 'checkMachine updated ok');
     t.ok(typeof (m.disk) !== 'undefined', 'checkMachine disk');
+
+    if (m.type === 'virtualmachine') {
+        t.ok(typeof (m.quota) === 'undefined', 'checkMachine disk');
+    }
     t.ok(typeof (m.created) !== 'undefined', 'checkMachine created');
     t.ok(typeof (m.updated) !== 'undefined', 'checkMachine updated');
 }
@@ -231,7 +235,7 @@ function createMachine(t, client, obj, cb) {
         t.equal(res.headers.location,
             sprintf('/%s/machines/%s', client.login, body.id),
             'createMachine Location header');
-        t.ok(body, 'createMachine body' + (body ? ': '+body.id : ''));
+        t.ok(body, 'createMachine body' + (body ? ': ' + body.id : ''));
         common.checkHeaders(t, res.headers);
         checkMachine(t, body);
 
-- 
2.21.0

