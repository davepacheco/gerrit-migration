From 8796fb9f9dff980ada9946205878c8599e127ef2 Mon Sep 17 00:00:00 2001
From: John Levon <john.levon@joyent.com>
Date: Fri, 5 Jul 2019 13:25:50 +0000
Subject: [PATCH] =?UTF-8?q?TRITON-1788=20sdcadm=20dev=20build=20updates=20?=
 =?UTF-8?q?could=20be=20easier=20Reviewed=20by:=20Pedro=20Palaz=C3=B3n=20C?=
 =?UTF-8?q?andel=20<pedro@joyent.com>?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .gitignore                |  1 +
 README.md                 | 21 +++++++++++++++++----
 deps/eng                  |  2 +-
 lib/cli/do_self_update.js | 15 ++++++++++++++-
 test/self-update.test.js  | 28 ++++++++++++++++++++++++++--
 5 files changed, 59 insertions(+), 8 deletions(-)

diff --git a/.gitignore b/.gitignore
index 5eb89dc..b738e7b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -10,3 +10,4 @@
 /tmp
 /etc/sdcadm.completion
 man/man1/sdcadm.1
+package-lock.json
diff --git a/README.md b/README.md
index 6ee355e..c29ecc1 100644
--- a/README.md
+++ b/README.md
@@ -5,7 +5,7 @@
 -->
 
 <!--
-    Copyright 2017 Joyent, Inc.
+    Copyright 2019 Joyent, Inc.
 -->
 
 # sdcadm
@@ -49,6 +49,17 @@ sdcadm subcommand.
 
 # Developer notes
 
+## Updating sdcadm
+
+To update to bits you've built locally (with `make publish`), copy over
+`bits/sdcadm/` to your headnode, import them into your `imgapi` instance,
+then use the `-S` flag to `sdcadm self-update`:
+
+    sdc-imgadm import -c none \
+      -f /tmp/sdcadm-mybranch-20190701T145750Z-gfcba035.sh
+      -m /tmp/sdcadm-mybranch-20190701T145750Z-gfcba035.imgmanifest
+    sdcadm self-update -S http://imgapi.mydc.example.com/ --latest
+
 ## Testing sdcadm
 
 This should only be done by developers, and only in dev or test environments.
@@ -56,7 +67,9 @@ Tests will muck around with the sdc setup, doing terrible and unholy things to
 your data.
 
 Note that tests are expected to run on a fresh setup, since the test suite
-will go through all the `post-setup` subcommands.
+will go through all the `post-setup` subcommands. The installed sdcadm version
+must also be available on `https://updates.joyent.com/` for the `self-update`
+tests to pass.
 
 In order to run sdcadm tests, you'll first need to signal to the tests that
 you really do want them to run:
@@ -73,11 +86,11 @@ with the `runtests` command. For example, to run the tests in sdcadm.test.js:
 
     /opt/smartdc/sdcadm/test/runtests -f sdcadm.test.js
 
-
 ### Unit Tests
 
 `sdcadm` includes some unit tests. At this time the coverage is significantly
-less than the integration tests.  Unit tests can be run with:
+less than the integration tests.  You must still run them on a headnode.  Unit
+tests can be run with:
 
     make test-unit
 
diff --git a/deps/eng b/deps/eng
index d25b8fc..221cb14 160000
--- a/deps/eng
+++ b/deps/eng
@@ -1 +1 @@
-Subproject commit d25b8fc60fb8c649559924870fe3aaf75e7421d5
+Subproject commit 221cb144d090e0ab81b915bdea38e5a43b4a5a7f
diff --git a/lib/cli/do_self_update.js b/lib/cli/do_self_update.js
index 79cea93..4c66c02 100644
--- a/lib/cli/do_self_update.js
+++ b/lib/cli/do_self_update.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var vasync = require('vasync');
@@ -42,6 +42,12 @@ function do_self_update(subcmd, opts, args, cb) {
         function ensureSdcApp(_, next) {
             self.sdcadm.ensureSdcApp({}, next);
         },
+        function setServer(_, next) {
+            if (opts.source) {
+                self.sdcadm.config.updatesServerUrl = opts.source;
+            }
+            next();
+        },
         function setChannel(_, next) {
             // Set or override the default channel if anything is given:
             if (opts.channel) {
@@ -85,6 +91,11 @@ do_self_update.options = [
         help: 'Use the given channel to fetch the image, even if it is ' +
             'not the default one.'
     },
+    {
+        names: ['source', 'S'],
+        type: 'string',
+        help: 'An image source (url) from which to import.'
+    },
     {
         names: ['latest'],
         type: 'bool',
@@ -100,6 +111,8 @@ do_self_update.help = (
     '     {{name}} self-update IMAGE_UUID [<options>]\n' +
     '     # Update to the latest available image:\n' +
     '     {{name}} self-update --latest [<options>]\n' +
+    '     # Update from an imgapi server:\n' +
+    '     {{name}} self-update -S http://imgapi.dc.example.com IMAGE_UUID\n' +
     '\n' +
     '{{options}}'
 );
diff --git a/test/self-update.test.js b/test/self-update.test.js
index 60c5931..4bd5dc3 100644
--- a/test/self-update.test.js
+++ b/test/self-update.test.js
@@ -5,9 +5,13 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
+/*
+ * NB: these tests require the sdcadm version under test to be available
+ * from updates.joyent.com (via a jenkins build).
+ */
 
 var test = require('tape').test;
 var exec = require('child_process').exec;
@@ -17,6 +21,8 @@ var assert = require('assert-plus');
 var CURRENT_VERSION = null;
 var LATEST_UUID = null;
 
+const UPDATES_URL = 'https://updates.joyent.com/';
+
 function checkUpdateResults(t, err, stdout, stderr, moreStrings) {
     if (moreStrings) {
         assert.arrayOfString(moreStrings, 'moreStrings');
@@ -139,13 +145,31 @@ test('sdcadm self-update --latest', function (t) {
 });
 
 
+test('sdcadm self-update -S ... --latest', function (t) {
+    var cmd = 'sdcadm self-update -S ' + UPDATES_URL +
+        ' --latest --channel=dev';
+    exec(cmd, function (err, stdout, stderr) {
+        checkUpdateResults(t, err, stdout, stderr, ['Using channel dev']);
+    });
+});
+
 test('sdcadm self-update IMAGE_UUID', function (t) {
     getSdcadmChannel(t, function (channel) {
-        var cmd = 'sdcadm self-update ' + CURRENT_VERSION + ' -C' + channel;
+        var cmd = 'sdcadm self-update ' + CURRENT_VERSION + ' -C ' + channel;
         exec(cmd, function (err, stdout, stderr) {
             checkUpdateResults(t, err, stdout, stderr,
                 ['Using channel ' + channel]);
         });
     });
+});
 
+test('sdcadm self-update -S ... IMAGE_UUID', function (t) {
+    getSdcadmChannel(t, function (channel) {
+        var cmd = 'sdcadm self-update -S ' + UPDATES_URL +
+            ' -C ' + channel + ' ' + CURRENT_VERSION;
+        exec(cmd, function (err, stdout, stderr) {
+            checkUpdateResults(t, err, stdout, stderr,
+                ['Using channel ' + channel]);
+        });
+    });
 });
-- 
2.21.0

