From 71a27e543e5fa15e16be10f0f7676c0f5d145f13 Mon Sep 17 00:00:00 2001
From: Rui Loura <rui@joyent.com>
Date: Tue, 1 May 2018 20:43:48 +0000
Subject: [PATCH] TRITON-602 sdc-server should be aware of alternate admin nic
 tags

---
 tools/bin/sdc-server | 92 ++++++++++++++++++++++++++++----------------
 1 file changed, 59 insertions(+), 33 deletions(-)

diff --git a/tools/bin/sdc-server b/tools/bin/sdc-server
index eed68784..7b859d16 100755
--- a/tools/bin/sdc-server
+++ b/tools/bin/sdc-server
@@ -156,6 +156,36 @@ function createClient(api, callback) {
     }
 }
 
+function _getServer(server_uuid, callback)
+{
+    var cnapi;
+    var server;
+
+    async.series([
+        function (cb) {
+            createClient('CNAPI', function (err, handle) {
+                if (!err) {
+                    cnapi = handle;
+                } else {
+                    err.api = 'CNAPI';
+                }
+                cb(err);
+            });
+        }, function (cb) {
+            cnapi.getServer(server_uuid, function (err, s) {
+                if (err) {
+                    err.api = 'CNAPI';
+                } else {
+                    server = s;
+                }
+                cb(err);
+            });
+        }
+    ], function (err) {
+        callback(err, server);
+    });
+}
+
 function getNics(server_uuid, params, callback)
 {
     var nics;
@@ -215,6 +245,7 @@ function outputServerData(servers, callback)
 
     servers.forEach(function (s) {
         var admin_ip = '-';
+        var admin_tag = 'admin';
         var sdc_version;
         var setup_state = s.setup;
         var n;
@@ -225,6 +256,10 @@ function outputServerData(servers, callback)
             sdc_version = '6.x';
         }
 
+        if (s['sysinfo']['Admin NIC Tag']) {
+            admin_tag = s['sysinfo']['Admin NIC Tag'];
+        }
+
         for (n in s['sysinfo']['Network Interfaces']) {
             var i;
             var found = false;
@@ -236,7 +271,7 @@ function outputServerData(servers, callback)
             }
 
             for (i = 0; i < nicnames.length; i++) {
-                if (nicnames[i] === 'admin') {
+                if (nicnames[i] === admin_tag) {
                     found = true;
                     break;
                 }
@@ -711,19 +746,33 @@ function lookupServers(args, callback)
 }
 
 function outputAdminIP(server_uuid, callback) {
-    getNics(server_uuid, { nic_tags_provided: ['admin'] },
-        function (err, nics) {
-        if (!nics || nics.length === 0) {
-            callback(new Error('No admin nic found'));
+    var admin_tag = 'admin';
+
+    _getServer(server_uuid, function (err, s) {
+        if (err) {
+            callback(err);
             return;
         }
 
-        if (!nics[0].ip) {
-            callback(new Error('No admin IP found'));
-            return;
+        if (s['sysinfo']['Admin NIC Tag']) {
+            admin_tag = s['sysinfo']['Admin NIC Tag'];
         }
 
-        console.log(nics[0].ip);
+        getNics(server_uuid, { nic_tags_provided: [admin_tag] },
+            function (err, nics) {
+
+            if (!nics || nics.length === 0) {
+                callback(new Error('No admin nic found'));
+                return;
+            }
+
+            if (!nics[0].ip) {
+                callback(new Error('No admin IP found'));
+                return;
+            }
+
+            console.log(nics[0].ip);
+        });
     });
 }
 
@@ -869,30 +918,7 @@ function outputNics(server_uuid, callback)
 
 function outputSysinfo(server_uuid, callback)
 {
-    var cnapi;
-    var server;
-
-    async.series([
-        function (cb) {
-            createClient('CNAPI', function (err, handle) {
-                if (!err) {
-                    cnapi = handle;
-                } else {
-                    err.api = 'CNAPI';
-                }
-                cb(err);
-            });
-        }, function (cb) {
-            cnapi.getServer(server_uuid, function (err, s) {
-                if (err) {
-                    err.api = 'CNAPI';
-                } else {
-                    server = s;
-                }
-                cb(err);
-            });
-        }
-    ], function (err) {
+    _getServer(server_uuid, function (err, server) {
         if (err) {
             callback(err);
             return;
-- 
2.21.0

