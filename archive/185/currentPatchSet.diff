commit d3b35cbe8a53ea10adc5348a3154bc2b36ad7912 (refs/changes/85/185/2)
Author: Robert Mustacchi <rm@joyent.com>
Date:   2016-08-15T21:12:43+00:00 (3 years, 2 months ago)
    
    OS-1828 perl doesn't know how to build host-only tools
    OS-5550 openssl1x shouldn't build using LD_LIBRARY_PATH
    Reviewed by: Patrick Mooney <patrick.mooney@joyent.com>
    Approved by: Joshua M. Clulow <jmc@joyent.com>

diff --git a/openssl1x/Patches/005-ld_library.patch b/openssl1x/Patches/005-ld_library.patch
new file mode 100644
index 0000000..d920938
--- /dev/null
+++ b/openssl1x/Patches/005-ld_library.patch
@@ -0,0 +1,32 @@
+From f87c6ab9355bed4277e4f6ad7325d695bc3d2f24 Mon Sep 17 00:00:00 2001
+From: Robert Mustacchi <rm@joyent.com>
+Date: Fri, 29 Jul 2016 19:02:16 +0000
+Subject: [PATCH] Don't set shared library paths
+
+---
+ Makefile.shared | 2 --
+ 1 file changed, 2 deletions(-)
+
+diff --git a/Makefile.shared b/Makefile.shared
+index b1a79d4..b809c34 100644
+--- a/Makefile.shared
++++ b/Makefile.shared
+@@ -95,7 +95,6 @@ LINK_APP=	\
+     LDCMD="$${LDCMD:-$(CC)}"; LDFLAGS="$${LDFLAGS:-$(CFLAGS)}"; \
+     LIBPATH=`for x in $$LIBDEPS; do echo $$x; done | sed -e 's/^ *-L//;t' -e d | uniq`; \
+     LIBPATH=`echo $$LIBPATH | sed -e 's/ /:/g'`; \
+-    LD_LIBRARY_PATH=$$LIBPATH:$$LD_LIBRARY_PATH \
+     $${LDCMD} $${LDFLAGS} -o $${APPNAME:=$(APPNAME)} $(OBJECTS) $${LIBDEPS} )
+ 
+ LINK_SO=	\
+@@ -105,7 +104,6 @@ LINK_SO=	\
+     SHAREDFLAGS="$${SHAREDFLAGS:-$(CFLAGS) $(SHARED_LDFLAGS)}"; \
+     LIBPATH=`for x in $$LIBDEPS; do echo $$x; done | sed -e 's/^ *-L//;t' -e d | uniq`; \
+     LIBPATH=`echo $$LIBPATH | sed -e 's/ /:/g'`; \
+-    LD_LIBRARY_PATH=$$LIBPATH:$$LD_LIBRARY_PATH \
+     $${SHAREDCMD} $${SHAREDFLAGS} \
+ 	-o $$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX \
+ 	$$ALLSYMSFLAGS $$SHOBJECTS $$NOALLSYMSFLAGS $$LIBDEPS \
+-- 
+2.2.1
+
diff --git a/perl/Makefile b/perl/Makefile
index 24828ca..c555aaa 100644
--- a/perl/Makefile
+++ b/perl/Makefile
@@ -1,26 +1,19 @@
 #
-# CDDL HEADER START
+# This file and its contents are supplied under the terms of the
+# Common Development and Distribution License ("CDDL"), version 1.0.
+# You may only use this file in accordance with the terms of version
+# 1.0 of the CDDL.
 #
-# The contents of this file are subject to the terms of the
-# Common Development and Distribution License (the "License").
-# You may not use this file except in compliance with the License.
+# A full copy of the text of the CDDL should have accompanied this
+# source.  A copy of the CDDL is also available via the Internet at
+# http://www.illumos.org/license/CDDL.
 #
-# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
-# or http://www.opensolaris.org/os/licensing.
-# See the License for the specific language governing permissions
-# and limitations under the License.
-#
-# When distributing Covered Code, include this CDDL HEADER in each
-# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
-# If applicable, add the following below this CDDL HEADER, with the
-# fields enclosed by brackets "[]" replaced with your own identifying
-# information: Portions Copyright [yyyy] [name of copyright owner]
-#
-# CDDL HEADER END
+
 #
-# Copyright (c) 2012, Joyent, Inc.  All rights reserved.
+# Copyright 2016 Joyent, Inc.
 #
 
+
 VER =	perl-5.12.3
 
 include ../Makefile.defs
@@ -41,26 +34,28 @@ CPPFLAGS += \
 	$(LF_CPPFLAGS) \
 	-DPERL_USE_SAFE_PUTENV
 
+NATIVE_CPPFLAGS += \
+	$(BASIC_CPPFLAGS) \
+	$(LF_CPPFLAGS) \
+	-DPERL_USE_SAFE_PUTENV
+
 LDFLAGS += \
 	-fstack-protector
 
+NATIVE_LDFLAGS += \
+	-fstack-protector
+
 SHARED_LDFLAGS = \
 	-G \
 	$(LDFLAGS)
 
-PATCHES += \
-	dtrace.patch
+NATIVE_SHARED_LDFLAGS = \
+	-G \
+	$(NATIVE_LDFLAGS)
 
-#
-# Perl doesn't know how to build native tools for use during the build.
-# It instead assumes that it's safe to run target programs.  This is broken
-# in several ways.  We partially work around it here by forcing it to pick
-# up the new platform libraries as well.  This will break if there has been
-# a user/kernel change relative to the build system.  The correct solution
-# is for perl to build native copies of anything needed at build time -- as
-# for any cross-compilation environment.
-#
-OS_1828_WAR = LDLIBPTH="LD_LIBRARY_PATH=$(DESTDIR)/usr/lib:$(DESTDIR)/lib"
+PATCHES += \
+	dtrace.patch \
+	native.patch
 
 #
 # This is where things get really gross.  There is stuff in ON that is going
@@ -117,13 +112,17 @@ XFORM.sh = \
 	sed -e 's;@@CC@@;$(GCC);g' \
 	    -e 's;@@CPPFLAGS@@;$(CPPFLAGS);g' \
 	    -e 's;@@CFLAGS@@;$(CFLAGS);g' \
+	    -e 's;@@NATIVE_CPPFLAGS@@;$(NATIVE_CPPFLAGS);g' \
+	    -e 's;@@NATIVE_CFLAGS@@;$(NATIVE_CFLAGS);g' \
 	    -e 's;@@BASIC_CPPFLAGS@@;$(BASIC_CPPFLAGS);g' \
 	    -e 's;@@LF_CPPFLAGS@@;$(LF_CPPFLAGS);g' \
 	    -e 's;@@LDFLAGS@@;$(LDFLAGS);g' \
+	    -e 's;@@NATIVE_LDFLAGS@@;$(NATIVE_LDFLAGS);g' \
 	    -e 's;@@LIBS@@;$(LIBS);g' \
 	    -e 's;@@GMAKE@@;$(MAKE);g' \
 	    -e 's;@@THISPROTO@@;$(STRAP:strap=$(DESTDIR));g' \
 	    -e 's;@@NEXTPROTO@@;$(NEXTPROTO);g' \
+	    -e 's;@@NATIVE_SHARED_LDFLAGS@@;$(NATIVE_SHARED_LDFLAGS);g' \
 	    -e 's;@@SHARED_LDFLAGS@@;$(SHARED_LDFLAGS);g' < $< > $@
 
 include ../Makefile.targ
diff --git a/perl/config.over.in b/perl/config.over.in
index e4bcc90..beed793 100644
--- a/perl/config.over.in
+++ b/perl/config.over.in
@@ -13,6 +13,7 @@ byteorder='12345678'
 cat='/usr/bin/cat'
 cc='@@CC@@'
 ccflags='@@CPPFLAGS@@ @@CFLAGS@@'
+mini_ccflags='@@NATIVE_CPPFLAGS@@ @@NATIVE_CFLAGS@@'
 ccflags_uselargefiles='@@LF_CPPFLAGS@@'
 cf_by='Joyent'
 cf_email='bugs@illumos.org'
@@ -65,7 +66,9 @@ ivsize='8'
 ivtype='long long'
 ld='@@CC@@'
 lddlflags='@@SHARED_LDFLAGS@@'
+mini_lddlflags='@@NATIVE_SHARED_LDFLAGS@@'
 ldflags='@@LDFLAGS@@ '
+mini_ldflags='@@NATIVE_LDFLAGS@@ '
 less='/usr/bin/less'
 libpth='/usr/lib /lib'
 libsdirs=' /usr/lib /lib'
diff --git a/perl/native.patch b/perl/native.patch
new file mode 100644
index 0000000..16d2e30
--- /dev/null
+++ b/perl/native.patch
@@ -0,0 +1,200 @@
+From e97fc2efacde56876b7f7dae841df5beff827b78 Mon Sep 17 00:00:00 2001
+From: Robert Mustacchi <rm@joyent.com>
+Date: Mon, 1 Aug 2016 18:03:26 +0000
+Subject: [PATCH] Properly add support for building miniperl natively
+
+---
+ Configure   |  6 ++++++
+ Makefile.SH | 43 +++++++++++++++++++++++++++++--------------
+ cflags.SH   | 16 +++++++++++++++-
+ 3 files changed, 50 insertions(+), 15 deletions(-)
+
+diff --git a/Configure b/Configure
+index 3a8732b..71a0ca1 100755
+--- a/Configure
++++ b/Configure
+@@ -345,8 +345,10 @@ userelocatableinc=''
+ byteorder=''
+ cc=''
+ ccflags=''
++mini_ccflags=''
+ cppflags=''
+ ldflags=''
++mini_ldflags=''
+ lkflags=''
+ locincpth=''
+ optimize=''
+@@ -837,6 +839,7 @@ ccdlflags=''
+ dlsrc=''
+ ld=''
+ lddlflags=''
++mini_lddlflags=''
+ usedl=''
+ doublesize=''
+ ebcdic=''
+@@ -22313,6 +22316,7 @@ cc='$cc'
+ cccdlflags='$cccdlflags'
+ ccdlflags='$ccdlflags'
+ ccflags='$ccflags'
++mini_ccflags='$mini_ccflags'
+ ccflags_uselargefiles='$ccflags_uselargefiles'
+ ccname='$ccname'
+ ccsymbols='$ccsymbols'
+@@ -23016,7 +23020,9 @@ known_extensions='$known_extensions'
+ ksh='$ksh'
+ ld='$ld'
+ lddlflags='$lddlflags'
++mini_lddlflags='$mini_lddlflags'
+ ldflags='$ldflags'
++mini_ldflags='$mini_ldflags'
+ ldflags_uselargefiles='$ldflags_uselargefiles'
+ ldlibpthname='$ldlibpthname'
+ less='$less'
+diff --git a/Makefile.SH b/Makefile.SH
+index 7e76ab8..5248644 100755
+--- a/Makefile.SH
++++ b/Makefile.SH
+@@ -249,6 +249,7 @@ LD = $ld
+ 
+ LDFLAGS = $ldflags
+ CLDFLAGS = $ldflags
++MINI_CLDFLAGS = $mini_ldflags
+ 
+ mallocsrc = $mallocsrc
+ mallocobj = $mallocobj
+@@ -394,6 +395,7 @@ case $CROSS_NAME in
+ $spitshell >>$Makefile <<'!NO!SUBS!'
+ 
+ CCCMD    = `sh $(shellflags) cflags "optimize='$(OPTIMIZE)'" $@`
++CCCMD_MINI = `sh $(shellflags) cflags "optimize='$(OPTIMIZE)'" mini $@`
+ 
+ CCCMDSRC = `sh $(shellflags) cflags "optimize='$(OPTIMIZE)'" $<`
+ 
+@@ -479,8 +481,11 @@ obj1 = $(madlyobj) $(mallocobj) gv$(OBJ_EXT) toke$(OBJ_EXT) perly$(OBJ_EXT) pad$
+ obj2 = hv$(OBJ_EXT) av$(OBJ_EXT) run$(OBJ_EXT) pp_hot$(OBJ_EXT) sv$(OBJ_EXT) pp$(OBJ_EXT) scope$(OBJ_EXT) pp_ctl$(OBJ_EXT) pp_sys$(OBJ_EXT)
+ obj3 = doop$(OBJ_EXT) doio$(OBJ_EXT) regexec$(OBJ_EXT) utf8$(OBJ_EXT) taint$(OBJ_EXT) deb$(OBJ_EXT) universal$(OBJ_EXT) globals$(OBJ_EXT) perlio$(OBJ_EXT) perlapi$(OBJ_EXT) numeric$(OBJ_EXT) mathoms$(OBJ_EXT) locale$(OBJ_EXT) pp_pack$(OBJ_EXT) pp_sort$(OBJ_EXT)
+ 
++mini_dir = miniperl_build
+ minindt_obj = $(obj1) $(obj2) $(obj3) $(ARCHOBJS)
+-mini_obj = $(minindt_obj) $(MINIDTRACE_O)
++minialt_obj = miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT) perlmini$(OBJ_EXT)
++minindt_robj = $(minindt_obj:%.o=$(mini_dir)/%.o)
++mini_obj = $(minindt_robj) $(MINIDTRACE_O) $(minialt_obj:%.o=$(mini_dir)/%.o)
+ ndt_obj = $(obj0) $(obj1) $(obj2) $(obj3) $(ARCHOBJS)
+ obj = $(ndt_obj) $(DTRACE_O)
+ 
+@@ -560,6 +565,17 @@ all: $(FIRSTMAKEFILE) $(MINIPERL_EXE) $(generated_pods) $(private) $(unidatafile
+ 	@echo " ";
+ 	@echo "	Everything is up to date. Type '$(MAKE) test' to run test suite."
+ 
++#
++# Things we need to try and make miniperl build.
++#
++$(mini_dir):
++	mkdir -p $@
++
++$(mini_dir)/%.o: %.c $(mini_dir)
++	$(CCCMD_MINI) $(PLDLFLAGS) -o $@ $*.c
++
++
++
+ .PHONY: all translators utilities
+ 
+ # Both git_version.h and lib/Config_git.pl are built
+@@ -598,17 +614,17 @@ opmini.c: op.c
+ 	\$(RMS) opmini.c
+ 	\$(CPS) op.c opmini.c
+ 
+-opmini\$(OBJ_EXT): opmini.c
+-	\$(CCCMD) \$(PLDLFLAGS) $DPERL_EXTERNAL_GLOB opmini.c
++\$(mini_dir)/opmini\$(OBJ_EXT): opmini.c
++	\$(CCCMD_MINI) \$(PLDLFLAGS) $DPERL_EXTERNAL_GLOB -o \$@ opmini.c
+ 
+ perlmini.c: perl.c
+ 	\$(RMS) perlmini.c
+ 	\$(CPS) perl.c perlmini.c
+ 
+-perlmini\$(OBJ_EXT): perlmini.c
+-	\$(CCCMD) \$(PLDLFLAGS) $DPERL_IS_MINIPERL perlmini.c
++\$(mini_dir)/perlmini\$(OBJ_EXT): perlmini.c
++	\$(CCCMD_MINI) \$(PLDLFLAGS) $DPERL_IS_MINIPERL -o \$@ perlmini.c
+ 
+-globals\$(OBJ_EXT): uudmap.h bitcount.h
++\$(mini_dir)/globals\$(OBJ_EXT) globals\$(OBJ_EXT): uudmap.h bitcount.h
+ 
+ uudmap.h: bitcount.h
+ 
+@@ -620,8 +636,8 @@ generate_uudmap\$(HOST_EXE_EXT): generate_uudmap\$(OBJ_EXT)
+ 
+ !GROK!THIS!
+ $spitshell >>$Makefile <<'!NO!SUBS!'
+-miniperlmain$(OBJ_EXT): miniperlmain.c patchlevel.h
+-	$(CCCMD) $(PLDLFLAGS) $*.c
++$(mini_dir)/miniperlmain$(OBJ_EXT): miniperlmain.c patchlevel.h
++	$(CCCMD_MINI) $(PLDLFLAGS) -o $@ miniperlmain.c
+ 
+ perlmain.c: miniperlmain.c config.sh $(FIRSTMAKEFILE)
+ 	sh writemain $(DYNALOADER) $(static_ext) > perlmain.c
+@@ -740,8 +756,8 @@ mydtrace.h: $(DTRACE_H)
+ $(DTRACE_O): perldtrace.d $(ndt_obj)
+ 	$(DTRACE) -G -s perldtrace.d -o $(DTRACE_O) $(ndt_obj)
+ 
+-$(MINIDTRACE_O): perldtrace.d $(minindt_obj)
+-	$(DTRACE) -G -s perldtrace.d -o $(MINIDTRACE_O) $(minindt_obj)
++$(MINIDTRACE_O): perldtrace.d $(minindt_robj)
++	$(DTRACE) -G -s perldtrace.d -o $(MINIDTRACE_O) $(minindt_robj)
+ 
+ !NO!SUBS!
+ 		;;
+@@ -829,11 +845,10 @@ $(MINIPERL_EXE): $& miniperlmain$(OBJ_EXT) $(mini_obj) opmini$(OBJ_EXT) perlmini
+ 		;;
+ 	*)
+ 		$spitshell >>$Makefile <<'!NO!SUBS!'
+-$(MINIPERL_EXE): $& miniperlmain$(OBJ_EXT) $(mini_obj) opmini$(OBJ_EXT) perlmini$(OBJ_EXT)
++$(MINIPERL_EXE): $& $(mini_obj)
+ 	-@rm -f miniperl.xok
+-	$(LDLIBPTH) $(CC) $(CLDFLAGS) -o $(MINIPERL_EXE) \
+-	    $(mini_obj) \
+-	    miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT) perlmini$(OBJ_EXT) $(libs)
++	$(LDLIBPTH) $(CC) $(MINI_CLDFLAGS) -o $(MINIPERL_EXE) \
++	    $(mini_obj) $(libs)
+ 	$(LDLIBPTH) $(RUN) ./miniperl$(HOST_EXE_EXT) -w -Ilib -MExporter -e '<?>' || $(MAKE) minitest
+ !NO!SUBS!
+ 		;;
+diff --git a/cflags.SH b/cflags.SH
+index a5d71b9..7fd0c5c 100755
+--- a/cflags.SH
++++ b/cflags.SH
+@@ -234,7 +234,7 @@ case $PERL_CONFIG_SH in
+ 	;;
+ esac
+ 
+-: syntax: cflags [optimize=XXX] [file[.suffix]]
++: syntax: cflags [optimize=XXX] [mini] [file[.suffix]]
+ : displays the compiler command line for file
+ 
+ case "X$1" in
+@@ -244,6 +244,20 @@ Xoptimize=*|X"optimize=*")
+ 	;;
+ esac
+ 
++#
++# This is not part of the original perl source code. This was added to
++# try and make the miniperl build somewhat sane. At least sane enough
++# that it can come from the proto area.
++#
++case "X$1" in
++Xmini|X"mini")
++	ccflags=$mini_ccflags
++	ldflags=$mini_ldflags
++	lddlflags=$mini_lddlflags
++	shift
++	;;
++esac
++
+ also=': '
+ case $# in
+ 1) also='echo 1>&2 "	  CCCMD = "'
+-- 
+2.2.1
+
