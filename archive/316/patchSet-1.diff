commit 40590284673429cc127db954a871b00aa3ffe2e7 (refs/changes/16/316/1)
Author: Jordan Paige Hendricks <jordan.hendricks@joyent.com>
Date:   2016-08-18T20:17:30+00:00 (3 years, 2 months ago)
    
    MANTA-2744: after error, picker reports "reconnecting", actually doing
    nothing

diff --git a/README.md b/README.md
index a98bf4d..296cd0b 100644
--- a/README.md
+++ b/README.md
@@ -34,6 +34,7 @@ prerequisites in your development environment:
    to Manta.  The manta-deployment zone includes a tool called add-dev-user that
    can be used to do this.  You can find it at
    /opt/smartdc/manta-deployment/tools/add-dev-user.
+   Note: You should not use the "poseidon" user for running the tests.
 2. The ssh key that you use to authenticate as this account should be
    passwordless.  It must also be stored locally, with the public key being
    called $HOME/.ssh/id\_rsa.pub.
@@ -124,6 +125,12 @@ check first before reporting problems:
 3. If a test fails with a message like "Error: MUSKIE\_SALT required", then
    check that you've specified the three MUSKIE environment variables described
    above.
+4. If a test fails due to authorization errors (perhaps while completing a job),
+   you may have an incorrect muskie configuration. Check that the MUSKIE_ID,
+   MUSKIE_KEY and MUSKIE_IV attributes in your config.json match the environment
+   variables set for the user running the tests ($MANTA_USER).
+
+
 
 If you're changing anything about the way muskie is deployed, configured, or
 started, you should definitely test creating a muskie image and deploying that
diff --git a/lib/picker.js b/lib/picker.js
index 34e5891..eddc2c5 100644
--- a/lib/picker.js
+++ b/lib/picker.js
@@ -214,6 +214,7 @@ function poll() {
 
             // Don't replace if we got an empty "DB"
             if (count > 0) {
+                self.log.warn("Picker::poll: could not find any minnow instances");
                 self.datacenters = dcs;
                 self.db = obj;
                 self.emit('topology', self.db);
diff --git a/main.js b/main.js
index 87b4fb8..36d9e32 100644
--- a/main.js
+++ b/main.js
@@ -201,6 +201,7 @@ function usage(parser, message)
 }
 
 function createPickerClient(cfg) {
+	debugger;
     var opts = {
         connectTimeout: cfg.connectTimeout,
         interval: cfg.interval,
@@ -214,7 +215,6 @@ function createPickerClient(cfg) {
     var client = app.picker.createClient(opts);
 
     function onConnect() {
-        client.removeListener('error', onError);
         LOG.info('picker connected %s', client.toString());
         PICKER = client;
 
@@ -226,6 +226,7 @@ function createPickerClient(cfg) {
         });
         client.on('error', function (err) {
             LOG.warn(err, 'picker: error (reconnecting)');
+            onError(err);
         });
     }
 
