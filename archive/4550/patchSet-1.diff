commit a1445bcc24fe0d1ec2c825b0dbb723d90373b141
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2018-07-20T18:40:06+00:00 (1 year, 3 months ago)
    
    OS-5474 mdata-get does not properly report tags that include periods
    OS-6331 Make it easier to find MetadataAgent instances in core dumps

diff --git a/src/vm/lib/metadata/agent.js b/src/vm/lib/metadata/agent.js
index d141a40d..41148a9a 100644
--- a/src/vm/lib/metadata/agent.js
+++ b/src/vm/lib/metadata/agent.js
@@ -209,6 +209,10 @@ var ZONEADM_CHECK_FREQUENCY = (5 * 60 * 1000); // ms, check for deleted zones
 var MISSED_SYSEVENT_CHECK_FREQUENCY = (1 * 60 * 1000); // ms
 
 
+function hasKey(obj, key) {
+    return (Object.prototype.hasOwnProperty.call(obj, key));
+}
+
 function zoneExists(zonename, callback) {
     var exists = false;
 
@@ -269,14 +273,14 @@ function elapsedTimer(timer) {
 }
 
 
-var MetadataAgent = module.exports = function (options) {
+function MetadataAgent(options) {
     this.log = options.log;
     this.zlog = {};
     this.zones = {};
     this.zonesDebug = {};
     this.zoneConnections = {};
     this.zoneKvmReconnTimers = {};
-};
+}
 
 /*
  * This function exists to add debug information to the zonesDebug object. That
@@ -1526,14 +1530,20 @@ MetadataAgent.prototype.makeMetadataHandler = function (zone, socket) {
                             vmobj.internal_metadata['sdc:volumes']);
                         return;
                     });
-                } else {
+                } else if (want.slice(0, 5) === 'tags.') {
                     addTags(function (err) {
                         if (!err) {
-                            val = VM.flatten(vmobj, want);
+                            want = want.slice(5);
+                            if (hasKey(vmobj.tags, want)) {
+                                val = vmobj.tags[want];
+                            }
                         }
+
                         returnit(err, val);
-                        return;
                     });
+                } else {
+                    val = VM.flatten(vmobj, want);
+                    returnit(null, val);
                 }
             } else {
                 // not sdc:, so key will come from *_mdata
@@ -1945,3 +1955,5 @@ MetadataAgent.prototype.makeMetadataHandler = function (zone, socket) {
         }
     };
 };
+
+module.exports = MetadataAgent;
diff --git a/src/vm/node_modules/qmp.js b/src/vm/node_modules/qmp.js
index ff9443e1..f18fcfbc 100644
--- a/src/vm/node_modules/qmp.js
+++ b/src/vm/node_modules/qmp.js
@@ -32,7 +32,7 @@ var bunyan = require('/usr/node/node_modules/bunyan');
 var events = require('events');
 var net = require('net');
 
-var Qmp = function (logger)
+function Qmp(logger)
 {
     var id;
     var ids = [];
@@ -75,7 +75,7 @@ var Qmp = function (logger)
             qmp.log.debug('Got "send", but not connected.');
         }
     });
-};
+}
 
 Qmp.prototype.send = function (msg)
 {
