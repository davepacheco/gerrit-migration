commit 874497d14139f4274c4bd64591f819e0ec4ed93f
Author: Josh Wilsdon <jwilsdon@joyent.com>
Date:   2019-03-08T17:07:24-08:00 (7 months ago)
    
    TRITON-1294 TRITON-1217 broke transitional_status being reset after a reboot

diff --git a/lib/models/server.js b/lib/models/server.js
index abaa743..d05ee29 100644
--- a/lib/models/server.js
+++ b/lib/models/server.js
@@ -2047,6 +2047,25 @@ function _attemptUpsert(opts, serverUuid, properties, etagRetries, callback) {
             // necessary.
             delete newServerObj.overprovision_ratios;
 
+            // To match the pre-TRITON-1217 behavior, we always clear the
+            // transitional_status when we go from status=unknown to
+            // status=running. Since transitional_status is only currently
+            // used for 'rebooting', when we go from unknown->running we know
+            // the reboot has completed.
+            if (ctx.serverObj.status === 'unknown' &&
+                newServerObj.status === 'running' &&
+                ctx.serverObj.transitional_status) {
+
+                // We expect anything other than empty string or undefined
+                // should be 'rebooting'. If someone adds another case without
+                // updating this, we want to blow up.
+                assert.equal(ctx.serverObj.transitional_status, 'rebooting',
+                    'unexpected transitional_status');
+
+                delete newServerObj.transitional_status;
+                modified = true;
+            }
+
             // END BACKWARD COMPAT SECTION
 
             ctx.newServerObj = newServerObj;
diff --git a/package.json b/package.json
index 6684f38..8249d14 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cnapi",
   "description": "SmartDataCenter Compute Node API",
-  "version": "1.21.2",
+  "version": "1.21.3",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
