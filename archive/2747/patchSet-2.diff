commit e6e2f9d49c8fbec92455fc58da2c9b39405b81b9 (refs/changes/47/2747/2)
Author: Bryan Cantrill <bryan@joyent.com>
Date:   2017-10-08T11:28:31+00:00 (2 years ago)
    
    OS-6387 1K zfs_abd_chunk_size is inducing excessive fragmentation
    Reviewed by: Joshua M. Clulow <jmc@joyent.com>
    Approved by: Joshua M. Clulow <jmc@joyent.com>

diff --git a/usr/src/uts/common/fs/zfs/abd.c b/usr/src/uts/common/fs/zfs/abd.c
index 92e7814df5..49e23bd43d 100644
--- a/usr/src/uts/common/fs/zfs/abd.c
+++ b/usr/src/uts/common/fs/zfs/abd.c
@@ -146,9 +146,12 @@ boolean_t zfs_abd_scatter_enabled = B_TRUE;
  * it at runtime would cause ABD iteration to work incorrectly for ABDs which
  * were allocated with the old size, so a safeguard has been put in place which
  * will cause the machine to panic if you change it and try to access the data
- * within a scattered ABD.
+ * within a scattered ABD. Note that tuning this value to be smaller than the
+ * page size can induce heavy fragmentation in the slab layer, which may itself
+ * result in more memory waste than is saved by the smaller chunk size -- and
+ * will induces more computational work in the slab layer. Tune with caution!
  */
-size_t zfs_abd_chunk_size = 1024;
+size_t zfs_abd_chunk_size = 4096;
 
 #ifdef _KERNEL
 extern vmem_t *zio_alloc_arena;
