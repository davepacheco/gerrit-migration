From a705172b19739c0a912e540b8cb191321aaaa310 Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Thu, 28 Feb 2019 00:22:18 +0000
Subject: [PATCH] MANTA-4136 garbage-collector redundantly buffers
 manta_fastdelete_queue records

---
 lib/moray_delete_record_reader.js | 21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/lib/moray_delete_record_reader.js b/lib/moray_delete_record_reader.js
index 96c643d..91436ed 100644
--- a/lib/moray_delete_record_reader.js
+++ b/lib/moray_delete_record_reader.js
@@ -287,7 +287,7 @@ state_running(S)
 	}
 
 	var req = self._find_objects();
-	var record_keys = [];
+	var numseen = 0;
 
 	var paused_in_flight = false;
 	var shutdown_in_flight = false;
@@ -311,7 +311,8 @@ state_running(S)
 
 		if (self._is_allowed_creator(creator)) {
 			self.mr_listener.emit('record', record);
-			record_keys.push(record.key);
+			self.mr_log.info({ record: record.key }, 'Received key.');
+			numseen++;
 		}
 	});
 
@@ -329,7 +330,7 @@ state_running(S)
 	});
 
 	req.on('end', function () {
-		if (record_keys.length === 0) {
+		if (numseen === 0) {
 			/*
 			 * Begin exponential backoff if we've received 0 delete
 			 * records twice in a row. The queue is likely empty at
@@ -344,16 +345,20 @@ state_running(S)
 			self.mr_log.info({
 				bucket: self.mr_bucket,
 				shard: self.mr_shard,
-				num: record_keys.length,
-				keys: record_keys
-			}, 'Received records.');
+				num: numseen,
+			}, 'findObjects: done');
 
+			/*
+			 * Collector received records, reset any exponentiated
+			 * backoff that may have built up when the collector saw
+			 * 0 results from Moray's findObjects.
+			 */
 			self._reset_empty_backoff();
 
 			if (self.mr_ctx.ctx_metrics_manager) {
 				self._get_collector().getCollector(
 					'gc_delete_records_read').observe(
-					record_keys.length, {
+					numseen, {
 					bucket: self.mr_bucket,
 					shard: self.mr_shard
 				});
@@ -366,7 +371,7 @@ state_running(S)
 		 */
 		self.mr_err_timeout = 1000;
 
-		self.mr_prev_records_received = record_keys.length;
+		self.mr_prev_records_received = numseen;
 
 		if (check_cancelled()) {
 			return;
-- 
2.21.0

