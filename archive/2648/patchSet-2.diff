From 7ba569e813dfe86452e4123a6ce2555051a6f929 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Thu, 28 Sep 2017 17:44:27 +0200
Subject: [PATCH] TOOLS-1868 sdcadm: update ufds is broken when there isn't a
 manatee instance on the headnode

---
 lib/procedures/update-ufds-service-v1.js | 177 ++++++++++++-----------
 1 file changed, 94 insertions(+), 83 deletions(-)

diff --git a/lib/procedures/update-ufds-service-v1.js b/lib/procedures/update-ufds-service-v1.js
index b1600dc..f913522 100644
--- a/lib/procedures/update-ufds-service-v1.js
+++ b/lib/procedures/update-ufds-service-v1.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -16,6 +16,7 @@ var fs = require('fs');
 var vasync = require('vasync');
 
 var common = require('../common');
+var errors = require('../errors');
 
 var Procedure = require('./procedure').Procedure;
 var s = require('./shared');
@@ -66,17 +67,15 @@ UpdateUFDSServiceV1.prototype.execute = function ufdsv1Execute(opts, cb) {
     var self = this;
     var log = opts.log;
     var progress = opts.progress;
-    var rollback = opts.plan.rollback ||Â false;
+    var rollback = opts.plan.rollback || false;
 
     function updateUFDS(change, nextSvc) {
-        var arg = {
+        var ctx = {
             change: change,
             opts: opts,
             userScript: false
         };
-        var manateeUUID;
-        var primaryManatee;
-        var primaryServer;
+
         var t = new Date().toISOString().replace(/[\-:\.Z]/g, '');
 
         if (opts.plan.changes.length > 1) {
@@ -85,81 +84,108 @@ UpdateUFDSServiceV1.prototype.execute = function ufdsv1Execute(opts, cb) {
         }
 
         var funcs = [
-            function getLocalManatee(_, next) {
-                progress('Running vmadm lookup to get local manatee');
-                var argv = [
-                    '/usr/sbin/vmadm',
-                    'lookup',
-                    'state=running',
-                    'alias=~manatee'
-                ];
-                common.execFilePlus({
-                    argv: argv,
-                    log: log
-                }, function (err, stdout, stderr) {
-                    if (err) {
-                        next(err);
-                    } else {
-                        var manatees = stdout.trim().split('\n');
-                        manateeUUID = manatees[0];
-                        log.debug('Local manatee instance found: %s',
-                            manateeUUID);
-                        next();
+            function getManateeVms(arg, next) {
+                opts.sdcadm.vmapi.listVms({
+                    'tag.smartdc_role': 'manatee',
+                    state: 'running'
+                }, function listVmsCb(vmsErr, vms) {
+                    if (vmsErr) {
+                        next(vmsErr);
+                        return;
+                    }
+                    if (!Array.isArray(vms) || !vms.length || !vms[0]) {
+                        next(new errors.SDCClientError(new Error(
+                            'No manatee "vms" found'), 'vmapi'));
+                        return;
+                    }
+
+                    var errs = [];
+                    vms.forEach(function validateVmFormat(vm) {
+                        if (!vm.uuid || !common.UUID_RE.test(vm.uuid) ||
+                            !vm.server_uuid ||
+                            !common.UUID_RE.test(vm.server_uuid)) {
+                                errs.push(new errors.ValidationError({
+                                        message: util.format(
+                                            'Invalid manatee VM format: %j',
+                                            JSON.stringify(vm))
+                                }));
+                            }
+                    });
+                    if (errs.length) {
+                        if (errs.length === 1) {
+                            next(errs[0]);
+                        } else {
+                            next(new errors.MultiError(errs));
+                        }
+                        return;
                     }
+                    arg.manateeVms = vms;
+                    next();
                 });
             },
+
             /**
              * We want to backup UFDS data before we proceed with the upgrade.
              * Either the primary or the sync manatees are good to take the data
              * backup there.
              */
-            function findPrimaryManatee(_, next) {
+            function findPrimaryManatee(arg, next) {
                 progress('Running manatee-adm to find primary manatee');
-                var cmd = 'source ~/.bashrc; ' +
-                    '/opt/smartdc/manatee/node_modules/.bin/manatee-adm status';
-                var argv = [
-                    '/usr/sbin/zlogin',
-                    manateeUUID,
-                    cmd
-                ];
-                common.execFilePlus({
-                    argv: argv,
+
+                common.manateeAdmRemote({
+                    server: arg.manateeVms[0].server_uuid,
+                    vm: arg.manateeVms[0].uuid,
+                    cmd: 'status',
                     log: log
-                }, function (err, stdout, stderr) {
+                }, function (err, stdout, _) {
                     if (err) {
                         next(err);
-                    } else {
-                        // REVIEW: Shall we try/catch here?
-                        var manateeCfg = JSON.parse(stdout);
-                        if (!manateeCfg.sdc) {
-                            next('Cannot find manatee sdc shard config');
-                        } else {
-                            primaryManatee = manateeCfg.sdc.primary.zoneId;
-                            next();
-                        }
+                        return;
+                    }
+                    var manateeCfg;
+                    try {
+                        manateeCfg = JSON.parse(stdout);
+                    } catch (e) {
+                        next(e);
+                        return;
+                    }
+                    if (!manateeCfg.sdc) {
+                        next(new errors.InternalError(
+                            'Cannot find manatee sdc shard config'));
+                        return;
                     }
-                });
-            },
 
-            function findPrimaryManateeServer(_, next) {
-                opts.sdcadm.vmapi.getVm({
-                    uuid: primaryManatee
-                }, function (err, vm) {
-                    if (err) {
-                        return next(err);
+                    if (!manateeCfg.sdc.primary ||
+                        !manateeCfg.sdc.primary.zoneId ||
+                        !common.UUID_RE.test(manateeCfg.sdc.primary.zoneId)) {
+                        next(new errors.InternalError(
+                            'Unexpected manatee sdc shard config format'));
+                        return;
                     }
-                    primaryServer = vm.server_uuid;
-                    return next();
+
+                    var primaryArr = arg.manateeVms.filter(
+                        function filterManateeVms(vm) {
+                            return (vm.uuid === manateeCfg.sdc.primary.zoneId);
+                    });
+
+                    if (primaryArr.length !== 1) {
+                        next(new errors.InternalError(
+                            'Cannot find manatee sdc shard primary'));
+                        return;
+                    }
+
+                    arg.primaryManatee = primaryArr[0];
+                    next();
                 });
             },
 
-            function backupUFDSBuckets(_, next) {
+            function backupUFDSBuckets(arg, next) {
                 progress('Creating ufds buckets backup %s.sql', t);
                 var argv = [
                     '/opt/smartdc/bin/sdc-oneachnode',
                     format('-T%d', opts.ufds_backup_timeout),
-                    format('-n %s ', primaryServer),
-                    format('/usr/sbin/zlogin %s ', primaryManatee) +
+                    format('-n %s ', arg.primaryManatee.server_uuid),
+                    format('/usr/sbin/zlogin %s ', arg.primaryManatee.uuid) +
                     '\'/opt/local/bin/pg_dump -U moray -t ufds* ' +
                             'moray\' > /var/tmp/' + t + '.sql'
                 ];
@@ -167,19 +193,14 @@ UpdateUFDSServiceV1.prototype.execute = function ufdsv1Execute(opts, cb) {
                 common.execFilePlus({
                     argv: argv,
                     log: log
-                }, function (err, stdout, stderr) {
-                    if (err) {
-                        return next(err);
-                    }
-                    return next();
-                });
+                }, next);
             },
 
-            function copyBackupToHeadnode(_, next) {
+            function copyBackupToHeadnode(arg, next) {
                 progress('Copying backup file to HeadNode');
                 var argv = [
                     '/opt/smartdc/bin/sdc-oneachnode',
-                    format('-n %s', primaryServer),
+                    format('-n %s', arg.primaryManatee.server_uuid),
                     format('-p/var/tmp/%s.sql', t),
                     format('-d/var/tmp'),
                     format('-T%d', opts.ufds_backup_timeout),
@@ -189,15 +210,10 @@ UpdateUFDSServiceV1.prototype.execute = function ufdsv1Execute(opts, cb) {
                 common.execFilePlus({
                     argv: argv,
                     log: log
-                }, function (err, stdout, stderr) {
-                    if (err) {
-                        return next(err);
-                    }
-                    return next('');
-                });
+                }, next);
             },
 
-            function moveBackupToWorkingDir(_, next) {
+            function moveBackupToWorkingDir(arg, next) {
                 progress('Moving backup file to /var/sdcadm/ufds-backup');
                 var bPath = '/var/sdcadm/ufds-backup';
                 var exists = fs.existsSync(bPath);
@@ -207,19 +223,14 @@ UpdateUFDSServiceV1.prototype.execute = function ufdsv1Execute(opts, cb) {
 
                 var argv = [
                     '/usr/bin/mv',
-                    format('/var/tmp/%s', primaryServer),
+                    format('/var/tmp/%s', arg.primaryManatee.server_uuid),
                     format('%s/%s.sql', bPath, t)
                 ];
 
                 common.execFilePlus({
                     argv: argv,
                     log: log
-                }, function (err, stdout, stderr) {
-                    if (err) {
-                        return next(err);
-                    }
-                    return next('');
-                });
+                }, next);
             }
         ];
 
@@ -237,7 +248,7 @@ UpdateUFDSServiceV1.prototype.execute = function ufdsv1Execute(opts, cb) {
             s.imgadmInstall,
             s.reprovision,
             s.waitForInstToBeUp
-        ]), arg: arg}, nextSvc);
+        ]), arg: ctx}, nextSvc);
     }
 
     // Mirroring UpdateStatelessServicesV1, even though here we should
@@ -248,7 +259,7 @@ UpdateUFDSServiceV1.prototype.execute = function ufdsv1Execute(opts, cb) {
     }, cb);
 };
 
-//---- exports
+// --- exports
 
 module.exports = {
     UpdateUFDSServiceV1: UpdateUFDSServiceV1
-- 
2.21.0

