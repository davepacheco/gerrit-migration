commit b6a75087b6602152fc900399e87153eba79995b0 (refs/changes/85/85/2)
Author: Pedro P. Candel <pedro@joyent.com>
Date:   2016-07-18T13:11:34+02:00 (3 years, 3 months ago)
    
    TOOLS-1429 sdcadm update-gz-tools /path/to/file does not work
    Reviewed by: Joshua M. Clulow <jmc@joyent.com>

diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 717d84c..e261af1 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -1993,6 +1993,7 @@ SdcAdm.prototype.updateGzTools = function updateGzTools(options, callback) {
     var justDownload = options.justDownload;
     var forceReinstall = options.forceReinstall;
     var localVersion;
+    var useFile = false;
     // Used by sdcadm history:
     var changes = [];
     var hist;
@@ -2326,6 +2327,7 @@ SdcAdm.prototype.updateGzTools = function updateGzTools(options, callback) {
             // Check if the value of the parameter `image` is a file
             } else if (fs.existsSync(options.image)) {
                 filepath = options.image;
+                useFile = true;
                 deleteOnFinish = false;
                 next();
             } else {
@@ -2347,7 +2349,8 @@ SdcAdm.prototype.updateGzTools = function updateGzTools(options, callback) {
                     localVersion = data.trim();
                     progress('UUID of latest installed gz-tools image ' +
                                     'is:\n  %s\n', localVersion);
-                    if (localVersion === image.uuid && !forceReinstall) {
+                    if (!useFile && localVersion === image.uuid &&
+                            !forceReinstall) {
                         progress('Image %s is already installed.',
                                 localVersion);
                         progress('Please re-run with `--force-reinstall` ' +
@@ -2406,7 +2409,7 @@ SdcAdm.prototype.updateGzTools = function updateGzTools(options, callback) {
                 progress('Using gz-tools tarball file %s', filepath);
                 next();
             } else {
-                if (image.name !== 'gz-tools' && !options.force) {
+                if (image.name !== 'gz-tools') {
                     callback(new errors.UsageError(
                         'name of image by given uuid is not \'gz-tools\''));
                 }
diff --git a/test/update-gz-tools.test.js b/test/update-gz-tools.test.js
index 1d10b69..55cd642 100644
--- a/test/update-gz-tools.test.js
+++ b/test/update-gz-tools.test.js
@@ -18,15 +18,22 @@ var assert = require('assert-plus');
 var CURRENT_GZ_TOOLS_VERSION = null;
 var LATEST_GZ_TOOLS_UUID = null;
 
-test('setup', function (t) {
+function getGzToolsVersion(t, cb) {
     fs.readFile('/opt/smartdc/etc/gz-tools.image', {
         encoding: 'utf8'
     }, function (err, data) {
         t.ifError(err);
         t.ok(data);
+        cb(data.trim());
+    });
+}
+
+
+test('setup', function (t) {
+    getGzToolsVersion(t, function (data) {
         CURRENT_GZ_TOOLS_VERSION = data;
-        var updatesCmd = '/opt/smartdc/bin/updates-imgadm list name=gz-tools ' +
-            '--latest -o uuid -H';
+        var updatesCmd = '/opt/smartdc/bin/updates-imgadm list ' +
+            'name=gz-tools --latest -o uuid -H';
         exec(updatesCmd, function (err2, stdout, stderr) {
             t.ifError(err2);
             LATEST_GZ_TOOLS_UUID = stdout.trim();
@@ -44,7 +51,10 @@ test('update-gz-tools --latest --just-download', function (t) {
         t.ifError(err);
         console.log(stdout);
         t.equal(stderr, '');
-        t.end();
+        getGzToolsVersion(t, function (data) {
+            t.equal(CURRENT_GZ_TOOLS_VERSION, data);
+            t.end();
+        });
     });
 });
 
@@ -69,7 +79,10 @@ test('update-gz-tools --latest --concurrency=3', function (t) {
         t.ifError(err);
         console.log(stdout);
         t.equal(stderr, '');
-        t.end();
+        getGzToolsVersion(t, function (data) {
+            t.equal(LATEST_GZ_TOOLS_UUID, data);
+            t.end();
+        });
     });
 });
 
@@ -83,9 +96,24 @@ test('update-gz-tools --latest w/o --force-reinstall', function (t) {
     });
 });
 
+test('update-gz-tools /path/to/installer', function (t) {
+    var cmd = util.format('sdcadm experimental update-gz-tools ' +
+        '/var/tmp/backup-gz-tools-%s.tgz ' +
+        '--force-reinstall', LATEST_GZ_TOOLS_UUID);
+    exec(cmd, function (err, stdout, stderr) {
+        t.ifError(err);
+        console.log(stdout);
+        t.equal(stderr, '');
+        t.end();
+    });
+});
+
+
 // The final test case must consist on leaving the system running exactly
 // the same gz-tools version it was before we began running these tests:
-test('update-gz-tools IMAGE-UUID', function (t) {
+test('update-gz-tools IMAGE-UUID', {
+    skip: CURRENT_GZ_TOOLS_VERSION === LATEST_GZ_TOOLS_UUID
+}, function (t) {
     var cmd = 'sdcadm experimental update-gz-tools ' +
         '--force-reinstall ' +
         CURRENT_GZ_TOOLS_VERSION;
@@ -93,7 +121,10 @@ test('update-gz-tools IMAGE-UUID', function (t) {
         t.ifError(err);
         console.log(stdout);
         t.equal(stderr, '');
-        t.end();
+        getGzToolsVersion(t, function (data) {
+            t.equal(CURRENT_GZ_TOOLS_VERSION, data);
+            t.end();
+        });
     });
 });
 
