From 6f86eb03a7f4282b06a31069ea3c48bcf177ee02 Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Wed, 26 Apr 2017 10:03:21 -0700
Subject: [PATCH] DOCKER-1042 failure in triton docker tests assuming
 nginx:latest exposes port 443

---
 test/integration/cli-run-ports.test.js | 38 ++++++++++----------------
 1 file changed, 14 insertions(+), 24 deletions(-)

diff --git a/test/integration/cli-run-ports.test.js b/test/integration/cli-run-ports.test.js
index 8b31691..a660c57 100644
--- a/test/integration/cli-run-ports.test.js
+++ b/test/integration/cli-run-ports.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -216,7 +216,7 @@ test('no port args', function (tt) {
             partialExp: {
                 firewall_enabled: true,
                 internal_metadata: {
-                    'docker:tcp_unpublished_ports': JSON.stringify([ 443, 80 ])
+                    'docker:tcp_unpublished_ports': JSON.stringify([ 80 ])
                 },
                 tags: {
                     sdc_docker: true
@@ -237,8 +237,7 @@ test('no port args', function (tt) {
             },
             NetworkSettings: {
                 Ports: {
-                    '80/tcp': null,
-                    '443/tcp': null
+                    '80/tcp': null
                 }
             }
         };
@@ -274,15 +273,13 @@ test('-P', function (tt) {
             },
             HostConfig: {
                 PortBindings: {
-                    '80/tcp' : portBindingsPort(80),
-                    '443/tcp' : portBindingsPort(443)
+                    '80/tcp' : portBindingsPort(80)
                 },
                 PublishAllPorts: true
             },
             NetworkSettings: {
                 Ports: {
-                    '80/tcp': netSettingsPort(80),
-                    '443/tcp': netSettingsPort(443)
+                    '80/tcp': netSettingsPort(80)
                 }
             }
         };
@@ -301,7 +298,7 @@ test('-P', function (tt) {
                 vm: h.dockerIdToUuid(cli.lastCreated)
             },
             expected: [
-                exposeRule('tcp', cli.lastCreated, [80, 443])
+                exposeRule('tcp', cli.lastCreated, [80])
             ]
         });
     });
@@ -326,8 +323,7 @@ test('-P', function (tt) {
         cli.port(t, {
             id: cli.lastCreated,
             expected: {
-                '80/tcp': zeroAddr(80),
-                '443/tcp': zeroAddr(443)
+                '80/tcp': zeroAddr(80)
             }
         });
     });
@@ -355,8 +351,7 @@ test('-p', function (tt) {
             },
             NetworkSettings: {
                 Ports: {
-                    '80/tcp': netSettingsPort(80),
-                    '443/tcp': null
+                    '80/tcp': netSettingsPort(80)
                 }
             }
         };
@@ -387,7 +382,7 @@ test('-p', function (tt) {
             partialExp: {
                 firewall_enabled: true,
                 internal_metadata: {
-                    'docker:tcp_unpublished_ports': JSON.stringify([ 443 ])
+                    //'docker:tcp_unpublished_ports': JSON.stringify([])
                 },
                 tags: {
                     sdc_docker: true
@@ -433,7 +428,7 @@ test('-P and -p', function (tt) {
                 vm: h.dockerIdToUuid(cli.lastCreated)
             },
             expected: [
-                exposeRule('tcp', cli.lastCreated, [80, 90, 443]),
+                exposeRule('tcp', cli.lastCreated, [80, 90]),
                 exposeRule('udp', cli.lastCreated, [54])
             ]
         });
@@ -468,8 +463,7 @@ test('-P and -p', function (tt) {
                 PortBindings: {
                     '54/udp': portBindingsPort(54),
                     '80/tcp': portBindingsPort(80),
-                    '90/tcp': portBindingsPort(90),
-                    '443/tcp': portBindingsPort(443)
+                    '90/tcp': portBindingsPort(90)
                 },
                 PublishAllPorts: true
             },
@@ -477,8 +471,7 @@ test('-P and -p', function (tt) {
                 Ports: {
                     '54/udp': netSettingsPort(54),
                     '80/tcp': netSettingsPort(80),
-                    '90/tcp': netSettingsPort(90),
-                    '443/tcp': netSettingsPort(443)
+                    '90/tcp': netSettingsPort(90)
                 }
             }
         };
@@ -496,8 +489,7 @@ test('-P and -p', function (tt) {
             expected: {
                 '54/udp': zeroAddr(54),
                 '80/tcp': zeroAddr(80),
-                '90/tcp': zeroAddr(90),
-                '443/tcp': zeroAddr(443)
+                '90/tcp': zeroAddr(90)
             }
         });
     });
@@ -530,9 +522,7 @@ test('-p range', function (tt) {
                 PublishAllPorts: false
             },
             NetworkSettings: {
-                Ports: {
-                    '443/tcp': null
-                }
+                Ports: {}
             }
         };
 
-- 
2.21.0

