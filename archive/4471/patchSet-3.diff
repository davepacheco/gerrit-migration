From 64663d032b9a1878da93e53a6a1220e71b58c7e4 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Tue, 3 Jul 2018 18:59:45 +0200
Subject: [PATCH] TRITON-558 sdcadm should check that sapi is in full mode
 before performing any update Reviewed by: Marsell Kukuljevic
 <marsell@joyent.com> Approved by: Marsell Kukuljevic <marsell@joyent.com>

---
 lib/procedures/index.js                    | 22 +++++++++++
 lib/procedures/update-sapi-v2.js           | 21 +---------
 lib/procedures/update-single-hn-sapi-v1.js | 45 +---------------------
 3 files changed, 24 insertions(+), 64 deletions(-)

diff --git a/lib/procedures/index.js b/lib/procedures/index.js
index c8aae08..e9486cf 100644
--- a/lib/procedures/index.js
+++ b/lib/procedures/index.js
@@ -127,6 +127,28 @@ function coordinatePlan(opts, cb) {
     var changes = opts.plan.changes.slice();
     var procs = [];
     vasync.pipeline({funcs: [
+        /**
+         * If SAPI isn't in full mode, we'll error out and stop the updates
+         */
+        function ensureSapiFullMode(_, next) {
+            progress('Verifying SAPI full mode');
+            sdcadm.sapi.getMode(function getModeCb(err, mode) {
+                if (err) {
+                    next(err);
+                    return;
+                }
+
+                if (mode !== 'full') {
+                    var msg = 'SAPI is not in full mode. ' +
+                        'This could mean initial setup failed. ' +
+                        'Please fix SAPI VMs before continue:\n' +
+                        '   `sdc-sapi /mode?mode=full -X POST`';
+                    next(new errors.UpdateError(new Error(msg), 'sapi'));
+                    return;
+                }
+                next();
+            });
+        },
         /**
          * Add the procedure for downloading images (from updates.joyent.com),
          * if necessary.
diff --git a/lib/procedures/update-sapi-v2.js b/lib/procedures/update-sapi-v2.js
index ff9e574..2c32438 100644
--- a/lib/procedures/update-sapi-v2.js
+++ b/lib/procedures/update-sapi-v2.js
@@ -95,26 +95,7 @@ UpdateSapiV2.prototype.execute = function sapiv2Execute(opts, cb) {
             progress('--- Updating %s ...', change.service.name);
         }
 
-        var funcs = [
-            function ensureFullMode(_, next) {
-                progress('Verifying SAPI full mode');
-                sdcadm.sapi.getMode(function (err, m) {
-                    if (err) {
-                        next(err);
-                        return;
-                    }
-
-                    if (m !== 'full') {
-                        var msg = 'SAPI is not in full mode. ' +
-                            'This could mean initial setup failed. ' +
-                            'Please fix SAPI VMs before continue.';
-                        next(new errors.UpdateError(new Error(msg), 'sapi'));
-                        return;
-                    }
-                    next();
-                });
-            }
-        ];
+        var funcs = [];
 
         if (rollback) {
             funcs.push(s.getOldUserScript);
diff --git a/lib/procedures/update-single-hn-sapi-v1.js b/lib/procedures/update-single-hn-sapi-v1.js
index 62b3c0c..a994fac 100644
--- a/lib/procedures/update-single-hn-sapi-v1.js
+++ b/lib/procedures/update-single-hn-sapi-v1.js
@@ -77,57 +77,14 @@ UpdateSingleHNSapiV1.prototype.execute = function sapiv1Execute(opts, cb) {
             tmpAlias: inst.alias + 'tmp',
             tmpUUID: null
         };
-        var mode = 'full';
 
         if (opts.plan.changes.length > 1) {
             progress('');
             progress('--- Updating %s ...', change.service.name);
         }
 
-        var funcs = [
-            function getMode(_, next) {
-                progress('Get SAPI current mode');
-                sdcadm.sapi.getMode(function (err, m) {
-                    if (err) {
-                        return next(err);
-                    }
-
-                    if (m !== 'full') {
-                        mode = m;
-                    }
-                    return next();
-                });
-            },
+        var funcs = [];
 
-            function setFullMode(_, next) {
-                if (mode === 'full') {
-                    next();
-                    return;
-                }
-                progress('Attempt to set SAPI full mode');
-                sdcadm.sapi.setMode('full', next);
-            },
-
-            function ensureFullMode(_, next) {
-                if (mode === 'full') {
-                    next();
-                    return;
-                }
-                progress('Verifying SAPI full mode');
-                sdcadm.sapi.getMode(function (err, m) {
-                    if (err) {
-                        return next(err);
-                    }
-
-                    if (m !== 'full') {
-                        var msg = 'Unable to set SAPI to full mode.';
-                        return next(new errors.UpdateError(new Error(
-                                    msg), 'sapi'));
-                    }
-                    return next();
-                });
-            }
-        ];
         if (rollback) {
             funcs.push(s.getOldUserScript);
         } else {
-- 
2.21.0

