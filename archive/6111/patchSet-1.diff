From 2ad33c4b8d59ff449c0707e2b2b2764554604100 Mon Sep 17 00:00:00 2001
From: dyep <dyep49@gmail.com>
Date: Mon, 15 Apr 2019 05:01:24 -0700
Subject: [PATCH] TRITON-1299 need logarchiver-agent service to run along side
 hermes-actor

---
 actor/actor.js                 | 21 ++++++--
 actor/lib/logsets.js           | 35 ++++++++++--
 actor/lib/worker.js            | 97 +++++++++++++++++++---------------
 etc/config.json.sample         |  3 ++
 hermes.js                      | 21 ++++++--
 lib/httpserver.js              |  9 +++-
 lib/logsets.js                 |  3 +-
 package.json                   |  3 +-
 sapi_manifests/hermes/template |  6 ++-
 scripts/actor.ksh              | 12 +++--
 scripts/actor.xml              |  8 +--
 scripts/bootstrap.ksh          | 14 +++--
 12 files changed, 165 insertions(+), 67 deletions(-)

diff --git a/actor/actor.js b/actor/actor.js
index 4fb8471..92a0403 100644
--- a/actor/actor.js
+++ b/actor/actor.js
@@ -16,6 +16,7 @@ var mod_path = require('path');
 var mod_assert = require('assert-plus');
 var mod_backoff = require('backoff');
 var mod_jsprim = require('jsprim');
+var mod_mahi = require('mahi');
 var mod_manta = require('manta');
 var mod_vasync = require('vasync');
 var mod_yakaa = require('yakaa');
@@ -67,6 +68,10 @@ var GS = {
 	gs_backoff: null,
 	gs_heartbeat_timeout: null,
 
+	gs_mahi: {
+		client: null
+	},
+
 	gs_manta: {
 		agent: null,
 		client: null,
@@ -321,16 +326,24 @@ handle_message(msg)
 		log.info({
 			config: msg.config,
 			http_proxy: msg.http_proxy,
-			https_proxy: msg.https_proxy
+			https_proxy: msg.https_proxy,
+			mahi: msg.mahi
 		}, 'received manta configuration from server');
 
 		if (GS.gs_manta.client) {
 			GS.gs_manta.client.close();
 		}
+		if (GS.gs_mahi.client) {
+			GS.gs_mahi.client.close();
+		}
 		if (GS.gs_manta.agent) {
 			GS.gs_manta.agent.destroy();
 		}
 
+		GS.gs_mahi.client = mod_mahi.createClient({
+			url: msg.mahi.url
+		});
+
 		GS.gs_manta.user = msg.config.user;
 
 		/*
@@ -491,7 +504,8 @@ start_worker(logset_name)
 			logset_name: logset_name
 		}),
 		datacenter: GS.gs_dcname,
-		nodename: GS.gs_sysinfo['UUID']
+		nodename: GS.gs_sysinfo['UUID'],
+		mahi: GS.gs_mahi.client
 	});
 
 	/*
@@ -579,7 +593,8 @@ resched()
 function
 main()
 {
-	lib_utils.create_logger(GS, 'hermes-actor');
+	var service_name = process.argv[2];
+	lib_utils.create_logger(GS, service_name);
 
 	mod_vasync.pipeline({
 		funcs: [
diff --git a/actor/lib/logsets.js b/actor/lib/logsets.js
index 1838815..6c41de1 100644
--- a/actor/lib/logsets.js
+++ b/actor/lib/logsets.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 
@@ -112,9 +112,33 @@ parse_date(logset, logpath)
 	return (null);
 }
 
+function
+uuid_to_account(logset, logpath, mahi, callback)
+{
+	var m = logset.regex.exec(logpath);
+
+	if (!logset.customer_uuid) {
+		callback();
+		return;
+	}
+
+	var position = logset.customer_uuid.slice(1);
+	var customer_uuid = m[position];
+
+	mahi.getAccountById(customer_uuid, function onAccount(err, response) {
+		if (err) {
+		    callback(err);
+		    return;
+		}
+
+		callback(null, response.account.login);
+	});
+}
+
 /*
  * Substitute:
  *   %u --> Manta User
+ *   %U --> Manta Customer Username
  *   %d --> Datacentre Name
  *   %z --> Zone Name
  *   %n --> Node Name (or Zone Name for a Zone)
@@ -125,7 +149,7 @@ parse_date(logset, logpath)
  *      --> UTC Date/Time from (possibly adjusted) date_string matches
  */
 function
-local_to_manta_path(manta_user, logset, logpath, datacenter, nodename)
+local_to_manta_path(manta_user, logset, logpath, datacenter, nodename, customer)
 {
 	var m = logset.regex.exec(logpath);
 	var indate = parse_date(logset, logpath);
@@ -188,6 +212,10 @@ local_to_manta_path(manta_user, logset, logpath, datacenter, nodename)
 				out += manta_user;
 				state = null;
 				break;
+			case 'U':
+				out += customer;
+				state = null;
+				break;
 			case 'r':
 				out += logset.zonerole;
 				state = null;
@@ -280,7 +308,8 @@ module.exports = {
 	list_logsets: list_logsets,
 	local_to_manta_path: local_to_manta_path,
 	parse_date: parse_date,
-	ready: ready
+	ready: ready,
+	uuid_to_account: uuid_to_account
 };
 
 /* vim: set syntax=javascript ts=8 sts=8 sw=8 noet: */
diff --git a/actor/lib/worker.js b/actor/lib/worker.js
index ac3cf82..43b1b95 100644
--- a/actor/lib/worker.js
+++ b/actor/lib/worker.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var mod_fs = require('fs');
@@ -42,6 +42,7 @@ LogsetWorker(options)
 
 	self.lsw_log = options.log;
 	self.lsw_manta = options.manta;
+	self.lsw_mahi = options.mahi;
 
 	self.lsw_logset = options.logset;
 
@@ -253,52 +254,64 @@ _disp()
 	/*
 	 * Derive the path that we would upload this file to, in Manta:
 	 */
-	var manta_path = lib_logsets.local_to_manta_path(self.lsw_manta_user,
-	    self.lsw_logset, inf.path, self.lsw_datacenter, self.lsw_nodename);
-
-	/*
-	 * If we are not attempting to delete the file, an act that may cause
-	 * permanent data loss if mishandled, we can trust our memory of a
-	 * recent verification.
-	 */
-	if (!_delete && REMEMBER.uploaded_already(inf.real_path, manta_path,
-	    inf.mtime.valueOf())) {
-		self.lsw_log.trace({
-			file: inf
-		}, 'upload remembered; skipping until deletion required');
-		_swtch();
-		return;
-	}
-
-	self.lsw_log.debug({
-		file: inf,
-		manta_path: manta_path,
-		do_delete: _delete
-	}, 'archiving log file');
-
-	self._manta_upload(inf, manta_path, _delete, function (err) {
+	lib_logsets.uuid_to_account(self.lsw_logset, inf.path, self.lsw_mahi,
+	function getAccount(err, customer) {
 		if (err) {
-			self.lsw_log.error({
-				err: err
-			}, 'failed to upload file to Manta');
-			setTimeout(function () {
-				/*
-				 * Inject a pause, and then continue...
-				 */
-				_swtch();
-			}, 1000);
-			return;
+		    self.lsw_log.error({
+			err: err
+		    }, 'failed to translate customer UUID to Manta account');
+		    _swtch();
+		    return;
 		}
 
+		var manta_path = lib_logsets.local_to_manta_path(self.lsw_manta_user,
+		    self.lsw_logset, inf.path, self.lsw_datacenter, self.lsw_nodename,
+		    customer);
+
 		/*
-		 * We have either uploaded this file, or verified that it has
-		 * previously been uploaded with identical contents.  Cache
-		 * this to avoid needing to re-verify in the next enumeration:
+		 * If we are not attempting to delete the file, an act that may cause
+		 * permanent data loss if mishandled, we can trust our memory of a
+		 * recent verification.
 		 */
-		REMEMBER.mark_uploaded(inf.real_path, manta_path,
-		    inf.mtime.valueOf());
-		_swtch();
-		return;
+		if (!_delete && REMEMBER.uploaded_already(inf.real_path, manta_path,
+		    inf.mtime.valueOf())) {
+			self.lsw_log.trace({
+				file: inf
+			}, 'upload remembered; skipping until deletion required');
+			_swtch();
+			return;
+		}
+
+		self.lsw_log.debug({
+			file: inf,
+			manta_path: manta_path,
+			do_delete: _delete
+		}, 'archiving log file');
+
+		self._manta_upload(inf, manta_path, _delete, function (err) {
+			if (err) {
+				self.lsw_log.error({
+					err: err
+				}, 'failed to upload file to Manta');
+				setTimeout(function () {
+					/*
+					 * Inject a pause, and then continue...
+					 */
+					_swtch();
+				}, 1000);
+				return;
+			}
+
+			/*
+			 * We have either uploaded this file, or verified that it has
+			 * previously been uploaded with identical contents.  Cache
+			 * this to avoid needing to re-verify in the next enumeration:
+			 */
+			REMEMBER.mark_uploaded(inf.real_path, manta_path,
+			    inf.mtime.valueOf());
+			_swtch();
+			return;
+		});
 	});
 };
 
diff --git a/etc/config.json.sample b/etc/config.json.sample
index afa4585..1230f09 100644
--- a/etc/config.json.sample
+++ b/etc/config.json.sample
@@ -10,6 +10,9 @@
   "cnapi": {
     "url": "http://cnapi.sf1.sf1.joyent.com"
   },
+  "mahi": {
+    "url": "http://mahi.sf1.sf1.joyent.com"
+  },
   "manta": {
     "url": "https://us-east.manta.joyent.com",
     "user": "manta_username",
diff --git a/hermes.js b/hermes.js
index ef75401..97292c5 100644
--- a/hermes.js
+++ b/hermes.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var mod_fs = require('fs');
@@ -137,6 +137,11 @@ validate_config(cfg)
 	if (!cfg)
 		return (false);
 
+	if (!cfg.mahi) {
+		GS.gs_log.info('configuration missing "mahi"');
+		return (false);
+	}
+
 	if (!cfg.manta) {
 		GS.gs_log.info('configuration missing "manta"');
 		return (false);
@@ -187,8 +192,13 @@ bootstrap_server(server)
 		server: server.uuid()
 	}, 'deploying actor');
 
+	var agent_name = GS.gs_config.service_name === 'hermes' ?
+		'hermes-actor' : 'logarchiver-agent';
+
 	var script = GS.gs_scriptmgr.load('bootstrap.ksh', {
 		ENDPOINT: GS.gs_config.admin_ip + ':' + GS.gs_config.port,
+		SERVICE_NAME: GS.gs_config.service_name,
+		AGENT_NAME: agent_name,
 		SMF_REVISION: 'HERMES-1'
 	});
 	server.execute([], {}, script, function (err, res) {
@@ -252,7 +262,8 @@ configure_server(server)
 		https_proxy: 'http://' + GS.gs_config.admin_ip +
 		    ':3128',
 		http_proxy: 'http://' + GS.gs_config.admin_ip +
-		    ':3128'
+		    ':3128',
+		mahi: GS.gs_config.mahi
 	});
 
 	server.configured(true);
@@ -325,6 +336,10 @@ main()
 		return;
 	}
 
+	if (GS.gs_config.service_name === 'sdc') {
+		GS.gs_config.service_name = 'hermes';
+	}
+
 	log.info('configuration valid; starting...');
 
 	log.debug('loading script manager');
@@ -348,7 +363,7 @@ main()
 	GS.gs_httpserver = new lib_httpserver.HttpServer(log.child({
 		component: 'HttpServer'
 	}), GS.gs_config.admin_ip, GS.gs_config.port, GS.gs_tarstamp,
-	    GS.gs_scriptmgr);
+	    GS.gs_scriptmgr, GS.gs_config.service_name);
 
 	GS.gs_httpserver.on('shed', function (shed) {
 		GS.gs_servermgr.accept(shed);
diff --git a/lib/httpserver.js b/lib/httpserver.js
index d63d4a4..c334a4b 100644
--- a/lib/httpserver.js
+++ b/lib/httpserver.js
@@ -22,7 +22,7 @@ var WATERSHED = new mod_watershed.Watershed();
 
 
 function
-HttpServer(log, ip, port, tarstamp, scriptmgr)
+HttpServer(log, ip, port, tarstamp, scriptmgr, service_name)
 {
 	var self = this;
 	mod_events.EventEmitter.call(self);
@@ -32,12 +32,16 @@ HttpServer(log, ip, port, tarstamp, scriptmgr)
 	mod_assert.number(port, 'port');
 	mod_assert.string(tarstamp, 'tarstamp');
 	mod_assert.object(scriptmgr, 'scriptmgr');
+	mod_assert.string(service_name, 'service_name');
 
 	self.hs_log = log;
 	self.hs_ip = ip;
 	self.hs_port = port;
 	self.hs_tarstamp = tarstamp;
 	self.hs_scriptmgr = scriptmgr;
+	self.service_name = service_name;
+	self.agent_name = self.service_name === 'hermes' ?
+		'hermes-actor' : 'logarchiver-agent';
 
 	setImmediate(function () {
 		self._init();
@@ -90,8 +94,11 @@ _init()
 	};
 
 	var get_script = function (filename, req, res, next) {
+
 		var script = self.hs_scriptmgr.load(filename, {
 			ENDPOINT: self.hs_ip + ':' + self.hs_port,
+			SERVICE_NAME: self.service_name,
+			AGENT_NAME: self.agent_name,
 			VERSION: self.hs_tarstamp,
 			SMF_REVISION: 'HERMES-1'
 		});
diff --git a/lib/logsets.js b/lib/logsets.js
index adf20ad..9da1413 100644
--- a/lib/logsets.js
+++ b/lib/logsets.js
@@ -51,7 +51,8 @@ var COPY_FIELDS = [
 	'date_string',
 	'date_adjustment',
 	'debounce_time',
-	'retain_time'
+	'retain_time',
+	'customer_uuid'
 ];
 
 /*
diff --git a/package.json b/package.json
index c058c03..f0b0356 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "hermes",
-  "version": "0.3.1",
+  "version": "0.4.1",
   "description": "Centralised tool to upload SDC logs to Manta",
   "main": "hermes.js",
   "author": "Joshua M. Clulow <jmc@joyent.com>",
@@ -12,6 +12,7 @@
     "cueball": "^2.0.1",
     "jsprim": "^1.4.0",
     "lstream": "^0.0.4",
+    "mahi": "^2.2.4",
     "manta": "^4.3.0",
     "once": "~1.2.0",
     "restify": "^4.3.0",
diff --git a/sapi_manifests/hermes/template b/sapi_manifests/hermes/template
index 2616519..c759940 100644
--- a/sapi_manifests/hermes/template
+++ b/sapi_manifests/hermes/template
@@ -11,11 +11,15 @@
   "cnapi": {
     "url": "http://{{{cnapi_domain}}}"
   },
+  "mahi": {
+    "url": "http://{{{mahi_domain}}}"
+  },
   "manta": {
     "user": "{{{SDC_MANTA_USER}}}",
     "url": "{{{SDC_MANTA_URL}}}",
     "key_id": "{{{SDC_KEY_ID}}}",
     "connect_timeout": "{{{HERMES_CONNECT_TIMEOUT}}}"
   },
-  "max_concurrent_bootstraps": 32
+  "max_concurrent_bootstraps": 32,
+  "service_name": "{{{SERVICE_NAME}}}"
 }
diff --git a/scripts/actor.ksh b/scripts/actor.ksh
index dc4bb68..84d178b 100644
--- a/scripts/actor.ksh
+++ b/scripts/actor.ksh
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
 set -o errexit
@@ -21,13 +21,15 @@ DIGEST=/usr/bin/digest
 SVCCFG=/usr/sbin/svccfg
 SVCADM=/usr/sbin/svcadm
 
-if [[ $SMF_FMRI != "svc:/smartdc/hermes-actor:default" ]]; then
+SERVICE_NAME=$1
+
+if [[ $SMF_FMRI != "svc:/smartdc/${SERVICE_NAME}:default" ]]; then
 	printf "ERROR: not running under correct SMF service\n" >&2
 	exit $SMF_EXIT_ERR_NOSMF
 fi
 
-ACTOR_DIR="/opt/smartdc/hermes-actor"
-TMPFILE="/tmp/.hermes-actor.$$.tar.gz"
+ACTOR_DIR="/opt/smartdc/${SERVICE_NAME}"
+TMPFILE="/tmp/.${SERVICE_NAME}.$$.tar.gz"
 DEPLOY_DIR="${ACTOR_DIR}/deploy"
 VERFILE="${DEPLOY_DIR}/.version"
 
@@ -77,6 +79,6 @@ done
 # Start the actor
 #
 cd $DEPLOY_DIR
-${DEPLOY_DIR}/bin/node ${DEPLOY_DIR}/actor.js &
+${DEPLOY_DIR}/bin/node ${DEPLOY_DIR}/actor.js $SERVICE_NAME &
 
 # vim: set ts=8 sts=8 sw=8 noet:
diff --git a/scripts/actor.xml b/scripts/actor.xml
index 59bbee4..f5ad8c9 100644
--- a/scripts/actor.xml
+++ b/scripts/actor.xml
@@ -7,11 +7,11 @@
 -->
 
 <!--
-    Copyright (c) 2014, Joyent, Inc.
+    Copyright (c) 2019, Joyent, Inc.
 -->
 
-<service_bundle type="manifest" name="smartdc-hermes-actor">
-  <service name="smartdc/hermes-actor" type="service" version="1">
+<service_bundle type="manifest" name="smartdc-%%AGENT_NAME%%">
+  <service name="smartdc/%%AGENT_NAME%%" type="service" version="1">
 
     <create_default_instance enabled="false"/>
     <single_instance/>
@@ -20,7 +20,7 @@
       <service_fmri value="svc:/milestone/multi-user:default"/>
     </dependency>
 
-    <exec_method type="method" name="start" exec="/opt/smartdc/hermes-actor/method.ksh" timeout_seconds="600">
+    <exec_method type="method" name="start" exec="/opt/smartdc/%%AGENT_NAME%%/method.ksh %%AGENT_NAME%%" timeout_seconds="600">
       <method_context working_directory="/tmp"/>
     </exec_method>
 
diff --git a/scripts/bootstrap.ksh b/scripts/bootstrap.ksh
index 109e21b..18e78fa 100644
--- a/scripts/bootstrap.ksh
+++ b/scripts/bootstrap.ksh
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
 #
@@ -22,8 +22,16 @@ SVCCFG=/usr/sbin/svccfg
 SVCPROP=/usr/bin/svcprop
 CURL=/usr/bin/curl
 
-ACTOR_DIR="/opt/smartdc/hermes-actor"
-FMRI="svc:/smartdc/hermes-actor:default"
+SERVICE_NAME="%%SERVICE_NAME%%"
+
+if [ "$SERVICE_NAME" == "hermes" ]; then
+	AGENT_NAME="hermes-actor"
+else
+	AGENT_NAME="logarchiver-agent"
+fi
+
+ACTOR_DIR="/opt/smartdc/${AGENT_NAME}"
+FMRI="svc:/smartdc/${AGENT_NAME}:default"
 
 SERVER="%%ENDPOINT%%"
 SMF_REVISION="%%SMF_REVISION%%"
-- 
2.21.0

