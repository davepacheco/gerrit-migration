From 6605b5d130687bd3aaab4e7c2ed887f63396575f Mon Sep 17 00:00:00 2001
From: Dan McDonald <danmcd@joyent.com>
Date: Tue, 31 Jul 2018 12:25:44 -0400
Subject: [PATCH] OS-7099 NAT zones not coming up after CN reboot - ERROR: lock
 'ovlock' not held by pid xxxxx

---
 .../generic/usr/lib/brand/jcommon/statechange | 56 ++-----------------
 1 file changed, 6 insertions(+), 50 deletions(-)

diff --git a/overlay/generic/usr/lib/brand/jcommon/statechange b/overlay/generic/usr/lib/brand/jcommon/statechange
index 12f55a74..da3bd811 100644
--- a/overlay/generic/usr/lib/brand/jcommon/statechange
+++ b/overlay/generic/usr/lib/brand/jcommon/statechange
@@ -75,53 +75,6 @@ DEFAULT_MTU=1500
 # o jst_mdatapath - The path the metadata socket is expected in the zone
 #
 
-lockdir=/var/run
-function lock_enter {
-	typeset lockname=$1
-	typeset lock=$lockdir/$lockname
-	typeset target=/proc/$$
-
-	if [[ -z $lockname || $lockname == */* ]]; then
-		print -u2 "ERROR: invalid lock '$lockname'"
-		exit 1
-	fi
-	if [[ $lock -ef $target ]]; then
-		print -u2 "ERROR: recursive lock by pid $$"
-		exit 1
-	fi
-
-	while ! ln -s "$target" "$lock" >/dev/null 2>&1; do
-		if [[ -d $lock ]]; then
-			# Process holding the lock still exists
-			sleep 0.1
-			continue
-		fi
-
-		# Lock recovery.  A little race here.  Only encountered if
-		# a lock is abandoned.
-		typeset prev=$(ls -l "$lock" | nawk -F/ '{print $NF}')
-		print -u2 "WARNING: recovering lock $lock (abandoned by $prev)"
-		rm -f "$lock"
-	done
-}
-
-function lock_exit {
-	typeset lockname=$1
-	typeset lock=$lockdir/$lockname
-	typeset target=/proc/$$
-
-	if [[ -z $lockname || $lockname == */* ]]; then
-		print -u2 "ERROR: invalid lock '$lockname'"
-		exit 1
-	fi
-	if ! [[ $lock -ef $target ]]; then
-		print -u2 "ERROR: lock '$lockname' not held by pid $$"
-		exit 1
-	fi
-
-	rm -f "$lock"
-}
-
 get_boolean_nic_property()
 {
 	bool_val=$(eval echo \$_ZONECFG_net_${1}_${2})
@@ -312,20 +265,23 @@ setup_net()
 		# it already exist?
 		#
 		if [[ -n "$isoverlay" ]]; then
-			lock_enter ovlock
 			if ! dladm show-overlay $global_nic 2>/dev/null; then
 				dladm create-overlay $rule -v $num $global_nic
 				if [[ $? -ne 0 ]]; then
+				    # If creation fails, ALSO check
+				    # for existence again, in case
+				    # someone beat us to it.
+				    if ! dladm show-overlay $global_nic \
+					 2> /dev/null; then
 					logger -p daemon.err "zone $ZONENAME " \
 					    "failed to create overlay device " \
 					     "$global_nic with command " \
 					     "'dladm create-overlay $rule -v " \
 					     "$num $global_nic"
-					lock_exit ovlock
 					exit 1
+				    fi
 				fi
 			fi
-			lock_exit ovlock
 		fi
 
 
-- 
2.21.0

