From c786fbb3936e3fda6a65a1bc4a15b3b9041dd64f Mon Sep 17 00:00:00 2001
From: Yang Yong <yy1111.yang@samsung.com>
Date: Tue, 1 Nov 2016 13:54:07 +0900
Subject: [PATCH] joyent/node-triton#64 support instance renaming

---
 lib/cloudapi2.js             | 25 ++++++++++++++
 lib/do_instance/do_rename.js | 63 ++++++++++++++++++++++++++++++++++++
 lib/do_instance/index.js     |  2 ++
 lib/tritonapi.js             | 31 ++++++++++++++++++
 4 files changed, 121 insertions(+)
 create mode 100644 lib/do_instance/do_rename.js

diff --git a/lib/cloudapi2.js b/lib/cloudapi2.js
index 6949e56..6898dc7 100644
--- a/lib/cloudapi2.js
+++ b/lib/cloudapi2.js
@@ -728,6 +728,31 @@ CloudApi.prototype.getMachine = function getMachine(opts, cb) {
     });
 };
 
+/**
+ * rename a machine by id.
+ *
+ * @param {Object} opts
+ *      - id {UUID} Required. The machine id.
+ *      - {String} name. The machine name
+ * @param {Function} callback of the form `function (err, res)`
+ */
+CloudApi.prototype.renameMachine = function renameMachine(opts, callback) {
+    assert.uuid(opts.id, 'opts.id');
+    assert.string(opts.name, 'opts.name');
+    var data = {
+        action: 'rename',
+        name: opts.name
+    };
+
+    this._request({
+        method: 'POST',
+        path: format('/%s/machines/%s', this.account, opts.id),
+        data: data
+    }, function (err, req, res, body) {
+        callback(err, body, res);
+    });
+};
+
 /**
  * delete a machine by id.
  *
diff --git a/lib/do_instance/do_rename.js b/lib/do_instance/do_rename.js
new file mode 100644
index 0000000..6f245b9
--- /dev/null
+++ b/lib/do_instance/do_rename.js
@@ -0,0 +1,63 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+var common = require('../common');
+var errors = require('../errors');
+
+
+function perror(err) {
+    console.error('error: %s', err.message);
+}
+
+function do_rename(subcmd, opts, args, callback) {
+    var self = this;
+    if (opts.help) {
+        this.do_help('help', {}, [subcmd], callback);
+        return;
+    } else if (args.length < 1) {
+        callback(new errors.UsageError('missing INST arg(s)'));
+        return;
+    } else if (args.length < 2) {
+        callback(new errors.UsageError('missing NEWNAME arg(s)'));
+        return;
+    }
+    var cOpts = {id: args[0], name: args[1]};
+    self.top.tritonapi.renameInstance(cOpts, function (err, inst) {
+       if (err) {
+           perror(err);
+           return;
+        }
+        console.log('Renamed instance %s to (%s)', cOpts.id, cOpts.name);
+        callback();
+        return;
+    });
+}
+
+
+do_rename.options = [
+    {
+        names: ['help', 'h'],
+        type: 'bool',
+        help: 'Show this help.'
+    }
+];
+
+
+do_rename.synopses = ['{{name}} rename [OPTIONS] INST NEWNAME'];
+do_rename.help = [
+    'Rename an instance.',
+    '',
+    '{{usage}}',
+    '',
+    '{{options}}',
+    'Where "INST" is an instance name, id, or short id',
+    'and "NEWNAME" is an instance name.'
+].join('\n');
+
+do_rename.completionArgtypes = ['tritoninstance', 'none'];
+
+
+module.exports = do_rename;
diff --git a/lib/do_instance/index.js b/lib/do_instance/index.js
index 9b0abbe..1165d22 100644
--- a/lib/do_instance/index.js
+++ b/lib/do_instance/index.js
@@ -34,6 +34,7 @@ function InstanceCLI(top) {
             'get',
             'create',
             'delete',
+            'rename',
             { group: '' },
             'start',
             'stop',
@@ -63,6 +64,7 @@ InstanceCLI.prototype.do_list = require('./do_list');
 InstanceCLI.prototype.do_get = require('./do_get');
 InstanceCLI.prototype.do_create = require('./do_create');
 InstanceCLI.prototype.do_delete = require('./do_delete');
+InstanceCLI.prototype.do_rename = require('./do_rename');
 
 InstanceCLI.prototype.do_start = require('./do_start');
 InstanceCLI.prototype.do_stop = require('./do_stop');
diff --git a/lib/tritonapi.js b/lib/tritonapi.js
index e749132..afb3445 100644
--- a/lib/tritonapi.js
+++ b/lib/tritonapi.js
@@ -2121,6 +2121,37 @@ TritonApi.prototype.deletePolicy = function deletePolicy(opts, cb) {
     });
 };
 
+/**
+ * rename a machine by id.
+ *
+ * @param {Object} opts
+ *      - id {UUID} or The machine name or shortID Required.
+ *      - {String} name. The machine name
+ * @param {Function} callback of the form `function (err, res)`
+ */
+TritonApi.prototype.renameInstance = function renameInstance(opts, cb) {
+    assert.string(opts.id, 'opts.id');
+    assert.string(opts.name, 'opts.name');
+    assert.func(cb, 'cb');
+    var self = this;
+    var res;
+    var body;
+
+    vasync.pipeline({arg: {client: self, id: opts.id}, funcs: [
+        _stepInstId,
+
+        function renameMachine(arg, next) {
+            self.cloudapi.renameMachine({id: arg.instId, name: opts.name},
+                function (err, _body, _res) {
+                    res = _res;
+                    body = _body;
+                    next(err);
+            });
+        }
+    ]}, function (err) {
+        cb(err, body, res);
+    });
+};
 
 //---- exports
 
-- 
2.21.0

