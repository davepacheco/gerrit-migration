From 4455aec77db266e99399eb758f9a9755ae7d439c Mon Sep 17 00:00:00 2001
From: Robert Mustacchi <rm@joyent.com>
Date: Wed, 28 Dec 2016 16:53:14 +0000
Subject: [PATCH] OS-5878 libctf: DW_AT_bit_offset may be signed OS-5877 ctf
 changes need to spell __gnuc correctly OS-5876 tools/make: workaround CTF
 bootstrapping

---
 usr/src/Makefile.master                       | 4 ++--
 usr/src/lib/libctf/common/ctf_dwarf.c         | 5 +++--
 usr/src/tools/make/lib/bsd/Makefile           | 4 ++++
 usr/src/tools/make/lib/makestate/Makefile.com | 4 ++++
 usr/src/tools/make/lib/mksh/Makefile          | 4 ++++
 usr/src/tools/make/lib/vroot/Makefile         | 4 ++++
 usr/src/uts/Makefile.uts                      | 2 +-
 7 files changed, 22 insertions(+), 5 deletions(-)

diff --git a/usr/src/Makefile.master b/usr/src/Makefile.master
index e63fabc84f..a30139872e 100644
--- a/usr/src/Makefile.master
+++ b/usr/src/Makefile.master
@@ -928,8 +928,8 @@ CTFMRGFLAGS=
 # do not support stabs (eg. Sun Studio), so if GNUC is not set, we don't
 # honor them.
 #
-$(_GNUC)CTFCONVERT=	$(ONBLD_TOOLS)/bin/$(MACH)/ctfconvert-altexec
-$(_GNUC)CTFMERGE=	$(ONBLD_TOOLS)/bin/$(MACH)/ctfmerge-altexec
+$(__GNUC)CTFCONVERT=	$(ONBLD_TOOLS)/bin/$(MACH)/ctfconvert-altexec
+$(__GNUC)CTFMERGE=	$(ONBLD_TOOLS)/bin/$(MACH)/ctfmerge-altexec
 
 CTFCONVERT_O		= $(CTFCONVERT) $(CTFCVTFLAGS) $@
 
diff --git a/usr/src/lib/libctf/common/ctf_dwarf.c b/usr/src/lib/libctf/common/ctf_dwarf.c
index 1e684641fe..811a55bc64 100644
--- a/usr/src/lib/libctf/common/ctf_dwarf.c
+++ b/usr/src/lib/libctf/common/ctf_dwarf.c
@@ -1027,7 +1027,8 @@ ctf_dwarf_member_offset(ctf_die_t *cdp, Dwarf_Die die, ctf_id_t mid,
     ulong_t *offp)
 {
 	int ret;
-	Dwarf_Unsigned loc, bitsz, bytesz, bitoff;
+	Dwarf_Unsigned loc, bitsz, bytesz;
+	Dwarf_Signed bitoff;
 	size_t off, tsz;
 
 	if ((ret = ctf_dwarf_unsigned(cdp, die, DW_AT_data_bit_offset,
@@ -1042,7 +1043,7 @@ ctf_dwarf_member_offset(ctf_die_t *cdp, Dwarf_Die die, ctf_id_t mid,
 		return (ret);
 	off = loc * 8;
 
-	if ((ret = ctf_dwarf_unsigned(cdp, die, DW_AT_bit_offset,
+	if ((ret = ctf_dwarf_signed(cdp, die, DW_AT_bit_offset,
 	    &bitoff)) != 0) {
 		if (ret != ENOENT)
 			return (ret);
diff --git a/usr/src/tools/make/lib/bsd/Makefile b/usr/src/tools/make/lib/bsd/Makefile
index 3dff341075..d9f7398611 100644
--- a/usr/src/tools/make/lib/bsd/Makefile
+++ b/usr/src/tools/make/lib/bsd/Makefile
@@ -28,4 +28,8 @@ install: all
 
 lint:
 
+# We can't create CTF in the tools build because of a bootstrap bug with the new CTF
+$(DYNLIB) := CTFMERGE_POST= :
+CTFCONVERT_O= :
+
 include $(SRC)/lib/Makefile.targ
diff --git a/usr/src/tools/make/lib/makestate/Makefile.com b/usr/src/tools/make/lib/makestate/Makefile.com
index 7f2324264c..1bf0d1d89a 100644
--- a/usr/src/tools/make/lib/makestate/Makefile.com
+++ b/usr/src/tools/make/lib/makestate/Makefile.com
@@ -37,4 +37,8 @@ $(ROOTONBLDLIBMACH)/%: %
 $(ROOTONBLDLIBMACH64)/%: %
 	$(INS.file)
 
+# We can't create CTF in the tools build because of a bootstrap bug with the new CTF
+$(DYNLIB) := CTFMERGE_POST= :
+CTFCONVERT_O= :
+
 include $(SRC)/lib/Makefile.targ
diff --git a/usr/src/tools/make/lib/mksh/Makefile b/usr/src/tools/make/lib/mksh/Makefile
index 418cb43cb5..b351b488bb 100644
--- a/usr/src/tools/make/lib/mksh/Makefile
+++ b/usr/src/tools/make/lib/mksh/Makefile
@@ -29,4 +29,8 @@ install: all
 
 lint:
 
+# We can't create CTF in the tools build because of a bootstrap bug with the new CTF
+$(DYNLIB) := CTFMERGE_POST= :
+CTFCONVERT_O= :
+
 include $(SRC)/lib/Makefile.targ
diff --git a/usr/src/tools/make/lib/vroot/Makefile b/usr/src/tools/make/lib/vroot/Makefile
index e119349178..7965de5fde 100644
--- a/usr/src/tools/make/lib/vroot/Makefile
+++ b/usr/src/tools/make/lib/vroot/Makefile
@@ -50,4 +50,8 @@ install: all
 
 lint:
 
+# We can't create CTF in the tools build because of a bootstrap bug with the new CTF
+$(DYNLIB) := CTFMERGE_POST= :
+CTFCONVERT_O= :
+
 include $(SRC)/lib/Makefile.targ
diff --git a/usr/src/uts/Makefile.uts b/usr/src/uts/Makefile.uts
index f1bf541057..4d84673519 100644
--- a/usr/src/uts/Makefile.uts
+++ b/usr/src/uts/Makefile.uts
@@ -645,4 +645,4 @@ USBDEVS_DATA =	$(SRC)/uts/common/io/usb/usbdevs
 # are building with the private -X option to ctfconvert which allows us
 # to fixup the struct cpu to account for machcpu.
 #
-$(ENABLE_NEW_CTF)$(_GNUC)CTFCVTFLAGS += -X
+$(ENABLE_NEW_CTF)$(__GNUC)CTFCVTFLAGS += -X
-- 
2.21.0

