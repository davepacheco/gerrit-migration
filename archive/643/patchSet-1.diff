From ab2491af13be9caf7cb245e41c891f08c6315e5b Mon Sep 17 00:00:00 2001
From: Marsell Kukuljevic <marsell@joyent.com>
Date: Wed, 12 Oct 2016 01:28:32 +1300
Subject: [PATCH] DAPI-327: DAPI should log server "scores" in output log

---
 lib/algorithms/score-num-owner-zones.js       |   2 +-
 lib/algorithms/score-unreserved-disk.js       |   2 +-
 lib/algorithms/score-unreserved-ram.js        |   2 +-
 lib/scorers.js                                |  23 ++-
 .../algorithms/score-current-platform.test.js |  36 ++--
 test/algorithms/score-next-reboot.test.js     |  24 +--
 test/algorithms/score-num-owner-zones.test.js |  34 ++--
 test/algorithms/score-unreserved-disk.test.js |  23 ++-
 test/algorithms/score-unreserved-ram.test.js  |  59 ++++---
 test/integration.test.js                      |  20 ++-
 test/scorers.test.js                          | 165 ++++++++++++++----
 11 files changed, 268 insertions(+), 122 deletions(-)

diff --git a/lib/algorithms/score-num-owner-zones.js b/lib/algorithms/score-num-owner-zones.js
index 113986d..49423bb 100644
--- a/lib/algorithms/score-num-owner-zones.js
+++ b/lib/algorithms/score-num-owner-zones.js
@@ -54,7 +54,7 @@ scoreNumOwnerZones(log, servers, constraints)
 	var defaults = constraints.defaults;
 	var weight = compatWeight || +defaults.weight_num_owner_zones;
 	if (!weight) {
-		reasons.skip = 'Resolved score weight to 0; no changes';
+		reasons.skip = 'Resolved score weight to 0.00; no changes';
 		return ([servers, reasons]);
 	}
 
diff --git a/lib/algorithms/score-unreserved-disk.js b/lib/algorithms/score-unreserved-disk.js
index 4cb339d..2efc654 100644
--- a/lib/algorithms/score-unreserved-disk.js
+++ b/lib/algorithms/score-unreserved-disk.js
@@ -46,7 +46,7 @@ scoreUnreservedDisk(log, servers, constraints)
 
 	var weight = +constraints.defaults.weight_unreserved_disk;
 	if (weight === 0) {
-		reasons.skip = 'Resolved score weight to 0; no changes';
+		reasons.skip = 'Resolved score weight to 0.00; no changes';
 		return ([servers, reasons]);
 	}
 
diff --git a/lib/algorithms/score-unreserved-ram.js b/lib/algorithms/score-unreserved-ram.js
index 701ab90..70a7d5d 100644
--- a/lib/algorithms/score-unreserved-ram.js
+++ b/lib/algorithms/score-unreserved-ram.js
@@ -45,7 +45,7 @@ scoreUnreservedRam(log, servers, constraints)
 	var weight = compatWeight ||
 		+constraints.defaults.weight_unreserved_ram;
 	if (!weight) {
-		reasons.skip = 'Resolved score weight to 0; no changes';
+		reasons.skip = 'Resolved score weight to 0.00; no changes';
 		return ([servers, reasons]);
 	}
 
diff --git a/lib/scorers.js b/lib/scorers.js
index 1b6b0a9..cbf3566 100644
--- a/lib/scorers.js
+++ b/lib/scorers.js
@@ -20,6 +20,8 @@ var assert = require('assert');
 function
 linear(log, servers, weight, reasons)
 {
+	var msg;
+
 	if (servers.length === 0)
 		return (servers);
 
@@ -29,9 +31,10 @@ linear(log, servers, weight, reasons)
 		servers[0].score += weight;
 
 		var uuid = servers[0].uuid;
-		reasons[uuid] = 'increased score by ' + weight;
-		log.trace('Server %s increased score by %d',
-			uuid, weight);
+		msg = 'increased score by ' + weight.toFixed(2) +
+			' to ' + servers[0].score.toFixed(2);
+		reasons[uuid] = msg;
+		log.trace('Server ', uuid, msg);
 
 		return (servers);
 	}
@@ -45,9 +48,10 @@ linear(log, servers, weight, reasons)
 		var score = (servers.length - 1 - i) * normDelta * weight;
 		server.score += score;
 
-		reasons[server.uuid] = 'increased score by ' + score;
-		log.trace('Server %s increased score by %d',
-			server.uuid, score);
+		msg = 'increased score by ' + score.toFixed(2) +
+			' to ' + server.score.toFixed(2);
+		reasons[server.uuid] = msg;
+		log.trace('Server', server.uuid, msg);
 	}
 
 	return (servers);
@@ -81,9 +85,10 @@ linearBuckets(log, buckets, weight, reasons)
 			assert.equal(typeof (server.score), 'number');
 			server.score += score;
 
-			reasons[server.uuid] = 'increased score by ' + score;
-			log.trace('Server %s increased score by %d',
-				server.uuid, score);
+			var msg = 'increased score by ' + score.toFixed(2) +
+				' to ' + server.score.toFixed(2);
+			reasons[server.uuid] = msg;
+			log.trace('Server', server.uuid, msg);
 		});
 	}
 
diff --git a/test/algorithms/score-current-platform.test.js b/test/algorithms/score-current-platform.test.js
index 9ace855..9c4ef2b 100644
--- a/test/algorithms/score-current-platform.test.js
+++ b/test/algorithms/score-current-platform.test.js
@@ -55,12 +55,18 @@ test('scoreCurrentPlatform()', function (t) {
 	expectedServers[5].score = 1;
 
 	var expectedReasons = {
-		'8973fb43-29da-474c-97b8-7c513c602a24': 'increased score by 3',
-		'cc8c8619-21a8-403f-a4db-3061b38d5881': 'increased score by 3',
-		'd68d4508-b153-4f3c-8121-b84c23848dcb': 'increased score by 3',
-		'64664347-aae4-49a9-b064-a144e142a8ed': 'increased score by 2',
-		'b8ed3526-13a9-4da2-a6a8-06b142c51b77': 'increased score by 1',
-		'682de1bd-b409-4c51-affc-c21ad3ba8d81': 'increased score by 0'
+		'8973fb43-29da-474c-97b8-7c513c602a24':
+			'increased score by 3.00 to 4.00',
+		'cc8c8619-21a8-403f-a4db-3061b38d5881':
+			'increased score by 3.00 to 4.00',
+		'd68d4508-b153-4f3c-8121-b84c23848dcb':
+			'increased score by 3.00 to 4.00',
+		'64664347-aae4-49a9-b064-a144e142a8ed':
+			'increased score by 2.00 to 3.00',
+		'b8ed3526-13a9-4da2-a6a8-06b142c51b77':
+			'increased score by 1.00 to 2.00',
+		'682de1bd-b409-4c51-affc-c21ad3ba8d81':
+			'increased score by 0.00 to 1.00'
 	};
 
 	var constraints = {
@@ -88,12 +94,18 @@ test('scoreCurrentPlatform() with negative weight', function (t) {
 	expectedServers[5].score = 4;
 
 	var expectedReasons = {
-		'8973fb43-29da-474c-97b8-7c513c602a24': 'increased score by 0',
-		'cc8c8619-21a8-403f-a4db-3061b38d5881': 'increased score by 0',
-		'd68d4508-b153-4f3c-8121-b84c23848dcb': 'increased score by 0',
-		'64664347-aae4-49a9-b064-a144e142a8ed': 'increased score by 1',
-		'b8ed3526-13a9-4da2-a6a8-06b142c51b77': 'increased score by 2',
-		'682de1bd-b409-4c51-affc-c21ad3ba8d81': 'increased score by 3'
+		'8973fb43-29da-474c-97b8-7c513c602a24':
+			'increased score by 0.00 to 1.00',
+		'cc8c8619-21a8-403f-a4db-3061b38d5881':
+			'increased score by 0.00 to 1.00',
+		'd68d4508-b153-4f3c-8121-b84c23848dcb':
+			'increased score by 0.00 to 1.00',
+		'64664347-aae4-49a9-b064-a144e142a8ed':
+			'increased score by 1.00 to 2.00',
+		'b8ed3526-13a9-4da2-a6a8-06b142c51b77':
+			'increased score by 2.00 to 3.00',
+		'682de1bd-b409-4c51-affc-c21ad3ba8d81':
+			'increased score by 3.00 to 4.00'
 	};
 
 	var constraints = {
diff --git a/test/algorithms/score-next-reboot.test.js b/test/algorithms/score-next-reboot.test.js
index c33b4db..9937e8b 100644
--- a/test/algorithms/score-next-reboot.test.js
+++ b/test/algorithms/score-next-reboot.test.js
@@ -63,17 +63,17 @@ test('scoreNextReboot()', function (t) {
 
 	var expectedReasons = {
 		'0cb6d02c-a0de-4edd-95fd-30a71a397f71':
-			'increased score by 3',
+			'increased score by 3.00 to 4.00',
 		'3b4157cd-8f2e-4d57-b7a0-bb43bea5455c':
-			'increased score by 0',
+			'increased score by 0.00 to 1.00',
 		'44710ff2-57e6-45df-9d87-9844fd3c216f':
-			'increased score by 3',
+			'increased score by 3.00 to 4.00',
 		'62ccf0e0-268f-4f82-838a-218e4798d6c2':
-			'increased score by 2',
+			'increased score by 2.00 to 3.00',
 		'7fbf5802-26b0-4e14-bbce-87e44c6aa926':
-			'increased score by 1',
+			'increased score by 1.00 to 2.00',
 		'ad60a3e7-497c-4876-b074-79bf041b7086':
-			'increased score by 2'
+			'increased score by 2.00 to 3.00'
 	};
 
 	var constraints = {
@@ -98,17 +98,17 @@ test('scoreNextReboot()', function (t) {
 
 	expectedReasons = {
 		'0cb6d02c-a0de-4edd-95fd-30a71a397f71':
-			'increased score by 0',
+			'increased score by 0.00 to 1.00',
 		'3b4157cd-8f2e-4d57-b7a0-bb43bea5455c':
-			'increased score by 3',
+			'increased score by 3.00 to 4.00',
 		'44710ff2-57e6-45df-9d87-9844fd3c216f':
-			'increased score by 0',
+			'increased score by 0.00 to 1.00',
 		'62ccf0e0-268f-4f82-838a-218e4798d6c2':
-			'increased score by 1',
+			'increased score by 1.00 to 2.00',
 		'7fbf5802-26b0-4e14-bbce-87e44c6aa926':
-			'increased score by 2',
+			'increased score by 2.00 to 3.00',
 		'ad60a3e7-497c-4876-b074-79bf041b7086':
-			'increased score by 1'
+			'increased score by 1.00 to 2.00'
 	};
 
 	constraints = {
diff --git a/test/algorithms/score-num-owner-zones.test.js b/test/algorithms/score-num-owner-zones.test.js
index 27da37a..ad4dd10 100644
--- a/test/algorithms/score-num-owner-zones.test.js
+++ b/test/algorithms/score-num-owner-zones.test.js
@@ -104,11 +104,11 @@ test('scoreNumOwnerZones()', function (t) {
 
 	var expectedReasons = {
 		'b38dc3a0-eb00-11e5-943f-8bc57e287d0d':
-			'increased score by 0; 12 owner zones found',
+			'increased score by 0.00 to 1.00; 12 owner zones found',
 		'c141a106-eb00-11e5-ae33-b7201124575a':
-			'increased score by 2; 2 owner zones found',
+			'increased score by 2.00 to 3.00; 2 owner zones found',
 		'd037fff2-eb00-11e5-9322-0b32f8d3f898':
-			'increased score by 4; 0 owner zones found'
+			'increased score by 4.00 to 5.00; 0 owner zones found'
 	};
 
 	var constraints = {
@@ -137,11 +137,11 @@ test('scoreNumOwnerZones() with negative default weight', function (t) {
 
 	var expectedReasons = {
 		'b38dc3a0-eb00-11e5-943f-8bc57e287d0d':
-			'increased score by 4; 12 owner zones found',
+			'increased score by 4.00 to 5.00; 12 owner zones found',
 		'c141a106-eb00-11e5-ae33-b7201124575a':
-			'increased score by 2; 2 owner zones found',
+			'increased score by 2.00 to 3.00; 2 owner zones found',
 		'd037fff2-eb00-11e5-9322-0b32f8d3f898':
-			'increased score by 0; 0 owner zones found'
+			'increased score by 0.00 to 1.00; 0 owner zones found'
 	};
 
 	var constraints = {
@@ -165,7 +165,7 @@ test('scoreNumOwnerZones() with negative default weight', function (t) {
 test('scoreNumOwnerZones() with zero default weight', function (t) {
 	var expectedServers = clone(SERVERS);
 	var expectedReasons = {
-		skip: 'Resolved score weight to 0; no changes'
+		skip: 'Resolved score weight to 0.00; no changes'
 	};
 
 	var constraints = {
@@ -194,11 +194,11 @@ test('scoreNumOwnerZones() with min-owner default set', function (t) {
 
 	var expectedReasons = {
 		'b38dc3a0-eb00-11e5-943f-8bc57e287d0d':
-			'increased score by 0; 12 owner zones found',
+			'increased score by 0.00 to 1.00; 12 owner zones found',
 		'c141a106-eb00-11e5-ae33-b7201124575a':
-			'increased score by 1; 2 owner zones found',
+			'increased score by 1.00 to 2.00; 2 owner zones found',
 		'd037fff2-eb00-11e5-9322-0b32f8d3f898':
-			'increased score by 2; 0 owner zones found'
+			'increased score by 2.00 to 3.00; 0 owner zones found'
 	};
 
 	var constraints = {
@@ -253,11 +253,11 @@ test('scoreNumOwnerZones() with min-owner package attr set', function (t) {
 
 	var expectedReasons = {
 		'b38dc3a0-eb00-11e5-943f-8bc57e287d0d':
-			'increased score by 0; 12 owner zones found',
+			'increased score by 0.00 to 1.00; 12 owner zones found',
 		'c141a106-eb00-11e5-ae33-b7201124575a':
-			'increased score by 1; 2 owner zones found',
+			'increased score by 1.00 to 2.00; 2 owner zones found',
 		'd037fff2-eb00-11e5-9322-0b32f8d3f898':
-			'increased score by 2; 0 owner zones found'
+			'increased score by 2.00 to 3.00; 0 owner zones found'
 	};
 
 	var constraints = {
@@ -285,11 +285,11 @@ test('scoreNumOwnerZones() with package and default set', function (t) {
 
 	var expectedReasons = {
 		'b38dc3a0-eb00-11e5-943f-8bc57e287d0d':
-			'increased score by 0; 12 owner zones found',
+			'increased score by 0.00 to 1.00; 12 owner zones found',
 		'c141a106-eb00-11e5-ae33-b7201124575a':
-			'increased score by 1; 2 owner zones found',
+			'increased score by 1.00 to 2.00; 2 owner zones found',
 		'd037fff2-eb00-11e5-9322-0b32f8d3f898':
-			'increased score by 2; 0 owner zones found'
+			'increased score by 2.00 to 3.00; 0 owner zones found'
 	};
 
 	var constraints = {
@@ -341,7 +341,7 @@ test('scoreNumOwnerZones() with one server', function (t) {
 
 	var expectedReasons = {
 		'b38dc3a0-eb00-11e5-943f-8bc57e287d0d':
-			'increased score by 4; 12 owner zones found'
+			'increased score by 4.00 to 5.00; 12 owner zones found'
 	};
 
 	var constraints = {
diff --git a/test/algorithms/score-unreserved-disk.test.js b/test/algorithms/score-unreserved-disk.test.js
index fb7da05..a239373 100644
--- a/test/algorithms/score-unreserved-disk.test.js
+++ b/test/algorithms/score-unreserved-disk.test.js
@@ -40,9 +40,12 @@ test('scoreUnreservedDisk()', function (t) {
 	expectedServers[2].score = 3;
 
 	var expectedReasons = {
-		'ef23ad0e-1802-4929-af61-387e9071d39f': 'increased score by 4',
-		'330ea9b9-0b4a-425d-8fc5-d31ccbfcc0cd': 'increased score by 0',
-		'd3409329-e847-40a1-a924-119eacb69d9c': 'increased score by 2'
+		'ef23ad0e-1802-4929-af61-387e9071d39f':
+			'increased score by 4.00 to 5.00',
+		'330ea9b9-0b4a-425d-8fc5-d31ccbfcc0cd':
+			'increased score by 0.00 to 1.00',
+		'd3409329-e847-40a1-a924-119eacb69d9c':
+			'increased score by 2.00 to 3.00'
 	};
 
 	var constraints = {
@@ -67,9 +70,12 @@ test('scoreUnreservedDisk() with negative default weight', function (t) {
 	expectedServers[2].score = 3;
 
 	var expectedReasons = {
-		'ef23ad0e-1802-4929-af61-387e9071d39f': 'increased score by 0',
-		'330ea9b9-0b4a-425d-8fc5-d31ccbfcc0cd': 'increased score by 4',
-		'd3409329-e847-40a1-a924-119eacb69d9c': 'increased score by 2'
+		'ef23ad0e-1802-4929-af61-387e9071d39f':
+			'increased score by 0.00 to 1.00',
+		'330ea9b9-0b4a-425d-8fc5-d31ccbfcc0cd':
+			'increased score by 4.00 to 5.00',
+		'd3409329-e847-40a1-a924-119eacb69d9c':
+			'increased score by 2.00 to 3.00'
 	};
 
 	var constraints = {
@@ -90,7 +96,7 @@ test('scoreUnreservedDisk() with negative default weight', function (t) {
 test('scoreUnreservedDisk() with zero default weight', function (t) {
 	var expectedServers = SERVERS;
  	var expectedReasons = {
-		'skip': 'Resolved score weight to 0; no changes'
+		'skip': 'Resolved score weight to 0.00; no changes'
 	};
 
 	var constraints = {
@@ -161,7 +167,8 @@ test('scoreUnreservedDisk() with one server', function (t) {
 	expectedServers[0].score = 5;
 
 	var expectedReasons = {
-		'ef23ad0e-1802-4929-af61-387e9071d39f': 'increased score by 4'
+		'ef23ad0e-1802-4929-af61-387e9071d39f':
+			'increased score by 4.00 to 5.00'
 	};
 
 	var constraints = {
diff --git a/test/algorithms/score-unreserved-ram.test.js b/test/algorithms/score-unreserved-ram.test.js
index 946724c..4e38c77 100644
--- a/test/algorithms/score-unreserved-ram.test.js
+++ b/test/algorithms/score-unreserved-ram.test.js
@@ -40,9 +40,12 @@ test('scoreUnreservedRam()', function (t) {
 	expectedServers[2].score = 3;
 
 	var expectedReasons = {
-		'26888f40-bae2-4b68-9053-c91bc82de296': 'increased score by 4',
-		'55d40d4b-296c-42c5-b8f2-295d094b7206': 'increased score by 0',
-		'926c4009-93ed-4fd0-99d5-f3e73676f10d': 'increased score by 2'
+		'26888f40-bae2-4b68-9053-c91bc82de296':
+			'increased score by 4.00 to 5.00',
+		'55d40d4b-296c-42c5-b8f2-295d094b7206':
+			'increased score by 0.00 to 1.00',
+		'926c4009-93ed-4fd0-99d5-f3e73676f10d':
+			'increased score by 2.00 to 3.00'
 	};
 
 	var constraints = {
@@ -67,9 +70,12 @@ test('scoreUnreservedRam() with negative default weight', function (t) {
 	expectedServers[2].score = 3;
 
 	var expectedReasons = {
-		'26888f40-bae2-4b68-9053-c91bc82de296': 'increased score by 0',
-		'55d40d4b-296c-42c5-b8f2-295d094b7206': 'increased score by 4',
-		'926c4009-93ed-4fd0-99d5-f3e73676f10d': 'increased score by 2'
+		'26888f40-bae2-4b68-9053-c91bc82de296':
+			'increased score by 0.00 to 1.00',
+		'55d40d4b-296c-42c5-b8f2-295d094b7206':
+			'increased score by 4.00 to 5.00',
+		'926c4009-93ed-4fd0-99d5-f3e73676f10d':
+			'increased score by 2.00 to 3.00'
 	};
 
 	var constraints = {
@@ -90,7 +96,7 @@ test('scoreUnreservedRam() with negative default weight', function (t) {
 test('scoreUnreservedRam() with zero default weight', function (t) {
 	var expectedServers = SERVERS;
  	var expectedReasons = {
-		skip: 'Resolved score weight to 0; no changes'
+		skip: 'Resolved score weight to 0.00; no changes'
 	};
 
 	var constraints = {
@@ -115,9 +121,12 @@ test('scoreUnreservedRam() with min-ram default set', function (t) {
 	expectedServers[2].score = 2;
 
 	var expectedReasons = {
-		'26888f40-bae2-4b68-9053-c91bc82de296': 'increased score by 2',
-		'55d40d4b-296c-42c5-b8f2-295d094b7206': 'increased score by 0',
-		'926c4009-93ed-4fd0-99d5-f3e73676f10d': 'increased score by 1'
+		'26888f40-bae2-4b68-9053-c91bc82de296':
+			'increased score by 2.00 to 3.00',
+		'55d40d4b-296c-42c5-b8f2-295d094b7206':
+			'increased score by 0.00 to 1.00',
+		'926c4009-93ed-4fd0-99d5-f3e73676f10d':
+			'increased score by 1.00 to 2.00'
 	};
 
 	var constraints = {
@@ -145,9 +154,12 @@ test('scoreUnreservedRam() with max-ram default set', function (t) {
 	expectedServers[2].score = 2;
 
 	var expectedReasons = {
-		'26888f40-bae2-4b68-9053-c91bc82de296': 'increased score by 0',
-		'55d40d4b-296c-42c5-b8f2-295d094b7206': 'increased score by 2',
-		'926c4009-93ed-4fd0-99d5-f3e73676f10d': 'increased score by 1'
+		'26888f40-bae2-4b68-9053-c91bc82de296':
+			'increased score by 0.00 to 1.00',
+		'55d40d4b-296c-42c5-b8f2-295d094b7206':
+			'increased score by 2.00 to 3.00',
+		'926c4009-93ed-4fd0-99d5-f3e73676f10d':
+			'increased score by 1.00 to 2.00'
 	};
 
 	var constraints = {
@@ -199,9 +211,12 @@ test('scoreUnreservedRam() with package attr set', function (t) {
 	expectedServers[2].score = 2;
 
 	var expectedReasons = {
-		'26888f40-bae2-4b68-9053-c91bc82de296': 'increased score by 2',
-		'55d40d4b-296c-42c5-b8f2-295d094b7206': 'increased score by 0',
-		'926c4009-93ed-4fd0-99d5-f3e73676f10d': 'increased score by 1'
+		'26888f40-bae2-4b68-9053-c91bc82de296':
+			'increased score by 2.00 to 3.00',
+		'55d40d4b-296c-42c5-b8f2-295d094b7206':
+			'increased score by 0.00 to 1.00',
+		'926c4009-93ed-4fd0-99d5-f3e73676f10d':
+			'increased score by 1.00 to 2.00'
 	};
 
 	var constraints = {
@@ -229,9 +244,12 @@ test('scoreUnreservedRam() with package and default set', function (t) {
 	expectedServers[2].score = 2;
 
 	var expectedReasons = {
-		'26888f40-bae2-4b68-9053-c91bc82de296': 'increased score by 2',
-		'55d40d4b-296c-42c5-b8f2-295d094b7206': 'increased score by 0',
-		'926c4009-93ed-4fd0-99d5-f3e73676f10d': 'increased score by 1'
+		'26888f40-bae2-4b68-9053-c91bc82de296':
+			'increased score by 2.00 to 3.00',
+		'55d40d4b-296c-42c5-b8f2-295d094b7206':
+			'increased score by 0.00 to 1.00',
+		'926c4009-93ed-4fd0-99d5-f3e73676f10d':
+			'increased score by 1.00 to 2.00'
 	};
 
 	var constraints = {
@@ -282,7 +300,8 @@ test('scoreUnreservedRam() with one server', function (t) {
 	expectedServers[0].score = 5;
 
 	var expectedReasons = {
-		'26888f40-bae2-4b68-9053-c91bc82de296': 'increased score by 4'
+		'26888f40-bae2-4b68-9053-c91bc82de296':
+			'increased score by 4.00 to 5.00'
 	};
 
 	var constraints = {
diff --git a/test/integration.test.js b/test/integration.test.js
index 5c93ae5..0b10ca4 100644
--- a/test/integration.test.js
+++ b/test/integration.test.js
@@ -322,21 +322,22 @@ test('allocate 1', function (t) {
 			remaining: [ '00000000-0000-0000-0000-00259094373c' ],
 			reasons: {
 				'00000000-0000-0000-0000-00259094373c':
-					'increased score by 2'
+					'increased score by 2.00 to 2.00'
 			}
 		}, {
 			step: 'Score servers based on unreserved disk',
 			remaining: [ '00000000-0000-0000-0000-00259094373c' ],
 			reasons: {
 				'00000000-0000-0000-0000-00259094373c':
-					'increased score by 1'
+					'increased score by 1.00 to 3.00'
 			}
 		}, {
 			/* JSSTYLED */
 			step: 'Score servers based on number of zones belonging to owner',
 			remaining: [ '00000000-0000-0000-0000-00259094373c' ],
 			reasons: {
-				skip: 'Resolved score weight to 0; no changes'
+				/* JSSTYLED */
+				skip: 'Resolved score weight to 0.00; no changes'
 			}
 		}, {
 			/* JSSTYLED */
@@ -353,7 +354,7 @@ test('allocate 1', function (t) {
 			remaining: [ '00000000-0000-0000-0000-00259094373c' ],
 			reasons: {
 				'00000000-0000-0000-0000-00259094373c':
-					'increased score by 0.5'
+					'increased score by 0.50 to 3.50'
 			}
 		}
 	];
@@ -461,7 +462,7 @@ test('allocate 2', function (t) {
 			],
 			reasons: {
 				/* JSSTYLED */
-				'00000000-0000-0000-0000-00259094373c': 'Combined vm/pkg/img require no traits but server has {"cabbages":true}'
+				'00000000-0000-0000-0000-00259094373c':'Combined vm/pkg/img require no traits but server has {"cabbages":true}'
 			}
 		}, {
 			step: 'Filter CNs based on owner filters',
@@ -535,21 +536,22 @@ test('allocate 2', function (t) {
 			remaining: [ '00000000-0000-0000-0000-0025909437d4' ],
 			reasons: {
 				'00000000-0000-0000-0000-0025909437d4':
-					'increased score by 2'
+					'increased score by 2.00 to 2.00'
 			}
 		}, {
 			step: 'Score servers based on unreserved disk',
 			remaining: [ '00000000-0000-0000-0000-0025909437d4' ],
 			reasons: {
 				'00000000-0000-0000-0000-0025909437d4':
-					'increased score by 1'
+					'increased score by 1.00 to 3.00'
 			}
 		}, {
 			/* JSSTYLED */
 			step: 'Score servers based on number of zones belonging to owner',
 			remaining: [ '00000000-0000-0000-0000-0025909437d4' ],
 			reasons: {
-				skip: 'Resolved score weight to 0; no changes'
+				/* JSSTYLED */
+				skip: 'Resolved score weight to 0.00; no changes'
 			}
 		}, {
 			/* JSSTYLED */
@@ -566,7 +568,7 @@ test('allocate 2', function (t) {
 			remaining: [ '00000000-0000-0000-0000-0025909437d4' ],
 			reasons: {
 				'00000000-0000-0000-0000-0025909437d4':
-					'increased score by 0.5'
+					'increased score by 0.50 to 3.50'
 			}
 		}
 	];
diff --git a/test/scorers.test.js b/test/scorers.test.js
index 2bb3ba4..95933f5 100644
--- a/test/scorers.test.js
+++ b/test/scorers.test.js
@@ -17,55 +17,115 @@ var LOG = {
 };
 
 
-test('linear', function (t) {
+test('linear 1', function (t) {
 	var score = scorers.linear;
-
 	var reasons = {};
+
 	var scores = score(LOG, [
-		{ score: 1 },
-		{ score: 1 },
-		{ score: 1 }
+		{ score: 1, uuid: '2bc943d3-1192-43d9-842a-38c20f556aea' },
+		{ score: 1, uuid: '12caaf31-205f-4d2e-8269-945dee4ee7e5' },
+		{ score: 1, uuid: 'e256bad8-8055-4754-b7ec-d308baca5fa9' }
 	], 2, reasons);
 
 	t.deepEqual(scores, [
-		{ score: 3 },
-		{ score: 2 },
-		{ score: 1 }
+		{ score: 3, uuid: '2bc943d3-1192-43d9-842a-38c20f556aea' },
+		{ score: 2, uuid: '12caaf31-205f-4d2e-8269-945dee4ee7e5' },
+		{ score: 1, uuid: 'e256bad8-8055-4754-b7ec-d308baca5fa9' }
 	]);
 
-	scores = score(LOG, [
-		{ score: 1 },
-		{ score: 1 },
-		{ score: 1 }
+	t.deepEqual(reasons, {
+		'2bc943d3-1192-43d9-842a-38c20f556aea':
+			'increased score by 2.00 to 3.00',
+		'12caaf31-205f-4d2e-8269-945dee4ee7e5':
+			'increased score by 1.00 to 2.00',
+		'e256bad8-8055-4754-b7ec-d308baca5fa9':
+			'increased score by 0.00 to 1.00'
+	});
+
+	t.end();
+});
+
+
+test('linear 2', function (t) {
+	var score = scorers.linear;
+	var reasons = {};
+
+	var scores = score(LOG, [
+		{ score: 1, uuid: 'a04eb2a2-be1c-45ff-ae2b-4b60210b82c8' },
+		{ score: 1, uuid: 'ee7436a3-5b7c-4279-9138-283e7d03e497' },
+		{ score: 1, uuid: '48f3b143-0ba1-4894-8c09-26ff88ed8d31' }
 	], 3, reasons);
 
 	t.deepEqual(scores, [
-		{ score: 4 },
-		{ score: 2.5 },
-		{ score: 1 }
+		{ score: 4,   uuid: 'a04eb2a2-be1c-45ff-ae2b-4b60210b82c8' },
+		{ score: 2.5, uuid: 'ee7436a3-5b7c-4279-9138-283e7d03e497' },
+		{ score: 1,   uuid: '48f3b143-0ba1-4894-8c09-26ff88ed8d31' }
 	]);
 
-	scores = score(LOG, [
-		{ score: 1 },
-		{ score: 1 }
+	t.deepEqual(reasons, {
+		'a04eb2a2-be1c-45ff-ae2b-4b60210b82c8':
+			'increased score by 3.00 to 4.00',
+		'ee7436a3-5b7c-4279-9138-283e7d03e497':
+			'increased score by 1.50 to 2.50',
+		'48f3b143-0ba1-4894-8c09-26ff88ed8d31':
+			'increased score by 0.00 to 1.00'
+	});
+
+	t.end();
+});
+
+
+test('linear 3', function (t) {
+	var score = scorers.linear;
+	var reasons = {};
+
+	var scores = score(LOG, [
+		{ score: 1, uuid: 'f56663e5-0187-47e9-9f35-463a2411e60b' },
+		{ score: 1, uuid: '3caf33e7-e3e2-422d-bfbb-f0a6198e7856' }
 	], 2, reasons);
 
 	t.deepEqual(scores, [
-		{ score: 3 },
-		{ score: 1 }
+		{ score: 3, uuid: 'f56663e5-0187-47e9-9f35-463a2411e60b' },
+		{ score: 1, uuid: '3caf33e7-e3e2-422d-bfbb-f0a6198e7856' }
 	]);
 
-	scores = score(LOG, [ { score: 1 } ], 2, reasons);
-	t.deepEqual(scores, [ { score: 3 } ]);
+	t.deepEqual(reasons, {
+		'f56663e5-0187-47e9-9f35-463a2411e60b':
+			'increased score by 2.00 to 3.00',
+		'3caf33e7-e3e2-422d-bfbb-f0a6198e7856':
+			'increased score by 0.00 to 1.00'
+	});
 
 	t.end();
 });
 
 
-test('linearBuckets', function (t) {
-	var score = scorers.linearBuckets;
 
+test('linear 4', function (t) {
+	var score = scorers.linear;
+	var reasons = {};
+
+	var scores = score(LOG, [
+		{ score: 1, uuid: '4ff8d936-66fc-4ec9-909c-1c0d9fbaad58' }
+	], 2, reasons);
+
+	t.deepEqual(scores, [
+		{ score: 3, uuid: '4ff8d936-66fc-4ec9-909c-1c0d9fbaad58' }
+	]);
+
+	t.deepEqual(reasons, {
+		'4ff8d936-66fc-4ec9-909c-1c0d9fbaad58':
+			'increased score by 2.00 to 3.00'
+	});
+
+	t.end();
+});
+
+
+test('linearBuckets 1', function (t) {
+	var score = scorers.linearBuckets;
 	var reasons = {};
+
 	var scores = score(LOG, [
 		[ { score: 1 }, { score: 1 } ],
 		[ { score: 1 }, { score: 1 } ],
@@ -78,7 +138,15 @@ test('linearBuckets', function (t) {
 		{ score: 1 }, { score: 1 }
 	]);
 
-	scores = score(LOG, [
+	t.end();
+});
+
+
+test('linearBuckets 2', function (t) {
+	var score = scorers.linearBuckets;
+	var reasons = {};
+
+	var scores = score(LOG, [
 		[ { score: 1 } ],
 		[ { score: 1 } ],
 		[ { score: 1 } ]
@@ -90,18 +158,51 @@ test('linearBuckets', function (t) {
 		{ score: 1 }
 	]);
 
-	scores = score(LOG, [
-		[ { score: 1 } ],
-		[ { score: 1 } ]
+	t.end();
+});
+
+
+test('linearBuckets 3', function (t) {
+	var score = scorers.linearBuckets;
+	var reasons = {};
+
+	var scores = score(LOG, [
+		[ { score: 1, uuid: '4a0e1dfa-6091-4eb6-84e1-b09e42dcbcc9' } ],
+		[ { score: 1, uuid: 'faa02ab6-64ff-4279-97c9-7946481252ec' } ]
 	], 2, reasons);
 
 	t.deepEqual(scores, [
-		{ score: 3 },
-		{ score: 1 }
+		{ score: 3, uuid: '4a0e1dfa-6091-4eb6-84e1-b09e42dcbcc9' },
+		{ score: 1, uuid: 'faa02ab6-64ff-4279-97c9-7946481252ec' }
+	]);
+
+	t.deepEqual(reasons, {
+		'4a0e1dfa-6091-4eb6-84e1-b09e42dcbcc9':
+			'increased score by 2.00 to 3.00',
+		'faa02ab6-64ff-4279-97c9-7946481252ec':
+			'increased score by 0.00 to 1.00'
+	});
+
+	t.end();
+});
+
+
+test('linearBuckets 4', function (t) {
+	var score = scorers.linearBuckets;
+	var reasons = {};
+
+	var scores = score(LOG, [
+		[ { score: 1, uuid: 'd758930b-b952-4cd1-a933-81dfc08f919c' } ]
+	], 2, reasons);
+
+	t.deepEqual(scores, [
+		{ score: 3, uuid: 'd758930b-b952-4cd1-a933-81dfc08f919c' }
 	]);
 
-	scores = score(LOG, [ [ { score: 1 } ] ], 2, reasons);
-	t.deepEqual(scores, [ { score: 3 } ]);
+	t.deepEqual(reasons, {
+		'd758930b-b952-4cd1-a933-81dfc08f919c':
+			'increased score by 2.00 to 3.00'
+	});
 
 	t.end();
 });
-- 
2.21.0

