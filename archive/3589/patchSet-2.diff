commit 240ccbcefb7ae4d839f3979107c6baa77a4c14d0 (refs/changes/89/3589/2)
Author: Mike Gerdts <mike.gerdts@joyent.com>
Date:   2018-03-13T19:49:43+00:00 (1 year, 7 months ago)
    
    OS-6669 create bhyve brand
    OS-6683 need to adjust default bootrom handling for OS-6416
    
    - initial vmadm support for bhyve brand
    - fix 'make check'
    - update comment in metadata agent
    - OS-6590 Problem provisioning large bhyve image
    - change type to BHYVE and display type to BHYV in vmadm list (joshw)
    - Bhyve does not need to rely on vmadmd, and doesn't need vm-autoboot (joshw)

diff --git a/src/img/lib/imgadm.js b/src/img/lib/imgadm.js
index c18f7ee8..ee81557d 100644
--- a/src/img/lib/imgadm.js
+++ b/src/img/lib/imgadm.js
@@ -3337,7 +3337,7 @@ IMGADM.prototype.createImage = function createImage(options, callback) {
         },
         function getVmInfo(next) {
             var opts;
-            if (vmInfo.brand === 'kvm') {
+            if (vmInfo.brand === 'kvm' || vmInfo.Brand === 'bhyve') {
                 if (vmInfo.disks && vmInfo.disks[0]) {
                     var disk = vmInfo.disks[0];
                     vmZfsFilesystemName = disk.zfs_filesystem;
@@ -3420,7 +3420,7 @@ IMGADM.prototype.createImage = function createImage(options, callback) {
             );
         },
         function getSystemInfo(next) {
-            if (vmInfo.brand === 'kvm') {
+            if (vmInfo.brand === 'kvm' || vmInfo.brand === 'bhyve') {
                 next();
                 return;
             }
@@ -3552,7 +3552,9 @@ IMGADM.prototype.createImage = function createImage(options, callback) {
             }
 
             var toSnapshot = [vmInfo.zfs_filesystem];
-            if (vmInfo.brand === 'kvm' && vmInfo.disks) {
+            if ((vmInfo.brand === 'kvm' || vmInfo.brand === 'bhyve')
+                && vmInfo.disks) {
+
                 for (var i = 0; i < vmInfo.disks.length; i++) {
                     toSnapshot.push(vmInfo.disks[i].zfs_filesystem);
                 }
diff --git a/src/vm/lib/metadata/agent.js b/src/vm/lib/metadata/agent.js
index 52c42b35..74c3d4bc 100644
--- a/src/vm/lib/metadata/agent.js
+++ b/src/vm/lib/metadata/agent.js
@@ -46,17 +46,17 @@
  *
  * # CREATING SOCKETS
  *
- * If the VM is a KVM VM, the qemu process running in the KVM zone will be
- * running with a "ttyb" virtual serial port for the KVM guest. From the host
- * we can connect to connect to /root/tmp/vm.ttyb in the zoneroot which Qemu is
- * listening on for connections. We connect to this as a client but run a
- * metadata server on the resulting connection. Inside the KVM guest the
+ * If the VM is a KVM or bhyve VM, the qemu or bhyve process running in the zone
+ * will be running with a "ttyb" virtual serial port for the KVM guest. From the
+ * host we can connect to connect to /root/tmp/vm.ttyb in the zoneroot on which
+ * Qemu or bhyve is listening for connections. We connect to this as a client
+ * but run a metadata server on the resulting connection. Inside the guest the
  * mdata-client tools connect to the serial device and are then talking to our
  * metadata handler.
  *
- * For all non-KVM VMs we create a unix domain socket in
- * /var/zonecontrol/<zonename> named metadata.sock. We mount the zonecontrol
- * directory into the zone (read-only) via the brand.
+ * For all OS VMs we create a unix domain socket in /var/zonecontrol/<zonename>
+ * named metadata.sock. We mount the zonecontrol directory into the zone
+ * (read-only) via the brand.
  *
  * In non-LX zones, the zonecontrol is mounted such that the socket is at:
  *
@@ -491,10 +491,10 @@ MetadataAgent.prototype.createServersOnExistingZones = function () {
                 return;
             }
 
-            if (zone.brand === 'kvm') {
+            if (zone.brand === 'kvm' || zone.brand === 'bhyve') {
 
                 // For KVM, the zone must be running otherwise Qemu will not
-                // have created a socket.
+                // have created a socket.  A similar situation exists for bhyve.
                 if (zone.zone_state !== 'running') {
                     self.log.debug('skipping zone ' + zone.zonename
                         + ' which has ' + 'non-running zone_state: '
@@ -725,7 +725,8 @@ function handleZoneCreated(zonename) {
                 self.createZoneLog(self.zones[zonename].brand, zonename);
             }
 
-            if (self.zones[zonename].brand === 'kvm') {
+            if (self.zones[zonename].brand === 'kvm'
+                || self.zones[zonename].brand === 'bhyve') {
                 self.startKVMSocketServer(zonename, _dummyCb);
             } else {
                 self.startZoneSocketServer(zonename, _dummyCb);
@@ -755,14 +756,15 @@ MetadataAgent.prototype.start = function start() {
             return;
         }
 
-        // For non-KVM, we only care about create/delete since the socket
-        // only needs to be created once for these zones. For KVM however,
-        // the qemu process recreates the socket on every boot, so we want
-        // to catch 'start' events for KVM to ensure we connect to metadata
-        // as soon as possible.
+        // For non-KVM and non-bhyve, we only care about create/delete since the
+        // socket only needs to be created once for these zones. For KVM and
+        // bhyve however, the qemu or zhyve process recreates the socket on
+        // every boot, so we want to catch 'start' events for KVM or zhyve to
+        // ensure we connect to metadata as soon as possible.
         if (msg.cmd === 'start' && self.zones.hasOwnProperty(msg.zonename)
-            && self.zones[msg.zonename].brand === 'kvm') {
-            // KVM VM started
+            && (self.zones[msg.zonename].brand === 'kvm'
+            || self.zones[msg.zonename].brand === 'bhyve')) {
+            // KVM or bhyve VM started
 
             self.log.debug({
                 delay: (new Date()).getTime() - when.getTime(), // in ms
diff --git a/src/vm/node_modules/VM.js b/src/vm/node_modules/VM.js
index 49210509..96d93062 100644
--- a/src/vm/node_modules/VM.js
+++ b/src/vm/node_modules/VM.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  *
  * Experimental functions, expect these interfaces to be unstable and
  * potentially go away entirely:
@@ -102,6 +102,7 @@ var zonecfg = require('/usr/vm/node_modules/zonecfg');
 
 // pull in stuff from generated props (originating in proptable.js)
 var BRAND_OPTIONS = properties.BRAND_OPTIONS;
+var BHYVE_MEM_OVERHEAD = properties.BHYVE_MEM_OVERHEAD;
 var PAYLOAD_PROPERTIES = properties.PAYLOAD_PROPERTIES;
 var FLATTENABLE_ARRAYS = properties.FLATTENABLE_ARRAYS;
 var FLATTENABLE_ARRAY_HASH_KEYS = properties.FLATTENABLE_ARRAY_HASH_KEYS;
@@ -112,6 +113,7 @@ var UPDATABLE_DISK_PROPS = properties.UPDATABLE_DISK_PROPS;
 var UPDATABLE_NIC_PROPS = properties.UPDATABLE_NIC_PROPS;
 
 // re-export these
+exports.BHYVE_MEM_OVERHEAD = BHYVE_MEM_OVERHEAD;
 exports.FLATTENABLE_ARRAYS = FLATTENABLE_ARRAYS;
 exports.FLATTENABLE_ARRAY_HASH_KEYS = FLATTENABLE_ARRAY_HASH_KEYS;
 exports.FLATTENABLE_HASH_KEYS = FLATTENABLE_HASH_KEYS;
@@ -5945,10 +5947,24 @@ function buildZonecfgUpdate(vmobj, payload, log)
     }
 
     // XXX Used on KVM but can be passed in for 'OS' too. We only setAttr on KVM
-    if (BRAND_OPTIONS[brand].features.type === 'KVM') {
+    if (['BHYVE', 'KVM'].indexOf(BRAND_OPTIONS[brand].features.type) !== -1) {
         setAttr('ram', 'ram');
     }
 
+    if (brand === 'bhyve') {
+        // If both com1 and com2 are unspecified, use KVM-compatible values.
+        if (!payload.hasOwnProperty('com1')
+            && !payload.hasOwnProperty('com2')) {
+
+            payload.com1 = '/dev/zconsole';
+            payload.com2 = 'socket,/tmp/vm.ttyb';
+        }
+        setAttr('com1', 'com1');
+        setAttr('com2', 'com2');
+
+        setAttr('bhyve-opts', 'bhyve_opts');
+    }
+
     // NOTE: Thanks to normalizePayload() we'll only have these when relevant
     setAttr('vcpus', 'vcpus');
     setAttr('boot', 'boot');
@@ -6080,6 +6096,11 @@ function checkHWSetup(vmobj, log, callback)
         log = tracers_obj.log;
     }
 
+    if (vmobj.brand === 'bhyve') {
+        callback(null, true);
+        return;
+    }
+
     q = new Qmp(log);
     socket = vmobj.zonepath + '/root/tmp/vm.qmp';
 
@@ -6371,6 +6392,12 @@ function archiveVM(uuid, options, callback)
                     dst: archive_dirname,
                     targ: path.join(archive_dirname, 'startvm')
                 });
+            } else if (vmobj.brand === 'bhyve') {
+                patterns_to_archive.push({
+                    src: path.join(vmobj.zonepath, 'root/var/run/*.log*'),
+                    dst: path.join(archive_dirname, 'vmlogs'),
+                    create_dst_dir: true
+                });
             } else if (vmobj.docker) {
 
                 function logTimestamp() {
@@ -7067,7 +7094,7 @@ function makeDestructible(dataset, log, callback)
     });
 }
 
-// create and install a 'joyent' or 'kvm' brand zone.
+// create and install a 'joyent', 'kvm', or 'bhyve' brand zone.
 function installZone(payload, log, callback)
 {
     var load_fields;
@@ -7984,7 +8011,9 @@ function createZone(payload, log, callback)
             // For large KVM VMs we want a longer timeout as these take longer
             // to boot. We'll set the timeout to provision_timeout for every
             // 4G of 'ram' in the VM.
-            if (payload.brand === 'kvm' && payload.ram) {
+            if ((payload.brand === 'kvm' || payload.brand == 'bhyve')
+                && payload.ram) {
+
                 timeout_multiplier = Math.floor(payload.ram / 4096) - 1;
                 if (timeout_multiplier > 0) {
                     provision_timeout = provision_timeout
@@ -9812,7 +9841,9 @@ exports.create = function (payload, options, callback)
                 cb();
             });
         }, function (cb) {
-            if (BRAND_OPTIONS[payload.brand].features.type === 'KVM') {
+            var vm_type = BRAND_OPTIONS[payload.brand].features.type;
+
+            if (['BHYVE', 'KVM'].indexOf(vm_type) !== -1) {
                 createVM(payload, log, function (error, result) {
                     if (error) {
                         cb(error);
@@ -11054,8 +11085,9 @@ exports.rollback_snapshot = function (uuid, snapname, options, callback)
             return;
         }
 
-        if (vmobj.brand === 'kvm') {
-            callback(new Error('snapshots for KVM VMs currently unsupported'));
+        if (vmobj.brand === 'kvm' || vmobj.brand === 'bhyve') {
+            callback(new Error('snapshots for ' + vmobj.brand
+                + ' VMs currently unsupported'));
             return;
         }
 
@@ -11172,8 +11204,9 @@ exports.delete_snapshot = function (uuid, snapname, options, callback)
             return;
         }
 
-        if (vmobj.brand === 'kvm') {
-            callback(new Error('snapshots for KVM VMs currently unsupported'));
+        if (vmobj.brand === 'kvm' || vmobj.brand === 'bhyve') {
+            callback(new Error('snapshots for ' + vmobj.brand
+                + ' VMs currently unsupported'));
             return;
         }
 
@@ -11333,8 +11366,9 @@ exports.create_snapshot = function (uuid, snapname, options, callback)
             return;
         }
 
-        if (vmobj.brand === 'kvm') {
-            callback(new Error('snapshots for KVM VMs currently unsupported'));
+        if (vmobj.brand === 'kvm' || vmobj.brand === 'bhyve') {
+            callback(new Error('snapshots for ' + vmobj.brand
+                + ' VMs currently unsupported'));
             return;
         }
 
@@ -11776,7 +11810,6 @@ exports.start = function (uuid, extra, options, callback)
 {
     var load_fields;
     var log;
-    var kvm_load_fields;
     var tracers_obj;
     var vmobj;
 
@@ -11793,35 +11826,59 @@ exports.start = function (uuid, extra, options, callback)
         'zonepath'
     ];
 
-    kvm_load_fields = [
-        'boot',
-        'brand',
-        'cpu_type',
-        'default_gateway',
-        'disks',
-        'hostname',
-        'internal_metadata',
-        'never_booted',
-        'nics',
-        'platform_buildstamp',
-        'qemu_extra_opts',
-        'qemu_opts',
-        'ram',
-        'resolvers',
-        'spice_opts',
-        'spice_password',
-        'spice_port',
-        'state',
-        'uuid',
-        'vcpus',
-        'vga',
-        'virtio_txtimer',
-        'virtio_txburst',
-        'vnc_password',
-        'zone_state',
-        'zonename',
-        'zonepath'
-    ];
+    var virt_load_fields = {
+        KVM: [
+            'boot',
+            'brand',
+            'cpu_type',
+            'default_gateway',
+            'disks',
+            'hostname',
+            'internal_metadata',
+            'never_booted',
+            'nics',
+            'platform_buildstamp',
+            'qemu_extra_opts',
+            'qemu_opts',
+            'ram',
+            'resolvers',
+            'spice_opts',
+            'spice_password',
+            'spice_port',
+            'state',
+            'uuid',
+            'vcpus',
+            'vga',
+            'virtio_txtimer',
+            'virtio_txburst',
+            'vnc_password',
+            'zone_state',
+            'zonename',
+            'zonepath'
+        ],
+        BHYVE: [
+            'boot',
+            'brand',
+            'cpu_type',
+            'default_gateway',
+            'disks',
+            'hostname',
+            'internal_metadata',
+            'never_booted',
+            'nics',
+            'platform_buildstamp',
+            'bhyve_extra_opts',
+            'bhyve_opts',
+            'ram',
+            'resolvers',
+            'state',
+            'uuid',
+            'vcpus',
+            'zone_state',
+            'zonename',
+            'zonepath'
+        ]
+    };
 
     // options is optional
     if (arguments.length === 3) {
@@ -11957,13 +12014,14 @@ exports.start = function (uuid, extra, options, callback)
             }
         }, function (cb) {
             var err;
+            var vm_type = BRAND_OPTIONS[vmobj.brand].features.type;
 
-            if (BRAND_OPTIONS[vmobj.brand].features.type === 'KVM') {
-                // when we boot KVM we need a lot more fields, so load again
-                // in that case to get the fields we need.
+            if (['BHYVE', 'KVM'].indexOf(vm_type) !== -1) {
+                // when we boot KVM or bhyve we need a lot more fields, so load
+                // again in that case to get the fields we need.
                 VM.load(uuid, {
                     log: log,
-                    fields: kvm_load_fields
+                    fields: virt_load_fields[vm_type]
                 }, function (error, obj) {
                     if (error) {
                         cb(error);
@@ -14012,6 +14070,13 @@ exports.stop = function (uuid, options, callback)
                     cb();
                 }
             });
+        }, function _unsupportedBhyve(cb) {
+            if (vmobj.brand !== 'bhyve') {
+                cb();
+                return;
+            }
+            // TODO: support this.
+            cb(new Error('stop is not yet supported for bhyve without force'));
         }, function (cb) {
             var unset_autoboot = 'set autoboot=false';
 
diff --git a/src/vm/node_modules/expander.js b/src/vm/node_modules/expander.js
index 90ade844..4598029e 100644
--- a/src/vm/node_modules/expander.js
+++ b/src/vm/node_modules/expander.js
@@ -21,7 +21,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2015, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  */
 
@@ -53,7 +53,7 @@ console.log(
     + ' */\n'
     + '\n'
     + '/*\n'
-    + ' * Copyright (c) 2015, Joyent, Inc. All rights reserved.\n'
+    + ' * Copyright (c) 2018, Joyent, Inc. All rights reserved.\n'
     + ' *\n'
     + ' * THIS FILE IS AUTOGENERATED FROM proptable.js DO NOT EDIT!!!\n'
     + ' * CHANGES WILL BE LOST.\n'
@@ -294,6 +294,8 @@ output = 'exports.ZFS_FIELDS = '
     + JSON.stringify(zfs_types, null, 2) + ';\n';
 console.log(output);
 
+console.log('exports.BHYVE_MEM_OVERHEAD = ' + proptable.BHYVE_MEM_OVERHEAD
+    + ';\n');
 console.log('exports.KVM_MEM_OVERHEAD = ' + proptable.KVM_MEM_OVERHEAD + ';\n');
 
 output = 'exports.BRAND_OPTIONS = '
diff --git a/src/vm/node_modules/proptable.js b/src/vm/node_modules/proptable.js
index 10629f80..7b3b134c 100644
--- a/src/vm/node_modules/proptable.js
+++ b/src/vm/node_modules/proptable.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2015, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  */
 
@@ -35,6 +35,11 @@
  *
  */
 
+// values used in feature table for bhyve
+// This can likely be lowered once we use large pages.
+var BHYVE_MEM_OVERHEAD = 1024 + 256;
+var BHYVE_MIN_MEM_OVERHEAD = 256;
+
 // values used in feature table for KVM
 var KVM_MEM_OVERHEAD = 1024;
 var KVM_MIN_MEM_OVERHEAD = 256;
@@ -244,6 +249,7 @@ exports.properties = {
     add_disks: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'kvm': ['update']
             },
             check_as: 'disks',
@@ -263,6 +269,7 @@ exports.properties = {
     }, add_nics: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -275,6 +282,7 @@ exports.properties = {
         loadValueTranslator: 'utils.unbase64',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -293,6 +301,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -305,6 +314,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -313,9 +323,18 @@ exports.properties = {
             type: 'boolean'
         },
         zonexml: 'zone.autoboot'
+    }, bhyve_opts: {
+        payload: {
+            allowed: {
+                'bhyve': ['create', 'receive', 'update']
+            },
+            type: 'string'
+        },
+        zonexml: 'zone.attr.bhyve-opts'
     }, billing_id: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -327,6 +346,7 @@ exports.properties = {
     }, boot: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update']
             },
             type: 'string'
@@ -335,9 +355,18 @@ exports.properties = {
     }, boot_timestamp: {
         loadValueTranslator: 'utils.epochTimestampSecs',
         zoneinfo: 'boot_time'
+    }, bootrom: {
+        payload: {
+            allowed: {
+                'bhyve': ['create', 'receive', 'update']
+            },
+            type: 'string'
+        },
+        zonexml: 'zone.attr.bootrom'
     }, brand: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -352,10 +381,27 @@ exports.properties = {
             type: 'string'
         },
         zonexml: 'zone.brand'
+    }, com1: {
+        payload: {
+            allowed: {
+                'bhyve': ['create', 'receive', 'update']
+            },
+            type: 'string'
+        },
+        zonexml: 'zone.attr.com1'
+    }, com2: {
+        payload: {
+            allowed: {
+                'bhyve': ['create', 'receive', 'update']
+            },
+            type: 'string'
+        },
+        zonexml: 'zone.attr.com2'
     }, cpu_cap: {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -369,6 +415,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -389,6 +436,7 @@ exports.properties = {
     }, create_only: {
         payload: {
             allowed: {
+                'bhyve': ['receive'],
                 'joyent': ['receive'],
                 'joyent-minimal': ['receive'],
                 'kvm': ['receive'],
@@ -399,6 +447,7 @@ exports.properties = {
     }, create_timestamp: {
         payload: {
             allowed: {
+                'bhyve': ['receive'],
                 'joyent': ['receive'],
                 'joyent-minimal': ['receive'],
                 'kvm': ['receive'],
@@ -416,6 +465,7 @@ exports.properties = {
         json: 'customer_metadata',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -438,6 +488,7 @@ exports.properties = {
     }, datasets: {
         payload: {
             allowed: {
+                'bhyve': ['receive'],
                 'joyent': ['receive'],
                 'joyent-minimal': ['receive'],
                 'kvm': ['receive'],
@@ -468,6 +519,7 @@ exports.properties = {
         flattenable: 'array_hash_key',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'kvm': ['create', 'receive']
             },
             type: 'object-array'
@@ -481,6 +533,7 @@ exports.properties = {
     }, 'disks.*.block_size': {
         payload: {
             allowed: {
+                'bhyve': ['add'],
                 'kvm': ['add']
             },
             type: 'integer',
@@ -494,6 +547,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'boolean'
@@ -503,6 +557,7 @@ exports.properties = {
     }, 'disks.*.compression': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'string'
@@ -525,6 +580,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['add'],
                 'kvm': ['add']
             },
             type: 'integer',
@@ -534,6 +590,7 @@ exports.properties = {
     }, 'disks.*.image_uuid': {
         payload: {
             allowed: {
+                'bhyve': ['add'],
                 'kvm': ['add']
             },
             type: 'uuid'
@@ -542,6 +599,7 @@ exports.properties = {
     }, 'disks.*.media': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'string'
@@ -550,6 +608,7 @@ exports.properties = {
     }, 'disks.*.model': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'string'
@@ -559,6 +618,7 @@ exports.properties = {
     }, 'disks.*.nocreate': {
         payload: {
             allowed: {
+                'bhyve': ['add'],
                 'kvm': ['add']
             },
             type: 'boolean'
@@ -566,6 +626,7 @@ exports.properties = {
     }, 'disks.*.path': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'string'
@@ -574,6 +635,7 @@ exports.properties = {
     }, 'disks.*.refreservation': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'integer',
@@ -586,6 +648,7 @@ exports.properties = {
     }, 'disks.*.size': {
         payload: {
             allowed: {
+                'bhyve': ['add'],
                 'kvm': ['add']
             },
             type: 'integer',
@@ -598,6 +661,7 @@ exports.properties = {
     }, 'disks.*.zfs_filesystem': {
         payload: {
             allowed: {
+                'bhyve': ['receive'],
                 'kvm': ['receive']
             },
             type: 'string'
@@ -612,6 +676,7 @@ exports.properties = {
     }, 'disks.*.zpool': {
         payload: {
             allowed: {
+                'bhyve': ['add'],
                 'kvm': ['add']
             },
             type: 'string'
@@ -623,6 +688,7 @@ exports.properties = {
     }, disk_driver: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update']
             },
             type: 'string'
@@ -632,6 +698,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'lx': ['create', 'receive', 'update'],
@@ -727,6 +794,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -750,6 +818,7 @@ exports.properties = {
     }, hostname: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -761,6 +830,7 @@ exports.properties = {
     }, image_uuid: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -778,6 +848,7 @@ exports.properties = {
         load_depends: ['datasets'],
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -793,6 +864,7 @@ exports.properties = {
         load_depends: ['zfs_filesystem'],
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -819,6 +891,7 @@ exports.properties = {
         json: 'internal_metadata',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -831,6 +904,7 @@ exports.properties = {
         loadValueTranslator: 'utils.separateCommas',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -858,6 +932,7 @@ exports.properties = {
     }, limit_priv: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -881,6 +956,7 @@ exports.properties = {
         loadValueTranslator: 'utils.unmangleMem',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -894,6 +970,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -907,6 +984,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -920,6 +998,7 @@ exports.properties = {
         loadValueTranslator: 'utils.unmangleMem',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -933,6 +1012,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -946,6 +1026,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -959,6 +1040,7 @@ exports.properties = {
         loadValueTranslator: 'utils.unmangleMem',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -972,6 +1054,7 @@ exports.properties = {
         loadValueTranslator: 'utils.unmangleMem',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1009,6 +1092,7 @@ exports.properties = {
         flattenable: 'array_hash_key',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -1021,6 +1105,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1034,6 +1119,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1047,6 +1133,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1060,6 +1147,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1073,6 +1161,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'boolean'
@@ -1083,6 +1172,7 @@ exports.properties = {
         loadValueTranslator: 'utils.separateCommas',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1095,6 +1185,7 @@ exports.properties = {
         loadValueTranslator: 'utils.separateCommasAndNumberify',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1108,6 +1199,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1120,6 +1212,7 @@ exports.properties = {
     }, 'nics.*.gateway': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1133,6 +1226,7 @@ exports.properties = {
         loadValueTranslator: 'utils.separateCommas',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1145,6 +1239,7 @@ exports.properties = {
     }, 'nics.*.interface': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1156,6 +1251,7 @@ exports.properties = {
     }, 'nics.*.ip': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1169,6 +1265,7 @@ exports.properties = {
         loadValueTranslator: 'utils.separateCommas',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1181,6 +1278,7 @@ exports.properties = {
     }, 'nics.*.mac': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1193,6 +1291,7 @@ exports.properties = {
     }, 'nics.*.model': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'kvm': ['add', 'update']
             },
             type: 'string'
@@ -1203,6 +1302,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1217,6 +1317,7 @@ exports.properties = {
     }, 'nics.*.netmask': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1229,6 +1330,7 @@ exports.properties = {
     }, 'nics.*.network_uuid': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1241,6 +1343,7 @@ exports.properties = {
     }, 'nics.*.nic_tag': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1254,6 +1357,7 @@ exports.properties = {
         loadValueTranslator: 'utils.fixBoolean',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1267,6 +1371,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1282,6 +1387,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1296,6 +1402,7 @@ exports.properties = {
     }, 'nics.*.vrrp_primary_ip': {
         payload: {
             allowed: {
+                'bhyve': ['add', 'update'],
                 'joyent': ['add', 'update'],
                 'joyent-minimal': ['add', 'update'],
                 'kvm': ['add', 'update'],
@@ -1317,6 +1424,7 @@ exports.properties = {
     }, owner_uuid: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1375,6 +1483,7 @@ exports.properties = {
     }, quota: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1392,6 +1501,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1404,6 +1514,7 @@ exports.properties = {
     }, remove_customer_metadata: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1414,6 +1525,7 @@ exports.properties = {
     }, remove_disks: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'kvm': ['update']
             },
             type: 'list'
@@ -1421,6 +1533,8 @@ exports.properties = {
     }, remove_filesystems: {
         payload: {
             allowed: {
+                // XXX-mg delete?
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1431,6 +1545,7 @@ exports.properties = {
     }, remove_internal_metadata: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1441,6 +1556,7 @@ exports.properties = {
     }, remove_nics: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1451,6 +1567,7 @@ exports.properties = {
     }, remove_routes: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1461,6 +1578,7 @@ exports.properties = {
     }, remove_tags: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1473,6 +1591,7 @@ exports.properties = {
         loadValueTranslator: 'utils.separateCommas',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1523,6 +1642,7 @@ exports.properties = {
     }, set_tags: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1533,6 +1653,7 @@ exports.properties = {
     }, set_customer_metadata: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1543,6 +1664,7 @@ exports.properties = {
     }, set_internal_metadata: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1585,6 +1707,7 @@ exports.properties = {
         json: 'tags',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -1595,6 +1718,7 @@ exports.properties = {
     }, transition: {
         payload: {
             allowed: {
+                'bhyve': ['receive'],
                 'joyent': ['receive'],
                 'joyent-minimal': ['receive'],
                 'kvm': ['receive'],
@@ -1627,6 +1751,7 @@ exports.properties = {
     }, update_disks: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'kvm': ['update']
             },
             check_as: 'disks',
@@ -1646,6 +1771,7 @@ exports.properties = {
     }, update_nics: {
         payload: {
             allowed: {
+                'bhyve': ['update'],
                 'joyent': ['update'],
                 'joyent-minimal': ['update'],
                 'kvm': ['update'],
@@ -1657,6 +1783,7 @@ exports.properties = {
     }, uuid: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -1668,6 +1795,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['receive'],
                 'joyent': ['receive'],
                 'joyent-minimal': ['receive'],
                 'kvm': ['receive'],
@@ -1681,6 +1809,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update']
             },
             type: 'integer',
@@ -1722,6 +1851,7 @@ exports.properties = {
         loadValueTranslator: 'utils.unbase64',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update']
             },
             type: 'string'
@@ -1731,6 +1861,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update']
             },
             type: 'integer',
@@ -1767,6 +1898,7 @@ exports.properties = {
     }, zfs_filesystem: {
         payload: {
             allowed: {
+                'bhyve': ['receive'],
                 'joyent': ['receive'],
                 'joyent-minimal': ['receive'],
                 'kvm': ['receive'],
@@ -1781,6 +1913,7 @@ exports.properties = {
     }, zfs_filesystem_limit: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1796,6 +1929,7 @@ exports.properties = {
     }, zfs_root_compression: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1810,6 +1944,7 @@ exports.properties = {
     }, zfs_root_recsize: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1826,6 +1961,7 @@ exports.properties = {
         loadValueTranslator: 'utils.numberify',
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1853,6 +1989,7 @@ exports.properties = {
     }, zone_dataset_uuid: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'kvm': ['create', 'receive']
             },
             type: 'uuid'
@@ -1860,6 +1997,7 @@ exports.properties = {
     }, zonename: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -1871,6 +2009,7 @@ exports.properties = {
     }, zfs_snapshot_limit: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive', 'update'],
                 'joyent': ['create', 'receive', 'update'],
                 'joyent-minimal': ['create', 'receive', 'update'],
                 'kvm': ['create', 'receive', 'update'],
@@ -1900,6 +2039,7 @@ exports.properties = {
     }, zpool: {
         payload: {
             allowed: {
+                'bhyve': ['create', 'receive'],
                 'joyent': ['create', 'receive'],
                 'joyent-minimal': ['create', 'receive'],
                 'kvm': ['create', 'receive'],
@@ -1943,7 +2083,20 @@ exports.properties = {
  *
  */
 exports.brand_options = {
-    'joyent': {
+    'bhyve': {
+        'features': {
+            'default_memory_overhead': BHYVE_MEM_OVERHEAD,
+            'limit_priv': ['default', '-file_link_any', '-net_access',
+                '-proc_fork', '-proc_info', '-proc_session'],
+            'min_memory_overhead': BHYVE_MIN_MEM_OVERHEAD,
+            'model_required': true,
+            'zlogin_console': true,
+            'type': 'BHYVE',
+            'var_svc_provisioning': true,
+            'wait_for_hwsetup': false,
+            'zoneroot_image_types': ['zone-dataset']
+        }
+    }, 'joyent': {
         'features': {
             'brand_install_script': '/usr/lib/brand/joyent/jinstall',
             'cleanup_dataset': true,
diff --git a/src/vm/sbin/vmadm.js b/src/vm/sbin/vmadm.js
index 9ad8b6fa..0f2a731a 100755
--- a/src/vm/sbin/vmadm.js
+++ b/src/vm/sbin/vmadm.js
@@ -21,7 +21,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2016, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  */
 
@@ -482,13 +482,14 @@ function addFakeFields(m)
         && BRAND_OPTIONS[m.brand].features
         && BRAND_OPTIONS[m.brand].features.type) {
 
-        m.type = BRAND_OPTIONS[m.brand].features.type;
+        // TYPE header is 4 characters, so truncate brand name there too.
+        m.type = BRAND_OPTIONS[m.brand].features.type.substr(0, 4);
     } else {
         // When we don't know 'type', treat as OS VM
         m.type = 'OS';
     }
 
-    if (m.brand !== 'kvm') {
+    if (m.brand !== 'kvm' && m.brand !== 'bhyve') {
         // when we do not normally have 'ram', set as fake property for
         // consistency
         m.ram = m.max_physical_memory;
diff --git a/src/vm/sbin/vmadmd.js b/src/vm/sbin/vmadmd.js
index 0cd5518d..558ebe23 100755
--- a/src/vm/sbin/vmadmd.js
+++ b/src/vm/sbin/vmadmd.js
@@ -21,7 +21,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  *
  */
 
@@ -606,6 +606,7 @@ function handleProvisioning(vmobj, cb)
  *
  * 30s was chosen arbitrarily as an estimate of when we'd be past the initial
  * boot.
+ *
  */
 function rotateKVMLog(vm_uuid)
 {
@@ -968,8 +969,9 @@ function updateZoneStatus(ev)
         || ev.oldstate === 'running'
         || ev.newstate === 'uninitialized')) {
 
-        log.info('' + ev.zonename + ' (kvm) went from ' + ev.oldstate
-            + ' to ' + ev.newstate + ' at ' + ev.when);
+        log.info('' + ev.zonename + ' (' +seen_vms[ev.zonename].brand
+            + ') went from ' + ev.oldstate + ' to ' + ev.newstate
+            + ' at ' + ev.when);
         // Continue on to VM.load()
     } else if (seen_vms[ev.zonename].docker
         && (ev.newstate === 'uninitialized')) {
@@ -1124,7 +1126,7 @@ function updateZoneStatus(ev)
         // don't handle transitions other than provisioning for non-kvm
         if (vmobj.brand !== 'kvm') {
             log.trace('doing nothing for ' + ev.zonename + ' transition '
-                + 'because brand != "kvm"');
+                + 'because brand is not "kvm"');
             return;
         }
 
@@ -1142,7 +1144,6 @@ function updateZoneStatus(ev)
             }
         } else if (ev.newstate === 'uninitialized') { // this means installed!?
             // XXX we're running stop so it will clear the transition marker
-
             VM.stop(ev.zonename, {'force': true}, function (e) {
                 if (e && e.code !== 'ENOTRUNNING') {
                     log.error(e, 'stop failed');
@@ -1376,6 +1377,14 @@ function startHTTPHandler()
     }
 }
 
+// Generates an error with message 'vmadmd only handles '<command>' for:
+// <brand(s)> (your brand is <brand>)'
+function unsupportedBrandError(brands, command, brand)
+{
+    return new Error('vmadmd only handles "' + command + '" for: '
+        + brands.join(' ') + '(your brand is: ' + brand + ')');
+}
+
 /*
  * GET /vm/:id[?type=vnc,xxx]
  * POST /vm/:id?action=stop
@@ -1396,40 +1405,39 @@ function stopVM(uuid, timeout, callback)
 
     /* We load here to get the zonepath and ensure it exists. */
     VM.load(uuid, {fields: ['brand', 'zonepath']}, function (err, vmobj) {
-        var socket;
-        var q;
-
         if (err) {
             log.debug('Unable to load vm: ' + err.message, err);
             callback(err);
             return;
         }
 
-        q = new Qmp(log);
+        if (vmobj.brand === 'kvm') {
+            var socket;
+            var q;
 
-        if (vmobj.brand !== 'kvm') {
-            callback(new Error('vmadmd only handles "stop" for kvm ('
-                + 'your brand is: ' + vmobj.brand + ')'));
-            return;
-        }
+            q = new Qmp(log);
 
-        socket = vmobj.zonepath + '/root/tmp/vm.qmp';
-        q.connect(socket, function (error) {
-            if (error) {
-                callback(error);
-                return;
-            }
-            q.command('system_powerdown', null, function (e, result) {
-                log.debug('result: ' + JSON.stringify(result));
-                q.disconnect();
+            socket = vmobj.zonepath + '/root/tmp/vm.qmp';
+            q.connect(socket, function (error) {
+                if (error) {
+                    callback(error);
+                    return;
+                }
+                q.command('system_powerdown', null, function (e, result) {
+                    log.debug('result: ' + JSON.stringify(result));
+                    q.disconnect();
 
-                // Setup to send kill when timeout expires
-                setStopTimer(uuid, timeout * 1000);
+                    // Setup to send kill when timeout expires
+                    setStopTimer(uuid, timeout * 1000);
 
-                callback(null);
-                return;
+                    callback(null);
+                    return;
+                });
             });
-        });
+        } else {
+            callback(unsupportedBrandError(['kvm'], 'stop', vmobj.brand));
+            return;
+        }
     });
 }
 
@@ -1869,7 +1877,8 @@ function upgradeVM(vmobj, fields, callback)
     var new_cores;
     var upgrade_payload = {};
 
-    if (vmobj.v === 1) {
+    // 'bhyve' didn't exist pre version 1, so VMs won't need upgrade.
+    if (vmobj.v === 1 || vmobj.brand === 'bhyve') {
         log.trace('VM ' + vmobj.uuid + ' already at version 1, skipping '
             + 'upgrade.');
         callback(null, vmobj);
@@ -2210,7 +2219,8 @@ function upgradeVM(vmobj, fields, callback)
             });
         }, function (cb) {
             // for KVM we always want 10G zoneroot quota
-            if (vmobj.brand === 'kvm' && vmobj.quota !== 10) {
+            if ((vmobj.brand === 'kvm')
+                && vmobj.quota !== 10) {
                 log.info('fixing KVM quota to 10 (was ' + vmobj.quota + ')');
                 upgrade_payload.quota = 10;
             }
diff --git a/src/vm/sbin/vmdf.js b/src/vm/sbin/vmdf.js
index 94cea9bb..9c25d377 100755
--- a/src/vm/sbin/vmdf.js
+++ b/src/vm/sbin/vmdf.js
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -159,8 +159,8 @@ VM.lookup({}, {fields: lookup_fields}, function (error, vmobjs) {
 
                     cores = data['zones/cores/' + vm.zonename].used;
 
-                    if (vm.brand === 'kvm') {
-                        vm_usage.virt = 'KVM';
+                    if (vm.brand === 'kvm' || vm.brand === 'bhyve') {
+                        vm_usage.virt = vm.brand.toUpperCase();
                         vm_usage.disks_volsize = 0;
                         vm.disks.forEach(function (d) {
                             vm_usage.disks_volsize
