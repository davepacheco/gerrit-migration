commit 62a6ab9e590427036b153fa6c5de29b9f56d1dea
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2019-07-09T11:18:35-07:00 (3 months ago)
    
    TRITON-1800 sapi instances.tests.js creates cpu_cap-less VMs
    Reviewed by: Orlando Vazquez <orlando@joyent.com>
    Approved by: Orlando Vazquez <orlando@joyent.com>

diff --git a/test/helper.js b/test/helper.js
index 091df40..0ac6c1a 100644
--- a/test/helper.js
+++ b/test/helper.js
@@ -298,6 +298,7 @@ function consVmParams(cb) {
     params.owner_uuid = process.env.ADMIN_UUID;
     params.server_uuid = process.env.SERVER_UUID;
     params.ram = 256;
+    params.cpu_cap = 100;
 
     async.waterfall([
         function (subcb) {
diff --git a/test/instances.test.js b/test/instances.test.js
index 4f941be..dad835b 100644
--- a/test/instances.test.js
+++ b/test/instances.test.js
@@ -12,6 +12,7 @@
  * test/instances.test.js: test /instances endpoints
  */
 
+var assert = require('assert-plus');
 var async = require('async');
 var jsprim = require('jsprim');
 var node_uuid = require('node-uuid');
@@ -549,13 +550,19 @@ test('put/get/del agent instance', function (t) {
     });
 });
 
-function createVm(uuid, cb) {
+function createVm(inst, cb) {
+    assert.object(inst, 'inst');
+    assert.string(inst.uuid, 'inst.uuid');
+    assert.optionalObject(inst.params, 'inst.params');
+
     var vmapiplus = helper.createVmapiPlusClient();
 
     helper.consVmParams(function (err, params) {
-        params.uuid = uuid;
 
-        vmapiplus.createVm(params, {}, cb);
+        var vmParams = jsprim.mergeObjects(params, inst.params);
+        vmParams.uuid = inst.uuid;
+
+        vmapiplus.createVm(vmParams, {}, cb);
     });
 }
 
@@ -596,7 +603,7 @@ test('create instance with VM aleady existing', function (t) {
             if (process.env.TEST_SAPI_PROTO_MODE === 'true')
                 return (cb(null));
 
-            createVm(inst.uuid, cb);
+            createVm(inst, cb);
         },
         function (_, cb) {
             client.post(URI, inst, function (err, req, res, obj) {
@@ -984,6 +991,7 @@ test('create instance with NAPI networks', function (t) {
                 inst.params.alias =
                     common.getUniqueTestResourceName('napi-nets-' + inst.uuid);
                 inst.params.networks = net;
+                inst.params.cpu_cap = 100;
                 cb(null);
             },
             function (_, cb) {
