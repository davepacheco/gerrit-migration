From 1da8bdd09abc6c68f39d70ef9cce0bb242891171 Mon Sep 17 00:00:00 2001
From: Brian Bennett <brian.bennett@joyent.com>
Date: Mon, 9 Sep 2019 16:35:26 -0700
Subject: [PATCH] =?UTF-8?q?CAPI-527=20UFDS=20needs=20to=20generate=20dynam?=
 =?UTF-8?q?ic=20root=20credentials.=20Reviewed=20by:=20Pedro=20Palaz=C3=B3?=
 =?UTF-8?q?n=20Candel=20<pedro@joyent.com>=20Approved=20by:=20Trent=20Mick?=
 =?UTF-8?q?=20<trentm@gmail.com>?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 scripts/prompt-config.sh |  6 +++++-
 tools/bin/sdc-ufds-m2s   | 42 ++++++++++++++++++++++++++++------------
 2 files changed, 35 insertions(+), 13 deletions(-)

diff --git a/scripts/prompt-config.sh b/scripts/prompt-config.sh
index d1220743..fff49965 100755
--- a/scripts/prompt-config.sh
+++ b/scripts/prompt-config.sh
@@ -1657,9 +1657,13 @@ echo "rabbitmq=$rabbitmq" >>$tmp_config
 echo "rabbitmq_domain=rabbitmq.${datacenter_name}.${dns_domain}" >>$tmp_config
 echo >>$tmp_config
 
+# Generate a random password for the ufds root account.
+# 16 bytes is equivalent to a 128 bit key.
+random_pw=$(openssl rand -hex 16)
+
 echo "ufds_is_master=true" >>$tmp_config
 echo "ufds_ldap_root_dn=cn=root" >>$tmp_config
-echo "ufds_ldap_root_pw=secret" >>$tmp_config
+echo "ufds_ldap_root_pw=$random_pw" >>$tmp_config
 echo "ufds_admin_login=admin" >>$tmp_config
 echo "ufds_admin_pw='$escaped_zone_admin_pw'" >>$tmp_config
 echo "ufds_admin_email=$mail_to" >>$tmp_config
diff --git a/tools/bin/sdc-ufds-m2s b/tools/bin/sdc-ufds-m2s
index 7cf23e54..21c721ce 100755
--- a/tools/bin/sdc-ufds-m2s
+++ b/tools/bin/sdc-ufds-m2s
@@ -6,10 +6,10 @@
 #
 
 #
-# Copyright (c) 2019, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
-# This script converts a UFDS master HN into a slave.
+# This script converts a UFDS primary HN into a replica.
 
 export PATH="/usr/bin:/usr/sbin:/opt/smartdc/bin"
 
@@ -62,6 +62,7 @@ is_net()
 promptnet()
 {
     MASTER_UFDS_IP=""
+    local prompt_str
 
     while [ -z "$MASTER_UFDS_IP" ]; do
         prmpt_str="$1: "
@@ -75,6 +76,19 @@ promptnet()
     done
 }
 
+promptpw()
+{
+    REMOTE_ROOT_PW=""
+    local prompt_str
+
+    while [ -z "$REMOTE_ROOT_PW" ]; do
+        prompt_str="$1: "
+	echo -ne "$prompt_str"
+        IFS='' read -r -s REMOTE_ROOT_PW
+        printf '\n'
+    done
+}
+
 get_replicator_status()
 {
     local log=/var/svc/log/smartdc-application-ufds-replicator:default.log
@@ -96,7 +110,7 @@ get_replicator_status()
 source /lib/sdc/config.sh
 load_sdc_config
 
-# check if already a slave
+# check if already a replica
 if [[ $CONFIG_ufds_is_master != "true" ]]; then
     echo "Error: already converted"
     exit 1
@@ -128,7 +142,7 @@ fi
 echo "---------------------------------------------------------------"
 echo "Warning:"
 echo "This command will delete all existing UFDS data and reconfigure"
-echo "UFDS as a slave."
+echo "UFDS as a replica."
 echo
 echo "Ensure that the SAPI zone is up-to-date before proceeding."
 echo "---------------------------------------------------------------"
@@ -136,14 +150,17 @@ echo -n "Enter 'y' to continue: "
 read val
 [[ "$val" != "y" ]] && exit 0
 
-# read ufds master IP
-promptnet "UFDS master IP address"
+# read ufds primary IP
+promptnet "Primary datacenter UFDS IP address"
+pw_prompt_str="Primary datacenter UFDS root password (check ufds_ldap_root_pw"
+pw_prompt_str+="\nin /usbkey/config in the primary datacenter's headnode)"
+promptpw "$pw_prompt_str"
 
-# check connectivity to ufds master
+# check connectivity to ufds primary
 zlogin $ufds_uuid LDAPTLS_REQCERT=allow /opt/local/bin/ldapsearch \
     -H ldaps://$MASTER_UFDS_IP -x -b '' 'objectclass=*' >/dev/null 2>&1
 if [ $? != 0 ]; then
-    echo "Error: local UFDS zone does not have connectivity to the master"
+    echo "Error: local UFDS zone does not have connectivity to the primary"
     exit 1
 fi
 
@@ -218,8 +235,8 @@ bash /var/tmp/cleanup.ufds
 # Now delete the admin user entry itself
 sdc-ldap delete "uuid=${CONFIG_ufds_admin_uuid}, ou=users, o=smartdc"
 
-# Remove any of the region information from the new slave since that will get
-# replicated from the master.
+# Remove any of the region information from the new replica since that will get
+# replicated from the primary.
 zlogin $ufds_uuid "/opt/smartdc/ufds/bin/ufds-find-dns \
     \"region=${CONFIG_region_name}, o=smartdc\"" | while read l; do
     sdc-ldap delete "${l}"
@@ -227,7 +244,7 @@ done
 
 sdc-ldap delete "region=${CONFIG_region_name}, o=smartdc"
 
-# Finally, remove the local version.  The master's version is what counts.
+# Finally, remove the local version.  The primary's version is what counts.
 sdc-ldap delete "cn=version, o=smartdc"
 
 echo "Setting up UFDS replicator"
@@ -239,7 +256,8 @@ cat <<DONE >/tmp/fixufds
 {
     "metadata": {
         "ufds_is_master": "false",
-        "ufds_remote_ip": "${MASTER_UFDS_IP}"
+        "ufds_remote_ip": "${MASTER_UFDS_IP}",
+        "ufds_remote_ldap_root_pw": "${REMOTE_ROOT_PW}"
     }
 }
 DONE
-- 
2.21.0

