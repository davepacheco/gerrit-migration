From b58a34a3c659ec5fb80be25e94126395d99922db Mon Sep 17 00:00:00 2001
From: Gabe Gorelick <gabe@catalytic.com>
Date: Tue, 19 Jun 2018 18:59:29 -0500
Subject: [PATCH] Add ability to disable printf

---
 lib/verror.js      |  4 +++-
 test/tst.verror.js | 14 ++++++++++++++
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/lib/verror.js b/lib/verror.js
index 8663dde..fcd6c3d 100644
--- a/lib/verror.js
+++ b/lib/verror.js
@@ -107,7 +107,7 @@ function parseConstructorArguments(args)
 	 * "strict" option to the VError constructor.
 	 */
 	mod_assertplus.object(options);
-	if (!options.strict && !args.strict) {
+	if (!options.skipPrintf && !options.strict && !args.strict) {
 		sprintf_args = sprintf_args.map(function (a) {
 			return (a === null ? 'null' :
 			    a === undefined ? 'undefined' : a);
@@ -116,6 +116,8 @@ function parseConstructorArguments(args)
 
 	if (sprintf_args.length === 0) {
 		shortmessage = '';
+	} else if (options.skipPrintf) {
+		shortmessage = sprintf_args[0];
 	} else {
 		shortmessage = sprintf.apply(null, sprintf_args);
 	}
diff --git a/test/tst.verror.js b/test/tst.verror.js
index 432bb90..82328bb 100644
--- a/test/tst.verror.js
+++ b/test/tst.verror.js
@@ -47,6 +47,20 @@ function main()
 		console.error(new SError('my %s string', undefined));
 	}, /attempted to print undefined or null as a string/);
 
+	/* disabling printf */
+	err = new VError({ 'skipPrintf': true }, '%s');
+	mod_assert.equal(err.message, '%s');
+	err = new VError({ 'skipPrintf': true });
+	mod_assert.equal(err.message, '');
+	err = new VError({ 'skipPrintf': true }, '%s', 'foo');
+	mod_assert.equal(err.message, '%s');
+	err = new VError({ 'skipPrintf': false }, '%s', 'foo');
+	mod_assert.equal(err.message, 'foo');
+	err = new VError({ 'skipPrintf': null }, '%s', 'foo');
+	mod_assert.equal(err.message, 'foo');
+	err = new VError({ 'skipPrintf': undefined }, '%s', 'foo');
+	mod_assert.equal(err.message, 'foo');
+
 	/* caused by another error, with no additional message */
 	suberr = new Error('root cause');
 	err = new VError(suberr);
-- 
2.21.0

