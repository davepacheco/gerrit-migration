{"project":"joyent/illumos-joyent","branch":"master","id":"I3c6773b1625d422bcb6d0d1369b3e985279c7921","number":"4929","subject":"OS-7058 need zfs trim support","owner":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"url":"https://cr.joyent.us/4929","commitMessage":"OS-7058 need zfs trim support\n","createdOn":1538749289,"lastUpdated":1556192738,"open":false,"status":"ABANDONED","comments":[{"timestamp":1538749289,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 1."},{"timestamp":1539184947,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Patch Set 1:\n\n(70 comments)\n\nSorry this took me a while to finish off. I\u0027m most definitely not a ZFS expert, so I\u0027m not sure how much store I\u0027d put by this review, but I mostly have nits only."},{"timestamp":1539193866,"reviewer":{"name":"Matthew Ahrens","email":"mahrens@delphix.com","username":"ahrens"},"message":"Patch Set 1:\n\nDo you know which exact version of the TRIM code you started with?  I ask because I\u0027d like to be sure that all the changes that Saso made in response to my feedback in https://github.com/openzfs/openzfs/pull/172 are included here.  I checked one of the later commits from that PR and it\u0027s changes don\u0027t seem to be here (https://github.com/openzfs/openzfs/pull/172/commits/c24c388569f41f8002cad61ccd4327d04c135388)."},{"timestamp":1539367142,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"Patch Set 1:\n\n(8 comments)\n\nJust a few minor comments from me. It sounds like you and Matt might think that splitting TRIMs across TXGs might have been done due to how a particular SSD performed undergoing TRIM. It\u0027d be good to know what hardware this was tested on, and it sounds like you have a test rig for this now, which is good."},{"timestamp":1539376017,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1539668015,"reviewer":{"name":"Jorgen Lundman","email":"lundman@lundman.net","username":"lundman"},"message":"Patch Set 1:\n\n(2 comments)"},{"timestamp":1540228639,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\nThis next round of changes includes all of the patches from last spring\u0027s openzfs pull request. It also includes my fixes to those patches and the changes I made to address the basic CR comments here. For the other CR questions and general \"philosophical\" comments, I\u0027ll address those separately."},{"timestamp":1540228686,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 2."},{"timestamp":1540471649,"reviewer":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1540504173,"reviewer":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1540642679,"reviewer":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"},"message":"Patch Set 2: Code-Review+1\n\npatch2 has been integrated to DilOS trim2_v2 branch and works with zfs tests on vmware vm. will try to test on real hw"},{"timestamp":1541380079,"reviewer":{"name":"Jorgen Lundman","email":"lundman@lundman.net","username":"lundman"},"message":"Patch Set 2:\n\nTriggered a panic:\nhttps://github.com/openzfsonosx/zfs/pull/661#issuecomment-435726756"},{"timestamp":1541448092,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\nIt looks like the panic was due to a mismerge? Is there anything else here I should look at?"},{"timestamp":1556192738,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Abandoned\n\nsuperseded by ZoL implementation"}],"currentPatchSet":{"number":"2","revision":"3c6773b1625d422bcb6d0d1369b3e985279c7921","parents":["d42a31d44200e9c79284cfbf3a4889c8518cd77e"],"ref":"refs/changes/29/4929/2","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1540228686,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1540642679,"by":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"}}],"comments":[{"file":"usr/src/uts/common/fs/zfs/vdev.c","line":4278,"reviewer":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"},"message":"../../../uts/common/fs/zfs/vdev.c:4278:8: error: \u0027nsec_per_tick\u0027 undeclared (first use in this fun\nction)\n        nsec_per_tick, CALLOUT_FLAG_ABSOLUTE);\n        ^~~~~~~~~~~~~\n../../../uts/common/fs/zfs/vdev.c:4278:8: note: each undeclared identifier is reported only once f\nor each function it appears in\n*** Error code 1\ndmake: Fatal error: Command failed for target `pics/vdev.o\u0027\nCurrent working directory /rws1/users/igor/dilos-illumos/usr/src/lib/libzpool/amd64"},{"file":"usr/src/uts/common/fs/zfs/vdev.c","line":4278,"reviewer":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"},"message":"ignore it - nsec_per_tick variable defined at libfakekernel for userland builds, but i have removed dependency to libfakekernel on my tree and should provide this variable if needed"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/zpool/zpool_main.c","type":"MODIFIED","insertions":189,"deletions":-2},{"file":"usr/src/common/zfs/zpool_prop.c","type":"MODIFIED","insertions":8,"deletions":-1},{"file":"usr/src/lib/libzfs/common/libzfs.h","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"usr/src/lib/libzfs/common/libzfs_pool.c","type":"MODIFIED","insertions":24,"deletions":-1},{"file":"usr/src/lib/libzfs/common/libzfs_util.c","type":"MODIFIED","insertions":7,"deletions":-4},{"file":"usr/src/lib/libzfs/common/mapfile-vers","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"usr/src/lib/libzpool/Makefile.com","type":"MODIFIED","insertions":6,"deletions":-1},{"file":"usr/src/lib/libzpool/common/kernel.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/lib/libzpool/common/sys/zfs_context.h","type":"MODIFIED","insertions":6,"deletions":-1},{"file":"usr/src/man/man1m/zpool.1m","type":"MODIFIED","insertions":116,"deletions":-2},{"file":"usr/src/pkg/manifests/system-test-zfstest.mf","type":"MODIFIED","insertions":8,"deletions":-1},{"file":"usr/src/test/zfs-tests/runfiles/delphix.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/runfiles/omnios.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/runfiles/openindiana.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/cli_root/zpool_get/zpool_get.cfg","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"usr/src/test/zfs-tests/tests/functional/trim/Makefile","type":"ADDED","insertions":21,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/autotrim_001_pos.ksh","type":"ADDED","insertions":125,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/cleanup.ksh","type":"ADDED","insertions":36,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/manualtrim_001_pos.ksh","type":"ADDED","insertions":165,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/setup.ksh","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.cfg","type":"ADDED","insertions":89,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.kshlib","type":"ADDED","insertions":110,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/dsl_scan.c","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","type":"MODIFIED","insertions":548,"deletions":-15},{"file":"usr/src/uts/common/fs/zfs/range_tree.c","type":"MODIFIED","insertions":10,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/spa.c","type":"MODIFIED","insertions":344,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/spa_config.c","type":"MODIFIED","insertions":13,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","type":"MODIFIED","insertions":212,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/dmu.h","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/metaslab.h","type":"MODIFIED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/metaslab_impl.h","type":"MODIFIED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/range_tree.h","type":"MODIFIED","insertions":3,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/spa.h","type":"MODIFIED","insertions":46,"deletions":-11},{"file":"usr/src/uts/common/fs/zfs/sys/spa_impl.h","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/vdev.h","type":"MODIFIED","insertions":13,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/vdev_impl.h","type":"MODIFIED","insertions":20,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/zio.h","type":"MODIFIED","insertions":20,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/zio_impl.h","type":"MODIFIED","insertions":6,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/zio_priority.h","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/vdev.c","type":"MODIFIED","insertions":261,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","type":"MODIFIED","insertions":45,"deletions":-13},{"file":"usr/src/uts/common/fs/zfs/vdev_file.c","type":"MODIFIED","insertions":58,"deletions":-24},{"file":"usr/src/uts/common/fs/zfs/vdev_indirect.c","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"usr/src/uts/common/fs/zfs/vdev_label.c","type":"MODIFIED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/vdev_mirror.c","type":"MODIFIED","insertions":43,"deletions":-36},{"file":"usr/src/uts/common/fs/zfs/vdev_missing.c","type":"MODIFIED","insertions":27,"deletions":-24},{"file":"usr/src/uts/common/fs/zfs/vdev_queue.c","type":"MODIFIED","insertions":35,"deletions":-9},{"file":"usr/src/uts/common/fs/zfs/vdev_raidz.c","type":"MODIFIED","insertions":172,"deletions":-32},{"file":"usr/src/uts/common/fs/zfs/vdev_root.c","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"usr/src/uts/common/fs/zfs/zfs_ioctl.c","type":"MODIFIED","insertions":33,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/zio.c","type":"MODIFIED","insertions":210,"deletions":-7},{"file":"usr/src/uts/common/sys/fs/zfs.h","type":"MODIFIED","insertions":16,"deletions":-1},{"file":"usr/src/uts/common/sys/sysevent/eventdefs.h","type":"MODIFIED","insertions":3,"deletions":-1}],"sizeInsertions":3216,"sizeDeletions":-222},"patchSets":[{"number":"1","revision":"39820bb5bff3372d066f0e3ded1a709d0dcee726","parents":["4c14c4cff5adaaa79d7099e153c3ace3a0d65148"],"ref":"refs/changes/29/4929/1","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1538749289,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/cmd/zpool/zpool_main.c","line":192,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"How does a manual trim interact with an initialize? Should they be both allowed, or act like with resilver?"},{"file":"usr/src/cmd/zpool/zpool_main.c","line":273,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, spaces around the |, like in scrub?"},{"file":"usr/src/cmd/zpool/zpool_main.c","line":4166,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, why is this here rather than down by zpool_do_trim?"},{"file":"usr/src/cmd/zpool/zpool_main.c","line":4877,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"I\u0027m not a huge fan of phrases like this in code comments."},{"file":"usr/src/common/zfs/zpool_prop.c","line":133,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"why are these not in the boolean property section at :127?"},{"file":"usr/src/lib/libzfs/common/libzfs.h","line":270,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, remove \"start\", \"rate\""},{"file":"usr/src/lib/libzfs/common/libzfs_util.c","line":1122,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, \"if (hdl !\u003d NULL)\""},{"file":"usr/src/lib/libzfs/common/libzfs_util.c","line":1136,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto"},{"file":"usr/src/lib/libzpool/common/kernel.c","line":418,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"I\u0027m unclear on when something belongs in libfakekernel instead of here, but seems like a natural place is the former\u0027s common/copy.c ?"},{"file":"usr/src/man/man1m/zpool.1m","line":1761,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, s/a/an/"},{"file":"usr/src/test/zfs-tests/tests/functional/trim/manualtrim_001_pos.ksh","line":32,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Isn\u0027t it bad that we\u0027re setting tunables but not restoring them? Seems like this could a great way to catch someone out."},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.cfg","line":61,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"would be nice if an unknown OS here caused an error"},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.kshlib","line":60,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"would be nice to error on unknown OS"},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.kshlib","line":80,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"as above"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":246,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"s/ back //"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":262,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Nit, most fwd declarations in this file don\u0027t include the formal parameter names"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":1303,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"can we please abstract out these changes that look for the extent *and* the trim conflict into one helper funcs? e.g. :1424 :1486 etc."},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":1724,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"compare against NULL?"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":2772,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"this comment needs moving down past the trim part"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4342,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"worth a comment as to why we want to wait for condensing to be over?"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4497,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Nit, could invert this test and save a whole bunch of indentation"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4507,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Nit, would be nice if these probe names at least mentioned trimming..."},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4574,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"no need for this, we already check this in mutex_enter"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4593,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"again, it\u0027s a shame we don\u0027t have any comments as to why we\u0027re doing this"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4657,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"NULL not 0"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4661,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"again could invert test to reduce indentation"},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4728,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"It looks like in this file the pattern for this function name would be \u0027metaslab_trimset_free\u0027. So the verb appears at the end with the sub-type (trimset) in the middle. It looks like a few functions added in this patch could have the same treatment."},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","line":4748,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"cstyle, function on newline"},{"file":"usr/src/uts/common/fs/zfs/range_tree.c","line":328,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"I\u0027m not sure if the function pattern would make this \u0027range_tree_gap_find\u0027 or if it\u0027s fine as it is. Not a big deal either way."},{"file":"usr/src/uts/common/fs/zfs/spa.c","line":1356,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"compare against NULL, or do a NULL check inside _destroy?"},{"file":"usr/src/uts/common/fs/zfs/spa.c","line":3180,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"seems like a weird function to be creating the taskq from..."},{"file":"usr/src/uts/common/fs/zfs/spa.c","line":3702,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"if this really needs to come here rather than down in spa_ld_get_props() call, it should have a comment explaining why"},{"file":"usr/src/uts/common/fs/zfs/spa.c","line":7444,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"why isn\u0027t this using SPA_AUTO_TRIM_ON/OFF?"},{"file":"usr/src/uts/common/fs/zfs/spa.c","line":8304,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Ugh, a try enter, but no indication of what circumstances we end up with the lock already held. Any ideas? A comment at least would be good."},{"file":"usr/src/uts/common/fs/zfs/spa.c","line":8417,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"\"really slow to respond to\""},{"file":"usr/src/uts/common/fs/zfs/spa_config.c","line":446,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, this comment is just repeating the code"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":1906,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"I don\u0027t know what value these two funcs have? I think all callers already include spa_impl.h"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2337,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"This can just be done directly with something like:\n\nint trunclen \u003d sizeof (name) - sizeof (\"_trimstats\");\n\nsnprintf(name, sizeof (name), \"%.*s_trimstats\", trunclen, spa-\u003espa_name);\n\nIt\u0027s unfortunate we have to truncate - and possibly clash - like this, but I don\u0027t have an immediately better idea."},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2337,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"Could we remove the \u0027stats\u0027 portion of the name? Is it obvious that we\u0027re looking at \u0027stats\u0027 by nature of viewing kstat data? That would save us five chars.\n\nI looked where the other per-pool kstats are created and it looks like they don\u0027t do any trucating at all... ZFS_MAX_DATASET_NAME_LEN is 256, so maybe there\u0027s a bug in the existing code.\n\nOr if it\u0027s not too much trouble maybe we could merge the trim stats in with the per-pool stats that already exist.\n\nAlso, FWIW there\u0027s another approach to per-pool kstat naming in an in-flight openzfs CR: https://github.com/openzfs/openzfs/pull/664/files#diff-6d1e73746c8c45ebbc788dd57707c6c2R907"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2337,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"This is mostly unrelated, but it looks like the kstat code will truncate to KSTAT_STRLEN when it creates kstat names:\n\n[root@pepsi ~]# zpool create aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa c2t1d0\n\n[root@pepsi ~]# kstat -m zfs -n aaaa* -l\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:class\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:crtime\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:nread\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:nwritten\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:rcnt\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:reads\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:rlastupdate\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:rlentime\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:rtime\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:snaptime\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:wcnt\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:wlastupdate\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:wlentime\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:writes\nzfs:0:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:wtime"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2344,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, compare against NULL"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2347,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"why is this necessary?"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2362,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"Can we drop the leading \u0027!\u0027 ?"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2373,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"compare against NULL"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2388,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"compare against NULL"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2405,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"compare against NULL"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2417,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"In fact, this is copied into a TASKQ_NAMELEN buffer, which has just the same problem as the kstat name. It should probably share the truncation logic?"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2421,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"I presume they end up not being CPU-greedy enough to need sysdc?"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2435,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"as per above"},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","line":2437,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"Is it worth doing this and adding this function? I don\u0027t know how heavy these taskq structures are to generate."},{"file":"usr/src/uts/common/fs/zfs/sys/spa.h","line":618,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"I\u0027m curious as to why this is useful?"},{"file":"usr/src/uts/common/fs/zfs/sys/spa.h","line":631,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"\u0027while processing frees\u0027 sounds a little more professional."},{"file":"usr/src/uts/common/fs/zfs/sys/spa_impl.h","line":372,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"nit, \"threads\" not \"thrd\u0027s\""},{"file":"usr/src/uts/common/fs/zfs/vdev.c","line":4206,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"should this be \"vd\" not \"FTAG\"?"},{"file":"usr/src/uts/common/fs/zfs/vdev.c","line":4297,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"same question"},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","line":775,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"So presumably we\u0027re happy that we\u0027ve already checked vdev_writeable() for this vdev so don\u0027t need another check when starting the IO?"},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","line":796,"reviewer":{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},"message":"We spoke in chat about this - maybe the SATA driver needs modification to support this ioctl (DKIOCFREE) as well? It looks like there\u0027s at least some support for this in the driver."},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","line":801,"reviewer":{"name":"Jorgen Lundman","email":"lundman@lundman.net","username":"lundman"},"message":"When testing this code, and the device fails to trim, and we set vdev_notrim\u003dTRUE, I noticed the kstat keep increasing regardless.\nAre the kstat to show \"what we would have trimmed if we could\" or \"what was actually trimmed on the device(s)\" ?"},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","line":887,"reviewer":{"name":"Jorgen Lundman","email":"lundman@lundman.net","username":"lundman"},"message":"I like the change to go to named members - it was a bit unwieldy"},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","line":892,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"optional, but I don\u0027t think the trailing comments are useful now we have the C99 inits"},{"file":"usr/src/uts/common/fs/zfs/vdev_file.c","line":221,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"no need for this assert (and it\u0027s not done consistently elsewhere)"},{"file":"usr/src/uts/common/fs/zfs/vdev_file.c","line":237,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"this doesn\u0027t update fsinfo in fop_space, is that really OK?"},{"file":"usr/src/uts/common/fs/zfs/vdev_file.c","line":302,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto re comments"},{"file":"usr/src/uts/common/fs/zfs/vdev_file.c","line":322,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto re comments"},{"file":"usr/src/uts/common/fs/zfs/vdev_indirect.c","line":1634,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto re comments"},{"file":"usr/src/uts/common/fs/zfs/vdev_label.c","line":500,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"comment reproduces code"},{"file":"usr/src/uts/common/fs/zfs/vdev_label.c","line":502,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"I was slightly unclear, so I wonder if it\u0027s worth having a comment that we have *this* stat as per-vdev, and a total is generated under spa_config_generate() ?"},{"file":"usr/src/uts/common/fs/zfs/vdev_mirror.c","line":573,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"could remove comments"},{"file":"usr/src/uts/common/fs/zfs/vdev_mirror.c","line":589,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto"},{"file":"usr/src/uts/common/fs/zfs/vdev_mirror.c","line":605,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto"},{"file":"usr/src/uts/common/fs/zfs/vdev_missing.c","line":95,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"could remove pointless comments?"},{"file":"usr/src/uts/common/fs/zfs/vdev_missing.c","line":111,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto"},{"file":"usr/src/uts/common/fs/zfs/vdev_queue.c","line":50,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"this seems out of date in general, but it could at least be expanded to mention all the new ones."},{"file":"usr/src/uts/common/fs/zfs/vdev_raidz.c","line":482,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Not a big fan of this name now it doesn\u0027t always alloc?"},{"file":"usr/src/uts/common/fs/zfs/vdev_raidz.c","line":2729,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"what check func??"},{"file":"usr/src/uts/common/fs/zfs/vdev_raidz.c","line":2785,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto re comments"},{"file":"usr/src/uts/common/fs/zfs/vdev_root.c","line":155,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"ditto re comments"},{"file":"usr/src/uts/common/fs/zfs/zio.c","line":120,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Worth some commentary about where this number comes from and why?"},{"file":"usr/src/uts/common/fs/zfs/zio.c","line":657,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Shouldn\u0027t this only broadcast if vdev_trim_zios \u003d\u003d 0"},{"file":"usr/src/uts/common/fs/zfs/zio.c","line":1048,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"This could usefully be at the top comment of vdev_queue.c as I mention there. Also it\u0027s not clear where exactly matters for the fake -\u003eio_offset? Is it just for the AVL tree?"},{"file":"usr/src/uts/common/fs/zfs/zio.c","line":3238,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"remove trailing /"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/zpool/zpool_main.c","type":"MODIFIED","insertions":187,"deletions":-1},{"file":"usr/src/common/zfs/zpool_prop.c","type":"MODIFIED","insertions":7,"deletions":-1},{"file":"usr/src/lib/libzfs/common/libzfs.h","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"usr/src/lib/libzfs/common/libzfs_pool.c","type":"MODIFIED","insertions":24,"deletions":-1},{"file":"usr/src/lib/libzfs/common/libzfs_util.c","type":"MODIFIED","insertions":7,"deletions":-4},{"file":"usr/src/lib/libzfs/common/mapfile-vers","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"usr/src/lib/libzpool/Makefile.com","type":"MODIFIED","insertions":6,"deletions":-1},{"file":"usr/src/lib/libzpool/common/kernel.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/lib/libzpool/common/sys/zfs_context.h","type":"MODIFIED","insertions":6,"deletions":-1},{"file":"usr/src/man/man1m/zpool.1m","type":"MODIFIED","insertions":116,"deletions":-2},{"file":"usr/src/pkg/manifests/system-test-zfstest.mf","type":"MODIFIED","insertions":8,"deletions":-1},{"file":"usr/src/test/zfs-tests/runfiles/delphix.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/runfiles/omnios.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/runfiles/openindiana.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/cli_root/zpool_get/zpool_get.cfg","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"usr/src/test/zfs-tests/tests/functional/trim/Makefile","type":"ADDED","insertions":21,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/autotrim_001_pos.ksh","type":"ADDED","insertions":125,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/cleanup.ksh","type":"ADDED","insertions":36,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/manualtrim_001_pos.ksh","type":"ADDED","insertions":165,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/setup.ksh","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.cfg","type":"ADDED","insertions":89,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.kshlib","type":"ADDED","insertions":110,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/dsl_scan.c","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","type":"MODIFIED","insertions":573,"deletions":-22},{"file":"usr/src/uts/common/fs/zfs/range_tree.c","type":"MODIFIED","insertions":26,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/spa.c","type":"MODIFIED","insertions":352,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/spa_config.c","type":"MODIFIED","insertions":14,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","type":"MODIFIED","insertions":212,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/dmu.h","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/metaslab.h","type":"MODIFIED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/metaslab_impl.h","type":"MODIFIED","insertions":12,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/range_tree.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/spa.h","type":"MODIFIED","insertions":47,"deletions":-10},{"file":"usr/src/uts/common/fs/zfs/sys/spa_impl.h","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/vdev.h","type":"MODIFIED","insertions":12,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/vdev_impl.h","type":"MODIFIED","insertions":20,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/zio.h","type":"MODIFIED","insertions":20,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/zio_impl.h","type":"MODIFIED","insertions":6,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/zio_priority.h","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/vdev.c","type":"MODIFIED","insertions":211,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","type":"MODIFIED","insertions":48,"deletions":-13},{"file":"usr/src/uts/common/fs/zfs/vdev_file.c","type":"MODIFIED","insertions":59,"deletions":-24},{"file":"usr/src/uts/common/fs/zfs/vdev_indirect.c","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"usr/src/uts/common/fs/zfs/vdev_label.c","type":"MODIFIED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/vdev_mirror.c","type":"MODIFIED","insertions":43,"deletions":-36},{"file":"usr/src/uts/common/fs/zfs/vdev_missing.c","type":"MODIFIED","insertions":27,"deletions":-24},{"file":"usr/src/uts/common/fs/zfs/vdev_queue.c","type":"MODIFIED","insertions":35,"deletions":-9},{"file":"usr/src/uts/common/fs/zfs/vdev_raidz.c","type":"MODIFIED","insertions":173,"deletions":-32},{"file":"usr/src/uts/common/fs/zfs/vdev_root.c","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"usr/src/uts/common/fs/zfs/zfs_ioctl.c","type":"MODIFIED","insertions":33,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/zio.c","type":"MODIFIED","insertions":203,"deletions":-4},{"file":"usr/src/uts/common/sys/fs/zfs.h","type":"MODIFIED","insertions":16,"deletions":-1},{"file":"usr/src/uts/common/sys/sysevent/eventdefs.h","type":"MODIFIED","insertions":3,"deletions":-1}],"sizeInsertions":3212,"sizeDeletions":-223},{"number":"2","revision":"3c6773b1625d422bcb6d0d1369b3e985279c7921","parents":["d42a31d44200e9c79284cfbf3a4889c8518cd77e"],"ref":"refs/changes/29/4929/2","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1540228686,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1540642679,"by":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"}}],"comments":[{"file":"usr/src/uts/common/fs/zfs/vdev.c","line":4278,"reviewer":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"},"message":"../../../uts/common/fs/zfs/vdev.c:4278:8: error: \u0027nsec_per_tick\u0027 undeclared (first use in this fun\nction)\n        nsec_per_tick, CALLOUT_FLAG_ABSOLUTE);\n        ^~~~~~~~~~~~~\n../../../uts/common/fs/zfs/vdev.c:4278:8: note: each undeclared identifier is reported only once f\nor each function it appears in\n*** Error code 1\ndmake: Fatal error: Command failed for target `pics/vdev.o\u0027\nCurrent working directory /rws1/users/igor/dilos-illumos/usr/src/lib/libzpool/amd64"},{"file":"usr/src/uts/common/fs/zfs/vdev.c","line":4278,"reviewer":{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"},"message":"ignore it - nsec_per_tick variable defined at libfakekernel for userland builds, but i have removed dependency to libfakekernel on my tree and should provide this variable if needed"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/zpool/zpool_main.c","type":"MODIFIED","insertions":189,"deletions":-2},{"file":"usr/src/common/zfs/zpool_prop.c","type":"MODIFIED","insertions":8,"deletions":-1},{"file":"usr/src/lib/libzfs/common/libzfs.h","type":"MODIFIED","insertions":3,"deletions":-2},{"file":"usr/src/lib/libzfs/common/libzfs_pool.c","type":"MODIFIED","insertions":24,"deletions":-1},{"file":"usr/src/lib/libzfs/common/libzfs_util.c","type":"MODIFIED","insertions":7,"deletions":-4},{"file":"usr/src/lib/libzfs/common/mapfile-vers","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"usr/src/lib/libzpool/Makefile.com","type":"MODIFIED","insertions":6,"deletions":-1},{"file":"usr/src/lib/libzpool/common/kernel.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/lib/libzpool/common/sys/zfs_context.h","type":"MODIFIED","insertions":6,"deletions":-1},{"file":"usr/src/man/man1m/zpool.1m","type":"MODIFIED","insertions":116,"deletions":-2},{"file":"usr/src/pkg/manifests/system-test-zfstest.mf","type":"MODIFIED","insertions":8,"deletions":-1},{"file":"usr/src/test/zfs-tests/runfiles/delphix.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/runfiles/omnios.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/runfiles/openindiana.run","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/cli_root/zpool_get/zpool_get.cfg","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"usr/src/test/zfs-tests/tests/functional/trim/Makefile","type":"ADDED","insertions":21,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/autotrim_001_pos.ksh","type":"ADDED","insertions":125,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/cleanup.ksh","type":"ADDED","insertions":36,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/manualtrim_001_pos.ksh","type":"ADDED","insertions":165,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/setup.ksh","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.cfg","type":"ADDED","insertions":89,"deletions":0},{"file":"usr/src/test/zfs-tests/tests/functional/trim/trim.kshlib","type":"ADDED","insertions":110,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/dsl_scan.c","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/metaslab.c","type":"MODIFIED","insertions":548,"deletions":-15},{"file":"usr/src/uts/common/fs/zfs/range_tree.c","type":"MODIFIED","insertions":10,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/spa.c","type":"MODIFIED","insertions":344,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/spa_config.c","type":"MODIFIED","insertions":13,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/spa_misc.c","type":"MODIFIED","insertions":212,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/dmu.h","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/metaslab.h","type":"MODIFIED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/metaslab_impl.h","type":"MODIFIED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/range_tree.h","type":"MODIFIED","insertions":3,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/spa.h","type":"MODIFIED","insertions":46,"deletions":-11},{"file":"usr/src/uts/common/fs/zfs/sys/spa_impl.h","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/vdev.h","type":"MODIFIED","insertions":13,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/vdev_impl.h","type":"MODIFIED","insertions":20,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/zio.h","type":"MODIFIED","insertions":20,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/sys/zio_impl.h","type":"MODIFIED","insertions":6,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/sys/zio_priority.h","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/vdev.c","type":"MODIFIED","insertions":261,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/vdev_disk.c","type":"MODIFIED","insertions":45,"deletions":-13},{"file":"usr/src/uts/common/fs/zfs/vdev_file.c","type":"MODIFIED","insertions":58,"deletions":-24},{"file":"usr/src/uts/common/fs/zfs/vdev_indirect.c","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"usr/src/uts/common/fs/zfs/vdev_label.c","type":"MODIFIED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/fs/zfs/vdev_mirror.c","type":"MODIFIED","insertions":43,"deletions":-36},{"file":"usr/src/uts/common/fs/zfs/vdev_missing.c","type":"MODIFIED","insertions":27,"deletions":-24},{"file":"usr/src/uts/common/fs/zfs/vdev_queue.c","type":"MODIFIED","insertions":35,"deletions":-9},{"file":"usr/src/uts/common/fs/zfs/vdev_raidz.c","type":"MODIFIED","insertions":172,"deletions":-32},{"file":"usr/src/uts/common/fs/zfs/vdev_root.c","type":"MODIFIED","insertions":14,"deletions":-12},{"file":"usr/src/uts/common/fs/zfs/zfs_ioctl.c","type":"MODIFIED","insertions":33,"deletions":-1},{"file":"usr/src/uts/common/fs/zfs/zio.c","type":"MODIFIED","insertions":210,"deletions":-7},{"file":"usr/src/uts/common/sys/fs/zfs.h","type":"MODIFIED","insertions":16,"deletions":-1},{"file":"usr/src/uts/common/sys/sysevent/eventdefs.h","type":"MODIFIED","insertions":3,"deletions":-1}],"sizeInsertions":3216,"sizeDeletions":-222}],"allReviewers":[{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},{"name":"Matthew Ahrens","email":"mahrens@delphix.com","username":"ahrens"},{"name":"Jorgen Lundman","email":"lundman@lundman.net","username":"lundman"},{"name":"Igor K","email":"ikozhukhov@gmail.com","username":"ikozhukhov"}]}