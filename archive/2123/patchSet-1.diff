commit 51920f1cc5c2a6e26ab6752b2d0c81ef27985e95 (refs/changes/23/2123/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-06-16T19:27:54-07:00 (2 years, 4 months ago)
    
    joyent/node-zkstream#14 large packets lead to death

diff --git a/lib/zk-streams.js b/lib/zk-streams.js
index a199542..b65b3c8 100644
--- a/lib/zk-streams.js
+++ b/lib/zk-streams.js
@@ -20,14 +20,14 @@ const mod_errors = require('./errors');
 const mod_jsbn = require('jsbn');
 const mod_events = require('events');
 
-const MAX_PACKET = 8*1024*1024;
+const MAX_PACKET = 16*1024*1024;
 
 function ZKDecodeStream(opts) {
 	mod_assert.object(opts, 'options');
 	mod_assert.object(opts.fsm, 'options.fsm');
 	this.zd_fsm = opts.fsm;
 	this.zd_used = 0;
-	this.zd_buffer = new Buffer(1024);
+	this.zd_buffer = new Buffer(4096);
 	opts.readableObjectMode = true;
 	opts.writableObjectMode = false;
 	mod_stream.Transform.call(this, opts);
@@ -90,7 +90,7 @@ ZKDecodeStream.prototype._transform = function (chunk, enc, cb) {
 };
 
 ZKDecodeStream.prototype.expandBuffer = function () {
-	var newBuf = new Buffer(this.zd_buffer.size * 2);
+	var newBuf = new Buffer(this.zd_buffer.length * 2);
 	this.zd_buffer.copy(newBuf);
 	this.zd_buffer = newBuf;
 };
diff --git a/test/basic.test.js b/test/basic.test.js
index bb644b1..d67f8d5 100644
--- a/test/basic.test.js
+++ b/test/basic.test.js
@@ -291,6 +291,39 @@ mod_tape.test('create a new node', function (t) {
 	});
 });
 
+mod_tape.test('create a large node', function (t) {
+	var zkc = new mod_zkc.Client({
+		log: log,
+		host: 'localhost',
+		port: 2181
+	});
+	zkc.connect();
+
+	zkc.on('stateChanged', function (st) {
+		if (st === 'closed')
+			t.end();
+		if (st !== 'connected')
+			return;
+
+		var d = new Buffer(9000);
+		d.fill(5);
+		zkc.create('/bignode', d, {}, function (err, path) {
+			t.error(err);
+			t.strictEqual(path, '/bignode');
+			zkc.get('/bignode', function (err2, output) {
+				t.error(err2);
+				t.strictEqual(output.length, 9000);
+				t.strictEqual(output[5], 5);
+
+				zkc.delete('/bignode', -1, function (err3) {
+					t.error(err3);
+					zkc.close();
+				});
+			});
+		});
+	});
+});
+
 mod_tape.test('data watcher', function (t) {
 	var zkc = new mod_zkc.Client({
 		log: log,
