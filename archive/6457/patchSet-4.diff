From 46ca60efb1ff540f109407bfc7f95bd7be8cc576 Mon Sep 17 00:00:00 2001
From: Isaac Davis <isaac.davis@joyent.com>
Date: Mon, 17 Jun 2019 22:14:16 +0000
Subject: [PATCH] TRITON-1696 sdcadm should verify that triton_cns_enabled is
 set for the admin user before deploying prometheus

---
 CHANGES.md                   |  5 ++++
 lib/post-setup/prometheus.js | 53 +++++++++++++++++++++++++++++++-----
 package.json                 |  2 +-
 3 files changed, 52 insertions(+), 8 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index 32011b8..d30a227 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -10,6 +10,11 @@
 
 # sdcadm Changelog
 
+## 1.30.2
+
+- TRITON-1696 sdcadm should verify that triton_cns_enabled is set for the admin
+  user before deploying prometheus
+
 ## 1.30.1
 
 - TRITON-1744 Fix a crash in `sdcadm experimental remove-ca` if a given CNAPI
diff --git a/lib/post-setup/prometheus.js b/lib/post-setup/prometheus.js
index a7ac93e..e9402bd 100644
--- a/lib/post-setup/prometheus.js
+++ b/lib/post-setup/prometheus.js
@@ -12,6 +12,9 @@
  * The 'sdcadm post-setup prometheus' CLI subcommand.
  */
 
+var vasync = require('vasync');
+var verror = require('verror');
+
 var errors = require('../errors');
 var AddServiceProc = require('../procedures/add-service').AddServiceProcedure;
 var AddAllowTransferProc =
@@ -80,13 +83,49 @@ function do_prometheus(subcmd, opts, args, cb) {
     const addServiceProc = new AddServiceProc(addServiceOpts);
     const addAllowTransferProc = new AddAllowTransferProc(addAllowTransferOpts);
 
-    runProcs({
-        log: self.log,
-        procs: [addServiceProc, addAllowTransferProc],
-        sdcadm: self.sdcadm,
-        ui: self.ui,
-        dryRun: opts.dry_run,
-        skipConfirm: opts.yes
+    vasync.pipeline({
+        arg: {},
+        funcs: [
+            function checkCnsEnabled(_, next) {
+                self.sdcadm.ufds.getUserEx({
+                    searchType: 'uuid',
+                    value: self.sdcadm.config.ufds_admin_uuid
+                }, function gotUfds(err, user) {
+                    var ufdsErr = null;
+                    if (err) {
+                        ufdsErr = err;
+                    } else if (user.triton_cns_enabled !== 'true') {
+                        ufdsErr = new verror.VError('The prometheus service ' +
+                            'requires the admin user to have ' +
+                            '\'triton_cns_enabled\' set to \'true\'');
+                    }
+                    /*
+                     * We have to report any UFDS request error from the block
+                     * of code above, as well as any error encountered when
+                     * attempting to close the UFDS connection. Thus, we use
+                     * verror.errorFromList to return a MultiError object, one
+                     * error, or no errors as appropriate. Eurgh!
+                     */
+                    self.sdcadm.ufds.close(function closedUfds(closeErr) {
+                        var errs = [ufdsErr, closeErr];
+                        errs = errs.filter(function checkErrDefined(e) {
+                            return e !== null && e !== undefined;
+                        });
+                        next(verror.errorFromList(errs));
+                    });
+                });
+            },
+            function addPrometheus(_, next) {
+                runProcs({
+                    log: self.log,
+                    procs: [addServiceProc, addAllowTransferProc],
+                    sdcadm: self.sdcadm,
+                    ui: self.ui,
+                    dryRun: opts.dry_run,
+                    skipConfirm: opts.yes
+                }, next);
+            }
+        ]
     }, cb);
 }
 
diff --git a/package.json b/package.json
index 4248235..5f36d1b 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdcadm",
   "description": "Administer a Triton Data Center",
-  "version": "1.30.1",
+  "version": "1.30.2",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

