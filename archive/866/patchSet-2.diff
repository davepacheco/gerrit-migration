commit 4e1582afee37c42ad158b4d7919a29775f5857d2 (refs/changes/66/866/2)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2016-11-10T17:34:55+01:00 (2 years, 11 months ago)
    
    CNAPI-677 Add support for disklayout params to server setup
    Reviewed by: Robert Mustacchi <rm@joyent.com>
    Reviewed by: Jerry Jelinek <jerry.jelinek@joyent.com>

diff --git a/docs/index.md b/docs/index.md
index 901774c..2ee3a47 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -1153,6 +1153,9 @@ Initiate the server setup process for a newly started server.
 | nics             | Object | Nic parameters to update                 |
 | postsetup_script | String | Script to run after setup has completed  |
 | hostname         | String | Hostname to set for the specified server |
+| disk_layout      | String | Disk layout type (man disklayout)        |
+| disk_spares      | Number | Disk spares                              |
+| disk_cache       | String | Disk cache ('true'|'false')              |
 
 
 ### Responses
diff --git a/lib/endpoints/servers.js b/lib/endpoints/servers.js
index 34d2b95..6936c05 100644
--- a/lib/endpoints/servers.js
+++ b/lib/endpoints/servers.js
@@ -1,5 +1,14 @@
 /*
- * Copyright 2016, Joyent, Inc. All rights reserved.
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2016, Joyent, Inc.
+ */
+
+/*
  *
  * HTTP endpoints for interacting with compute nodes.
  *
@@ -604,6 +613,10 @@ Server.factoryReset = function (req, res, next) {
  * @param {Object} nics Nic parameters to update
  * @param {String} postsetup_script Script to run after setup has completed
  * @param {String} hostname Hostname to set for the specified server
+ * @param {String} disk_spares See `man disklayout` spares
+ * @param {String} disk_cache See `man disklayout` cache
+ * @param {String} disk_layout See `man disklayout` type
+ *      (single, mirror, raidz1, ...)
  * @response 200 Object Setup initated, returns object containing workflow id
  * @response 500 None Error while processing request
  */
@@ -614,7 +627,10 @@ Server.setup = function (req, res, next) {
         'hostname': ['optional', 'isStringType'],
         'nics': ['optional', 'isArrayType'],
         'postsetup_script': ['optional', 'isStringType'],
-        'server_uuid': ['isStringType']
+        'server_uuid': ['isStringType'],
+        'disk_spares': ['optional', 'isNumberGreaterThanEqualZeroType'],
+        'disk_cache': ['optional', 'isBooleanString'],
+        'disk_layout': ['optional', 'isStringType']
     };
 
     if (validation.ensureParamsValid(req, res, rules, { strict: true })) {
@@ -639,6 +655,25 @@ Server.setup = function (req, res, next) {
     if (req.params.hasOwnProperty('creator_uuid')) {
         params.creator_uuid = req.params.creator_uuid;
     }
+    if (req.params.hasOwnProperty('disk_spares')) {
+        params.disk_spares = req.params.disk_spares;
+    }
+    if (req.params.hasOwnProperty('disk_cache')) {
+        params.disk_cache = req.params.disk_cache;
+    }
+    if (req.params.hasOwnProperty('disk_layout')) {
+        var layout = req.params.disk_layout;
+        var VALID_LAYOUTS = ['single', 'mirror', 'raidz1', 'raidz2', 'raidz3'];
+        if (VALID_LAYOUTS.indexOf(layout) === -1) {
+            var err = new restify.InvalidArgumentError(
+                sprintf('disk_layout must be one of: \'%s\'',
+                    VALID_LAYOUTS.join('\', \'')));
+            res.send(err);
+            next();
+            return;
+        }
+        params.disk_layout = layout;
+    }
     req.stash.server.getRaw(function (error, rawserver) {
         if (rawserver.setup) {
             res.send(204);
diff --git a/lib/models/server.js b/lib/models/server.js
index 2264fbf..61b09c0 100644
--- a/lib/models/server.js
+++ b/lib/models/server.js
@@ -1584,6 +1584,21 @@ ModelServer.prototype.setup = function (params, callback) {
             wfParams.creator_uuid = params.creator_uuid;
         }
 
+        if (params.hasOwnProperty('disk_spares')) {
+            wfParams.disk_spares = params.disk_spares;
+        }
+
+        // Caching is the default, we only need to pass in disk cache
+        // when it's false
+        if (params.hasOwnProperty('disk_cache') &&
+                params.disk_cache === 'false') {
+            wfParams.disk_cache = params.disk_cache;
+        }
+
+        if (params.hasOwnProperty('disk_layout') && params.disk_layout) {
+            wfParams.disk_layout = params.disk_layout;
+        }
+
         async.waterfall([
             function (cb) {
                 if (params.hasOwnProperty('hostname') && params.hostname) {
diff --git a/lib/workflows/server-setup.js b/lib/workflows/server-setup.js
index 92dce66..84360c5 100644
--- a/lib/workflows/server-setup.js
+++ b/lib/workflows/server-setup.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 /*
@@ -82,6 +82,16 @@ function fetchSetupFiles(job, callback) {
     var cnapi = restify.createJsonClient({ url: cnapiUrl});
     var overprovision_ratio = job.params.overprovision_ratio || '1.0';
     var nodeConfigDir = 'config-' + job.params.server_uuid;
+    var diskCfg = '';
+    if (job.params.disk_layout) {
+        diskCfg += 'echo "layout=\'' + job.params.disk_layout + '\'"; ';
+    }
+    if (job.params.hasOwnProperty('disk_cache')) {
+        diskCfg += 'echo "cache=\'' + job.params.disk_cache + '\'"; ';
+    }
+    if (job.params.hasOwnProperty('disk_spares')) {
+        diskCfg += 'echo "spares=' + job.params.disk_spares + '"; ';
+    }
 
     var script = [
         '#!/bin/bash',
@@ -89,9 +99,10 @@ function fetchSetupFiles(job, callback) {
         'cd /var/tmp',
         'mkdir /var/tmp/node.config',
         'mkdir /var/tmp/' + nodeConfigDir,
-        '(echo "overprovision_ratio=\'' + overprovision_ratio + '\'"; '
-            + 'curl $1/extra/joysetup/node.config) | tee ' + nodeConfigDir +
-              '/node.config node.config/node.config >&-',
+        '(echo "overprovision_ratio=\'' + overprovision_ratio + '\'"; ' +
+             diskCfg +
+             'curl $1/extra/joysetup/node.config) | tee ' + nodeConfigDir +
+             '/node.config node.config/node.config >&-',
         'curl -O $1/extra/joysetup/joysetup.sh',
         'curl -O $1/extra/joysetup/agentsetup.sh',
         'chmod +x *.sh'
