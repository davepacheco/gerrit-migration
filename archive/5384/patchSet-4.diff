From a11ca7a8984f3e36b77b291306993dc06e8e4ebf Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Thu, 17 Jan 2019 13:42:20 -0800
Subject: [PATCH] OS-7522 update OpenSSH to 7.9p1

---
 openssh/Makefile                              |     4 +-
 openssh/Patches/0001-Skip-config-check.patch  |    10 +-
 openssh/Patches/0002-PAM-Support.patch        |    10 +-
 openssh/Patches/0003-lastlogin.patch          |    10 +-
 ...ages-into-Illumos-numbering-adjust-t.patch | 10656 ++--------------
 .../0005-Deprecated-SunSSH-options.patch      |     8 +-
 .../0006-GSS-store-creds-for-Solaris.patch    |    28 +-
 .../0007-DTrace-support-for-SFTP.patch        |    46 +-
 .../0008-Add-DisableBanner-option.patch       |    48 +-
 .../Patches/0009-PAM-conversation-fix.patch   |    16 +-
 .../0010-PAM-enhancements-for-Solaris.patch   |   340 +-
 ...-SunSSH-compat-default-config-values.patch |    28 +-
 ...ate-SunSSH-compatible-server-options.patch |    14 +-
 .../0013-Solaris-Auditing-support.patch       |    48 +-
 .../0014-GSS-API-key-exchange-support.patch   |   878 +-
 ...login-to-a-role-if-PAM-is-ok-with-it.patch |    69 +-
 .../Patches/0016-PAM-setcred-failures.patch   |    12 +-
 ...0017-Don-t-call-do_pam_setcred-twice.patch |     8 +-
 .../Patches/0018-Per-session-xauthfile.patch  |    53 +-
 .../Patches/0019-PubKeyPlugin-support.patch   |    89 +-
 ...-Compatibility-fix-for-ListenAddress.patch |    32 +-
 ...ivsep-chroot-dir-if-it-doesn-t-exist.patch |    10 +-
 ...manifest-and-method-and-install-them.patch |    16 +-
 ...d_config-more-like-the-old-illumos-o.patch |    16 +-
 ...-configure-option-to-place-SSH-host-.patch |    31 +-
 .../0025-Re-enable-DSA-keys-for-pk-auth.patch |    28 +-
 ...onfig-to-check-for-GSSAPI-on-Illumos.patch |    10 +-
 ...d-options-based-on-etc-default-login.patch |    40 +-
 ...r-SunSSH_1.5-should-include-old-DH-K.patch |   115 +-
 ...LC_-environment-variables-from-clien.patch |   171 -
 ...LANG-and-LC_-environment-variables-b.patch |   263 +
 ...ssh-keygen-and-ssh-add-to-old-FP-for.patch |    80 +-
 ...-Restore-tcpwrappers-libwrap-support.patch |    38 +-
 ...lback-copy-of-DH-moduli-in-a-system-.patch |    26 +-
 openssh/Patches/1000-smartos-dtrace32.patch   |    12 +-
 openssh/Patches/1001-sunw_ssl.patch           |   262 +-
 openssh/openssh-portable-7.4p1.tar.gz         |   Bin 1238523 -> 0 bytes
 openssh/openssh-portable-7.9p1.tar.gz         |   Bin 0 -> 1344751 bytes
 38 files changed, 2506 insertions(+), 11019 deletions(-)
 delete mode 100644 openssh/Patches/0029-Accept-LANG-and-LC_-environment-variables-from-clien.patch
 create mode 100644 openssh/Patches/0029-Accept-and-send-LANG-and-LC_-environment-variables-b.patch
 delete mode 100644 openssh/openssh-portable-7.4p1.tar.gz
 create mode 100644 openssh/openssh-portable-7.9p1.tar.gz

diff --git a/openssh/Makefile b/openssh/Makefile
index 0f8afc6..a7b0409 100644
--- a/openssh/Makefile
+++ b/openssh/Makefile
@@ -22,7 +22,7 @@
 # Copyright 2015 Joyent, Inc.
 #
 
-VER =	openssh-portable-7.4p1
+VER =	openssh-portable-7.9p1
 
 include ../Makefile.defs
 
@@ -41,7 +41,7 @@ AUTOCONF_OPTS += \
 	--with-solaris-privs \
 	--with-tcp-wrappers \
 	--with-4in6 \
-	--with-xauth=/usr/bin/xauth \
+	--with-xauth=/opt/local/bin/xauth \
 	--with-Werror=no \
 	--enable-strip=no \
 	--without-rpath \
diff --git a/openssh/Patches/0001-Skip-config-check.patch b/openssh/Patches/0001-Skip-config-check.patch
index a3f473a..aa49962 100644
--- a/openssh/Patches/0001-Skip-config-check.patch
+++ b/openssh/Patches/0001-Skip-config-check.patch
@@ -1,4 +1,4 @@
-From f1b0f2c40b09b0a280b097b6ce39a5767e6f6edd Mon Sep 17 00:00:00 2001
+From c73038ed9429a7703b9a7d95334893d1d1fa6a78 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:31:53 -0700
 Subject: [PATCH 01/34] Skip config check
@@ -15,10 +15,10 @@ Subject: [PATCH 01/34] Skip config check
  1 file changed, 10 insertions(+), 1 deletion(-)
 
 diff --git a/Makefile.in b/Makefile.in
-index e10f3742..4bbfb736 100644
+index 126b2c74..b89d638f 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -302,7 +302,16 @@ install-nokeys: $(CONFIGFILES) $(MANPAGES) $(TARGETS) install-files install-sysc
+@@ -324,7 +324,16 @@ install-nokeys: $(CONFIGFILES) $(MANPAGES) $(TARGETS) install-files install-sysc
  install-nosysconf: $(CONFIGFILES) $(MANPAGES) $(TARGETS) install-files
  
  check-config:
@@ -35,7 +35,7 @@ index e10f3742..4bbfb736 100644
 +	@echo 'Oracle Solaris: skipping check-config'
  
  install-files:
- 	$(srcdir)/mkinstalldirs $(DESTDIR)$(bindir)
+ 	$(MKDIR_P) $(DESTDIR)$(bindir)
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0002-PAM-Support.patch b/openssh/Patches/0002-PAM-Support.patch
index fa6cf85..92a386d 100644
--- a/openssh/Patches/0002-PAM-Support.patch
+++ b/openssh/Patches/0002-PAM-Support.patch
@@ -1,4 +1,4 @@
-From 0b9b897495b16fe4efeb8060a97c00bbbab28c0d Mon Sep 17 00:00:00 2001
+From 38db2f2128af55e2fc1a287f114b6c67d09507ff Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:34:19 -0700
 Subject: [PATCH 02/34] PAM Support
@@ -15,10 +15,10 @@ Subject: [PATCH 02/34] PAM Support
  1 file changed, 14 insertions(+)
 
 diff --git a/servconf.c b/servconf.c
-index 795ddbab..409d4800 100644
+index 932d363b..d6f430e4 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -194,7 +194,12 @@ fill_default_server_options(ServerOptions *options)
+@@ -262,7 +262,12 @@ fill_default_server_options(ServerOptions *options)
  
  	/* Portable-specific options */
  	if (options->use_pam == -1)
@@ -31,7 +31,7 @@ index 795ddbab..409d4800 100644
  
  	/* Standard Options */
  	if (options->num_host_key_files == 0) {
-@@ -998,8 +1003,17 @@ process_server_config_line(ServerOptions *options, char *line,
+@@ -1253,8 +1258,17 @@ process_server_config_line(ServerOptions *options, char *line,
  	switch (opcode) {
  	/* Portable-specific options */
  	case sUsePAM:
@@ -50,5 +50,5 @@ index 795ddbab..409d4800 100644
  	/* Standard Options */
  	case sBadOption:
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0003-lastlogin.patch b/openssh/Patches/0003-lastlogin.patch
index 8000e91..2ebb58c 100644
--- a/openssh/Patches/0003-lastlogin.patch
+++ b/openssh/Patches/0003-lastlogin.patch
@@ -1,4 +1,4 @@
-From c68ffbb72771d1c8c05f8e92f3d3bf448f2e800d Mon Sep 17 00:00:00 2001
+From b06c3bd0eb76b40b9b2329bc08b4a04c5721fa8a Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:34:41 -0700
 Subject: [PATCH 03/34] lastlogin
@@ -9,10 +9,10 @@ Subject: [PATCH 03/34] lastlogin
  1 file changed, 4 insertions(+), 3 deletions(-)
 
 diff --git a/sshd_config.5 b/sshd_config.5
-index 32b29d24..9eea74bd 100644
+index c6484370..6050adda 100644
 --- a/sshd_config.5
 +++ b/sshd_config.5
-@@ -1260,8 +1260,8 @@ Specifies whether
+@@ -1381,8 +1381,8 @@ Specifies whether
  .Xr sshd 8
  should print the date and time of the last user login when a user logs
  in interactively.
@@ -23,7 +23,7 @@ index 32b29d24..9eea74bd 100644
  .It Cm PrintMotd
  Specifies whether
  .Xr sshd 8
-@@ -1667,7 +1667,8 @@ This file should be writable by root only, but it is recommended
+@@ -1802,7 +1802,8 @@ This file should be writable by root only, but it is recommended
  .El
  .Sh SEE ALSO
  .Xr sftp-server 8 ,
@@ -34,5 +34,5 @@ index 32b29d24..9eea74bd 100644
  .An -nosplit
  OpenSSH is a derivative of the original and free
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0004-Reorganise-man-pages-into-Illumos-numbering-adjust-t.patch b/openssh/Patches/0004-Reorganise-man-pages-into-Illumos-numbering-adjust-t.patch
index d71af66..f2a35d7 100644
--- a/openssh/Patches/0004-Reorganise-man-pages-into-Illumos-numbering-adjust-t.patch
+++ b/openssh/Patches/0004-Reorganise-man-pages-into-Illumos-numbering-adjust-t.patch
@@ -1,56 +1,42 @@
-From c8dca022760b47896046c397eafee93181de096f Mon Sep 17 00:00:00 2001
+From 77ecfcdc322fb88737ba1311d5fe0ef424de2cc0 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:34:55 -0700
 Subject: [PATCH 04/34] Reorganise man pages into Illumos numbering, adjust
  text
 
 ---
- Makefile.in           |   22 +-
- contrib/ssh-copy-id.1 |    4 +-
- moduli.4              |  127 ++++
- moduli.5              |  127 ----
- scp.1                 |    8 +-
- sftp-server.1m        |  170 +++++
- sftp-server.8         |  170 -----
- sftp.1                |   14 +-
- ssh-add.1             |    4 +-
- ssh-agent.1           |    8 +-
- ssh-keygen.1          |   20 +-
- ssh-keyscan.1         |    2 +-
- ssh-keysign.1m        |   93 +++
- ssh-keysign.8         |   93 ---
- ssh-pkcs11-helper.1m  |   43 ++
- ssh-pkcs11-helper.8   |   43 --
- ssh.1                 |   50 +-
- ssh_config.4          | 1778 +++++++++++++++++++++++++++++++++++++++++++++++++
- ssh_config.5          | 1778 -------------------------------------------------
- sshd.1m               |  947 ++++++++++++++++++++++++++
- sshd.8                |  947 --------------------------
- sshd_config.4         | 1688 ++++++++++++++++++++++++++++++++++++++++++++++
- sshd_config.5         | 1688 ----------------------------------------------
- 23 files changed, 4911 insertions(+), 4913 deletions(-)
- create mode 100644 moduli.4
- delete mode 100644 moduli.5
- create mode 100644 sftp-server.1m
- delete mode 100644 sftp-server.8
- create mode 100644 ssh-keysign.1m
- delete mode 100644 ssh-keysign.8
- create mode 100644 ssh-pkcs11-helper.1m
- delete mode 100644 ssh-pkcs11-helper.8
- create mode 100644 ssh_config.4
- delete mode 100644 ssh_config.5
- create mode 100644 sshd.1m
- delete mode 100644 sshd.8
- create mode 100644 sshd_config.4
- delete mode 100644 sshd_config.5
+ Makefile.in                                 | 23 ++---
+ contrib/ssh-copy-id.1                       |  4 +-
+ moduli.5 => moduli.4                        | 14 +--
+ scp.1                                       |  8 +-
+ sftp-server.8 => sftp-server.1m             | 12 +--
+ sftp.1                                      | 28 ++++--
+ ssh-add.1                                   |  4 +-
+ ssh-agent.1                                 |  8 +-
+ ssh-keygen.1                                | 22 +++--
+ ssh-keyscan.1                               |  2 +-
+ ssh-keysign.8 => ssh-keysign.1m             |  8 +-
+ ssh-pkcs11-helper.8 => ssh-pkcs11-helper.1m |  2 +-
+ ssh.1                                       | 64 ++++++++------
+ ssh_config.5 => ssh_config.4                | 22 ++---
+ sshd.8 => sshd.1m                           | 30 +++----
+ sshd_config.5 => sshd_config.4              | 94 ++++++++++-----------
+ 16 files changed, 185 insertions(+), 160 deletions(-)
+ rename moduli.5 => moduli.4 (97%)
+ rename sftp-server.8 => sftp-server.1m (98%)
+ rename ssh-keysign.8 => ssh-keysign.1m (97%)
+ rename ssh-pkcs11-helper.8 => ssh-pkcs11-helper.1m (98%)
+ rename ssh_config.5 => ssh_config.4 (99%)
+ rename sshd.8 => sshd.1m (99%)
+ rename sshd_config.5 => sshd_config.4 (98%)
 
 diff --git a/Makefile.in b/Makefile.in
-index 4bbfb736..6541b3bb 100644
+index b89d638f..7681283b 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -112,8 +112,8 @@ SSHDOBJS=sshd.o auth-rhosts.o auth-passwd.o \
+@@ -120,8 +120,8 @@ SSHDOBJS=sshd.o auth-rhosts.o auth-passwd.o \
  	sandbox-seccomp-filter.o sandbox-capsicum.o sandbox-pledge.o \
- 	sandbox-solaris.o
+ 	sandbox-solaris.o uidswap.o
  
 -MANPAGES	= moduli.5.out scp.1.out ssh-add.1.out ssh-agent.1.out ssh-keygen.1.out ssh-keyscan.1.out ssh.1.out sshd.8.out sftp-server.8.out sftp.1.out ssh-keysign.8.out ssh-pkcs11-helper.8.out sshd_config.5.out ssh_config.5.out
 -MANPAGES_IN	= moduli.5 scp.1 ssh-add.1 ssh-agent.1 ssh-keygen.1 ssh-keyscan.1 ssh.1 sshd.8 sftp-server.8 sftp.1 ssh-keysign.8 ssh-pkcs11-helper.8 sshd_config.5 ssh_config.5
@@ -59,18 +45,20 @@ index 4bbfb736..6541b3bb 100644
  MANTYPE		= @MANTYPE@
  
  CONFIGFILES=sshd_config.out ssh_config.out moduli.out
-@@ -318,8 +318,8 @@ install-files:
- 	$(srcdir)/mkinstalldirs $(DESTDIR)$(sbindir)
- 	$(srcdir)/mkinstalldirs $(DESTDIR)$(mandir)
- 	$(srcdir)/mkinstalldirs $(DESTDIR)$(mandir)/$(mansubdir)1
--	$(srcdir)/mkinstalldirs $(DESTDIR)$(mandir)/$(mansubdir)5
--	$(srcdir)/mkinstalldirs $(DESTDIR)$(mandir)/$(mansubdir)8
-+	$(srcdir)/mkinstalldirs $(DESTDIR)$(mandir)/$(mansubdir)4
-+	$(srcdir)/mkinstalldirs $(DESTDIR)$(mandir)/$(mansubdir)1m
- 	$(srcdir)/mkinstalldirs $(DESTDIR)$(libexecdir)
- 	(umask 022 ; $(srcdir)/mkinstalldirs $(DESTDIR)$(PRIVSEP_PATH))
+@@ -338,9 +338,10 @@ check-config:
+ install-files:
+ 	$(MKDIR_P) $(DESTDIR)$(bindir)
+ 	$(MKDIR_P) $(DESTDIR)$(sbindir)
++	$(MKDIR_P) $(DESTDIR)$(mandir)
+ 	$(MKDIR_P) $(DESTDIR)$(mandir)/$(mansubdir)1
+-	$(MKDIR_P) $(DESTDIR)$(mandir)/$(mansubdir)5
+-	$(MKDIR_P) $(DESTDIR)$(mandir)/$(mansubdir)8
++	$(MKDIR_P) $(DESTDIR)$(mandir)/$(mansubdir)4
++	$(MKDIR_P) $(DESTDIR)$(mandir)/$(mansubdir)1m
+ 	$(MKDIR_P) $(DESTDIR)$(libexecdir)
+ 	$(MKDIR_P) -m 0755 $(DESTDIR)$(PRIVSEP_PATH)
  	$(INSTALL) -m 0755 $(STRIP_OPT) ssh$(EXEEXT) $(DESTDIR)$(bindir)/ssh$(EXEEXT)
-@@ -339,14 +339,14 @@ install-files:
+@@ -360,14 +361,14 @@ install-files:
  	$(INSTALL) -m 644 ssh-agent.1.out $(DESTDIR)$(mandir)/$(mansubdir)1/ssh-agent.1
  	$(INSTALL) -m 644 ssh-keygen.1.out $(DESTDIR)$(mandir)/$(mansubdir)1/ssh-keygen.1
  	$(INSTALL) -m 644 ssh-keyscan.1.out $(DESTDIR)$(mandir)/$(mansubdir)1/ssh-keyscan.1
@@ -91,7 +79,7 @@ index 4bbfb736..6541b3bb 100644
 +	$(INSTALL) -m 644 ssh-pkcs11-helper.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/ssh-pkcs11-helper.1m
  
  install-sysconf:
- 	if [ ! -d $(DESTDIR)$(sysconfdir) ]; then \
+ 	$(MKDIR_P) $(DESTDIR)$(sysconfdir)
 diff --git a/contrib/ssh-copy-id.1 b/contrib/ssh-copy-id.1
 index 8850cced..270e13ef 100644
 --- a/contrib/ssh-copy-id.1
@@ -111,277 +99,74 @@ index 8850cced..270e13ef 100644
  .Xr ssh-agent 1 ,
 -.Xr sshd 8
 +.Xr sshd 1M
-diff --git a/moduli.4 b/moduli.4
-new file mode 100644
-index 00000000..f87556be
---- /dev/null
-+++ b/moduli.4
-@@ -0,0 +1,127 @@
-+.\"	$OpenBSD: moduli.5,v 1.17 2012/09/26 17:34:38 jmc Exp $
-+.\"
-+.\" Copyright (c) 2008 Damien Miller <djm@mindrot.org>
-+.\"
-+.\" Permission to use, copy, modify, and distribute this software for any
-+.\" purpose with or without fee is hereby granted, provided that the above
-+.\" copyright notice and this permission notice appear in all copies.
-+.\"
-+.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-+.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-+.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-+.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-+.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-+.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-+.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-+.Dd $Mdocdate: September 26 2012 $
-+.Dt MODULI 4
-+.Os
-+.Sh NAME
-+.Nm moduli
-+.Nd Diffie-Hellman moduli
-+.Sh DESCRIPTION
-+The
-+.Pa /etc/moduli
-+file contains prime numbers and generators for use by
-+.Xr sshd 1M
-+in the Diffie-Hellman Group Exchange key exchange method.
-+.Pp
-+New moduli may be generated with
-+.Xr ssh-keygen 1
-+using a two-step process.
-+An initial
-+.Em candidate generation
-+pass, using
-+.Ic ssh-keygen -G ,
-+calculates numbers that are likely to be useful.
-+A second
-+.Em primality testing
-+pass, using
-+.Ic ssh-keygen -T ,
-+provides a high degree of assurance that the numbers are prime and are
-+safe for use in Diffie-Hellman operations by
-+.Xr sshd 1M .
-+This
-+.Nm
-+format is used as the output from each pass.
-+.Pp
-+The file consists of newline-separated records, one per modulus,
-+containing seven space-separated fields.
-+These fields are as follows:
-+.Bl -tag -width Description -offset indent
-+.It timestamp
-+The time that the modulus was last processed as YYYYMMDDHHMMSS.
-+.It type
-+Decimal number specifying the internal structure of the prime modulus.
-+Supported types are:
-+.Pp
-+.Bl -tag -width 0x00 -compact
-+.It 0
-+Unknown, not tested.
-+.It 2
-+"Safe" prime; (p-1)/2 is also prime.
-+.It 4
-+Sophie Germain; 2p+1 is also prime.
-+.El
-+.Pp
-+Moduli candidates initially produced by
-+.Xr ssh-keygen 1
-+are Sophie Germain primes (type 4).
-+Further primality testing with
-+.Xr ssh-keygen 1
-+produces safe prime moduli (type 2) that are ready for use in
-+.Xr sshd 1M .
-+Other types are not used by OpenSSH.
-+.It tests
-+Decimal number indicating the type of primality tests that the number
-+has been subjected to represented as a bitmask of the following values:
-+.Pp
-+.Bl -tag -width 0x00 -compact
-+.It 0x00
-+Not tested.
-+.It 0x01
-+Composite number \(en not prime.
-+.It 0x02
-+Sieve of Eratosthenes.
-+.It 0x04
-+Probabilistic Miller-Rabin primality tests.
-+.El
-+.Pp
-+The
-+.Xr ssh-keygen 1
-+moduli candidate generation uses the Sieve of Eratosthenes (flag 0x02).
-+Subsequent
-+.Xr ssh-keygen 1
-+primality tests are Miller-Rabin tests (flag 0x04).
-+.It trials
-+Decimal number indicating the number of primality trials
-+that have been performed on the modulus.
-+.It size
-+Decimal number indicating the size of the prime in bits.
-+.It generator
-+The recommended generator for use with this modulus (hexadecimal).
-+.It modulus
-+The modulus itself in hexadecimal.
-+.El
-+.Pp
-+When performing Diffie-Hellman Group Exchange,
-+.Xr sshd 1M
-+first estimates the size of the modulus required to produce enough
-+Diffie-Hellman output to sufficiently key the selected symmetric cipher.
-+.Xr sshd 1M
-+then randomly selects a modulus from
-+.Fa /etc/moduli
-+that best meets the size requirement.
-+.Sh SEE ALSO
-+.Xr ssh-keygen 1 ,
-+.Xr sshd 1M
-+.Sh STANDARDS
-+.Rs
-+.%A M. Friedl
-+.%A N. Provos
-+.%A W. Simpson
-+.%D March 2006
-+.%R RFC 4419
-+.%T Diffie-Hellman Group Exchange for the Secure Shell (SSH) Transport Layer Protocol
-+.%D 2006
-+.Re
-diff --git a/moduli.5 b/moduli.5
-deleted file mode 100644
-index ef0de085..00000000
+diff --git a/moduli.5 b/moduli.4
+similarity index 97%
+rename from moduli.5
+rename to moduli.4
+index ef0de085..f87556be 100644
 --- a/moduli.5
-+++ /dev/null
-@@ -1,127 +0,0 @@
--.\"	$OpenBSD: moduli.5,v 1.17 2012/09/26 17:34:38 jmc Exp $
--.\"
--.\" Copyright (c) 2008 Damien Miller <djm@mindrot.org>
--.\"
--.\" Permission to use, copy, modify, and distribute this software for any
--.\" purpose with or without fee is hereby granted, provided that the above
--.\" copyright notice and this permission notice appear in all copies.
--.\"
--.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
--.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
--.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
--.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
--.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
--.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
--.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--.Dd $Mdocdate: September 26 2012 $
++++ b/moduli.4
+@@ -14,7 +14,7 @@
+ .\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+ .\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ .Dd $Mdocdate: September 26 2012 $
 -.Dt MODULI 5
--.Os
--.Sh NAME
--.Nm moduli
--.Nd Diffie-Hellman moduli
--.Sh DESCRIPTION
--The
--.Pa /etc/moduli
--file contains prime numbers and generators for use by
++.Dt MODULI 4
+ .Os
+ .Sh NAME
+ .Nm moduli
+@@ -23,7 +23,7 @@
+ The
+ .Pa /etc/moduli
+ file contains prime numbers and generators for use by
 -.Xr sshd 8
--in the Diffie-Hellman Group Exchange key exchange method.
--.Pp
--New moduli may be generated with
--.Xr ssh-keygen 1
--using a two-step process.
--An initial
--.Em candidate generation
--pass, using
--.Ic ssh-keygen -G ,
--calculates numbers that are likely to be useful.
--A second
--.Em primality testing
--pass, using
--.Ic ssh-keygen -T ,
--provides a high degree of assurance that the numbers are prime and are
--safe for use in Diffie-Hellman operations by
++.Xr sshd 1M
+ in the Diffie-Hellman Group Exchange key exchange method.
+ .Pp
+ New moduli may be generated with
+@@ -40,7 +40,7 @@ pass, using
+ .Ic ssh-keygen -T ,
+ provides a high degree of assurance that the numbers are prime and are
+ safe for use in Diffie-Hellman operations by
 -.Xr sshd 8 .
--This
--.Nm
--format is used as the output from each pass.
--.Pp
--The file consists of newline-separated records, one per modulus,
--containing seven space-separated fields.
--These fields are as follows:
--.Bl -tag -width Description -offset indent
--.It timestamp
--The time that the modulus was last processed as YYYYMMDDHHMMSS.
--.It type
--Decimal number specifying the internal structure of the prime modulus.
--Supported types are:
--.Pp
--.Bl -tag -width 0x00 -compact
--.It 0
--Unknown, not tested.
--.It 2
--"Safe" prime; (p-1)/2 is also prime.
--.It 4
--Sophie Germain; 2p+1 is also prime.
--.El
--.Pp
--Moduli candidates initially produced by
--.Xr ssh-keygen 1
--are Sophie Germain primes (type 4).
--Further primality testing with
--.Xr ssh-keygen 1
--produces safe prime moduli (type 2) that are ready for use in
++.Xr sshd 1M .
+ This
+ .Nm
+ format is used as the output from each pass.
+@@ -70,7 +70,7 @@ are Sophie Germain primes (type 4).
+ Further primality testing with
+ .Xr ssh-keygen 1
+ produces safe prime moduli (type 2) that are ready for use in
 -.Xr sshd 8 .
--Other types are not used by OpenSSH.
--.It tests
--Decimal number indicating the type of primality tests that the number
--has been subjected to represented as a bitmask of the following values:
--.Pp
--.Bl -tag -width 0x00 -compact
--.It 0x00
--Not tested.
--.It 0x01
--Composite number \(en not prime.
--.It 0x02
--Sieve of Eratosthenes.
--.It 0x04
--Probabilistic Miller-Rabin primality tests.
--.El
--.Pp
--The
--.Xr ssh-keygen 1
--moduli candidate generation uses the Sieve of Eratosthenes (flag 0x02).
--Subsequent
--.Xr ssh-keygen 1
--primality tests are Miller-Rabin tests (flag 0x04).
--.It trials
--Decimal number indicating the number of primality trials
--that have been performed on the modulus.
--.It size
--Decimal number indicating the size of the prime in bits.
--.It generator
--The recommended generator for use with this modulus (hexadecimal).
--.It modulus
--The modulus itself in hexadecimal.
--.El
--.Pp
--When performing Diffie-Hellman Group Exchange,
++.Xr sshd 1M .
+ Other types are not used by OpenSSH.
+ .It tests
+ Decimal number indicating the type of primality tests that the number
+@@ -105,16 +105,16 @@ The modulus itself in hexadecimal.
+ .El
+ .Pp
+ When performing Diffie-Hellman Group Exchange,
 -.Xr sshd 8
--first estimates the size of the modulus required to produce enough
--Diffie-Hellman output to sufficiently key the selected symmetric cipher.
++.Xr sshd 1M
+ first estimates the size of the modulus required to produce enough
+ Diffie-Hellman output to sufficiently key the selected symmetric cipher.
 -.Xr sshd 8
--then randomly selects a modulus from
--.Fa /etc/moduli
--that best meets the size requirement.
--.Sh SEE ALSO
--.Xr ssh-keygen 1 ,
++.Xr sshd 1M
+ then randomly selects a modulus from
+ .Fa /etc/moduli
+ that best meets the size requirement.
+ .Sh SEE ALSO
+ .Xr ssh-keygen 1 ,
 -.Xr sshd 8
--.Sh STANDARDS
--.Rs
--.%A M. Friedl
--.%A N. Provos
--.%A W. Simpson
--.%D March 2006
--.%R RFC 4419
--.%T Diffie-Hellman Group Exchange for the Secure Shell (SSH) Transport Layer Protocol
--.%D 2006
--.Re
++.Xr sshd 1M
+ .Sh STANDARDS
+ .Rs
+ .%A M. Friedl
 diff --git a/scp.1 b/scp.1
-index 4ae87775..515fa400 100644
+index 0e5cc1b2..8e20ab1e 100644
 --- a/scp.1
 +++ b/scp.1
-@@ -116,13 +116,13 @@ Limits the used bandwidth, specified in Kbit/s.
+@@ -112,13 +112,13 @@ Limits the used bandwidth, specified in Kbit/s.
  Can be used to pass options to
  .Nm ssh
  in the format used in
@@ -397,7 +182,7 @@ index 4ae87775..515fa400 100644
  .Pp
  .Bl -tag -width Ds -offset indent -compact
  .It AddressFamily
-@@ -233,8 +233,8 @@ debugging connection, authentication, and configuration problems.
+@@ -226,8 +226,8 @@ debugging connection, authentication, and configuration problems.
  .Xr ssh-add 1 ,
  .Xr ssh-agent 1 ,
  .Xr ssh-keygen 1 ,
@@ -408,372 +193,82 @@ index 4ae87775..515fa400 100644
  .Sh HISTORY
  .Nm
  is based on the rcp program in
-diff --git a/sftp-server.1m b/sftp-server.1m
-new file mode 100644
-index 00000000..42354c27
---- /dev/null
-+++ b/sftp-server.1m
-@@ -0,0 +1,170 @@
-+.\" $OpenBSD: sftp-server.8,v 1.27 2014/12/11 04:16:14 djm Exp $
-+.\"
-+.\" Copyright (c) 2000 Markus Friedl.  All rights reserved.
-+.\"
-+.\" Redistribution and use in source and binary forms, with or without
-+.\" modification, are permitted provided that the following conditions
-+.\" are met:
-+.\" 1. Redistributions of source code must retain the above copyright
-+.\"    notice, this list of conditions and the following disclaimer.
-+.\" 2. Redistributions in binary form must reproduce the above copyright
-+.\"    notice, this list of conditions and the following disclaimer in the
-+.\"    documentation and/or other materials provided with the distribution.
-+.\"
-+.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-+.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-+.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-+.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-+.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-+.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-+.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-+.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-+.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-+.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-+.\"
-+.Dd $Mdocdate: December 11 2014 $
-+.Dt SFTP-SERVER 1M
-+.Os
-+.Sh NAME
-+.Nm sftp-server
-+.Nd SFTP server subsystem
-+.Sh SYNOPSIS
-+.Nm sftp-server
-+.Bk -words
-+.Op Fl ehR
-+.Op Fl d Ar start_directory
-+.Op Fl f Ar log_facility
-+.Op Fl l Ar log_level
-+.Op Fl P Ar blacklisted_requests
-+.Op Fl p Ar whitelisted_requests
-+.Op Fl u Ar umask
-+.Ek
-+.Nm
-+.Fl Q Ar protocol_feature
-+.Sh DESCRIPTION
-+.Nm
-+is a program that speaks the server side of SFTP protocol
-+to stdout and expects client requests from stdin.
-+.Nm
-+is not intended to be called directly, but from
-+.Xr sshd 1M
-+using the
-+.Cm Subsystem
-+option.
-+.Pp
-+Command-line flags to
-+.Nm
-+should be specified in the
-+.Cm Subsystem
-+declaration.
-+See
-+.Xr sshd_config 4
-+for more information.
-+.Pp
-+Valid options are:
-+.Bl -tag -width Ds
-+.It Fl d Ar start_directory
-+specifies an alternate starting directory for users.
-+The pathname may contain the following tokens that are expanded at runtime:
-+%% is replaced by a literal '%',
-+%d is replaced by the home directory of the user being authenticated,
-+and %u is replaced by the username of that user.
-+The default is to use the user's home directory.
-+This option is useful in conjunction with the
-+.Xr sshd_config 4
-+.Cm ChrootDirectory
-+option.
-+.It Fl e
-+Causes
-+.Nm
-+to print logging information to stderr instead of syslog for debugging.
-+.It Fl f Ar log_facility
-+Specifies the facility code that is used when logging messages from
-+.Nm .
-+The possible values are: DAEMON, USER, AUTH, LOCAL0, LOCAL1, LOCAL2,
-+LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.
-+The default is AUTH.
-+.It Fl h
-+Displays
-+.Nm
-+usage information.
-+.It Fl l Ar log_level
-+Specifies which messages will be logged by
-+.Nm .
-+The possible values are:
-+QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.
-+INFO and VERBOSE log transactions that
-+.Nm
-+performs on behalf of the client.
-+DEBUG and DEBUG1 are equivalent.
-+DEBUG2 and DEBUG3 each specify higher levels of debugging output.
-+The default is ERROR.
-+.It Fl P Ar blacklisted_requests
-+Specify a comma-separated list of SFTP protocol requests that are banned by
-+the server.
-+.Nm
-+will reply to any blacklisted request with a failure.
-+The
-+.Fl Q
-+flag can be used to determine the supported request types.
-+If both a blacklist and a whitelist are specified, then the blacklist is
-+applied before the whitelist.
-+.It Fl p Ar whitelisted_requests
-+Specify a comma-separated list of SFTP protocol requests that are permitted
-+by the server.
-+All request types that are not on the whitelist will be logged and replied
-+to with a failure message.
-+.Pp
-+Care must be taken when using this feature to ensure that requests made
-+implicitly by SFTP clients are permitted.
-+.It Fl Q Ar protocol_feature
-+Query protocol features supported by
-+.Nm .
-+At present the only feature that may be queried is
-+.Dq requests ,
-+which may be used for black or whitelisting (flags
-+.Fl P
-+and
-+.Fl p
-+respectively).
-+.It Fl R
-+Places this instance of
-+.Nm
-+into a read-only mode.
-+Attempts to open files for writing, as well as other operations that change
-+the state of the filesystem, will be denied.
-+.It Fl u Ar umask
-+Sets an explicit
-+.Xr umask 2
-+to be applied to newly-created files and directories, instead of the
-+user's default mask.
-+.El
-+.Pp
-+On some systems,
-+.Nm
-+must be able to access
-+.Pa /dev/log
-+for logging to work, and use of
-+.Nm
-+in a chroot configuration therefore requires that
-+.Xr syslogd 8
-+establish a logging socket inside the chroot directory.
-+.Sh SEE ALSO
-+.Xr sftp 1 ,
-+.Xr ssh 1 ,
-+.Xr sshd_config 4 ,
-+.Xr sshd 1M
-+.Rs
-+.%A T. Ylonen
-+.%A S. Lehtinen
-+.%T "SSH File Transfer Protocol"
-+.%N draft-ietf-secsh-filexfer-02.txt
-+.%D October 2001
-+.%O work in progress material
-+.Re
-+.Sh HISTORY
-+.Nm
-+first appeared in
-+.Ox 2.8 .
-+.Sh AUTHORS
-+.An Markus Friedl Aq Mt markus@openbsd.org
-diff --git a/sftp-server.8 b/sftp-server.8
-deleted file mode 100644
-index c117398e..00000000
+diff --git a/sftp-server.8 b/sftp-server.1m
+similarity index 98%
+rename from sftp-server.8
+rename to sftp-server.1m
+index c117398e..42354c27 100644
 --- a/sftp-server.8
-+++ /dev/null
-@@ -1,170 +0,0 @@
--.\" $OpenBSD: sftp-server.8,v 1.27 2014/12/11 04:16:14 djm Exp $
--.\"
--.\" Copyright (c) 2000 Markus Friedl.  All rights reserved.
--.\"
--.\" Redistribution and use in source and binary forms, with or without
--.\" modification, are permitted provided that the following conditions
--.\" are met:
--.\" 1. Redistributions of source code must retain the above copyright
--.\"    notice, this list of conditions and the following disclaimer.
--.\" 2. Redistributions in binary form must reproduce the above copyright
--.\"    notice, this list of conditions and the following disclaimer in the
--.\"    documentation and/or other materials provided with the distribution.
--.\"
--.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
--.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
--.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
--.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
--.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
--.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
--.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
--.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
--.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--.\"
--.Dd $Mdocdate: December 11 2014 $
++++ b/sftp-server.1m
+@@ -23,7 +23,7 @@
+ .\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ .\"
+ .Dd $Mdocdate: December 11 2014 $
 -.Dt SFTP-SERVER 8
--.Os
--.Sh NAME
--.Nm sftp-server
--.Nd SFTP server subsystem
--.Sh SYNOPSIS
--.Nm sftp-server
--.Bk -words
--.Op Fl ehR
--.Op Fl d Ar start_directory
--.Op Fl f Ar log_facility
--.Op Fl l Ar log_level
--.Op Fl P Ar blacklisted_requests
--.Op Fl p Ar whitelisted_requests
--.Op Fl u Ar umask
--.Ek
--.Nm
--.Fl Q Ar protocol_feature
--.Sh DESCRIPTION
--.Nm
--is a program that speaks the server side of SFTP protocol
--to stdout and expects client requests from stdin.
--.Nm
--is not intended to be called directly, but from
++.Dt SFTP-SERVER 1M
+ .Os
+ .Sh NAME
+ .Nm sftp-server
+@@ -47,7 +47,7 @@ is a program that speaks the server side of SFTP protocol
+ to stdout and expects client requests from stdin.
+ .Nm
+ is not intended to be called directly, but from
 -.Xr sshd 8
--using the
--.Cm Subsystem
--option.
--.Pp
--Command-line flags to
--.Nm
--should be specified in the
--.Cm Subsystem
--declaration.
--See
++.Xr sshd 1M
+ using the
+ .Cm Subsystem
+ option.
+@@ -58,7 +58,7 @@ should be specified in the
+ .Cm Subsystem
+ declaration.
+ See
 -.Xr sshd_config 5
--for more information.
--.Pp
--Valid options are:
--.Bl -tag -width Ds
--.It Fl d Ar start_directory
--specifies an alternate starting directory for users.
--The pathname may contain the following tokens that are expanded at runtime:
--%% is replaced by a literal '%',
--%d is replaced by the home directory of the user being authenticated,
--and %u is replaced by the username of that user.
--The default is to use the user's home directory.
--This option is useful in conjunction with the
++.Xr sshd_config 4
+ for more information.
+ .Pp
+ Valid options are:
+@@ -71,7 +71,7 @@ The pathname may contain the following tokens that are expanded at runtime:
+ and %u is replaced by the username of that user.
+ The default is to use the user's home directory.
+ This option is useful in conjunction with the
 -.Xr sshd_config 5
--.Cm ChrootDirectory
--option.
--.It Fl e
--Causes
--.Nm
--to print logging information to stderr instead of syslog for debugging.
--.It Fl f Ar log_facility
--Specifies the facility code that is used when logging messages from
--.Nm .
--The possible values are: DAEMON, USER, AUTH, LOCAL0, LOCAL1, LOCAL2,
--LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.
--The default is AUTH.
--.It Fl h
--Displays
--.Nm
--usage information.
--.It Fl l Ar log_level
--Specifies which messages will be logged by
--.Nm .
--The possible values are:
--QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.
--INFO and VERBOSE log transactions that
--.Nm
--performs on behalf of the client.
--DEBUG and DEBUG1 are equivalent.
--DEBUG2 and DEBUG3 each specify higher levels of debugging output.
--The default is ERROR.
--.It Fl P Ar blacklisted_requests
--Specify a comma-separated list of SFTP protocol requests that are banned by
--the server.
--.Nm
--will reply to any blacklisted request with a failure.
--The
--.Fl Q
--flag can be used to determine the supported request types.
--If both a blacklist and a whitelist are specified, then the blacklist is
--applied before the whitelist.
--.It Fl p Ar whitelisted_requests
--Specify a comma-separated list of SFTP protocol requests that are permitted
--by the server.
--All request types that are not on the whitelist will be logged and replied
--to with a failure message.
--.Pp
--Care must be taken when using this feature to ensure that requests made
--implicitly by SFTP clients are permitted.
--.It Fl Q Ar protocol_feature
--Query protocol features supported by
--.Nm .
--At present the only feature that may be queried is
--.Dq requests ,
--which may be used for black or whitelisting (flags
--.Fl P
--and
--.Fl p
--respectively).
--.It Fl R
--Places this instance of
--.Nm
--into a read-only mode.
--Attempts to open files for writing, as well as other operations that change
--the state of the filesystem, will be denied.
--.It Fl u Ar umask
--Sets an explicit
--.Xr umask 2
--to be applied to newly-created files and directories, instead of the
--user's default mask.
--.El
--.Pp
--On some systems,
--.Nm
--must be able to access
--.Pa /dev/log
--for logging to work, and use of
--.Nm
--in a chroot configuration therefore requires that
--.Xr syslogd 8
--establish a logging socket inside the chroot directory.
--.Sh SEE ALSO
--.Xr sftp 1 ,
--.Xr ssh 1 ,
++.Xr sshd_config 4
+ .Cm ChrootDirectory
+ option.
+ .It Fl e
+@@ -152,8 +152,8 @@ establish a logging socket inside the chroot directory.
+ .Sh SEE ALSO
+ .Xr sftp 1 ,
+ .Xr ssh 1 ,
 -.Xr sshd_config 5 ,
 -.Xr sshd 8
--.Rs
--.%A T. Ylonen
--.%A S. Lehtinen
--.%T "SSH File Transfer Protocol"
--.%N draft-ietf-secsh-filexfer-02.txt
--.%D October 2001
--.%O work in progress material
--.Re
--.Sh HISTORY
--.Nm
--first appeared in
--.Ox 2.8 .
--.Sh AUTHORS
--.An Markus Friedl Aq Mt markus@openbsd.org
++.Xr sshd_config 4 ,
++.Xr sshd 1M
+ .Rs
+ .%A T. Ylonen
+ .%A S. Lehtinen
 diff --git a/sftp.1 b/sftp.1
-index fbdd00a1..a281ebcd 100644
+index 0fd54cae..c6ebc891 100644
 --- a/sftp.1
 +++ b/sftp.1
-@@ -85,7 +85,7 @@ The final usage format allows for automated sessions using the
- option.
- In such cases, it is necessary to configure non-interactive authentication
- to obviate the need to enter a password at connection time (see
--.Xr sshd 8
+@@ -89,6 +89,16 @@ An optional trailing slash can be used to force the
+ .Ar path
+ to be interpreted as a directory.
+ .Pp
++The final usage format allows for automated sessions using the
++.Fl b
++option.
++In such cases, it is necessary to configure non-interactive authentication
++to obviate the need to enter a password at connection time (see
 +.Xr sshd 1M
- and
- .Xr ssh-keygen 1
- for details).
-@@ -179,7 +179,7 @@ Limits the used bandwidth, specified in Kbit/s.
++and
++.Xr ssh-keygen 1
++for details).
++.Pp
+ Since the destination formats use colon characters to delimit host
+ names from path names or port numbers, IPv6 addresses must be
+ enclosed in square brackets to avoid ambiguity.
+@@ -180,7 +190,7 @@ Limits the used bandwidth, specified in Kbit/s.
  Can be used to pass options to
  .Nm ssh
  in the format used in
@@ -782,7 +277,7 @@ index fbdd00a1..a281ebcd 100644
  This is useful for specifying options
  for which there is no separate
  .Nm sftp
-@@ -187,7 +187,7 @@ command-line flag.
+@@ -188,7 +198,7 @@ command-line flag.
  For example, to specify an alternate port use:
  .Ic sftp -oPort=24 .
  For full details of the options listed below, and their possible values, see
@@ -791,22 +286,28 @@ index fbdd00a1..a281ebcd 100644
  .Pp
  .Bl -tag -width Ds -offset indent -compact
  .It AddressFamily
-@@ -285,7 +285,7 @@ on the remote host.
- A path is useful for using
- .Nm
- over protocol version 1, or when the remote
+@@ -281,8 +291,10 @@ options.
+ .It Fl s Ar subsystem | sftp_server
+ Specifies the SSH2 subsystem or the path for an sftp server
+ on the remote host.
+-A path is useful when the remote
 -.Xr sshd 8
++A path is useful for using
++.Nm
++over protocol version 1, or when the remote
 +.Xr sshd 1M
  does not have an sftp subsystem configured.
  .It Fl v
  Raise logging level.
-@@ -615,9 +615,9 @@ Synonym for help.
+@@ -617,10 +629,10 @@ Synonym for help.
+ .Xr ssh 1 ,
  .Xr ssh-add 1 ,
  .Xr ssh-keygen 1 ,
- .Xr glob 3 ,
 -.Xr ssh_config 5 ,
+-.Xr glob 7 ,
 -.Xr sftp-server 8 ,
 -.Xr sshd 8
++.Xr glob 3 ,
 +.Xr ssh_config 4 ,
 +.Xr sftp-server 1M ,
 +.Xr sshd 1M
@@ -814,10 +315,10 @@ index fbdd00a1..a281ebcd 100644
  .%A T. Ylonen
  .%A S. Lehtinen
 diff --git a/ssh-add.1 b/ssh-add.1
-index f02b595d..b4d7c8f8 100644
+index d5da9279..03299bb7 100644
 --- a/ssh-add.1
 +++ b/ssh-add.1
-@@ -134,7 +134,7 @@ Add keys provided by the PKCS#11 shared library
+@@ -135,7 +135,7 @@ Add keys provided by the PKCS#11 shared library
  Set a maximum lifetime when adding identities to an agent.
  The lifetime may be specified in seconds or in a time format
  specified in
@@ -826,7 +327,7 @@ index f02b595d..b4d7c8f8 100644
  .It Fl X
  Unlock the agent.
  .It Fl x
-@@ -200,7 +200,7 @@ is unable to contact the authentication agent.
+@@ -199,7 +199,7 @@ is unable to contact the authentication agent.
  .Xr ssh-agent 1 ,
  .Xr ssh-askpass 1 ,
  .Xr ssh-keygen 1 ,
@@ -876,10 +377,10 @@ index 83b2b41c..d2cad7e8 100644
  .An -nosplit
  OpenSSH is a derivative of the original and free ssh 1.2.12 release by
 diff --git a/ssh-keygen.1 b/ssh-keygen.1
-index ce2213c7..f0824509 100644
+index bfa2eb5f..4aa3586b 100644
 --- a/ssh-keygen.1
 +++ b/ssh-keygen.1
-@@ -178,9 +178,7 @@ key in
+@@ -176,9 +176,7 @@ key in
  .Pa ~/.ssh/id_ed25519
  or
  .Pa ~/.ssh/id_rsa .
@@ -890,43 +391,46 @@ index ce2213c7..f0824509 100644
  .Pp
  Normally this program generates the key and asks for a file in which
  to store the private key.
-@@ -228,7 +226,7 @@ for which host keys
- do not exist, generate the host keys with the default key file path,
- an empty passphrase, default bits for the key type, and default comment.
+@@ -230,7 +228,7 @@ If
+ has also been specified, its argument is used as a prefix to the
+ default path for the resulting host key files.
  This is used by
 -.Pa /etc/rc
 +.Pa /lib/svc/method/sshd
  to generate new host keys.
  .It Fl a Ar rounds
- When saving a new-format private key (i.e. an ed25519 key or any SSH protocol
-@@ -449,7 +447,7 @@ Disable PTY allocation (permitted by default).
+ When saving a private key this option specifies the number of KDF
+@@ -471,7 +469,7 @@ Disable PTY allocation (permitted by default).
  Disable execution of
  .Pa ~/.ssh/rc
  by
 -.Xr sshd 8
 +.Xr sshd 1M
  (permitted by default).
+ .Pp
  .It Ic no-x11-forwarding
- Disable X11 forwarding (permitted by default).
-@@ -465,7 +463,7 @@ Allows PTY allocation.
+@@ -492,9 +490,9 @@ Allows PTY allocation.
  Allows execution of
  .Pa ~/.ssh/rc
  by
 -.Xr sshd 8 .
 +.Xr sshd 1M .
- .It Ic permit-x11-forwarding
+ .Pp
+-.It Ic permit-X11-forwarding
++.It Ic permit-x11-forwarding
  Allows X11 forwarding.
+ .Pp
  .It Ic source-address Ns = Ns Ar address_list
-@@ -556,7 +554,7 @@ The start time may be specified as a date in YYYYMMDD format, a time
- in YYYYMMDDHHMMSS format or a relative time (to the current time) consisting
- of a minus sign followed by a relative time in the format described in the
+@@ -584,7 +582,7 @@ a date in YYYYMMDD format, a time in YYYYMMDDHHMM[SS] format,
+ a relative time (to the current time) consisting of a minus sign followed by
+ an interval in the format described in the
  TIME FORMATS section of
 -.Xr sshd_config 5 .
 +.Xr sshd_config 4 .
- The end time may be specified as a YYYYMMDD date, a YYYYMMDDHHMMSS time or
- a relative time starting with a plus character.
  .Pp
-@@ -722,7 +720,7 @@ Epoch to the distant future.
+ The end time may be specified as a YYYYMMDD date, a YYYYMMDDHHMM[SS] time,
+ a relative time starting with a plus character or the string
+@@ -763,7 +761,7 @@ Epoch to the distant future.
  .Pp
  For certificates to be used for user or host authentication, the CA
  public key must be trusted by
@@ -935,7 +439,7 @@ index ce2213c7..f0824509 100644
  or
  .Xr ssh 1 .
  Please refer to those manual pages for details.
-@@ -846,14 +844,14 @@ There is no need to keep the contents of this file secret.
+@@ -880,14 +878,14 @@ There is no need to keep the contents of this file secret.
  .It Pa /etc/moduli
  Contains Diffie-Hellman groups used for DH-GEX.
  The file format is described in
@@ -954,319 +458,75 @@ index ce2213c7..f0824509 100644
  .%R RFC 4716
  .%T "The Secure Shell (SSH) Public Key File Format"
 diff --git a/ssh-keyscan.1 b/ssh-keyscan.1
-index d29d9d90..17a69770 100644
+index f3d7a407..01a3dc9a 100644
 --- a/ssh-keyscan.1
 +++ b/ssh-keyscan.1
-@@ -166,7 +166,7 @@ $ ssh-keyscan -t rsa,dsa,ecdsa,ed25519 -f ssh_hosts | \e
+@@ -144,7 +144,7 @@ $ ssh-keyscan -t rsa,dsa,ecdsa,ed25519 -f ssh_hosts | \e
  .Ed
  .Sh SEE ALSO
  .Xr ssh 1 ,
 -.Xr sshd 8
-+.Xr sshd 1M
- .Sh AUTHORS
- .An -nosplit
- .An David Mazieres Aq Mt dm@lcs.mit.edu
-diff --git a/ssh-keysign.1m b/ssh-keysign.1m
-new file mode 100644
-index 00000000..9ce1e619
---- /dev/null
-+++ b/ssh-keysign.1m
-@@ -0,0 +1,93 @@
-+.\" $OpenBSD: ssh-keysign.8,v 1.15 2016/02/17 07:38:19 jmc Exp $
-+.\"
-+.\" Copyright (c) 2002 Markus Friedl.  All rights reserved.
-+.\"
-+.\" Redistribution and use in source and binary forms, with or without
-+.\" modification, are permitted provided that the following conditions
-+.\" are met:
-+.\" 1. Redistributions of source code must retain the above copyright
-+.\"    notice, this list of conditions and the following disclaimer.
-+.\" 2. Redistributions in binary form must reproduce the above copyright
-+.\"    notice, this list of conditions and the following disclaimer in the
-+.\"    documentation and/or other materials provided with the distribution.
-+.\"
-+.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-+.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-+.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-+.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-+.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-+.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-+.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-+.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-+.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-+.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-+.\"
-+.Dd $Mdocdate: February 17 2016 $
-+.Dt SSH-KEYSIGN 1M
-+.Os
-+.Sh NAME
-+.Nm ssh-keysign
-+.Nd ssh helper program for host-based authentication
-+.Sh SYNOPSIS
-+.Nm
-+.Sh DESCRIPTION
-+.Nm
-+is used by
-+.Xr ssh 1
-+to access the local host keys and generate the digital signature
-+required during host-based authentication.
-+.Pp
-+.Nm
-+is disabled by default and can only be enabled in the
-+global client configuration file
-+.Pa /etc/ssh/ssh_config
-+by setting
-+.Cm EnableSSHKeysign
-+to
-+.Dq yes .
-+.Pp
-+.Nm
-+is not intended to be invoked by the user, but from
-+.Xr ssh 1 .
-+See
-+.Xr ssh 1
-+and
-+.Xr sshd 1M
-+for more information about host-based authentication.
-+.Sh FILES
-+.Bl -tag -width Ds -compact
-+.It Pa /etc/ssh/ssh_config
-+Controls whether
-+.Nm
-+is enabled.
-+.Pp
-+.It Pa /etc/ssh/ssh_host_dsa_key
-+.It Pa /etc/ssh/ssh_host_ecdsa_key
-+.It Pa /etc/ssh/ssh_host_ed25519_key
-+.It Pa /etc/ssh/ssh_host_rsa_key
-+These files contain the private parts of the host keys used to
-+generate the digital signature.
-+They should be owned by root, readable only by root, and not
-+accessible to others.
-+Since they are readable only by root,
-+.Nm
-+must be set-uid root if host-based authentication is used.
-+.Pp
-+.It Pa /etc/ssh/ssh_host_dsa_key-cert.pub
-+.It Pa /etc/ssh/ssh_host_ecdsa_key-cert.pub
-+.It Pa /etc/ssh/ssh_host_ed25519_key-cert.pub
-+.It Pa /etc/ssh/ssh_host_rsa_key-cert.pub
-+If these files exist they are assumed to contain public certificate
-+information corresponding with the private keys above.
-+.El
-+.Sh SEE ALSO
-+.Xr ssh 1 ,
-+.Xr ssh-keygen 1 ,
-+.Xr ssh_config 4 ,
-+.Xr sshd 1M
-+.Sh HISTORY
-+.Nm
-+first appeared in
-+.Ox 3.2 .
-+.Sh AUTHORS
-+.An Markus Friedl Aq Mt markus@openbsd.org
-diff --git a/ssh-keysign.8 b/ssh-keysign.8
-deleted file mode 100644
-index 19b0dbc5..00000000
++.Xr sshd 1m
+ .Rs
+ .%D 2006
+ .%R RFC 4255
+diff --git a/ssh-keysign.8 b/ssh-keysign.1m
+similarity index 97%
+rename from ssh-keysign.8
+rename to ssh-keysign.1m
+index 19b0dbc5..9ce1e619 100644
 --- a/ssh-keysign.8
-+++ /dev/null
-@@ -1,93 +0,0 @@
--.\" $OpenBSD: ssh-keysign.8,v 1.15 2016/02/17 07:38:19 jmc Exp $
--.\"
--.\" Copyright (c) 2002 Markus Friedl.  All rights reserved.
--.\"
--.\" Redistribution and use in source and binary forms, with or without
--.\" modification, are permitted provided that the following conditions
--.\" are met:
--.\" 1. Redistributions of source code must retain the above copyright
--.\"    notice, this list of conditions and the following disclaimer.
--.\" 2. Redistributions in binary form must reproduce the above copyright
--.\"    notice, this list of conditions and the following disclaimer in the
--.\"    documentation and/or other materials provided with the distribution.
--.\"
--.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
--.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
--.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
--.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
--.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
--.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
--.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
--.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
--.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--.\"
--.Dd $Mdocdate: February 17 2016 $
++++ b/ssh-keysign.1m
+@@ -23,7 +23,7 @@
+ .\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ .\"
+ .Dd $Mdocdate: February 17 2016 $
 -.Dt SSH-KEYSIGN 8
--.Os
--.Sh NAME
--.Nm ssh-keysign
--.Nd ssh helper program for host-based authentication
--.Sh SYNOPSIS
--.Nm
--.Sh DESCRIPTION
--.Nm
--is used by
--.Xr ssh 1
--to access the local host keys and generate the digital signature
--required during host-based authentication.
--.Pp
--.Nm
--is disabled by default and can only be enabled in the
--global client configuration file
--.Pa /etc/ssh/ssh_config
--by setting
--.Cm EnableSSHKeysign
--to
--.Dq yes .
--.Pp
--.Nm
--is not intended to be invoked by the user, but from
--.Xr ssh 1 .
--See
--.Xr ssh 1
--and
++.Dt SSH-KEYSIGN 1M
+ .Os
+ .Sh NAME
+ .Nm ssh-keysign
+@@ -52,7 +52,7 @@ is not intended to be invoked by the user, but from
+ See
+ .Xr ssh 1
+ and
 -.Xr sshd 8
--for more information about host-based authentication.
--.Sh FILES
--.Bl -tag -width Ds -compact
--.It Pa /etc/ssh/ssh_config
--Controls whether
--.Nm
--is enabled.
--.Pp
--.It Pa /etc/ssh/ssh_host_dsa_key
--.It Pa /etc/ssh/ssh_host_ecdsa_key
--.It Pa /etc/ssh/ssh_host_ed25519_key
--.It Pa /etc/ssh/ssh_host_rsa_key
--These files contain the private parts of the host keys used to
--generate the digital signature.
--They should be owned by root, readable only by root, and not
--accessible to others.
--Since they are readable only by root,
--.Nm
--must be set-uid root if host-based authentication is used.
--.Pp
--.It Pa /etc/ssh/ssh_host_dsa_key-cert.pub
--.It Pa /etc/ssh/ssh_host_ecdsa_key-cert.pub
--.It Pa /etc/ssh/ssh_host_ed25519_key-cert.pub
--.It Pa /etc/ssh/ssh_host_rsa_key-cert.pub
--If these files exist they are assumed to contain public certificate
--information corresponding with the private keys above.
--.El
--.Sh SEE ALSO
--.Xr ssh 1 ,
--.Xr ssh-keygen 1 ,
++.Xr sshd 1M
+ for more information about host-based authentication.
+ .Sh FILES
+ .Bl -tag -width Ds -compact
+@@ -83,8 +83,8 @@ information corresponding with the private keys above.
+ .Sh SEE ALSO
+ .Xr ssh 1 ,
+ .Xr ssh-keygen 1 ,
 -.Xr ssh_config 5 ,
 -.Xr sshd 8
--.Sh HISTORY
--.Nm
--first appeared in
--.Ox 3.2 .
--.Sh AUTHORS
--.An Markus Friedl Aq Mt markus@openbsd.org
-diff --git a/ssh-pkcs11-helper.1m b/ssh-pkcs11-helper.1m
-new file mode 100644
-index 00000000..646b1fab
---- /dev/null
-+++ b/ssh-pkcs11-helper.1m
-@@ -0,0 +1,43 @@
-+.\" $OpenBSD: ssh-pkcs11-helper.8,v 1.4 2013/07/16 00:07:52 schwarze Exp $
-+.\"
-+.\" Copyright (c) 2010 Markus Friedl.  All rights reserved.
-+.\"
-+.\" Permission to use, copy, modify, and distribute this software for any
-+.\" purpose with or without fee is hereby granted, provided that the above
-+.\" copyright notice and this permission notice appear in all copies.
-+.\"
-+.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-+.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-+.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-+.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-+.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-+.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-+.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-+.\"
-+.Dd $Mdocdate: July 16 2013 $
-+.Dt SSH-PKCS11-HELPER 1M
-+.Os
-+.Sh NAME
-+.Nm ssh-pkcs11-helper
-+.Nd ssh-agent helper program for PKCS#11 support
-+.Sh SYNOPSIS
-+.Nm
-+.Sh DESCRIPTION
-+.Nm
-+is used by
-+.Xr ssh-agent 1
-+to access keys provided by a PKCS#11 token.
-+.Pp
-+.Nm
-+is not intended to be invoked by the user, but from
-+.Xr ssh-agent 1 .
-+.Sh SEE ALSO
-+.Xr ssh 1 ,
-+.Xr ssh-add 1 ,
-+.Xr ssh-agent 1
-+.Sh HISTORY
-+.Nm
-+first appeared in
-+.Ox 4.7 .
-+.Sh AUTHORS
-+.An Markus Friedl Aq Mt markus@openbsd.org
-diff --git a/ssh-pkcs11-helper.8 b/ssh-pkcs11-helper.8
-deleted file mode 100644
-index 3728c4e4..00000000
++.Xr ssh_config 4 ,
++.Xr sshd 1M
+ .Sh HISTORY
+ .Nm
+ first appeared in
+diff --git a/ssh-pkcs11-helper.8 b/ssh-pkcs11-helper.1m
+similarity index 98%
+rename from ssh-pkcs11-helper.8
+rename to ssh-pkcs11-helper.1m
+index 3728c4e4..646b1fab 100644
 --- a/ssh-pkcs11-helper.8
-+++ /dev/null
-@@ -1,43 +0,0 @@
--.\" $OpenBSD: ssh-pkcs11-helper.8,v 1.4 2013/07/16 00:07:52 schwarze Exp $
--.\"
--.\" Copyright (c) 2010 Markus Friedl.  All rights reserved.
--.\"
--.\" Permission to use, copy, modify, and distribute this software for any
--.\" purpose with or without fee is hereby granted, provided that the above
--.\" copyright notice and this permission notice appear in all copies.
--.\"
--.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
--.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
--.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
--.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
--.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
--.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
--.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--.\"
--.Dd $Mdocdate: July 16 2013 $
++++ b/ssh-pkcs11-helper.1m
+@@ -15,7 +15,7 @@
+ .\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ .\"
+ .Dd $Mdocdate: July 16 2013 $
 -.Dt SSH-PKCS11-HELPER 8
--.Os
--.Sh NAME
--.Nm ssh-pkcs11-helper
--.Nd ssh-agent helper program for PKCS#11 support
--.Sh SYNOPSIS
--.Nm
--.Sh DESCRIPTION
--.Nm
--is used by
--.Xr ssh-agent 1
--to access keys provided by a PKCS#11 token.
--.Pp
--.Nm
--is not intended to be invoked by the user, but from
--.Xr ssh-agent 1 .
--.Sh SEE ALSO
--.Xr ssh 1 ,
--.Xr ssh-add 1 ,
--.Xr ssh-agent 1
--.Sh HISTORY
--.Nm
--first appeared in
--.Ox 4.7 .
--.Sh AUTHORS
--.An Markus Friedl Aq Mt markus@openbsd.org
++.Dt SSH-PKCS11-HELPER 1M
+ .Os
+ .Sh NAME
+ .Nm ssh-pkcs11-helper
 diff --git a/ssh.1 b/ssh.1
-index 4011c65a..df81563e 100644
+index 7760c307..365cfb8d 100644
 --- a/ssh.1
 +++ b/ssh.1
-@@ -173,7 +173,7 @@ listed in order of preference.
+@@ -160,7 +160,7 @@ listed in order of preference.
  See the
  .Cm Ciphers
  keyword in
@@ -1275,7 +535,7 @@ index 4011c65a..df81563e 100644
  for more information.
  .Pp
  .It Fl D Xo
-@@ -417,7 +417,7 @@ mode with confirmation required before slave connections are accepted.
+@@ -398,7 +398,7 @@ before each operation that changes the multiplexing state
  Refer to the description of
  .Cm ControlMaster
  in
@@ -1284,7 +544,7 @@ index 4011c65a..df81563e 100644
  for details.
  .Pp
  .It Fl m Ar mac_spec
-@@ -476,7 +476,7 @@ Can be used to give options in the format used in the configuration file.
+@@ -457,7 +457,7 @@ Can be used to give options in the format used in the configuration file.
  This is useful for specifying options for which there is no separate
  command-line flag.
  For full details of the options listed below, and their possible values, see
@@ -1293,7 +553,7 @@ index 4011c65a..df81563e 100644
  .Pp
  .Bl -tag -width Ds -offset indent -compact
  .It AddKeysToAgent
-@@ -657,7 +657,7 @@ Specifying a remote
+@@ -649,7 +649,7 @@ Specifying a remote
  will only succeed if the server's
  .Cm GatewayPorts
  option is enabled (see
@@ -1302,7 +562,7 @@ index 4011c65a..df81563e 100644
  .Pp
  If the
  .Ar port
-@@ -679,7 +679,7 @@ Refer to the description of
+@@ -671,7 +671,7 @@ Refer to the description of
  and
  .Cm ControlMaster
  in
@@ -1311,16 +571,16 @@ index 4011c65a..df81563e 100644
  for details.
  .Pp
  .It Fl s
-@@ -758,7 +758,7 @@ See also the
+@@ -750,7 +750,7 @@ See also the
  and
  .Cm TunnelDevice
  directives in
 -.Xr ssh_config 5 .
 +.Xr ssh_config 4 .
+ .Pp
  If the
  .Cm Tunnel
- directive is unset, it is set to the default tunnel mode, which is
-@@ -782,7 +782,7 @@ Please refer to the
+@@ -779,7 +779,7 @@ Please refer to the
  option and the
  .Cm ForwardX11Trusted
  directive in
@@ -1329,24 +589,33 @@ index 4011c65a..df81563e 100644
  for more information.
  .Pp
  .It Fl x
-@@ -804,14 +804,14 @@ By default this information is sent to stderr.
+@@ -801,9 +801,23 @@ By default this information is sent to stderr.
  may additionally obtain configuration data from
  a per-user configuration file and a system-wide configuration file.
  The file format and configuration options are described in
 -.Xr ssh_config 5 .
 +.Xr ssh_config 4 .
  .Sh AUTHENTICATION
- The OpenSSH SSH client supports SSH protocols 1 and 2.
- The default is to use protocol 2 only,
- though this can be changed via the
- .Cm Protocol
- option in
--.Xr ssh_config 5
+-The OpenSSH SSH client supports SSH protocol 2.
++The OpenSSH SSH client supports SSH protocols 1 and 2.
++The default is to use protocol 2 only,
++though this can be changed via the
++.Cm Protocol
++option in
 +.Xr ssh_config 4
- or the
- .Fl 1
- and
-@@ -946,7 +946,7 @@ See
++or the
++.Fl 1
++and
++.Fl 2
++options (see above).
++Protocol 1 should not be used
++and is only offered to support legacy devices.
++It suffers from a number of cryptographic weaknesses
++and doesn't support many of the advanced features available for protocol 2.
+ .Pp
+ The methods available for authentication are:
+ GSSAPI-based authentication,
+@@ -936,7 +950,7 @@ See
  and (optionally) the
  .Cm AddKeysToAgent
  directive in
@@ -1355,7 +624,7 @@ index 4011c65a..df81563e 100644
  for more information.
  .Pp
  Challenge-response authentication works as follows:
-@@ -1078,7 +1078,7 @@ for dynamic port-forwardings.
+@@ -1068,7 +1082,7 @@ for dynamic port-forwardings.
  allows the user to execute a local command if the
  .Ic PermitLocalCommand
  option is enabled in
@@ -1364,7 +633,7 @@ index 4011c65a..df81563e 100644
  Basic help is available, using the
  .Fl h
  option.
-@@ -1280,7 +1280,7 @@ Are you sure you want to continue connecting (yes/no)?
+@@ -1270,7 +1284,7 @@ Are you sure you want to continue connecting (yes/no)?
  See the
  .Cm VerifyHostKeyDNS
  option in
@@ -1373,7 +642,7 @@ index 4011c65a..df81563e 100644
  for more information.
  .Sh SSH-BASED VIRTUAL PRIVATE NETWORKS
  .Nm
-@@ -1290,7 +1290,7 @@ using the
+@@ -1280,7 +1294,7 @@ using the
  network pseudo-device,
  allowing two networks to be joined securely.
  The
@@ -1382,7 +651,7 @@ index 4011c65a..df81563e 100644
  configuration option
  .Cm PermitTunnel
  controls whether the server supports this,
-@@ -1440,7 +1440,7 @@ change their environment.
+@@ -1441,7 +1455,7 @@ change their environment.
  For more information, see the
  .Cm PermitUserEnvironment
  option in
@@ -1391,7 +660,7 @@ index 4011c65a..df81563e 100644
  .Sh FILES
  .Bl -tag -width Ds -compact
  .It Pa ~/.rhosts
-@@ -1448,7 +1448,7 @@ This file is used for host-based authentication (see above).
+@@ -1449,7 +1463,7 @@ This file is used for host-based authentication (see above).
  On some machines this file may need to be
  world-readable if the user's home directory is on an NFS partition,
  because
@@ -1400,7 +669,7 @@ index 4011c65a..df81563e 100644
  reads it as root.
  Additionally, this file must be owned by the user,
  and must not have write permissions for anyone else.
-@@ -1473,7 +1473,7 @@ and not accessible by others.
+@@ -1474,7 +1488,7 @@ and not accessible by others.
  Lists the public keys (DSA, ECDSA, Ed25519, RSA)
  that can be used for logging in as this user.
  The format of this file is described in the
@@ -1409,7 +678,7 @@ index 4011c65a..df81563e 100644
  manual page.
  This file is not highly sensitive, but the recommended
  permissions are read/write for the user, and not accessible by others.
-@@ -1481,7 +1481,7 @@ permissions are read/write for the user, and not accessible by others.
+@@ -1482,7 +1496,7 @@ permissions are read/write for the user, and not accessible by others.
  .It Pa ~/.ssh/config
  This is the per-user configuration file.
  The file format and configuration options are described in
@@ -1418,7 +687,7 @@ index 4011c65a..df81563e 100644
  Because of the potential for abuse, this file must have strict permissions:
  read/write for the user, and not writable by others.
  .Pp
-@@ -1518,7 +1518,7 @@ sensitive and can (but need not) be readable by anyone.
+@@ -1517,7 +1531,7 @@ sensitive and can (but need not) be readable by anyone.
  Contains a list of host keys for all hosts the user has logged into
  that are not already in the systemwide list of known host keys.
  See
@@ -1427,7 +696,7 @@ index 4011c65a..df81563e 100644
  for further details of the format of this file.
  .Pp
  .It Pa ~/.ssh/rc
-@@ -1527,7 +1527,7 @@ Commands in this file are executed by
+@@ -1526,7 +1540,7 @@ Commands in this file are executed by
  when the user logs in, just before the user's shell (or command) is
  started.
  See the
@@ -1436,7 +705,7 @@ index 4011c65a..df81563e 100644
  manual page for more information.
  .Pp
  .It Pa /etc/hosts.equiv
-@@ -1543,7 +1543,7 @@ rlogin/rsh.
+@@ -1542,7 +1556,7 @@ rlogin/rsh.
  .It Pa /etc/ssh/ssh_config
  Systemwide configuration file.
  The file format and configuration options are described in
@@ -1445,7 +714,7 @@ index 4011c65a..df81563e 100644
  .Pp
  .It Pa /etc/ssh/ssh_host_key
  .It Pa /etc/ssh/ssh_host_dsa_key
-@@ -1560,7 +1560,7 @@ system administrator to contain the public host keys of all machines in the
+@@ -1559,7 +1573,7 @@ system administrator to contain the public host keys of all machines in the
  organization.
  It should be world-readable.
  See
@@ -1454,7 +723,7 @@ index 4011c65a..df81563e 100644
  for further details of the format of this file.
  .Pp
  .It Pa /etc/ssh/sshrc
-@@ -1568,7 +1568,7 @@ Commands in this file are executed by
+@@ -1567,7 +1581,7 @@ Commands in this file are executed by
  .Nm
  when the user logs in, just before the user's shell (or command) is started.
  See the
@@ -1463,7 +732,7 @@ index 4011c65a..df81563e 100644
  manual page for more information.
  .El
  .Sh EXIT STATUS
-@@ -1583,9 +1583,9 @@ if an error occurred.
+@@ -1582,9 +1596,9 @@ if an error occurred.
  .Xr ssh-keygen 1 ,
  .Xr ssh-keyscan 1 ,
  .Xr tun 4 ,
@@ -1476,8868 +745,633 @@ index 4011c65a..df81563e 100644
  .Sh STANDARDS
  .Rs
  .%A S. Lehtinen
-diff --git a/ssh_config.4 b/ssh_config.4
-new file mode 100644
-index 00000000..ff5dc74b
---- /dev/null
+diff --git a/ssh_config.5 b/ssh_config.4
+similarity index 99%
+rename from ssh_config.5
+rename to ssh_config.4
+index 4d5b01d3..d9e46862 100644
+--- a/ssh_config.5
 +++ b/ssh_config.4
-@@ -0,0 +1,1778 @@
-+.\"
-+.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
-+.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
-+.\"                    All rights reserved
-+.\"
-+.\" As far as I am concerned, the code I have written for this software
-+.\" can be used freely for any purpose.  Any derived versions of this
-+.\" software must be clearly marked as such, and if the derived work is
-+.\" incompatible with the protocol description in the RFC file, it must be
-+.\" called by a name other than "ssh" or "Secure Shell".
-+.\"
-+.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
-+.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
-+.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
-+.\"
-+.\" Redistribution and use in source and binary forms, with or without
-+.\" modification, are permitted provided that the following conditions
-+.\" are met:
-+.\" 1. Redistributions of source code must retain the above copyright
-+.\"    notice, this list of conditions and the following disclaimer.
-+.\" 2. Redistributions in binary form must reproduce the above copyright
-+.\"    notice, this list of conditions and the following disclaimer in the
-+.\"    documentation and/or other materials provided with the distribution.
-+.\"
-+.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-+.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-+.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-+.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-+.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-+.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-+.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-+.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-+.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-+.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-+.\"
-+.\" $OpenBSD: ssh_config.5,v 1.240 2016/10/15 19:56:25 jmc Exp $
-+.Dd $Mdocdate: October 15 2016 $
+@@ -35,7 +35,7 @@
+ .\"
+ .\" $OpenBSD: ssh_config.5,v 1.286 2018/10/03 06:38:35 djm Exp $
+ .Dd $Mdocdate: October 3 2018 $
+-.Dt SSH_CONFIG 5
 +.Dt SSH_CONFIG 4
-+.Os
-+.Sh NAME
-+.Nm ssh_config
-+.Nd OpenSSH SSH client configuration files
-+.Sh SYNOPSIS
-+.Nm ~/.ssh/config
-+.Nm /etc/ssh/ssh_config
-+.Sh DESCRIPTION
-+.Xr ssh 1
-+obtains configuration data from the following sources in
-+the following order:
-+.Pp
-+.Bl -enum -offset indent -compact
-+.It
-+command-line options
-+.It
-+user's configuration file
-+.Pq Pa ~/.ssh/config
-+.It
-+system-wide configuration file
-+.Pq Pa /etc/ssh/ssh_config
-+.El
-+.Pp
-+For each parameter, the first obtained value
-+will be used.
-+The configuration files contain sections separated by
-+.Cm Host
-+specifications, and that section is only applied for hosts that
-+match one of the patterns given in the specification.
-+The matched host name is usually the one given on the command line
-+(see the
-+.Cm CanonicalizeHostname
-+option for exceptions).
-+.Pp
-+Since the first obtained value for each parameter is used, more
-+host-specific declarations should be given near the beginning of the
-+file, and general defaults at the end.
-+.Pp
-+The file contains keyword-argument pairs, one per line.
-+Lines starting with
-+.Ql #
-+and empty lines are interpreted as comments.
-+Arguments may optionally be enclosed in double quotes
-+.Pq \&"
-+in order to represent arguments containing spaces.
-+Configuration options may be separated by whitespace or
-+optional whitespace and exactly one
-+.Ql = ;
-+the latter format is useful to avoid the need to quote whitespace
-+when specifying configuration options using the
-+.Nm ssh ,
-+.Nm scp ,
-+and
-+.Nm sftp
-+.Fl o
-+option.
-+.Pp
-+The possible
-+keywords and their meanings are as follows (note that
-+keywords are case-insensitive and arguments are case-sensitive):
-+.Bl -tag -width Ds
-+.It Cm Host
-+Restricts the following declarations (up to the next
-+.Cm Host
-+or
-+.Cm Match
-+keyword) to be only for those hosts that match one of the patterns
-+given after the keyword.
-+If more than one pattern is provided, they should be separated by whitespace.
-+A single
-+.Ql *
-+as a pattern can be used to provide global
-+defaults for all hosts.
-+The host is usually the
-+.Ar hostname
-+argument given on the command line
-+(see the
-+.Cm CanonicalizeHostname
-+keyword for exceptions).
-+.Pp
-+A pattern entry may be negated by prefixing it with an exclamation mark
-+.Pq Sq !\& .
-+If a negated entry is matched, then the
-+.Cm Host
-+entry is ignored, regardless of whether any other patterns on the line
-+match.
-+Negated matches are therefore useful to provide exceptions for wildcard
-+matches.
-+.Pp
-+See
-+.Sx PATTERNS
-+for more information on patterns.
-+.It Cm Match
-+Restricts the following declarations (up to the next
-+.Cm Host
-+or
-+.Cm Match
-+keyword) to be used only when the conditions following the
-+.Cm Match
-+keyword are satisfied.
-+Match conditions are specified using one or more criteria
-+or the single token
-+.Cm all
-+which always matches.
-+The available criteria keywords are:
-+.Cm canonical ,
-+.Cm exec ,
-+.Cm host ,
-+.Cm originalhost ,
-+.Cm user ,
-+and
-+.Cm localuser .
-+The
-+.Cm all
-+criteria must appear alone or immediately after
-+.Cm canonical .
-+Other criteria may be combined arbitrarily.
-+All criteria but
-+.Cm all
-+and
-+.Cm canonical
-+require an argument.
-+Criteria may be negated by prepending an exclamation mark
-+.Pq Sq !\& .
-+.Pp
-+The
-+.Cm canonical
-+keyword matches only when the configuration file is being re-parsed
-+after hostname canonicalization (see the
-+.Cm CanonicalizeHostname
-+option.)
-+This may be useful to specify conditions that work with canonical host
-+names only.
-+The
-+.Cm exec
-+keyword executes the specified command under the user's shell.
-+If the command returns a zero exit status then the condition is considered true.
-+Commands containing whitespace characters must be quoted.
-+Arguments to
-+.Cm exec
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+.Pp
-+The other keywords' criteria must be single entries or comma-separated
-+lists and may use the wildcard and negation operators described in the
-+.Sx PATTERNS
-+section.
-+The criteria for the
-+.Cm host
-+keyword are matched against the target hostname, after any substitution
-+by the
-+.Cm Hostname
-+or
-+.Cm CanonicalizeHostname
-+options.
-+The
-+.Cm originalhost
-+keyword matches against the hostname as it was specified on the command-line.
-+The
-+.Cm user
-+keyword matches against the target username on the remote host.
-+The
-+.Cm localuser
-+keyword matches against the name of the local user running
-+.Xr ssh 1
-+(this keyword may be useful in system-wide
-+.Nm
-+files).
-+.It Cm AddKeysToAgent
-+Specifies whether keys should be automatically added to a running
-+.Xr ssh-agent 1 .
-+If this option is set to
-+.Cm yes
-+and a key is loaded from a file, the key and its passphrase are added to
-+the agent with the default lifetime, as if by
-+.Xr ssh-add 1 .
-+If this option is set to
-+.Cm ask ,
-+.Xr ssh 1
-+will require confirmation using the
-+.Ev SSH_ASKPASS
-+program before adding a key (see
-+.Xr ssh-add 1
-+for details).
-+If this option is set to
-+.Cm confirm ,
-+each use of the key must be confirmed, as if the
-+.Fl c
-+option was specified to
-+.Xr ssh-add 1 .
-+If this option is set to
-+.Cm no ,
-+no keys are added to the agent.
-+The argument must be
-+.Cm yes ,
-+.Cm confirm ,
-+.Cm ask ,
-+or
-+.Cm no
-+(the default).
-+.It Cm AddressFamily
-+Specifies which address family to use when connecting.
-+Valid arguments are
-+.Cm any
-+(the default),
-+.Cm inet
-+(use IPv4 only), or
-+.Cm inet6
-+(use IPv6 only).
-+.It Cm BatchMode
-+If set to
-+.Cm yes ,
-+passphrase/password querying will be disabled.
-+This option is useful in scripts and other batch jobs where no user
-+is present to supply the password.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm BindAddress
-+Use the specified address on the local machine as the source address of
-+the connection.
-+Only useful on systems with more than one address.
-+Note that this option does not work if
-+.Cm UsePrivilegedPort
-+is set to
-+.Cm yes .
-+.It Cm CanonicalDomains
-+When
-+.Cm CanonicalizeHostname
-+is enabled, this option specifies the list of domain suffixes in which to
-+search for the specified destination host.
-+.It Cm CanonicalizeFallbackLocal
-+Specifies whether to fail with an error when hostname canonicalization fails.
-+The default,
-+.Cm yes ,
-+will attempt to look up the unqualified hostname using the system resolver's
-+search rules.
-+A value of
-+.Cm no
-+will cause
-+.Xr ssh 1
-+to fail instantly if
-+.Cm CanonicalizeHostname
-+is enabled and the target hostname cannot be found in any of the domains
-+specified by
-+.Cm CanonicalDomains .
-+.It Cm CanonicalizeHostname
-+Controls whether explicit hostname canonicalization is performed.
-+The default,
-+.Cm no ,
-+is not to perform any name rewriting and let the system resolver handle all
-+hostname lookups.
-+If set to
-+.Cm yes
-+then, for connections that do not use a
-+.Cm ProxyCommand ,
-+.Xr ssh 1
-+will attempt to canonicalize the hostname specified on the command line
-+using the
-+.Cm CanonicalDomains
-+suffixes and
-+.Cm CanonicalizePermittedCNAMEs
-+rules.
-+If
-+.Cm CanonicalizeHostname
-+is set to
-+.Cm always ,
-+then canonicalization is applied to proxied connections too.
-+.Pp
-+If this option is enabled, then the configuration files are processed
-+again using the new target name to pick up any new configuration in matching
-+.Cm Host
-+and
-+.Cm Match
-+stanzas.
-+.It Cm CanonicalizeMaxDots
-+Specifies the maximum number of dot characters in a hostname before
-+canonicalization is disabled.
-+The default, 1,
-+allows a single dot (i.e. hostname.subdomain).
-+.It Cm CanonicalizePermittedCNAMEs
-+Specifies rules to determine whether CNAMEs should be followed when
-+canonicalizing hostnames.
-+The rules consist of one or more arguments of
-+.Ar source_domain_list : Ns Ar target_domain_list ,
-+where
-+.Ar source_domain_list
-+is a pattern-list of domains that may follow CNAMEs in canonicalization,
-+and
-+.Ar target_domain_list
-+is a pattern-list of domains that they may resolve to.
-+.Pp
-+For example,
-+.Qq *.a.example.com:*.b.example.com,*.c.example.com
-+will allow hostnames matching
-+.Qq *.a.example.com
-+to be canonicalized to names in the
-+.Qq *.b.example.com
-+or
-+.Qq *.c.example.com
-+domains.
-+.It Cm CertificateFile
-+Specifies a file from which the user's certificate is read.
-+A corresponding private key must be provided separately in order
-+to use this certificate either
-+from an
-+.Cm IdentityFile
-+directive or
-+.Fl i
-+flag to
-+.Xr ssh 1 ,
-+via
-+.Xr ssh-agent 1 ,
-+or via a
-+.Cm PKCS11Provider .
-+.Pp
-+Arguments to
-+.Cm CertificateFile
-+may use the tilde syntax to refer to a user's home directory
-+or the tokens described in the
-+.Sx TOKENS
-+section.
-+.Pp
-+It is possible to have multiple certificate files specified in
-+configuration files; these certificates will be tried in sequence.
-+Multiple
-+.Cm CertificateFile
-+directives will add to the list of certificates used for
-+authentication.
-+.It Cm ChallengeResponseAuthentication
-+Specifies whether to use challenge-response authentication.
-+The argument to this keyword must be
-+.Cm yes
-+(the default)
-+or
-+.Cm no .
-+.It Cm CheckHostIP
-+If set to
-+.Cm yes
-+(the default),
-+.Xr ssh 1
-+will additionally check the host IP address in the
-+.Pa known_hosts
-+file.
-+This allows it to detect if a host key changed due to DNS spoofing
-+and will add addresses of destination hosts to
-+.Pa ~/.ssh/known_hosts
-+in the process, regardless of the setting of
-+.Cm StrictHostKeyChecking .
-+If the option is set to
-+.Cm no ,
-+the check will not be executed.
-+.It Cm Cipher
-+Specifies the cipher to use for encrypting the session
-+in protocol version 1.
-+Currently,
-+.Cm blowfish ,
-+.Cm 3des
-+(the default),
-+and
-+.Cm des
-+are supported,
-+though
-+.Cm des
-+is only supported in the
-+.Xr ssh 1
-+client for interoperability with legacy protocol 1 implementations;
-+its use is strongly discouraged due to cryptographic weaknesses.
-+.It Cm Ciphers
-+Specifies the ciphers allowed for protocol version 2
-+in order of preference.
-+Multiple ciphers must be comma-separated.
-+If the specified value begins with a
-+.Sq +
-+character, then the specified ciphers will be appended to the default set
-+instead of replacing them.
-+.Pp
-+The supported ciphers are:
-+.Bd -literal -offset indent
-+3des-cbc
-+aes128-cbc
-+aes192-cbc
-+aes256-cbc
-+aes128-ctr
-+aes192-ctr
-+aes256-ctr
-+aes128-gcm@openssh.com
-+aes256-gcm@openssh.com
-+arcfour
-+arcfour128
-+arcfour256
-+blowfish-cbc
-+cast128-cbc
-+chacha20-poly1305@openssh.com
-+.Ed
-+.Pp
-+The default is:
-+.Bd -literal -offset indent
-+chacha20-poly1305@openssh.com,
-+aes128-ctr,aes192-ctr,aes256-ctr,
-+aes128-gcm@openssh.com,aes256-gcm@openssh.com,
-+aes128-cbc,aes192-cbc,aes256-cbc
-+.Ed
-+.Pp
-+The list of available ciphers may also be obtained using
-+.Qq ssh -Q cipher .
-+.It Cm ClearAllForwardings
-+Specifies that all local, remote, and dynamic port forwardings
-+specified in the configuration files or on the command line be
-+cleared.
-+This option is primarily useful when used from the
-+.Xr ssh 1
-+command line to clear port forwardings set in
-+configuration files, and is automatically set by
-+.Xr scp 1
-+and
-+.Xr sftp 1 .
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm Compression
-+Specifies whether to use compression.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm CompressionLevel
-+Specifies the compression level to use if compression is enabled.
-+The argument must be an integer from 1 (fast) to 9 (slow, best).
-+The default level is 6, which is good for most applications.
-+The meaning of the values is the same as in
-+.Xr gzip 1 .
-+Note that this option applies to protocol version 1 only.
-+.It Cm ConnectionAttempts
-+Specifies the number of tries (one per second) to make before exiting.
-+The argument must be an integer.
-+This may be useful in scripts if the connection sometimes fails.
-+The default is 1.
-+.It Cm ConnectTimeout
-+Specifies the timeout (in seconds) used when connecting to the
-+SSH server, instead of using the default system TCP timeout.
-+This value is used only when the target is down or really unreachable,
-+not when it refuses the connection.
-+.It Cm ControlMaster
-+Enables the sharing of multiple sessions over a single network connection.
-+When set to
-+.Cm yes ,
-+.Xr ssh 1
-+will listen for connections on a control socket specified using the
-+.Cm ControlPath
-+argument.
-+Additional sessions can connect to this socket using the same
-+.Cm ControlPath
-+with
-+.Cm ControlMaster
-+set to
-+.Cm no
-+(the default).
-+These sessions will try to reuse the master instance's network connection
-+rather than initiating new ones, but will fall back to connecting normally
-+if the control socket does not exist, or is not listening.
-+.Pp
-+Setting this to
-+.Cm ask
-+will cause
-+.Xr ssh 1
-+to listen for control connections, but require confirmation using
-+.Xr ssh-askpass 1 .
-+If the
-+.Cm ControlPath
-+cannot be opened,
-+.Xr ssh 1
-+will continue without connecting to a master instance.
-+.Pp
-+X11 and
-+.Xr ssh-agent 1
-+forwarding is supported over these multiplexed connections, however the
-+display and agent forwarded will be the one belonging to the master
-+connection i.e. it is not possible to forward multiple displays or agents.
-+.Pp
-+Two additional options allow for opportunistic multiplexing: try to use a
-+master connection but fall back to creating a new one if one does not already
-+exist.
-+These options are:
-+.Cm auto
-+and
-+.Cm autoask .
-+The latter requires confirmation like the
-+.Cm ask
-+option.
-+.It Cm ControlPath
-+Specify the path to the control socket used for connection sharing as described
-+in the
-+.Cm ControlMaster
-+section above or the string
-+.Cm none
-+to disable connection sharing.
-+Arguments to
-+.Cm ControlPath
-+may use the tilde syntax to refer to a user's home directory
-+or the tokens described in the
-+.Sx TOKENS
-+section.
-+It is recommended that any
-+.Cm ControlPath
-+used for opportunistic connection sharing include
-+at least %h, %p, and %r (or alternatively %C) and be placed in a directory
-+that is not writable by other users.
-+This ensures that shared connections are uniquely identified.
-+.It Cm ControlPersist
-+When used in conjunction with
-+.Cm ControlMaster ,
-+specifies that the master connection should remain open
-+in the background (waiting for future client connections)
-+after the initial client connection has been closed.
-+If set to
-+.Cm no ,
-+then the master connection will not be placed into the background,
-+and will close as soon as the initial client connection is closed.
-+If set to
-+.Cm yes
-+or 0,
-+then the master connection will remain in the background indefinitely
-+(until killed or closed via a mechanism such as the
-+.Qq ssh -O exit ) .
-+If set to a time in seconds, or a time in any of the formats documented in
+ .Os
+ .Sh NAME
+ .Nm ssh_config
+@@ -552,7 +552,7 @@ then the master connection will remain in the background indefinitely
+ (until killed or closed via a mechanism such as the
+ .Qq ssh -O exit ) .
+ If set to a time in seconds, or a time in any of the formats documented in
+-.Xr sshd_config 5 ,
 +.Xr sshd_config 4 ,
-+then the backgrounded master connection will automatically terminate
-+after it has remained idle (with no client connections) for the
-+specified time.
-+.It Cm DynamicForward
-+Specifies that a TCP port on the local machine be forwarded
-+over the secure channel, and the application
-+protocol is then used to determine where to connect to from the
-+remote machine.
-+.Pp
-+The argument must be
-+.Sm off
-+.Oo Ar bind_address : Oc Ar port .
-+.Sm on
-+IPv6 addresses can be specified by enclosing addresses in square brackets.
-+By default, the local port is bound in accordance with the
-+.Cm GatewayPorts
-+setting.
-+However, an explicit
-+.Ar bind_address
-+may be used to bind the connection to a specific address.
-+The
-+.Ar bind_address
-+of
-+.Cm localhost
-+indicates that the listening port be bound for local use only, while an
-+empty address or
-+.Sq *
-+indicates that the port should be available from all interfaces.
-+.Pp
-+Currently the SOCKS4 and SOCKS5 protocols are supported, and
-+.Xr ssh 1
-+will act as a SOCKS server.
-+Multiple forwardings may be specified, and
-+additional forwardings can be given on the command line.
-+Only the superuser can forward privileged ports.
-+.It Cm EnableSSHKeysign
-+Setting this option to
-+.Cm yes
-+in the global client configuration file
-+.Pa /etc/ssh/ssh_config
-+enables the use of the helper program
+ then the backgrounded master connection will automatically terminate
+ after it has remained idle (with no client connections) for the
+ specified time.
+@@ -594,7 +594,7 @@ Setting this option to
+ in the global client configuration file
+ .Pa /etc/ssh/ssh_config
+ enables the use of the helper program
+-.Xr ssh-keysign 8
 +.Xr ssh-keysign 1M
-+during
-+.Cm HostbasedAuthentication .
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+This option should be placed in the non-hostspecific section.
-+See
+ during
+ .Cm HostbasedAuthentication .
+ The argument must be
+@@ -604,7 +604,7 @@ or
+ (the default).
+ This option should be placed in the non-hostspecific section.
+ See
+-.Xr ssh-keysign 8
 +.Xr ssh-keysign 1M
-+for more information.
-+.It Cm EscapeChar
-+Sets the escape character (default:
-+.Ql ~ ) .
-+The escape character can also
-+be set on the command line.
-+The argument should be a single character,
-+.Ql ^
-+followed by a letter, or
-+.Cm none
-+to disable the escape
-+character entirely (making the connection transparent for binary
-+data).
-+.It Cm ExitOnForwardFailure
-+Specifies whether
-+.Xr ssh 1
-+should terminate the connection if it cannot set up all requested
-+dynamic, tunnel, local, and remote port forwardings, (e.g.\&
-+if either end is unable to bind and listen on a specified port).
-+Note that
-+.Cm ExitOnForwardFailure
-+does not apply to connections made over port forwardings and will not,
-+for example, cause
-+.Xr ssh 1
-+to exit if TCP connections to the ultimate forwarding destination fail.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm FingerprintHash
-+Specifies the hash algorithm used when displaying key fingerprints.
-+Valid options are:
-+.Cm md5
-+and
-+.Cm sha256
-+(the default).
-+.It Cm ForwardAgent
-+Specifies whether the connection to the authentication agent (if any)
-+will be forwarded to the remote machine.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.Pp
-+Agent forwarding should be enabled with caution.
-+Users with the ability to bypass file permissions on the remote host
-+(for the agent's Unix-domain socket)
-+can access the local agent through the forwarded connection.
-+An attacker cannot obtain key material from the agent,
-+however they can perform operations on the keys that enable them to
-+authenticate using the identities loaded into the agent.
-+.It Cm ForwardX11
-+Specifies whether X11 connections will be automatically redirected
-+over the secure channel and
-+.Ev DISPLAY
-+set.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.Pp
-+X11 forwarding should be enabled with caution.
-+Users with the ability to bypass file permissions on the remote host
-+(for the user's X11 authorization database)
-+can access the local X11 display through the forwarded connection.
-+An attacker may then be able to perform activities such as keystroke monitoring
-+if the
-+.Cm ForwardX11Trusted
-+option is also enabled.
-+.It Cm ForwardX11Timeout
-+Specify a timeout for untrusted X11 forwarding
-+using the format described in the
-+.Sx TIME FORMATS
-+section of
+ for more information.
+ .It Cm EscapeChar
+ Sets the escape character (default:
+@@ -682,7 +682,7 @@ Specify a timeout for untrusted X11 forwarding
+ using the format described in the
+ .Sx TIME FORMATS
+ section of
+-.Xr sshd_config 5 .
 +.Xr sshd_config 4 .
-+X11 connections received by
-+.Xr ssh 1
-+after this time will be refused.
-+The default is to disable untrusted X11 forwarding after twenty minutes has
-+elapsed.
-+.It Cm ForwardX11Trusted
-+If this option is set to
-+.Cm yes ,
-+remote X11 clients will have full access to the original X11 display.
-+.Pp
-+If this option is set to
-+.Cm no
-+(the default),
-+remote X11 clients will be considered untrusted and prevented
-+from stealing or tampering with data belonging to trusted X11
-+clients.
-+Furthermore, the
-+.Xr xauth 1
-+token used for the session will be set to expire after 20 minutes.
-+Remote clients will be refused access after this time.
-+.Pp
-+See the X11 SECURITY extension specification for full details on
-+the restrictions imposed on untrusted clients.
-+.It Cm GatewayPorts
-+Specifies whether remote hosts are allowed to connect to local
-+forwarded ports.
-+By default,
-+.Xr ssh 1
-+binds local port forwardings to the loopback address.
-+This prevents other remote hosts from connecting to forwarded ports.
-+.Cm GatewayPorts
-+can be used to specify that ssh
-+should bind local port forwardings to the wildcard address,
-+thus allowing remote hosts to connect to forwarded ports.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm GlobalKnownHostsFile
-+Specifies one or more files to use for the global
-+host key database, separated by whitespace.
-+The default is
-+.Pa /etc/ssh/ssh_known_hosts ,
-+.Pa /etc/ssh/ssh_known_hosts2 .
-+.It Cm GSSAPIAuthentication
-+Specifies whether user authentication based on GSSAPI is allowed.
-+The default is
-+.Cm no .
-+.It Cm GSSAPIDelegateCredentials
-+Forward (delegate) credentials to the server.
-+The default is
-+.Cm no .
-+.It Cm HashKnownHosts
-+Indicates that
-+.Xr ssh 1
-+should hash host names and addresses when they are added to
-+.Pa ~/.ssh/known_hosts .
-+These hashed names may be used normally by
-+.Xr ssh 1
-+and
+ X11 connections received by
+ .Xr ssh 1
+ after this time will be refused.
+@@ -748,7 +748,7 @@ should hash host names and addresses when they are added to
+ These hashed names may be used normally by
+ .Xr ssh 1
+ and
+-.Xr sshd 8 ,
 +.Xr sshd 1M ,
-+but they do not reveal identifying information should the file's contents
-+be disclosed.
-+The default is
-+.Cm no .
-+Note that existing names and addresses in known hosts files
-+will not be converted automatically,
-+but may be manually hashed using
-+.Xr ssh-keygen 1 .
-+.It Cm HostbasedAuthentication
-+Specifies whether to try rhosts based authentication with public key
-+authentication.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm HostbasedKeyTypes
-+Specifies the key types that will be used for hostbased authentication
-+as a comma-separated pattern list.
-+Alternately if the specified value begins with a
-+.Sq +
-+character, then the specified key types will be appended to the default set
-+instead of replacing them.
-+The default for this option is:
-+.Bd -literal -offset 3n
-+ecdsa-sha2-nistp256-cert-v01@openssh.com,
-+ecdsa-sha2-nistp384-cert-v01@openssh.com,
-+ecdsa-sha2-nistp521-cert-v01@openssh.com,
-+ssh-ed25519-cert-v01@openssh.com,
-+ssh-rsa-cert-v01@openssh.com,
-+ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
-+ssh-ed25519,ssh-rsa
-+.Ed
-+.Pp
-+The
-+.Fl Q
-+option of
-+.Xr ssh 1
-+may be used to list supported key types.
-+.It Cm HostKeyAlgorithms
-+Specifies the host key algorithms
-+that the client wants to use in order of preference.
-+Alternately if the specified value begins with a
-+.Sq +
-+character, then the specified key types will be appended to the default set
-+instead of replacing them.
-+The default for this option is:
-+.Bd -literal -offset 3n
-+ecdsa-sha2-nistp256-cert-v01@openssh.com,
-+ecdsa-sha2-nistp384-cert-v01@openssh.com,
-+ecdsa-sha2-nistp521-cert-v01@openssh.com,
-+ssh-ed25519-cert-v01@openssh.com,
-+ssh-rsa-cert-v01@openssh.com,
-+ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
-+ssh-ed25519,ssh-rsa
-+.Ed
-+.Pp
-+If hostkeys are known for the destination host then this default is modified
-+to prefer their algorithms.
-+.Pp
-+The list of available key types may also be obtained using
-+.Qq ssh -Q key .
-+.It Cm HostKeyAlias
-+Specifies an alias that should be used instead of the
-+real host name when looking up or saving the host key
-+in the host key database files.
-+This option is useful for tunneling SSH connections
-+or for multiple servers running on a single host.
-+.It Cm HostName
-+Specifies the real host name to log into.
-+This can be used to specify nicknames or abbreviations for hosts.
-+Arguments to
-+.Cm HostName
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+Numeric IP addresses are also permitted (both on the command line and in
-+.Cm HostName
-+specifications).
-+The default is the name given on the command line.
-+.It Cm IdentitiesOnly
-+Specifies that
-+.Xr ssh 1
-+should only use the authentication identity and certificate files explicitly
-+configured in the
-+.Nm
-+files
-+or passed on the
-+.Xr ssh 1
-+command-line,
-+even if
-+.Xr ssh-agent 1
-+or a
-+.Cm PKCS11Provider
-+offers more identities.
-+The argument to this keyword must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+This option is intended for situations where ssh-agent
-+offers many different identities.
-+.It Cm IdentityAgent
-+Specifies the
-+.Ux Ns -domain
-+socket used to communicate with the authentication agent.
-+.Pp
-+This option overrides the
-+.Ev SSH_AUTH_SOCK
-+environment variable and can be used to select a specific agent.
-+Setting the socket name to
-+.Cm none
-+disables the use of an authentication agent.
-+If the string
-+.Qq SSH_AUTH_SOCK
-+is specified, the location of the socket will be read from the
-+.Ev SSH_AUTH_SOCK
-+environment variable.
-+.Pp
-+Arguments to
-+.Cm IdentityAgent
-+may use the tilde syntax to refer to a user's home directory
-+or the tokens described in the
-+.Sx TOKENS
-+section.
-+.It Cm IdentityFile
-+Specifies a file from which the user's DSA, ECDSA, Ed25519 or RSA authentication
-+identity is read.
-+The default is
-+.Pa ~/.ssh/identity
-+for protocol version 1, and
-+.Pa ~/.ssh/id_dsa ,
-+.Pa ~/.ssh/id_ecdsa ,
-+.Pa ~/.ssh/id_ed25519
-+and
-+.Pa ~/.ssh/id_rsa
-+for protocol version 2.
-+Additionally, any identities represented by the authentication agent
-+will be used for authentication unless
-+.Cm IdentitiesOnly
-+is set.
-+If no certificates have been explicitly specified by
-+.Cm CertificateFile ,
-+.Xr ssh 1
-+will try to load certificate information from the filename obtained by
-+appending
-+.Pa -cert.pub
-+to the path of a specified
-+.Cm IdentityFile .
-+.Pp
-+Arguments to
-+.Cm IdentityFile
-+may use the tilde syntax to refer to a user's home directory
-+or the tokens described in the
-+.Sx TOKENS
-+section.
-+.Pp
-+It is possible to have
-+multiple identity files specified in configuration files; all these
-+identities will be tried in sequence.
-+Multiple
-+.Cm IdentityFile
-+directives will add to the list of identities tried (this behaviour
-+differs from that of other configuration directives).
-+.Pp
-+.Cm IdentityFile
-+may be used in conjunction with
-+.Cm IdentitiesOnly
-+to select which identities in an agent are offered during authentication.
-+.Cm IdentityFile
-+may also be used in conjunction with
-+.Cm CertificateFile
-+in order to provide any certificate also needed for authentication with
-+the identity.
-+.It Cm IgnoreUnknown
-+Specifies a pattern-list of unknown options to be ignored if they are
-+encountered in configuration parsing.
-+This may be used to suppress errors if
-+.Nm
-+contains options that are unrecognised by
-+.Xr ssh 1 .
-+It is recommended that
-+.Cm IgnoreUnknown
-+be listed early in the configuration file as it will not be applied
-+to unknown options that appear before it.
-+.It Cm Include
-+Include the specified configuration file(s).
-+Multiple pathnames may be specified and each pathname may contain
-+.Xr glob 3
-+wildcards and, for user configurations, shell-like
-+.Sq ~
-+references to user home directories.
-+Files without absolute paths are assumed to be in
-+.Pa ~/.ssh
-+if included in a user configuration file or
-+.Pa /etc/ssh
-+if included from the system configuration file.
-+.Cm Include
-+directive may appear inside a
-+.Cm Match
-+or
-+.Cm Host
-+block
-+to perform conditional inclusion.
-+.It Cm IPQoS
-+Specifies the IPv4 type-of-service or DSCP class for connections.
-+Accepted values are
-+.Cm af11 ,
-+.Cm af12 ,
-+.Cm af13 ,
-+.Cm af21 ,
-+.Cm af22 ,
-+.Cm af23 ,
-+.Cm af31 ,
-+.Cm af32 ,
-+.Cm af33 ,
-+.Cm af41 ,
-+.Cm af42 ,
-+.Cm af43 ,
-+.Cm cs0 ,
-+.Cm cs1 ,
-+.Cm cs2 ,
-+.Cm cs3 ,
-+.Cm cs4 ,
-+.Cm cs5 ,
-+.Cm cs6 ,
-+.Cm cs7 ,
-+.Cm ef ,
-+.Cm lowdelay ,
-+.Cm throughput ,
-+.Cm reliability ,
-+or a numeric value.
-+This option may take one or two arguments, separated by whitespace.
-+If one argument is specified, it is used as the packet class unconditionally.
-+If two values are specified, the first is automatically selected for
-+interactive sessions and the second for non-interactive sessions.
-+The default is
-+.Cm lowdelay
-+for interactive sessions and
-+.Cm throughput
-+for non-interactive sessions.
-+.It Cm KbdInteractiveAuthentication
-+Specifies whether to use keyboard-interactive authentication.
-+The argument to this keyword must be
-+.Cm yes
-+(the default)
-+or
-+.Cm no .
-+.It Cm KbdInteractiveDevices
-+Specifies the list of methods to use in keyboard-interactive authentication.
-+Multiple method names must be comma-separated.
-+The default is to use the server specified list.
-+The methods available vary depending on what the server supports.
-+For an OpenSSH server,
-+it may be zero or more of:
-+.Cm bsdauth ,
-+.Cm pam ,
-+and
-+.Cm skey .
-+.It Cm KexAlgorithms
-+Specifies the available KEX (Key Exchange) algorithms.
-+Multiple algorithms must be comma-separated.
-+Alternately if the specified value begins with a
-+.Sq +
-+character, then the specified methods will be appended to the default set
-+instead of replacing them.
-+The default is:
-+.Bd -literal -offset indent
-+curve25519-sha256,curve25519-sha256@libssh.org,
-+ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,
-+diffie-hellman-group-exchange-sha256,
-+diffie-hellman-group-exchange-sha1,
-+diffie-hellman-group14-sha1
-+.Ed
-+.Pp
-+The list of available key exchange algorithms may also be obtained using
-+.Qq ssh -Q kex .
-+.It Cm LocalCommand
-+Specifies a command to execute on the local machine after successfully
-+connecting to the server.
-+The command string extends to the end of the line, and is executed with
-+the user's shell.
-+Arguments to
-+.Cm LocalCommand
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+.Pp
-+The command is run synchronously and does not have access to the
-+session of the
-+.Xr ssh 1
-+that spawned it.
-+It should not be used for interactive commands.
-+.Pp
-+This directive is ignored unless
-+.Cm PermitLocalCommand
-+has been enabled.
-+.It Cm LocalForward
-+Specifies that a TCP port on the local machine be forwarded over
-+the secure channel to the specified host and port from the remote machine.
-+The first argument must be
-+.Sm off
-+.Oo Ar bind_address : Oc Ar port
-+.Sm on
-+and the second argument must be
-+.Ar host : Ns Ar hostport .
-+IPv6 addresses can be specified by enclosing addresses in square brackets.
-+Multiple forwardings may be specified, and additional forwardings can be
-+given on the command line.
-+Only the superuser can forward privileged ports.
-+By default, the local port is bound in accordance with the
-+.Cm GatewayPorts
-+setting.
-+However, an explicit
-+.Ar bind_address
-+may be used to bind the connection to a specific address.
-+The
-+.Ar bind_address
-+of
-+.Cm localhost
-+indicates that the listening port be bound for local use only, while an
-+empty address or
-+.Sq *
-+indicates that the port should be available from all interfaces.
-+.It Cm LogLevel
-+Gives the verbosity level that is used when logging messages from
-+.Xr ssh 1 .
-+The possible values are:
-+QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.
-+The default is INFO.
-+DEBUG and DEBUG1 are equivalent.
-+DEBUG2 and DEBUG3 each specify higher levels of verbose output.
-+.It Cm MACs
-+Specifies the MAC (message authentication code) algorithms
-+in order of preference.
-+The MAC algorithm is used for data integrity protection.
-+Multiple algorithms must be comma-separated.
-+If the specified value begins with a
-+.Sq +
-+character, then the specified algorithms will be appended to the default set
-+instead of replacing them.
-+.Pp
-+The algorithms that contain
-+.Qq -etm
-+calculate the MAC after encryption (encrypt-then-mac).
-+These are considered safer and their use recommended.
-+.Pp
-+The default is:
-+.Bd -literal -offset indent
-+umac-64-etm@openssh.com,umac-128-etm@openssh.com,
-+hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,
-+hmac-sha1-etm@openssh.com,
-+umac-64@openssh.com,umac-128@openssh.com,
-+hmac-sha2-256,hmac-sha2-512,hmac-sha1
-+.Ed
-+.Pp
-+The list of available MAC algorithms may also be obtained using
-+.Qq ssh -Q mac .
-+.It Cm NoHostAuthenticationForLocalhost
-+This option can be used if the home directory is shared across machines.
-+In this case localhost will refer to a different machine on each of
-+the machines and the user will get many warnings about changed host keys.
-+However, this option disables host authentication for localhost.
-+The argument to this keyword must be
-+.Cm yes
-+or
-+.Cm no .
-+(the default).
-+.It Cm NumberOfPasswordPrompts
-+Specifies the number of password prompts before giving up.
-+The argument to this keyword must be an integer.
-+The default is 3.
-+.It Cm PasswordAuthentication
-+Specifies whether to use password authentication.
-+The argument to this keyword must be
-+.Cm yes
-+(the default)
-+or
-+.Cm no .
-+.It Cm PermitLocalCommand
-+Allow local command execution via the
-+.Ic LocalCommand
-+option or using the
-+.Ic !\& Ns Ar command
-+escape sequence in
-+.Xr ssh 1 .
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm PKCS11Provider
-+Specifies which PKCS#11 provider to use.
-+The argument to this keyword is the PKCS#11 shared library
-+.Xr ssh 1
-+should use to communicate with a PKCS#11 token providing the user's
-+private RSA key.
-+.It Cm Port
-+Specifies the port number to connect on the remote host.
-+The default is 22.
-+.It Cm PreferredAuthentications
-+Specifies the order in which the client should try authentication methods.
-+This allows a client to prefer one method (e.g.\&
-+.Cm keyboard-interactive )
-+over another method (e.g.\&
-+.Cm password ) .
-+The default is:
-+.Bd -literal -offset indent
-+gssapi-with-mic,hostbased,publickey,
-+keyboard-interactive,password
-+.Ed
-+.It Cm Protocol
-+Specifies the protocol versions
-+.Xr ssh 1
-+should support in order of preference.
-+The possible values are 1 and 2.
-+Multiple versions must be comma-separated.
-+When this option is set to
-+.Cm 2,1
-+.Nm ssh
-+will try version 2 and fall back to version 1
-+if version 2 is not available.
-+The default is version 2.
-+Protocol 1 suffers from a number of cryptographic weaknesses and should
-+not be used.
-+It is only offered to support legacy devices.
-+.It Cm ProxyCommand
-+Specifies the command to use to connect to the server.
-+The command
-+string extends to the end of the line, and is executed
-+using the user's shell
-+.Ql exec
-+directive to avoid a lingering shell process.
-+.Pp
-+Arguments to
-+.Cm ProxyCommand
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+The command can be basically anything,
-+and should read from its standard input and write to its standard output.
-+It should eventually connect an
+ but they do not reveal identifying information should the file's contents
+ be disclosed.
+ The default is
+@@ -1198,7 +1198,7 @@ section.
+ The command can be basically anything,
+ and should read from its standard input and write to its standard output.
+ It should eventually connect an
+-.Xr sshd 8
 +.Xr sshd 1M
-+server running on some machine, or execute
-+.Ic sshd -i
-+somewhere.
-+Host key management will be done using the
-+HostName of the host being connected (defaulting to the name typed by
-+the user).
-+Setting the command to
-+.Cm none
-+disables this option entirely.
-+Note that
-+.Cm CheckHostIP
-+is not available for connects with a proxy command.
-+.Pp
-+This directive is useful in conjunction with
-+.Xr nc 1
-+and its proxy support.
-+For example, the following directive would connect via an HTTP proxy at
-+192.0.2.0:
-+.Bd -literal -offset 3n
-+ProxyCommand /usr/bin/nc -X connect -x 192.0.2.0:8080 %h %p
-+.Ed
-+.It Cm ProxyJump
-+Specifies one or more jump proxies as
-+.Xo
-+.Sm off
-+.Op Ar user No @
-+.Ar host
-+.Op : Ns Ar port
-+.Sm on
-+.Xc .
-+Multiple proxies may be separated by comma characters and will be visited
-+sequentially.
-+Setting this option will cause
-+.Xr ssh 1
-+to connect to the target host by first making a
-+.Xr ssh 1
-+connection to the specified
-+.Cm ProxyJump
-+host and then establishing a
-+TCP forwarding to the ultimate target from there.
-+.Pp
-+Note that this option will compete with the
-+.Cm ProxyCommand
-+option - whichever is specified first will prevent later instances of the
-+other from taking effect.
-+.It Cm ProxyUseFdpass
-+Specifies that
-+.Cm ProxyCommand
-+will pass a connected file descriptor back to
-+.Xr ssh 1
-+instead of continuing to execute and pass data.
-+The default is
-+.Cm no .
-+.It Cm PubkeyAcceptedKeyTypes
-+Specifies the key types that will be used for public key authentication
-+as a comma-separated pattern list.
-+Alternately if the specified value begins with a
-+.Sq +
-+character, then the key types after it will be appended to the default
-+instead of replacing it.
-+The default for this option is:
-+.Bd -literal -offset 3n
-+ecdsa-sha2-nistp256-cert-v01@openssh.com,
-+ecdsa-sha2-nistp384-cert-v01@openssh.com,
-+ecdsa-sha2-nistp521-cert-v01@openssh.com,
-+ssh-ed25519-cert-v01@openssh.com,
-+ssh-rsa-cert-v01@openssh.com,
-+ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
-+ssh-ed25519,ssh-rsa
-+.Ed
-+.Pp
-+The list of available key types may also be obtained using
-+.Qq ssh -Q key .
-+.It Cm PubkeyAuthentication
-+Specifies whether to try public key authentication.
-+The argument to this keyword must be
-+.Cm yes
-+(the default)
-+or
-+.Cm no .
-+.It Cm RekeyLimit
-+Specifies the maximum amount of data that may be transmitted before the
-+session key is renegotiated, optionally followed a maximum amount of
-+time that may pass before the session key is renegotiated.
-+The first argument is specified in bytes and may have a suffix of
-+.Sq K ,
-+.Sq M ,
-+or
-+.Sq G
-+to indicate Kilobytes, Megabytes, or Gigabytes, respectively.
-+The default is between
-+.Sq 1G
-+and
-+.Sq 4G ,
-+depending on the cipher.
-+The optional second value is specified in seconds and may use any of the
-+units documented in the
-+.Sx TIME FORMATS
-+section of
+ server running on some machine, or execute
+ .Ic sshd -i
+ somewhere.
+@@ -1304,7 +1304,7 @@ The optional second value is specified in seconds and may use any of the
+ units documented in the
+ .Sx TIME FORMATS
+ section of
+-.Xr sshd_config 5 .
 +.Xr sshd_config 4 .
-+The default value for
-+.Cm RekeyLimit
-+is
-+.Cm default none ,
-+which means that rekeying is performed after the cipher's default amount
-+of data has been sent or received and no time based rekeying is done.
-+.It Cm RemoteForward
-+Specifies that a TCP port on the remote machine be forwarded over
-+the secure channel to the specified host and port from the local machine.
-+The first argument must be
-+.Sm off
-+.Oo Ar bind_address : Oc Ar port
-+.Sm on
-+and the second argument must be
-+.Ar host : Ns Ar hostport .
-+IPv6 addresses can be specified by enclosing addresses in square brackets.
-+Multiple forwardings may be specified, and additional
-+forwardings can be given on the command line.
-+Privileged ports can be forwarded only when
-+logging in as root on the remote machine.
-+.Pp
-+If the
-+.Ar port
-+argument is 0,
-+the listen port will be dynamically allocated on the server and reported
-+to the client at run time.
-+.Pp
-+If the
-+.Ar bind_address
-+is not specified, the default is to only bind to loopback addresses.
-+If the
-+.Ar bind_address
-+is
-+.Ql *
-+or an empty string, then the forwarding is requested to listen on all
-+interfaces.
-+Specifying a remote
-+.Ar bind_address
-+will only succeed if the server's
-+.Cm GatewayPorts
-+option is enabled (see
+ The default value for
+ .Cm RekeyLimit
+ is
+@@ -1362,7 +1362,7 @@ Specifying a remote
+ will only succeed if the server's
+ .Cm GatewayPorts
+ option is enabled (see
+-.Xr sshd_config 5 ) .
 +.Xr sshd_config 4 ) .
-+.It Cm RequestTTY
-+Specifies whether to request a pseudo-tty for the session.
-+The argument may be one of:
-+.Cm no
-+(never request a TTY),
-+.Cm yes
-+(always request a TTY when standard input is a TTY),
-+.Cm force
-+(always request a TTY) or
-+.Cm auto
-+(request a TTY when opening a login session).
-+This option mirrors the
-+.Fl t
-+and
-+.Fl T
-+flags for
-+.Xr ssh 1 .
-+.It Cm RevokedHostKeys
-+Specifies revoked host public keys.
-+Keys listed in this file will be refused for host authentication.
-+Note that if this file does not exist or is not readable,
-+then host authentication will be refused for all hosts.
-+Keys may be specified as a text file, listing one public key per line, or as
-+an OpenSSH Key Revocation List (KRL) as generated by
-+.Xr ssh-keygen 1 .
-+For more information on KRLs, see the KEY REVOCATION LISTS section in
-+.Xr ssh-keygen 1 .
-+.It Cm RhostsRSAAuthentication
-+Specifies whether to try rhosts based authentication with RSA host
-+authentication.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+This option applies to protocol version 1 only and requires
-+.Xr ssh 1
-+to be setuid root.
-+.It Cm RSAAuthentication
-+Specifies whether to try RSA authentication.
-+The argument to this keyword must be
-+.Cm yes
-+(the default)
-+or
-+.Cm no .
-+RSA authentication will only be
-+attempted if the identity file exists, or an authentication agent is
-+running.
-+Note that this option applies to protocol version 1 only.
-+.It Cm SendEnv
-+Specifies what variables from the local
-+.Xr environ 7
-+should be sent to the server.
-+The server must also support it, and the server must be configured to
-+accept these environment variables.
-+Note that the
-+.Ev TERM
-+environment variable is always sent whenever a
-+pseudo-terminal is requested as it is required by the protocol.
-+Refer to
-+.Cm AcceptEnv
-+in
+ .It Cm RequestTTY
+ Specifies whether to request a pseudo-tty for the session.
+ The argument may be one of:
+@@ -1403,7 +1403,7 @@ pseudo-terminal is requested as it is required by the protocol.
+ Refer to
+ .Cm AcceptEnv
+ in
+-.Xr sshd_config 5
 +.Xr sshd_config 4
-+for how to configure the server.
-+Variables are specified by name, which may contain wildcard characters.
-+Multiple environment variables may be separated by whitespace or spread
-+across multiple
-+.Cm SendEnv
-+directives.
-+The default is not to send any environment variables.
-+.Pp
-+See
-+.Sx PATTERNS
-+for more information on patterns.
-+.It Cm ServerAliveCountMax
-+Sets the number of server alive messages (see below) which may be
-+sent without
-+.Xr ssh 1
-+receiving any messages back from the server.
-+If this threshold is reached while server alive messages are being sent,
-+ssh will disconnect from the server, terminating the session.
-+It is important to note that the use of server alive messages is very
-+different from
-+.Cm TCPKeepAlive
-+(below).
-+The server alive messages are sent through the encrypted channel
-+and therefore will not be spoofable.
-+The TCP keepalive option enabled by
-+.Cm TCPKeepAlive
-+is spoofable.
-+The server alive mechanism is valuable when the client or
-+server depend on knowing when a connection has become inactive.
-+.Pp
-+The default value is 3.
-+If, for example,
-+.Cm ServerAliveInterval
-+(see below) is set to 15 and
-+.Cm ServerAliveCountMax
-+is left at the default, if the server becomes unresponsive,
-+ssh will disconnect after approximately 45 seconds.
-+.It Cm ServerAliveInterval
-+Sets a timeout interval in seconds after which if no data has been received
-+from the server,
-+.Xr ssh 1
-+will send a message through the encrypted
-+channel to request a response from the server.
-+The default
-+is 0, indicating that these messages will not be sent to the server.
-+.It Cm StreamLocalBindMask
-+Sets the octal file creation mode mask
-+.Pq umask
-+used when creating a Unix-domain socket file for local or remote
-+port forwarding.
-+This option is only used for port forwarding to a Unix-domain socket file.
-+.Pp
-+The default value is 0177, which creates a Unix-domain socket file that is
-+readable and writable only by the owner.
-+Note that not all operating systems honor the file mode on Unix-domain
-+socket files.
-+.It Cm StreamLocalBindUnlink
-+Specifies whether to remove an existing Unix-domain socket file for local
-+or remote port forwarding before creating a new one.
-+If the socket file already exists and
-+.Cm StreamLocalBindUnlink
-+is not enabled,
-+.Nm ssh
-+will be unable to forward the port to the Unix-domain socket file.
-+This option is only used for port forwarding to a Unix-domain socket file.
-+.Pp
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+.It Cm StrictHostKeyChecking
-+If this flag is set to
-+.Cm yes ,
-+.Xr ssh 1
-+will never automatically add host keys to the
-+.Pa ~/.ssh/known_hosts
-+file, and refuses to connect to hosts whose host key has changed.
-+This provides maximum protection against trojan horse attacks,
-+though it can be annoying when the
-+.Pa /etc/ssh/ssh_known_hosts
-+file is poorly maintained or when connections to new hosts are
-+frequently made.
-+This option forces the user to manually
-+add all new hosts.
-+If this flag is set to
-+.Cm no ,
-+ssh will automatically add new host keys to the
-+user known hosts files.
-+If this flag is set to
-+.Cm ask
-+(the default),
-+new host keys
-+will be added to the user known host files only after the user
-+has confirmed that is what they really want to do, and
-+ssh will refuse to connect to hosts whose host key has changed.
-+The host keys of
-+known hosts will be verified automatically in all cases.
-+.It Cm TCPKeepAlive
-+Specifies whether the system should send TCP keepalive messages to the
-+other side.
-+If they are sent, death of the connection or crash of one
-+of the machines will be properly noticed.
-+However, this means that
-+connections will die if the route is down temporarily, and some people
-+find it annoying.
-+.Pp
-+The default is
-+.Cm yes
-+(to send TCP keepalive messages), and the client will notice
-+if the network goes down or the remote host dies.
-+This is important in scripts, and many users want it too.
-+.Pp
-+To disable TCP keepalive messages, the value should be set to
-+.Cm no .
-+.It Cm Tunnel
-+Request
-+.Xr tun 4
-+device forwarding between the client and the server.
-+The argument must be
-+.Cm yes ,
-+.Cm point-to-point
-+(layer 3),
-+.Cm ethernet
-+(layer 2),
-+or
-+.Cm no
-+(the default).
-+Specifying
-+.Cm yes
-+requests the default tunnel mode, which is
-+.Cm point-to-point .
-+.It Cm TunnelDevice
-+Specifies the
-+.Xr tun 4
-+devices to open on the client
-+.Pq Ar local_tun
-+and the server
-+.Pq Ar remote_tun .
-+.Pp
-+The argument must be
-+.Sm off
-+.Ar local_tun Op : Ar remote_tun .
-+.Sm on
-+The devices may be specified by numerical ID or the keyword
-+.Cm any ,
-+which uses the next available tunnel device.
-+If
-+.Ar remote_tun
-+is not specified, it defaults to
-+.Cm any .
-+The default is
-+.Cm any:any .
-+.It Cm UpdateHostKeys
-+Specifies whether
-+.Xr ssh 1
-+should accept notifications of additional hostkeys from the server sent
-+after authentication has completed and add them to
-+.Cm UserKnownHostsFile .
-+The argument must be
-+.Cm yes ,
-+.Cm no
-+(the default) or
-+.Cm ask .
-+Enabling this option allows learning alternate hostkeys for a server
-+and supports graceful key rotation by allowing a server to send replacement
-+public keys before old ones are removed.
-+Additional hostkeys are only accepted if the key used to authenticate the
-+host was already trusted or explicitly accepted by the user.
-+If
-+.Cm UpdateHostKeys
-+is set to
-+.Cm ask ,
-+then the user is asked to confirm the modifications to the known_hosts file.
-+Confirmation is currently incompatible with
-+.Cm ControlPersist ,
-+and will be disabled if it is enabled.
-+.Pp
-+Presently, only
+ for how to configure the server.
+ Variables are specified by name, which may contain wildcard characters.
+ Multiple environment variables may be separated by whitespace or spread
+@@ -1612,7 +1612,7 @@ Confirmation is currently incompatible with
+ and will be disabled if it is enabled.
+ .Pp
+ Presently, only
+-.Xr sshd 8
 +.Xr sshd 1M
-+from OpenSSH 6.8 and greater support the
-+.Qq hostkeys@openssh.com
-+protocol extension used to inform the client of all the server's hostkeys.
-+.It Cm UsePrivilegedPort
-+Specifies whether to use a privileged port for outgoing connections.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no
-+(the default).
-+If set to
-+.Cm yes ,
-+.Xr ssh 1
-+must be setuid root.
-+Note that this option must be set to
-+.Cm yes
-+for
-+.Cm RhostsRSAAuthentication
-+with older servers.
-+.It Cm User
-+Specifies the user to log in as.
-+This can be useful when a different user name is used on different machines.
-+This saves the trouble of
-+having to remember to give the user name on the command line.
-+.It Cm UserKnownHostsFile
-+Specifies one or more files to use for the user
-+host key database, separated by whitespace.
-+The default is
-+.Pa ~/.ssh/known_hosts ,
-+.Pa ~/.ssh/known_hosts2 .
-+.It Cm VerifyHostKeyDNS
-+Specifies whether to verify the remote key using DNS and SSHFP resource
-+records.
-+If this option is set to
-+.Cm yes ,
-+the client will implicitly trust keys that match a secure fingerprint
-+from DNS.
-+Insecure fingerprints will be handled as if this option was set to
-+.Cm ask .
-+If this option is set to
-+.Cm ask ,
-+information on fingerprint match will be displayed, but the user will still
-+need to confirm new host keys according to the
-+.Cm StrictHostKeyChecking
-+option.
-+The default is
-+.Cm no .
-+.Pp
-+See also
-+.Sx VERIFYING HOST KEYS
-+in
-+.Xr ssh 1 .
-+.It Cm VisualHostKey
-+If this flag is set to
-+.Cm yes ,
-+an ASCII art representation of the remote host key fingerprint is
-+printed in addition to the fingerprint string at login and
-+for unknown host keys.
-+If this flag is set to
-+.Cm no
-+(the default),
-+no fingerprint strings are printed at login and
-+only the fingerprint string will be printed for unknown host keys.
-+.It Cm XAuthLocation
-+Specifies the full pathname of the
-+.Xr xauth 1
-+program.
-+The default is
-+.Pa /usr/X11R6/bin/xauth .
-+.El
-+.Sh PATTERNS
-+A
-+.Em pattern
-+consists of zero or more non-whitespace characters,
-+.Sq *
-+(a wildcard that matches zero or more characters),
-+or
-+.Sq ?\&
-+(a wildcard that matches exactly one character).
-+For example, to specify a set of declarations for any host in the
-+.Qq .co.uk
-+set of domains,
-+the following pattern could be used:
-+.Pp
-+.Dl Host *.co.uk
-+.Pp
-+The following pattern
-+would match any host in the 192.168.0.[0-9] network range:
-+.Pp
-+.Dl Host 192.168.0.?
-+.Pp
-+A
-+.Em pattern-list
-+is a comma-separated list of patterns.
-+Patterns within pattern-lists may be negated
-+by preceding them with an exclamation mark
-+.Pq Sq !\& .
-+For example,
-+to allow a key to be used from anywhere within an organization
-+except from the
-+.Qq dialup
-+pool,
-+the following entry (in authorized_keys) could be used:
-+.Pp
-+.Dl from=\&"!*.dialup.example.com,*.example.com\&"
-+.Sh TOKENS
-+Arguments to some keywords can make use of tokens,
-+which are expanded at runtime:
-+.Pp
-+.Bl -tag -width XXXX -offset indent -compact
-+.It %%
-+A literal
-+.Sq % .
-+.It \&%C
-+Shorthand for %l%h%p%r.
-+.It %d
-+Local user's home directory.
-+.It %h
-+The remote hostname.
-+.It %i
-+The local user ID.
-+.It %L
-+The local hostname.
-+.It %l
-+The local hostname, including the domain name.
-+.It %n
-+The original remote hostname, as given on the command line.
-+.It %p
-+The remote port.
-+.It %r
-+The remote username.
-+.It %u
-+The local username.
-+.El
-+.Pp
-+.Cm Match exec
-+accepts the tokens %%, %h, %L, %l, %n, %p, %r, and %u.
-+.Pp
-+.Cm CertificateFile
-+accepts the tokens %%, %d, %h, %l, %r, and %u.
-+.Pp
-+.Cm ControlPath
-+accepts the tokens %%, %C, %h, %i, %L, %l, %n, %p, %r, and %u.
-+.Pp
-+.Cm HostName
-+accepts the tokens %% and %h.
-+.Pp
-+.Cm IdentityAgent
-+and
-+.Cm IdentityFile
-+accept the tokens %%, %d, %h, %l, %r, and %u.
-+.Pp
-+.Cm LocalCommand
-+accepts the tokens %%, %C, %d, %h, %l, %n, %p, %r, and %u.
-+.Pp
-+.Cm ProxyCommand
-+accepts the tokens %%, %h, %p, and %r.
-+.Sh FILES
-+.Bl -tag -width Ds
-+.It Pa ~/.ssh/config
-+This is the per-user configuration file.
-+The format of this file is described above.
-+This file is used by the SSH client.
-+Because of the potential for abuse, this file must have strict permissions:
-+read/write for the user, and not accessible by others.
-+.It Pa /etc/ssh/ssh_config
-+Systemwide configuration file.
-+This file provides defaults for those
-+values that are not specified in the user's configuration file, and
-+for those users who do not have a configuration file.
-+This file must be world-readable.
-+.El
-+.Sh SEE ALSO
-+.Xr ssh 1
-+.Sh AUTHORS
-+.An -nosplit
-+OpenSSH is a derivative of the original and free
-+ssh 1.2.12 release by
-+.An Tatu Ylonen .
-+.An Aaron Campbell , Bob Beck , Markus Friedl ,
-+.An Niels Provos , Theo de Raadt
-+and
-+.An Dug Song
-+removed many bugs, re-added newer features and
-+created OpenSSH.
-+.An Markus Friedl
-+contributed the support for SSH protocol versions 1.5 and 2.0.
-diff --git a/ssh_config.5 b/ssh_config.5
-deleted file mode 100644
-index 591365f3..00000000
---- a/ssh_config.5
-+++ /dev/null
-@@ -1,1778 +0,0 @@
--.\"
--.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
--.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
--.\"                    All rights reserved
--.\"
--.\" As far as I am concerned, the code I have written for this software
--.\" can be used freely for any purpose.  Any derived versions of this
--.\" software must be clearly marked as such, and if the derived work is
--.\" incompatible with the protocol description in the RFC file, it must be
--.\" called by a name other than "ssh" or "Secure Shell".
--.\"
--.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
--.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
--.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
--.\"
--.\" Redistribution and use in source and binary forms, with or without
--.\" modification, are permitted provided that the following conditions
--.\" are met:
--.\" 1. Redistributions of source code must retain the above copyright
--.\"    notice, this list of conditions and the following disclaimer.
--.\" 2. Redistributions in binary form must reproduce the above copyright
--.\"    notice, this list of conditions and the following disclaimer in the
--.\"    documentation and/or other materials provided with the distribution.
--.\"
--.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
--.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
--.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
--.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
--.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
--.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
--.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
--.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
--.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--.\"
--.\" $OpenBSD: ssh_config.5,v 1.240 2016/10/15 19:56:25 jmc Exp $
--.Dd $Mdocdate: October 15 2016 $
--.Dt SSH_CONFIG 5
--.Os
--.Sh NAME
--.Nm ssh_config
--.Nd OpenSSH SSH client configuration files
--.Sh SYNOPSIS
--.Nm ~/.ssh/config
--.Nm /etc/ssh/ssh_config
--.Sh DESCRIPTION
--.Xr ssh 1
--obtains configuration data from the following sources in
--the following order:
--.Pp
--.Bl -enum -offset indent -compact
--.It
--command-line options
--.It
--user's configuration file
--.Pq Pa ~/.ssh/config
--.It
--system-wide configuration file
--.Pq Pa /etc/ssh/ssh_config
--.El
--.Pp
--For each parameter, the first obtained value
--will be used.
--The configuration files contain sections separated by
--.Cm Host
--specifications, and that section is only applied for hosts that
--match one of the patterns given in the specification.
--The matched host name is usually the one given on the command line
--(see the
--.Cm CanonicalizeHostname
--option for exceptions).
--.Pp
--Since the first obtained value for each parameter is used, more
--host-specific declarations should be given near the beginning of the
--file, and general defaults at the end.
--.Pp
--The file contains keyword-argument pairs, one per line.
--Lines starting with
--.Ql #
--and empty lines are interpreted as comments.
--Arguments may optionally be enclosed in double quotes
--.Pq \&"
--in order to represent arguments containing spaces.
--Configuration options may be separated by whitespace or
--optional whitespace and exactly one
--.Ql = ;
--the latter format is useful to avoid the need to quote whitespace
--when specifying configuration options using the
--.Nm ssh ,
--.Nm scp ,
--and
--.Nm sftp
--.Fl o
--option.
--.Pp
--The possible
--keywords and their meanings are as follows (note that
--keywords are case-insensitive and arguments are case-sensitive):
--.Bl -tag -width Ds
--.It Cm Host
--Restricts the following declarations (up to the next
--.Cm Host
--or
--.Cm Match
--keyword) to be only for those hosts that match one of the patterns
--given after the keyword.
--If more than one pattern is provided, they should be separated by whitespace.
--A single
--.Ql *
--as a pattern can be used to provide global
--defaults for all hosts.
--The host is usually the
--.Ar hostname
--argument given on the command line
--(see the
--.Cm CanonicalizeHostname
--keyword for exceptions).
--.Pp
--A pattern entry may be negated by prefixing it with an exclamation mark
--.Pq Sq !\& .
--If a negated entry is matched, then the
--.Cm Host
--entry is ignored, regardless of whether any other patterns on the line
--match.
--Negated matches are therefore useful to provide exceptions for wildcard
--matches.
--.Pp
--See
--.Sx PATTERNS
--for more information on patterns.
--.It Cm Match
--Restricts the following declarations (up to the next
--.Cm Host
--or
--.Cm Match
--keyword) to be used only when the conditions following the
--.Cm Match
--keyword are satisfied.
--Match conditions are specified using one or more criteria
--or the single token
--.Cm all
--which always matches.
--The available criteria keywords are:
--.Cm canonical ,
--.Cm exec ,
--.Cm host ,
--.Cm originalhost ,
--.Cm user ,
--and
--.Cm localuser .
--The
--.Cm all
--criteria must appear alone or immediately after
--.Cm canonical .
--Other criteria may be combined arbitrarily.
--All criteria but
--.Cm all
--and
--.Cm canonical
--require an argument.
--Criteria may be negated by prepending an exclamation mark
--.Pq Sq !\& .
--.Pp
--The
--.Cm canonical
--keyword matches only when the configuration file is being re-parsed
--after hostname canonicalization (see the
--.Cm CanonicalizeHostname
--option.)
--This may be useful to specify conditions that work with canonical host
--names only.
--The
--.Cm exec
--keyword executes the specified command under the user's shell.
--If the command returns a zero exit status then the condition is considered true.
--Commands containing whitespace characters must be quoted.
--Arguments to
--.Cm exec
--accept the tokens described in the
--.Sx TOKENS
--section.
--.Pp
--The other keywords' criteria must be single entries or comma-separated
--lists and may use the wildcard and negation operators described in the
--.Sx PATTERNS
--section.
--The criteria for the
--.Cm host
--keyword are matched against the target hostname, after any substitution
--by the
--.Cm Hostname
--or
--.Cm CanonicalizeHostname
--options.
--The
--.Cm originalhost
--keyword matches against the hostname as it was specified on the command-line.
--The
--.Cm user
--keyword matches against the target username on the remote host.
--The
--.Cm localuser
--keyword matches against the name of the local user running
--.Xr ssh 1
--(this keyword may be useful in system-wide
--.Nm
--files).
--.It Cm AddKeysToAgent
--Specifies whether keys should be automatically added to a running
--.Xr ssh-agent 1 .
--If this option is set to
--.Cm yes
--and a key is loaded from a file, the key and its passphrase are added to
--the agent with the default lifetime, as if by
--.Xr ssh-add 1 .
--If this option is set to
--.Cm ask ,
--.Xr ssh 1
--will require confirmation using the
--.Ev SSH_ASKPASS
--program before adding a key (see
--.Xr ssh-add 1
--for details).
--If this option is set to
--.Cm confirm ,
--each use of the key must be confirmed, as if the
--.Fl c
--option was specified to
--.Xr ssh-add 1 .
--If this option is set to
--.Cm no ,
--no keys are added to the agent.
--The argument must be
--.Cm yes ,
--.Cm confirm ,
--.Cm ask ,
--or
--.Cm no
--(the default).
--.It Cm AddressFamily
--Specifies which address family to use when connecting.
--Valid arguments are
--.Cm any
--(the default),
--.Cm inet
--(use IPv4 only), or
--.Cm inet6
--(use IPv6 only).
--.It Cm BatchMode
--If set to
--.Cm yes ,
--passphrase/password querying will be disabled.
--This option is useful in scripts and other batch jobs where no user
--is present to supply the password.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm BindAddress
--Use the specified address on the local machine as the source address of
--the connection.
--Only useful on systems with more than one address.
--Note that this option does not work if
--.Cm UsePrivilegedPort
--is set to
--.Cm yes .
--.It Cm CanonicalDomains
--When
--.Cm CanonicalizeHostname
--is enabled, this option specifies the list of domain suffixes in which to
--search for the specified destination host.
--.It Cm CanonicalizeFallbackLocal
--Specifies whether to fail with an error when hostname canonicalization fails.
--The default,
--.Cm yes ,
--will attempt to look up the unqualified hostname using the system resolver's
--search rules.
--A value of
--.Cm no
--will cause
--.Xr ssh 1
--to fail instantly if
--.Cm CanonicalizeHostname
--is enabled and the target hostname cannot be found in any of the domains
--specified by
--.Cm CanonicalDomains .
--.It Cm CanonicalizeHostname
--Controls whether explicit hostname canonicalization is performed.
--The default,
--.Cm no ,
--is not to perform any name rewriting and let the system resolver handle all
--hostname lookups.
--If set to
--.Cm yes
--then, for connections that do not use a
--.Cm ProxyCommand ,
--.Xr ssh 1
--will attempt to canonicalize the hostname specified on the command line
--using the
--.Cm CanonicalDomains
--suffixes and
--.Cm CanonicalizePermittedCNAMEs
--rules.
--If
--.Cm CanonicalizeHostname
--is set to
--.Cm always ,
--then canonicalization is applied to proxied connections too.
--.Pp
--If this option is enabled, then the configuration files are processed
--again using the new target name to pick up any new configuration in matching
--.Cm Host
--and
--.Cm Match
--stanzas.
--.It Cm CanonicalizeMaxDots
--Specifies the maximum number of dot characters in a hostname before
--canonicalization is disabled.
--The default, 1,
--allows a single dot (i.e. hostname.subdomain).
--.It Cm CanonicalizePermittedCNAMEs
--Specifies rules to determine whether CNAMEs should be followed when
--canonicalizing hostnames.
--The rules consist of one or more arguments of
--.Ar source_domain_list : Ns Ar target_domain_list ,
--where
--.Ar source_domain_list
--is a pattern-list of domains that may follow CNAMEs in canonicalization,
--and
--.Ar target_domain_list
--is a pattern-list of domains that they may resolve to.
--.Pp
--For example,
--.Qq *.a.example.com:*.b.example.com,*.c.example.com
--will allow hostnames matching
--.Qq *.a.example.com
--to be canonicalized to names in the
--.Qq *.b.example.com
--or
--.Qq *.c.example.com
--domains.
--.It Cm CertificateFile
--Specifies a file from which the user's certificate is read.
--A corresponding private key must be provided separately in order
--to use this certificate either
--from an
--.Cm IdentityFile
--directive or
--.Fl i
--flag to
--.Xr ssh 1 ,
--via
--.Xr ssh-agent 1 ,
--or via a
--.Cm PKCS11Provider .
--.Pp
--Arguments to
--.Cm CertificateFile
--may use the tilde syntax to refer to a user's home directory
--or the tokens described in the
--.Sx TOKENS
--section.
--.Pp
--It is possible to have multiple certificate files specified in
--configuration files; these certificates will be tried in sequence.
--Multiple
--.Cm CertificateFile
--directives will add to the list of certificates used for
--authentication.
--.It Cm ChallengeResponseAuthentication
--Specifies whether to use challenge-response authentication.
--The argument to this keyword must be
--.Cm yes
--(the default)
--or
--.Cm no .
--.It Cm CheckHostIP
--If set to
--.Cm yes
--(the default),
--.Xr ssh 1
--will additionally check the host IP address in the
--.Pa known_hosts
--file.
--This allows it to detect if a host key changed due to DNS spoofing
--and will add addresses of destination hosts to
--.Pa ~/.ssh/known_hosts
--in the process, regardless of the setting of
--.Cm StrictHostKeyChecking .
--If the option is set to
--.Cm no ,
--the check will not be executed.
--.It Cm Cipher
--Specifies the cipher to use for encrypting the session
--in protocol version 1.
--Currently,
--.Cm blowfish ,
--.Cm 3des
--(the default),
--and
--.Cm des
--are supported,
--though
--.Cm des
--is only supported in the
--.Xr ssh 1
--client for interoperability with legacy protocol 1 implementations;
--its use is strongly discouraged due to cryptographic weaknesses.
--.It Cm Ciphers
--Specifies the ciphers allowed for protocol version 2
--in order of preference.
--Multiple ciphers must be comma-separated.
--If the specified value begins with a
--.Sq +
--character, then the specified ciphers will be appended to the default set
--instead of replacing them.
--.Pp
--The supported ciphers are:
--.Bd -literal -offset indent
--3des-cbc
--aes128-cbc
--aes192-cbc
--aes256-cbc
--aes128-ctr
--aes192-ctr
--aes256-ctr
--aes128-gcm@openssh.com
--aes256-gcm@openssh.com
--arcfour
--arcfour128
--arcfour256
--blowfish-cbc
--cast128-cbc
--chacha20-poly1305@openssh.com
--.Ed
--.Pp
--The default is:
--.Bd -literal -offset indent
--chacha20-poly1305@openssh.com,
--aes128-ctr,aes192-ctr,aes256-ctr,
--aes128-gcm@openssh.com,aes256-gcm@openssh.com,
--aes128-cbc,aes192-cbc,aes256-cbc
--.Ed
--.Pp
--The list of available ciphers may also be obtained using
--.Qq ssh -Q cipher .
--.It Cm ClearAllForwardings
--Specifies that all local, remote, and dynamic port forwardings
--specified in the configuration files or on the command line be
--cleared.
--This option is primarily useful when used from the
--.Xr ssh 1
--command line to clear port forwardings set in
--configuration files, and is automatically set by
--.Xr scp 1
--and
--.Xr sftp 1 .
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm Compression
--Specifies whether to use compression.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm CompressionLevel
--Specifies the compression level to use if compression is enabled.
--The argument must be an integer from 1 (fast) to 9 (slow, best).
--The default level is 6, which is good for most applications.
--The meaning of the values is the same as in
--.Xr gzip 1 .
--Note that this option applies to protocol version 1 only.
--.It Cm ConnectionAttempts
--Specifies the number of tries (one per second) to make before exiting.
--The argument must be an integer.
--This may be useful in scripts if the connection sometimes fails.
--The default is 1.
--.It Cm ConnectTimeout
--Specifies the timeout (in seconds) used when connecting to the
--SSH server, instead of using the default system TCP timeout.
--This value is used only when the target is down or really unreachable,
--not when it refuses the connection.
--.It Cm ControlMaster
--Enables the sharing of multiple sessions over a single network connection.
--When set to
--.Cm yes ,
--.Xr ssh 1
--will listen for connections on a control socket specified using the
--.Cm ControlPath
--argument.
--Additional sessions can connect to this socket using the same
--.Cm ControlPath
--with
--.Cm ControlMaster
--set to
--.Cm no
--(the default).
--These sessions will try to reuse the master instance's network connection
--rather than initiating new ones, but will fall back to connecting normally
--if the control socket does not exist, or is not listening.
--.Pp
--Setting this to
--.Cm ask
--will cause
--.Xr ssh 1
--to listen for control connections, but require confirmation using
--.Xr ssh-askpass 1 .
--If the
--.Cm ControlPath
--cannot be opened,
--.Xr ssh 1
--will continue without connecting to a master instance.
--.Pp
--X11 and
--.Xr ssh-agent 1
--forwarding is supported over these multiplexed connections, however the
--display and agent forwarded will be the one belonging to the master
--connection i.e. it is not possible to forward multiple displays or agents.
--.Pp
--Two additional options allow for opportunistic multiplexing: try to use a
--master connection but fall back to creating a new one if one does not already
--exist.
--These options are:
--.Cm auto
--and
--.Cm autoask .
--The latter requires confirmation like the
--.Cm ask
--option.
--.It Cm ControlPath
--Specify the path to the control socket used for connection sharing as described
--in the
--.Cm ControlMaster
--section above or the string
--.Cm none
--to disable connection sharing.
--Arguments to
--.Cm ControlPath
--may use the tilde syntax to refer to a user's home directory
--or the tokens described in the
--.Sx TOKENS
--section.
--It is recommended that any
--.Cm ControlPath
--used for opportunistic connection sharing include
--at least %h, %p, and %r (or alternatively %C) and be placed in a directory
--that is not writable by other users.
--This ensures that shared connections are uniquely identified.
--.It Cm ControlPersist
--When used in conjunction with
--.Cm ControlMaster ,
--specifies that the master connection should remain open
--in the background (waiting for future client connections)
--after the initial client connection has been closed.
--If set to
--.Cm no ,
--then the master connection will not be placed into the background,
--and will close as soon as the initial client connection is closed.
--If set to
--.Cm yes
--or 0,
--then the master connection will remain in the background indefinitely
--(until killed or closed via a mechanism such as the
--.Qq ssh -O exit ) .
--If set to a time in seconds, or a time in any of the formats documented in
--.Xr sshd_config 5 ,
--then the backgrounded master connection will automatically terminate
--after it has remained idle (with no client connections) for the
--specified time.
--.It Cm DynamicForward
--Specifies that a TCP port on the local machine be forwarded
--over the secure channel, and the application
--protocol is then used to determine where to connect to from the
--remote machine.
--.Pp
--The argument must be
--.Sm off
--.Oo Ar bind_address : Oc Ar port .
--.Sm on
--IPv6 addresses can be specified by enclosing addresses in square brackets.
--By default, the local port is bound in accordance with the
--.Cm GatewayPorts
--setting.
--However, an explicit
--.Ar bind_address
--may be used to bind the connection to a specific address.
--The
--.Ar bind_address
--of
--.Cm localhost
--indicates that the listening port be bound for local use only, while an
--empty address or
--.Sq *
--indicates that the port should be available from all interfaces.
--.Pp
--Currently the SOCKS4 and SOCKS5 protocols are supported, and
--.Xr ssh 1
--will act as a SOCKS server.
--Multiple forwardings may be specified, and
--additional forwardings can be given on the command line.
--Only the superuser can forward privileged ports.
--.It Cm EnableSSHKeysign
--Setting this option to
--.Cm yes
--in the global client configuration file
--.Pa /etc/ssh/ssh_config
--enables the use of the helper program
--.Xr ssh-keysign 8
--during
--.Cm HostbasedAuthentication .
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--This option should be placed in the non-hostspecific section.
--See
--.Xr ssh-keysign 8
--for more information.
--.It Cm EscapeChar
--Sets the escape character (default:
--.Ql ~ ) .
--The escape character can also
--be set on the command line.
--The argument should be a single character,
--.Ql ^
--followed by a letter, or
--.Cm none
--to disable the escape
--character entirely (making the connection transparent for binary
--data).
--.It Cm ExitOnForwardFailure
--Specifies whether
--.Xr ssh 1
--should terminate the connection if it cannot set up all requested
--dynamic, tunnel, local, and remote port forwardings, (e.g.\&
--if either end is unable to bind and listen on a specified port).
--Note that
--.Cm ExitOnForwardFailure
--does not apply to connections made over port forwardings and will not,
--for example, cause
--.Xr ssh 1
--to exit if TCP connections to the ultimate forwarding destination fail.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm FingerprintHash
--Specifies the hash algorithm used when displaying key fingerprints.
--Valid options are:
--.Cm md5
--and
--.Cm sha256
--(the default).
--.It Cm ForwardAgent
--Specifies whether the connection to the authentication agent (if any)
--will be forwarded to the remote machine.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.Pp
--Agent forwarding should be enabled with caution.
--Users with the ability to bypass file permissions on the remote host
--(for the agent's Unix-domain socket)
--can access the local agent through the forwarded connection.
--An attacker cannot obtain key material from the agent,
--however they can perform operations on the keys that enable them to
--authenticate using the identities loaded into the agent.
--.It Cm ForwardX11
--Specifies whether X11 connections will be automatically redirected
--over the secure channel and
--.Ev DISPLAY
--set.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.Pp
--X11 forwarding should be enabled with caution.
--Users with the ability to bypass file permissions on the remote host
--(for the user's X11 authorization database)
--can access the local X11 display through the forwarded connection.
--An attacker may then be able to perform activities such as keystroke monitoring
--if the
--.Cm ForwardX11Trusted
--option is also enabled.
--.It Cm ForwardX11Timeout
--Specify a timeout for untrusted X11 forwarding
--using the format described in the
--.Sx TIME FORMATS
--section of
--.Xr sshd_config 5 .
--X11 connections received by
--.Xr ssh 1
--after this time will be refused.
--The default is to disable untrusted X11 forwarding after twenty minutes has
--elapsed.
--.It Cm ForwardX11Trusted
--If this option is set to
--.Cm yes ,
--remote X11 clients will have full access to the original X11 display.
--.Pp
--If this option is set to
--.Cm no
--(the default),
--remote X11 clients will be considered untrusted and prevented
--from stealing or tampering with data belonging to trusted X11
--clients.
--Furthermore, the
--.Xr xauth 1
--token used for the session will be set to expire after 20 minutes.
--Remote clients will be refused access after this time.
--.Pp
--See the X11 SECURITY extension specification for full details on
--the restrictions imposed on untrusted clients.
--.It Cm GatewayPorts
--Specifies whether remote hosts are allowed to connect to local
--forwarded ports.
--By default,
--.Xr ssh 1
--binds local port forwardings to the loopback address.
--This prevents other remote hosts from connecting to forwarded ports.
--.Cm GatewayPorts
--can be used to specify that ssh
--should bind local port forwardings to the wildcard address,
--thus allowing remote hosts to connect to forwarded ports.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm GlobalKnownHostsFile
--Specifies one or more files to use for the global
--host key database, separated by whitespace.
--The default is
--.Pa /etc/ssh/ssh_known_hosts ,
--.Pa /etc/ssh/ssh_known_hosts2 .
--.It Cm GSSAPIAuthentication
--Specifies whether user authentication based on GSSAPI is allowed.
--The default is
--.Cm no .
--.It Cm GSSAPIDelegateCredentials
--Forward (delegate) credentials to the server.
--The default is
--.Cm no .
--.It Cm HashKnownHosts
--Indicates that
--.Xr ssh 1
--should hash host names and addresses when they are added to
--.Pa ~/.ssh/known_hosts .
--These hashed names may be used normally by
--.Xr ssh 1
--and
--.Xr sshd 8 ,
--but they do not reveal identifying information should the file's contents
--be disclosed.
--The default is
--.Cm no .
--Note that existing names and addresses in known hosts files
--will not be converted automatically,
--but may be manually hashed using
--.Xr ssh-keygen 1 .
--.It Cm HostbasedAuthentication
--Specifies whether to try rhosts based authentication with public key
--authentication.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm HostbasedKeyTypes
--Specifies the key types that will be used for hostbased authentication
--as a comma-separated pattern list.
--Alternately if the specified value begins with a
--.Sq +
--character, then the specified key types will be appended to the default set
--instead of replacing them.
--The default for this option is:
--.Bd -literal -offset 3n
--ecdsa-sha2-nistp256-cert-v01@openssh.com,
--ecdsa-sha2-nistp384-cert-v01@openssh.com,
--ecdsa-sha2-nistp521-cert-v01@openssh.com,
--ssh-ed25519-cert-v01@openssh.com,
--ssh-rsa-cert-v01@openssh.com,
--ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
--.Ed
--.Pp
--The
--.Fl Q
--option of
--.Xr ssh 1
--may be used to list supported key types.
--.It Cm HostKeyAlgorithms
--Specifies the host key algorithms
--that the client wants to use in order of preference.
--Alternately if the specified value begins with a
--.Sq +
--character, then the specified key types will be appended to the default set
--instead of replacing them.
--The default for this option is:
--.Bd -literal -offset 3n
--ecdsa-sha2-nistp256-cert-v01@openssh.com,
--ecdsa-sha2-nistp384-cert-v01@openssh.com,
--ecdsa-sha2-nistp521-cert-v01@openssh.com,
--ssh-ed25519-cert-v01@openssh.com,
--ssh-rsa-cert-v01@openssh.com,
--ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
--.Ed
--.Pp
--If hostkeys are known for the destination host then this default is modified
--to prefer their algorithms.
--.Pp
--The list of available key types may also be obtained using
--.Qq ssh -Q key .
--.It Cm HostKeyAlias
--Specifies an alias that should be used instead of the
--real host name when looking up or saving the host key
--in the host key database files.
--This option is useful for tunneling SSH connections
--or for multiple servers running on a single host.
--.It Cm HostName
--Specifies the real host name to log into.
--This can be used to specify nicknames or abbreviations for hosts.
--Arguments to
--.Cm HostName
--accept the tokens described in the
--.Sx TOKENS
--section.
--Numeric IP addresses are also permitted (both on the command line and in
--.Cm HostName
--specifications).
--The default is the name given on the command line.
--.It Cm IdentitiesOnly
--Specifies that
--.Xr ssh 1
--should only use the authentication identity and certificate files explicitly
--configured in the
--.Nm
--files
--or passed on the
--.Xr ssh 1
--command-line,
--even if
--.Xr ssh-agent 1
--or a
--.Cm PKCS11Provider
--offers more identities.
--The argument to this keyword must be
--.Cm yes
--or
--.Cm no
--(the default).
--This option is intended for situations where ssh-agent
--offers many different identities.
--.It Cm IdentityAgent
--Specifies the
--.Ux Ns -domain
--socket used to communicate with the authentication agent.
--.Pp
--This option overrides the
--.Ev SSH_AUTH_SOCK
--environment variable and can be used to select a specific agent.
--Setting the socket name to
--.Cm none
--disables the use of an authentication agent.
--If the string
--.Qq SSH_AUTH_SOCK
--is specified, the location of the socket will be read from the
--.Ev SSH_AUTH_SOCK
--environment variable.
--.Pp
--Arguments to
--.Cm IdentityAgent
--may use the tilde syntax to refer to a user's home directory
--or the tokens described in the
--.Sx TOKENS
--section.
--.It Cm IdentityFile
--Specifies a file from which the user's DSA, ECDSA, Ed25519 or RSA authentication
--identity is read.
--The default is
--.Pa ~/.ssh/identity
--for protocol version 1, and
--.Pa ~/.ssh/id_dsa ,
--.Pa ~/.ssh/id_ecdsa ,
--.Pa ~/.ssh/id_ed25519
--and
--.Pa ~/.ssh/id_rsa
--for protocol version 2.
--Additionally, any identities represented by the authentication agent
--will be used for authentication unless
--.Cm IdentitiesOnly
--is set.
--If no certificates have been explicitly specified by
--.Cm CertificateFile ,
--.Xr ssh 1
--will try to load certificate information from the filename obtained by
--appending
--.Pa -cert.pub
--to the path of a specified
--.Cm IdentityFile .
--.Pp
--Arguments to
--.Cm IdentityFile
--may use the tilde syntax to refer to a user's home directory
--or the tokens described in the
--.Sx TOKENS
--section.
--.Pp
--It is possible to have
--multiple identity files specified in configuration files; all these
--identities will be tried in sequence.
--Multiple
--.Cm IdentityFile
--directives will add to the list of identities tried (this behaviour
--differs from that of other configuration directives).
--.Pp
--.Cm IdentityFile
--may be used in conjunction with
--.Cm IdentitiesOnly
--to select which identities in an agent are offered during authentication.
--.Cm IdentityFile
--may also be used in conjunction with
--.Cm CertificateFile
--in order to provide any certificate also needed for authentication with
--the identity.
--.It Cm IgnoreUnknown
--Specifies a pattern-list of unknown options to be ignored if they are
--encountered in configuration parsing.
--This may be used to suppress errors if
--.Nm
--contains options that are unrecognised by
--.Xr ssh 1 .
--It is recommended that
--.Cm IgnoreUnknown
--be listed early in the configuration file as it will not be applied
--to unknown options that appear before it.
--.It Cm Include
--Include the specified configuration file(s).
--Multiple pathnames may be specified and each pathname may contain
--.Xr glob 3
--wildcards and, for user configurations, shell-like
--.Sq ~
--references to user home directories.
--Files without absolute paths are assumed to be in
--.Pa ~/.ssh
--if included in a user configuration file or
--.Pa /etc/ssh
--if included from the system configuration file.
--.Cm Include
--directive may appear inside a
--.Cm Match
--or
--.Cm Host
--block
--to perform conditional inclusion.
--.It Cm IPQoS
--Specifies the IPv4 type-of-service or DSCP class for connections.
--Accepted values are
--.Cm af11 ,
--.Cm af12 ,
--.Cm af13 ,
--.Cm af21 ,
--.Cm af22 ,
--.Cm af23 ,
--.Cm af31 ,
--.Cm af32 ,
--.Cm af33 ,
--.Cm af41 ,
--.Cm af42 ,
--.Cm af43 ,
--.Cm cs0 ,
--.Cm cs1 ,
--.Cm cs2 ,
--.Cm cs3 ,
--.Cm cs4 ,
--.Cm cs5 ,
--.Cm cs6 ,
--.Cm cs7 ,
--.Cm ef ,
--.Cm lowdelay ,
--.Cm throughput ,
--.Cm reliability ,
--or a numeric value.
--This option may take one or two arguments, separated by whitespace.
--If one argument is specified, it is used as the packet class unconditionally.
--If two values are specified, the first is automatically selected for
--interactive sessions and the second for non-interactive sessions.
--The default is
--.Cm lowdelay
--for interactive sessions and
--.Cm throughput
--for non-interactive sessions.
--.It Cm KbdInteractiveAuthentication
--Specifies whether to use keyboard-interactive authentication.
--The argument to this keyword must be
--.Cm yes
--(the default)
--or
--.Cm no .
--.It Cm KbdInteractiveDevices
--Specifies the list of methods to use in keyboard-interactive authentication.
--Multiple method names must be comma-separated.
--The default is to use the server specified list.
--The methods available vary depending on what the server supports.
--For an OpenSSH server,
--it may be zero or more of:
--.Cm bsdauth ,
--.Cm pam ,
--and
--.Cm skey .
--.It Cm KexAlgorithms
--Specifies the available KEX (Key Exchange) algorithms.
--Multiple algorithms must be comma-separated.
--Alternately if the specified value begins with a
--.Sq +
--character, then the specified methods will be appended to the default set
--instead of replacing them.
--The default is:
--.Bd -literal -offset indent
--curve25519-sha256,curve25519-sha256@libssh.org,
--ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,
--diffie-hellman-group-exchange-sha256,
--diffie-hellman-group-exchange-sha1,
--diffie-hellman-group14-sha1
--.Ed
--.Pp
--The list of available key exchange algorithms may also be obtained using
--.Qq ssh -Q kex .
--.It Cm LocalCommand
--Specifies a command to execute on the local machine after successfully
--connecting to the server.
--The command string extends to the end of the line, and is executed with
--the user's shell.
--Arguments to
--.Cm LocalCommand
--accept the tokens described in the
--.Sx TOKENS
--section.
--.Pp
--The command is run synchronously and does not have access to the
--session of the
--.Xr ssh 1
--that spawned it.
--It should not be used for interactive commands.
--.Pp
--This directive is ignored unless
--.Cm PermitLocalCommand
--has been enabled.
--.It Cm LocalForward
--Specifies that a TCP port on the local machine be forwarded over
--the secure channel to the specified host and port from the remote machine.
--The first argument must be
--.Sm off
--.Oo Ar bind_address : Oc Ar port
--.Sm on
--and the second argument must be
--.Ar host : Ns Ar hostport .
--IPv6 addresses can be specified by enclosing addresses in square brackets.
--Multiple forwardings may be specified, and additional forwardings can be
--given on the command line.
--Only the superuser can forward privileged ports.
--By default, the local port is bound in accordance with the
--.Cm GatewayPorts
--setting.
--However, an explicit
--.Ar bind_address
--may be used to bind the connection to a specific address.
--The
--.Ar bind_address
--of
--.Cm localhost
--indicates that the listening port be bound for local use only, while an
--empty address or
--.Sq *
--indicates that the port should be available from all interfaces.
--.It Cm LogLevel
--Gives the verbosity level that is used when logging messages from
--.Xr ssh 1 .
--The possible values are:
--QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.
--The default is INFO.
--DEBUG and DEBUG1 are equivalent.
--DEBUG2 and DEBUG3 each specify higher levels of verbose output.
--.It Cm MACs
--Specifies the MAC (message authentication code) algorithms
--in order of preference.
--The MAC algorithm is used for data integrity protection.
--Multiple algorithms must be comma-separated.
--If the specified value begins with a
--.Sq +
--character, then the specified algorithms will be appended to the default set
--instead of replacing them.
--.Pp
--The algorithms that contain
--.Qq -etm
--calculate the MAC after encryption (encrypt-then-mac).
--These are considered safer and their use recommended.
--.Pp
--The default is:
--.Bd -literal -offset indent
--umac-64-etm@openssh.com,umac-128-etm@openssh.com,
--hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,
--hmac-sha1-etm@openssh.com,
--umac-64@openssh.com,umac-128@openssh.com,
--hmac-sha2-256,hmac-sha2-512,hmac-sha1
--.Ed
--.Pp
--The list of available MAC algorithms may also be obtained using
--.Qq ssh -Q mac .
--.It Cm NoHostAuthenticationForLocalhost
--This option can be used if the home directory is shared across machines.
--In this case localhost will refer to a different machine on each of
--the machines and the user will get many warnings about changed host keys.
--However, this option disables host authentication for localhost.
--The argument to this keyword must be
--.Cm yes
--or
--.Cm no .
--(the default).
--.It Cm NumberOfPasswordPrompts
--Specifies the number of password prompts before giving up.
--The argument to this keyword must be an integer.
--The default is 3.
--.It Cm PasswordAuthentication
--Specifies whether to use password authentication.
--The argument to this keyword must be
--.Cm yes
--(the default)
--or
--.Cm no .
--.It Cm PermitLocalCommand
--Allow local command execution via the
--.Ic LocalCommand
--option or using the
--.Ic !\& Ns Ar command
--escape sequence in
--.Xr ssh 1 .
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm PKCS11Provider
--Specifies which PKCS#11 provider to use.
--The argument to this keyword is the PKCS#11 shared library
--.Xr ssh 1
--should use to communicate with a PKCS#11 token providing the user's
--private RSA key.
--.It Cm Port
--Specifies the port number to connect on the remote host.
--The default is 22.
--.It Cm PreferredAuthentications
--Specifies the order in which the client should try authentication methods.
--This allows a client to prefer one method (e.g.\&
--.Cm keyboard-interactive )
--over another method (e.g.\&
--.Cm password ) .
--The default is:
--.Bd -literal -offset indent
--gssapi-with-mic,hostbased,publickey,
--keyboard-interactive,password
--.Ed
--.It Cm Protocol
--Specifies the protocol versions
--.Xr ssh 1
--should support in order of preference.
--The possible values are 1 and 2.
--Multiple versions must be comma-separated.
--When this option is set to
--.Cm 2,1
--.Nm ssh
--will try version 2 and fall back to version 1
--if version 2 is not available.
--The default is version 2.
--Protocol 1 suffers from a number of cryptographic weaknesses and should
--not be used.
--It is only offered to support legacy devices.
--.It Cm ProxyCommand
--Specifies the command to use to connect to the server.
--The command
--string extends to the end of the line, and is executed
--using the user's shell
--.Ql exec
--directive to avoid a lingering shell process.
--.Pp
--Arguments to
--.Cm ProxyCommand
--accept the tokens described in the
--.Sx TOKENS
--section.
--The command can be basically anything,
--and should read from its standard input and write to its standard output.
--It should eventually connect an
--.Xr sshd 8
--server running on some machine, or execute
--.Ic sshd -i
--somewhere.
--Host key management will be done using the
--HostName of the host being connected (defaulting to the name typed by
--the user).
--Setting the command to
--.Cm none
--disables this option entirely.
--Note that
--.Cm CheckHostIP
--is not available for connects with a proxy command.
--.Pp
--This directive is useful in conjunction with
--.Xr nc 1
--and its proxy support.
--For example, the following directive would connect via an HTTP proxy at
--192.0.2.0:
--.Bd -literal -offset 3n
--ProxyCommand /usr/bin/nc -X connect -x 192.0.2.0:8080 %h %p
--.Ed
--.It Cm ProxyJump
--Specifies one or more jump proxies as
--.Xo
--.Sm off
--.Op Ar user No @
--.Ar host
--.Op : Ns Ar port
--.Sm on
--.Xc .
--Multiple proxies may be separated by comma characters and will be visited
--sequentially.
--Setting this option will cause
--.Xr ssh 1
--to connect to the target host by first making a
--.Xr ssh 1
--connection to the specified
--.Cm ProxyJump
--host and then establishing a
--TCP forwarding to the ultimate target from there.
--.Pp
--Note that this option will compete with the
--.Cm ProxyCommand
--option - whichever is specified first will prevent later instances of the
--other from taking effect.
--.It Cm ProxyUseFdpass
--Specifies that
--.Cm ProxyCommand
--will pass a connected file descriptor back to
--.Xr ssh 1
--instead of continuing to execute and pass data.
--The default is
--.Cm no .
--.It Cm PubkeyAcceptedKeyTypes
--Specifies the key types that will be used for public key authentication
--as a comma-separated pattern list.
--Alternately if the specified value begins with a
--.Sq +
--character, then the key types after it will be appended to the default
--instead of replacing it.
--The default for this option is:
--.Bd -literal -offset 3n
--ecdsa-sha2-nistp256-cert-v01@openssh.com,
--ecdsa-sha2-nistp384-cert-v01@openssh.com,
--ecdsa-sha2-nistp521-cert-v01@openssh.com,
--ssh-ed25519-cert-v01@openssh.com,
--ssh-rsa-cert-v01@openssh.com,
--ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
--.Ed
--.Pp
--The list of available key types may also be obtained using
--.Qq ssh -Q key .
--.It Cm PubkeyAuthentication
--Specifies whether to try public key authentication.
--The argument to this keyword must be
--.Cm yes
--(the default)
--or
--.Cm no .
--.It Cm RekeyLimit
--Specifies the maximum amount of data that may be transmitted before the
--session key is renegotiated, optionally followed a maximum amount of
--time that may pass before the session key is renegotiated.
--The first argument is specified in bytes and may have a suffix of
--.Sq K ,
--.Sq M ,
--or
--.Sq G
--to indicate Kilobytes, Megabytes, or Gigabytes, respectively.
--The default is between
--.Sq 1G
--and
--.Sq 4G ,
--depending on the cipher.
--The optional second value is specified in seconds and may use any of the
--units documented in the
--.Sx TIME FORMATS
--section of
--.Xr sshd_config 5 .
--The default value for
--.Cm RekeyLimit
--is
--.Cm default none ,
--which means that rekeying is performed after the cipher's default amount
--of data has been sent or received and no time based rekeying is done.
--.It Cm RemoteForward
--Specifies that a TCP port on the remote machine be forwarded over
--the secure channel to the specified host and port from the local machine.
--The first argument must be
--.Sm off
--.Oo Ar bind_address : Oc Ar port
--.Sm on
--and the second argument must be
--.Ar host : Ns Ar hostport .
--IPv6 addresses can be specified by enclosing addresses in square brackets.
--Multiple forwardings may be specified, and additional
--forwardings can be given on the command line.
--Privileged ports can be forwarded only when
--logging in as root on the remote machine.
--.Pp
--If the
--.Ar port
--argument is 0,
--the listen port will be dynamically allocated on the server and reported
--to the client at run time.
--.Pp
--If the
--.Ar bind_address
--is not specified, the default is to only bind to loopback addresses.
--If the
--.Ar bind_address
--is
--.Ql *
--or an empty string, then the forwarding is requested to listen on all
--interfaces.
--Specifying a remote
--.Ar bind_address
--will only succeed if the server's
--.Cm GatewayPorts
--option is enabled (see
--.Xr sshd_config 5 ) .
--.It Cm RequestTTY
--Specifies whether to request a pseudo-tty for the session.
--The argument may be one of:
--.Cm no
--(never request a TTY),
--.Cm yes
--(always request a TTY when standard input is a TTY),
--.Cm force
--(always request a TTY) or
--.Cm auto
--(request a TTY when opening a login session).
--This option mirrors the
--.Fl t
--and
--.Fl T
--flags for
--.Xr ssh 1 .
--.It Cm RevokedHostKeys
--Specifies revoked host public keys.
--Keys listed in this file will be refused for host authentication.
--Note that if this file does not exist or is not readable,
--then host authentication will be refused for all hosts.
--Keys may be specified as a text file, listing one public key per line, or as
--an OpenSSH Key Revocation List (KRL) as generated by
--.Xr ssh-keygen 1 .
--For more information on KRLs, see the KEY REVOCATION LISTS section in
--.Xr ssh-keygen 1 .
--.It Cm RhostsRSAAuthentication
--Specifies whether to try rhosts based authentication with RSA host
--authentication.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--This option applies to protocol version 1 only and requires
--.Xr ssh 1
--to be setuid root.
--.It Cm RSAAuthentication
--Specifies whether to try RSA authentication.
--The argument to this keyword must be
--.Cm yes
--(the default)
--or
--.Cm no .
--RSA authentication will only be
--attempted if the identity file exists, or an authentication agent is
--running.
--Note that this option applies to protocol version 1 only.
--.It Cm SendEnv
--Specifies what variables from the local
--.Xr environ 7
--should be sent to the server.
--The server must also support it, and the server must be configured to
--accept these environment variables.
--Note that the
--.Ev TERM
--environment variable is always sent whenever a
--pseudo-terminal is requested as it is required by the protocol.
--Refer to
--.Cm AcceptEnv
--in
--.Xr sshd_config 5
--for how to configure the server.
--Variables are specified by name, which may contain wildcard characters.
--Multiple environment variables may be separated by whitespace or spread
--across multiple
--.Cm SendEnv
--directives.
--The default is not to send any environment variables.
--.Pp
--See
--.Sx PATTERNS
--for more information on patterns.
--.It Cm ServerAliveCountMax
--Sets the number of server alive messages (see below) which may be
--sent without
--.Xr ssh 1
--receiving any messages back from the server.
--If this threshold is reached while server alive messages are being sent,
--ssh will disconnect from the server, terminating the session.
--It is important to note that the use of server alive messages is very
--different from
--.Cm TCPKeepAlive
--(below).
--The server alive messages are sent through the encrypted channel
--and therefore will not be spoofable.
--The TCP keepalive option enabled by
--.Cm TCPKeepAlive
--is spoofable.
--The server alive mechanism is valuable when the client or
--server depend on knowing when a connection has become inactive.
--.Pp
--The default value is 3.
--If, for example,
--.Cm ServerAliveInterval
--(see below) is set to 15 and
--.Cm ServerAliveCountMax
--is left at the default, if the server becomes unresponsive,
--ssh will disconnect after approximately 45 seconds.
--.It Cm ServerAliveInterval
--Sets a timeout interval in seconds after which if no data has been received
--from the server,
--.Xr ssh 1
--will send a message through the encrypted
--channel to request a response from the server.
--The default
--is 0, indicating that these messages will not be sent to the server.
--.It Cm StreamLocalBindMask
--Sets the octal file creation mode mask
--.Pq umask
--used when creating a Unix-domain socket file for local or remote
--port forwarding.
--This option is only used for port forwarding to a Unix-domain socket file.
--.Pp
--The default value is 0177, which creates a Unix-domain socket file that is
--readable and writable only by the owner.
--Note that not all operating systems honor the file mode on Unix-domain
--socket files.
--.It Cm StreamLocalBindUnlink
--Specifies whether to remove an existing Unix-domain socket file for local
--or remote port forwarding before creating a new one.
--If the socket file already exists and
--.Cm StreamLocalBindUnlink
--is not enabled,
--.Nm ssh
--will be unable to forward the port to the Unix-domain socket file.
--This option is only used for port forwarding to a Unix-domain socket file.
--.Pp
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--.It Cm StrictHostKeyChecking
--If this flag is set to
--.Cm yes ,
--.Xr ssh 1
--will never automatically add host keys to the
--.Pa ~/.ssh/known_hosts
--file, and refuses to connect to hosts whose host key has changed.
--This provides maximum protection against trojan horse attacks,
--though it can be annoying when the
--.Pa /etc/ssh/ssh_known_hosts
--file is poorly maintained or when connections to new hosts are
--frequently made.
--This option forces the user to manually
--add all new hosts.
--If this flag is set to
--.Cm no ,
--ssh will automatically add new host keys to the
--user known hosts files.
--If this flag is set to
--.Cm ask
--(the default),
--new host keys
--will be added to the user known host files only after the user
--has confirmed that is what they really want to do, and
--ssh will refuse to connect to hosts whose host key has changed.
--The host keys of
--known hosts will be verified automatically in all cases.
--.It Cm TCPKeepAlive
--Specifies whether the system should send TCP keepalive messages to the
--other side.
--If they are sent, death of the connection or crash of one
--of the machines will be properly noticed.
--However, this means that
--connections will die if the route is down temporarily, and some people
--find it annoying.
--.Pp
--The default is
--.Cm yes
--(to send TCP keepalive messages), and the client will notice
--if the network goes down or the remote host dies.
--This is important in scripts, and many users want it too.
--.Pp
--To disable TCP keepalive messages, the value should be set to
--.Cm no .
--.It Cm Tunnel
--Request
--.Xr tun 4
--device forwarding between the client and the server.
--The argument must be
--.Cm yes ,
--.Cm point-to-point
--(layer 3),
--.Cm ethernet
--(layer 2),
--or
--.Cm no
--(the default).
--Specifying
--.Cm yes
--requests the default tunnel mode, which is
--.Cm point-to-point .
--.It Cm TunnelDevice
--Specifies the
--.Xr tun 4
--devices to open on the client
--.Pq Ar local_tun
--and the server
--.Pq Ar remote_tun .
--.Pp
--The argument must be
--.Sm off
--.Ar local_tun Op : Ar remote_tun .
--.Sm on
--The devices may be specified by numerical ID or the keyword
--.Cm any ,
--which uses the next available tunnel device.
--If
--.Ar remote_tun
--is not specified, it defaults to
--.Cm any .
--The default is
--.Cm any:any .
--.It Cm UpdateHostKeys
--Specifies whether
--.Xr ssh 1
--should accept notifications of additional hostkeys from the server sent
--after authentication has completed and add them to
--.Cm UserKnownHostsFile .
--The argument must be
--.Cm yes ,
--.Cm no
--(the default) or
--.Cm ask .
--Enabling this option allows learning alternate hostkeys for a server
--and supports graceful key rotation by allowing a server to send replacement
--public keys before old ones are removed.
--Additional hostkeys are only accepted if the key used to authenticate the
--host was already trusted or explicitly accepted by the user.
--If
--.Cm UpdateHostKeys
--is set to
--.Cm ask ,
--then the user is asked to confirm the modifications to the known_hosts file.
--Confirmation is currently incompatible with
--.Cm ControlPersist ,
--and will be disabled if it is enabled.
--.Pp
--Presently, only
--.Xr sshd 8
--from OpenSSH 6.8 and greater support the
--.Qq hostkeys@openssh.com
--protocol extension used to inform the client of all the server's hostkeys.
--.It Cm UsePrivilegedPort
--Specifies whether to use a privileged port for outgoing connections.
--The argument must be
--.Cm yes
--or
--.Cm no
--(the default).
--If set to
--.Cm yes ,
--.Xr ssh 1
--must be setuid root.
--Note that this option must be set to
--.Cm yes
--for
--.Cm RhostsRSAAuthentication
--with older servers.
--.It Cm User
--Specifies the user to log in as.
--This can be useful when a different user name is used on different machines.
--This saves the trouble of
--having to remember to give the user name on the command line.
--.It Cm UserKnownHostsFile
--Specifies one or more files to use for the user
--host key database, separated by whitespace.
--The default is
--.Pa ~/.ssh/known_hosts ,
--.Pa ~/.ssh/known_hosts2 .
--.It Cm VerifyHostKeyDNS
--Specifies whether to verify the remote key using DNS and SSHFP resource
--records.
--If this option is set to
--.Cm yes ,
--the client will implicitly trust keys that match a secure fingerprint
--from DNS.
--Insecure fingerprints will be handled as if this option was set to
--.Cm ask .
--If this option is set to
--.Cm ask ,
--information on fingerprint match will be displayed, but the user will still
--need to confirm new host keys according to the
--.Cm StrictHostKeyChecking
--option.
--The default is
--.Cm no .
--.Pp
--See also
--.Sx VERIFYING HOST KEYS
--in
--.Xr ssh 1 .
--.It Cm VisualHostKey
--If this flag is set to
--.Cm yes ,
--an ASCII art representation of the remote host key fingerprint is
--printed in addition to the fingerprint string at login and
--for unknown host keys.
--If this flag is set to
--.Cm no
--(the default),
--no fingerprint strings are printed at login and
--only the fingerprint string will be printed for unknown host keys.
--.It Cm XAuthLocation
--Specifies the full pathname of the
--.Xr xauth 1
--program.
--The default is
--.Pa /usr/X11R6/bin/xauth .
--.El
--.Sh PATTERNS
--A
--.Em pattern
--consists of zero or more non-whitespace characters,
--.Sq *
--(a wildcard that matches zero or more characters),
--or
--.Sq ?\&
--(a wildcard that matches exactly one character).
--For example, to specify a set of declarations for any host in the
--.Qq .co.uk
--set of domains,
--the following pattern could be used:
--.Pp
--.Dl Host *.co.uk
--.Pp
--The following pattern
--would match any host in the 192.168.0.[0-9] network range:
--.Pp
--.Dl Host 192.168.0.?
--.Pp
--A
--.Em pattern-list
--is a comma-separated list of patterns.
--Patterns within pattern-lists may be negated
--by preceding them with an exclamation mark
--.Pq Sq !\& .
--For example,
--to allow a key to be used from anywhere within an organization
--except from the
--.Qq dialup
--pool,
--the following entry (in authorized_keys) could be used:
--.Pp
--.Dl from=\&"!*.dialup.example.com,*.example.com\&"
--.Sh TOKENS
--Arguments to some keywords can make use of tokens,
--which are expanded at runtime:
--.Pp
--.Bl -tag -width XXXX -offset indent -compact
--.It %%
--A literal
--.Sq % .
--.It \&%C
--Shorthand for %l%h%p%r.
--.It %d
--Local user's home directory.
--.It %h
--The remote hostname.
--.It %i
--The local user ID.
--.It %L
--The local hostname.
--.It %l
--The local hostname, including the domain name.
--.It %n
--The original remote hostname, as given on the command line.
--.It %p
--The remote port.
--.It %r
--The remote username.
--.It %u
--The local username.
--.El
--.Pp
--.Cm Match exec
--accepts the tokens %%, %h, %L, %l, %n, %p, %r, and %u.
--.Pp
--.Cm CertificateFile
--accepts the tokens %%, %d, %h, %l, %r, and %u.
--.Pp
--.Cm ControlPath
--accepts the tokens %%, %C, %h, %i, %L, %l, %n, %p, %r, and %u.
--.Pp
--.Cm HostName
--accepts the tokens %% and %h.
--.Pp
--.Cm IdentityAgent
--and
--.Cm IdentityFile
--accept the tokens %%, %d, %h, %l, %r, and %u.
--.Pp
--.Cm LocalCommand
--accepts the tokens %%, %C, %d, %h, %l, %n, %p, %r, and %u.
--.Pp
--.Cm ProxyCommand
--accepts the tokens %%, %h, %p, and %r.
--.Sh FILES
--.Bl -tag -width Ds
--.It Pa ~/.ssh/config
--This is the per-user configuration file.
--The format of this file is described above.
--This file is used by the SSH client.
--Because of the potential for abuse, this file must have strict permissions:
--read/write for the user, and not accessible by others.
--.It Pa /etc/ssh/ssh_config
--Systemwide configuration file.
--This file provides defaults for those
--values that are not specified in the user's configuration file, and
--for those users who do not have a configuration file.
--This file must be world-readable.
--.El
--.Sh SEE ALSO
--.Xr ssh 1
--.Sh AUTHORS
--.An -nosplit
--OpenSSH is a derivative of the original and free
--ssh 1.2.12 release by
--.An Tatu Ylonen .
--.An Aaron Campbell , Bob Beck , Markus Friedl ,
--.An Niels Provos , Theo de Raadt
--and
--.An Dug Song
--removed many bugs, re-added newer features and
--created OpenSSH.
--.An Markus Friedl
--contributed the support for SSH protocol versions 1.5 and 2.0.
-diff --git a/sshd.1m b/sshd.1m
-new file mode 100644
-index 00000000..b767cc7a
---- /dev/null
-+++ b/sshd.1m
-@@ -0,0 +1,947 @@
-+.\"
-+.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
-+.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
-+.\"                    All rights reserved
-+.\"
-+.\" As far as I am concerned, the code I have written for this software
-+.\" can be used freely for any purpose.  Any derived versions of this
-+.\" software must be clearly marked as such, and if the derived work is
-+.\" incompatible with the protocol description in the RFC file, it must be
-+.\" called by a name other than "ssh" or "Secure Shell".
-+.\"
-+.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
-+.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
-+.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
-+.\"
-+.\" Redistribution and use in source and binary forms, with or without
-+.\" modification, are permitted provided that the following conditions
-+.\" are met:
-+.\" 1. Redistributions of source code must retain the above copyright
-+.\"    notice, this list of conditions and the following disclaimer.
-+.\" 2. Redistributions in binary form must reproduce the above copyright
-+.\"    notice, this list of conditions and the following disclaimer in the
-+.\"    documentation and/or other materials provided with the distribution.
-+.\"
-+.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-+.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-+.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-+.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-+.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-+.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-+.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-+.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-+.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-+.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-+.\"
-+.\" $OpenBSD: sshd.8,v 1.287 2016/11/30 02:57:40 djm Exp $
-+.Dd $Mdocdate: November 30 2016 $
-+.Dt SSHD 1m
-+.Os
-+.Sh NAME
-+.Nm sshd
-+.Nd OpenSSH SSH daemon
-+.Sh SYNOPSIS
-+.Nm sshd
-+.Bk -words
-+.Op Fl 46DdeiqTt
-+.Op Fl C Ar connection_spec
-+.Op Fl c Ar host_certificate_file
-+.Op Fl E Ar log_file
-+.Op Fl f Ar config_file
-+.Op Fl g Ar login_grace_time
-+.Op Fl h Ar host_key_file
-+.Op Fl o Ar option
-+.Op Fl p Ar port
-+.Op Fl u Ar len
-+.Ek
-+.Sh DESCRIPTION
-+.Nm
-+(OpenSSH Daemon) is the daemon program for
-+.Xr ssh 1 .
-+Together these programs replace rlogin and rsh,
-+and provide secure encrypted communications between two untrusted hosts
-+over an insecure network.
-+.Pp
-+.Nm
-+listens for connections from clients.
-+It is normally started at boot by
-+.Xr smf 5 .
-+It forks a new
-+daemon for each incoming connection.
-+The forked daemons handle
-+key exchange, encryption, authentication, command execution,
-+and data exchange.
-+.Pp
-+.Nm
-+can be configured using command-line options or a configuration file
-+(by default
-+.Xr sshd_config 4 ) ;
-+command-line options override values specified in the
-+configuration file.
-+.Nm
-+rereads its configuration file when it receives a hangup signal,
-+.Dv SIGHUP ,
-+by executing itself with the name and options it was started with, e.g.\&
-+.Pa /usr/sbin/sshd .
-+.Pp
-+The options are as follows:
-+.Bl -tag -width Ds
-+.It Fl 4
-+Forces
-+.Nm
-+to use IPv4 addresses only.
-+.It Fl 6
-+Forces
-+.Nm
-+to use IPv6 addresses only.
-+.It Fl C Ar connection_spec
-+Specify the connection parameters to use for the
-+.Fl T
-+extended test mode.
-+If provided, any
-+.Cm Match
-+directives in the configuration file
-+that would apply to the specified user, host, and address will be set before
-+the configuration is written to standard output.
-+The connection parameters are supplied as keyword=value pairs.
-+The keywords are
-+.Dq user ,
-+.Dq host ,
-+.Dq laddr ,
-+.Dq lport ,
-+and
-+.Dq addr .
-+All are required and may be supplied in any order, either with multiple
-+.Fl C
-+options or as a comma-separated list.
-+.It Fl c Ar host_certificate_file
-+Specifies a path to a certificate file to identify
-+.Nm
-+during key exchange.
-+The certificate file must match a host key file specified using the
-+.Fl h
-+option or the
-+.Cm HostKey
-+configuration directive.
-+.It Fl D
-+When this option is specified,
-+.Nm
-+will not detach and does not become a daemon.
-+This allows easy monitoring of
-+.Nm sshd .
-+.It Fl d
-+Debug mode.
-+The server sends verbose debug output to standard error,
-+and does not put itself in the background.
-+The server also will not fork and will only process one connection.
-+This option is only intended for debugging for the server.
-+Multiple
-+.Fl d
-+options increase the debugging level.
-+Maximum is 3.
-+.It Fl E Ar log_file
-+Append debug logs to
-+.Ar log_file
-+instead of the system log.
-+.It Fl e
-+Write debug logs to standard error instead of the system log.
-+.It Fl f Ar config_file
-+Specifies the name of the configuration file.
-+The default is
-+.Pa /etc/ssh/sshd_config .
-+.Nm
-+refuses to start if there is no configuration file.
-+.It Fl g Ar login_grace_time
-+Gives the grace time for clients to authenticate themselves (default
-+120 seconds).
-+If the client fails to authenticate the user within
-+this many seconds, the server disconnects and exits.
-+A value of zero indicates no limit.
-+.It Fl h Ar host_key_file
-+Specifies a file from which a host key is read.
-+This option must be given if
-+.Nm
-+is not run as root (as the normal
-+host key files are normally not readable by anyone but root).
-+The default is
-+.Pa /etc/ssh/ssh_host_dsa_key ,
-+.Pa /etc/ssh/ssh_host_ecdsa_key ,
-+.Pa /etc/ssh/ssh_host_ed25519_key
-+and
-+.Pa /etc/ssh/ssh_host_rsa_key .
-+It is possible to have multiple host key files for
-+the different host key algorithms.
-+.It Fl i
-+Specifies that
-+.Nm
-+is being run from
-+.Xr inetd 8 .
-+.It Fl o Ar option
-+Can be used to give options in the format used in the configuration file.
-+This is useful for specifying options for which there is no separate
-+command-line flag.
-+For full details of the options, and their values, see
-+.Xr sshd_config 4 .
-+.It Fl p Ar port
-+Specifies the port on which the server listens for connections
-+(default 22).
-+Multiple port options are permitted.
-+Ports specified in the configuration file with the
-+.Cm Port
-+option are ignored when a command-line port is specified.
-+Ports specified using the
-+.Cm ListenAddress
-+option override command-line ports.
-+.It Fl q
-+Quiet mode.
-+Nothing is sent to the system log.
-+Normally the beginning,
-+authentication, and termination of each connection is logged.
-+.It Fl T
-+Extended test mode.
-+Check the validity of the configuration file, output the effective configuration
-+to stdout and then exit.
-+Optionally,
-+.Cm Match
-+rules may be applied by specifying the connection parameters using one or more
-+.Fl C
-+options.
-+.It Fl t
-+Test mode.
-+Only check the validity of the configuration file and sanity of the keys.
-+This is useful for updating
-+.Nm
-+reliably as configuration options may change.
-+.It Fl u Ar len
-+This option is used to specify the size of the field
-+in the
-+.Li utmp
-+structure that holds the remote host name.
-+If the resolved host name is longer than
-+.Ar len ,
-+the dotted decimal value will be used instead.
-+This allows hosts with very long host names that
-+overflow this field to still be uniquely identified.
-+Specifying
-+.Fl u0
-+indicates that only dotted decimal addresses
-+should be put into the
-+.Pa utmp
-+file.
-+.Fl u0
-+may also be used to prevent
-+.Nm
-+from making DNS requests unless the authentication
-+mechanism or configuration requires it.
-+Authentication mechanisms that may require DNS include
-+.Cm HostbasedAuthentication
-+and using a
-+.Cm from="pattern-list"
-+option in a key file.
-+Configuration options that require DNS include using a
-+USER@HOST pattern in
-+.Cm AllowUsers
-+or
-+.Cm DenyUsers .
-+.El
-+.Sh AUTHENTICATION
-+The OpenSSH SSH daemon supports SSH protocol 2 only.
-+Each host has a host-specific key,
-+used to identify the host.
-+Whenever a client connects, the daemon responds with its public
-+host key.
-+The client compares the
-+host key against its own database to verify that it has not changed.
-+Forward security is provided through a Diffie-Hellman key agreement.
-+This key agreement results in a shared session key.
-+The rest of the session is encrypted using a symmetric cipher, currently
-+128-bit AES, Blowfish, 3DES, CAST128, Arcfour, 192-bit AES, or 256-bit AES.
-+The client selects the encryption algorithm
-+to use from those offered by the server.
-+Additionally, session integrity is provided
-+through a cryptographic message authentication code
-+(hmac-md5, hmac-sha1, umac-64, umac-128, hmac-ripemd160,
-+hmac-sha2-256 or hmac-sha2-512).
-+.Pp
-+Finally, the server and the client enter an authentication dialog.
-+The client tries to authenticate itself using
-+host-based authentication,
-+public key authentication,
-+challenge-response authentication,
-+or password authentication.
-+.Pp
-+Regardless of the authentication type, the account is checked to
-+ensure that it is accessible.  An account is not accessible if it is
-+locked, listed in
-+.Cm DenyUsers
-+or its group is listed in
-+.Cm DenyGroups
-+\&.  The definition of a locked account is system dependant. Some platforms
-+have their own account database (eg AIX) and some modify the passwd field (
-+.Ql \&*LK\&*
-+on Solaris and UnixWare,
-+.Ql \&*
-+on HP-UX, containing
-+.Ql Nologin
-+on Tru64,
-+a leading
-+.Ql \&*LOCKED\&*
-+on FreeBSD and a leading
-+.Ql \&!
-+on most Linuxes).
-+If there is a requirement to disable password authentication
-+for the account while allowing still public-key, then the passwd field
-+should be set to something other than these values (eg
-+.Ql NP
-+or
-+.Ql \&*NP\&*
-+).
-+.Pp
-+If the client successfully authenticates itself, a dialog for
-+preparing the session is entered.
-+At this time the client may request
-+things like allocating a pseudo-tty, forwarding X11 connections,
-+forwarding TCP connections, or forwarding the authentication agent
-+connection over the secure channel.
-+.Pp
-+After this, the client either requests a shell or execution of a command.
-+The sides then enter session mode.
-+In this mode, either side may send
-+data at any time, and such data is forwarded to/from the shell or
-+command on the server side, and the user terminal in the client side.
-+.Pp
-+When the user program terminates and all forwarded X11 and other
-+connections have been closed, the server sends command exit status to
-+the client, and both sides exit.
-+.Sh LOGIN PROCESS
-+When a user successfully logs in,
-+.Nm
-+does the following:
-+.Bl -enum -offset indent
-+.It
-+If the login is on a tty, and no command has been specified,
-+prints last login time and
-+.Pa /etc/motd
-+(unless prevented in the configuration file or by
-+.Pa ~/.hushlogin ;
-+see the
-+.Sx FILES
-+section).
-+.It
-+If the login is on a tty, records login time.
-+.It
-+Checks
-+.Pa /etc/nologin ;
-+if it exists, prints contents and quits
-+(unless root).
-+.It
-+Changes to run with normal user privileges.
-+.It
-+Sets up basic environment.
-+.It
-+Reads the file
-+.Pa ~/.ssh/environment ,
-+if it exists, and users are allowed to change their environment.
-+See the
-+.Cm PermitUserEnvironment
-+option in
-+.Xr sshd_config 4 .
-+.It
-+Changes to user's home directory.
-+.It
-+If
-+.Pa ~/.ssh/rc
-+exists and the
-+.Xr sshd_config 4
-+.Cm PermitUserRC
-+option is set, runs it; else if
-+.Pa /etc/ssh/sshrc
-+exists, runs
-+it; otherwise runs xauth.
-+The
-+.Dq rc
-+files are given the X11
-+authentication protocol and cookie in standard input.
-+See
-+.Sx SSHRC ,
-+below.
-+.It
-+Runs user's shell or command.
-+All commands are run under the user's login shell as specified in the
-+system password database.
-+.El
-+.Sh SSHRC
-+If the file
-+.Pa ~/.ssh/rc
-+exists,
-+.Xr sh 1
-+runs it after reading the
-+environment files but before starting the user's shell or command.
-+It must not produce any output on stdout; stderr must be used
-+instead.
-+If X11 forwarding is in use, it will receive the "proto cookie" pair in
-+its standard input (and
-+.Ev DISPLAY
-+in its environment).
-+The script must call
-+.Xr xauth 1
-+because
-+.Nm
-+will not run xauth automatically to add X11 cookies.
-+.Pp
-+The primary purpose of this file is to run any initialization routines
-+which may be needed before the user's home directory becomes
-+accessible; AFS is a particular example of such an environment.
-+.Pp
-+This file will probably contain some initialization code followed by
-+something similar to:
-+.Bd -literal -offset 3n
-+if read proto cookie && [ -n "$DISPLAY" ]; then
-+	if [ `echo $DISPLAY | cut -c1-10` = 'localhost:' ]; then
-+		# X11UseLocalhost=yes
-+		echo add unix:`echo $DISPLAY |
-+		    cut -c11-` $proto $cookie
-+	else
-+		# X11UseLocalhost=no
-+		echo add $DISPLAY $proto $cookie
-+	fi | xauth -q -
-+fi
-+.Ed
-+.Pp
-+If this file does not exist,
-+.Pa /etc/ssh/sshrc
-+is run, and if that
-+does not exist either, xauth is used to add the cookie.
-+.Sh AUTHORIZED_KEYS FILE FORMAT
-+.Cm AuthorizedKeysFile
-+specifies the files containing public keys for
-+public key authentication;
-+if this option is not specified, the default is
-+.Pa ~/.ssh/authorized_keys
-+and
-+.Pa ~/.ssh/authorized_keys2 .
-+Each line of the file contains one
-+key (empty lines and lines starting with a
-+.Ql #
-+are ignored as
-+comments).
-+Public keys consist of the following space-separated fields:
-+options, keytype, base64-encoded key, comment.
-+The options field is optional.
-+The keytype is
-+.Dq ecdsa-sha2-nistp256 ,
-+.Dq ecdsa-sha2-nistp384 ,
-+.Dq ecdsa-sha2-nistp521 ,
-+.Dq ssh-ed25519 ,
-+.Dq ssh-dss
-+or
-+.Dq ssh-rsa ;
-+the comment field is not used for anything (but may be convenient for the
-+user to identify the key).
-+.Pp
-+Note that lines in this file can be several hundred bytes long
-+(because of the size of the public key encoding) up to a limit of
-+8 kilobytes, which permits DSA keys up to 8 kilobits and RSA
-+keys up to 16 kilobits.
-+You don't want to type them in; instead, copy the
-+.Pa id_dsa.pub ,
-+.Pa id_ecdsa.pub ,
-+.Pa id_ed25519.pub ,
-+or the
-+.Pa id_rsa.pub
-+file and edit it.
-+.Pp
-+.Nm
-+enforces a minimum RSA key modulus size of 768 bits.
-+.Pp
-+The options (if present) consist of comma-separated option
-+specifications.
-+No spaces are permitted, except within double quotes.
-+The following option specifications are supported (note
-+that option keywords are case-insensitive):
-+.Bl -tag -width Ds
-+.It Cm agent-forwarding
-+Enable authentication agent forwarding previously disabled by the
-+.Cm restrict
-+option.
-+.It Cm cert-authority
-+Specifies that the listed key is a certification authority (CA) that is
-+trusted to validate signed certificates for user authentication.
-+.Pp
-+Certificates may encode access restrictions similar to these key options.
-+If both certificate restrictions and key options are present, the most
-+restrictive union of the two is applied.
-+.It Cm command="command"
-+Specifies that the command is executed whenever this key is used for
-+authentication.
-+The command supplied by the user (if any) is ignored.
-+The command is run on a pty if the client requests a pty;
-+otherwise it is run without a tty.
-+If an 8-bit clean channel is required,
-+one must not request a pty or should specify
-+.Cm no-pty .
-+A quote may be included in the command by quoting it with a backslash.
-+.Pp
-+This option might be useful
-+to restrict certain public keys to perform just a specific operation.
-+An example might be a key that permits remote backups but nothing else.
-+Note that the client may specify TCP and/or X11
-+forwarding unless they are explicitly prohibited, e.g. using the
-+.Cm restrict
-+key option.
-+.Pp
-+The command originally supplied by the client is available in the
-+.Ev SSH_ORIGINAL_COMMAND
-+environment variable.
-+Note that this option applies to shell, command or subsystem execution.
-+Also note that this command may be superseded by a
-+.Xr sshd_config 4
-+.Cm ForceCommand
-+directive.
-+.Pp
-+If a command is specified and a forced-command is embedded in a certificate
-+used for authentication, then the certificate will be accepted only if the
-+two commands are identical.
-+.It Cm environment="NAME=value"
-+Specifies that the string is to be added to the environment when
-+logging in using this key.
-+Environment variables set this way
-+override other default environment values.
-+Multiple options of this type are permitted.
-+Environment processing is disabled by default and is
-+controlled via the
-+.Cm PermitUserEnvironment
-+option.
-+.It Cm from="pattern-list"
-+Specifies that in addition to public key authentication, either the canonical
-+name of the remote host or its IP address must be present in the
-+comma-separated list of patterns.
-+See PATTERNS in
-+.Xr ssh_config 4
-+for more information on patterns.
-+.Pp
-+In addition to the wildcard matching that may be applied to hostnames or
-+addresses, a
-+.Cm from
-+stanza may match IP addresses using CIDR address/masklen notation.
-+.Pp
-+The purpose of this option is to optionally increase security: public key
-+authentication by itself does not trust the network or name servers or
-+anything (but the key); however, if somebody somehow steals the key, the key
-+permits an intruder to log in from anywhere in the world.
-+This additional option makes using a stolen key more difficult (name
-+servers and/or routers would have to be compromised in addition to
-+just the key).
-+.It Cm no-agent-forwarding
-+Forbids authentication agent forwarding when this key is used for
-+authentication.
-+.It Cm no-port-forwarding
-+Forbids TCP forwarding when this key is used for authentication.
-+Any port forward requests by the client will return an error.
-+This might be used, e.g. in connection with the
-+.Cm command
-+option.
-+.It Cm no-pty
-+Prevents tty allocation (a request to allocate a pty will fail).
-+.It Cm no-user-rc
-+Disables execution of
-+.Pa ~/.ssh/rc .
-+.It Cm no-X11-forwarding
-+Forbids X11 forwarding when this key is used for authentication.
-+Any X11 forward requests by the client will return an error.
-+.It Cm permitopen="host:port"
-+Limit local port forwarding with
-+.Xr ssh 1
-+.Fl L
-+such that it may only connect to the specified host and port.
-+IPv6 addresses can be specified by enclosing the address in square brackets.
-+Multiple
-+.Cm permitopen
-+options may be applied separated by commas.
-+No pattern matching is performed on the specified hostnames,
-+they must be literal domains or addresses.
-+A port specification of
-+.Cm *
-+matches any port.
-+.It Cm port-forwarding
-+Enable port forwarding previously disabled by the
-+.Cm restrict
-+.It Cm principals="principals"
-+On a
-+.Cm cert-authority
-+line, specifies allowed principals for certificate authentication as a
-+comma-separated list.
-+At least one name from the list must appear in the certificate's
-+list of principals for the certificate to be accepted.
-+This option is ignored for keys that are not marked as trusted certificate
-+signers using the
-+.Cm cert-authority
-+option.
-+.It Cm pty
-+Permits tty allocation previously disabled by the
-+.Cm restrict
-+option.
-+.It Cm restrict
-+Enable all restrictions, i.e. disable port, agent and X11 forwarding,
-+as well as disabling PTY allocation
-+and execution of
-+.Pa ~/.ssh/rc .
-+If any future restriction capabilities are added to authorized_keys files
-+they will be included in this set.
-+.It Cm tunnel="n"
-+Force a
-+.Xr tun 4
-+device on the server.
-+Without this option, the next available device will be used if
-+the client requests a tunnel.
-+.It Cm user-rc
-+Enables execution of
-+.Pa ~/.ssh/rc
-+previously disabled by the
-+.Cm restrict
-+option.
-+.It Cm X11-forwarding
-+Permits X11 forwarding previously disabled by the
-+.Cm restrict
-+option.
-+.El
-+.Pp
-+An example authorized_keys file:
-+.Bd -literal -offset 3n
-+# Comments allowed at start of line
-+ssh-rsa AAAAB3Nza...LiPk== user@example.net
-+from="*.sales.example.net,!pc.sales.example.net" ssh-rsa
-+AAAAB2...19Q== john@example.net
-+command="dump /home",no-pty,no-port-forwarding ssh-dss
-+AAAAC3...51R== example.net
-+permitopen="192.0.2.1:80",permitopen="192.0.2.2:25" ssh-dss
-+AAAAB5...21S==
-+tunnel="0",command="sh /etc/netstart tun0" ssh-rsa AAAA...==
-+jane@example.net
-+restrict,command="uptime" ssh-rsa AAAA1C8...32Tv==
-+user@example.net
-+restrict,pty,command="nethack" ssh-rsa AAAA1f8...IrrC5==
-+user@example.net
-+.Ed
-+.Sh SSH_KNOWN_HOSTS FILE FORMAT
-+The
-+.Pa /etc/ssh/ssh_known_hosts
-+and
-+.Pa ~/.ssh/known_hosts
-+files contain host public keys for all known hosts.
-+The global file should
-+be prepared by the administrator (optional), and the per-user file is
-+maintained automatically: whenever the user connects from an unknown host,
-+its key is added to the per-user file.
-+.Pp
-+Each line in these files contains the following fields: markers (optional),
-+hostnames, keytype, base64-encoded key, comment.
-+The fields are separated by spaces.
-+.Pp
-+The marker is optional, but if it is present then it must be one of
-+.Dq @cert-authority ,
-+to indicate that the line contains a certification authority (CA) key,
-+or
-+.Dq @revoked ,
-+to indicate that the key contained on the line is revoked and must not ever
-+be accepted.
-+Only one marker should be used on a key line.
-+.Pp
-+Hostnames is a comma-separated list of patterns
-+.Pf ( Ql *
-+and
-+.Ql \&?
-+act as
-+wildcards); each pattern in turn is matched against the canonical host
-+name (when authenticating a client) or against the user-supplied
-+name (when authenticating a server).
-+A pattern may also be preceded by
-+.Ql \&!
-+to indicate negation: if the host name matches a negated
-+pattern, it is not accepted (by that line) even if it matched another
-+pattern on the line.
-+A hostname or address may optionally be enclosed within
-+.Ql \&[
-+and
-+.Ql \&]
-+brackets then followed by
-+.Ql \&:
-+and a non-standard port number.
-+.Pp
-+Alternately, hostnames may be stored in a hashed form which hides host names
-+and addresses should the file's contents be disclosed.
-+Hashed hostnames start with a
-+.Ql |
-+character.
-+Only one hashed hostname may appear on a single line and none of the above
-+negation or wildcard operators may be applied.
-+.Pp
-+The keytype and base64-encoded key are taken directly from the host key; they
-+can be obtained, for example, from
-+.Pa /etc/ssh/ssh_host_rsa_key.pub .
-+The optional comment field continues to the end of the line, and is not used.
-+.Pp
-+Lines starting with
-+.Ql #
-+and empty lines are ignored as comments.
-+.Pp
-+When performing host authentication, authentication is accepted if any
-+matching line has the proper key; either one that matches exactly or,
-+if the server has presented a certificate for authentication, the key
-+of the certification authority that signed the certificate.
-+For a key to be trusted as a certification authority, it must use the
-+.Dq @cert-authority
-+marker described above.
-+.Pp
-+The known hosts file also provides a facility to mark keys as revoked,
-+for example when it is known that the associated private key has been
-+stolen.
-+Revoked keys are specified by including the
-+.Dq @revoked
-+marker at the beginning of the key line, and are never accepted for
-+authentication or as certification authorities, but instead will
-+produce a warning from
-+.Xr ssh 1
-+when they are encountered.
-+.Pp
-+It is permissible (but not
-+recommended) to have several lines or different host keys for the same
-+names.
-+This will inevitably happen when short forms of host names
-+from different domains are put in the file.
-+It is possible
-+that the files contain conflicting information; authentication is
-+accepted if valid information can be found from either file.
-+.Pp
-+Note that the lines in these files are typically hundreds of characters
-+long, and you definitely don't want to type in the host keys by hand.
-+Rather, generate them by a script,
-+.Xr ssh-keyscan 1
-+or by taking, for example,
-+.Pa /etc/ssh/ssh_host_rsa_key.pub
-+and adding the host names at the front.
-+.Xr ssh-keygen 1
-+also offers some basic automated editing for
-+.Pa ~/.ssh/known_hosts
-+including removing hosts matching a host name and converting all host
-+names to their hashed representations.
-+.Pp
-+An example ssh_known_hosts file:
-+.Bd -literal -offset 3n
-+# Comments allowed at start of line
-+closenet,...,192.0.2.53 1024 37 159...93 closenet.example.net
-+cvs.example.net,192.0.2.10 ssh-rsa AAAA1234.....=
-+# A hashed hostname
-+|1|JfKTdBh7rNbXkVAQCRp4OQoPfmI=|USECr3SWf1JUPsms5AqfD5QfxkM= ssh-rsa
-+AAAA1234.....=
-+# A revoked key
-+@revoked * ssh-rsa AAAAB5W...
-+# A CA key, accepted for any host in *.mydomain.com or *.mydomain.org
-+@cert-authority *.mydomain.org,*.mydomain.com ssh-rsa AAAAB5W...
-+.Ed
-+.Sh FILES
-+.Bl -tag -width Ds -compact
-+.It Pa ~/.hushlogin
-+This file is used to suppress printing the last login time and
-+.Pa /etc/motd ,
-+if
-+.Cm PrintLastLog
-+and
-+.Cm PrintMotd ,
-+respectively,
-+are enabled.
-+It does not suppress printing of the banner specified by
-+.Cm Banner .
-+.Pp
-+.It Pa ~/.rhosts
-+This file is used for host-based authentication (see
-+.Xr ssh 1
-+for more information).
-+On some machines this file may need to be
-+world-readable if the user's home directory is on an NFS partition,
-+because
-+.Nm
-+reads it as root.
-+Additionally, this file must be owned by the user,
-+and must not have write permissions for anyone else.
-+The recommended
-+permission for most machines is read/write for the user, and not
-+accessible by others.
-+.Pp
-+.It Pa ~/.shosts
-+This file is used in exactly the same way as
-+.Pa .rhosts ,
-+but allows host-based authentication without permitting login with
-+rlogin/rsh.
-+.Pp
-+.It Pa ~/.ssh/
-+This directory is the default location for all user-specific configuration
-+and authentication information.
-+There is no general requirement to keep the entire contents of this directory
-+secret, but the recommended permissions are read/write/execute for the user,
-+and not accessible by others.
-+.Pp
-+.It Pa ~/.ssh/authorized_keys
-+Lists the public keys (DSA, ECDSA, Ed25519, RSA)
-+that can be used for logging in as this user.
-+The format of this file is described above.
-+The content of the file is not highly sensitive, but the recommended
-+permissions are read/write for the user, and not accessible by others.
-+.Pp
-+If this file, the
-+.Pa ~/.ssh
-+directory, or the user's home directory are writable
-+by other users, then the file could be modified or replaced by unauthorized
-+users.
-+In this case,
-+.Nm
-+will not allow it to be used unless the
-+.Cm StrictModes
-+option has been set to
-+.Dq no .
-+.Pp
-+.It Pa ~/.ssh/environment
-+This file is read into the environment at login (if it exists).
-+It can only contain empty lines, comment lines (that start with
-+.Ql # ) ,
-+and assignment lines of the form name=value.
-+The file should be writable
-+only by the user; it need not be readable by anyone else.
-+Environment processing is disabled by default and is
-+controlled via the
-+.Cm PermitUserEnvironment
-+option.
-+.Pp
-+.It Pa ~/.ssh/known_hosts
-+Contains a list of host keys for all hosts the user has logged into
-+that are not already in the systemwide list of known host keys.
-+The format of this file is described above.
-+This file should be writable only by root/the owner and
-+can, but need not be, world-readable.
-+.Pp
-+.It Pa ~/.ssh/rc
-+Contains initialization routines to be run before
-+the user's home directory becomes accessible.
-+This file should be writable only by the user, and need not be
-+readable by anyone else.
-+.Pp
-+.It Pa /etc/hosts.equiv
-+This file is for host-based authentication (see
-+.Xr ssh 1 ) .
-+It should only be writable by root.
-+.Pp
-+.It Pa /etc/moduli
-+Contains Diffie-Hellman groups used for the "Diffie-Hellman Group Exchange"
-+key exchange method.
-+The file format is described in
-+.Xr moduli 4 .
-+If no usable groups are found in this file then fixed internal groups will
-+be used.
-+.Pp
-+.It Pa /etc/motd
-+See
-+.Xr motd 5 .
-+.Pp
-+.It Pa /etc/nologin
-+If this file exists,
-+.Nm
-+refuses to let anyone except root log in.
-+The contents of the file
-+are displayed to anyone trying to log in, and non-root connections are
-+refused.
-+The file should be world-readable.
-+.Pp
-+.It Pa /etc/shosts.equiv
-+This file is used in exactly the same way as
-+.Pa hosts.equiv ,
-+but allows host-based authentication without permitting login with
-+rlogin/rsh.
-+.Pp
-+.It Pa /etc/ssh/ssh_host_dsa_key
-+.It Pa /etc/ssh/ssh_host_ecdsa_key
-+.It Pa /etc/ssh/ssh_host_ed25519_key
-+.It Pa /etc/ssh/ssh_host_rsa_key
-+These files contain the private parts of the host keys.
-+These files should only be owned by root, readable only by root, and not
-+accessible to others.
-+Note that
-+.Nm
-+does not start if these files are group/world-accessible.
-+.Pp
-+.It Pa /etc/ssh/ssh_host_dsa_key.pub
-+.It Pa /etc/ssh/ssh_host_ecdsa_key.pub
-+.It Pa /etc/ssh/ssh_host_ed25519_key.pub
-+.It Pa /etc/ssh/ssh_host_rsa_key.pub
-+These files contain the public parts of the host keys.
-+These files should be world-readable but writable only by
-+root.
-+Their contents should match the respective private parts.
-+These files are not
-+really used for anything; they are provided for the convenience of
-+the user so their contents can be copied to known hosts files.
-+These files are created using
-+.Xr ssh-keygen 1 .
-+.Pp
-+.It Pa /etc/ssh/ssh_known_hosts
-+Systemwide list of known host keys.
-+This file should be prepared by the
-+system administrator to contain the public host keys of all machines in the
-+organization.
-+The format of this file is described above.
-+This file should be writable only by root/the owner and
-+should be world-readable.
-+.Pp
-+.It Pa /etc/ssh/sshd_config
-+Contains configuration data for
-+.Nm sshd .
-+The file format and configuration options are described in
-+.Xr sshd_config 4 .
-+.Pp
-+.It Pa /etc/ssh/sshrc
-+Similar to
-+.Pa ~/.ssh/rc ,
-+it can be used to specify
-+machine-specific login-time initializations globally.
-+This file should be writable only by root, and should be world-readable.
-+.Pp
-+.It Pa /var/empty
-+.Xr chroot 2
-+directory used by
-+.Nm
-+during privilege separation in the pre-authentication phase.
-+The directory should not contain any files and must be owned by root
-+and not group or world-writable.
-+.Pp
-+.It Pa /var/run/sshd.pid
-+Contains the process ID of the
-+.Nm
-+listening for connections (if there are several daemons running
-+concurrently for different ports, this contains the process ID of the one
-+started last).
-+The content of this file is not sensitive; it can be world-readable.
-+.El
-+.Sh SEE ALSO
-+.Xr scp 1 ,
-+.Xr sftp 1 ,
-+.Xr ssh 1 ,
-+.Xr ssh-add 1 ,
-+.Xr ssh-agent 1 ,
-+.Xr ssh-keygen 1 ,
-+.Xr ssh-keyscan 1 ,
-+.Xr chroot 2 ,
-+.Xr login.conf 5 ,
-+.Xr moduli 4 ,
-+.Xr sshd_config 4 ,
-+.Xr inetd 1M ,
-+.Xr sftp-server 1M
-+.Sh AUTHORS
-+OpenSSH is a derivative of the original and free
-+ssh 1.2.12 release by Tatu Ylonen.
-+Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
-+Theo de Raadt and Dug Song
-+removed many bugs, re-added newer features and
-+created OpenSSH.
-+Markus Friedl contributed the support for SSH
-+protocol versions 1.5 and 2.0.
-+Niels Provos and Markus Friedl contributed support
-+for privilege separation.
-diff --git a/sshd.8 b/sshd.8
-deleted file mode 100644
-index 41fc5051..00000000
+ from OpenSSH 6.8 and greater support the
+ .Qq hostkeys@openssh.com
+ protocol extension used to inform the client of all the server's hostkeys.
+diff --git a/sshd.8 b/sshd.1m
+similarity index 99%
+rename from sshd.8
+rename to sshd.1m
+index fb133c14..c65a688b 100644
 --- a/sshd.8
-+++ /dev/null
-@@ -1,947 +0,0 @@
--.\"
--.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
--.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
--.\"                    All rights reserved
--.\"
--.\" As far as I am concerned, the code I have written for this software
--.\" can be used freely for any purpose.  Any derived versions of this
--.\" software must be clearly marked as such, and if the derived work is
--.\" incompatible with the protocol description in the RFC file, it must be
--.\" called by a name other than "ssh" or "Secure Shell".
--.\"
--.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
--.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
--.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
--.\"
--.\" Redistribution and use in source and binary forms, with or without
--.\" modification, are permitted provided that the following conditions
--.\" are met:
--.\" 1. Redistributions of source code must retain the above copyright
--.\"    notice, this list of conditions and the following disclaimer.
--.\" 2. Redistributions in binary form must reproduce the above copyright
--.\"    notice, this list of conditions and the following disclaimer in the
--.\"    documentation and/or other materials provided with the distribution.
--.\"
--.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
--.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
--.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
--.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
--.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
--.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
--.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
--.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
--.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--.\"
--.\" $OpenBSD: sshd.8,v 1.287 2016/11/30 02:57:40 djm Exp $
--.Dd $Mdocdate: November 30 2016 $
++++ b/sshd.1m
+@@ -35,7 +35,7 @@
+ .\"
+ .\" $OpenBSD: sshd.8,v 1.304 2018/07/22 12:16:59 dtucker Exp $
+ .Dd $Mdocdate: July 22 2018 $
 -.Dt SSHD 8
--.Os
--.Sh NAME
--.Nm sshd
--.Nd OpenSSH SSH daemon
--.Sh SYNOPSIS
--.Nm sshd
--.Bk -words
--.Op Fl 46DdeiqTt
--.Op Fl C Ar connection_spec
--.Op Fl c Ar host_certificate_file
--.Op Fl E Ar log_file
--.Op Fl f Ar config_file
--.Op Fl g Ar login_grace_time
--.Op Fl h Ar host_key_file
--.Op Fl o Ar option
--.Op Fl p Ar port
--.Op Fl u Ar len
--.Ek
--.Sh DESCRIPTION
--.Nm
--(OpenSSH Daemon) is the daemon program for
--.Xr ssh 1 .
--Together these programs replace rlogin and rsh,
--and provide secure encrypted communications between two untrusted hosts
--over an insecure network.
--.Pp
--.Nm
--listens for connections from clients.
++.Dt SSHD 1m
+ .Os
+ .Sh NAME
+ .Nm sshd
+@@ -64,8 +64,8 @@ over an insecure network.
+ .Pp
+ .Nm
+ listens for connections from clients.
 -It is normally started at boot from
 -.Pa /etc/rc .
--It forks a new
--daemon for each incoming connection.
--The forked daemons handle
--key exchange, encryption, authentication, command execution,
--and data exchange.
--.Pp
--.Nm
--can be configured using command-line options or a configuration file
--(by default
++It is normally started at boot by
++.Xr smf 5 .
+ It forks a new
+ daemon for each incoming connection.
+ The forked daemons handle
+@@ -75,7 +75,7 @@ and data exchange.
+ .Nm
+ can be configured using command-line options or a configuration file
+ (by default
 -.Xr sshd_config 5 ) ;
--command-line options override values specified in the
--configuration file.
--.Nm
--rereads its configuration file when it receives a hangup signal,
--.Dv SIGHUP ,
--by executing itself with the name and options it was started with, e.g.\&
--.Pa /usr/sbin/sshd .
--.Pp
--The options are as follows:
--.Bl -tag -width Ds
--.It Fl 4
--Forces
--.Nm
--to use IPv4 addresses only.
--.It Fl 6
--Forces
--.Nm
--to use IPv6 addresses only.
--.It Fl C Ar connection_spec
--Specify the connection parameters to use for the
--.Fl T
--extended test mode.
--If provided, any
--.Cm Match
--directives in the configuration file
--that would apply to the specified user, host, and address will be set before
--the configuration is written to standard output.
--The connection parameters are supplied as keyword=value pairs.
--The keywords are
--.Dq user ,
--.Dq host ,
--.Dq laddr ,
--.Dq lport ,
--and
--.Dq addr .
--All are required and may be supplied in any order, either with multiple
--.Fl C
--options or as a comma-separated list.
--.It Fl c Ar host_certificate_file
--Specifies a path to a certificate file to identify
--.Nm
--during key exchange.
--The certificate file must match a host key file specified using the
--.Fl h
--option or the
--.Cm HostKey
--configuration directive.
--.It Fl D
--When this option is specified,
--.Nm
--will not detach and does not become a daemon.
--This allows easy monitoring of
--.Nm sshd .
--.It Fl d
--Debug mode.
--The server sends verbose debug output to standard error,
--and does not put itself in the background.
--The server also will not fork and will only process one connection.
--This option is only intended for debugging for the server.
--Multiple
--.Fl d
--options increase the debugging level.
--Maximum is 3.
--.It Fl E Ar log_file
--Append debug logs to
--.Ar log_file
--instead of the system log.
--.It Fl e
--Write debug logs to standard error instead of the system log.
--.It Fl f Ar config_file
--Specifies the name of the configuration file.
--The default is
--.Pa /etc/ssh/sshd_config .
--.Nm
--refuses to start if there is no configuration file.
--.It Fl g Ar login_grace_time
--Gives the grace time for clients to authenticate themselves (default
--120 seconds).
--If the client fails to authenticate the user within
--this many seconds, the server disconnects and exits.
--A value of zero indicates no limit.
--.It Fl h Ar host_key_file
--Specifies a file from which a host key is read.
--This option must be given if
--.Nm
--is not run as root (as the normal
--host key files are normally not readable by anyone but root).
--The default is
--.Pa /etc/ssh/ssh_host_dsa_key ,
--.Pa /etc/ssh/ssh_host_ecdsa_key ,
--.Pa /etc/ssh/ssh_host_ed25519_key
--and
--.Pa /etc/ssh/ssh_host_rsa_key .
--It is possible to have multiple host key files for
--the different host key algorithms.
--.It Fl i
--Specifies that
--.Nm
--is being run from
--.Xr inetd 8 .
--.It Fl o Ar option
--Can be used to give options in the format used in the configuration file.
--This is useful for specifying options for which there is no separate
--command-line flag.
--For full details of the options, and their values, see
++.Xr sshd_config 4 ) ;
+ command-line options override values specified in the
+ configuration file.
+ .Nm
+@@ -182,7 +182,7 @@ Can be used to give options in the format used in the configuration file.
+ This is useful for specifying options for which there is no separate
+ command-line flag.
+ For full details of the options, and their values, see
 -.Xr sshd_config 5 .
--.It Fl p Ar port
--Specifies the port on which the server listens for connections
--(default 22).
--Multiple port options are permitted.
--Ports specified in the configuration file with the
--.Cm Port
--option are ignored when a command-line port is specified.
--Ports specified using the
--.Cm ListenAddress
--option override command-line ports.
--.It Fl q
--Quiet mode.
--Nothing is sent to the system log.
--Normally the beginning,
--authentication, and termination of each connection is logged.
--.It Fl T
--Extended test mode.
--Check the validity of the configuration file, output the effective configuration
--to stdout and then exit.
--Optionally,
--.Cm Match
--rules may be applied by specifying the connection parameters using one or more
--.Fl C
--options.
--.It Fl t
--Test mode.
--Only check the validity of the configuration file and sanity of the keys.
--This is useful for updating
--.Nm
--reliably as configuration options may change.
--.It Fl u Ar len
--This option is used to specify the size of the field
--in the
--.Li utmp
--structure that holds the remote host name.
--If the resolved host name is longer than
--.Ar len ,
--the dotted decimal value will be used instead.
--This allows hosts with very long host names that
--overflow this field to still be uniquely identified.
--Specifying
--.Fl u0
--indicates that only dotted decimal addresses
--should be put into the
--.Pa utmp
--file.
--.Fl u0
--may also be used to prevent
--.Nm
--from making DNS requests unless the authentication
--mechanism or configuration requires it.
--Authentication mechanisms that may require DNS include
--.Cm HostbasedAuthentication
--and using a
--.Cm from="pattern-list"
--option in a key file.
--Configuration options that require DNS include using a
--USER@HOST pattern in
--.Cm AllowUsers
--or
--.Cm DenyUsers .
--.El
--.Sh AUTHENTICATION
--The OpenSSH SSH daemon supports SSH protocol 2 only.
--Each host has a host-specific key,
--used to identify the host.
--Whenever a client connects, the daemon responds with its public
--host key.
--The client compares the
--host key against its own database to verify that it has not changed.
--Forward security is provided through a Diffie-Hellman key agreement.
--This key agreement results in a shared session key.
--The rest of the session is encrypted using a symmetric cipher, currently
--128-bit AES, Blowfish, 3DES, CAST128, Arcfour, 192-bit AES, or 256-bit AES.
--The client selects the encryption algorithm
--to use from those offered by the server.
--Additionally, session integrity is provided
--through a cryptographic message authentication code
--(hmac-md5, hmac-sha1, umac-64, umac-128, hmac-ripemd160,
--hmac-sha2-256 or hmac-sha2-512).
--.Pp
--Finally, the server and the client enter an authentication dialog.
--The client tries to authenticate itself using
--host-based authentication,
--public key authentication,
--challenge-response authentication,
--or password authentication.
--.Pp
--Regardless of the authentication type, the account is checked to
--ensure that it is accessible.  An account is not accessible if it is
--locked, listed in
--.Cm DenyUsers
--or its group is listed in
--.Cm DenyGroups
--\&.  The definition of a locked account is system dependant. Some platforms
--have their own account database (eg AIX) and some modify the passwd field (
--.Ql \&*LK\&*
--on Solaris and UnixWare,
--.Ql \&*
--on HP-UX, containing
--.Ql Nologin
--on Tru64,
--a leading
--.Ql \&*LOCKED\&*
--on FreeBSD and a leading
--.Ql \&!
--on most Linuxes).
--If there is a requirement to disable password authentication
--for the account while allowing still public-key, then the passwd field
--should be set to something other than these values (eg
--.Ql NP
--or
--.Ql \&*NP\&*
--).
--.Pp
--If the client successfully authenticates itself, a dialog for
--preparing the session is entered.
--At this time the client may request
--things like allocating a pseudo-tty, forwarding X11 connections,
--forwarding TCP connections, or forwarding the authentication agent
--connection over the secure channel.
--.Pp
--After this, the client either requests a shell or execution of a command.
--The sides then enter session mode.
--In this mode, either side may send
--data at any time, and such data is forwarded to/from the shell or
--command on the server side, and the user terminal in the client side.
--.Pp
--When the user program terminates and all forwarded X11 and other
--connections have been closed, the server sends command exit status to
--the client, and both sides exit.
--.Sh LOGIN PROCESS
--When a user successfully logs in,
--.Nm
--does the following:
--.Bl -enum -offset indent
--.It
--If the login is on a tty, and no command has been specified,
--prints last login time and
--.Pa /etc/motd
--(unless prevented in the configuration file or by
--.Pa ~/.hushlogin ;
--see the
--.Sx FILES
--section).
--.It
--If the login is on a tty, records login time.
--.It
--Checks
--.Pa /etc/nologin ;
--if it exists, prints contents and quits
--(unless root).
--.It
--Changes to run with normal user privileges.
--.It
--Sets up basic environment.
--.It
--Reads the file
--.Pa ~/.ssh/environment ,
--if it exists, and users are allowed to change their environment.
--See the
--.Cm PermitUserEnvironment
--option in
++.Xr sshd_config 4 .
+ .It Fl p Ar port
+ Specifies the port on which the server listens for connections
+ (default 22).
+@@ -346,14 +346,14 @@ if it exists, and users are allowed to change their environment.
+ See the
+ .Cm PermitUserEnvironment
+ option in
 -.Xr sshd_config 5 .
--.It
--Changes to user's home directory.
--.It
--If
--.Pa ~/.ssh/rc
--exists and the
++.Xr sshd_config 4 .
+ .It
+ Changes to user's home directory.
+ .It
+ If
+ .Pa ~/.ssh/rc
+ exists and the
 -.Xr sshd_config 5
--.Cm PermitUserRC
--option is set, runs it; else if
--.Pa /etc/ssh/sshrc
--exists, runs
--it; otherwise runs xauth.
--The
--.Dq rc
--files are given the X11
--authentication protocol and cookie in standard input.
--See
--.Sx SSHRC ,
--below.
--.It
--Runs user's shell or command.
--All commands are run under the user's login shell as specified in the
--system password database.
--.El
--.Sh SSHRC
--If the file
--.Pa ~/.ssh/rc
--exists,
--.Xr sh 1
--runs it after reading the
--environment files but before starting the user's shell or command.
--It must not produce any output on stdout; stderr must be used
--instead.
--If X11 forwarding is in use, it will receive the "proto cookie" pair in
--its standard input (and
--.Ev DISPLAY
--in its environment).
--The script must call
--.Xr xauth 1
--because
--.Nm
--will not run xauth automatically to add X11 cookies.
--.Pp
--The primary purpose of this file is to run any initialization routines
--which may be needed before the user's home directory becomes
--accessible; AFS is a particular example of such an environment.
--.Pp
--This file will probably contain some initialization code followed by
--something similar to:
--.Bd -literal -offset 3n
--if read proto cookie && [ -n "$DISPLAY" ]; then
--	if [ `echo $DISPLAY | cut -c1-10` = 'localhost:' ]; then
--		# X11UseLocalhost=yes
--		echo add unix:`echo $DISPLAY |
--		    cut -c11-` $proto $cookie
--	else
--		# X11UseLocalhost=no
--		echo add $DISPLAY $proto $cookie
--	fi | xauth -q -
--fi
--.Ed
--.Pp
--If this file does not exist,
--.Pa /etc/ssh/sshrc
--is run, and if that
--does not exist either, xauth is used to add the cookie.
--.Sh AUTHORIZED_KEYS FILE FORMAT
--.Cm AuthorizedKeysFile
--specifies the files containing public keys for
--public key authentication;
--if this option is not specified, the default is
--.Pa ~/.ssh/authorized_keys
--and
--.Pa ~/.ssh/authorized_keys2 .
--Each line of the file contains one
--key (empty lines and lines starting with a
--.Ql #
--are ignored as
--comments).
--Public keys consist of the following space-separated fields:
--options, keytype, base64-encoded key, comment.
--The options field is optional.
--The keytype is
--.Dq ecdsa-sha2-nistp256 ,
--.Dq ecdsa-sha2-nistp384 ,
--.Dq ecdsa-sha2-nistp521 ,
--.Dq ssh-ed25519 ,
--.Dq ssh-dss
--or
--.Dq ssh-rsa ;
--the comment field is not used for anything (but may be convenient for the
--user to identify the key).
--.Pp
--Note that lines in this file can be several hundred bytes long
--(because of the size of the public key encoding) up to a limit of
--8 kilobytes, which permits DSA keys up to 8 kilobits and RSA
--keys up to 16 kilobits.
--You don't want to type them in; instead, copy the
--.Pa id_dsa.pub ,
--.Pa id_ecdsa.pub ,
--.Pa id_ed25519.pub ,
--or the
--.Pa id_rsa.pub
--file and edit it.
--.Pp
--.Nm
--enforces a minimum RSA key modulus size of 768 bits.
--.Pp
--The options (if present) consist of comma-separated option
--specifications.
--No spaces are permitted, except within double quotes.
--The following option specifications are supported (note
--that option keywords are case-insensitive):
--.Bl -tag -width Ds
--.It Cm agent-forwarding
--Enable authentication agent forwarding previously disabled by the
--.Cm restrict
--option.
--.It Cm cert-authority
--Specifies that the listed key is a certification authority (CA) that is
--trusted to validate signed certificates for user authentication.
--.Pp
--Certificates may encode access restrictions similar to these key options.
--If both certificate restrictions and key options are present, the most
--restrictive union of the two is applied.
--.It Cm command="command"
--Specifies that the command is executed whenever this key is used for
--authentication.
--The command supplied by the user (if any) is ignored.
--The command is run on a pty if the client requests a pty;
--otherwise it is run without a tty.
--If an 8-bit clean channel is required,
--one must not request a pty or should specify
--.Cm no-pty .
--A quote may be included in the command by quoting it with a backslash.
--.Pp
--This option might be useful
--to restrict certain public keys to perform just a specific operation.
--An example might be a key that permits remote backups but nothing else.
--Note that the client may specify TCP and/or X11
--forwarding unless they are explicitly prohibited, e.g. using the
--.Cm restrict
--key option.
--.Pp
--The command originally supplied by the client is available in the
--.Ev SSH_ORIGINAL_COMMAND
--environment variable.
--Note that this option applies to shell, command or subsystem execution.
--Also note that this command may be superseded by a
++.Xr sshd_config 4
+ .Cm PermitUserRC
+ option is set, runs it; else if
+ .Pa /etc/ssh/sshrc
+@@ -496,7 +496,7 @@ The command originally supplied by the client is available in the
+ environment variable.
+ Note that this option applies to shell, command or subsystem execution.
+ Also note that this command may be superseded by a
 -.Xr sshd_config 5
--.Cm ForceCommand
--directive.
--.Pp
--If a command is specified and a forced-command is embedded in a certificate
--used for authentication, then the certificate will be accepted only if the
--two commands are identical.
--.It Cm environment="NAME=value"
--Specifies that the string is to be added to the environment when
--logging in using this key.
--Environment variables set this way
--override other default environment values.
--Multiple options of this type are permitted.
--Environment processing is disabled by default and is
--controlled via the
--.Cm PermitUserEnvironment
--option.
--.It Cm from="pattern-list"
--Specifies that in addition to public key authentication, either the canonical
--name of the remote host or its IP address must be present in the
--comma-separated list of patterns.
--See PATTERNS in
++.Xr sshd_config 4
+ .Cm ForceCommand
+ directive.
+ .Pp
+@@ -522,7 +522,7 @@ Specifies that in addition to public key authentication, either the canonical
+ name of the remote host or its IP address must be present in the
+ comma-separated list of patterns.
+ See PATTERNS in
 -.Xr ssh_config 5
--for more information on patterns.
--.Pp
--In addition to the wildcard matching that may be applied to hostnames or
--addresses, a
--.Cm from
--stanza may match IP addresses using CIDR address/masklen notation.
--.Pp
--The purpose of this option is to optionally increase security: public key
--authentication by itself does not trust the network or name servers or
--anything (but the key); however, if somebody somehow steals the key, the key
--permits an intruder to log in from anywhere in the world.
--This additional option makes using a stolen key more difficult (name
--servers and/or routers would have to be compromised in addition to
--just the key).
--.It Cm no-agent-forwarding
--Forbids authentication agent forwarding when this key is used for
--authentication.
--.It Cm no-port-forwarding
--Forbids TCP forwarding when this key is used for authentication.
--Any port forward requests by the client will return an error.
--This might be used, e.g. in connection with the
--.Cm command
--option.
--.It Cm no-pty
--Prevents tty allocation (a request to allocate a pty will fail).
--.It Cm no-user-rc
--Disables execution of
--.Pa ~/.ssh/rc .
--.It Cm no-X11-forwarding
--Forbids X11 forwarding when this key is used for authentication.
--Any X11 forward requests by the client will return an error.
--.It Cm permitopen="host:port"
--Limit local port forwarding with
--.Xr ssh 1
--.Fl L
--such that it may only connect to the specified host and port.
--IPv6 addresses can be specified by enclosing the address in square brackets.
--Multiple
--.Cm permitopen
--options may be applied separated by commas.
--No pattern matching is performed on the specified hostnames,
--they must be literal domains or addresses.
--A port specification of
--.Cm *
--matches any port.
--.It Cm port-forwarding
--Enable port forwarding previously disabled by the
--.Cm restrict
--.It Cm principals="principals"
--On a
--.Cm cert-authority
--line, specifies allowed principals for certificate authentication as a
--comma-separated list.
--At least one name from the list must appear in the certificate's
--list of principals for the certificate to be accepted.
--This option is ignored for keys that are not marked as trusted certificate
--signers using the
--.Cm cert-authority
--option.
--.It Cm pty
--Permits tty allocation previously disabled by the
--.Cm restrict
--option.
--.It Cm restrict
--Enable all restrictions, i.e. disable port, agent and X11 forwarding,
--as well as disabling PTY allocation
--and execution of
--.Pa ~/.ssh/rc .
--If any future restriction capabilities are added to authorized_keys files
--they will be included in this set.
--.It Cm tunnel="n"
--Force a
--.Xr tun 4
--device on the server.
--Without this option, the next available device will be used if
--the client requests a tunnel.
--.It Cm user-rc
--Enables execution of
--.Pa ~/.ssh/rc
--previously disabled by the
--.Cm restrict
--option.
--.It Cm X11-forwarding
--Permits X11 forwarding previously disabled by the
--.Cm restrict
--option.
--.El
--.Pp
--An example authorized_keys file:
--.Bd -literal -offset 3n
--# Comments allowed at start of line
--ssh-rsa AAAAB3Nza...LiPk== user@example.net
--from="*.sales.example.net,!pc.sales.example.net" ssh-rsa
--AAAAB2...19Q== john@example.net
--command="dump /home",no-pty,no-port-forwarding ssh-dss
--AAAAC3...51R== example.net
--permitopen="192.0.2.1:80",permitopen="192.0.2.2:25" ssh-dss
--AAAAB5...21S==
--tunnel="0",command="sh /etc/netstart tun0" ssh-rsa AAAA...==
--jane@example.net
--restrict,command="uptime" ssh-rsa AAAA1C8...32Tv==
--user@example.net
--restrict,pty,command="nethack" ssh-rsa AAAA1f8...IrrC5==
--user@example.net
--.Ed
--.Sh SSH_KNOWN_HOSTS FILE FORMAT
--The
--.Pa /etc/ssh/ssh_known_hosts
--and
--.Pa ~/.ssh/known_hosts
--files contain host public keys for all known hosts.
--The global file should
--be prepared by the administrator (optional), and the per-user file is
--maintained automatically: whenever the user connects from an unknown host,
--its key is added to the per-user file.
--.Pp
--Each line in these files contains the following fields: markers (optional),
--hostnames, keytype, base64-encoded key, comment.
--The fields are separated by spaces.
--.Pp
--The marker is optional, but if it is present then it must be one of
--.Dq @cert-authority ,
--to indicate that the line contains a certification authority (CA) key,
--or
--.Dq @revoked ,
--to indicate that the key contained on the line is revoked and must not ever
--be accepted.
--Only one marker should be used on a key line.
--.Pp
--Hostnames is a comma-separated list of patterns
--.Pf ( Ql *
--and
--.Ql \&?
--act as
--wildcards); each pattern in turn is matched against the canonical host
--name (when authenticating a client) or against the user-supplied
--name (when authenticating a server).
--A pattern may also be preceded by
--.Ql \&!
--to indicate negation: if the host name matches a negated
--pattern, it is not accepted (by that line) even if it matched another
--pattern on the line.
--A hostname or address may optionally be enclosed within
--.Ql \&[
--and
--.Ql \&]
--brackets then followed by
--.Ql \&:
--and a non-standard port number.
--.Pp
--Alternately, hostnames may be stored in a hashed form which hides host names
--and addresses should the file's contents be disclosed.
--Hashed hostnames start with a
--.Ql |
--character.
--Only one hashed hostname may appear on a single line and none of the above
--negation or wildcard operators may be applied.
--.Pp
--The keytype and base64-encoded key are taken directly from the host key; they
--can be obtained, for example, from
--.Pa /etc/ssh/ssh_host_rsa_key.pub .
--The optional comment field continues to the end of the line, and is not used.
--.Pp
--Lines starting with
--.Ql #
--and empty lines are ignored as comments.
--.Pp
--When performing host authentication, authentication is accepted if any
--matching line has the proper key; either one that matches exactly or,
--if the server has presented a certificate for authentication, the key
--of the certification authority that signed the certificate.
--For a key to be trusted as a certification authority, it must use the
--.Dq @cert-authority
--marker described above.
--.Pp
--The known hosts file also provides a facility to mark keys as revoked,
--for example when it is known that the associated private key has been
--stolen.
--Revoked keys are specified by including the
--.Dq @revoked
--marker at the beginning of the key line, and are never accepted for
--authentication or as certification authorities, but instead will
--produce a warning from
--.Xr ssh 1
--when they are encountered.
--.Pp
--It is permissible (but not
--recommended) to have several lines or different host keys for the same
--names.
--This will inevitably happen when short forms of host names
--from different domains are put in the file.
--It is possible
--that the files contain conflicting information; authentication is
--accepted if valid information can be found from either file.
--.Pp
--Note that the lines in these files are typically hundreds of characters
--long, and you definitely don't want to type in the host keys by hand.
--Rather, generate them by a script,
--.Xr ssh-keyscan 1
--or by taking, for example,
--.Pa /etc/ssh/ssh_host_rsa_key.pub
--and adding the host names at the front.
--.Xr ssh-keygen 1
--also offers some basic automated editing for
--.Pa ~/.ssh/known_hosts
--including removing hosts matching a host name and converting all host
--names to their hashed representations.
--.Pp
--An example ssh_known_hosts file:
--.Bd -literal -offset 3n
--# Comments allowed at start of line
--closenet,...,192.0.2.53 1024 37 159...93 closenet.example.net
--cvs.example.net,192.0.2.10 ssh-rsa AAAA1234.....=
--# A hashed hostname
--|1|JfKTdBh7rNbXkVAQCRp4OQoPfmI=|USECr3SWf1JUPsms5AqfD5QfxkM= ssh-rsa
--AAAA1234.....=
--# A revoked key
--@revoked * ssh-rsa AAAAB5W...
--# A CA key, accepted for any host in *.mydomain.com or *.mydomain.org
--@cert-authority *.mydomain.org,*.mydomain.com ssh-rsa AAAAB5W...
--.Ed
--.Sh FILES
--.Bl -tag -width Ds -compact
--.It Pa ~/.hushlogin
--This file is used to suppress printing the last login time and
--.Pa /etc/motd ,
--if
--.Cm PrintLastLog
--and
--.Cm PrintMotd ,
--respectively,
--are enabled.
--It does not suppress printing of the banner specified by
--.Cm Banner .
--.Pp
--.It Pa ~/.rhosts
--This file is used for host-based authentication (see
--.Xr ssh 1
--for more information).
--On some machines this file may need to be
--world-readable if the user's home directory is on an NFS partition,
--because
--.Nm
--reads it as root.
--Additionally, this file must be owned by the user,
--and must not have write permissions for anyone else.
--The recommended
--permission for most machines is read/write for the user, and not
--accessible by others.
--.Pp
--.It Pa ~/.shosts
--This file is used in exactly the same way as
--.Pa .rhosts ,
--but allows host-based authentication without permitting login with
--rlogin/rsh.
--.Pp
--.It Pa ~/.ssh/
--This directory is the default location for all user-specific configuration
--and authentication information.
--There is no general requirement to keep the entire contents of this directory
--secret, but the recommended permissions are read/write/execute for the user,
--and not accessible by others.
--.Pp
--.It Pa ~/.ssh/authorized_keys
--Lists the public keys (DSA, ECDSA, Ed25519, RSA)
--that can be used for logging in as this user.
--The format of this file is described above.
--The content of the file is not highly sensitive, but the recommended
--permissions are read/write for the user, and not accessible by others.
--.Pp
--If this file, the
--.Pa ~/.ssh
--directory, or the user's home directory are writable
--by other users, then the file could be modified or replaced by unauthorized
--users.
--In this case,
--.Nm
--will not allow it to be used unless the
--.Cm StrictModes
--option has been set to
--.Dq no .
--.Pp
--.It Pa ~/.ssh/environment
--This file is read into the environment at login (if it exists).
--It can only contain empty lines, comment lines (that start with
--.Ql # ) ,
--and assignment lines of the form name=value.
--The file should be writable
--only by the user; it need not be readable by anyone else.
--Environment processing is disabled by default and is
--controlled via the
--.Cm PermitUserEnvironment
--option.
--.Pp
--.It Pa ~/.ssh/known_hosts
--Contains a list of host keys for all hosts the user has logged into
--that are not already in the systemwide list of known host keys.
--The format of this file is described above.
--This file should be writable only by root/the owner and
--can, but need not be, world-readable.
--.Pp
--.It Pa ~/.ssh/rc
--Contains initialization routines to be run before
--the user's home directory becomes accessible.
--This file should be writable only by the user, and need not be
--readable by anyone else.
--.Pp
--.It Pa /etc/hosts.equiv
--This file is for host-based authentication (see
--.Xr ssh 1 ) .
--It should only be writable by root.
--.Pp
--.It Pa /etc/moduli
--Contains Diffie-Hellman groups used for the "Diffie-Hellman Group Exchange"
--key exchange method.
--The file format is described in
++.Xr ssh_config 4
+ for more information on patterns.
+ .Pp
+ In addition to the wildcard matching that may be applied to hostnames or
+@@ -882,7 +882,7 @@ It should only be writable by root.
+ Contains Diffie-Hellman groups used for the "Diffie-Hellman Group Exchange"
+ key exchange method.
+ The file format is described in
 -.Xr moduli 5 .
--If no usable groups are found in this file then fixed internal groups will
--be used.
--.Pp
--.It Pa /etc/motd
--See
--.Xr motd 5 .
--.Pp
--.It Pa /etc/nologin
--If this file exists,
--.Nm
--refuses to let anyone except root log in.
--The contents of the file
--are displayed to anyone trying to log in, and non-root connections are
--refused.
--The file should be world-readable.
--.Pp
--.It Pa /etc/shosts.equiv
--This file is used in exactly the same way as
--.Pa hosts.equiv ,
--but allows host-based authentication without permitting login with
--rlogin/rsh.
--.Pp
--.It Pa /etc/ssh/ssh_host_dsa_key
--.It Pa /etc/ssh/ssh_host_ecdsa_key
--.It Pa /etc/ssh/ssh_host_ed25519_key
--.It Pa /etc/ssh/ssh_host_rsa_key
--These files contain the private parts of the host keys.
--These files should only be owned by root, readable only by root, and not
--accessible to others.
--Note that
--.Nm
--does not start if these files are group/world-accessible.
--.Pp
--.It Pa /etc/ssh/ssh_host_dsa_key.pub
--.It Pa /etc/ssh/ssh_host_ecdsa_key.pub
--.It Pa /etc/ssh/ssh_host_ed25519_key.pub
--.It Pa /etc/ssh/ssh_host_rsa_key.pub
--These files contain the public parts of the host keys.
--These files should be world-readable but writable only by
--root.
--Their contents should match the respective private parts.
--These files are not
--really used for anything; they are provided for the convenience of
--the user so their contents can be copied to known hosts files.
--These files are created using
--.Xr ssh-keygen 1 .
--.Pp
--.It Pa /etc/ssh/ssh_known_hosts
--Systemwide list of known host keys.
--This file should be prepared by the
--system administrator to contain the public host keys of all machines in the
--organization.
--The format of this file is described above.
--This file should be writable only by root/the owner and
--should be world-readable.
--.Pp
--.It Pa /etc/ssh/sshd_config
--Contains configuration data for
--.Nm sshd .
--The file format and configuration options are described in
++.Xr moduli 4 .
+ If no usable groups are found in this file then fixed internal groups will
+ be used.
+ .Pp
+@@ -941,7 +941,7 @@ should be world-readable.
+ Contains configuration data for
+ .Nm sshd .
+ The file format and configuration options are described in
 -.Xr sshd_config 5 .
--.Pp
--.It Pa /etc/ssh/sshrc
--Similar to
--.Pa ~/.ssh/rc ,
--it can be used to specify
--machine-specific login-time initializations globally.
--This file should be writable only by root, and should be world-readable.
--.Pp
--.It Pa /var/empty
--.Xr chroot 2
--directory used by
--.Nm
--during privilege separation in the pre-authentication phase.
--The directory should not contain any files and must be owned by root
--and not group or world-writable.
--.Pp
--.It Pa /var/run/sshd.pid
--Contains the process ID of the
--.Nm
--listening for connections (if there are several daemons running
--concurrently for different ports, this contains the process ID of the one
--started last).
--The content of this file is not sensitive; it can be world-readable.
--.El
--.Sh SEE ALSO
--.Xr scp 1 ,
--.Xr sftp 1 ,
--.Xr ssh 1 ,
--.Xr ssh-add 1 ,
--.Xr ssh-agent 1 ,
--.Xr ssh-keygen 1 ,
--.Xr ssh-keyscan 1 ,
--.Xr chroot 2 ,
--.Xr login.conf 5 ,
++.Xr sshd_config 4 .
+ .Pp
+ .It Pa /etc/ssh/sshrc
+ Similar to
+@@ -976,10 +976,10 @@ The content of this file is not sensitive; it can be world-readable.
+ .Xr ssh-keyscan 1 ,
+ .Xr chroot 2 ,
+ .Xr login.conf 5 ,
 -.Xr moduli 5 ,
 -.Xr sshd_config 5 ,
 -.Xr inetd 8 ,
 -.Xr sftp-server 8
--.Sh AUTHORS
--OpenSSH is a derivative of the original and free
--ssh 1.2.12 release by Tatu Ylonen.
--Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
--Theo de Raadt and Dug Song
--removed many bugs, re-added newer features and
--created OpenSSH.
--Markus Friedl contributed the support for SSH
--protocol versions 1.5 and 2.0.
--Niels Provos and Markus Friedl contributed support
--for privilege separation.
-diff --git a/sshd_config.4 b/sshd_config.4
-new file mode 100644
-index 00000000..efb10c97
---- /dev/null
-+++ b/sshd_config.4
-@@ -0,0 +1,1688 @@
-+.\"
-+.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
-+.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
-+.\"                    All rights reserved
-+.\"
-+.\" As far as I am concerned, the code I have written for this software
-+.\" can be used freely for any purpose.  Any derived versions of this
-+.\" software must be clearly marked as such, and if the derived work is
-+.\" incompatible with the protocol description in the RFC file, it must be
-+.\" called by a name other than "ssh" or "Secure Shell".
-+.\"
-+.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
-+.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
-+.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
-+.\"
-+.\" Redistribution and use in source and binary forms, with or without
-+.\" modification, are permitted provided that the following conditions
-+.\" are met:
-+.\" 1. Redistributions of source code must retain the above copyright
-+.\"    notice, this list of conditions and the following disclaimer.
-+.\" 2. Redistributions in binary form must reproduce the above copyright
-+.\"    notice, this list of conditions and the following disclaimer in the
-+.\"    documentation and/or other materials provided with the distribution.
-+.\"
-+.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-+.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-+.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-+.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-+.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-+.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-+.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-+.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-+.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-+.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-+.\"
-+.\" $OpenBSD: sshd_config.5,v 1.239 2016/11/30 03:00:05 djm Exp $
-+.Dd $Mdocdate: November 30 2016 $
-+.Dt SSHD_CONFIG 4
-+.Os
-+.Sh NAME
-+.Nm sshd_config
-+.Nd OpenSSH SSH daemon configuration file
-+.Sh SYNOPSIS
-+.Nm /etc/ssh/sshd_config
-+.Sh DESCRIPTION
-+.Xr sshd 1M
-+reads configuration data from
-+.Pa /etc/ssh/sshd_config
-+(or the file specified with
-+.Fl f
-+on the command line).
-+The file contains keyword-argument pairs, one per line.
-+Lines starting with
-+.Ql #
-+and empty lines are interpreted as comments.
-+Arguments may optionally be enclosed in double quotes
-+.Pq \&"
-+in order to represent arguments containing spaces.
-+.Pp
-+The possible
-+keywords and their meanings are as follows (note that
-+keywords are case-insensitive and arguments are case-sensitive):
-+.Bl -tag -width Ds
-+.It Cm AcceptEnv
-+Specifies what environment variables sent by the client will be copied into
-+the session's
-+.Xr environ 7 .
-+See
-+.Cm SendEnv
-+in
-+.Xr ssh_config 4
-+for how to configure the client.
-+The
-+.Ev TERM
-+environment variable is always sent whenever the client
-+requests a pseudo-terminal as it is required by the protocol.
-+Variables are specified by name, which may contain the wildcard characters
-+.Ql *
-+and
-+.Ql \&? .
-+Multiple environment variables may be separated by whitespace or spread
-+across multiple
-+.Cm AcceptEnv
-+directives.
-+Be warned that some environment variables could be used to bypass restricted
-+user environments.
-+For this reason, care should be taken in the use of this directive.
-+The default is not to accept any environment variables.
-+.It Cm AddressFamily
-+Specifies which address family should be used by
-+.Xr sshd 1M .
-+Valid arguments are
-+.Cm any
-+(the default),
-+.Cm inet
-+(use IPv4 only), or
-+.Cm inet6
-+(use IPv6 only).
-+.It Cm AllowAgentForwarding
-+Specifies whether
-+.Xr ssh-agent 1
-+forwarding is permitted.
-+The default is
-+.Cm yes .
-+Note that disabling agent forwarding does not improve security
-+unless users are also denied shell access, as they can always install
-+their own forwarders.
-+.It Cm AllowGroups
-+This keyword can be followed by a list of group name patterns, separated
-+by spaces.
-+If specified, login is allowed only for users whose primary
-+group or supplementary group list matches one of the patterns.
-+Only group names are valid; a numerical group ID is not recognized.
-+By default, login is allowed for all groups.
-+The allow/deny directives are processed in the following order:
-+.Cm DenyUsers ,
-+.Cm AllowUsers ,
-+.Cm DenyGroups ,
-+and finally
-+.Cm AllowGroups .
-+.Pp
-+See PATTERNS in
-+.Xr ssh_config 4
-+for more information on patterns.
-+.It Cm AllowStreamLocalForwarding
-+Specifies whether StreamLocal (Unix-domain socket) forwarding is permitted.
-+The available options are
-+.Cm yes
-+(the default)
-+or
-+.Cm all
-+to allow StreamLocal forwarding,
-+.Cm no
-+to prevent all StreamLocal forwarding,
-+.Cm local
-+to allow local (from the perspective of
-+.Xr ssh 1 )
-+forwarding only or
-+.Cm remote
-+to allow remote forwarding only.
-+Note that disabling StreamLocal forwarding does not improve security unless
-+users are also denied shell access, as they can always install their
-+own forwarders.
-+.It Cm AllowTcpForwarding
-+Specifies whether TCP forwarding is permitted.
-+The available options are
-+.Cm yes
-+(the default)
-+or
-+.Cm all
-+to allow TCP forwarding,
-+.Cm no
-+to prevent all TCP forwarding,
-+.Cm local
-+to allow local (from the perspective of
-+.Xr ssh 1 )
-+forwarding only or
-+.Cm remote
-+to allow remote forwarding only.
-+Note that disabling TCP forwarding does not improve security unless
-+users are also denied shell access, as they can always install their
-+own forwarders.
-+.It Cm AllowUsers
-+This keyword can be followed by a list of user name patterns, separated
-+by spaces.
-+If specified, login is allowed only for user names that
-+match one of the patterns.
-+Only user names are valid; a numerical user ID is not recognized.
-+By default, login is allowed for all users.
-+If the pattern takes the form USER@HOST then USER and HOST
-+are separately checked, restricting logins to particular
-+users from particular hosts.
-+HOST criteria may additionally contain addresses to match in CIDR
-+address/masklen format.
-+The allow/deny directives are processed in the following order:
-+.Cm DenyUsers ,
-+.Cm AllowUsers ,
-+.Cm DenyGroups ,
-+and finally
-+.Cm AllowGroups .
-+.Pp
-+See PATTERNS in
-+.Xr ssh_config 4
-+for more information on patterns.
-+.It Cm AuthenticationMethods
-+Specifies the authentication methods that must be successfully completed
-+for a user to be granted access.
-+This option must be followed by one or more comma-separated lists of
-+authentication method names, or by the single string
-+.Cm any
-+to indicate the default behaviour of accepting any single authentication
-+method.
-+If the default is overridden, then successful authentication requires
-+completion of every method in at least one of these lists.
-+.Pp
-+For example,
-+.Qq publickey,password publickey,keyboard-interactive
-+would require the user to complete public key authentication, followed by
-+either password or keyboard interactive authentication.
-+Only methods that are next in one or more lists are offered at each stage,
-+so for this example it would not be possible to attempt password or
-+keyboard-interactive authentication before public key.
-+.Pp
-+For keyboard interactive authentication it is also possible to
-+restrict authentication to a specific device by appending a
-+colon followed by the device identifier
-+.Cm bsdauth ,
-+.Cm pam ,
-+or
-+.Cm skey ,
-+depending on the server configuration.
-+For example,
-+.Qq keyboard-interactive:bsdauth
-+would restrict keyboard interactive authentication to the
-+.Cm bsdauth
-+device.
-+.Pp
-+If the publickey method is listed more than once,
-+.Xr sshd 1M
-+verifies that keys that have been used successfully are not reused for
-+subsequent authentications.
-+For example,
-+.Qq publickey,publickey
-+requires successful authentication using two different public keys.
-+.Pp
-+Note that each authentication method listed should also be explicitly enabled
-+in the configuration.
-+.It Cm AuthorizedKeysCommand
-+Specifies a program to be used to look up the user's public keys.
-+The program must be owned by root, not writable by group or others and
-+specified by an absolute path.
-+Arguments to
-+.Cm AuthorizedKeysCommand
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+If no arguments are specified then the username of the target user is used.
-+.Pp
-+The program should produce on standard output zero or
-+more lines of authorized_keys output (see
-+.Sx AUTHORIZED_KEYS
-+in
-+.Xr sshd 1M ) .
-+If a key supplied by
-+.Cm AuthorizedKeysCommand
-+does not successfully authenticate
-+and authorize the user then public key authentication continues using the usual
-+.Cm AuthorizedKeysFile
-+files.
-+By default, no
-+.Cm AuthorizedKeysCommand
-+is run.
-+.It Cm AuthorizedKeysCommandUser
-+Specifies the user under whose account the
-+.Cm AuthorizedKeysCommand
-+is run.
-+It is recommended to use a dedicated user that has no other role on the host
-+than running authorized keys commands.
-+If
-+.Cm AuthorizedKeysCommand
-+is specified but
-+.Cm AuthorizedKeysCommandUser
-+is not, then
-+.Xr sshd 1M
-+will refuse to start.
-+.It Cm AuthorizedKeysFile
-+Specifies the file that contains the public keys used for user authentication.
-+The format is described in the
-+.Sx AUTHORIZED_KEYS FILE FORMAT
-+section of
-+.Xr sshd 1M .
-+Arguments to
-+.Cm AuthorizedKeysFile
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+After expansion,
-+.Cm AuthorizedKeysFile
-+is taken to be an absolute path or one relative to the user's home
-+directory.
-+Multiple files may be listed, separated by whitespace.
-+Alternately this option may be set to
-+.Cm none
-+to skip checking for user keys in files.
-+The default is
-+.Qq .ssh/authorized_keys .ssh/authorized_keys2 .
-+.It Cm AuthorizedPrincipalsCommand
-+Specifies a program to be used to generate the list of allowed
-+certificate principals as per
-+.Cm AuthorizedPrincipalsFile .
-+The program must be owned by root, not writable by group or others and
-+specified by an absolute path.
-+Arguments to
-+.Cm AuthorizedPrincipalsCommand
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+If no arguments are specified then the username of the target user is used.
-+.Pp
-+The program should produce on standard output zero or
-+more lines of
-+.Cm AuthorizedPrincipalsFile
-+output.
-+If either
-+.Cm AuthorizedPrincipalsCommand
-+or
-+.Cm AuthorizedPrincipalsFile
-+is specified, then certificates offered by the client for authentication
-+must contain a principal that is listed.
-+By default, no
-+.Cm AuthorizedPrincipalsCommand
-+is run.
-+.It Cm AuthorizedPrincipalsCommandUser
-+Specifies the user under whose account the
-+.Cm AuthorizedPrincipalsCommand
-+is run.
-+It is recommended to use a dedicated user that has no other role on the host
-+than running authorized principals commands.
-+If
-+.Cm AuthorizedPrincipalsCommand
-+is specified but
-+.Cm AuthorizedPrincipalsCommandUser
-+is not, then
-+.Xr sshd 1M
-+will refuse to start.
-+.It Cm AuthorizedPrincipalsFile
-+Specifies a file that lists principal names that are accepted for
-+certificate authentication.
-+When using certificates signed by a key listed in
-+.Cm TrustedUserCAKeys ,
-+this file lists names, one of which must appear in the certificate for it
-+to be accepted for authentication.
-+Names are listed one per line preceded by key options (as described in
-+.Sx AUTHORIZED_KEYS FILE FORMAT
-+in
-+.Xr sshd 1M ) .
-+Empty lines and comments starting with
-+.Ql #
-+are ignored.
-+.Pp
-+Arguments to
-+.Cm AuthorizedPrincipalsFile
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+After expansion,
-+.Cm AuthorizedPrincipalsFile
-+is taken to be an absolute path or one relative to the user's home directory.
-+The default is
-+.Cm none ,
-+i.e. not to use a principals file \(en in this case, the username
-+of the user must appear in a certificate's principals list for it to be
-+accepted.
-+.Pp
-+Note that
-+.Cm AuthorizedPrincipalsFile
-+is only used when authentication proceeds using a CA listed in
-+.Cm TrustedUserCAKeys
-+and is not consulted for certification authorities trusted via
-+.Pa ~/.ssh/authorized_keys ,
-+though the
-+.Cm principals=
-+key option offers a similar facility (see
-+.Xr sshd 1M
-+for details).
-+.It Cm Banner
-+The contents of the specified file are sent to the remote user before
-+authentication is allowed.
-+If the argument is
-+.Cm none
-+then no banner is displayed.
-+By default, no banner is displayed.
-+.It Cm ChallengeResponseAuthentication
-+Specifies whether challenge-response authentication is allowed (e.g. via
-+PAM or through authentication styles supported in
-+.Xr login.conf 5 )
-+The default is
-+.Cm yes .
-+.It Cm ChrootDirectory
-+Specifies the pathname of a directory to
-+.Xr chroot 2
-+to after authentication.
-+At session startup
-+.Xr sshd 1M
-+checks that all components of the pathname are root-owned directories
-+which are not writable by any other user or group.
-+After the chroot,
-+.Xr sshd 1M
-+changes the working directory to the user's home directory.
-+Arguments to
-+.Cm ChrootDirectory
-+accept the tokens described in the
-+.Sx TOKENS
-+section.
-+.Pp
-+The
-+.Cm ChrootDirectory
-+must contain the necessary files and directories to support the
-+user's session.
-+For an interactive session this requires at least a shell, typically
-+.Xr sh 1 ,
-+and basic
-+.Pa /dev
-+nodes such as
-+.Xr null 4 ,
-+.Xr zero 4 ,
-+.Xr stdin 4 ,
-+.Xr stdout 4 ,
-+.Xr stderr 4 ,
-+and
-+.Xr tty 4
-+devices.
-+For file transfer sessions using SFTP
-+no additional configuration of the environment is necessary if the in-process
-+sftp-server is used,
-+though sessions which use logging may require
-+.Pa /dev/log
-+inside the chroot directory on some operating systems (see
++.Xr moduli 4 ,
++.Xr sshd_config 4 ,
++.Xr inetd 1M ,
 +.Xr sftp-server 1M
-+for details).
-+.Pp
-+For safety, it is very important that the directory hierarchy be
-+prevented from modification by other processes on the system (especially
-+those outside the jail).
-+Misconfiguration can lead to unsafe environments which
-+.Xr sshd 1M
-+cannot detect.
-+.Pp
-+The default is
-+.Cm none ,
-+indicating not to
-+.Xr chroot 2 .
-+.It Cm Ciphers
-+Specifies the ciphers allowed.
-+Multiple ciphers must be comma-separated.
-+If the specified value begins with a
-+.Sq +
-+character, then the specified ciphers will be appended to the default set
-+instead of replacing them.
-+.Pp
-+The supported ciphers are:
-+.Pp
-+.Bl -item -compact -offset indent
-+.It
-+3des-cbc
-+.It
-+aes128-cbc
-+.It
-+aes192-cbc
-+.It
-+aes256-cbc
-+.It
-+aes128-ctr
-+.It
-+aes192-ctr
-+.It
-+aes256-ctr
-+.It
-+aes128-gcm@openssh.com
-+.It
-+aes256-gcm@openssh.com
-+.It
-+arcfour
-+.It
-+arcfour128
-+.It
-+arcfour256
-+.It
-+blowfish-cbc
-+.It
-+cast128-cbc
-+.It
-+chacha20-poly1305@openssh.com
-+.El
-+.Pp
-+The default is:
-+.Bd -literal -offset indent
-+chacha20-poly1305@openssh.com,
-+aes128-ctr,aes192-ctr,aes256-ctr,
-+aes128-gcm@openssh.com,aes256-gcm@openssh.com
-+.Ed
-+.Pp
-+The list of available ciphers may also be obtained using
-+.Qq ssh -Q cipher .
-+.It Cm ClientAliveCountMax
-+Sets the number of client alive messages which may be sent without
-+.Xr sshd 1M
-+receiving any messages back from the client.
-+If this threshold is reached while client alive messages are being sent,
-+sshd will disconnect the client, terminating the session.
-+It is important to note that the use of client alive messages is very
-+different from
-+.Cm TCPKeepAlive .
-+The client alive messages are sent through the encrypted channel
-+and therefore will not be spoofable.
-+The TCP keepalive option enabled by
-+.Cm TCPKeepAlive
-+is spoofable.
-+The client alive mechanism is valuable when the client or
-+server depend on knowing when a connection has become inactive.
-+.Pp
-+The default value is 3.
-+If
-+.Cm ClientAliveInterval
-+is set to 15, and
-+.Cm ClientAliveCountMax
-+is left at the default, unresponsive SSH clients
-+will be disconnected after approximately 45 seconds.
-+.It Cm ClientAliveInterval
-+Sets a timeout interval in seconds after which if no data has been received
-+from the client,
-+.Xr sshd 1M
-+will send a message through the encrypted
-+channel to request a response from the client.
-+The default
-+is 0, indicating that these messages will not be sent to the client.
-+.It Cm Compression
-+Specifies whether compression is enabled after
-+the user has authenticated successfully.
-+The argument must be
-+.Cm yes ,
-+.Cm delayed
-+(a legacy synonym for
-+.Cm yes )
-+or
-+.Cm no .
-+The default is
-+.Cm yes .
-+.It Cm DenyGroups
-+This keyword can be followed by a list of group name patterns, separated
-+by spaces.
-+Login is disallowed for users whose primary group or supplementary
-+group list matches one of the patterns.
-+Only group names are valid; a numerical group ID is not recognized.
-+By default, login is allowed for all groups.
-+The allow/deny directives are processed in the following order:
-+.Cm DenyUsers ,
-+.Cm AllowUsers ,
-+.Cm DenyGroups ,
-+and finally
-+.Cm AllowGroups .
-+.Pp
-+See PATTERNS in
-+.Xr ssh_config 4
-+for more information on patterns.
-+.It Cm DenyUsers
-+This keyword can be followed by a list of user name patterns, separated
-+by spaces.
-+Login is disallowed for user names that match one of the patterns.
-+Only user names are valid; a numerical user ID is not recognized.
-+By default, login is allowed for all users.
-+If the pattern takes the form USER@HOST then USER and HOST
-+are separately checked, restricting logins to particular
-+users from particular hosts.
-+HOST criteria may additionally contain addresses to match in CIDR
-+address/masklen format.
-+The allow/deny directives are processed in the following order:
-+.Cm DenyUsers ,
-+.Cm AllowUsers ,
-+.Cm DenyGroups ,
-+and finally
-+.Cm AllowGroups .
-+.Pp
-+See PATTERNS in
-+.Xr ssh_config 4
-+for more information on patterns.
-+.It Cm DisableForwarding
-+Disables all forwarding features, including X11,
-+.Xr ssh-agent 1 ,
-+TCP and StreamLocal.
-+This option overrides all other forwarding-related options and may
-+simplify restricted configurations.
-+.It Cm FingerprintHash
-+Specifies the hash algorithm used when logging key fingerprints.
-+Valid options are:
-+.Cm md5
-+and
-+.Cm sha256 .
-+The default is
-+.Cm sha256 .
-+.It Cm ForceCommand
-+Forces the execution of the command specified by
-+.Cm ForceCommand ,
-+ignoring any command supplied by the client and
-+.Pa ~/.ssh/rc
-+if present.
-+The command is invoked by using the user's login shell with the -c option.
-+This applies to shell, command, or subsystem execution.
-+It is most useful inside a
-+.Cm Match
-+block.
-+The command originally supplied by the client is available in the
-+.Ev SSH_ORIGINAL_COMMAND
-+environment variable.
-+Specifying a command of
-+.Cm internal-sftp
-+will force the use of an in-process SFTP server that requires no support
-+files when used with
-+.Cm ChrootDirectory .
-+The default is
-+.Cm none .
-+.It Cm GatewayPorts
-+Specifies whether remote hosts are allowed to connect to ports
-+forwarded for the client.
-+By default,
-+.Xr sshd 1M
-+binds remote port forwardings to the loopback address.
-+This prevents other remote hosts from connecting to forwarded ports.
-+.Cm GatewayPorts
-+can be used to specify that sshd
-+should allow remote port forwardings to bind to non-loopback addresses, thus
-+allowing other hosts to connect.
-+The argument may be
-+.Cm no
-+to force remote port forwardings to be available to the local host only,
-+.Cm yes
-+to force remote port forwardings to bind to the wildcard address, or
-+.Cm clientspecified
-+to allow the client to select the address to which the forwarding is bound.
-+The default is
-+.Cm no .
-+.It Cm GSSAPIAuthentication
-+Specifies whether user authentication based on GSSAPI is allowed.
-+The default is
-+.Cm no .
-+.It Cm GSSAPICleanupCredentials
-+Specifies whether to automatically destroy the user's credentials cache
-+on logout.
-+The default is
-+.Cm yes .
-+.It Cm GSSAPIStrictAcceptorCheck
-+Determines whether to be strict about the identity of the GSSAPI acceptor
-+a client authenticates against.
-+If set to
-+.Cm yes
-+then the client must authenticate against the host
-+service on the current hostname.
-+If set to
-+.Cm no
-+then the client may authenticate against any service key stored in the
-+machine's default store.
-+This facility is provided to assist with operation on multi homed machines.
-+The default is
-+.Cm yes .
-+.It Cm HostbasedAcceptedKeyTypes
-+Specifies the key types that will be accepted for hostbased authentication
-+as a comma-separated pattern list.
-+Alternately if the specified value begins with a
-+.Sq +
-+character, then the specified key types will be appended to the default set
-+instead of replacing them.
-+The default for this option is:
-+.Bd -literal -offset 3n
-+ecdsa-sha2-nistp256-cert-v01@openssh.com,
-+ecdsa-sha2-nistp384-cert-v01@openssh.com,
-+ecdsa-sha2-nistp521-cert-v01@openssh.com,
-+ssh-ed25519-cert-v01@openssh.com,
-+ssh-rsa-cert-v01@openssh.com,
-+ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
-+ssh-ed25519,ssh-rsa
-+.Ed
-+.Pp
-+The list of available key types may also be obtained using
-+.Qq ssh -Q key .
-+.It Cm HostbasedAuthentication
-+Specifies whether rhosts or /etc/hosts.equiv authentication together
-+with successful public key client host authentication is allowed
-+(host-based authentication).
-+The default is
-+.Cm no .
-+.It Cm HostbasedUsesNameFromPacketOnly
-+Specifies whether or not the server will attempt to perform a reverse
-+name lookup when matching the name in the
-+.Pa ~/.shosts ,
-+.Pa ~/.rhosts ,
-+and
-+.Pa /etc/hosts.equiv
-+files during
-+.Cm HostbasedAuthentication .
-+A setting of
-+.Cm yes
-+means that
-+.Xr sshd 1M
-+uses the name supplied by the client rather than
-+attempting to resolve the name from the TCP connection itself.
-+The default is
-+.Cm no .
-+.It Cm HostCertificate
-+Specifies a file containing a public host certificate.
-+The certificate's public key must match a private host key already specified
-+by
-+.Cm HostKey .
-+The default behaviour of
-+.Xr sshd 1M
-+is not to load any certificates.
-+.It Cm HostKey
-+Specifies a file containing a private host key
-+used by SSH.
-+The defaults are
-+.Pa /etc/ssh/ssh_host_dsa_key ,
-+.Pa /etc/ssh/ssh_host_ecdsa_key ,
-+.Pa /etc/ssh/ssh_host_ed25519_key
-+and
-+.Pa /etc/ssh/ssh_host_rsa_key .
-+.Pp
-+Note that
-+.Xr sshd 1M
-+will refuse to use a file if it is group/world-accessible
-+and that the
-+.Cm HostKeyAlgorithms
-+option restricts which of the keys are actually used by
-+.Xr sshd 1M .
-+.Pp
-+It is possible to have multiple host key files.
-+It is also possible to specify public host key files instead.
-+In this case operations on the private key will be delegated
-+to an
-+.Xr ssh-agent 1 .
-+.It Cm HostKeyAgent
-+Identifies the UNIX-domain socket used to communicate
-+with an agent that has access to the private host keys.
-+If the string
-+.Qq SSH_AUTH_SOCK
-+is specified, the location of the socket will be read from the
-+.Ev SSH_AUTH_SOCK
-+environment variable.
-+.It Cm HostKeyAlgorithms
-+Specifies the host key algorithms
-+that the server offers.
-+The default for this option is:
-+.Bd -literal -offset 3n
-+ecdsa-sha2-nistp256-cert-v01@openssh.com,
-+ecdsa-sha2-nistp384-cert-v01@openssh.com,
-+ecdsa-sha2-nistp521-cert-v01@openssh.com,
-+ssh-ed25519-cert-v01@openssh.com,
-+ssh-rsa-cert-v01@openssh.com,
-+ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
-+ssh-ed25519,ssh-rsa
-+.Ed
-+.Pp
-+The list of available key types may also be obtained using
-+.Qq ssh -Q key .
-+.It Cm IgnoreRhosts
-+Specifies that
-+.Pa .rhosts
-+and
-+.Pa .shosts
-+files will not be used in
-+.Cm HostbasedAuthentication .
-+.Pp
-+.Pa /etc/hosts.equiv
-+and
-+.Pa /etc/shosts.equiv
-+are still used.
-+The default is
-+.Cm yes .
-+.It Cm IgnoreUserKnownHosts
-+Specifies whether
-+.Xr sshd 1M
-+should ignore the user's
-+.Pa ~/.ssh/known_hosts
-+during
-+.Cm HostbasedAuthentication .
-+The default is
-+.Cm no .
-+.It Cm IPQoS
-+Specifies the IPv4 type-of-service or DSCP class for the connection.
-+Accepted values are
-+.Cm af11 ,
-+.Cm af12 ,
-+.Cm af13 ,
-+.Cm af21 ,
-+.Cm af22 ,
-+.Cm af23 ,
-+.Cm af31 ,
-+.Cm af32 ,
-+.Cm af33 ,
-+.Cm af41 ,
-+.Cm af42 ,
-+.Cm af43 ,
-+.Cm cs0 ,
-+.Cm cs1 ,
-+.Cm cs2 ,
-+.Cm cs3 ,
-+.Cm cs4 ,
-+.Cm cs5 ,
-+.Cm cs6 ,
-+.Cm cs7 ,
-+.Cm ef ,
-+.Cm lowdelay ,
-+.Cm throughput ,
-+.Cm reliability ,
-+or a numeric value.
-+This option may take one or two arguments, separated by whitespace.
-+If one argument is specified, it is used as the packet class unconditionally.
-+If two values are specified, the first is automatically selected for
-+interactive sessions and the second for non-interactive sessions.
-+The default is
-+.Cm lowdelay
-+for interactive sessions and
-+.Cm throughput
-+for non-interactive sessions.
-+.It Cm KbdInteractiveAuthentication
-+Specifies whether to allow keyboard-interactive authentication.
-+The argument to this keyword must be
-+.Cm yes
-+or
-+.Cm no .
-+The default is to use whatever value
-+.Cm ChallengeResponseAuthentication
-+is set to
-+(by default
-+.Cm yes ) .
-+.It Cm KerberosAuthentication
-+Specifies whether the password provided by the user for
-+.Cm PasswordAuthentication
-+will be validated through the Kerberos KDC.
-+To use this option, the server needs a
-+Kerberos servtab which allows the verification of the KDC's identity.
-+The default is
-+.Cm no .
-+.It Cm KerberosGetAFSToken
-+If AFS is active and the user has a Kerberos 5 TGT, attempt to acquire
-+an AFS token before accessing the user's home directory.
-+The default is
-+.Cm no .
-+.It Cm KerberosOrLocalPasswd
-+If password authentication through Kerberos fails then
-+the password will be validated via any additional local mechanism
-+such as
-+.Pa /etc/passwd .
-+The default is
-+.Cm yes .
-+.It Cm KerberosTicketCleanup
-+Specifies whether to automatically destroy the user's ticket cache
-+file on logout.
-+The default is
-+.Cm yes .
-+.It Cm KexAlgorithms
-+Specifies the available KEX (Key Exchange) algorithms.
-+Multiple algorithms must be comma-separated.
-+Alternately if the specified value begins with a
-+.Sq +
-+character, then the specified methods will be appended to the default set
-+instead of replacing them.
-+The supported algorithms are:
-+.Pp
-+.Bl -item -compact -offset indent
-+.It
-+curve25519-sha256
-+.It
-+curve25519-sha256@libssh.org
-+.It
-+diffie-hellman-group1-sha1
-+.It
-+diffie-hellman-group14-sha1
-+.It
-+diffie-hellman-group-exchange-sha1
-+.It
-+diffie-hellman-group-exchange-sha256
-+.It
-+ecdh-sha2-nistp256
-+.It
-+ecdh-sha2-nistp384
-+.It
-+ecdh-sha2-nistp521
-+.El
-+.Pp
-+The default is:
-+.Bd -literal -offset indent
-+curve25519-sha256,curve25519-sha256@libssh.org,
-+ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,
-+diffie-hellman-group-exchange-sha256,
-+diffie-hellman-group14-sha1
-+.Ed
-+.Pp
-+The list of available key exchange algorithms may also be obtained using
-+.Qq ssh -Q kex .
-+.It Cm ListenAddress
-+Specifies the local addresses
-+.Xr sshd 1M
-+should listen on.
-+The following forms may be used:
-+.Pp
-+.Bl -item -offset indent -compact
-+.It
-+.Cm ListenAddress
-+.Sm off
-+.Ar host | Ar IPv4_addr | Ar IPv6_addr
-+.Sm on
-+.It
-+.Cm ListenAddress
-+.Sm off
-+.Ar host | Ar IPv4_addr : Ar port
-+.Sm on
-+.It
-+.Cm ListenAddress
-+.Sm off
-+.Oo
-+.Ar host | Ar IPv6_addr Oc : Ar port
-+.Sm on
-+.El
-+.Pp
-+If
-+.Ar port
-+is not specified,
-+sshd will listen on the address and all
-+.Cm Port
-+options specified.
-+The default is to listen on all local addresses.
-+Multiple
-+.Cm ListenAddress
-+options are permitted.
-+.It Cm LoginGraceTime
-+The server disconnects after this time if the user has not
-+successfully logged in.
-+If the value is 0, there is no time limit.
-+The default is 120 seconds.
-+.It Cm LogLevel
-+Gives the verbosity level that is used when logging messages from
-+.Xr sshd 1M .
-+The possible values are:
-+QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.
-+The default is INFO.
-+DEBUG and DEBUG1 are equivalent.
-+DEBUG2 and DEBUG3 each specify higher levels of debugging output.
-+Logging with a DEBUG level violates the privacy of users and is not recommended.
-+.It Cm MACs
-+Specifies the available MAC (message authentication code) algorithms.
-+The MAC algorithm is used for data integrity protection.
-+Multiple algorithms must be comma-separated.
-+If the specified value begins with a
-+.Sq +
-+character, then the specified algorithms will be appended to the default set
-+instead of replacing them.
-+.Pp
-+The algorithms that contain
-+.Qq -etm
-+calculate the MAC after encryption (encrypt-then-mac).
-+These are considered safer and their use recommended.
-+The supported MACs are:
-+.Pp
-+.Bl -item -compact -offset indent
-+.It
-+hmac-md5
-+.It
-+hmac-md5-96
-+.It
-+hmac-ripemd160
-+.It
-+hmac-sha1
-+.It
-+hmac-sha1-96
-+.It
-+hmac-sha2-256
-+.It
-+hmac-sha2-512
-+.It
-+umac-64@openssh.com
-+.It
-+umac-128@openssh.com
-+.It
-+hmac-md5-etm@openssh.com
-+.It
-+hmac-md5-96-etm@openssh.com
-+.It
-+hmac-ripemd160-etm@openssh.com
-+.It
-+hmac-sha1-etm@openssh.com
-+.It
-+hmac-sha1-96-etm@openssh.com
-+.It
-+hmac-sha2-256-etm@openssh.com
-+.It
-+hmac-sha2-512-etm@openssh.com
-+.It
-+umac-64-etm@openssh.com
-+.It
-+umac-128-etm@openssh.com
-+.El
-+.Pp
-+The default is:
-+.Bd -literal -offset indent
-+umac-64-etm@openssh.com,umac-128-etm@openssh.com,
-+hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,
-+hmac-sha1-etm@openssh.com,
-+umac-64@openssh.com,umac-128@openssh.com,
-+hmac-sha2-256,hmac-sha2-512,hmac-sha1
-+.Ed
-+.Pp
-+The list of available MAC algorithms may also be obtained using
-+.Qq ssh -Q mac .
-+.It Cm Match
-+Introduces a conditional block.
-+If all of the criteria on the
-+.Cm Match
-+line are satisfied, the keywords on the following lines override those
-+set in the global section of the config file, until either another
-+.Cm Match
-+line or the end of the file.
-+If a keyword appears in multiple
-+.Cm Match
-+blocks that are satisfied, only the first instance of the keyword is
-+applied.
-+.Pp
-+The arguments to
-+.Cm Match
-+are one or more criteria-pattern pairs or the single token
-+.Cm All
-+which matches all criteria.
-+The available criteria are
-+.Cm User ,
-+.Cm Group ,
-+.Cm Host ,
-+.Cm LocalAddress ,
-+.Cm LocalPort ,
-+and
-+.Cm Address .
-+The match patterns may consist of single entries or comma-separated
-+lists and may use the wildcard and negation operators described in the
-+.Sx PATTERNS
-+section of
-+.Xr ssh_config 4 .
-+.Pp
-+The patterns in an
-+.Cm Address
-+criteria may additionally contain addresses to match in CIDR
-+address/masklen format,
-+such as 192.0.2.0/24 or 2001:db8::/32.
-+Note that the mask length provided must be consistent with the address -
-+it is an error to specify a mask length that is too long for the address
-+or one with bits set in this host portion of the address.
-+For example, 192.0.2.0/33 and 192.0.2.0/8, respectively.
-+.Pp
-+Only a subset of keywords may be used on the lines following a
-+.Cm Match
-+keyword.
-+Available keywords are
-+.Cm AcceptEnv ,
-+.Cm AllowAgentForwarding ,
-+.Cm AllowGroups ,
-+.Cm AllowStreamLocalForwarding ,
-+.Cm AllowTcpForwarding ,
-+.Cm AllowUsers ,
-+.Cm AuthenticationMethods ,
-+.Cm AuthorizedKeysCommand ,
-+.Cm AuthorizedKeysCommandUser ,
-+.Cm AuthorizedKeysFile ,
-+.Cm AuthorizedPrincipalsCommand ,
-+.Cm AuthorizedPrincipalsCommandUser ,
-+.Cm AuthorizedPrincipalsFile ,
-+.Cm Banner ,
-+.Cm ChrootDirectory ,
-+.Cm ClientAliveCountMax ,
-+.Cm ClientAliveInterval ,
-+.Cm DenyGroups ,
-+.Cm DenyUsers ,
-+.Cm ForceCommand ,
-+.Cm GatewayPorts ,
-+.Cm GSSAPIAuthentication ,
-+.Cm HostbasedAcceptedKeyTypes ,
-+.Cm HostbasedAuthentication ,
-+.Cm HostbasedUsesNameFromPacketOnly ,
-+.Cm IPQoS ,
-+.Cm KbdInteractiveAuthentication ,
-+.Cm KerberosAuthentication ,
-+.Cm MaxAuthTries ,
-+.Cm MaxSessions ,
-+.Cm PasswordAuthentication ,
-+.Cm PermitEmptyPasswords ,
-+.Cm PermitOpen ,
-+.Cm PermitRootLogin ,
-+.Cm PermitTTY ,
-+.Cm PermitTunnel ,
-+.Cm PermitUserRC ,
-+.Cm PubkeyAcceptedKeyTypes ,
-+.Cm PubkeyAuthentication ,
-+.Cm RekeyLimit ,
-+.Cm RevokedKeys ,
-+.Cm StreamLocalBindMask ,
-+.Cm StreamLocalBindUnlink ,
-+.Cm TrustedUserCAKeys ,
-+.Cm X11DisplayOffset ,
-+.Cm X11Forwarding
-+and
-+.Cm X11UseLocalHost .
-+.It Cm MaxAuthTries
-+Specifies the maximum number of authentication attempts permitted per
-+connection.
-+Once the number of failures reaches half this value,
-+additional failures are logged.
-+The default is 6.
-+.It Cm MaxSessions
-+Specifies the maximum number of open shell, login or subsystem (e.g. sftp)
-+sessions permitted per network connection.
-+Multiple sessions may be established by clients that support connection
-+multiplexing.
-+Setting
-+.Cm MaxSessions
-+to 1 will effectively disable session multiplexing, whereas setting it to 0
-+will prevent all shell, login and subsystem sessions while still permitting
-+forwarding.
-+The default is 10.
-+.It Cm MaxStartups
-+Specifies the maximum number of concurrent unauthenticated connections to the
-+SSH daemon.
-+Additional connections will be dropped until authentication succeeds or the
-+.Cm LoginGraceTime
-+expires for a connection.
-+The default is 10:30:100.
-+.Pp
-+Alternatively, random early drop can be enabled by specifying
-+the three colon separated values
-+start:rate:full (e.g. "10:30:60").
-+.Xr sshd 1M
-+will refuse connection attempts with a probability of rate/100 (30%)
-+if there are currently start (10) unauthenticated connections.
-+The probability increases linearly and all connection attempts
-+are refused if the number of unauthenticated connections reaches full (60).
-+.It Cm PasswordAuthentication
-+Specifies whether password authentication is allowed.
-+The default is
-+.Cm yes .
-+.It Cm PermitEmptyPasswords
-+When password authentication is allowed, it specifies whether the
-+server allows login to accounts with empty password strings.
-+The default is
-+.Cm no .
-+.It Cm PermitOpen
-+Specifies the destinations to which TCP port forwarding is permitted.
-+The forwarding specification must be one of the following forms:
-+.Pp
-+.Bl -item -offset indent -compact
-+.It
-+.Cm PermitOpen
-+.Sm off
-+.Ar host : port
-+.Sm on
-+.It
-+.Cm PermitOpen
-+.Sm off
-+.Ar IPv4_addr : port
-+.Sm on
-+.It
-+.Cm PermitOpen
-+.Sm off
-+.Ar \&[ IPv6_addr \&] : port
-+.Sm on
-+.El
-+.Pp
-+Multiple forwards may be specified by separating them with whitespace.
-+An argument of
-+.Cm any
-+can be used to remove all restrictions and permit any forwarding requests.
-+An argument of
-+.Cm none
-+can be used to prohibit all forwarding requests.
-+The wildcard
-+.Sq *
-+can be used for host or port to allow all hosts or ports, respectively.
-+By default all port forwarding requests are permitted.
-+.It Cm PermitRootLogin
-+Specifies whether root can log in using
-+.Xr ssh 1 .
-+The argument must be
-+.Cm yes ,
-+.Cm prohibit-password ,
-+.Cm without-password ,
-+.Cm forced-commands-only ,
-+or
-+.Cm no .
-+The default is
-+.Cm prohibit-password .
-+.Pp
-+If this option is set to
-+.Cm prohibit-password
-+or
-+.Cm without-password ,
-+password and keyboard-interactive authentication are disabled for root.
-+.Pp
-+If this option is set to
-+.Cm forced-commands-only ,
-+root login with public key authentication will be allowed,
-+but only if the
-+.Ar command
-+option has been specified
-+(which may be useful for taking remote backups even if root login is
-+normally not allowed).
-+All other authentication methods are disabled for root.
-+.Pp
-+If this option is set to
-+.Cm no ,
-+root is not allowed to log in.
-+.It Cm PermitTTY
-+Specifies whether
-+.Xr pty 4
-+allocation is permitted.
-+The default is
-+.Cm yes .
-+.It Cm PermitTunnel
-+Specifies whether
-+.Xr tun 4
-+device forwarding is allowed.
-+The argument must be
-+.Cm yes ,
-+.Cm point-to-point
-+(layer 3),
-+.Cm ethernet
-+(layer 2), or
-+.Cm no .
-+Specifying
-+.Cm yes
-+permits both
-+.Cm point-to-point
-+and
-+.Cm ethernet .
-+The default is
-+.Cm no .
-+.Pp
-+Independent of this setting, the permissions of the selected
-+.Xr tun 4
-+device must allow access to the user.
-+.It Cm PermitUserEnvironment
-+Specifies whether
-+.Pa ~/.ssh/environment
-+and
-+.Cm environment=
-+options in
-+.Pa ~/.ssh/authorized_keys
-+are processed by
-+.Xr sshd 1M .
-+The default is
-+.Cm no .
-+Enabling environment processing may enable users to bypass access
-+restrictions in some configurations using mechanisms such as
-+.Ev LD_PRELOAD .
-+.It Cm PermitUserRC
-+Specifies whether any
-+.Pa ~/.ssh/rc
-+file is executed.
-+The default is
-+.Cm yes .
-+.It Cm PidFile
-+Specifies the file that contains the process ID of the
-+SSH daemon, or
-+.Cm none
-+to not write one.
-+The default is
-+.Pa /var/run/sshd.pid .
-+.It Cm Port
-+Specifies the port number that
-+.Xr sshd 1M
-+listens on.
-+The default is 22.
-+Multiple options of this type are permitted.
-+See also
-+.Cm ListenAddress .
-+.It Cm PrintLastLog
-+Specifies whether
-+.Xr sshd 1M
-+should print the date and time of the last user login when a user logs
-+in interactively.
-+On Solaris this option is always ignored since pam_unix_session(5)
-+reports the last login time.
-+.It Cm PrintMotd
-+Specifies whether
-+.Xr sshd 1M
-+should print
-+.Pa /etc/motd
-+when a user logs in interactively.
-+(On some systems it is also printed by the shell,
-+.Pa /etc/profile ,
-+or equivalent.)
-+The default is
-+.Cm yes .
-+.It Cm PubkeyAcceptedKeyTypes
-+Specifies the key types that will be accepted for public key authentication
-+as a comma-separated pattern list.
-+Alternately if the specified value begins with a
-+.Sq +
-+character, then the specified key types will be appended to the default set
-+instead of replacing them.
-+The default for this option is:
-+.Bd -literal -offset 3n
-+ecdsa-sha2-nistp256-cert-v01@openssh.com,
-+ecdsa-sha2-nistp384-cert-v01@openssh.com,
-+ecdsa-sha2-nistp521-cert-v01@openssh.com,
-+ssh-ed25519-cert-v01@openssh.com,
-+ssh-rsa-cert-v01@openssh.com,
-+ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
-+ssh-ed25519,ssh-rsa
-+.Ed
-+.Pp
-+The list of available key types may also be obtained using
-+.Qq ssh -Q key .
-+.It Cm PubkeyAuthentication
-+Specifies whether public key authentication is allowed.
-+The default is
-+.Cm yes .
-+.It Cm RekeyLimit
-+Specifies the maximum amount of data that may be transmitted before the
-+session key is renegotiated, optionally followed a maximum amount of
-+time that may pass before the session key is renegotiated.
-+The first argument is specified in bytes and may have a suffix of
-+.Sq K ,
-+.Sq M ,
-+or
-+.Sq G
-+to indicate Kilobytes, Megabytes, or Gigabytes, respectively.
-+The default is between
-+.Sq 1G
-+and
-+.Sq 4G ,
-+depending on the cipher.
-+The optional second value is specified in seconds and may use any of the
-+units documented in the
-+.Sx TIME FORMATS
-+section.
-+The default value for
-+.Cm RekeyLimit
-+is
-+.Cm default none ,
-+which means that rekeying is performed after the cipher's default amount
-+of data has been sent or received and no time based rekeying is done.
-+.It Cm RevokedKeys
-+Specifies revoked public keys file, or
-+.Cm none
-+to not use one.
-+Keys listed in this file will be refused for public key authentication.
-+Note that if this file is not readable, then public key authentication will
-+be refused for all users.
-+Keys may be specified as a text file, listing one public key per line, or as
-+an OpenSSH Key Revocation List (KRL) as generated by
-+.Xr ssh-keygen 1 .
-+For more information on KRLs, see the KEY REVOCATION LISTS section in
-+.Xr ssh-keygen 1 .
-+.It Cm StreamLocalBindMask
-+Sets the octal file creation mode mask
-+.Pq umask
-+used when creating a Unix-domain socket file for local or remote
-+port forwarding.
-+This option is only used for port forwarding to a Unix-domain socket file.
-+.Pp
-+The default value is 0177, which creates a Unix-domain socket file that is
-+readable and writable only by the owner.
-+Note that not all operating systems honor the file mode on Unix-domain
-+socket files.
-+.It Cm StreamLocalBindUnlink
-+Specifies whether to remove an existing Unix-domain socket file for local
-+or remote port forwarding before creating a new one.
-+If the socket file already exists and
-+.Cm StreamLocalBindUnlink
-+is not enabled,
-+.Nm sshd
-+will be unable to forward the port to the Unix-domain socket file.
-+This option is only used for port forwarding to a Unix-domain socket file.
-+.Pp
-+The argument must be
-+.Cm yes
-+or
-+.Cm no .
-+The default is
-+.Cm no .
-+.It Cm StrictModes
-+Specifies whether
-+.Xr sshd 1M
-+should check file modes and ownership of the
-+user's files and home directory before accepting login.
-+This is normally desirable because novices sometimes accidentally leave their
-+directory or files world-writable.
-+The default is
-+.Cm yes .
-+Note that this does not apply to
-+.Cm ChrootDirectory ,
-+whose permissions and ownership are checked unconditionally.
-+.It Cm Subsystem
-+Configures an external subsystem (e.g. file transfer daemon).
-+Arguments should be a subsystem name and a command (with optional arguments)
-+to execute upon subsystem request.
-+.Pp
-+The command
-+.Cm sftp-server
-+implements the SFTP file transfer subsystem.
-+.Pp
-+Alternately the name
-+.Cm internal-sftp
-+implements an in-process SFTP server.
-+This may simplify configurations using
-+.Cm ChrootDirectory
-+to force a different filesystem root on clients.
-+.Pp
-+By default no subsystems are defined.
-+.It Cm SyslogFacility
-+Gives the facility code that is used when logging messages from
-+.Xr sshd 1M .
-+The possible values are: DAEMON, USER, AUTH, LOCAL0, LOCAL1, LOCAL2,
-+LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.
-+The default is AUTH.
-+.It Cm TCPKeepAlive
-+Specifies whether the system should send TCP keepalive messages to the
-+other side.
-+If they are sent, death of the connection or crash of one
-+of the machines will be properly noticed.
-+However, this means that
-+connections will die if the route is down temporarily, and some people
-+find it annoying.
-+On the other hand, if TCP keepalives are not sent,
-+sessions may hang indefinitely on the server, leaving
-+.Qq ghost
-+users and consuming server resources.
-+.Pp
-+The default is
-+.Cm yes
-+(to send TCP keepalive messages), and the server will notice
-+if the network goes down or the client host crashes.
-+This avoids infinitely hanging sessions.
-+.Pp
-+To disable TCP keepalive messages, the value should be set to
-+.Cm no .
-+.It Cm TrustedUserCAKeys
-+Specifies a file containing public keys of certificate authorities that are
-+trusted to sign user certificates for authentication, or
-+.Cm none
-+to not use one.
-+Keys are listed one per line; empty lines and comments starting with
-+.Ql #
-+are allowed.
-+If a certificate is presented for authentication and has its signing CA key
-+listed in this file, then it may be used for authentication for any user
-+listed in the certificate's principals list.
-+Note that certificates that lack a list of principals will not be permitted
-+for authentication using
-+.Cm TrustedUserCAKeys .
-+For more details on certificates, see the CERTIFICATES section in
-+.Xr ssh-keygen 1 .
-+.It Cm UseDNS
-+Specifies whether
-+.Xr sshd 1M
-+should look up the remote host name, and to check that
-+the resolved host name for the remote IP address maps back to the
-+very same IP address.
-+.Pp
-+If this option is set to
-+.Cm no
-+(the default) then only addresses and not host names may be used in
-+.Pa ~/.ssh/authorized_keys
-+.Cm from
-+and
-+.Nm
-+.Cm Match
-+.Cm Host
-+directives.
-+.It Cm UsePAM
-+Enables the Pluggable Authentication Module interface.
-+If set to
-+.Cm yes
-+this will enable PAM authentication using
-+.Cm ChallengeResponseAuthentication
-+and
-+.Cm PasswordAuthentication
-+in addition to PAM account and session module processing for all
-+authentication types.
-+.Pp
-+Because PAM challenge-response authentication usually serves an equivalent
-+role to password authentication, you should disable either
-+.Cm PasswordAuthentication
-+or
-+.Cm ChallengeResponseAuthentication.
-+.Pp
-+If
-+.Cm UsePAM
-+is enabled, you will not be able to run
-+.Xr sshd 1M
-+as a non-root user.
-+The default is
-+.Cm no .
-+.It Cm UsePrivilegeSeparation
-+Specifies whether
-+.Xr sshd 1M
-+separates privileges by creating an unprivileged child process
-+to deal with incoming network traffic.
-+After successful authentication, another process will be created that has
-+the privilege of the authenticated user.
-+The goal of privilege separation is to prevent privilege
-+escalation by containing any corruption within the unprivileged processes.
-+The argument must be
-+.Cm yes ,
-+.Cm no ,
-+or
-+.Cm sandbox .
-+If
-+.Cm UsePrivilegeSeparation
-+is set to
-+.Cm sandbox
-+then the pre-authentication unprivileged process is subject to additional
-+restrictions.
-+The default is
-+.Cm sandbox .
-+.It Cm VersionAddendum
-+Optionally specifies additional text to append to the SSH protocol banner
-+sent by the server upon connection.
-+The default is
-+.Cm none .
-+.It Cm X11DisplayOffset
-+Specifies the first display number available for
-+.Xr sshd 1M Ns 's
-+X11 forwarding.
-+This prevents sshd from interfering with real X11 servers.
-+The default is 10.
-+.It Cm X11Forwarding
-+Specifies whether X11 forwarding is permitted.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no .
-+The default is
-+.Cm no .
-+.Pp
-+When X11 forwarding is enabled, there may be additional exposure to
-+the server and to client displays if the
-+.Xr sshd 1M
-+proxy display is configured to listen on the wildcard address (see
-+.Cm X11UseLocalhost ) ,
-+though this is not the default.
-+Additionally, the authentication spoofing and authentication data
-+verification and substitution occur on the client side.
-+The security risk of using X11 forwarding is that the client's X11
-+display server may be exposed to attack when the SSH client requests
-+forwarding (see the warnings for
-+.Cm ForwardX11
-+in
-+.Xr ssh_config 4 ) .
-+A system administrator may have a stance in which they want to
-+protect clients that may expose themselves to attack by unwittingly
-+requesting X11 forwarding, which can warrant a
-+.Cm no
-+setting.
-+.Pp
-+Note that disabling X11 forwarding does not prevent users from
-+forwarding X11 traffic, as users can always install their own forwarders.
-+.It Cm X11UseLocalhost
-+Specifies whether
-+.Xr sshd 1M
-+should bind the X11 forwarding server to the loopback address or to
-+the wildcard address.
-+By default,
-+sshd binds the forwarding server to the loopback address and sets the
-+hostname part of the
-+.Ev DISPLAY
-+environment variable to
-+.Cm localhost .
-+This prevents remote hosts from connecting to the proxy display.
-+However, some older X11 clients may not function with this
-+configuration.
-+.Cm X11UseLocalhost
-+may be set to
-+.Cm no
-+to specify that the forwarding server should be bound to the wildcard
-+address.
-+The argument must be
-+.Cm yes
-+or
-+.Cm no .
-+The default is
-+.Cm yes .
-+.It Cm XAuthLocation
-+Specifies the full pathname of the
-+.Xr xauth 1
-+program, or
-+.Cm none
-+to not use one.
-+The default is
-+.Pa /usr/X11R6/bin/xauth .
-+.El
-+.Sh TIME FORMATS
-+.Xr sshd 1M
-+command-line arguments and configuration file options that specify time
-+may be expressed using a sequence of the form:
-+.Sm off
-+.Ar time Op Ar qualifier ,
-+.Sm on
-+where
-+.Ar time
-+is a positive integer value and
-+.Ar qualifier
-+is one of the following:
-+.Pp
-+.Bl -tag -width Ds -compact -offset indent
-+.It Aq Cm none
-+seconds
-+.It Cm s | Cm S
-+seconds
-+.It Cm m | Cm M
-+minutes
-+.It Cm h | Cm H
-+hours
-+.It Cm d | Cm D
-+days
-+.It Cm w | Cm W
-+weeks
-+.El
-+.Pp
-+Each member of the sequence is added together to calculate
-+the total time value.
-+.Pp
-+Time format examples:
-+.Pp
-+.Bl -tag -width Ds -compact -offset indent
-+.It 600
-+600 seconds (10 minutes)
-+.It 10m
-+10 minutes
-+.It 1h30m
-+1 hour 30 minutes (90 minutes)
-+.El
-+.Sh TOKENS
-+Arguments to some keywords can make use of tokens,
-+which are expanded at runtime:
-+.Pp
-+.Bl -tag -width XXXX -offset indent -compact
-+.It %%
-+A literal
-+.Sq % .
-+.It %F
-+The fingerprint of the CA key.
-+.It %f
-+The fingerprint of the key or certificate.
-+.It %h
-+The home directory of the user.
-+.It %i
-+The key ID in the certificate.
-+.It %K
-+The base64-encoded CA key.
-+.It %k
-+The base64-encoded key or certificate for authentication.
-+.It %s
-+The serial number of the certificate.
-+.It \&%T
-+The type of the CA key.
-+.It %t
-+The key or certificate type.
-+.It %u
-+The username.
-+.El
-+.Pp
-+.Cm AuthorizedKeysCommand
-+accepts the tokens %%, %f, %h, %t, and %u.
-+.Pp
-+.Cm AuthorizedKeysFile
-+accepts the tokens %%, %h, and %u.
-+.Pp
-+.Cm AuthorizedPrincipalsCommand
-+accepts the tokens %%, %F, %f, %K, %k, %h, %i, %s, %T, %t, and %u.
-+.Pp
-+.Cm AuthorizedPrincipalsFile
-+accepts the tokens %%, %h, and %u.
-+.Pp
-+.Cm ChrootDirectory
-+accepts the tokens %%, %h, and %u.
-+.Sh FILES
-+.Bl -tag -width Ds
-+.It Pa /etc/ssh/sshd_config
-+Contains configuration data for
-+.Xr sshd 1M .
-+This file should be writable by root only, but it is recommended
-+(though not necessary) that it be world-readable.
-+.El
-+.Sh SEE ALSO
-+.Xr sftp-server 1M ,
-+.Xr sshd 1M ,
-+.Xr pam_unix_session 5
-+.Sh AUTHORS
-+.An -nosplit
-+OpenSSH is a derivative of the original and free
-+ssh 1.2.12 release by
-+.An Tatu Ylonen .
-+.An Aaron Campbell , Bob Beck , Markus Friedl , Niels Provos ,
-+.An Theo de Raadt
-+and
-+.An Dug Song
-+removed many bugs, re-added newer features and
-+created OpenSSH.
-+.An Markus Friedl
-+contributed the support for SSH protocol versions 1.5 and 2.0.
-+.An Niels Provos
-+and
-+.An Markus Friedl
-+contributed support for privilege separation.
-diff --git a/sshd_config.5 b/sshd_config.5
-deleted file mode 100644
-index 9eea74bd..00000000
+ .Sh AUTHORS
+ OpenSSH is a derivative of the original and free
+ ssh 1.2.12 release by Tatu Ylonen.
+diff --git a/sshd_config.5 b/sshd_config.4
+similarity index 98%
+rename from sshd_config.5
+rename to sshd_config.4
+index 6050adda..8b5d40a5 100644
 --- a/sshd_config.5
-+++ /dev/null
-@@ -1,1688 +0,0 @@
--.\"
--.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
--.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
--.\"                    All rights reserved
--.\"
--.\" As far as I am concerned, the code I have written for this software
--.\" can be used freely for any purpose.  Any derived versions of this
--.\" software must be clearly marked as such, and if the derived work is
--.\" incompatible with the protocol description in the RFC file, it must be
--.\" called by a name other than "ssh" or "Secure Shell".
--.\"
--.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
--.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
--.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
--.\"
--.\" Redistribution and use in source and binary forms, with or without
--.\" modification, are permitted provided that the following conditions
--.\" are met:
--.\" 1. Redistributions of source code must retain the above copyright
--.\"    notice, this list of conditions and the following disclaimer.
--.\" 2. Redistributions in binary form must reproduce the above copyright
--.\"    notice, this list of conditions and the following disclaimer in the
--.\"    documentation and/or other materials provided with the distribution.
--.\"
--.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
--.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
--.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
--.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
--.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
--.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
--.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
--.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
--.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--.\"
--.\" $OpenBSD: sshd_config.5,v 1.239 2016/11/30 03:00:05 djm Exp $
--.Dd $Mdocdate: November 30 2016 $
++++ b/sshd_config.4
+@@ -35,13 +35,13 @@
+ .\"
+ .\" $OpenBSD: sshd_config.5,v 1.282 2018/09/20 03:28:06 djm Exp $
+ .Dd $Mdocdate: September 20 2018 $
 -.Dt SSHD_CONFIG 5
--.Os
--.Sh NAME
--.Nm sshd_config
--.Nd OpenSSH SSH daemon configuration file
--.Sh SYNOPSIS
--.Nm /etc/ssh/sshd_config
--.Sh DESCRIPTION
++.Dt SSHD_CONFIG 4
+ .Os
+ .Sh NAME
+ .Nm sshd_config
+ .Nd OpenSSH SSH daemon configuration file
+ .Sh DESCRIPTION
 -.Xr sshd 8
--reads configuration data from
--.Pa /etc/ssh/sshd_config
--(or the file specified with
--.Fl f
--on the command line).
--The file contains keyword-argument pairs, one per line.
--Lines starting with
--.Ql #
--and empty lines are interpreted as comments.
--Arguments may optionally be enclosed in double quotes
--.Pq \&"
--in order to represent arguments containing spaces.
--.Pp
--The possible
--keywords and their meanings are as follows (note that
--keywords are case-insensitive and arguments are case-sensitive):
--.Bl -tag -width Ds
--.It Cm AcceptEnv
--Specifies what environment variables sent by the client will be copied into
--the session's
--.Xr environ 7 .
--See
--.Cm SendEnv
--in
++.Xr sshd 1M
+ reads configuration data from
+ .Pa /etc/ssh/sshd_config
+ (or the file specified with
+@@ -69,7 +69,7 @@ See
+ and
+ .Cm SetEnv
+ in
 -.Xr ssh_config 5
--for how to configure the client.
--The
--.Ev TERM
--environment variable is always sent whenever the client
--requests a pseudo-terminal as it is required by the protocol.
--Variables are specified by name, which may contain the wildcard characters
--.Ql *
--and
--.Ql \&? .
--Multiple environment variables may be separated by whitespace or spread
--across multiple
--.Cm AcceptEnv
--directives.
--Be warned that some environment variables could be used to bypass restricted
--user environments.
--For this reason, care should be taken in the use of this directive.
--The default is not to accept any environment variables.
--.It Cm AddressFamily
--Specifies which address family should be used by
++.Xr ssh_config 4
+ for how to configure the client.
+ The
+ .Ev TERM
+@@ -89,7 +89,7 @@ For this reason, care should be taken in the use of this directive.
+ The default is not to accept any environment variables.
+ .It Cm AddressFamily
+ Specifies which address family should be used by
 -.Xr sshd 8 .
--Valid arguments are
--.Cm any
--(the default),
--.Cm inet
--(use IPv4 only), or
--.Cm inet6
--(use IPv6 only).
--.It Cm AllowAgentForwarding
--Specifies whether
--.Xr ssh-agent 1
--forwarding is permitted.
--The default is
--.Cm yes .
--Note that disabling agent forwarding does not improve security
--unless users are also denied shell access, as they can always install
--their own forwarders.
--.It Cm AllowGroups
--This keyword can be followed by a list of group name patterns, separated
--by spaces.
--If specified, login is allowed only for users whose primary
--group or supplementary group list matches one of the patterns.
--Only group names are valid; a numerical group ID is not recognized.
--By default, login is allowed for all groups.
--The allow/deny directives are processed in the following order:
--.Cm DenyUsers ,
--.Cm AllowUsers ,
--.Cm DenyGroups ,
--and finally
--.Cm AllowGroups .
--.Pp
--See PATTERNS in
++.Xr sshd 1M .
+ Valid arguments are
+ .Cm any
+ (the default),
+@@ -121,7 +121,7 @@ and finally
+ .Cm AllowGroups .
+ .Pp
+ See PATTERNS in
 -.Xr ssh_config 5
--for more information on patterns.
--.It Cm AllowStreamLocalForwarding
--Specifies whether StreamLocal (Unix-domain socket) forwarding is permitted.
--The available options are
--.Cm yes
--(the default)
--or
--.Cm all
--to allow StreamLocal forwarding,
--.Cm no
--to prevent all StreamLocal forwarding,
--.Cm local
--to allow local (from the perspective of
--.Xr ssh 1 )
--forwarding only or
--.Cm remote
--to allow remote forwarding only.
--Note that disabling StreamLocal forwarding does not improve security unless
--users are also denied shell access, as they can always install their
--own forwarders.
--.It Cm AllowTcpForwarding
--Specifies whether TCP forwarding is permitted.
--The available options are
--.Cm yes
--(the default)
--or
--.Cm all
--to allow TCP forwarding,
--.Cm no
--to prevent all TCP forwarding,
--.Cm local
--to allow local (from the perspective of
--.Xr ssh 1 )
--forwarding only or
--.Cm remote
--to allow remote forwarding only.
--Note that disabling TCP forwarding does not improve security unless
--users are also denied shell access, as they can always install their
--own forwarders.
--.It Cm AllowUsers
--This keyword can be followed by a list of user name patterns, separated
--by spaces.
--If specified, login is allowed only for user names that
--match one of the patterns.
--Only user names are valid; a numerical user ID is not recognized.
--By default, login is allowed for all users.
--If the pattern takes the form USER@HOST then USER and HOST
--are separately checked, restricting logins to particular
--users from particular hosts.
--HOST criteria may additionally contain addresses to match in CIDR
--address/masklen format.
--The allow/deny directives are processed in the following order:
--.Cm DenyUsers ,
--.Cm AllowUsers ,
--.Cm DenyGroups ,
--and finally
--.Cm AllowGroups .
--.Pp
--See PATTERNS in
++.Xr ssh_config 4
+ for more information on patterns.
+ .It Cm AllowStreamLocalForwarding
+ Specifies whether StreamLocal (Unix-domain socket) forwarding is permitted.
+@@ -181,7 +181,7 @@ and finally
+ .Cm AllowGroups .
+ .Pp
+ See PATTERNS in
 -.Xr ssh_config 5
--for more information on patterns.
--.It Cm AuthenticationMethods
--Specifies the authentication methods that must be successfully completed
--for a user to be granted access.
--This option must be followed by one or more comma-separated lists of
--authentication method names, or by the single string
--.Cm any
--to indicate the default behaviour of accepting any single authentication
--method.
--If the default is overridden, then successful authentication requires
--completion of every method in at least one of these lists.
--.Pp
--For example,
--.Qq publickey,password publickey,keyboard-interactive
--would require the user to complete public key authentication, followed by
--either password or keyboard interactive authentication.
--Only methods that are next in one or more lists are offered at each stage,
--so for this example it would not be possible to attempt password or
--keyboard-interactive authentication before public key.
--.Pp
--For keyboard interactive authentication it is also possible to
--restrict authentication to a specific device by appending a
--colon followed by the device identifier
--.Cm bsdauth ,
--.Cm pam ,
--or
--.Cm skey ,
--depending on the server configuration.
--For example,
--.Qq keyboard-interactive:bsdauth
--would restrict keyboard interactive authentication to the
--.Cm bsdauth
--device.
--.Pp
--If the publickey method is listed more than once,
++.Xr ssh_config 4
+ for more information on patterns.
+ .It Cm AuthenticationMethods
+ Specifies the authentication methods that must be successfully completed
+@@ -216,7 +216,7 @@ would restrict keyboard interactive authentication to the
+ device.
+ .Pp
+ If the publickey method is listed more than once,
 -.Xr sshd 8
--verifies that keys that have been used successfully are not reused for
--subsequent authentications.
--For example,
--.Qq publickey,publickey
--requires successful authentication using two different public keys.
--.Pp
--Note that each authentication method listed should also be explicitly enabled
--in the configuration.
--.It Cm AuthorizedKeysCommand
--Specifies a program to be used to look up the user's public keys.
--The program must be owned by root, not writable by group or others and
--specified by an absolute path.
--Arguments to
--.Cm AuthorizedKeysCommand
--accept the tokens described in the
--.Sx TOKENS
--section.
--If no arguments are specified then the username of the target user is used.
--.Pp
--The program should produce on standard output zero or
--more lines of authorized_keys output (see
--.Sx AUTHORIZED_KEYS
--in
++.Xr sshd 1M
+ verifies that keys that have been used successfully are not reused for
+ subsequent authentications.
+ For example,
+@@ -252,7 +252,7 @@ The program should produce on standard output zero or
+ more lines of authorized_keys output (see
+ .Sx AUTHORIZED_KEYS
+ in
 -.Xr sshd 8 ) .
--If a key supplied by
--.Cm AuthorizedKeysCommand
--does not successfully authenticate
--and authorize the user then public key authentication continues using the usual
--.Cm AuthorizedKeysFile
--files.
--By default, no
--.Cm AuthorizedKeysCommand
--is run.
--.It Cm AuthorizedKeysCommandUser
--Specifies the user under whose account the
--.Cm AuthorizedKeysCommand
--is run.
--It is recommended to use a dedicated user that has no other role on the host
--than running authorized keys commands.
--If
--.Cm AuthorizedKeysCommand
--is specified but
--.Cm AuthorizedKeysCommandUser
--is not, then
++.Xr sshd 1M ) .
+ If a key supplied by
+ .Cm AuthorizedKeysCommand
+ does not successfully authenticate
+@@ -273,14 +273,14 @@ If
+ is specified but
+ .Cm AuthorizedKeysCommandUser
+ is not, then
 -.Xr sshd 8
--will refuse to start.
--.It Cm AuthorizedKeysFile
--Specifies the file that contains the public keys used for user authentication.
--The format is described in the
--.Sx AUTHORIZED_KEYS FILE FORMAT
--section of
++.Xr sshd 1M
+ will refuse to start.
+ .It Cm AuthorizedKeysFile
+ Specifies the file that contains the public keys used for user authentication.
+ The format is described in the
+ .Sx AUTHORIZED_KEYS FILE FORMAT
+ section of
 -.Xr sshd 8 .
--Arguments to
--.Cm AuthorizedKeysFile
--accept the tokens described in the
--.Sx TOKENS
--section.
--After expansion,
--.Cm AuthorizedKeysFile
--is taken to be an absolute path or one relative to the user's home
--directory.
--Multiple files may be listed, separated by whitespace.
--Alternately this option may be set to
--.Cm none
--to skip checking for user keys in files.
--The default is
--.Qq .ssh/authorized_keys .ssh/authorized_keys2 .
--.It Cm AuthorizedPrincipalsCommand
--Specifies a program to be used to generate the list of allowed
--certificate principals as per
--.Cm AuthorizedPrincipalsFile .
--The program must be owned by root, not writable by group or others and
--specified by an absolute path.
--Arguments to
--.Cm AuthorizedPrincipalsCommand
--accept the tokens described in the
--.Sx TOKENS
--section.
--If no arguments are specified then the username of the target user is used.
--.Pp
--The program should produce on standard output zero or
--more lines of
--.Cm AuthorizedPrincipalsFile
--output.
--If either
--.Cm AuthorizedPrincipalsCommand
--or
--.Cm AuthorizedPrincipalsFile
--is specified, then certificates offered by the client for authentication
--must contain a principal that is listed.
--By default, no
--.Cm AuthorizedPrincipalsCommand
--is run.
--.It Cm AuthorizedPrincipalsCommandUser
--Specifies the user under whose account the
--.Cm AuthorizedPrincipalsCommand
--is run.
--It is recommended to use a dedicated user that has no other role on the host
--than running authorized principals commands.
--If
--.Cm AuthorizedPrincipalsCommand
--is specified but
--.Cm AuthorizedPrincipalsCommandUser
--is not, then
++.Xr sshd 1M .
+ Arguments to
+ .Cm AuthorizedKeysFile
+ accept the tokens described in the
+@@ -333,7 +333,7 @@ If
+ is specified but
+ .Cm AuthorizedPrincipalsCommandUser
+ is not, then
 -.Xr sshd 8
--will refuse to start.
--.It Cm AuthorizedPrincipalsFile
--Specifies a file that lists principal names that are accepted for
--certificate authentication.
--When using certificates signed by a key listed in
--.Cm TrustedUserCAKeys ,
--this file lists names, one of which must appear in the certificate for it
--to be accepted for authentication.
--Names are listed one per line preceded by key options (as described in
--.Sx AUTHORIZED_KEYS FILE FORMAT
--in
++.Xr sshd 1M
+ will refuse to start.
+ .It Cm AuthorizedPrincipalsFile
+ Specifies a file that lists principal names that are accepted for
+@@ -345,7 +345,7 @@ to be accepted for authentication.
+ Names are listed one per line preceded by key options (as described in
+ .Sx AUTHORIZED_KEYS FILE FORMAT
+ in
 -.Xr sshd 8 ) .
--Empty lines and comments starting with
--.Ql #
--are ignored.
--.Pp
--Arguments to
--.Cm AuthorizedPrincipalsFile
--accept the tokens described in the
--.Sx TOKENS
--section.
--After expansion,
--.Cm AuthorizedPrincipalsFile
--is taken to be an absolute path or one relative to the user's home directory.
--The default is
--.Cm none ,
--i.e. not to use a principals file \(en in this case, the username
--of the user must appear in a certificate's principals list for it to be
--accepted.
--.Pp
--Note that
--.Cm AuthorizedPrincipalsFile
--is only used when authentication proceeds using a CA listed in
--.Cm TrustedUserCAKeys
--and is not consulted for certification authorities trusted via
--.Pa ~/.ssh/authorized_keys ,
--though the
--.Cm principals=
--key option offers a similar facility (see
++.Xr sshd 1M ) .
+ Empty lines and comments starting with
+ .Ql #
+ are ignored.
+@@ -373,7 +373,7 @@ and is not consulted for certification authorities trusted via
+ though the
+ .Cm principals=
+ key option offers a similar facility (see
 -.Xr sshd 8
--for details).
--.It Cm Banner
--The contents of the specified file are sent to the remote user before
--authentication is allowed.
--If the argument is
--.Cm none
--then no banner is displayed.
--By default, no banner is displayed.
--.It Cm ChallengeResponseAuthentication
--Specifies whether challenge-response authentication is allowed (e.g. via
--PAM or through authentication styles supported in
--.Xr login.conf 5 )
--The default is
--.Cm yes .
--.It Cm ChrootDirectory
--Specifies the pathname of a directory to
--.Xr chroot 2
--to after authentication.
--At session startup
++.Xr sshd 1M
+ for details).
+ .It Cm Banner
+ The contents of the specified file are sent to the remote user before
+@@ -404,11 +404,11 @@ Specifies the pathname of a directory to
+ .Xr chroot 2
+ to after authentication.
+ At session startup
 -.Xr sshd 8
--checks that all components of the pathname are root-owned directories
--which are not writable by any other user or group.
--After the chroot,
++.Xr sshd 1M
+ checks that all components of the pathname are root-owned directories
+ which are not writable by any other user or group.
+ After the chroot,
 -.Xr sshd 8
--changes the working directory to the user's home directory.
--Arguments to
--.Cm ChrootDirectory
--accept the tokens described in the
--.Sx TOKENS
--section.
--.Pp
--The
--.Cm ChrootDirectory
--must contain the necessary files and directories to support the
--user's session.
--For an interactive session this requires at least a shell, typically
--.Xr sh 1 ,
--and basic
--.Pa /dev
--nodes such as
--.Xr null 4 ,
--.Xr zero 4 ,
--.Xr stdin 4 ,
--.Xr stdout 4 ,
--.Xr stderr 4 ,
--and
--.Xr tty 4
--devices.
--For file transfer sessions using SFTP
--no additional configuration of the environment is necessary if the in-process
--sftp-server is used,
--though sessions which use logging may require
--.Pa /dev/log
--inside the chroot directory on some operating systems (see
++.Xr sshd 1M
+ changes the working directory to the user's home directory.
+ Arguments to
+ .Cm ChrootDirectory
+@@ -439,14 +439,14 @@ sftp-server is used,
+ though sessions which use logging may require
+ .Pa /dev/log
+ inside the chroot directory on some operating systems (see
 -.Xr sftp-server 8
--for details).
--.Pp
--For safety, it is very important that the directory hierarchy be
--prevented from modification by other processes on the system (especially
--those outside the jail).
--Misconfiguration can lead to unsafe environments which
++.Xr sftp-server 1M
+ for details).
+ .Pp
+ For safety, it is very important that the directory hierarchy be
+ prevented from modification by other processes on the system (especially
+ those outside the jail).
+ Misconfiguration can lead to unsafe environments which
 -.Xr sshd 8
--cannot detect.
--.Pp
--The default is
--.Cm none ,
--indicating not to
--.Xr chroot 2 .
--.It Cm Ciphers
--Specifies the ciphers allowed.
--Multiple ciphers must be comma-separated.
--If the specified value begins with a
--.Sq +
--character, then the specified ciphers will be appended to the default set
--instead of replacing them.
--.Pp
--The supported ciphers are:
--.Pp
--.Bl -item -compact -offset indent
--.It
--3des-cbc
--.It
--aes128-cbc
--.It
--aes192-cbc
--.It
--aes256-cbc
--.It
--aes128-ctr
--.It
--aes192-ctr
--.It
--aes256-ctr
--.It
--aes128-gcm@openssh.com
--.It
--aes256-gcm@openssh.com
--.It
--arcfour
--.It
--arcfour128
--.It
--arcfour256
--.It
--blowfish-cbc
--.It
--cast128-cbc
--.It
--chacha20-poly1305@openssh.com
--.El
--.Pp
--The default is:
--.Bd -literal -offset indent
--chacha20-poly1305@openssh.com,
--aes128-ctr,aes192-ctr,aes256-ctr,
--aes128-gcm@openssh.com,aes256-gcm@openssh.com
--.Ed
--.Pp
--The list of available ciphers may also be obtained using
--.Qq ssh -Q cipher .
--.It Cm ClientAliveCountMax
--Sets the number of client alive messages which may be sent without
++.Xr sshd 1M
+ cannot detect.
+ .Pp
+ The default is
+@@ -501,7 +501,7 @@ The list of available ciphers may also be obtained using
+ .Qq ssh -Q cipher .
+ .It Cm ClientAliveCountMax
+ Sets the number of client alive messages which may be sent without
 -.Xr sshd 8
--receiving any messages back from the client.
--If this threshold is reached while client alive messages are being sent,
--sshd will disconnect the client, terminating the session.
--It is important to note that the use of client alive messages is very
--different from
--.Cm TCPKeepAlive .
--The client alive messages are sent through the encrypted channel
--and therefore will not be spoofable.
--The TCP keepalive option enabled by
--.Cm TCPKeepAlive
--is spoofable.
--The client alive mechanism is valuable when the client or
--server depend on knowing when a connection has become inactive.
--.Pp
--The default value is 3.
--If
--.Cm ClientAliveInterval
--is set to 15, and
--.Cm ClientAliveCountMax
--is left at the default, unresponsive SSH clients
--will be disconnected after approximately 45 seconds.
--.It Cm ClientAliveInterval
--Sets a timeout interval in seconds after which if no data has been received
--from the client,
++.Xr sshd 1M
+ receiving any messages back from the client.
+ If this threshold is reached while client alive messages are being sent,
+ sshd will disconnect the client, terminating the session.
+@@ -526,7 +526,7 @@ will be disconnected after approximately 45 seconds.
+ .It Cm ClientAliveInterval
+ Sets a timeout interval in seconds after which if no data has been received
+ from the client,
 -.Xr sshd 8
--will send a message through the encrypted
--channel to request a response from the client.
--The default
--is 0, indicating that these messages will not be sent to the client.
--.It Cm Compression
--Specifies whether compression is enabled after
--the user has authenticated successfully.
--The argument must be
--.Cm yes ,
--.Cm delayed
--(a legacy synonym for
--.Cm yes )
--or
--.Cm no .
--The default is
--.Cm yes .
--.It Cm DenyGroups
--This keyword can be followed by a list of group name patterns, separated
--by spaces.
--Login is disallowed for users whose primary group or supplementary
--group list matches one of the patterns.
--Only group names are valid; a numerical group ID is not recognized.
--By default, login is allowed for all groups.
--The allow/deny directives are processed in the following order:
--.Cm DenyUsers ,
--.Cm AllowUsers ,
--.Cm DenyGroups ,
--and finally
--.Cm AllowGroups .
--.Pp
--See PATTERNS in
++.Xr sshd 1M
+ will send a message through the encrypted
+ channel to request a response from the client.
+ The default
+@@ -558,7 +558,7 @@ and finally
+ .Cm AllowGroups .
+ .Pp
+ See PATTERNS in
 -.Xr ssh_config 5
--for more information on patterns.
--.It Cm DenyUsers
--This keyword can be followed by a list of user name patterns, separated
--by spaces.
--Login is disallowed for user names that match one of the patterns.
--Only user names are valid; a numerical user ID is not recognized.
--By default, login is allowed for all users.
--If the pattern takes the form USER@HOST then USER and HOST
--are separately checked, restricting logins to particular
--users from particular hosts.
--HOST criteria may additionally contain addresses to match in CIDR
--address/masklen format.
--The allow/deny directives are processed in the following order:
--.Cm DenyUsers ,
--.Cm AllowUsers ,
--.Cm DenyGroups ,
--and finally
--.Cm AllowGroups .
--.Pp
--See PATTERNS in
++.Xr ssh_config 4
+ for more information on patterns.
+ .It Cm DenyUsers
+ This keyword can be followed by a list of user name patterns, separated
+@@ -579,7 +579,7 @@ and finally
+ .Cm AllowGroups .
+ .Pp
+ See PATTERNS in
 -.Xr ssh_config 5
--for more information on patterns.
--.It Cm DisableForwarding
--Disables all forwarding features, including X11,
--.Xr ssh-agent 1 ,
--TCP and StreamLocal.
--This option overrides all other forwarding-related options and may
--simplify restricted configurations.
--.It Cm FingerprintHash
--Specifies the hash algorithm used when logging key fingerprints.
--Valid options are:
--.Cm md5
--and
--.Cm sha256 .
--The default is
--.Cm sha256 .
--.It Cm ForceCommand
--Forces the execution of the command specified by
--.Cm ForceCommand ,
--ignoring any command supplied by the client and
--.Pa ~/.ssh/rc
--if present.
--The command is invoked by using the user's login shell with the -c option.
--This applies to shell, command, or subsystem execution.
--It is most useful inside a
--.Cm Match
--block.
--The command originally supplied by the client is available in the
--.Ev SSH_ORIGINAL_COMMAND
--environment variable.
--Specifying a command of
--.Cm internal-sftp
--will force the use of an in-process SFTP server that requires no support
--files when used with
--.Cm ChrootDirectory .
--The default is
--.Cm none .
--.It Cm GatewayPorts
--Specifies whether remote hosts are allowed to connect to ports
--forwarded for the client.
--By default,
++.Xr ssh_config 4
+ for more information on patterns.
+ .It Cm DisableForwarding
+ Disables all forwarding features, including X11,
+@@ -628,7 +628,7 @@ The default is
+ Specifies whether remote hosts are allowed to connect to ports
+ forwarded for the client.
+ By default,
 -.Xr sshd 8
--binds remote port forwardings to the loopback address.
--This prevents other remote hosts from connecting to forwarded ports.
--.Cm GatewayPorts
--can be used to specify that sshd
--should allow remote port forwardings to bind to non-loopback addresses, thus
--allowing other hosts to connect.
--The argument may be
--.Cm no
--to force remote port forwardings to be available to the local host only,
--.Cm yes
--to force remote port forwardings to bind to the wildcard address, or
--.Cm clientspecified
--to allow the client to select the address to which the forwarding is bound.
--The default is
--.Cm no .
--.It Cm GSSAPIAuthentication
--Specifies whether user authentication based on GSSAPI is allowed.
--The default is
--.Cm no .
--.It Cm GSSAPICleanupCredentials
--Specifies whether to automatically destroy the user's credentials cache
--on logout.
--The default is
--.Cm yes .
--.It Cm GSSAPIStrictAcceptorCheck
--Determines whether to be strict about the identity of the GSSAPI acceptor
--a client authenticates against.
--If set to
--.Cm yes
--then the client must authenticate against the host
--service on the current hostname.
--If set to
--.Cm no
--then the client may authenticate against any service key stored in the
--machine's default store.
--This facility is provided to assist with operation on multi homed machines.
--The default is
--.Cm yes .
--.It Cm HostbasedAcceptedKeyTypes
--Specifies the key types that will be accepted for hostbased authentication
--as a comma-separated pattern list.
--Alternately if the specified value begins with a
--.Sq +
--character, then the specified key types will be appended to the default set
--instead of replacing them.
--The default for this option is:
--.Bd -literal -offset 3n
--ecdsa-sha2-nistp256-cert-v01@openssh.com,
--ecdsa-sha2-nistp384-cert-v01@openssh.com,
--ecdsa-sha2-nistp521-cert-v01@openssh.com,
--ssh-ed25519-cert-v01@openssh.com,
--ssh-rsa-cert-v01@openssh.com,
--ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
--.Ed
--.Pp
--The list of available key types may also be obtained using
--.Qq ssh -Q key .
--.It Cm HostbasedAuthentication
--Specifies whether rhosts or /etc/hosts.equiv authentication together
--with successful public key client host authentication is allowed
--(host-based authentication).
--The default is
--.Cm no .
--.It Cm HostbasedUsesNameFromPacketOnly
--Specifies whether or not the server will attempt to perform a reverse
--name lookup when matching the name in the
--.Pa ~/.shosts ,
--.Pa ~/.rhosts ,
--and
--.Pa /etc/hosts.equiv
--files during
--.Cm HostbasedAuthentication .
--A setting of
--.Cm yes
--means that
++.Xr sshd 1M
+ binds remote port forwardings to the loopback address.
+ This prevents other remote hosts from connecting to forwarded ports.
+ .Cm GatewayPorts
+@@ -710,7 +710,7 @@ files during
+ A setting of
+ .Cm yes
+ means that
 -.Xr sshd 8
--uses the name supplied by the client rather than
--attempting to resolve the name from the TCP connection itself.
--The default is
--.Cm no .
--.It Cm HostCertificate
--Specifies a file containing a public host certificate.
--The certificate's public key must match a private host key already specified
--by
--.Cm HostKey .
--The default behaviour of
++.Xr sshd 1M
+ uses the name supplied by the client rather than
+ attempting to resolve the name from the TCP connection itself.
+ The default is
+@@ -721,7 +721,7 @@ The certificate's public key must match a private host key already specified
+ by
+ .Cm HostKey .
+ The default behaviour of
 -.Xr sshd 8
--is not to load any certificates.
--.It Cm HostKey
--Specifies a file containing a private host key
--used by SSH.
--The defaults are
--.Pa /etc/ssh/ssh_host_dsa_key ,
--.Pa /etc/ssh/ssh_host_ecdsa_key ,
--.Pa /etc/ssh/ssh_host_ed25519_key
--and
--.Pa /etc/ssh/ssh_host_rsa_key .
--.Pp
--Note that
++.Xr sshd 1M
+ is not to load any certificates.
+ .It Cm HostKey
+ Specifies a file containing a private host key
+@@ -733,12 +733,12 @@ and
+ .Pa /etc/ssh/ssh_host_rsa_key .
+ .Pp
+ Note that
 -.Xr sshd 8
--will refuse to use a file if it is group/world-accessible
--and that the
--.Cm HostKeyAlgorithms
--option restricts which of the keys are actually used by
++.Xr sshd 1M
+ will refuse to use a file if it is group/world-accessible
+ and that the
+ .Cm HostKeyAlgorithms
+ option restricts which of the keys are actually used by
 -.Xr sshd 8 .
--.Pp
--It is possible to have multiple host key files.
--It is also possible to specify public host key files instead.
--In this case operations on the private key will be delegated
--to an
--.Xr ssh-agent 1 .
--.It Cm HostKeyAgent
--Identifies the UNIX-domain socket used to communicate
--with an agent that has access to the private host keys.
--If the string
--.Qq SSH_AUTH_SOCK
--is specified, the location of the socket will be read from the
--.Ev SSH_AUTH_SOCK
--environment variable.
--.It Cm HostKeyAlgorithms
--Specifies the host key algorithms
--that the server offers.
--The default for this option is:
--.Bd -literal -offset 3n
--ecdsa-sha2-nistp256-cert-v01@openssh.com,
--ecdsa-sha2-nistp384-cert-v01@openssh.com,
--ecdsa-sha2-nistp521-cert-v01@openssh.com,
--ssh-ed25519-cert-v01@openssh.com,
--ssh-rsa-cert-v01@openssh.com,
--ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
--.Ed
--.Pp
--The list of available key types may also be obtained using
--.Qq ssh -Q key .
--.It Cm IgnoreRhosts
--Specifies that
--.Pa .rhosts
--and
--.Pa .shosts
--files will not be used in
--.Cm HostbasedAuthentication .
--.Pp
--.Pa /etc/hosts.equiv
--and
--.Pa /etc/shosts.equiv
--are still used.
--The default is
--.Cm yes .
--.It Cm IgnoreUserKnownHosts
--Specifies whether
++.Xr sshd 1M .
+ .Pp
+ It is possible to have multiple host key files.
+ It is also possible to specify public host key files instead.
+@@ -786,7 +786,7 @@ The default is
+ .Cm yes .
+ .It Cm IgnoreUserKnownHosts
+ Specifies whether
 -.Xr sshd 8
--should ignore the user's
--.Pa ~/.ssh/known_hosts
--during
--.Cm HostbasedAuthentication .
--The default is
--.Cm no .
--.It Cm IPQoS
--Specifies the IPv4 type-of-service or DSCP class for the connection.
--Accepted values are
--.Cm af11 ,
--.Cm af12 ,
--.Cm af13 ,
--.Cm af21 ,
--.Cm af22 ,
--.Cm af23 ,
--.Cm af31 ,
--.Cm af32 ,
--.Cm af33 ,
--.Cm af41 ,
--.Cm af42 ,
--.Cm af43 ,
--.Cm cs0 ,
--.Cm cs1 ,
--.Cm cs2 ,
--.Cm cs3 ,
--.Cm cs4 ,
--.Cm cs5 ,
--.Cm cs6 ,
--.Cm cs7 ,
--.Cm ef ,
--.Cm lowdelay ,
--.Cm throughput ,
--.Cm reliability ,
--or a numeric value.
--This option may take one or two arguments, separated by whitespace.
--If one argument is specified, it is used as the packet class unconditionally.
--If two values are specified, the first is automatically selected for
--interactive sessions and the second for non-interactive sessions.
--The default is
--.Cm lowdelay
--for interactive sessions and
--.Cm throughput
--for non-interactive sessions.
--.It Cm KbdInteractiveAuthentication
--Specifies whether to allow keyboard-interactive authentication.
--The argument to this keyword must be
--.Cm yes
--or
--.Cm no .
--The default is to use whatever value
--.Cm ChallengeResponseAuthentication
--is set to
--(by default
--.Cm yes ) .
--.It Cm KerberosAuthentication
--Specifies whether the password provided by the user for
--.Cm PasswordAuthentication
--will be validated through the Kerberos KDC.
--To use this option, the server needs a
--Kerberos servtab which allows the verification of the KDC's identity.
--The default is
--.Cm no .
--.It Cm KerberosGetAFSToken
--If AFS is active and the user has a Kerberos 5 TGT, attempt to acquire
--an AFS token before accessing the user's home directory.
--The default is
--.Cm no .
--.It Cm KerberosOrLocalPasswd
--If password authentication through Kerberos fails then
--the password will be validated via any additional local mechanism
--such as
--.Pa /etc/passwd .
--The default is
--.Cm yes .
--.It Cm KerberosTicketCleanup
--Specifies whether to automatically destroy the user's ticket cache
--file on logout.
--The default is
--.Cm yes .
--.It Cm KexAlgorithms
--Specifies the available KEX (Key Exchange) algorithms.
--Multiple algorithms must be comma-separated.
--Alternately if the specified value begins with a
--.Sq +
--character, then the specified methods will be appended to the default set
--instead of replacing them.
--The supported algorithms are:
--.Pp
--.Bl -item -compact -offset indent
--.It
--curve25519-sha256
--.It
--curve25519-sha256@libssh.org
--.It
--diffie-hellman-group1-sha1
--.It
--diffie-hellman-group14-sha1
--.It
--diffie-hellman-group-exchange-sha1
--.It
--diffie-hellman-group-exchange-sha256
--.It
--ecdh-sha2-nistp256
--.It
--ecdh-sha2-nistp384
--.It
--ecdh-sha2-nistp521
--.El
--.Pp
--The default is:
--.Bd -literal -offset indent
--curve25519-sha256,curve25519-sha256@libssh.org,
--ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,
--diffie-hellman-group-exchange-sha256,
--diffie-hellman-group14-sha1
--.Ed
--.Pp
--The list of available key exchange algorithms may also be obtained using
--.Qq ssh -Q kex .
--.It Cm ListenAddress
--Specifies the local addresses
++.Xr sshd 1M
+ should ignore the user's
+ .Pa ~/.ssh/known_hosts
+ during
+@@ -925,7 +925,7 @@ The list of available key exchange algorithms may also be obtained using
+ .Qq ssh -Q kex .
+ .It Cm ListenAddress
+ Specifies the local addresses
 -.Xr sshd 8
--should listen on.
--The following forms may be used:
--.Pp
--.Bl -item -offset indent -compact
--.It
--.Cm ListenAddress
--.Sm off
--.Ar host | Ar IPv4_addr | Ar IPv6_addr
--.Sm on
--.It
--.Cm ListenAddress
--.Sm off
--.Ar host | Ar IPv4_addr : Ar port
--.Sm on
--.It
--.Cm ListenAddress
--.Sm off
--.Oo
--.Ar host | Ar IPv6_addr Oc : Ar port
--.Sm on
--.El
--.Pp
--If
--.Ar port
--is not specified,
--sshd will listen on the address and all
--.Cm Port
--options specified.
--The default is to listen on all local addresses.
--Multiple
--.Cm ListenAddress
--options are permitted.
--.It Cm LoginGraceTime
--The server disconnects after this time if the user has not
--successfully logged in.
--If the value is 0, there is no time limit.
--The default is 120 seconds.
--.It Cm LogLevel
--Gives the verbosity level that is used when logging messages from
++.Xr sshd 1M
+ should listen on.
+ The following forms may be used:
+ .Pp
+@@ -981,7 +981,7 @@ If the value is 0, there is no time limit.
+ The default is 120 seconds.
+ .It Cm LogLevel
+ Gives the verbosity level that is used when logging messages from
 -.Xr sshd 8 .
--The possible values are:
--QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.
--The default is INFO.
--DEBUG and DEBUG1 are equivalent.
--DEBUG2 and DEBUG3 each specify higher levels of debugging output.
--Logging with a DEBUG level violates the privacy of users and is not recommended.
--.It Cm MACs
--Specifies the available MAC (message authentication code) algorithms.
--The MAC algorithm is used for data integrity protection.
--Multiple algorithms must be comma-separated.
--If the specified value begins with a
--.Sq +
--character, then the specified algorithms will be appended to the default set
--instead of replacing them.
--.Pp
--The algorithms that contain
--.Qq -etm
--calculate the MAC after encryption (encrypt-then-mac).
--These are considered safer and their use recommended.
--The supported MACs are:
--.Pp
--.Bl -item -compact -offset indent
--.It
--hmac-md5
--.It
--hmac-md5-96
--.It
--hmac-ripemd160
--.It
--hmac-sha1
--.It
--hmac-sha1-96
--.It
--hmac-sha2-256
--.It
--hmac-sha2-512
--.It
--umac-64@openssh.com
--.It
--umac-128@openssh.com
--.It
--hmac-md5-etm@openssh.com
--.It
--hmac-md5-96-etm@openssh.com
--.It
--hmac-ripemd160-etm@openssh.com
--.It
--hmac-sha1-etm@openssh.com
--.It
--hmac-sha1-96-etm@openssh.com
--.It
--hmac-sha2-256-etm@openssh.com
--.It
--hmac-sha2-512-etm@openssh.com
--.It
--umac-64-etm@openssh.com
--.It
--umac-128-etm@openssh.com
--.El
--.Pp
--The default is:
--.Bd -literal -offset indent
--umac-64-etm@openssh.com,umac-128-etm@openssh.com,
--hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,
--hmac-sha1-etm@openssh.com,
--umac-64@openssh.com,umac-128@openssh.com,
--hmac-sha2-256,hmac-sha2-512,hmac-sha1
--.Ed
--.Pp
--The list of available MAC algorithms may also be obtained using
--.Qq ssh -Q mac .
--.It Cm Match
--Introduces a conditional block.
--If all of the criteria on the
--.Cm Match
--line are satisfied, the keywords on the following lines override those
--set in the global section of the config file, until either another
--.Cm Match
--line or the end of the file.
--If a keyword appears in multiple
--.Cm Match
--blocks that are satisfied, only the first instance of the keyword is
--applied.
--.Pp
--The arguments to
--.Cm Match
--are one or more criteria-pattern pairs or the single token
--.Cm All
--which matches all criteria.
--The available criteria are
--.Cm User ,
--.Cm Group ,
--.Cm Host ,
--.Cm LocalAddress ,
--.Cm LocalPort ,
--and
--.Cm Address .
--The match patterns may consist of single entries or comma-separated
--lists and may use the wildcard and negation operators described in the
--.Sx PATTERNS
--section of
++.Xr sshd 1M .
+ The possible values are:
+ QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.
+ The default is INFO.
+@@ -1090,7 +1090,7 @@ The match patterns may consist of single entries or comma-separated
+ lists and may use the wildcard and negation operators described in the
+ .Sx PATTERNS
+ section of
 -.Xr ssh_config 5 .
--.Pp
--The patterns in an
--.Cm Address
--criteria may additionally contain addresses to match in CIDR
--address/masklen format,
--such as 192.0.2.0/24 or 2001:db8::/32.
--Note that the mask length provided must be consistent with the address -
--it is an error to specify a mask length that is too long for the address
--or one with bits set in this host portion of the address.
--For example, 192.0.2.0/33 and 192.0.2.0/8, respectively.
--.Pp
--Only a subset of keywords may be used on the lines following a
--.Cm Match
--keyword.
--Available keywords are
--.Cm AcceptEnv ,
--.Cm AllowAgentForwarding ,
--.Cm AllowGroups ,
--.Cm AllowStreamLocalForwarding ,
--.Cm AllowTcpForwarding ,
--.Cm AllowUsers ,
--.Cm AuthenticationMethods ,
--.Cm AuthorizedKeysCommand ,
--.Cm AuthorizedKeysCommandUser ,
--.Cm AuthorizedKeysFile ,
--.Cm AuthorizedPrincipalsCommand ,
--.Cm AuthorizedPrincipalsCommandUser ,
--.Cm AuthorizedPrincipalsFile ,
--.Cm Banner ,
--.Cm ChrootDirectory ,
--.Cm ClientAliveCountMax ,
--.Cm ClientAliveInterval ,
--.Cm DenyGroups ,
--.Cm DenyUsers ,
--.Cm ForceCommand ,
--.Cm GatewayPorts ,
--.Cm GSSAPIAuthentication ,
--.Cm HostbasedAcceptedKeyTypes ,
--.Cm HostbasedAuthentication ,
--.Cm HostbasedUsesNameFromPacketOnly ,
--.Cm IPQoS ,
--.Cm KbdInteractiveAuthentication ,
--.Cm KerberosAuthentication ,
--.Cm MaxAuthTries ,
--.Cm MaxSessions ,
--.Cm PasswordAuthentication ,
--.Cm PermitEmptyPasswords ,
--.Cm PermitOpen ,
--.Cm PermitRootLogin ,
--.Cm PermitTTY ,
--.Cm PermitTunnel ,
--.Cm PermitUserRC ,
--.Cm PubkeyAcceptedKeyTypes ,
--.Cm PubkeyAuthentication ,
--.Cm RekeyLimit ,
--.Cm RevokedKeys ,
--.Cm StreamLocalBindMask ,
--.Cm StreamLocalBindUnlink ,
--.Cm TrustedUserCAKeys ,
--.Cm X11DisplayOffset ,
--.Cm X11Forwarding
--and
--.Cm X11UseLocalHost .
--.It Cm MaxAuthTries
--Specifies the maximum number of authentication attempts permitted per
--connection.
--Once the number of failures reaches half this value,
--additional failures are logged.
--The default is 6.
--.It Cm MaxSessions
--Specifies the maximum number of open shell, login or subsystem (e.g. sftp)
--sessions permitted per network connection.
--Multiple sessions may be established by clients that support connection
--multiplexing.
--Setting
--.Cm MaxSessions
--to 1 will effectively disable session multiplexing, whereas setting it to 0
--will prevent all shell, login and subsystem sessions while still permitting
--forwarding.
--The default is 10.
--.It Cm MaxStartups
--Specifies the maximum number of concurrent unauthenticated connections to the
--SSH daemon.
--Additional connections will be dropped until authentication succeeds or the
--.Cm LoginGraceTime
--expires for a connection.
--The default is 10:30:100.
--.Pp
--Alternatively, random early drop can be enabled by specifying
--the three colon separated values
--start:rate:full (e.g. "10:30:60").
++.Xr ssh_config 4 .
+ .Pp
+ The patterns in an
+ .Cm Address
+@@ -1186,7 +1186,7 @@ The default is 10:30:100.
+ Alternatively, random early drop can be enabled by specifying
+ the three colon separated values
+ start:rate:full (e.g. "10:30:60").
 -.Xr sshd 8
--will refuse connection attempts with a probability of rate/100 (30%)
--if there are currently start (10) unauthenticated connections.
--The probability increases linearly and all connection attempts
--are refused if the number of unauthenticated connections reaches full (60).
--.It Cm PasswordAuthentication
--Specifies whether password authentication is allowed.
--The default is
--.Cm yes .
--.It Cm PermitEmptyPasswords
--When password authentication is allowed, it specifies whether the
--server allows login to accounts with empty password strings.
--The default is
--.Cm no .
--.It Cm PermitOpen
--Specifies the destinations to which TCP port forwarding is permitted.
--The forwarding specification must be one of the following forms:
--.Pp
--.Bl -item -offset indent -compact
--.It
--.Cm PermitOpen
--.Sm off
--.Ar host : port
--.Sm on
--.It
--.Cm PermitOpen
--.Sm off
--.Ar IPv4_addr : port
--.Sm on
--.It
--.Cm PermitOpen
--.Sm off
--.Ar \&[ IPv6_addr \&] : port
--.Sm on
--.El
--.Pp
--Multiple forwards may be specified by separating them with whitespace.
--An argument of
--.Cm any
--can be used to remove all restrictions and permit any forwarding requests.
--An argument of
--.Cm none
--can be used to prohibit all forwarding requests.
--The wildcard
--.Sq *
--can be used for host or port to allow all hosts or ports, respectively.
--By default all port forwarding requests are permitted.
--.It Cm PermitRootLogin
--Specifies whether root can log in using
--.Xr ssh 1 .
--The argument must be
--.Cm yes ,
--.Cm prohibit-password ,
--.Cm without-password ,
--.Cm forced-commands-only ,
--or
--.Cm no .
--The default is
--.Cm prohibit-password .
--.Pp
--If this option is set to
--.Cm prohibit-password
--or
--.Cm without-password ,
--password and keyboard-interactive authentication are disabled for root.
--.Pp
--If this option is set to
--.Cm forced-commands-only ,
--root login with public key authentication will be allowed,
--but only if the
--.Ar command
--option has been specified
--(which may be useful for taking remote backups even if root login is
--normally not allowed).
--All other authentication methods are disabled for root.
--.Pp
--If this option is set to
--.Cm no ,
--root is not allowed to log in.
--.It Cm PermitTTY
--Specifies whether
--.Xr pty 4
--allocation is permitted.
--The default is
--.Cm yes .
--.It Cm PermitTunnel
--Specifies whether
--.Xr tun 4
--device forwarding is allowed.
--The argument must be
--.Cm yes ,
--.Cm point-to-point
--(layer 3),
--.Cm ethernet
--(layer 2), or
--.Cm no .
--Specifying
--.Cm yes
--permits both
--.Cm point-to-point
--and
--.Cm ethernet .
--The default is
--.Cm no .
--.Pp
--Independent of this setting, the permissions of the selected
--.Xr tun 4
--device must allow access to the user.
--.It Cm PermitUserEnvironment
--Specifies whether
--.Pa ~/.ssh/environment
--and
--.Cm environment=
--options in
--.Pa ~/.ssh/authorized_keys
--are processed by
++.Xr sshd 1M
+ will refuse connection attempts with a probability of rate/100 (30%)
+ if there are currently start (10) unauthenticated connections.
+ The probability increases linearly and all connection attempts
+@@ -1343,7 +1343,7 @@ and
+ options in
+ .Pa ~/.ssh/authorized_keys
+ are processed by
 -.Xr sshd 8 .
--The default is
--.Cm no .
--Enabling environment processing may enable users to bypass access
--restrictions in some configurations using mechanisms such as
--.Ev LD_PRELOAD .
--.It Cm PermitUserRC
--Specifies whether any
--.Pa ~/.ssh/rc
--file is executed.
--The default is
--.Cm yes .
--.It Cm PidFile
--Specifies the file that contains the process ID of the
--SSH daemon, or
--.Cm none
--to not write one.
--The default is
--.Pa /var/run/sshd.pid .
--.It Cm Port
--Specifies the port number that
++.Xr sshd 1m .
+ Valid options are
+ .Cm yes ,
+ .Cm no
+@@ -1370,7 +1370,7 @@ The default is
+ .Pa /var/run/sshd.pid .
+ .It Cm Port
+ Specifies the port number that
 -.Xr sshd 8
--listens on.
--The default is 22.
--Multiple options of this type are permitted.
--See also
--.Cm ListenAddress .
--.It Cm PrintLastLog
--Specifies whether
++.Xr sshd 1M
+ listens on.
+ The default is 22.
+ Multiple options of this type are permitted.
+@@ -1378,14 +1378,14 @@ See also
+ .Cm ListenAddress .
+ .It Cm PrintLastLog
+ Specifies whether
 -.Xr sshd 8
--should print the date and time of the last user login when a user logs
--in interactively.
--On Solaris this option is always ignored since pam_unix_session(5)
--reports the last login time.
--.It Cm PrintMotd
--Specifies whether
++.Xr sshd 1M
+ should print the date and time of the last user login when a user logs
+ in interactively.
+ On Solaris this option is always ignored since pam_unix_session(5)
+ reports the last login time.
+ .It Cm PrintMotd
+ Specifies whether
 -.Xr sshd 8
--should print
--.Pa /etc/motd
--when a user logs in interactively.
--(On some systems it is also printed by the shell,
--.Pa /etc/profile ,
--or equivalent.)
--The default is
--.Cm yes .
--.It Cm PubkeyAcceptedKeyTypes
--Specifies the key types that will be accepted for public key authentication
--as a comma-separated pattern list.
--Alternately if the specified value begins with a
--.Sq +
--character, then the specified key types will be appended to the default set
--instead of replacing them.
--The default for this option is:
--.Bd -literal -offset 3n
--ecdsa-sha2-nistp256-cert-v01@openssh.com,
--ecdsa-sha2-nistp384-cert-v01@openssh.com,
--ecdsa-sha2-nistp521-cert-v01@openssh.com,
--ssh-ed25519-cert-v01@openssh.com,
--ssh-rsa-cert-v01@openssh.com,
--ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
--.Ed
--.Pp
--The list of available key types may also be obtained using
--.Qq ssh -Q key .
--.It Cm PubkeyAuthentication
--Specifies whether public key authentication is allowed.
--The default is
--.Cm yes .
--.It Cm RekeyLimit
--Specifies the maximum amount of data that may be transmitted before the
--session key is renegotiated, optionally followed a maximum amount of
--time that may pass before the session key is renegotiated.
--The first argument is specified in bytes and may have a suffix of
--.Sq K ,
--.Sq M ,
--or
--.Sq G
--to indicate Kilobytes, Megabytes, or Gigabytes, respectively.
--The default is between
--.Sq 1G
--and
--.Sq 4G ,
--depending on the cipher.
--The optional second value is specified in seconds and may use any of the
--units documented in the
--.Sx TIME FORMATS
--section.
--The default value for
--.Cm RekeyLimit
--is
--.Cm default none ,
--which means that rekeying is performed after the cipher's default amount
--of data has been sent or received and no time based rekeying is done.
--.It Cm RevokedKeys
--Specifies revoked public keys file, or
--.Cm none
--to not use one.
--Keys listed in this file will be refused for public key authentication.
--Note that if this file is not readable, then public key authentication will
--be refused for all users.
--Keys may be specified as a text file, listing one public key per line, or as
--an OpenSSH Key Revocation List (KRL) as generated by
--.Xr ssh-keygen 1 .
--For more information on KRLs, see the KEY REVOCATION LISTS section in
--.Xr ssh-keygen 1 .
--.It Cm StreamLocalBindMask
--Sets the octal file creation mode mask
--.Pq umask
--used when creating a Unix-domain socket file for local or remote
--port forwarding.
--This option is only used for port forwarding to a Unix-domain socket file.
--.Pp
--The default value is 0177, which creates a Unix-domain socket file that is
--readable and writable only by the owner.
--Note that not all operating systems honor the file mode on Unix-domain
--socket files.
--.It Cm StreamLocalBindUnlink
--Specifies whether to remove an existing Unix-domain socket file for local
--or remote port forwarding before creating a new one.
--If the socket file already exists and
--.Cm StreamLocalBindUnlink
--is not enabled,
--.Nm sshd
--will be unable to forward the port to the Unix-domain socket file.
--This option is only used for port forwarding to a Unix-domain socket file.
--.Pp
--The argument must be
--.Cm yes
--or
--.Cm no .
--The default is
--.Cm no .
--.It Cm StrictModes
--Specifies whether
++.Xr sshd 1M
+ should print
+ .Pa /etc/motd
+ when a user logs in interactively.
+@@ -1513,7 +1513,7 @@ The default is
+ .Cm no .
+ .It Cm StrictModes
+ Specifies whether
 -.Xr sshd 8
--should check file modes and ownership of the
--user's files and home directory before accepting login.
--This is normally desirable because novices sometimes accidentally leave their
--directory or files world-writable.
--The default is
--.Cm yes .
--Note that this does not apply to
--.Cm ChrootDirectory ,
--whose permissions and ownership are checked unconditionally.
--.It Cm Subsystem
--Configures an external subsystem (e.g. file transfer daemon).
--Arguments should be a subsystem name and a command (with optional arguments)
--to execute upon subsystem request.
--.Pp
--The command
--.Cm sftp-server
--implements the SFTP file transfer subsystem.
--.Pp
--Alternately the name
--.Cm internal-sftp
--implements an in-process SFTP server.
--This may simplify configurations using
--.Cm ChrootDirectory
--to force a different filesystem root on clients.
--.Pp
--By default no subsystems are defined.
--.It Cm SyslogFacility
--Gives the facility code that is used when logging messages from
++.Xr sshd 1M
+ should check file modes and ownership of the
+ user's files and home directory before accepting login.
+ This is normally desirable because novices sometimes accidentally leave their
+@@ -1542,7 +1542,7 @@ to force a different filesystem root on clients.
+ By default no subsystems are defined.
+ .It Cm SyslogFacility
+ Gives the facility code that is used when logging messages from
 -.Xr sshd 8 .
--The possible values are: DAEMON, USER, AUTH, LOCAL0, LOCAL1, LOCAL2,
--LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.
--The default is AUTH.
--.It Cm TCPKeepAlive
--Specifies whether the system should send TCP keepalive messages to the
--other side.
--If they are sent, death of the connection or crash of one
--of the machines will be properly noticed.
--However, this means that
--connections will die if the route is down temporarily, and some people
--find it annoying.
--On the other hand, if TCP keepalives are not sent,
--sessions may hang indefinitely on the server, leaving
--.Qq ghost
--users and consuming server resources.
--.Pp
--The default is
--.Cm yes
--(to send TCP keepalive messages), and the server will notice
--if the network goes down or the client host crashes.
--This avoids infinitely hanging sessions.
--.Pp
--To disable TCP keepalive messages, the value should be set to
--.Cm no .
--.It Cm TrustedUserCAKeys
--Specifies a file containing public keys of certificate authorities that are
--trusted to sign user certificates for authentication, or
--.Cm none
--to not use one.
--Keys are listed one per line; empty lines and comments starting with
--.Ql #
--are allowed.
--If a certificate is presented for authentication and has its signing CA key
--listed in this file, then it may be used for authentication for any user
--listed in the certificate's principals list.
--Note that certificates that lack a list of principals will not be permitted
--for authentication using
--.Cm TrustedUserCAKeys .
--For more details on certificates, see the CERTIFICATES section in
--.Xr ssh-keygen 1 .
--.It Cm UseDNS
--Specifies whether
--.Xr sshd 8
--should look up the remote host name, and to check that
--the resolved host name for the remote IP address maps back to the
--very same IP address.
--.Pp
--If this option is set to
--.Cm no
--(the default) then only addresses and not host names may be used in
--.Pa ~/.ssh/authorized_keys
--.Cm from
--and
--.Nm
--.Cm Match
--.Cm Host
--directives.
--.It Cm UsePAM
--Enables the Pluggable Authentication Module interface.
--If set to
--.Cm yes
--this will enable PAM authentication using
--.Cm ChallengeResponseAuthentication
--and
--.Cm PasswordAuthentication
--in addition to PAM account and session module processing for all
--authentication types.
--.Pp
--Because PAM challenge-response authentication usually serves an equivalent
--role to password authentication, you should disable either
--.Cm PasswordAuthentication
--or
--.Cm ChallengeResponseAuthentication.
--.Pp
--If
--.Cm UsePAM
--is enabled, you will not be able to run
++.Xr sshd 1M .
+ The possible values are: DAEMON, USER, AUTH, LOCAL0, LOCAL1, LOCAL2,
+ LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.
+ The default is AUTH.
+@@ -1585,7 +1585,7 @@ For more details on certificates, see the CERTIFICATES section in
+ .Xr ssh-keygen 1 .
+ .It Cm UseDNS
+ Specifies whether
 -.Xr sshd 8
--as a non-root user.
--The default is
--.Cm no .
--.It Cm UsePrivilegeSeparation
--Specifies whether
++.Xr sshd 1M
+ should look up the remote host name, and to check that
+ the resolved host name for the remote IP address maps back to the
+ very same IP address.
+@@ -1620,7 +1620,7 @@ or
+ If
+ .Cm UsePAM
+ is enabled, you will not be able to run
 -.Xr sshd 8
--separates privileges by creating an unprivileged child process
--to deal with incoming network traffic.
--After successful authentication, another process will be created that has
--the privilege of the authenticated user.
--The goal of privilege separation is to prevent privilege
--escalation by containing any corruption within the unprivileged processes.
--The argument must be
--.Cm yes ,
--.Cm no ,
--or
--.Cm sandbox .
--If
--.Cm UsePrivilegeSeparation
--is set to
--.Cm sandbox
--then the pre-authentication unprivileged process is subject to additional
--restrictions.
--The default is
--.Cm sandbox .
--.It Cm VersionAddendum
--Optionally specifies additional text to append to the SSH protocol banner
--sent by the server upon connection.
--The default is
--.Cm none .
--.It Cm X11DisplayOffset
--Specifies the first display number available for
++.Xr sshd 1M
+ as a non-root user.
+ The default is
+ .Cm no .
+@@ -1631,7 +1631,7 @@ The default is
+ .Cm none .
+ .It Cm X11DisplayOffset
+ Specifies the first display number available for
 -.Xr sshd 8 Ns 's
--X11 forwarding.
--This prevents sshd from interfering with real X11 servers.
--The default is 10.
--.It Cm X11Forwarding
--Specifies whether X11 forwarding is permitted.
--The argument must be
--.Cm yes
--or
--.Cm no .
--The default is
--.Cm no .
--.Pp
--When X11 forwarding is enabled, there may be additional exposure to
--the server and to client displays if the
++.Xr sshd 1M Ns 's
+ X11 forwarding.
+ This prevents sshd from interfering with real X11 servers.
+ The default is 10.
+@@ -1646,7 +1646,7 @@ The default is
+ .Pp
+ When X11 forwarding is enabled, there may be additional exposure to
+ the server and to client displays if the
 -.Xr sshd 8
--proxy display is configured to listen on the wildcard address (see
--.Cm X11UseLocalhost ) ,
--though this is not the default.
--Additionally, the authentication spoofing and authentication data
--verification and substitution occur on the client side.
--The security risk of using X11 forwarding is that the client's X11
--display server may be exposed to attack when the SSH client requests
--forwarding (see the warnings for
--.Cm ForwardX11
--in
++.Xr sshd 1M
+ proxy display is configured to listen on the wildcard address (see
+ .Cm X11UseLocalhost ) ,
+ though this is not the default.
+@@ -1657,7 +1657,7 @@ display server may be exposed to attack when the SSH client requests
+ forwarding (see the warnings for
+ .Cm ForwardX11
+ in
 -.Xr ssh_config 5 ) .
--A system administrator may have a stance in which they want to
--protect clients that may expose themselves to attack by unwittingly
--requesting X11 forwarding, which can warrant a
--.Cm no
--setting.
--.Pp
--Note that disabling X11 forwarding does not prevent users from
--forwarding X11 traffic, as users can always install their own forwarders.
--.It Cm X11UseLocalhost
--Specifies whether
++.Xr ssh_config 4 ) .
+ A system administrator may have a stance in which they want to
+ protect clients that may expose themselves to attack by unwittingly
+ requesting X11 forwarding, which can warrant a
+@@ -1668,7 +1668,7 @@ Note that disabling X11 forwarding does not prevent users from
+ forwarding X11 traffic, as users can always install their own forwarders.
+ .It Cm X11UseLocalhost
+ Specifies whether
 -.Xr sshd 8
--should bind the X11 forwarding server to the loopback address or to
--the wildcard address.
--By default,
--sshd binds the forwarding server to the loopback address and sets the
--hostname part of the
--.Ev DISPLAY
--environment variable to
--.Cm localhost .
--This prevents remote hosts from connecting to the proxy display.
--However, some older X11 clients may not function with this
--configuration.
--.Cm X11UseLocalhost
--may be set to
--.Cm no
--to specify that the forwarding server should be bound to the wildcard
--address.
--The argument must be
--.Cm yes
--or
--.Cm no .
--The default is
--.Cm yes .
--.It Cm XAuthLocation
--Specifies the full pathname of the
--.Xr xauth 1
--program, or
--.Cm none
--to not use one.
--The default is
--.Pa /usr/X11R6/bin/xauth .
--.El
--.Sh TIME FORMATS
++.Xr sshd 1M
+ should bind the X11 forwarding server to the loopback address or to
+ the wildcard address.
+ By default,
+@@ -1701,7 +1701,7 @@ The default is
+ .Pa /usr/X11R6/bin/xauth .
+ .El
+ .Sh TIME FORMATS
 -.Xr sshd 8
--command-line arguments and configuration file options that specify time
--may be expressed using a sequence of the form:
--.Sm off
--.Ar time Op Ar qualifier ,
--.Sm on
--where
--.Ar time
--is a positive integer value and
--.Ar qualifier
--is one of the following:
--.Pp
--.Bl -tag -width Ds -compact -offset indent
--.It Aq Cm none
--seconds
--.It Cm s | Cm S
--seconds
--.It Cm m | Cm M
--minutes
--.It Cm h | Cm H
--hours
--.It Cm d | Cm D
--days
--.It Cm w | Cm W
--weeks
--.El
--.Pp
--Each member of the sequence is added together to calculate
--the total time value.
--.Pp
--Time format examples:
--.Pp
--.Bl -tag -width Ds -compact -offset indent
--.It 600
--600 seconds (10 minutes)
--.It 10m
--10 minutes
--.It 1h30m
--1 hour 30 minutes (90 minutes)
--.El
--.Sh TOKENS
--Arguments to some keywords can make use of tokens,
--which are expanded at runtime:
--.Pp
--.Bl -tag -width XXXX -offset indent -compact
--.It %%
--A literal
--.Sq % .
--.It %F
--The fingerprint of the CA key.
--.It %f
--The fingerprint of the key or certificate.
--.It %h
--The home directory of the user.
--.It %i
--The key ID in the certificate.
--.It %K
--The base64-encoded CA key.
--.It %k
--The base64-encoded key or certificate for authentication.
--.It %s
--The serial number of the certificate.
--.It \&%T
--The type of the CA key.
--.It %t
--The key or certificate type.
--.It %u
--The username.
--.El
--.Pp
--.Cm AuthorizedKeysCommand
--accepts the tokens %%, %f, %h, %t, and %u.
--.Pp
--.Cm AuthorizedKeysFile
--accepts the tokens %%, %h, and %u.
--.Pp
--.Cm AuthorizedPrincipalsCommand
--accepts the tokens %%, %F, %f, %K, %k, %h, %i, %s, %T, %t, and %u.
--.Pp
--.Cm AuthorizedPrincipalsFile
--accepts the tokens %%, %h, and %u.
--.Pp
--.Cm ChrootDirectory
--accepts the tokens %%, %h, and %u.
--.Sh FILES
--.Bl -tag -width Ds
--.It Pa /etc/ssh/sshd_config
--Contains configuration data for
++.Xr sshd 1M
+ command-line arguments and configuration file options that specify time
+ may be expressed using a sequence of the form:
+ .Sm off
+@@ -1796,13 +1796,13 @@ accepts the token %D.
+ .Bl -tag -width Ds
+ .It Pa /etc/ssh/sshd_config
+ Contains configuration data for
 -.Xr sshd 8 .
--This file should be writable by root only, but it is recommended
--(though not necessary) that it be world-readable.
--.El
--.Sh SEE ALSO
++.Xr sshd 1M .
+ This file should be writable by root only, but it is recommended
+ (though not necessary) that it be world-readable.
+ .El
+ .Sh SEE ALSO
 -.Xr sftp-server 8 ,
 -.Xr sshd 8 ,
--.Xr pam_unix_session 5
--.Sh AUTHORS
--.An -nosplit
--OpenSSH is a derivative of the original and free
--ssh 1.2.12 release by
--.An Tatu Ylonen .
--.An Aaron Campbell , Bob Beck , Markus Friedl , Niels Provos ,
--.An Theo de Raadt
--and
--.An Dug Song
--removed many bugs, re-added newer features and
--created OpenSSH.
--.An Markus Friedl
--contributed the support for SSH protocol versions 1.5 and 2.0.
--.An Niels Provos
--and
--.An Markus Friedl
--contributed support for privilege separation.
++.Xr sftp-server 1M ,
++.Xr sshd 1M ,
+ .Xr pam_unix_session 5
+ .Sh AUTHORS
+ .An -nosplit
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0005-Deprecated-SunSSH-options.patch b/openssh/Patches/0005-Deprecated-SunSSH-options.patch
index b07bfa9..c95c47a 100644
--- a/openssh/Patches/0005-Deprecated-SunSSH-options.patch
+++ b/openssh/Patches/0005-Deprecated-SunSSH-options.patch
@@ -1,4 +1,4 @@
-From 3d182d824ed1f288830a7e42b6a4a45d5564691a Mon Sep 17 00:00:00 2001
+From 3b68156b76d0f41f78153fa778ed294428159db7 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:35:12 -0700
 Subject: [PATCH 05/34] Deprecated SunSSH options
@@ -16,10 +16,10 @@ Subject: [PATCH 05/34] Deprecated SunSSH options
  1 file changed, 18 insertions(+)
 
 diff --git a/readconf.c b/readconf.c
-index fa3fab8f..e11a928d 100644
+index 43381152..7612b54d 100644
 --- a/readconf.c
 +++ b/readconf.c
-@@ -297,6 +297,24 @@ static struct {
+@@ -310,6 +310,24 @@ static struct {
  	{ "ignoreunknown", oIgnoreUnknown },
  	{ "proxyjump", oProxyJump },
  
@@ -45,5 +45,5 @@ index fa3fab8f..e11a928d 100644
  };
  
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0006-GSS-store-creds-for-Solaris.patch b/openssh/Patches/0006-GSS-store-creds-for-Solaris.patch
index 3bf93bc..9e6a3f9 100644
--- a/openssh/Patches/0006-GSS-store-creds-for-Solaris.patch
+++ b/openssh/Patches/0006-GSS-store-creds-for-Solaris.patch
@@ -1,4 +1,4 @@
-From 8952e72b9cf0f8a14d728feaeb2f5fe85ebbeae0 Mon Sep 17 00:00:00 2001
+From 38ea92225566d34b1941865619a526dbacdd95fd Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:35:34 -0700
 Subject: [PATCH 06/34] GSS store creds for Solaris
@@ -12,10 +12,10 @@ Subject: [PATCH 06/34] GSS store creds for Solaris
  5 files changed, 71 insertions(+), 1 deletion(-)
 
 diff --git a/configure.ac b/configure.ac
-index eb9f45dc..f5deed69 100644
+index 7379ab35..505884b2 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -949,6 +949,9 @@ mips-sony-bsd|mips-sony-newsos4)
+@@ -1035,6 +1035,9 @@ mips-sony-bsd|mips-sony-newsos4)
  		],
  	)
  	TEST_SHELL=$SHELL	# let configure find us a capable shell
@@ -26,10 +26,10 @@ index eb9f45dc..f5deed69 100644
  *-*-sunos4*)
  	CPPFLAGS="$CPPFLAGS -DSUNOS4"
 diff --git a/gss-serv-krb5.c b/gss-serv-krb5.c
-index 795992d9..6e6cff7b 100644
+index a151bc1e..6a6af04e 100644
 --- a/gss-serv-krb5.c
 +++ b/gss-serv-krb5.c
-@@ -110,7 +110,7 @@ ssh_gssapi_krb5_userok(ssh_gssapi_client *client, char *name)
+@@ -109,7 +109,7 @@ ssh_gssapi_krb5_userok(ssh_gssapi_client *client, char *name)
  	return retval;
  }
  
@@ -38,7 +38,7 @@ index 795992d9..6e6cff7b 100644
  /* This writes out any forwarded credentials from the structure populated
   * during userauth. Called after we have setuid to the user */
  
-@@ -196,6 +196,7 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
+@@ -195,6 +195,7 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
  
  	return;
  }
@@ -46,7 +46,7 @@ index 795992d9..6e6cff7b 100644
  
  ssh_gssapi_mech gssapi_kerberos_mech = {
  	"toWM5Slw5Ew8Mqkay+al2g==",
-@@ -204,7 +205,11 @@ ssh_gssapi_mech gssapi_kerberos_mech = {
+@@ -203,7 +204,11 @@ ssh_gssapi_mech gssapi_kerberos_mech = {
  	NULL,
  	&ssh_gssapi_krb5_userok,
  	NULL,
@@ -59,10 +59,10 @@ index 795992d9..6e6cff7b 100644
  
  #endif /* KRB5 */
 diff --git a/gss-serv.c b/gss-serv.c
-index 53993d67..209ffe82 100644
+index ab3a15f0..145258e2 100644
 --- a/gss-serv.c
 +++ b/gss-serv.c
-@@ -320,22 +320,66 @@ ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)
+@@ -319,22 +319,66 @@ ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)
  void
  ssh_gssapi_cleanup_creds(void)
  {
@@ -130,10 +130,10 @@ index 53993d67..209ffe82 100644
  
  /* This allows GSSAPI methods to do things to the childs environment based
 diff --git a/servconf.c b/servconf.c
-index 409d4800..e98c6500 100644
+index d6f430e4..66f39bc5 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -484,7 +484,11 @@ static struct {
+@@ -563,7 +563,11 @@ static struct {
  	{ "afstokenpassing", sUnsupported, SSHCFG_GLOBAL },
  #ifdef GSSAPI
  	{ "gssapiauthentication", sGssAuthentication, SSHCFG_ALL },
@@ -146,10 +146,10 @@ index 409d4800..e98c6500 100644
  #else
  	{ "gssapiauthentication", sUnsupported, SSHCFG_ALL },
 diff --git a/sshd.c b/sshd.c
-index 1dc4d182..e39b3024 100644
+index ba26287b..2e6cf143 100644
 --- a/sshd.c
 +++ b/sshd.c
-@@ -2048,9 +2048,23 @@ main(int ac, char **av)
+@@ -2180,9 +2180,23 @@ main(int ac, char **av)
  
  #ifdef GSSAPI
  	if (options.gss_authentication) {
@@ -174,5 +174,5 @@ index 1dc4d182..e39b3024 100644
  #endif
  #ifdef USE_PAM
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0007-DTrace-support-for-SFTP.patch b/openssh/Patches/0007-DTrace-support-for-SFTP.patch
index 2718720..2a436e7 100644
--- a/openssh/Patches/0007-DTrace-support-for-SFTP.patch
+++ b/openssh/Patches/0007-DTrace-support-for-SFTP.patch
@@ -1,24 +1,24 @@
-From 4afef59e9cfdc88092899a6abdff720d39b0ddd3 Mon Sep 17 00:00:00 2001
+From 321b94d7b0b66c76535c1977e7fa66176c5f3ad1 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:35:43 -0700
 Subject: [PATCH 07/34] DTrace support for SFTP
 
 ---
- Makefile.in          | 24 ++++++++++++++---
- sftp-server.c        | 25 ++++++++++++++++--
- sftp64.d             | 56 ++++++++++++++++++++++++++++++++++++++++
- sftp_provider.d      | 61 +++++++++++++++++++++++++++++++++++++++++++
- sftp_provider_impl.h | 73 ++++++++++++++++++++++++++++++++++++++++++++++++++++
+ Makefile.in          | 24 ++++++++++++---
+ sftp-server.c        | 25 +++++++++++++--
+ sftp64.d             | 56 +++++++++++++++++++++++++++++++++
+ sftp_provider.d      | 61 ++++++++++++++++++++++++++++++++++++
+ sftp_provider_impl.h | 73 ++++++++++++++++++++++++++++++++++++++++++++
  5 files changed, 233 insertions(+), 6 deletions(-)
  create mode 100644 sftp64.d
  create mode 100644 sftp_provider.d
  create mode 100644 sftp_provider_impl.h
 
 diff --git a/Makefile.in b/Makefile.in
-index 6541b3bb..82065077 100644
+index 7681283b..cc6f5348 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -26,6 +26,7 @@ ASKPASS_PROGRAM=$(libexecdir)/ssh-askpass
+@@ -24,6 +24,7 @@ ASKPASS_PROGRAM=$(libexecdir)/ssh-askpass
  SFTP_SERVER=$(libexecdir)/sftp-server
  SSH_KEYSIGN=$(libexecdir)/ssh-keysign
  SSH_PKCS11_HELPER=$(libexecdir)/ssh-pkcs11-helper
@@ -26,24 +26,24 @@ index 6541b3bb..82065077 100644
  PRIVSEP_PATH=@PRIVSEP_PATH@
  SSH_PRIVSEP_USER=@SSH_PRIVSEP_USER@
  STRIP_OPT=@STRIP_OPT@
-@@ -85,6 +86,7 @@ LIBSSH_OBJS=${LIBOPENSSH_OBJS} \
- 	atomicio.o key.o dispatch.o mac.o uidswap.o uuencode.o misc.o utf8.o \
+@@ -93,6 +94,7 @@ LIBSSH_OBJS=${LIBOPENSSH_OBJS} \
+ 	atomicio.o dispatch.o mac.o uuencode.o misc.o utf8.o \
  	monitor_fdpass.o rijndael.o ssh-dss.o ssh-ecdsa.o ssh-rsa.o dh.o \
  	msg.o progressmeter.o dns.o entropy.o gss-genr.o umac.o umac128.o \
 +	sftp_provider.o \
  	ssh-pkcs11.o smult_curve25519_ref.o \
  	poly1305.o chacha.o cipher-chachapoly.o \
  	ssh-ed25519.o digest-openssl.o digest-libc.o hmac.o \
-@@ -110,7 +112,7 @@ SSHDOBJS=sshd.o auth-rhosts.o auth-passwd.o \
+@@ -118,7 +120,7 @@ SSHDOBJS=sshd.o auth-rhosts.o auth-passwd.o \
  	sftp-server.o sftp-common.o \
  	sandbox-null.o sandbox-rlimit.o sandbox-systrace.o sandbox-darwin.o \
  	sandbox-seccomp-filter.o sandbox-capsicum.o sandbox-pledge.o \
--	sandbox-solaris.o
-+	sandbox-solaris.o sftp_provider.o
+-	sandbox-solaris.o uidswap.o
++	sandbox-solaris.o uidswap.o sftp_provider.o
  
  MANPAGES	= moduli.4.out scp.1.out ssh-add.1.out ssh-agent.1.out ssh-keygen.1.out ssh-keyscan.1.out ssh.1.out sshd.1m.out sftp-server.1m.out sftp.1.out ssh-keysign.1m.out ssh-pkcs11-helper.1m.out sshd_config.4.out ssh_config.4.out
  MANPAGES_IN	= moduli.4 scp.1 ssh-add.1 ssh-agent.1 ssh-keygen.1 ssh-keyscan.1 ssh.1 sshd.1m sftp-server.1m sftp.1 ssh-keysign.1m ssh-pkcs11-helper.1m sshd_config.4 ssh_config.4
-@@ -187,8 +189,8 @@ ssh-pkcs11-helper$(EXEEXT): $(LIBCOMPAT) libssh.a ssh-pkcs11-helper.o ssh-pkcs11
+@@ -195,8 +197,8 @@ ssh-pkcs11-helper$(EXEEXT): $(LIBCOMPAT) libssh.a ssh-pkcs11-helper.o ssh-pkcs11
  ssh-keyscan$(EXEEXT): $(LIBCOMPAT) libssh.a ssh-keyscan.o
  	$(LD) -o $@ ssh-keyscan.o $(LDFLAGS) -lssh -lopenbsd-compat -lssh $(LIBS)
  
@@ -54,9 +54,9 @@ index 6541b3bb..82065077 100644
  
  sftp$(EXEEXT): $(LIBCOMPAT) libssh.a sftp.o sftp-client.o sftp-common.o sftp-glob.o progressmeter.o
  	$(LD) -o $@ progressmeter.o sftp.o sftp-client.o sftp-common.o sftp-glob.o $(LDFLAGS) -lssh -lopenbsd-compat $(LIBS) $(LIBEDIT)
-@@ -225,9 +227,22 @@ umac128.o:	umac.c
- 	    -Dumac_update=umac128_update -Dumac_final=umac128_final \
- 	    -Dumac_delete=umac128_delete -Dumac_ctx=umac128_ctx
+@@ -226,9 +228,22 @@ $(CONFIGFILES): $(CONFIGFILES_IN)
+ moduli:
+ 	echo
  
 +# dtrace sftp
 +sftp_provider.h: $(srcdir)/sftp_provider.d
@@ -75,19 +75,19 @@ index 6541b3bb..82065077 100644
  	rm -f *.o *.a $(TARGETS) logintest config.cache config.log
 -	rm -f *.out core survey
 +	rm -f *.out core survey sftp_provider.h
+ 	rm -f regress/check-perm$(EXEEXT)
+ 	rm -f regress/mkdtemp$(EXEEXT)
  	rm -f regress/unittests/test_helper/*.a
- 	rm -f regress/unittests/test_helper/*.o
- 	rm -f regress/unittests/sshbuf/*.o
-@@ -347,6 +362,7 @@ install-files:
+@@ -369,6 +384,7 @@ install-files:
  	$(INSTALL) -m 644 sftp-server.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/sftp-server.1m
  	$(INSTALL) -m 644 ssh-keysign.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/ssh-keysign.1m
  	$(INSTALL) -m 644 ssh-pkcs11-helper.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/ssh-pkcs11-helper.1m
 +	mkdir -p $(ROOTDLIBDIR64) && cp $(srcdir)/sftp64.d $(ROOTDLIBDIR64)/sftp64.d
  
  install-sysconf:
- 	if [ ! -d $(DESTDIR)$(sysconfdir) ]; then \
+ 	$(MKDIR_P) $(DESTDIR)$(sysconfdir)
 diff --git a/sftp-server.c b/sftp-server.c
-index 3619cdfc..78167f9d 100644
+index ab1b063f..5ea04ca0 100644
 --- a/sftp-server.c
 +++ b/sftp-server.c
 @@ -50,6 +50,9 @@
@@ -375,5 +375,5 @@ index 00000000..4b18e6ec
 +
 +#endif /* _SFTP_PROVIDER_IMPL_H */
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0008-Add-DisableBanner-option.patch b/openssh/Patches/0008-Add-DisableBanner-option.patch
index d36a56d..7432442 100644
--- a/openssh/Patches/0008-Add-DisableBanner-option.patch
+++ b/openssh/Patches/0008-Add-DisableBanner-option.patch
@@ -1,4 +1,4 @@
-From 09ad0aa54f500a5e3aef488bb4755bd480c4b8fa Mon Sep 17 00:00:00 2001
+From 89b96ba5c87db219f18a1640e6c1004430885e01 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:36:00 -0700
 Subject: [PATCH 08/34] Add DisableBanner option
@@ -11,20 +11,20 @@ Subject: [PATCH 08/34] Add DisableBanner option
  4 files changed, 75 insertions(+), 4 deletions(-)
 
 diff --git a/readconf.c b/readconf.c
-index e11a928d..b8c40291 100644
+index 7612b54d..3070fc1b 100644
 --- a/readconf.c
 +++ b/readconf.c
-@@ -163,6 +163,9 @@ typedef enum {
- 	oServerAliveInterval, oServerAliveCountMax, oIdentitiesOnly,
- 	oSendEnv, oControlPath, oControlMaster, oControlPersist,
+@@ -166,6 +166,9 @@ typedef enum {
  	oHashKnownHosts,
+ 	oTunnel, oTunnelDevice,
+ 	oLocalCommand, oPermitLocalCommand, oRemoteCommand,
 +#ifdef DISABLE_BANNER
 +	oDisableBanner,
 +#endif
- 	oTunnel, oTunnelDevice, oLocalCommand, oPermitLocalCommand,
  	oVisualHostKey,
  	oKexAlgorithms, oIPQoS, oRequestTTY, oIgnoreUnknown, oProxyUseFdpass,
-@@ -272,6 +275,9 @@ static struct {
+ 	oCanonicalDomains, oCanonicalizeHostname, oCanonicalizeMaxDots,
+@@ -285,6 +288,9 @@ static struct {
  	{ "controlpersist", oControlPersist },
  	{ "hashknownhosts", oHashKnownHosts },
  	{ "include", oInclude },
@@ -34,7 +34,7 @@ index e11a928d..b8c40291 100644
  	{ "tunnel", oTunnel },
  	{ "tunneldevice", oTunnelDevice },
  	{ "localcommand", oLocalCommand },
-@@ -812,6 +818,17 @@ static const struct multistate multistate_canonicalizehostname[] = {
+@@ -832,6 +838,17 @@ static const struct multistate multistate_canonicalizehostname[] = {
  	{ NULL, -1 }
  };
  
@@ -52,9 +52,9 @@ index e11a928d..b8c40291 100644
  /*
   * Processes a single option line as used in the configuration files. This
   * only sets those values that have not already been set.
-@@ -1674,6 +1691,13 @@ parse_keytypes:
- 		charptr = &options->identity_agent;
- 		goto parse_string;
+@@ -1740,6 +1757,13 @@ parse_keytypes:
+ 			*charptr = xstrdup(arg);
+ 		break;
  
 +#ifdef DISABLE_BANNER
 +	case oDisableBanner:
@@ -66,7 +66,7 @@ index e11a928d..b8c40291 100644
  	case oDeprecated:
  		debug("%s line %d: Deprecated option \"%s\"",
  		    filename, linenum, keyword);
-@@ -1864,6 +1888,9 @@ initialize_options(Options * options)
+@@ -1933,6 +1957,9 @@ initialize_options(Options * options)
  	options->ip_qos_bulk = -1;
  	options->request_tty = -1;
  	options->proxy_use_fdpass = -1;
@@ -76,7 +76,7 @@ index e11a928d..b8c40291 100644
  	options->ignored_unknown = NULL;
  	options->num_canonical_domains = 0;
  	options->num_permitted_cnames = 0;
-@@ -2058,6 +2085,10 @@ fill_default_options(Options * options)
+@@ -2111,6 +2138,10 @@ fill_default_options(Options * options)
  		options->canonicalize_fallback_local = 1;
  	if (options->canonicalize_hostname == -1)
  		options->canonicalize_hostname = SSH_CANONICALISE_NO;
@@ -88,10 +88,10 @@ index e11a928d..b8c40291 100644
  		options->fingerprint_hash = SSH_FP_HASH_DEFAULT;
  	if (options->update_hostkeys == -1)
 diff --git a/readconf.h b/readconf.h
-index cef55f71..8005ebdd 100644
+index fc7e3825..cfb6a128 100644
 --- a/readconf.h
 +++ b/readconf.h
-@@ -169,6 +169,9 @@ typedef struct {
+@@ -166,6 +166,9 @@ typedef struct {
  	char   *jump_extra;
  
  	char	*ignored_unknown; /* Pattern list of unknown tokens to ignore */
@@ -101,9 +101,9 @@ index cef55f71..8005ebdd 100644
  }       Options;
  
  #define SSH_CANONICALISE_NO	0
-@@ -195,6 +198,12 @@ typedef struct {
- #define SSH_UPDATE_HOSTKEYS_YES	1
- #define SSH_UPDATE_HOSTKEYS_ASK	2
+@@ -197,6 +200,12 @@ typedef struct {
+ #define SSH_STRICT_HOSTKEY_YES	2
+ #define SSH_STRICT_HOSTKEY_ASK	3
  
 +#ifdef DISABLE_BANNER
 +#define SSH_DISABLEBANNER_NO		0
@@ -115,10 +115,10 @@ index cef55f71..8005ebdd 100644
  void     fill_default_options(Options *);
  void	 fill_default_options_for_canonicalization(Options *);
 diff --git a/ssh_config.4 b/ssh_config.4
-index ff5dc74b..6b790fb7 100644
+index d9e46862..65651478 100644
 --- a/ssh_config.4
 +++ b/ssh_config.4
-@@ -572,6 +572,14 @@ If set to a time in seconds, or a time in any of the formats documented in
+@@ -556,6 +556,14 @@ If set to a time in seconds, or a time in any of the formats documented in
  then the backgrounded master connection will automatically terminate
  after it has remained idle (with no client connections) for the
  specified time.
@@ -134,7 +134,7 @@ index ff5dc74b..6b790fb7 100644
  Specifies that a TCP port on the local machine be forwarded
  over the secure channel, and the application
 diff --git a/sshconnect2.c b/sshconnect2.c
-index 103a2b36..56942ca7 100644
+index 1675f393..ebdbeabf 100644
 --- a/sshconnect2.c
 +++ b/sshconnect2.c
 @@ -82,6 +82,10 @@ extern char *client_version_string;
@@ -148,9 +148,9 @@ index 103a2b36..56942ca7 100644
  /*
   * SSH2 key exchange
   */
-@@ -499,15 +503,34 @@ input_userauth_error(int type, u_int32_t seq, void *ctxt)
+@@ -506,15 +510,34 @@ input_userauth_error(int type, u_int32_t seq, struct ssh *ssh)
  int
- input_userauth_banner(int type, u_int32_t seq, void *ctxt)
+ input_userauth_banner(int type, u_int32_t seq, struct ssh *ssh)
  {
 -	char *msg, *lang;
 +	char *msg, *lang, *raw;
@@ -188,5 +188,5 @@ index 103a2b36..56942ca7 100644
  	return 0;
  }
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0009-PAM-conversation-fix.patch b/openssh/Patches/0009-PAM-conversation-fix.patch
index 0c8932f..bcb8a8f 100644
--- a/openssh/Patches/0009-PAM-conversation-fix.patch
+++ b/openssh/Patches/0009-PAM-conversation-fix.patch
@@ -1,4 +1,4 @@
-From 021fca2b8ff90ee195aab3ae1ee82b461b752100 Mon Sep 17 00:00:00 2001
+From e264c94da2b26887dbc28793c6fc42385f0f8a99 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:36:13 -0700
 Subject: [PATCH 09/34] PAM conversation fix
@@ -8,10 +8,10 @@ Subject: [PATCH 09/34] PAM conversation fix
  1 file changed, 36 insertions(+)
 
 diff --git a/auth-pam.c b/auth-pam.c
-index 7d8b2926..ee09b804 100644
+index 1dec53e9..b0c3d2d3 100644
 --- a/auth-pam.c
 +++ b/auth-pam.c
-@@ -1130,11 +1130,13 @@ free_pam_environment(char **env)
+@@ -1219,11 +1219,13 @@ free_pam_environment(char **env)
  	free(env);
  }
  
@@ -25,7 +25,7 @@ index 7d8b2926..ee09b804 100644
  static int
  sshpam_passwd_conv(int n, sshpam_const struct pam_message **msg,
      struct pam_response **resp, void *data)
-@@ -1156,12 +1158,24 @@ sshpam_passwd_conv(int n, sshpam_const struct pam_message **msg,
+@@ -1245,12 +1247,24 @@ sshpam_passwd_conv(int n, sshpam_const struct pam_message **msg,
  	for (i = 0; i < n; ++i) {
  		switch (PAM_MSG_MEMBER(msg, i, msg_style)) {
  		case PAM_PROMPT_ECHO_OFF:
@@ -50,7 +50,7 @@ index 7d8b2926..ee09b804 100644
  		case PAM_ERROR_MSG:
  		case PAM_TEXT_INFO:
  			len = strlen(PAM_MSG_MEMBER(msg, i, msg));
-@@ -1197,6 +1211,9 @@ static struct pam_conv passwd_conv = { sshpam_passwd_conv, NULL };
+@@ -1287,6 +1301,9 @@ static struct pam_conv passwd_conv = { sshpam_passwd_conv, NULL };
  int
  sshpam_auth_passwd(Authctxt *authctxt, const char *password)
  {
@@ -60,7 +60,7 @@ index 7d8b2926..ee09b804 100644
  	int flags = (options.permit_empty_passwd == 0 ?
  	    PAM_DISALLOW_NULL_AUTHTOK : 0);
  	char *fake = NULL;
-@@ -1217,6 +1234,15 @@ sshpam_auth_passwd(Authctxt *authctxt, const char *password)
+@@ -1307,6 +1324,15 @@ sshpam_auth_passwd(Authctxt *authctxt, const char *password)
  	    options.permit_root_login != PERMIT_YES))
  		sshpam_password = fake = fake_password(password);
  
@@ -76,7 +76,7 @@ index 7d8b2926..ee09b804 100644
  	sshpam_err = pam_set_item(sshpam_handle, PAM_CONV,
  	    (const void *)&passwd_conv);
  	if (sshpam_err != PAM_SUCCESS)
-@@ -1228,6 +1254,16 @@ sshpam_auth_passwd(Authctxt *authctxt, const char *password)
+@@ -1318,6 +1344,16 @@ sshpam_auth_passwd(Authctxt *authctxt, const char *password)
  	free(fake);
  	if (sshpam_err == PAM_MAXTRIES)
  		sshpam_set_maxtries_reached(1);
@@ -94,5 +94,5 @@ index 7d8b2926..ee09b804 100644
  		debug("PAM: password authentication accepted for %.100s",
  		    authctxt->user);
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0010-PAM-enhancements-for-Solaris.patch b/openssh/Patches/0010-PAM-enhancements-for-Solaris.patch
index bebe5dc..ccb39f0 100644
--- a/openssh/Patches/0010-PAM-enhancements-for-Solaris.patch
+++ b/openssh/Patches/0010-PAM-enhancements-for-Solaris.patch
@@ -1,26 +1,26 @@
-From ed82a32f2970ccafe09d94de469de246ac8b795f Mon Sep 17 00:00:00 2001
+From b3b2132fc89d826365c93715c5dd7d5e902a789d Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:36:19 -0700
 Subject: [PATCH 10/34] PAM enhancements for Solaris
 
 ---
- auth-pam.c     | 119 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- auth.h         |   3 ++
- auth2.c        |  61 ++++++++++++++++++++++++++++-
- monitor.c      |  65 +++++++++++++++++++++++++++++++
+ auth-pam.c     | 113 +++++++++++++++++++++++++++++++++++++++++++++++++
+ auth.h         |   4 ++
+ auth2.c        |  72 +++++++++++++++++++++++++++++--
+ monitor.c      |  66 +++++++++++++++++++++++++++++
  monitor.h      |   3 ++
- monitor_wrap.c |  18 +++++++++
- servconf.c     |  56 +++++++++++++++++++++++++++
+ monitor_wrap.c |  18 ++++++++
+ servconf.c     |  56 ++++++++++++++++++++++++
  servconf.h     |  10 +++++
- sshd.1m        |  27 +++++++++++++
- sshd_config.4  |  18 ++++++++-
- 10 files changed, 376 insertions(+), 4 deletions(-)
+ sshd.1m        |  27 ++++++++++++
+ sshd_config.4  |  18 +++++++-
+ 10 files changed, 382 insertions(+), 5 deletions(-)
 
 diff --git a/auth-pam.c b/auth-pam.c
-index ee09b804..70a25c19 100644
+index b0c3d2d3..01f62036 100644
 --- a/auth-pam.c
 +++ b/auth-pam.c
-@@ -617,6 +617,72 @@ sshpam_cleanup(void)
+@@ -668,6 +668,66 @@ sshpam_cleanup(void)
  	sshpam_handle = NULL;
  }
  
@@ -39,52 +39,46 @@ index ee09b804..70a25c19 100644
 +		return (svcname);
 +	}
 +
-+	if (compat20) {
-+		char *method_name = authctxt->authmethod_name;
++	char *method_name = authctxt->authmethod_name;
 +
-+		if (!method_name)
-+			fatal("Userauth method unknown while starting PAM");
++	if (!method_name)
++		fatal("Userauth method unknown while starting PAM");
 +
-+		/*
-+		 * For SSHv2 we use "sshd-<userauth name>
-+		 * The "sshd" prefix can be changed via the PAMServicePrefix
-+		 * sshd_config option.
++	/*
++	 * For SSHv2 we use "sshd-<userauth name>
++	 * The "sshd" prefix can be changed via the PAMServicePrefix
++	 * sshd_config option.
++	 */
++	if (strcmp(method_name, "none") == 0) {
++		snprintf(svcname, BUFSIZ, "%s-none",
++		    options.pam_service_prefix);
++	}
++	if (strcmp(method_name, "password") == 0) {
++		snprintf(svcname, BUFSIZ, "%s-password",
++		    options.pam_service_prefix);
++	}
++	if (strcmp(method_name, "keyboard-interactive") == 0) {
++		/* "keyboard-interactive" is too long, shorten it */
++		snprintf(svcname, BUFSIZ, "%s-kbdint",
++		    options.pam_service_prefix);
++	}
++	if (strcmp(method_name, "publickey") == 0) {
++		/* "publickey" is too long, shorten it */
++		snprintf(svcname, BUFSIZ, "%s-pubkey",
++		    options.pam_service_prefix);
++	}
++	if (strcmp(method_name, "hostbased") == 0) {
++		snprintf(svcname, BUFSIZ, "%s-hostbased",
++		    options.pam_service_prefix);
++	}
++	if (strncmp(method_name, "gssapi-", 7) == 0) {
++	        /*
++		 * Although OpenSSH only supports "gssapi-with-mic"
++		 * for now. We will still map any userauth method
++                 * prefixed with "gssapi-" to the gssapi PAM service.
 +		 */
-+		if (strcmp(method_name, "none") == 0) {
-+			snprintf(svcname, BUFSIZ, "%s-none",
-+			    options.pam_service_prefix);
-+		}
-+		if (strcmp(method_name, "password") == 0) {
-+			snprintf(svcname, BUFSIZ, "%s-password",
-+			    options.pam_service_prefix);
-+		}
-+		if (strcmp(method_name, "keyboard-interactive") == 0) {
-+			/* "keyboard-interactive" is too long, shorten it */
-+			snprintf(svcname, BUFSIZ, "%s-kbdint",
-+			    options.pam_service_prefix);
-+		}
-+		if (strcmp(method_name, "publickey") == 0) {
-+			/* "publickey" is too long, shorten it */
-+			snprintf(svcname, BUFSIZ, "%s-pubkey",
-+			    options.pam_service_prefix);
-+		}
-+		if (strcmp(method_name, "hostbased") == 0) {
-+			snprintf(svcname, BUFSIZ, "%s-hostbased",
-+			    options.pam_service_prefix);
-+		}
-+		if (strncmp(method_name, "gssapi-", 7) == 0) {
-+		        /*
-+			 * Although OpenSSH only supports "gssapi-with-mic"
-+			 * for now. We will still map any userauth method
-+                         * prefixed with "gssapi-" to the gssapi PAM service.
-+			 */
-+			snprintf(svcname, BUFSIZ, "%s-gssapi",
-+			    options.pam_service_prefix);
-+		}
-+		return svcname;
-+	} else {
-+		/* SSHv1 doesn't get to be so cool */
-+		snprintf(svcname, BUFSIZ, "sshd-v1");
++		snprintf(svcname, BUFSIZ, "%s-gssapi",
++		    options.pam_service_prefix);
 +	}
 +	return svcname;
 +}
@@ -93,7 +87,7 @@ index ee09b804..70a25c19 100644
  static int
  sshpam_init(Authctxt *authctxt)
  {
-@@ -624,18 +690,71 @@ sshpam_init(Authctxt *authctxt)
+@@ -675,18 +735,71 @@ sshpam_init(Authctxt *authctxt)
  	const char **ptr_pam_user = &pam_user;
  	struct ssh *ssh = active_state; /* XXX */
  
@@ -166,24 +160,36 @@ index ee09b804..70a25c19 100644
  
  	if (sshpam_err != PAM_SUCCESS) {
 diff --git a/auth.h b/auth.h
-index 338a62da..4a7f2c1f 100644
+index 977562f0..34e69270 100644
 --- a/auth.h
 +++ b/auth.h
-@@ -81,6 +81,9 @@ struct Authctxt {
+@@ -95,6 +95,10 @@ struct Authctxt {
  
- 	struct sshkey	**prev_userkeys;
- 	u_int		 nprev_userkeys;
+ 	/* Information exposed to session */
+ 	struct sshbuf	*session_info;	/* Auth info for environment */
++
 +#ifdef PAM_ENHANCEMENT
 +	char		*authmethod_name;
 +#endif
  };
+ 
  /*
-  * Every authentication method has to handle authentication requests for
 diff --git a/auth2.c b/auth2.c
-index 9108b861..4623ae02 100644
+index 4d19957a..31f6ffbf 100644
 --- a/auth2.c
 +++ b/auth2.c
-@@ -243,10 +243,21 @@ input_userauth_request(int type, u_int32_t seq, void *ctxt)
+@@ -249,6 +249,10 @@ ensure_minimum_time_since(double start, double seconds)
+ 	nanosleep(&ts, NULL);
+ }
+ 
++#ifdef PAM_ENHANCEMENT
++void mm_inform_authmethod(char *authmethod);
++#endif
++
+ /*ARGSUSED*/
+ static int
+ input_userauth_request(int type, u_int32_t seq, struct ssh *ssh)
+@@ -286,9 +290,20 @@ input_userauth_request(int type, u_int32_t seq, struct ssh *ssh)
  			PRIVSEP(audit_event(SSH_INVALID_USER));
  #endif
  		}
@@ -200,12 +206,11 @@ index 9108b861..4623ae02 100644
 +#else
  		if (options.use_pam)
  			PRIVSEP(start_pam(authctxt));
- #endif
 +#endif
- 		setproctitle("%s%s", authctxt->valid ? user : "unknown",
- 		    use_privsep ? " [net]" : "");
- 		authctxt->service = xstrdup(service);
-@@ -277,6 +288,18 @@ input_userauth_request(int type, u_int32_t seq, void *ctxt)
+ #endif
+ 		ssh_packet_set_log_preamble(ssh, "%suser %s",
+ 		    authctxt->valid ? "authenticating " : "invalid ", user);
+@@ -323,6 +338,18 @@ input_userauth_request(int type, u_int32_t seq, struct ssh *ssh)
  	/* try to authenticate user */
  	m = authmethod_lookup(authctxt, method);
  	if (m != NULL && authctxt->failures < options.max_authtries) {
@@ -222,87 +227,101 @@ index 9108b861..4623ae02 100644
 +		}
 +#endif
  		debug2("input_userauth_request: try method %s", method);
- 		authenticated =	m->userauth(authctxt);
+ 		authenticated =	m->userauth(ssh);
  	}
-@@ -295,6 +318,10 @@ userauth_finish(Authctxt *authctxt, int authenticated, const char *method,
+@@ -345,6 +372,10 @@ userauth_finish(struct ssh *ssh, int authenticated, const char *method,
  	char *methods;
  	int partial = 0;
  
 +#ifdef  PAM_ENHANCEMENT
-+        debug3("%s: entering", __func__);
++	debug3("%s: entering", __func__);
 +#endif
 +
  	if (!authctxt->valid && authenticated)
  		fatal("INTERNAL ERROR: authenticated invalid user %s",
  		    authctxt->user);
-@@ -311,6 +338,25 @@ userauth_finish(Authctxt *authctxt, int authenticated, const char *method,
+@@ -361,6 +392,29 @@ userauth_finish(struct ssh *ssh, int authenticated, const char *method,
  	}
  
  	if (authenticated && options.num_auth_methods != 0) {
 +
 +#if defined(USE_PAM) && defined(PAM_ENHANCEMENT)
-+                /*
-+                 * If each userauth has its own PAM service, then PAM needs to
-+                 * perform the account check for this service.
-+                 */
-+                if (options.use_pam && options.pam_service_per_authmethod &&
-+                    !PRIVSEP(do_pam_account())) {
-+                        /* if PAM returned a message, send it to the user */
-+                        if (buffer_len(&loginmsg) > 0) {
-+                                buffer_append(&loginmsg, "\0", 1);
-+                                userauth_send_banner(buffer_ptr(&loginmsg));
-+                                packet_write_wait();
-+                        }
-+
-+                        fatal("Access denied for user %s by PAM account "
-+                            "configuration", authctxt->user);
-+                }
++		/*
++		 * If each userauth has its own PAM service, then PAM needs to
++		 * perform the account check for this service.
++		 */
++		if (options.use_pam && options.pam_service_per_authmethod &&
++		    !PRIVSEP(do_pam_account())) {
++			int r;
++			/* if PAM returned a message, send it to the user */
++			if (sshbuf_len(loginmsg) > 0) {
++				if ((r = sshbuf_put_u8(loginmsg, 0))) {
++					fatal("%s: buffer error: %d",
++					    __func__, r);
++				}
++				userauth_send_banner(sshbuf_ptr(loginmsg));
++				packet_write_wait();
++			}
++
++			fatal("Access denied for user %s by PAM account "
++			    "configuration", authctxt->user);
++		}
 +#endif
  		if (!auth2_update_methods_lists(authctxt, method, submethod)) {
  			authenticated = 0;
  			partial = 1;
-@@ -324,7 +370,20 @@ userauth_finish(Authctxt *authctxt, int authenticated, const char *method,
+@@ -378,13 +432,25 @@ userauth_finish(struct ssh *ssh, int authenticated, const char *method,
  		return;
  
  #ifdef USE_PAM
 +
 +#ifdef PAM_ENHANCEMENT
-+        /*
-+         * PAM needs to perform account checks after auth. However, if each
-+         * userauth has its own PAM service and options.num_auth_methods != 0,
-+         * then no need to perform account checking, because it was done
-+         * already.
-+         */
++	/*
++	 * PAM needs to perform account checks after auth. However, if each
++	 * userauth has its own PAM service and options.num_auth_methods != 0,
++	 * then no need to perform account checking, because it was done
++	 * already.
++	 */
 +	if (options.use_pam && authenticated &&
 +	    !(options.num_auth_methods != 0 &&
 +	    options.pam_service_per_authmethod)) {
 +#else
  	if (options.use_pam && authenticated) {
 +#endif
+ 		int r;
+-
  		if (!PRIVSEP(do_pam_account())) {
  			/* if PAM returned a message, send it to the user */
- 			if (buffer_len(&loginmsg) > 0) {
-@@ -615,5 +674,3 @@ auth2_update_methods_lists(Authctxt *authctxt, const char *method,
- 		fatal("%s: method not in AuthenticationMethods", __func__);
- 	return 0;
- }
--
--
+ 			if (sshbuf_len(loginmsg) > 0) {
+-				if ((r = sshbuf_put(loginmsg, "\0", 1)) != 0)
++				if ((r = sshbuf_put_u8(loginmsg, 0)) != 0)
+ 					fatal("%s: buffer error: %s",
+ 					    __func__, ssh_err(r));
+ 				userauth_send_banner(sshbuf_ptr(loginmsg));
+@@ -681,7 +747,7 @@ void
+ auth2_record_info(Authctxt *authctxt, const char *fmt, ...)
+ {
+ 	va_list ap;
+-        int i;
++	int i;
+ 
+ 	free(authctxt->auth_method_info);
+ 	authctxt->auth_method_info = NULL;
 diff --git a/monitor.c b/monitor.c
-index 43f48470..8f044f4e 100644
+index 531b2993..7b62e683 100644
 --- a/monitor.c
 +++ b/monitor.c
-@@ -127,6 +127,9 @@ int mm_answer_sign(int, Buffer *);
- int mm_answer_pwnamallow(int, Buffer *);
- int mm_answer_auth2_read_banner(int, Buffer *);
- int mm_answer_authserv(int, Buffer *);
+@@ -117,6 +117,9 @@ int mm_answer_sign(int, struct sshbuf *);
+ int mm_answer_pwnamallow(int, struct sshbuf *);
+ int mm_answer_auth2_read_banner(int, struct sshbuf *);
+ int mm_answer_authserv(int, struct sshbuf *);
 +#ifdef PAM_ENHANCEMENT
-+int mm_answer_authmethod(int, Buffer *);
++int mm_answer_authmethod(int, struct sshbuf *);
 +#endif
- int mm_answer_authpassword(int, Buffer *);
- int mm_answer_bsdauthquery(int, Buffer *);
- int mm_answer_bsdauthrespond(int, Buffer *);
-@@ -202,10 +205,17 @@ struct mon_table mon_dispatch_proto20[] = {
+ int mm_answer_authpassword(int, struct sshbuf *);
+ int mm_answer_bsdauthquery(int, struct sshbuf *);
+ int mm_answer_bsdauthrespond(int, struct sshbuf *);
+@@ -191,10 +194,17 @@ struct mon_table mon_dispatch_proto20[] = {
      {MONITOR_REQ_SIGN, MON_ONCE, mm_answer_sign},
      {MONITOR_REQ_PWNAM, MON_ONCE, mm_answer_pwnamallow},
      {MONITOR_REQ_AUTHSERV, MON_ONCE, mm_answer_authserv},
@@ -320,7 +339,7 @@ index 43f48470..8f044f4e 100644
      {MONITOR_REQ_PAM_ACCOUNT, 0, mm_answer_pam_account},
      {MONITOR_REQ_PAM_INIT_CTX, MON_ONCE, mm_answer_pam_init_ctx},
      {MONITOR_REQ_PAM_QUERY, 0, mm_answer_pam_query},
-@@ -311,6 +321,25 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
+@@ -301,6 +311,26 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
  
  		/* Special handling for multiple required authentications */
  		if (options.num_auth_methods != 0) {
@@ -332,22 +351,23 @@ index 43f48470..8f044f4e 100644
 +			 */
 +			if (options.use_pam && authenticated &&
 +			    options.pam_service_per_authmethod) {
-+				Buffer m;
++				struct sshbuf *m;
 +
-+				buffer_init(&m);
++				if ((m = sshbuf_new()) == NULL)
++					fatal("%s: sshbuf_new failed", __func__);
 +				mm_request_receive_expect(pmonitor->m_sendfd,
-+				    MONITOR_REQ_PAM_ACCOUNT, &m);
++				    MONITOR_REQ_PAM_ACCOUNT, m);
 +				authenticated = mm_answer_pam_account(
-+				    pmonitor->m_sendfd, &m);
-+				buffer_free(&m);
++				    pmonitor->m_sendfd, m);
++				sshbuf_free(m);
 +			}
 +#endif
 +
  			if (authenticated &&
  			    !auth2_update_methods_lists(authctxt,
  			    auth_method, auth_submethod)) {
-@@ -329,8 +358,21 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
- 			    !auth_root_allowed(auth_method))
+@@ -319,8 +349,21 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
+ 			    !auth_root_allowed(ssh, auth_method))
  				authenticated = 0;
  #ifdef USE_PAM
 +#ifdef PAM_ENHANCEMENT
@@ -365,10 +385,10 @@ index 43f48470..8f044f4e 100644
  			/* PAM needs to perform account checks after auth */
  			if (options.use_pam && authenticated) {
 +#endif
- 				Buffer m;
+ 				struct sshbuf *m;
  
- 				buffer_init(&m);
-@@ -771,6 +813,11 @@ mm_answer_pwnamallow(int sock, Buffer *m)
+ 				if ((m = sshbuf_new()) == NULL)
+@@ -802,6 +845,11 @@ mm_answer_pwnamallow(int sock, struct sshbuf *m)
  	monitor_permit(mon_dispatch, MONITOR_REQ_AUTHSERV, 1);
  	monitor_permit(mon_dispatch, MONITOR_REQ_AUTH2_READ_BANNER, 1);
  
@@ -380,13 +400,13 @@ index 43f48470..8f044f4e 100644
  #ifdef USE_PAM
  	if (options.use_pam)
  		monitor_permit(mon_dispatch, MONITOR_REQ_PAM_START, 1);
-@@ -810,6 +857,24 @@ mm_answer_authserv(int sock, Buffer *m)
+@@ -846,6 +894,24 @@ mm_answer_authserv(int sock, struct sshbuf *m)
  	return (0);
  }
  
 +#ifdef PAM_ENHANCEMENT
 +int
-+mm_answer_authmethod(int sock, Buffer *m)
++mm_answer_authmethod(int sock, struct sshbuf *m)
 +{
 +	monitor_permit_authentications(1);
 +
@@ -403,13 +423,13 @@ index 43f48470..8f044f4e 100644
 +#endif
 +
  int
- mm_answer_authpassword(int sock, Buffer *m)
+ mm_answer_authpassword(int sock, struct sshbuf *m)
  {
 diff --git a/monitor.h b/monitor.h
-index d68f6745..36e73f79 100644
+index 16047299..b6f658e1 100644
 --- a/monitor.h
 +++ b/monitor.h
-@@ -65,6 +65,9 @@ enum monitor_reqtype {
+@@ -63,6 +63,9 @@ enum monitor_reqtype {
  	MONITOR_REQ_PAM_FREE_CTX = 110, MONITOR_ANS_PAM_FREE_CTX = 111,
  	MONITOR_REQ_AUDIT_EVENT = 112, MONITOR_REQ_AUDIT_COMMAND = 113,
  
@@ -420,11 +440,11 @@ index d68f6745..36e73f79 100644
  
  struct monitor {
 diff --git a/monitor_wrap.c b/monitor_wrap.c
-index 64ff9288..bc6382f3 100644
+index 732fb347..b7ff09e3 100644
 --- a/monitor_wrap.c
 +++ b/monitor_wrap.c
-@@ -345,6 +345,24 @@ mm_inform_authserv(char *service, char *style)
- 	buffer_free(&m);
+@@ -390,6 +390,24 @@ mm_inform_authserv(char *service, char *style)
+ 	sshbuf_free(m);
  }
  
 +#ifdef PAM_ENHANCEMENT
@@ -447,15 +467,15 @@ index 64ff9288..bc6382f3 100644
 +
  /* Do the password authentication */
  int
- mm_auth_password(Authctxt *authctxt, char *password)
+ mm_auth_password(struct ssh *ssh, char *password)
 diff --git a/servconf.c b/servconf.c
-index e98c6500..36eb9057 100644
+index 66f39bc5..827f3aab 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -164,6 +164,18 @@ initialize_server_options(ServerOptions *options)
- 	options->version_addendum = NULL;
+@@ -180,6 +180,18 @@ initialize_server_options(ServerOptions *options)
  	options->fingerprint_hash = -1;
  	options->disable_forwarding = -1;
+ 	options->expose_userauth_info = -1;
 +#ifdef PAM_ENHANCEMENT
 +	options->pam_service_name = NULL;
 +	options->pam_service_prefix = NULL;
@@ -471,8 +491,8 @@ index e98c6500..36eb9057 100644
  }
  
  /* Returns 1 if a string option is unset or set to "none" or 0 otherwise. */
-@@ -330,6 +342,12 @@ fill_default_server_options(ServerOptions *options)
- 		options->ip_qos_bulk = IPTOS_THROUGHPUT;
+@@ -406,6 +418,12 @@ fill_default_server_options(ServerOptions *options)
+ 		options->ip_qos_bulk = IPTOS_DSCP_CS1;
  	if (options->version_addendum == NULL)
  		options->version_addendum = xstrdup("");
 +
@@ -484,8 +504,8 @@ index e98c6500..36eb9057 100644
  	if (options->fwd_opts.streamlocal_bind_mask == (mode_t)-1)
  		options->fwd_opts.streamlocal_bind_mask = 0177;
  	if (options->fwd_opts.streamlocal_bind_unlink == -1)
-@@ -416,6 +434,9 @@ typedef enum {
- 	sMatch, sPermitOpen, sForceCommand, sChrootDirectory,
+@@ -494,6 +512,9 @@ typedef enum {
+ 	sMatch, sPermitOpen, sPermitListen, sForceCommand, sChrootDirectory,
  	sUsePrivilegeSeparation, sAllowAgentForwarding,
  	sHostCertificate,
 +#ifdef PAM_ENHANCEMENT
@@ -493,8 +513,8 @@ index e98c6500..36eb9057 100644
 +#endif
  	sRevokedKeys, sTrustedUserCAKeys, sAuthorizedPrincipalsFile,
  	sAuthorizedPrincipalsCommand, sAuthorizedPrincipalsCommandUser,
- 	sKexAlgorithms, sIPQoS, sVersionAddendum,
-@@ -554,6 +575,10 @@ static struct {
+ 	sKexAlgorithms, sCASignatureAlgorithms, sIPQoS, sVersionAddendum,
+@@ -635,6 +656,10 @@ static struct {
  	{ "forcecommand", sForceCommand, SSHCFG_ALL },
  	{ "chrootdirectory", sChrootDirectory, SSHCFG_ALL },
  	{ "hostcertificate", sHostCertificate, SSHCFG_GLOBAL },
@@ -505,8 +525,8 @@ index e98c6500..36eb9057 100644
  	{ "revokedkeys", sRevokedKeys, SSHCFG_ALL },
  	{ "trustedusercakeys", sTrustedUserCAKeys, SSHCFG_ALL },
  	{ "authorizedprincipalsfile", sAuthorizedPrincipalsFile, SSHCFG_ALL },
-@@ -1854,6 +1879,37 @@ process_server_config_line(ServerOptions *options, char *line,
- 			options->fingerprint_hash = value;
+@@ -2167,6 +2192,37 @@ process_server_config_line(ServerOptions *options, char *line,
+ 			*charptr = xstrdup(arg);
  		break;
  
 +	case sPAMServicePrefix:
@@ -544,12 +564,12 @@ index e98c6500..36eb9057 100644
  	case sIgnore:
  	case sUnsupported:
 diff --git a/servconf.h b/servconf.h
-index 5853a974..104852f7 100644
+index 0175e00e..e757d683 100644
 --- a/servconf.h
 +++ b/servconf.h
-@@ -54,6 +54,10 @@
- /* Magic name for internal sftp-server */
- #define INTERNAL_SFTP_NAME	"internal-sftp"
+@@ -62,6 +62,10 @@ struct listenaddr {
+ 	struct addrinfo *addrs;
+ };
  
 +#ifdef PAM_ENHANCEMENT
 +#define _SSH_PAM_SERVICE_PREFIX "sshd"
@@ -558,9 +578,9 @@ index 5853a974..104852f7 100644
  typedef struct {
  	u_int	num_ports;
  	u_int	ports_from_cmdline;
-@@ -188,6 +192,12 @@ typedef struct {
+@@ -207,6 +211,12 @@ typedef struct {
  	u_int	num_auth_methods;
- 	char   *auth_methods[MAX_AUTH_METHODS];
+ 	char   **auth_methods;
  
 +#ifdef PAM_ENHANCEMENT
 +	char   *pam_service_prefix;
@@ -569,13 +589,13 @@ index 5853a974..104852f7 100644
 +#endif
 +
  	int	fingerprint_hash;
- }       ServerOptions;
- 
+ 	int	expose_userauth_info;
+ 	u_int64_t timing_secret;
 diff --git a/sshd.1m b/sshd.1m
-index b767cc7a..387ea69e 100644
+index c65a688b..1ca36c60 100644
 --- a/sshd.1m
 +++ b/sshd.1m
-@@ -920,6 +920,33 @@ concurrently for different ports, this contains the process ID of the one
+@@ -966,6 +966,33 @@ concurrently for different ports, this contains the process ID of the one
  started last).
  The content of this file is not sensitive; it can be world-readable.
  .El
@@ -610,10 +630,10 @@ index b767cc7a..387ea69e 100644
  .Xr scp 1 ,
  .Xr sftp 1 ,
 diff --git a/sshd_config.4 b/sshd_config.4
-index efb10c97..7e4a376b 100644
+index 8b5d40a5..6eac9806 100644
 --- a/sshd_config.4
 +++ b/sshd_config.4
-@@ -1117,6 +1117,21 @@ will refuse connection attempts with a probability of rate/100 (30%)
+@@ -1191,6 +1191,21 @@ will refuse connection attempts with a probability of rate/100 (30%)
  if there are currently start (10) unauthenticated connections.
  The probability increases linearly and all connection attempts
  are refused if the number of unauthenticated connections reaches full (60).
@@ -635,16 +655,16 @@ index efb10c97..7e4a376b 100644
  .It Cm PasswordAuthentication
  Specifies whether password authentication is allowed.
  The default is
-@@ -1472,8 +1487,7 @@ If
+@@ -1622,8 +1637,7 @@ If
  is enabled, you will not be able to run
  .Xr sshd 1M
  as a non-root user.
 -The default is
 -.Cm no .
 +On Solaris, the option is always enabled.
- .It Cm UsePrivilegeSeparation
- Specifies whether
- .Xr sshd 1M
+ .It Cm VersionAddendum
+ Optionally specifies additional text to append to the SSH protocol banner
+ sent by the server upon connection.
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0011-SunSSH-compat-default-config-values.patch b/openssh/Patches/0011-SunSSH-compat-default-config-values.patch
index f66b8d3..81a93d1 100644
--- a/openssh/Patches/0011-SunSSH-compat-default-config-values.patch
+++ b/openssh/Patches/0011-SunSSH-compat-default-config-values.patch
@@ -1,4 +1,4 @@
-From 7081a3dbfcee88b8b813cc0dbba8bf1479d356cb Mon Sep 17 00:00:00 2001
+From 14e01e463b4fd9d7aa89c26d56c8bd697b6ff6af Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:36:22 -0700
 Subject: [PATCH 11/34] SunSSH compat default config values
@@ -21,10 +21,10 @@ upstream.
  4 files changed, 25 insertions(+), 6 deletions(-)
 
 diff --git a/readconf.c b/readconf.c
-index b8c40291..e6fd1420 100644
+index 3070fc1b..46a974d5 100644
 --- a/readconf.c
 +++ b/readconf.c
-@@ -1931,7 +1931,11 @@ fill_default_options(Options * options)
+@@ -2003,7 +2003,11 @@ fill_default_options(Options * options)
  	if (options->forward_x11 == -1)
  		options->forward_x11 = 0;
  	if (options->forward_x11_trusted == -1)
@@ -36,7 +36,7 @@ index b8c40291..e6fd1420 100644
  	if (options->forward_x11_timeout == -1)
  		options->forward_x11_timeout = 1200;
  	/*
-@@ -1964,7 +1968,11 @@ fill_default_options(Options * options)
+@@ -2032,7 +2036,11 @@ fill_default_options(Options * options)
  	if (options->challenge_response_authentication == -1)
  		options->challenge_response_authentication = 1;
  	if (options->gss_authentication == -1)
@@ -49,10 +49,10 @@ index b8c40291..e6fd1420 100644
  		options->gss_deleg_creds = 0;
  	if (options->password_authentication == -1)
 diff --git a/servconf.c b/servconf.c
-index 36eb9057..6f11010a 100644
+index 827f3aab..5e870e82 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -249,7 +249,11 @@ fill_default_server_options(ServerOptions *options)
+@@ -319,7 +319,11 @@ fill_default_server_options(ServerOptions *options)
  	if (options->print_lastlog == -1)
  		options->print_lastlog = 1;
  	if (options->x11_forwarding == -1)
@@ -64,7 +64,7 @@ index 36eb9057..6f11010a 100644
  	if (options->x11_display_offset == -1)
  		options->x11_display_offset = 10;
  	if (options->x11_use_localhost == -1)
-@@ -283,7 +287,11 @@ fill_default_server_options(ServerOptions *options)
+@@ -353,7 +357,11 @@ fill_default_server_options(ServerOptions *options)
  	if (options->kerberos_get_afs_token == -1)
  		options->kerberos_get_afs_token = 0;
  	if (options->gss_authentication == -1)
@@ -77,10 +77,10 @@ index 36eb9057..6f11010a 100644
  		options->gss_cleanup_creds = 1;
  	if (options->gss_strict_acceptor == -1)
 diff --git a/ssh_config.4 b/ssh_config.4
-index 6b790fb7..0953f11c 100644
+index 65651478..811afa23 100644
 --- a/ssh_config.4
 +++ b/ssh_config.4
-@@ -728,6 +728,9 @@ Furthermore, the
+@@ -716,6 +716,9 @@ Furthermore, the
  token used for the session will be set to expire after 20 minutes.
  Remote clients will be refused access after this time.
  .Pp
@@ -90,7 +90,7 @@ index 6b790fb7..0953f11c 100644
  See the X11 SECURITY extension specification for full details on
  the restrictions imposed on untrusted clients.
  .It Cm GatewayPorts
-@@ -754,8 +757,8 @@ The default is
+@@ -742,8 +745,8 @@ The default is
  .Pa /etc/ssh/ssh_known_hosts2 .
  .It Cm GSSAPIAuthentication
  Specifies whether user authentication based on GSSAPI is allowed.
@@ -102,10 +102,10 @@ index 6b790fb7..0953f11c 100644
  Forward (delegate) credentials to the server.
  The default is
 diff --git a/sshd_config.4 b/sshd_config.4
-index 7e4a376b..45c54629 100644
+index 6eac9806..446e67e7 100644
 --- a/sshd_config.4
 +++ b/sshd_config.4
-@@ -621,8 +621,8 @@ The default is
+@@ -646,8 +646,8 @@ The default is
  .Cm no .
  .It Cm GSSAPIAuthentication
  Specifies whether user authentication based on GSSAPI is allowed.
@@ -116,7 +116,7 @@ index 7e4a376b..45c54629 100644
  .It Cm GSSAPICleanupCredentials
  Specifies whether to automatically destroy the user's credentials cache
  on logout.
-@@ -1527,8 +1527,8 @@ The argument must be
+@@ -1655,8 +1655,8 @@ The argument must be
  .Cm yes
  or
  .Cm no .
@@ -128,5 +128,5 @@ index 7e4a376b..45c54629 100644
  When X11 forwarding is enabled, there may be additional exposure to
  the server and to client displays if the
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0012-Deprecate-SunSSH-compatible-server-options.patch b/openssh/Patches/0012-Deprecate-SunSSH-compatible-server-options.patch
index 6e28e17..9d29bdb 100644
--- a/openssh/Patches/0012-Deprecate-SunSSH-compatible-server-options.patch
+++ b/openssh/Patches/0012-Deprecate-SunSSH-compatible-server-options.patch
@@ -1,4 +1,4 @@
-From 099bbc48c48f25dc657a6c2b4c1521ba9023f380 Mon Sep 17 00:00:00 2001
+From d8c9de9b7443dcd97469c16c9cd78925915bb99d Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:36:33 -0700
 Subject: [PATCH 12/34] Deprecate SunSSH compatible server options
@@ -23,13 +23,14 @@ Subject: [PATCH 12/34] Deprecate SunSSH compatible server options
  1 file changed, 23 insertions(+)
 
 diff --git a/servconf.c b/servconf.c
-index 6f11010a..c0aba508 100644
+index 5e870e82..93761629 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -587,6 +587,29 @@ static struct {
+@@ -667,6 +667,29 @@ static struct {
+ #ifdef PAM_ENHANCEMENT
  	{ "pamserviceprefix", sPAMServicePrefix, SSHCFG_GLOBAL },
  	{ "pamservicename", sPAMServiceName, SSHCFG_GLOBAL },
- #endif
++#endif
 +#ifdef DEPRECATE_SUNSSH_OPT
 +	/*
 +	 * On Solaris, to make the transition from SunSSH to OpenSSH as smooth
@@ -52,10 +53,9 @@ index 6f11010a..c0aba508 100644
 +	{ "useunsupportedsshv1", sDeprecated, SSHCFG_GLOBAL },
 +	{ "usefips140", sDeprecated, SSHCFG_ALL},
 +	{ "gssapistoredelegatedcredentials", sDeprecated, SSHCFG_ALL },
-+#endif
+ #endif
  	{ "revokedkeys", sRevokedKeys, SSHCFG_ALL },
  	{ "trustedusercakeys", sTrustedUserCAKeys, SSHCFG_ALL },
- 	{ "authorizedprincipalsfile", sAuthorizedPrincipalsFile, SSHCFG_ALL },
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0013-Solaris-Auditing-support.patch b/openssh/Patches/0013-Solaris-Auditing-support.patch
index 7621937..1909c01 100644
--- a/openssh/Patches/0013-Solaris-Auditing-support.patch
+++ b/openssh/Patches/0013-Solaris-Auditing-support.patch
@@ -1,4 +1,4 @@
-From dad178a7fb894660036982a75b4e1c30e71cbd33 Mon Sep 17 00:00:00 2001
+From c31040ba0ca7c7cf14b8e5f9d1c0f5eed011b909 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:37:01 -0700
 Subject: [PATCH 13/34] Solaris Auditing support
@@ -7,7 +7,7 @@ Subject: [PATCH 13/34] Solaris Auditing support
  INSTALL         |  15 +-
  Makefile.in     |   2 +-
  README.platform |   7 +-
- audit-solaris.c | 574 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ audit-solaris.c | 574 ++++++++++++++++++++++++++++++++++++++++++++++++
  configure.ac    |   9 +-
  defines.h       |   5 +
  sshd.c          |   6 +
@@ -15,14 +15,14 @@ Subject: [PATCH 13/34] Solaris Auditing support
  create mode 100644 audit-solaris.c
 
 diff --git a/INSTALL b/INSTALL
-index 6bc80b68..03417493 100644
+index 3fd265db..3fedbc4a 100644
 --- a/INSTALL
 +++ b/INSTALL
-@@ -98,9 +98,13 @@ http://www.gnu.org/software/autoconf/
+@@ -92,9 +92,13 @@ http://www.gnu.org/software/autoconf/
  
  Basic Security Module (BSM):
  
--Native BSM support is know to exist in Solaris from at least 2.5.1,
+-Native BSM support is known to exist in Solaris from at least 2.5.1,
 -FreeBSD 6.1 and OS X.  Alternatively, you may use the OpenBSM
 -implementation (http://www.openbsm.org).
 +Native BSM support is known to exist in Solaris from at least 2.5.1
@@ -33,9 +33,9 @@ index 6bc80b68..03417493 100644
 +Alternatively, you may use the OpenBSM implementation
 +(http://www.openbsm.org).
  
+ makedepend:
  
- 2. Building / Installation
-@@ -153,8 +157,9 @@ name).
+@@ -154,8 +158,9 @@ name).
  There are a few other options to the configure script:
  
  --with-audit=[module] enable additional auditing via the specified module.
@@ -48,11 +48,11 @@ index 6bc80b68..03417493 100644
  --with-pam enables PAM support. If PAM support is compiled in, it must
  also be enabled in sshd_config (refer to the UsePAM directive).
 diff --git a/Makefile.in b/Makefile.in
-index 82065077..48d773de 100644
+index cc6f5348..7dbc9680 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -100,7 +100,7 @@ SSHOBJS= ssh.o readconf.o clientloop.o sshtty.o \
- 	sshconnect.o sshconnect1.o sshconnect2.o mux.o
+@@ -108,7 +108,7 @@ SSHOBJS= ssh.o readconf.o clientloop.o sshtty.o \
+ 	sshconnect.o sshconnect2.o mux.o
  
  SSHDOBJS=sshd.o auth-rhosts.o auth-passwd.o \
 -	audit.o audit-bsm.o audit-linux.o platform.o \
@@ -61,7 +61,7 @@ index 82065077..48d773de 100644
  	auth.o auth2.o auth-options.o session.o \
  	auth2-chall.o groupaccess.o \
 diff --git a/README.platform b/README.platform
-index c7be95fb..ae461550 100644
+index 9210e07c..379d9ccc 100644
 --- a/README.platform
 +++ b/README.platform
 @@ -71,8 +71,8 @@ zlib-devel and pam-devel, on Debian based distros these may be
@@ -87,7 +87,7 @@ index c7be95fb..ae461550 100644
  -------------------
 diff --git a/audit-solaris.c b/audit-solaris.c
 new file mode 100644
-index 00000000..fc0839f5
+index 00000000..87426814
 --- /dev/null
 +++ b/audit-solaris.c
 @@ -0,0 +1,574 @@
@@ -120,8 +120,8 @@ index 00000000..fc0839f5
 +#if defined(USE_SOLARIS_AUDIT)
 +
 +#include "audit.h"
-+#include "buffer.h"
-+#include "key.h"
++#include "sshbuf.h"
++#include "sshkey.h"
 +#include "hostfile.h"
 +#include "auth.h"
 +#include "log.h"
@@ -666,10 +666,10 @@ index 00000000..fc0839f5
 +}
 +#endif	/* USE_SOLARIS_AUDIT */
 diff --git a/configure.ac b/configure.ac
-index f5deed69..7a36eee9 100644
+index 505884b2..50bee3cf 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -1561,7 +1561,7 @@ AC_ARG_WITH([libedit],
+@@ -1599,7 +1599,7 @@ AC_ARG_WITH([libedit],
  
  AUDIT_MODULE=none
  AC_ARG_WITH([audit],
@@ -678,7 +678,7 @@ index f5deed69..7a36eee9 100644
  	[
  	  AC_MSG_CHECKING([for supported audit module])
  	  case "$withval" in
-@@ -1598,6 +1598,13 @@ AC_ARG_WITH([audit],
+@@ -1636,6 +1636,13 @@ AC_ARG_WITH([audit],
  		SSHDLIBS="$SSHDLIBS -laudit"
  		AC_DEFINE([USE_LINUX_AUDIT], [1], [Use Linux audit module])
  		;;
@@ -693,10 +693,10 @@ index f5deed69..7a36eee9 100644
  		AUDIT_MODULE=debug
  		AC_MSG_RESULT([debug])
 diff --git a/defines.h b/defines.h
-index c89f85a8..a2ec7361 100644
+index 8f421306..42e984af 100644
 --- a/defines.h
 +++ b/defines.h
-@@ -645,6 +645,11 @@ struct winsize {
+@@ -650,6 +650,11 @@ struct winsize {
  # define CUSTOM_SSH_AUDIT_EVENTS
  #endif
  
@@ -709,10 +709,10 @@ index c89f85a8..a2ec7361 100644
  #  define __func__ __FUNCTION__
  #elif !defined(HAVE___func__)
 diff --git a/sshd.c b/sshd.c
-index e39b3024..eee363ab 100644
+index 2e6cf143..866f7df9 100644
 --- a/sshd.c
 +++ b/sshd.c
-@@ -2043,7 +2043,9 @@ main(int ac, char **av)
+@@ -2175,7 +2175,9 @@ main(int ac, char **av)
  	}
  
  #ifdef SSH_AUDIT_EVENTS
@@ -722,8 +722,8 @@ index e39b3024..eee363ab 100644
  #endif
  
  #ifdef GSSAPI
-@@ -2073,6 +2075,10 @@ main(int ac, char **av)
- 		do_pam_session();
+@@ -2205,6 +2207,10 @@ main(int ac, char **av)
+ 		do_pam_session(ssh);
  	}
  #endif
 +#ifdef	USE_SOLARIS_AUDIT
@@ -734,5 +734,5 @@ index e39b3024..eee363ab 100644
  	/*
  	 * In privilege separation, we fork another child and prepare
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0014-GSS-API-key-exchange-support.patch b/openssh/Patches/0014-GSS-API-key-exchange-support.patch
index 35ceb19..d30c84c 100644
--- a/openssh/Patches/0014-GSS-API-key-exchange-support.patch
+++ b/openssh/Patches/0014-GSS-API-key-exchange-support.patch
@@ -1,44 +1,44 @@
-From 278ee810256afaeddb45f851ce71d5c6fdb70792 Mon Sep 17 00:00:00 2001
+From 5ad94de91adf64484b2538f8b23f1c2a462e76b1 Mon Sep 17 00:00:00 2001
 From: Simon Wilkinson <simon@sxw.org.uk>
 Date: Fri, 27 Jan 2017 16:46:31 -0800
 Subject: [PATCH 14/34] GSS-API key exchange support
 
 ---
- ChangeLog.gssapi | 113 +++++++++++++++++++
+ ChangeLog.gssapi | 113 ++++++++++++++++
  Makefile.in      |   3 +-
  auth-krb5.c      |  17 ++-
- auth.c           |  96 +---------------
- auth2-gss.c      |  48 +++++++-
+ auth.c           |  96 +-------------
+ auth2-gss.c      |  55 +++++++-
  auth2.c          |   2 +
- canohost.c       |  93 +++++++++++++++
+ canohost.c       |  93 +++++++++++++
  canohost.h       |   3 +
  clientloop.c     |  15 ++-
  configure.ac     |  24 ++++
- gss-genr.c       | 275 +++++++++++++++++++++++++++++++++++++++++++-
- gss-serv-krb5.c  |  87 ++++++++++++--
- gss-serv.c       | 224 +++++++++++++++++++++++++++++++++---
- kex.c            |  19 ++++
- kex.h            |  14 +++
- kexgssc.c        | 339 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
- kexgsss.c        | 296 ++++++++++++++++++++++++++++++++++++++++++++++++
- monitor.c        | 115 +++++++++++++++++--
+ gss-genr.c       | 286 ++++++++++++++++++++++++++++++++++++++-
+ gss-serv-krb5.c  |  87 +++++++++++-
+ gss-serv.c       | 254 +++++++++++++++++++++++++++++++----
+ kex.c            |  19 +++
+ kex.h            |  14 ++
+ kexgssc.c        | 339 +++++++++++++++++++++++++++++++++++++++++++++++
+ kexgsss.c        | 296 +++++++++++++++++++++++++++++++++++++++++
+ monitor.c        | 124 +++++++++++++++--
  monitor.h        |   2 +
- monitor_wrap.c   |  47 +++++++-
+ monitor_wrap.c   |  72 +++++++++-
  monitor_wrap.h   |   4 +-
- readconf.c       |  42 +++++++
+ readconf.c       |  56 +++++++-
  readconf.h       |   5 +
- servconf.c       |  28 ++++-
+ servconf.c       |  26 ++++
  servconf.h       |   2 +
- ssh-gss.h        |  41 ++++++-
+ ssh-gss.h        |  45 ++++++-
  ssh_config       |   2 +
- ssh_config.4     |  32 ++++++
- sshconnect2.c    | 131 ++++++++++++++++++++-
- sshd.c           | 112 +++++++++++++++++-
+ ssh_config.4     |  32 +++++
+ sshconnect2.c    | 138 ++++++++++++++++++-
+ sshd.c           | 115 +++++++++++++++-
  sshd_config      |   2 +
  sshd_config.4    |  10 ++
- sshkey.c         |   3 +-
- sshkey.h         |   1 +
- 34 files changed, 2099 insertions(+), 148 deletions(-)
+ sshkey.c         |   5 +
+ sshkey.h         |   3 +
+ 34 files changed, 2188 insertions(+), 171 deletions(-)
  create mode 100644 ChangeLog.gssapi
  create mode 100644 kexgssc.c
  create mode 100644 kexgsss.c
@@ -163,19 +163,19 @@ index 00000000..f117a336
 +    (from jbasney AT ncsa.uiuc.edu)
 +    <gssapi-with-mic support is Bugzilla #1008>
 diff --git a/Makefile.in b/Makefile.in
-index 48d773de..47dbceff 100644
+index 7dbc9680..a73ef0f1 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -94,6 +94,7 @@ LIBSSH_OBJS=${LIBOPENSSH_OBJS} \
+@@ -102,6 +102,7 @@ LIBSSH_OBJS=${LIBOPENSSH_OBJS} \
  	kex.o kexdh.o kexgex.o kexecdh.o kexc25519.o \
  	kexdhc.o kexgexc.o kexecdhc.o kexc25519c.o \
  	kexdhs.o kexgexs.o kexecdhs.o kexc25519s.o \
 +	kexgssc.o \
- 	platform-pledge.o platform-tracing.o
+ 	platform-pledge.o platform-tracing.o platform-misc.o
  
  SSHOBJS= ssh.o readconf.o clientloop.o sshtty.o \
-@@ -107,7 +108,7 @@ SSHDOBJS=sshd.o auth-rhosts.o auth-passwd.o \
- 	auth-skey.o auth-bsdauth.o auth2-hostbased.o auth2-kbdint.o \
+@@ -115,7 +116,7 @@ SSHDOBJS=sshd.o auth-rhosts.o auth-passwd.o \
+ 	auth-bsdauth.o auth2-hostbased.o auth2-kbdint.o \
  	auth2-none.o auth2-passwd.o auth2-pubkey.o \
  	monitor.o monitor_wrap.o auth-krb5.o \
 -	auth2-gss.o gss-serv.o gss-serv-krb5.o \
@@ -184,7 +184,7 @@ index 48d773de..47dbceff 100644
  	sftp-server.o sftp-common.o \
  	sandbox-null.o sandbox-rlimit.o sandbox-systrace.o sandbox-darwin.o \
 diff --git a/auth-krb5.c b/auth-krb5.c
-index a5a81ed2..38e7fee2 100644
+index 3096f1c8..204752e1 100644
 --- a/auth-krb5.c
 +++ b/auth-krb5.c
 @@ -182,8 +182,13 @@ auth_krb5_password(Authctxt *authctxt, const char *password)
@@ -235,10 +235,10 @@ index a5a81ed2..38e7fee2 100644
  	return (krb5_cc_resolve(ctx, ccname, ccache));
  }
 diff --git a/auth.c b/auth.c
-index 6ee6116d..c6390687 100644
+index 3ca3762c..d8e6b4a3 100644
 --- a/auth.c
 +++ b/auth.c
-@@ -372,7 +372,8 @@ auth_root_allowed(const char *method)
+@@ -399,7 +399,8 @@ auth_root_allowed(struct ssh *ssh, const char *method)
  	case PERMIT_NO_PASSWD:
  		if (strcmp(method, "publickey") == 0 ||
  		    strcmp(method, "hostbased") == 0 ||
@@ -248,10 +248,11 @@ index 6ee6116d..c6390687 100644
  			return 1;
  		break;
  	case PERMIT_FORCED_ONLY:
-@@ -795,99 +796,6 @@ fakepw(void)
+@@ -737,99 +738,6 @@ fakepw(void)
+ 	return (&fake);
  }
  
- /*
+-/*
 - * Returns the remote DNS hostname as a string. The returned string must not
 - * be freed. NB. this will usually trigger a DNS query the first time it is
 - * called.
@@ -344,16 +345,15 @@ index 6ee6116d..c6390687 100644
 -	return strdup(name);
 -}
 -
--/*
+ /*
   * Return the canonical name of the host in the other side of the current
   * connection.  The host name is cached, so it is efficient to call this
-  * several times.
 diff --git a/auth2-gss.c b/auth2-gss.c
-index 1ca83577..3b5036df 100644
+index 9351e042..22afd6cd 100644
 --- a/auth2-gss.c
 +++ b/auth2-gss.c
 @@ -1,7 +1,7 @@
- /* $OpenBSD: auth2-gss.c,v 1.22 2015/01/19 20:07:45 markus Exp $ */
+ /* $OpenBSD: auth2-gss.c,v 1.29 2018/07/31 03:10:27 djm Exp $ */
  
  /*
 - * Copyright (c) 2001-2003 Simon Wilkinson. All rights reserved.
@@ -361,31 +361,38 @@ index 1ca83577..3b5036df 100644
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
-@@ -53,6 +53,40 @@ static int input_gssapi_mic(int type, u_int32_t plen, void *ctxt);
- static int input_gssapi_exchange_complete(int type, u_int32_t plen, void *ctxt);
- static int input_gssapi_errtok(int, u_int32_t, void *);
+@@ -54,6 +54,47 @@ static int input_gssapi_mic(int type, u_int32_t plen, struct ssh *ssh);
+ static int input_gssapi_exchange_complete(int type, u_int32_t plen, struct ssh *ssh);
+ static int input_gssapi_errtok(int, u_int32_t, struct ssh *);
  
-+/* 
++/*
 + * The 'gssapi_keyex' userauth mechanism.
 + */
 +static int
-+userauth_gsskeyex(Authctxt *authctxt)
++userauth_gsskeyex(struct ssh *ssh)
 +{
++	Authctxt *authctxt = ssh->authctxt;
 +	int authenticated = 0;
-+	Buffer b;
++	struct sshbuf *b;
 +	gss_buffer_desc mic, gssbuf;
 +	u_int len;
 +
++	b = sshbuf_new();
++	if (b == NULL)
++		fatal("%s: buffer allocation failure", __func__);
++
 +	mic.value = packet_get_string(&len);
 +	mic.length = len;
 +
 +	packet_check_eom();
 +
-+	ssh_gssapi_buildmic(&b, authctxt->user, authctxt->service,
++	ssh_gssapi_buildmic(b, authctxt->user, authctxt->service,
 +	    "gssapi-keyex");
 +
-+	gssbuf.value = buffer_ptr(&b);
-+	gssbuf.length = buffer_len(&b);
++	gssbuf.value = sshbuf_mutable_ptr(b);
++	gssbuf.length = sshbuf_len(b);
++	if (gssbuf.value == NULL || gssbuf.length == 0)
++		fatal("%s: ssh_gssapi_buildmic left buffer empty", __func__);
 +
 +	/* gss_kex_context is NULL with privsep, so we can't check it here */
 +	if (!GSS_ERROR(PRIVSEP(ssh_gssapi_checkmic(gss_kex_context, 
@@ -393,7 +400,7 @@ index 1ca83577..3b5036df 100644
 +		authenticated = PRIVSEP(ssh_gssapi_userok(authctxt->user,
 +		    authctxt->pw));
 +	
-+	buffer_free(&b);
++	sshbuf_free(b);
 +	free(mic.value);
 +
 +	return (authenticated);
@@ -402,18 +409,18 @@ index 1ca83577..3b5036df 100644
  /*
   * We only support those mechanisms that we know about (ie ones that we know
   * how to check local user kuserok and the like)
-@@ -238,7 +272,8 @@ input_gssapi_exchange_complete(int type, u_int32_t plen, void *ctxt)
- 
- 	packet_check_eom();
+@@ -260,7 +301,8 @@ input_gssapi_exchange_complete(int type, u_int32_t plen, struct ssh *ssh)
+ 	if ((r = sshpkt_get_end(ssh)) != 0)
+ 		fatal("%s: %s", __func__, ssh_err(r));
  
 -	authenticated = PRIVSEP(ssh_gssapi_userok(authctxt->user));
 +	authenticated = PRIVSEP(ssh_gssapi_userok(authctxt->user,
 +	    authctxt->pw));
  
- 	authctxt->postponed = 0;
- 	dispatch_set(SSH2_MSG_USERAUTH_GSSAPI_TOKEN, NULL);
-@@ -274,7 +309,8 @@ input_gssapi_mic(int type, u_int32_t plen, void *ctxt)
- 	gssbuf.length = buffer_len(&b);
+ 	if ((!use_privsep || mm_is_monitor()) &&
+ 	    (displayname = ssh_gssapi_displayname()) != NULL)
+@@ -306,7 +348,8 @@ input_gssapi_mic(int type, u_int32_t plen, struct ssh *ssh)
+ 	gssbuf.length = sshbuf_len(b);
  
  	if (!GSS_ERROR(PRIVSEP(ssh_gssapi_checkmic(gssctxt, &gssbuf, &mic))))
 -		authenticated = PRIVSEP(ssh_gssapi_userok(authctxt->user));
@@ -422,7 +429,7 @@ index 1ca83577..3b5036df 100644
  	else
  		logit("GSSAPI MIC check failed");
  
-@@ -290,6 +326,12 @@ input_gssapi_mic(int type, u_int32_t plen, void *ctxt)
+@@ -326,6 +369,12 @@ input_gssapi_mic(int type, u_int32_t plen, struct ssh *ssh)
  	return 0;
  }
  
@@ -436,10 +443,10 @@ index 1ca83577..3b5036df 100644
  	"gssapi-with-mic",
  	userauth_gssapi,
 diff --git a/auth2.c b/auth2.c
-index 4623ae02..6a9f936b 100644
+index 31f6ffbf..15ba3da2 100644
 --- a/auth2.c
 +++ b/auth2.c
-@@ -70,6 +70,7 @@ extern Authmethod method_passwd;
+@@ -74,6 +74,7 @@ extern Authmethod method_passwd;
  extern Authmethod method_kbdint;
  extern Authmethod method_hostbased;
  #ifdef GSSAPI
@@ -447,7 +454,7 @@ index 4623ae02..6a9f936b 100644
  extern Authmethod method_gssapi;
  #endif
  
-@@ -77,6 +78,7 @@ Authmethod *authmethods[] = {
+@@ -81,6 +82,7 @@ Authmethod *authmethods[] = {
  	&method_none,
  	&method_pubkey,
  #ifdef GSSAPI
@@ -574,10 +581,10 @@ index 26d62855..0cadc9f1 100644
  int		 get_peer_port(int);
  char		*get_local_ipaddr(int);
 diff --git a/clientloop.c b/clientloop.c
-index 4289a408..99c68b69 100644
+index 8d312cda..1464634b 100644
 --- a/clientloop.c
 +++ b/clientloop.c
-@@ -113,6 +113,10 @@
+@@ -112,6 +112,10 @@
  #include "ssherr.h"
  #include "hostfile.h"
  
@@ -588,13 +595,13 @@ index 4289a408..99c68b69 100644
  /* import options */
  extern Options options;
  
-@@ -1664,9 +1668,18 @@ client_loop(int have_pty, int escape_char_arg, int ssh2_chan_id)
+@@ -1370,9 +1374,18 @@ client_loop(struct ssh *ssh, int have_pty, int escape_char_arg,
  			break;
  
  		/* Do channel operations unless rekeying in progress. */
--		if (!ssh_packet_is_rekeying(active_state))
-+		if (!ssh_packet_is_rekeying(active_state)) {
- 			channel_after_select(readset, writeset);
+-		if (!ssh_packet_is_rekeying(ssh))
++		if (!ssh_packet_is_rekeying(ssh)) {
+ 			channel_after_select(ssh, readset, writeset);
  
 +#ifdef GSSAPI
 +			if (options.gss_renewal_rekey &&
@@ -609,10 +616,10 @@ index 4289a408..99c68b69 100644
  		client_process_net_input(readset);
  
 diff --git a/configure.ac b/configure.ac
-index 7a36eee9..1635897c 100644
+index 50bee3cf..59fdf6ce 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -623,6 +623,30 @@ main() { if (NSVersionOfRunTimeLibrary("System") >= (60 << 16))
+@@ -664,6 +664,30 @@ main() { if (NSVersionOfRunTimeLibrary("System") >= (60 << 16))
  	    [Use tunnel device compatibility to OpenBSD])
  	AC_DEFINE([SSH_TUN_PREPEND_AF], [1],
  	    [Prepend the address family to IP tunnel traffic])
@@ -644,11 +651,11 @@ index 7a36eee9..1635897c 100644
  	AC_CHECK_DECL([AU_IPv4], [],
  	    AC_DEFINE([AU_IPv4], [0], [System only supports IPv4 audit records])
 diff --git a/gss-genr.c b/gss-genr.c
-index 62559ed9..0b3ae073 100644
+index d56257b4..2a10ca25 100644
 --- a/gss-genr.c
 +++ b/gss-genr.c
 @@ -1,7 +1,7 @@
- /* $OpenBSD: gss-genr.c,v 1.24 2016/09/12 01:22:38 deraadt Exp $ */
+ /* $OpenBSD: gss-genr.c,v 1.26 2018/07/10 09:13:30 djm Exp $ */
  
  /*
 - * Copyright (c) 2001-2007 Simon Wilkinson. All rights reserved.
@@ -656,12 +663,12 @@ index 62559ed9..0b3ae073 100644
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
-@@ -40,12 +40,167 @@
- #include "buffer.h"
+@@ -41,12 +41,30 @@
+ #include "sshbuf.h"
  #include "log.h"
  #include "ssh2.h"
 +#include "cipher.h"
-+#include "key.h"
++#include "sshkey.h"
 +#include "kex.h"
 +#include <openssl/evp.h>
  
@@ -684,6 +691,13 @@ index 62559ed9..0b3ae073 100644
 +
 +static ssh_gss_kex_mapping *gss_enc2oid = NULL;
 +
+ /* sshbuf_get for gss_buffer_desc */
+ int
+ ssh_gssapi_get_buffer_desc(struct sshbuf *b, gss_buffer_desc *g)
+@@ -62,6 +80,154 @@ ssh_gssapi_get_buffer_desc(struct sshbuf *b, gss_buffer_desc *g)
+ 	return 0;
+ }
+ 
 +int 
 +ssh_gssapi_oid_table_ok(void) {
 +	return (gss_enc2oid != NULL);
@@ -711,12 +725,13 @@ index 62559ed9..0b3ae073 100644
 +char *
 +ssh_gssapi_kex_mechs(gss_OID_set gss_supported, ssh_gssapi_check_fn *check,
 +    const char *host, const char *client) {
-+	Buffer buf;
++	struct sshbuf *buf;
 +	size_t i;
 +	int oidpos, enclen;
 +	char *mechs, *encoded;
 +	u_char digest[EVP_MAX_MD_SIZE];
 +	char deroid[2];
++	int rc;
 +	const EVP_MD *evp_md = EVP_md5();
 +	EVP_MD_CTX md;
 +
@@ -729,7 +744,9 @@ index 62559ed9..0b3ae073 100644
 +	gss_enc2oid = xmalloc(sizeof(ssh_gss_kex_mapping) *
 +	    (gss_supported->count + 1));
 +
-+	buffer_init(&buf);
++	buf = sshbuf_new();
++	if (buf == NULL)
++		fatal("%s: failed to allocate sshbuf", __func__);
 +
 +	oidpos = 0;
 +	for (i = 0; i < gss_supported->count; i++) {
@@ -750,20 +767,26 @@ index 62559ed9..0b3ae073 100644
 +			enclen = __b64_ntop(digest, EVP_MD_size(evp_md),
 +			    encoded, EVP_MD_size(evp_md) * 2);
 +
-+			if (oidpos != 0)
-+				buffer_put_char(&buf, ',');
-+
-+			buffer_append(&buf, KEX_GSS_GEX_SHA1_ID,
-+			    sizeof(KEX_GSS_GEX_SHA1_ID) - 1);
-+			buffer_append(&buf, encoded, enclen);
-+			buffer_put_char(&buf, ',');
-+			buffer_append(&buf, KEX_GSS_GRP1_SHA1_ID, 
-+			    sizeof(KEX_GSS_GRP1_SHA1_ID) - 1);
-+			buffer_append(&buf, encoded, enclen);
-+			buffer_put_char(&buf, ',');
-+			buffer_append(&buf, KEX_GSS_GRP14_SHA1_ID,
-+			    sizeof(KEX_GSS_GRP14_SHA1_ID) - 1);
-+			buffer_append(&buf, encoded, enclen);
++			if (oidpos != 0) {
++				if ((rc = sshbuf_put_u8(buf, ','))) {
++					fatal("%s: buffer error: %d", __func__,
++					    rc);
++				}
++			}
++
++			if ((rc = sshbuf_put(buf, KEX_GSS_GEX_SHA1_ID,
++			    sizeof(KEX_GSS_GEX_SHA1_ID) - 1)) ||
++			    (rc = sshbuf_put(buf, encoded, enclen)) ||
++			    (rc = sshbuf_put_u8(buf, ',')) ||
++			    (rc = sshbuf_put(buf, KEX_GSS_GRP1_SHA1_ID,
++			    sizeof(KEX_GSS_GRP1_SHA1_ID) - 1)) ||
++			    (rc = sshbuf_put(buf, encoded, enclen)) ||
++			    (rc = sshbuf_put_u8(buf, ',')) ||
++			    (rc = sshbuf_put(buf, KEX_GSS_GRP14_SHA1_ID,
++			    sizeof(KEX_GSS_GRP14_SHA1_ID) - 1)) ||
++			    (rc = sshbuf_put(buf, encoded, enclen))) {
++				fatal("%s: buffer error: %d", __func__, rc);
++			}
 +
 +			gss_enc2oid[oidpos].oid = &(gss_supported->elements[i]);
 +			gss_enc2oid[oidpos].encoded = encoded;
@@ -773,17 +796,19 @@ index 62559ed9..0b3ae073 100644
 +	gss_enc2oid[oidpos].oid = NULL;
 +	gss_enc2oid[oidpos].encoded = NULL;
 +
-+	buffer_put_char(&buf, '\0');
++	if ((rc = sshbuf_put_u8(buf, '\0')))
++		fatal("%s: buffer error: %d", __func__, rc);
 +
-+	mechs = xmalloc(buffer_len(&buf));
-+	buffer_get(&buf, mechs, buffer_len(&buf));
-+	buffer_free(&buf);
++	mechs = xmalloc(sshbuf_len(buf));
++	if ((rc = sshbuf_get(buf, mechs, sshbuf_len(buf))))
++		fatal("%s: buffer error: %d", __func__, rc);
++	sshbuf_free(buf);
 +
 +	if (strlen(mechs) == 0) {
 +		free(mechs);
 +		mechs = NULL;
 +	}
-+	
++
 +	return (mechs);
 +}
 +
@@ -824,7 +849,7 @@ index 62559ed9..0b3ae073 100644
  /* Check that the OID in a data stream matches that in the context */
  int
  ssh_gssapi_check_oid(Gssctxt *ctx, void *data, size_t len)
-@@ -198,7 +353,7 @@ ssh_gssapi_init_ctx(Gssctxt *ctx, int deleg_creds, gss_buffer_desc *recv_tok,
+@@ -218,7 +384,7 @@ ssh_gssapi_init_ctx(Gssctxt *ctx, int deleg_creds, gss_buffer_desc *recv_tok,
  	}
  
  	ctx->major = gss_init_sec_context(&ctx->minor,
@@ -833,10 +858,11 @@ index 62559ed9..0b3ae073 100644
  	    GSS_C_MUTUAL_FLAG | GSS_C_INTEG_FLAG | deleg_flag,
  	    0, NULL, recv_tok, NULL, send_tok, flags, NULL);
  
-@@ -228,8 +383,42 @@ ssh_gssapi_import_name(Gssctxt *ctx, const char *host)
+@@ -247,9 +413,43 @@ ssh_gssapi_import_name(Gssctxt *ctx, const char *host)
+ 	return (ctx->major);
  }
  
- OM_uint32
++OM_uint32
 +ssh_gssapi_client_identity(Gssctxt *ctx, const char *name)
 +{
 +	gss_buffer_desc gssbuf;
@@ -867,7 +893,7 @@ index 62559ed9..0b3ae073 100644
 +	return(ctx->major);
 +}
 +
-+OM_uint32
+ OM_uint32
  ssh_gssapi_sign(Gssctxt *ctx, gss_buffer_t buffer, gss_buffer_t hash)
  {
 +	if (ctx == NULL) 
@@ -876,7 +902,7 @@ index 62559ed9..0b3ae073 100644
  	if ((ctx->major = gss_get_mic(&ctx->minor, ctx->context,
  	    GSS_C_QOP_DEFAULT, buffer, hash)))
  		ssh_gssapi_error(ctx);
-@@ -237,6 +426,19 @@ ssh_gssapi_sign(Gssctxt *ctx, gss_buffer_t buffer, gss_buffer_t hash)
+@@ -257,6 +457,19 @@ ssh_gssapi_sign(Gssctxt *ctx, gss_buffer_t buffer, gss_buffer_t hash)
  	return (ctx->major);
  }
  
@@ -894,9 +920,9 @@ index 62559ed9..0b3ae073 100644
 +}
 +
  void
- ssh_gssapi_buildmic(Buffer *b, const char *user, const char *service,
+ ssh_gssapi_buildmic(struct sshbuf *b, const char *user, const char *service,
      const char *context)
-@@ -250,11 +452,16 @@ ssh_gssapi_buildmic(Buffer *b, const char *user, const char *service,
+@@ -273,11 +486,16 @@ ssh_gssapi_buildmic(struct sshbuf *b, const char *user, const char *service,
  }
  
  int
@@ -914,7 +940,7 @@ index 62559ed9..0b3ae073 100644
  
  	/* RFC 4462 says we MUST NOT do SPNEGO */
  	if (oid->length == spnego_oid.length && 
-@@ -264,6 +471,10 @@ ssh_gssapi_check_mechanism(Gssctxt **ctx, gss_OID oid, const char *host)
+@@ -287,6 +505,10 @@ ssh_gssapi_check_mechanism(Gssctxt **ctx, gss_OID oid, const char *host)
  	ssh_gssapi_build_ctx(ctx);
  	ssh_gssapi_set_oid(*ctx, oid);
  	major = ssh_gssapi_import_name(*ctx, host);
@@ -925,7 +951,7 @@ index 62559ed9..0b3ae073 100644
  	if (!GSS_ERROR(major)) {
  		major = ssh_gssapi_init_ctx(*ctx, 0, GSS_C_NO_BUFFER, &token, 
  		    NULL);
-@@ -273,10 +484,66 @@ ssh_gssapi_check_mechanism(Gssctxt **ctx, gss_OID oid, const char *host)
+@@ -296,10 +518,66 @@ ssh_gssapi_check_mechanism(Gssctxt **ctx, gss_OID oid, const char *host)
  			    GSS_C_NO_BUFFER);
  	}
  
@@ -994,11 +1020,11 @@ index 62559ed9..0b3ae073 100644
 +
  #endif /* GSSAPI */
 diff --git a/gss-serv-krb5.c b/gss-serv-krb5.c
-index 6e6cff7b..fcfb86a8 100644
+index 6a6af04e..d9150b9a 100644
 --- a/gss-serv-krb5.c
 +++ b/gss-serv-krb5.c
 @@ -1,7 +1,7 @@
- /* $OpenBSD: gss-serv-krb5.c,v 1.8 2013/07/20 01:55:13 djm Exp $ */
+ /* $OpenBSD: gss-serv-krb5.c,v 1.9 2018/07/09 21:37:55 markus Exp $ */
  
  /*
 - * Copyright (c) 2001-2003 Simon Wilkinson. All rights reserved.
@@ -1006,7 +1032,7 @@ index 6e6cff7b..fcfb86a8 100644
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
-@@ -121,8 +121,8 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
+@@ -120,8 +120,8 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
  	krb5_error_code problem;
  	krb5_principal princ;
  	OM_uint32 maj_status, min_status;
@@ -1016,7 +1042,7 @@ index 6e6cff7b..fcfb86a8 100644
  
  	if (client->creds == NULL) {
  		debug("No credentials stored");
-@@ -181,11 +181,16 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
+@@ -180,11 +180,16 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
  		return;
  	}
  
@@ -1037,7 +1063,7 @@ index 6e6cff7b..fcfb86a8 100644
  
  #ifdef USE_PAM
  	if (options.use_pam)
-@@ -196,6 +201,72 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
+@@ -195,6 +200,72 @@ ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)
  
  	return;
  }
@@ -1110,7 +1136,7 @@ index 6e6cff7b..fcfb86a8 100644
  #endif /* #ifndef USE_GSS_STORE_CRED */
  
  ssh_gssapi_mech gssapi_kerberos_mech = {
-@@ -206,9 +277,11 @@ ssh_gssapi_mech gssapi_kerberos_mech = {
+@@ -205,9 +276,11 @@ ssh_gssapi_mech gssapi_kerberos_mech = {
  	&ssh_gssapi_krb5_userok,
  	NULL,
  #ifdef USE_GSS_STORE_CRED
@@ -1124,11 +1150,11 @@ index 6e6cff7b..fcfb86a8 100644
  };
  
 diff --git a/gss-serv.c b/gss-serv.c
-index 209ffe82..3f9dfe5c 100644
+index 145258e2..3ea7a323 100644
 --- a/gss-serv.c
 +++ b/gss-serv.c
 @@ -1,7 +1,7 @@
- /* $OpenBSD: gss-serv.c,v 1.29 2015/05/22 03:50:02 djm Exp $ */
+ /* $OpenBSD: gss-serv.c,v 1.31 2018/07/09 21:37:55 markus Exp $ */
  
  /*
 - * Copyright (c) 2001-2003 Simon Wilkinson. All rights reserved.
@@ -1136,7 +1162,15 @@ index 209ffe82..3f9dfe5c 100644
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
-@@ -45,17 +45,22 @@
+@@ -37,6 +37,7 @@
+ #include "openbsd-compat/sys-queue.h"
+ #include "xmalloc.h"
+ #include "sshkey.h"
++#include "sshbuf.h"
+ #include "hostfile.h"
+ #include "auth.h"
+ #include "log.h"
+@@ -44,17 +45,22 @@
  #include "session.h"
  #include "misc.h"
  #include "servconf.h"
@@ -1161,10 +1195,11 @@ index 209ffe82..3f9dfe5c 100644
  
  #ifdef KRB5
  extern ssh_gssapi_mech gssapi_kerberos_mech;
-@@ -142,6 +147,28 @@ ssh_gssapi_server_ctx(Gssctxt **ctx, gss_OID oid)
+@@ -140,6 +146,28 @@ ssh_gssapi_server_ctx(Gssctxt **ctx, gss_OID oid)
+ 	return (ssh_gssapi_acquire_cred(*ctx));
  }
  
- /* Unprivileged */
++/* Unprivileged */
 +char *
 +ssh_gssapi_server_mechanisms(void) {
 +	if (supported_oids == NULL)
@@ -1186,11 +1221,10 @@ index 209ffe82..3f9dfe5c 100644
 +	return (res);
 +}
 +
-+/* Unprivileged */
+ /* Unprivileged */
  void
  ssh_gssapi_supported_oids(gss_OID_set *oidset)
- {
-@@ -151,7 +178,9 @@ ssh_gssapi_supported_oids(gss_OID_set *oidset)
+@@ -150,7 +178,9 @@ ssh_gssapi_supported_oids(gss_OID_set *oidset)
  	gss_OID_set supported;
  
  	gss_create_empty_oid_set(&min_status, oidset);
@@ -1201,7 +1235,7 @@ index 209ffe82..3f9dfe5c 100644
  
  	while (supported_mechs[i]->name != NULL) {
  		if (GSS_ERROR(gss_test_oid_set_member(&min_status,
-@@ -277,8 +306,48 @@ OM_uint32
+@@ -276,8 +306,48 @@ OM_uint32
  ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)
  {
  	int i = 0;
@@ -1216,8 +1250,7 @@ index 209ffe82..3f9dfe5c 100644
 +			debug("Rekeyed credentials have different mechanism");
 +			return GSS_S_COMPLETE;
 +		}
- 
--	gss_buffer_desc ename;
++
 +		if ((ctx->major = gss_inquire_cred_by_mech(&ctx->minor, 
 +		    ctx->client_creds, ctx->oid, &new_name, 
 +		    NULL, NULL, NULL))) {
@@ -1237,7 +1270,8 @@ index 209ffe82..3f9dfe5c 100644
 +			debug("Rekeyed credentials have different name");
 +			return GSS_S_COMPLETE;
 +		}
-+
+ 
+-	gss_buffer_desc ename;
 +		debug("Marking rekeyed credentials for export");
 +
 +		gss_release_name(&ctx->minor, &client->name);
@@ -1251,7 +1285,7 @@ index 209ffe82..3f9dfe5c 100644
  
  	client->mech = NULL;
  
-@@ -293,6 +362,13 @@ ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)
+@@ -292,6 +362,13 @@ ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)
  	if (client->mech == NULL)
  		return GSS_S_FAILURE;
  
@@ -1265,7 +1299,7 @@ index 209ffe82..3f9dfe5c 100644
  	if ((ctx->major = gss_display_name(&ctx->minor, ctx->client,
  	    &client->displayname, NULL))) {
  		ssh_gssapi_error(ctx);
-@@ -310,6 +386,8 @@ ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)
+@@ -309,6 +386,8 @@ ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)
  		return (ctx->major);
  	}
  
@@ -1274,7 +1308,54 @@ index 209ffe82..3f9dfe5c 100644
  	/* We can't copy this structure, so we just move the pointer to it */
  	client->creds = ctx->client_creds;
  	ctx->client_creds = GSS_C_NO_CREDENTIAL;
-@@ -401,7 +479,7 @@ ssh_gssapi_do_child(char ***envp, u_int *envsizep)
+@@ -347,31 +426,37 @@ ssh_gssapi_storecreds(void)
+ 	    GSS_C_INITIATE, &gssapi_client.mech->oid, 1, 1, NULL, NULL);
+ 
+ 	if (GSS_ERROR(maj_status)) {
+-		Buffer b;
++		struct sshbuf *b;
++		int rc;
+ 		gss_buffer_desc msg;
+ 		OM_uint32 lmin;
+ 		OM_uint32 more = 0;
+-		buffer_init(&b);
++		b = sshbuf_new();
++		if (b == NULL)
++			fatal("%s: failed to allocate buffer", __func__);
+ 		/* GSS-API error */
+ 		do {
+ 			gss_display_status(&lmin, maj_status, GSS_C_GSS_CODE,
+ 			    GSS_C_NULL_OID, &more, &msg);
+-			buffer_append(&b, msg.value, msg.length);
+-			buffer_put_char(&b, '\n');
++			if ((rc = sshbuf_put(b, msg.value, msg.length)) ||
++			    (rc = sshbuf_put_u8(b, '\n')))
++				fatal("%s: buffer error: %d", __func__, rc);
+ 			gss_release_buffer(&lmin, &msg);
+ 		} while (more != 0);
+ 		/* Mechanism specific error */
+ 		do {
+ 			gss_display_status(&lmin, min_status, GSS_C_MECH_CODE,
+ 			    &gssapi_client.mech->oid, &more, &msg);
+-			buffer_append(&b, msg.value, msg.length);
+-			buffer_put_char(&b, '\n');
++			if ((rc = sshbuf_put(b, msg.value, msg.length)) ||
++			    (rc = sshbuf_put_u8(b, '\n')))
++				fatal("%s: buffer error: %d", __func__, rc);
+ 			gss_release_buffer(&lmin, &msg);
+ 		} while (more != 0);
+-		buffer_put_char(&b, '\0');
++		if ((rc = sshbuf_put_u8(b, '\0')))
++			fatal("%s: buffer error: %d", __func__, rc);
+ 		error("GSS-API error while storing delegated credentials: %s",
+-		    buffer_ptr(&b));
+-		buffer_free(&b);
++		    sshbuf_ptr(b));
++		sshbuf_free(b);
+ 	}
+ #else	/* #ifdef USE_GSS_STORE_CRED */
+ 	if (gssapi_client.mech && gssapi_client.mech->storecreds) {
+@@ -400,7 +485,7 @@ ssh_gssapi_do_child(char ***envp, u_int *envsizep)
  
  /* Privileged */
  int
@@ -1283,7 +1364,7 @@ index 209ffe82..3f9dfe5c 100644
  {
  	OM_uint32 lmin;
  
-@@ -411,9 +489,11 @@ ssh_gssapi_userok(char *user)
+@@ -410,9 +495,11 @@ ssh_gssapi_userok(char *user)
  		return 0;
  	}
  	if (gssapi_client.mech && gssapi_client.mech->userok)
@@ -1297,7 +1378,7 @@ index 209ffe82..3f9dfe5c 100644
  			/* Destroy delegated credentials if userok fails */
  			gss_release_buffer(&lmin, &gssapi_client.displayname);
  			gss_release_buffer(&lmin, &gssapi_client.exportedname);
-@@ -427,14 +507,130 @@ ssh_gssapi_userok(char *user)
+@@ -426,14 +513,135 @@ ssh_gssapi_userok(char *user)
  	return (0);
  }
  
@@ -1387,38 +1468,44 @@ index 209ffe82..3f9dfe5c 100644
 +#ifdef USE_GSS_STORE_CRED
 +	if (gssapi_client.creds == NULL) {
 +		debug("No credentials stored");
-+		return;
++		return 0;
 +	}
 +
 +	maj_status = gss_store_cred(&min_status, gssapi_client.creds,
 +	    GSS_C_INITIATE, &gssapi_client.mech->oid, 1, 1, NULL, NULL);
 +
 +	if (GSS_ERROR(maj_status)) {
-+		Buffer b;
++		struct sshbuf *b;
++		int rc;
 +		gss_buffer_desc msg;
 +		OM_uint32 lmin;
 +		OM_uint32 more = 0;
-+		buffer_init(&b);
++		b = sshbuf_new();
++		if (b == NULL)
++			fatal("%s: failed to allocate buffer", __func__);
 +		/* GSS-API error */
 +		do {
 +			gss_display_status(&lmin, maj_status, GSS_C_GSS_CODE,
 +			    GSS_C_NULL_OID, &more, &msg);
-+			buffer_append(&b, msg.value, msg.length);
-+			buffer_put_char(&b, '\n');
++			if ((rc = sshbuf_put(b, msg.value, msg.length)) ||
++			    (rc = sshbuf_put_u8(b, '\n')))
++				fatal("%s: buffer error: %d", __func__, rc);
 +			gss_release_buffer(&lmin, &msg);
 +		} while (more != 0);
 +		/* Mechanism specific error */
 +		do {
 +			gss_display_status(&lmin, min_status, GSS_C_MECH_CODE,
 +			    &gssapi_client.mech->oid, &more, &msg);
-+			buffer_append(&b, msg.value, msg.length);
-+			buffer_put_char(&b, '\n');
++			if ((rc = sshbuf_put(b, msg.value, msg.length)) ||
++			    (rc = sshbuf_put_u8(b, '\n')))
++				fatal("%s: buffer error: %d", __func__, rc);
 +			gss_release_buffer(&lmin, &msg);
 +		} while (more != 0);
-+		buffer_put_char(&b, '\0');
++		if ((rc = sshbuf_put_u8(b, '\0')))
++			fatal("%s: buffer error: %d", __func__, rc);
 +		error("GSS-API error while storing delegated credentials: %s",
-+		    buffer_ptr(&b));
-+		buffer_free(&b);
++		    sshbuf_ptr(b));
++		sshbuf_free(b);
 +	}
 +#else	/* #ifdef USE_GSS_STORE_CRED */
 +	temporarily_use_uid(gssapi_client.store.owner);
@@ -1428,14 +1515,13 @@ index 209ffe82..3f9dfe5c 100644
 +		debug("No update function for this mechanism");
 +
 +	restore_uid();
-+
-+	return ok;
 +#endif	/* #ifdef USE_GSS_STORE_CRED */
++	return ok;
  }
  
- #endif
+ /* Privileged */
 diff --git a/kex.c b/kex.c
-index 6a94bc53..d8708684 100644
+index 25f9f66f..fb5bfaea 100644
 --- a/kex.c
 +++ b/kex.c
 @@ -54,6 +54,10 @@
@@ -1446,10 +1532,10 @@ index 6a94bc53..d8708684 100644
 +#include "ssh-gss.h"
 +#endif
 +
- #if OPENSSL_VERSION_NUMBER >= 0x00907000L
- # if defined(HAVE_EVP_SHA256)
- # define evp_ssh_sha256 EVP_sha256
-@@ -113,6 +117,14 @@ static const struct kexalg kexalgs[] = {
+ /* prototype */
+ static int kex_choose_conf(struct ssh *);
+ static int kex_input_newkeys(int, u_int32_t, struct ssh *);
+@@ -105,6 +109,14 @@ static const struct kexalg kexalgs[] = {
  #endif /* HAVE_EVP_SHA256 || !WITH_OPENSSL */
  	{ NULL, -1, -1, -1},
  };
@@ -1464,7 +1550,7 @@ index 6a94bc53..d8708684 100644
  
  char *
  kex_alg_list(char sep)
-@@ -145,6 +157,10 @@ kex_alg_by_name(const char *name)
+@@ -137,6 +149,10 @@ kex_alg_by_name(const char *name)
  		if (strcmp(k->name, name) == 0)
  			return k;
  	}
@@ -1475,7 +1561,7 @@ index 6a94bc53..d8708684 100644
  	return NULL;
  }
  
-@@ -597,6 +613,9 @@ kex_free(struct kex *kex)
+@@ -653,6 +669,9 @@ kex_free(struct kex *kex)
  	sshbuf_free(kex->peer);
  	sshbuf_free(kex->my);
  	free(kex->session_id);
@@ -1486,10 +1572,10 @@ index 6a94bc53..d8708684 100644
  	free(kex->server_version_string);
  	free(kex->failed_choice);
 diff --git a/kex.h b/kex.h
-index 3794f212..fd56171d 100644
+index 593de120..4e5ead83 100644
 --- a/kex.h
 +++ b/kex.h
-@@ -99,6 +99,9 @@ enum kex_exchange {
+@@ -100,6 +100,9 @@ enum kex_exchange {
  	KEX_DH_GEX_SHA256,
  	KEX_ECDH_SHA2,
  	KEX_C25519_SHA256,
@@ -1499,7 +1585,7 @@ index 3794f212..fd56171d 100644
  	KEX_MAX
  };
  
-@@ -147,6 +150,12 @@ struct kex {
+@@ -148,6 +151,12 @@ struct kex {
  	u_int	flags;
  	int	hash_alg;
  	int	ec_nid;
@@ -1512,7 +1598,7 @@ index 3794f212..fd56171d 100644
  	char	*client_version_string;
  	char	*server_version_string;
  	char	*failed_choice;
-@@ -197,6 +206,11 @@ int	 kexecdh_server(struct ssh *);
+@@ -198,6 +207,11 @@ int	 kexecdh_server(struct ssh *);
  int	 kexc25519_client(struct ssh *);
  int	 kexc25519_server(struct ssh *);
  
@@ -1526,7 +1612,7 @@ index 3794f212..fd56171d 100644
      const BIGNUM *, const BIGNUM *, const BIGNUM *, u_char *, size_t *);
 diff --git a/kexgssc.c b/kexgssc.c
 new file mode 100644
-index 00000000..a77d3712
+index 00000000..677f8f6e
 --- /dev/null
 +++ b/kexgssc.c
 @@ -0,0 +1,339 @@
@@ -1567,9 +1653,9 @@ index 00000000..a77d3712
 +#include <signal.h>
 +
 +#include "xmalloc.h"
-+#include "buffer.h"
++#include "sshbuf.h"
 +#include "ssh2.h"
-+#include "key.h"
++#include "sshkey.h"
 +#include "cipher.h"
 +#include "kex.h"
 +#include "log.h"
@@ -1806,8 +1892,8 @@ index 00000000..a77d3712
 +		    ssh->kex->hash_alg,
 +		    ssh->kex->client_version_string,
 +		    ssh->kex->server_version_string,
-+		    buffer_ptr(ssh->kex->my), buffer_len(ssh->kex->my),
-+		    buffer_ptr(ssh->kex->peer), buffer_len(ssh->kex->peer),
++		    sshbuf_ptr(ssh->kex->my), sshbuf_len(ssh->kex->my),
++		    sshbuf_ptr(ssh->kex->peer), sshbuf_len(ssh->kex->peer),
 +		    (serverhostkey ? serverhostkey : empty), slen,
 +		    dh->pub_key,	/* e */
 +		    dh_server_pub,	/* f */
@@ -1820,8 +1906,8 @@ index 00000000..a77d3712
 +		    ssh->kex->hash_alg,
 +		    ssh->kex->client_version_string,
 +		    ssh->kex->server_version_string,
-+		    buffer_ptr(ssh->kex->my), buffer_len(ssh->kex->my),
-+		    buffer_ptr(ssh->kex->peer), buffer_len(ssh->kex->peer),
++		    sshbuf_ptr(ssh->kex->my), sshbuf_len(ssh->kex->my),
++		    sshbuf_ptr(ssh->kex->peer), sshbuf_len(ssh->kex->peer),
 +		    (serverhostkey ? serverhostkey : empty), slen,
 + 		    min, nbits, max,
 +		    dh->p, dh->g,
@@ -1871,7 +1957,7 @@ index 00000000..a77d3712
 +#endif /* GSSAPI */
 diff --git a/kexgsss.c b/kexgsss.c
 new file mode 100644
-index 00000000..0e5ff55b
+index 00000000..f891f4fe
 --- /dev/null
 +++ b/kexgsss.c
 @@ -0,0 +1,296 @@
@@ -1910,9 +1996,9 @@ index 00000000..0e5ff55b
 +#include <openssl/bn.h>
 +
 +#include "xmalloc.h"
-+#include "buffer.h"
++#include "sshbuf.h"
 +#include "ssh2.h"
-+#include "key.h"
++#include "sshkey.h"
 +#include "cipher.h"
 +#include "kex.h"
 +#include "log.h"
@@ -2098,8 +2184,8 @@ index 00000000..0e5ff55b
 +		kex_dh_hash(
 +		    ssh->kex->hash_alg,
 +		    ssh->kex->client_version_string, ssh->kex->server_version_string,
-+		    buffer_ptr(ssh->kex->peer), buffer_len(ssh->kex->peer),
-+		    buffer_ptr(ssh->kex->my), buffer_len(ssh->kex->my),
++		    sshbuf_ptr(ssh->kex->peer), sshbuf_len(ssh->kex->peer),
++		    sshbuf_ptr(ssh->kex->my), sshbuf_len(ssh->kex->my),
 +		    NULL, 0, /* Change this if we start sending host keys */
 +		    dh_client_pub, dh->pub_key, shared_secret,
 +		    hash, &hashlen
@@ -2109,8 +2195,8 @@ index 00000000..0e5ff55b
 +		kexgex_hash(
 +		    ssh->kex->hash_alg,
 +		    ssh->kex->client_version_string, ssh->kex->server_version_string,
-+		    buffer_ptr(ssh->kex->peer), buffer_len(ssh->kex->peer),
-+		    buffer_ptr(ssh->kex->my), buffer_len(ssh->kex->my),
++		    sshbuf_ptr(ssh->kex->peer), sshbuf_len(ssh->kex->peer),
++		    sshbuf_ptr(ssh->kex->my), sshbuf_len(ssh->kex->my),
 +		    NULL, 0,
 +		    min, nbits, max,
 +		    dh->p, dh->g,
@@ -2172,19 +2258,19 @@ index 00000000..0e5ff55b
 +}
 +#endif /* GSSAPI */
 diff --git a/monitor.c b/monitor.c
-index 8f044f4e..b0c9b4f4 100644
+index 7b62e683..426a5736 100644
 --- a/monitor.c
 +++ b/monitor.c
-@@ -160,6 +160,8 @@ int mm_answer_gss_setup_ctx(int, Buffer *);
- int mm_answer_gss_accept_ctx(int, Buffer *);
- int mm_answer_gss_userok(int, Buffer *);
- int mm_answer_gss_checkmic(int, Buffer *);
-+int mm_answer_gss_sign(int, Buffer *);
-+int mm_answer_gss_updatecreds(int, Buffer *);
+@@ -148,6 +148,8 @@ int mm_answer_gss_setup_ctx(int, struct sshbuf *);
+ int mm_answer_gss_accept_ctx(int, struct sshbuf *);
+ int mm_answer_gss_userok(int, struct sshbuf *);
+ int mm_answer_gss_checkmic(int, struct sshbuf *);
++int mm_answer_gss_sign(int, struct sshbuf *);
++int mm_answer_gss_updatecreds(int, struct sshbuf *);
  #endif
  
  #ifdef SSH_AUDIT_EVENTS
-@@ -240,11 +242,18 @@ struct mon_table mon_dispatch_proto20[] = {
+@@ -225,11 +227,18 @@ struct mon_table mon_dispatch_proto20[] = {
      {MONITOR_REQ_GSSSTEP, 0, mm_answer_gss_accept_ctx},
      {MONITOR_REQ_GSSUSEROK, MON_ONCE|MON_AUTHDECIDE, mm_answer_gss_userok},
      {MONITOR_REQ_GSSCHECKMIC, MON_ONCE, mm_answer_gss_checkmic},
@@ -2203,7 +2289,7 @@ index 8f044f4e..b0c9b4f4 100644
  #ifdef WITH_OPENSSL
      {MONITOR_REQ_MODULI, 0, mm_answer_moduli},
  #endif
-@@ -311,6 +320,10 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
+@@ -299,6 +308,10 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
  	/* Permit requests for moduli and signatures */
  	monitor_permit(mon_dispatch, MONITOR_REQ_MODULI, 1);
  	monitor_permit(mon_dispatch, MONITOR_REQ_SIGN, 1);
@@ -2214,7 +2300,7 @@ index 8f044f4e..b0c9b4f4 100644
  
  	/* The first few requests do not require asynchronous access */
  	while (!authenticated) {
-@@ -442,6 +455,10 @@ monitor_child_postauth(struct monitor *pmonitor)
+@@ -444,6 +457,10 @@ monitor_child_postauth(struct monitor *pmonitor)
  	monitor_permit(mon_dispatch, MONITOR_REQ_MODULI, 1);
  	monitor_permit(mon_dispatch, MONITOR_REQ_SIGN, 1);
  	monitor_permit(mon_dispatch, MONITOR_REQ_TERM, 1);
@@ -2223,9 +2309,22 @@ index 8f044f4e..b0c9b4f4 100644
 +	monitor_permit(mon_dispatch, MONITOR_REQ_GSSSETUP, 1);
 +#endif		
  
- 	if (!no_pty_flag) {
+ 	if (auth_opts->permit_pty_flag) {
  		monitor_permit(mon_dispatch, MONITOR_REQ_PTY, 1);
-@@ -1666,6 +1683,13 @@ monitor_apply_keystate(struct monitor *pmonitor)
+@@ -898,9 +915,11 @@ mm_answer_authserv(int sock, struct sshbuf *m)
+ int
+ mm_answer_authmethod(int sock, struct sshbuf *m)
+ {
++	int rc;
+ 	monitor_permit_authentications(1);
+ 
+-	authctxt->authmethod_name = buffer_get_string(m, NULL);
++	if ((rc = sshbuf_get_cstring(m, &authctxt->authmethod_name, NULL)))
++		fatal("%s: sshbuf_get_cstring returned %d", __func__, rc);
+ 	debug3("%s: authmethod_name=%s", __func__, authctxt->authmethod_name);
+ 
+ 	if (strlen(authctxt->authmethod_name) == 0) {
+@@ -1732,6 +1751,13 @@ monitor_apply_keystate(struct monitor *pmonitor)
  # endif
  #endif /* WITH_OPENSSL */
  		kex->kex[KEX_C25519_SHA256] = kexc25519_server;
@@ -2239,29 +2338,29 @@ index 8f044f4e..b0c9b4f4 100644
  		kex->load_host_public_key=&get_hostkey_public_by_type;
  		kex->load_host_private_key=&get_hostkey_private_by_type;
  		kex->host_key_index=&get_hostkey_index;
-@@ -1745,8 +1769,8 @@ mm_answer_gss_setup_ctx(int sock, Buffer *m)
- 	OM_uint32 major;
- 	u_int len;
+@@ -1822,8 +1848,8 @@ mm_answer_gss_setup_ctx(int sock, struct sshbuf *m)
+ 	u_char *p;
+ 	int r;
  
 -	if (!options.gss_authentication)
 -		fatal("%s: GSSAPI authentication not enabled", __func__);
 +	if (!options.gss_authentication && !options.gss_keyex)
 +		fatal("%s: GSSAPI not enabled", __func__);
  
- 	goid.elements = buffer_get_string(m, &len);
- 	goid.length = len;
-@@ -1775,8 +1799,8 @@ mm_answer_gss_accept_ctx(int sock, Buffer *m)
+ 	if ((r = sshbuf_get_string(m, &p, &len)) != 0)
+ 		fatal("%s: buffer error: %s", __func__, ssh_err(r));
+@@ -1855,8 +1881,8 @@ mm_answer_gss_accept_ctx(int sock, struct sshbuf *m)
  	OM_uint32 flags = 0; /* GSI needs this */
- 	u_int len;
+ 	int r;
  
 -	if (!options.gss_authentication)
 -		fatal("%s: GSSAPI authentication not enabled", __func__);
 +	if (!options.gss_authentication && !options.gss_keyex)
 +		fatal("%s: GSSAPI not enabled", __func__);
  
- 	in.value = buffer_get_string(m, &len);
- 	in.length = len;
-@@ -1795,6 +1819,7 @@ mm_answer_gss_accept_ctx(int sock, Buffer *m)
+ 	if ((r = ssh_gssapi_get_buffer_desc(m, &in)) != 0)
+ 		fatal("%s: buffer error: %s", __func__, ssh_err(r));
+@@ -1876,6 +1902,7 @@ mm_answer_gss_accept_ctx(int sock, struct sshbuf *m)
  		monitor_permit(mon_dispatch, MONITOR_REQ_GSSSTEP, 0);
  		monitor_permit(mon_dispatch, MONITOR_REQ_GSSUSEROK, 1);
  		monitor_permit(mon_dispatch, MONITOR_REQ_GSSCHECKMIC, 1);
@@ -2269,20 +2368,20 @@ index 8f044f4e..b0c9b4f4 100644
  	}
  	return (0);
  }
-@@ -1806,8 +1831,8 @@ mm_answer_gss_checkmic(int sock, Buffer *m)
+@@ -1887,8 +1914,8 @@ mm_answer_gss_checkmic(int sock, struct sshbuf *m)
  	OM_uint32 ret;
- 	u_int len;
+ 	int r;
  
 -	if (!options.gss_authentication)
 -		fatal("%s: GSSAPI authentication not enabled", __func__);
 +	if (!options.gss_authentication && !options.gss_keyex)
 +		fatal("%s: GSSAPI not enabled", __func__);
  
- 	gssbuf.value = buffer_get_string(m, &len);
- 	gssbuf.length = len;
-@@ -1835,10 +1860,11 @@ mm_answer_gss_userok(int sock, Buffer *m)
- {
- 	int authenticated;
+ 	if ((r = ssh_gssapi_get_buffer_desc(m, &gssbuf)) != 0 ||
+ 	    (r = ssh_gssapi_get_buffer_desc(m, &mic)) != 0)
+@@ -1917,10 +1944,11 @@ mm_answer_gss_userok(int sock, struct sshbuf *m)
+ 	int r, authenticated;
+ 	const char *displayname;
  
 -	if (!options.gss_authentication)
 -		fatal("%s: GSSAPI authentication not enabled", __func__);
@@ -2293,25 +2392,27 @@ index 8f044f4e..b0c9b4f4 100644
 +	authenticated = authctxt->valid && 
 +	    ssh_gssapi_userok(authctxt->user, authctxt->pw);
  
- 	buffer_clear(m);
- 	buffer_put_int(m, authenticated);
-@@ -1851,5 +1877,76 @@ mm_answer_gss_userok(int sock, Buffer *m)
+ 	sshbuf_reset(m);
+ 	if ((r = sshbuf_put_u32(m, authenticated)) != 0)
+@@ -1937,5 +1965,81 @@ mm_answer_gss_userok(int sock, struct sshbuf *m)
  	/* Monitor loop will terminate if authenticated */
  	return (authenticated);
  }
 +
 +int 
-+mm_answer_gss_sign(int socket, Buffer *m)
++mm_answer_gss_sign(int socket, struct sshbuf *m)
 +{
 +	gss_buffer_desc data;
 +	gss_buffer_desc hash = GSS_C_EMPTY_BUFFER;
 +	OM_uint32 major, minor;
 +	u_int len;
++	int rc;
 +
 +	if (!options.gss_authentication && !options.gss_keyex)
 +		fatal("%s: GSSAPI not enabled", __func__);
 +
-+	data.value = buffer_get_string(m, &len);
++	if ((rc = sshbuf_get_string(m, &data.value, &len)))
++		fatal("%s: sshbuf_get_string returned %d", __func__, rc);
 +	data.length = len;
 +	if (data.length != 20) 
 +		fatal("%s: data length incorrect: %d", __func__, 
@@ -2327,9 +2428,10 @@ index 8f044f4e..b0c9b4f4 100644
 +
 +	free(data.value);
 +
-+	buffer_clear(m);
-+	buffer_put_int(m, major);
-+	buffer_put_string(m, hash.value, hash.length);
++	sshbuf_reset(m);
++	if ((rc = sshbuf_put_u32(m, major)) ||
++ 	    (rc = sshbuf_put_string(m, hash.value, hash.length)))
++		fatal("%s: sshbuf_put returned %d", __func__, rc);
 +
 +	mm_request_send(socket, MONITOR_ANS_GSSSIGN, m);
 +
@@ -2345,16 +2447,17 @@ index 8f044f4e..b0c9b4f4 100644
 +}
 +
 +int
-+mm_answer_gss_updatecreds(int socket, Buffer *m) {
++mm_answer_gss_updatecreds(int socket, struct sshbuf *m) {
 +	ssh_gssapi_ccache store;
-+	int ok;
++	int ok, rc;
 +
 +	if (!options.gss_authentication && !options.gss_keyex)
 +		fatal("%s: GSSAPI not enabled", __func__);
 +
-+	store.filename = buffer_get_string(m, NULL);
-+	store.envvar   = buffer_get_string(m, NULL);
-+	store.envval   = buffer_get_string(m, NULL);
++	if ((rc = sshbuf_get_cstring(m, &store.filename, NULL)) ||
++	    (rc = sshbuf_get_cstring(m, &store.envvar, NULL)) ||
++	    (rc = sshbuf_get_cstring(m, &store.envval, NULL)))
++		fatal("%s: sshbuf_get_cstring returned %d", __func__, rc);
 +
 +	ok = ssh_gssapi_update_creds(&store);
 +
@@ -2362,21 +2465,22 @@ index 8f044f4e..b0c9b4f4 100644
 +	free(store.envvar);
 +	free(store.envval);
 +
-+	buffer_clear(m);
-+	buffer_put_int(m, ok);
++	sshbuf_reset(m);
++	if ((rc = sshbuf_put_u32(m, rc)))
++		fatal("%s: sshbuf_put_u32 returned %d", __func__, rc);
 +
 +	mm_request_send(socket, MONITOR_ANS_GSSUPCREDS, m);
 +
-+	return(0);
++	return (ok);
 +}
 +
  #endif /* GSSAPI */
  
 diff --git a/monitor.h b/monitor.h
-index 36e73f79..bcf9f125 100644
+index b6f658e1..4d701dc7 100644
 --- a/monitor.h
 +++ b/monitor.h
-@@ -68,6 +68,8 @@ enum monitor_reqtype {
+@@ -66,6 +66,8 @@ enum monitor_reqtype {
  #ifdef PAM_ENHANCEMENT
  	MONITOR_REQ_AUTHMETHOD = 114,
  #endif
@@ -2386,19 +2490,46 @@ index 36e73f79..bcf9f125 100644
  
  struct monitor {
 diff --git a/monitor_wrap.c b/monitor_wrap.c
-index bc6382f3..6cacbbab 100644
+index b7ff09e3..cac21c6d 100644
 --- a/monitor_wrap.c
 +++ b/monitor_wrap.c
-@@ -942,7 +942,7 @@ mm_ssh_gssapi_checkmic(Gssctxt *ctx, gss_buffer_t gssbuf, gss_buffer_t gssmic)
+@@ -395,16 +395,21 @@ mm_inform_authserv(char *service, char *style)
+ void
+ mm_inform_authmethod(char *authmethod)
+ {
+-	Buffer m;
++	struct sshbuf *m;
++	int rc;
+ 
+ 	debug3("%s entering", __func__);
+ 
+-	buffer_init(&m);
+-	buffer_put_cstring(&m, authmethod);
++	m = sshbuf_new();
++	if (m == NULL)
++		fatal("%s: failed to allocate buffer", __func__);
++
++	if ((rc = sshbuf_put_cstring(m, authmethod)))
++		fatal("%s: buffer error: %d", __func__, rc);
+ 
+-	mm_request_send(pmonitor->m_recvfd, MONITOR_REQ_AUTHMETHOD, &m);
++	mm_request_send(pmonitor->m_recvfd, MONITOR_REQ_AUTHMETHOD, m);
+ 
+-	buffer_free(&m);
++	sshbuf_free(m);
+ }
+ #endif
+ 
+@@ -1002,7 +1007,7 @@ mm_ssh_gssapi_checkmic(Gssctxt *ctx, gss_buffer_t gssbuf, gss_buffer_t gssmic)
  }
  
  int
 -mm_ssh_gssapi_userok(char *user)
 +mm_ssh_gssapi_userok(char *user, struct passwd *pw)
  {
- 	Buffer m;
- 	int authenticated = 0;
-@@ -959,5 +959,50 @@ mm_ssh_gssapi_userok(char *user)
+ 	struct sshbuf *m;
+ 	int r, authenticated = 0;
+@@ -1021,4 +1026,59 @@ mm_ssh_gssapi_userok(char *user)
  	debug3("%s: user %sauthenticated",__func__, authenticated ? "" : "not ");
  	return (authenticated);
  }
@@ -2406,54 +2537,63 @@ index bc6382f3..6cacbbab 100644
 +OM_uint32
 +mm_ssh_gssapi_sign(Gssctxt *ctx, gss_buffer_desc *data, gss_buffer_desc *hash)
 +{
-+	Buffer m;
++	struct sshbuf *m;
 +	OM_uint32 major;
-+	u_int len;
++	int rc;
 +
-+	buffer_init(&m);
-+	buffer_put_string(&m, data->value, data->length);
++	m = sshbuf_new();
++	if (m == NULL)
++		fatal("%s: failed to allocate buffer", __func__);
++	if ((rc = sshbuf_put_string(m, data->value, data->length)))
++		fatal("%s: buffer error: %d", __func__, rc);
 +
-+	mm_request_send(pmonitor->m_recvfd, MONITOR_REQ_GSSSIGN, &m);
-+	mm_request_receive_expect(pmonitor->m_recvfd, MONITOR_ANS_GSSSIGN, &m);
++	mm_request_send(pmonitor->m_recvfd, MONITOR_REQ_GSSSIGN, m);
++	mm_request_receive_expect(pmonitor->m_recvfd, MONITOR_ANS_GSSSIGN, m);
 +
-+	major = buffer_get_int(&m);
-+	hash->value = buffer_get_string(&m, &len);
-+	hash->length = len;
++	if ((rc = sshbuf_get_u32(m, &major)) ||
++	    (rc = sshbuf_get_string(m, (u_char **)&hash->value, &hash->length)))
++		fatal("%s: sshbuf_get returned %d", __func__, rc);
 +
-+	buffer_free(&m);
++	sshbuf_free(m);
 +
-+	return(major);
++	return (major);
 +}
 +
 +int
 +mm_ssh_gssapi_update_creds(ssh_gssapi_ccache *store)
 +{
-+	Buffer m;
-+	int ok;
-+
-+	buffer_init(&m);
-+
-+	buffer_put_cstring(&m, store->filename ? store->filename : "");
-+	buffer_put_cstring(&m, store->envvar ? store->envvar : "");
-+	buffer_put_cstring(&m, store->envval ? store->envval : "");
++	struct sshbuf *m;
++	int rc;
++	uint32_t ok;
++
++	m = sshbuf_new();
++	if (m == NULL)
++		fatal("%s: failed to allocate buffer", __func__);
++
++	if ((rc = sshbuf_put_cstring(m, store->filename ? store->filename : "")) ||
++	    (rc = sshbuf_put_cstring(m, store->envvar ? store->envvar : "")) ||
++	    (rc = sshbuf_put_cstring(m, store->envval ? store->envval : "")))
++		fatal("%s: buffer error: %d", __func__, rc);
 +	
-+	mm_request_send(pmonitor->m_recvfd, MONITOR_REQ_GSSUPCREDS, &m);
-+	mm_request_receive_expect(pmonitor->m_recvfd, MONITOR_ANS_GSSUPCREDS, &m);
++	mm_request_send(pmonitor->m_recvfd, MONITOR_REQ_GSSUPCREDS, m);
++	mm_request_receive_expect(pmonitor->m_recvfd, MONITOR_ANS_GSSUPCREDS, m);
 +
-+	ok = buffer_get_int(&m);
++	if ((rc = sshbuf_get_u32(m, &ok)))
++		fatal("%s: sshbuf_get_u32 returned %d", __func__, rc);
++	if (ok > INT_MAX)
++		fatal("%s: monitor returned bogus ok value: %u", __func__, ok);
 +
-+	buffer_free(&m);
++	sshbuf_free(m);
 +	
-+	return (ok);
++	return ((int)ok);
 +}
 +
  #endif /* GSSAPI */
- 
 diff --git a/monitor_wrap.h b/monitor_wrap.h
-index db5902f5..8f9dd896 100644
+index 644da081..7f93144f 100644
 --- a/monitor_wrap.h
 +++ b/monitor_wrap.h
-@@ -55,8 +55,10 @@ int mm_key_verify(Key *, u_char *, u_int, u_char *, u_int);
+@@ -60,8 +60,10 @@ int mm_sshkey_verify(const struct sshkey *, const u_char *, size_t,
  OM_uint32 mm_ssh_gssapi_server_ctx(Gssctxt **, gss_OID);
  OM_uint32 mm_ssh_gssapi_accept_ctx(Gssctxt *,
     gss_buffer_desc *, gss_buffer_desc *, OM_uint32 *);
@@ -2466,39 +2606,56 @@ index db5902f5..8f9dd896 100644
  
  #ifdef USE_PAM
 diff --git a/readconf.c b/readconf.c
-index e6fd1420..1efbab9b 100644
+index 46a974d5..9421e434 100644
 --- a/readconf.c
 +++ b/readconf.c
-@@ -160,6 +160,8 @@ typedef enum {
+@@ -161,6 +161,8 @@ typedef enum {
  	oClearAllForwardings, oNoHostAuthenticationForLocalhost,
  	oEnableSSHKeysign, oRekeyLimit, oVerifyHostKeyDNS, oConnectTimeout,
  	oAddressFamily, oGssAuthentication, oGssDelegateCreds,
 +	oGssTrustDns, oGssKeyEx, oGssClientIdentity, oGssRenewalRekey,
 +	oGssServerIdentity, 
  	oServerAliveInterval, oServerAliveCountMax, oIdentitiesOnly,
- 	oSendEnv, oControlPath, oControlMaster, oControlPersist,
+ 	oSendEnv, oSetEnv, oControlPath, oControlMaster, oControlPersist,
  	oHashKnownHosts,
-@@ -208,10 +210,19 @@ static struct {
- 	{ "afstokenpassing", oUnsupported },
- #if defined(GSSAPI)
- 	{ "gssapiauthentication", oGssAuthentication },
+@@ -202,13 +204,6 @@ static struct {
+ 	{ "kerberostgtpassing", oUnsupported },
+ 
+ 	/* Sometimes-unsupported options */
+-#if defined(GSSAPI)
+-	{ "gssapiauthentication", oGssAuthentication },
+-	{ "gssapidelegatecredentials", oGssDelegateCreds },
+-# else
+-	{ "gssapiauthentication", oUnsupported },
+-	{ "gssapidelegatecredentials", oUnsupported },
+-#endif
+ #ifdef ENABLE_PKCS11
+ 	{ "smartcarddevice", oPKCS11Provider },
+ 	{ "pkcs11provider", oPKCS11Provider },
+@@ -236,6 +231,22 @@ static struct {
+ 	{ "challengeresponseauthentication", oChallengeResponseAuthentication },
+ 	{ "skeyauthentication", oUnsupported },
+ 	{ "tisauthentication", oChallengeResponseAuthentication },  /* alias */
++#if defined(GSSAPI)
++	{ "gssapiauthentication", oGssAuthentication },
 +	{ "gssapikeyexchange", oGssKeyEx },
- 	{ "gssapidelegatecredentials", oGssDelegateCreds },
++	{ "gssapidelegatecredentials", oGssDelegateCreds },
 +	{ "gssapitrustdns", oGssTrustDns },
 +	{ "gssapiclientidentity", oGssClientIdentity },
 +	{ "gssapiserveridentity", oGssServerIdentity },
 +	{ "gssapirenewalforcesrekey", oGssRenewalRekey },
- #else
- 	{ "gssapiauthentication", oUnsupported },
++#else
++	{ "gssapiauthentication", oUnsupported },
 +	{ "gssapikeyexchange", oUnsupported },
- 	{ "gssapidelegatecredentials", oUnsupported },
++	{ "gssapidelegatecredentials", oUnsupported },
 +	{ "gssapitrustdns", oUnsupported },
 +	{ "gssapiclientidentity", oUnsupported },
 +	{ "gssapirenewalforcesrekey", oUnsupported },
- #endif
- 	{ "fallbacktorsh", oDeprecated },
- 	{ "usersh", oDeprecated },
-@@ -996,10 +1007,30 @@ parse_time:
++#endif
+ 	{ "identityfile", oIdentityFile },
+ 	{ "identityfile2", oIdentityFile },			/* obsolete */
+ 	{ "identitiesonly", oIdentitiesOnly },
+@@ -1009,10 +1020,30 @@ parse_time:
  		intptr = &options->gss_authentication;
  		goto parse_flag;
  
@@ -2529,7 +2686,7 @@ index e6fd1420..1efbab9b 100644
  	case oBatchMode:
  		intptr = &options->batch_mode;
  		goto parse_flag;
-@@ -1818,7 +1849,12 @@ initialize_options(Options * options)
+@@ -1884,7 +1915,12 @@ initialize_options(Options * options)
  	options->pubkey_authentication = -1;
  	options->challenge_response_authentication = -1;
  	options->gss_authentication = -1;
@@ -2542,7 +2699,7 @@ index e6fd1420..1efbab9b 100644
  	options->password_authentication = -1;
  	options->kbd_interactive_authentication = -1;
  	options->kbd_interactive_devices = NULL;
-@@ -1973,8 +2009,14 @@ fill_default_options(Options * options)
+@@ -2041,8 +2077,14 @@ fill_default_options(Options * options)
  #else
  		options->gss_authentication = 0;
  #endif
@@ -2558,10 +2715,10 @@ index e6fd1420..1efbab9b 100644
  		options->password_authentication = 1;
  	if (options->kbd_interactive_authentication == -1)
 diff --git a/readconf.h b/readconf.h
-index 8005ebdd..35fb4ad0 100644
+index cfb6a128..8abfc09c 100644
 --- a/readconf.h
 +++ b/readconf.h
-@@ -45,7 +45,12 @@ typedef struct {
+@@ -40,7 +40,12 @@ typedef struct {
  	int     challenge_response_authentication;
  					/* Try S/Key or TIS, authentication. */
  	int     gss_authentication;	/* Try GSS authentication */
@@ -2575,10 +2732,10 @@ index 8005ebdd..35fb4ad0 100644
  						 * authentication. */
  	int     kbd_interactive_authentication; /* Try keyboard-interactive auth. */
 diff --git a/servconf.c b/servconf.c
-index c0aba508..881edd95 100644
+index 93761629..15567f88 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -113,8 +113,10 @@ initialize_server_options(ServerOptions *options)
+@@ -124,8 +124,10 @@ initialize_server_options(ServerOptions *options)
  	options->kerberos_ticket_cleanup = -1;
  	options->kerberos_get_afs_token = -1;
  	options->gss_authentication=-1;
@@ -2589,7 +2746,7 @@ index c0aba508..881edd95 100644
  	options->password_authentication = -1;
  	options->kbd_interactive_authentication = -1;
  	options->challenge_response_authentication = -1;
-@@ -292,10 +294,14 @@ fill_default_server_options(ServerOptions *options)
+@@ -362,10 +364,14 @@ fill_default_server_options(ServerOptions *options)
  #else
  		options->gss_authentication = 0;
  #endif
@@ -2598,22 +2755,21 @@ index c0aba508..881edd95 100644
  	if (options->gss_cleanup_creds == -1)
  		options->gss_cleanup_creds = 1;
  	if (options->gss_strict_acceptor == -1)
--		options->gss_strict_acceptor = 0;
-+		options->gss_strict_acceptor = 1;
+ 		options->gss_strict_acceptor = 1;
 +	if (options->gss_store_rekey == -1)
 +		options->gss_store_rekey = 0;
  	if (options->password_authentication == -1)
  		options->password_authentication = 1;
  	if (options->kbd_interactive_authentication == -1)
-@@ -438,6 +444,7 @@ typedef enum {
+@@ -516,6 +522,7 @@ typedef enum {
  	sHostKeyAlgorithms,
  	sClientAliveInterval, sClientAliveCountMax, sAuthorizedKeysFile,
  	sGssAuthentication, sGssCleanupCreds, sGssStrictAcceptor,
 +	sGssKeyEx, sGssStoreRekey,
- 	sAcceptEnv, sPermitTunnel,
- 	sMatch, sPermitOpen, sForceCommand, sChrootDirectory,
+ 	sAcceptEnv, sSetEnv, sPermitTunnel,
+ 	sMatch, sPermitOpen, sPermitListen, sForceCommand, sChrootDirectory,
  	sUsePrivilegeSeparation, sAllowAgentForwarding,
-@@ -518,12 +525,20 @@ static struct {
+@@ -597,12 +604,20 @@ static struct {
  #else /* USE_GSS_STORE_CRED */
  	{ "gssapicleanupcredentials", sGssCleanupCreds, SSHCFG_GLOBAL },
  #endif /* USE_GSS_STORE_CRED */
@@ -2634,7 +2790,7 @@ index c0aba508..881edd95 100644
  	{ "passwordauthentication", sPasswordAuthentication, SSHCFG_ALL },
  	{ "kbdinteractiveauthentication", sKbdInteractiveAuthentication, SSHCFG_ALL },
  	{ "challengeresponseauthentication", sChallengeResponseAuthentication, SSHCFG_GLOBAL },
-@@ -1281,6 +1296,10 @@ process_server_config_line(ServerOptions *options, char *line,
+@@ -1542,6 +1557,10 @@ process_server_config_line(ServerOptions *options, char *line,
  		intptr = &options->gss_authentication;
  		goto parse_flag;
  
@@ -2645,7 +2801,7 @@ index c0aba508..881edd95 100644
  	case sGssCleanupCreds:
  		intptr = &options->gss_cleanup_creds;
  		goto parse_flag;
-@@ -1289,6 +1308,10 @@ process_server_config_line(ServerOptions *options, char *line,
+@@ -1550,6 +1569,10 @@ process_server_config_line(ServerOptions *options, char *line,
  		intptr = &options->gss_strict_acceptor;
  		goto parse_flag;
  
@@ -2656,7 +2812,7 @@ index c0aba508..881edd95 100644
  	case sPasswordAuthentication:
  		intptr = &options->password_authentication;
  		goto parse_flag;
-@@ -2353,7 +2376,10 @@ dump_config(ServerOptions *o)
+@@ -2665,7 +2688,10 @@ dump_config(ServerOptions *o)
  #endif
  #ifdef GSSAPI
  	dump_cfg_fmtint(sGssAuthentication, o->gss_authentication);
@@ -2668,10 +2824,10 @@ index c0aba508..881edd95 100644
  	dump_cfg_fmtint(sPasswordAuthentication, o->password_authentication);
  	dump_cfg_fmtint(sKbdInteractiveAuthentication,
 diff --git a/servconf.h b/servconf.h
-index 104852f7..729819e7 100644
+index e757d683..77743737 100644
 --- a/servconf.h
 +++ b/servconf.h
-@@ -116,8 +116,10 @@ typedef struct {
+@@ -129,8 +129,10 @@ typedef struct {
  	int     kerberos_get_afs_token;		/* If true, try to get AFS token if
  						 * authenticated with Kerberos. */
  	int     gss_authentication;	/* If true, permit GSSAPI authentication */
@@ -2683,11 +2839,11 @@ index 104852f7..729819e7 100644
  						 * authentication. */
  	int     kbd_interactive_authentication;	/* If true, permit */
 diff --git a/ssh-gss.h b/ssh-gss.h
-index a99d7f08..914701bc 100644
+index 36180d07..46bcb711 100644
 --- a/ssh-gss.h
 +++ b/ssh-gss.h
 @@ -1,6 +1,6 @@
- /* $OpenBSD: ssh-gss.h,v 1.11 2014/02/26 20:28:44 djm Exp $ */
+ /* $OpenBSD: ssh-gss.h,v 1.14 2018/07/10 09:13:30 djm Exp $ */
  /*
 - * Copyright (c) 2001-2003 Simon Wilkinson. All rights reserved.
 + * Copyright (c) 2001-2009 Simon Wilkinson. All rights reserved.
@@ -2750,11 +2906,15 @@ index a99d7f08..914701bc 100644
  
  int  ssh_gssapi_check_oid(Gssctxt *, void *, size_t);
  void ssh_gssapi_set_oid_data(Gssctxt *, void *, size_t);
-@@ -119,16 +136,32 @@ void ssh_gssapi_build_ctx(Gssctxt **);
+@@ -121,19 +138,35 @@ char *ssh_gssapi_last_error(Gssctxt *, OM_uint32 *, OM_uint32 *);
+ void ssh_gssapi_build_ctx(Gssctxt **);
  void ssh_gssapi_delete_ctx(Gssctxt **);
  OM_uint32 ssh_gssapi_sign(Gssctxt *, gss_buffer_t, gss_buffer_t);
- void ssh_gssapi_buildmic(Buffer *, const char *, const char *, const char *);
+-void ssh_gssapi_buildmic(struct sshbuf *, const char *,
+-    const char *, const char *);
 -int ssh_gssapi_check_mechanism(Gssctxt **, gss_OID, const char *);
++void ssh_gssapi_buildmic(struct sshbuf *, const char *, const char *,
++    const char *);
 +int ssh_gssapi_check_mechanism(Gssctxt **, gss_OID, const char *, const char *);
 +OM_uint32 ssh_gssapi_client_identity(Gssctxt *, const char *);
 +int ssh_gssapi_credentials_updated(Gssctxt *);
@@ -2775,6 +2935,7 @@ index a99d7f08..914701bc 100644
  void ssh_gssapi_do_child(char ***, u_int *);
  void ssh_gssapi_cleanup_creds(void);
  void ssh_gssapi_storecreds(void);
+ const char *ssh_gssapi_displayname(void);
  
 +char *ssh_gssapi_server_mechanisms(void);
 +int ssh_gssapi_oid_table_ok(void);
@@ -2786,10 +2947,10 @@ index a99d7f08..914701bc 100644
  
  #endif /* _SSH_GSS_H */
 diff --git a/ssh_config b/ssh_config
-index 90fb63f0..4e879cd2 100644
+index c12f5ef5..bcb9f153 100644
 --- a/ssh_config
 +++ b/ssh_config
-@@ -26,6 +26,8 @@
+@@ -24,6 +24,8 @@
  #   HostbasedAuthentication no
  #   GSSAPIAuthentication no
  #   GSSAPIDelegateCredentials no
@@ -2799,10 +2960,10 @@ index 90fb63f0..4e879cd2 100644
  #   CheckHostIP yes
  #   AddressFamily any
 diff --git a/ssh_config.4 b/ssh_config.4
-index 0953f11c..4492ecaf 100644
+index 811afa23..22cde6d3 100644
 --- a/ssh_config.4
 +++ b/ssh_config.4
-@@ -759,10 +759,42 @@ The default is
+@@ -747,10 +747,42 @@ The default is
  Specifies whether user authentication based on GSSAPI is allowed.
  The default on Solaris is
  .Dq yes .
@@ -2846,9 +3007,18 @@ index 0953f11c..4492ecaf 100644
  Indicates that
  .Xr ssh 1
 diff --git a/sshconnect2.c b/sshconnect2.c
-index 56942ca7..7959d048 100644
+index ebdbeabf..84b9efb1 100644
 --- a/sshconnect2.c
 +++ b/sshconnect2.c
+@@ -83,7 +83,7 @@ extern char *server_version_string;
+ extern Options options;
+ 
+ #ifdef DISABLE_BANNER
+-extern Buffer command;
++extern struct sshbuf *command;
+ #endif
+ 
+ /*
 @@ -166,6 +166,11 @@ ssh_kex2(char *host, struct sockaddr *hostaddr, u_short port)
  	struct kex *kex;
  	int r;
@@ -2861,7 +3031,7 @@ index 56942ca7..7959d048 100644
  	xxx_host = host;
  	xxx_hostaddr = hostaddr;
  
-@@ -196,6 +201,35 @@ ssh_kex2(char *host, struct sockaddr *hostaddr, u_short port)
+@@ -198,6 +203,35 @@ ssh_kex2(char *host, struct sockaddr *hostaddr, u_short port)
  		    order_hostkeyalgs(host, hostaddr, port));
  	}
  
@@ -2895,9 +3065,9 @@ index 56942ca7..7959d048 100644
 +#endif
 +
  	if (options.rekey_limit || options.rekey_interval)
- 		packet_set_rekey_limits((u_int32_t)options.rekey_limit,
- 		    (time_t)options.rekey_interval);
-@@ -217,15 +251,41 @@ ssh_kex2(char *host, struct sockaddr *hostaddr, u_short port)
+ 		packet_set_rekey_limits(options.rekey_limit,
+ 		    options.rekey_interval);
+@@ -219,15 +253,40 @@ ssh_kex2(char *host, struct sockaddr *hostaddr, u_short port)
  # endif
  #endif
  	kex->kex[KEX_C25519_SHA256] = kexc25519_client;
@@ -2920,8 +3090,7 @@ index 56942ca7..7959d048 100644
 +		kex->gss_host = gss_host;
 +	}
 +#endif
-+
- 	dispatch_run(DISPATCH_BLOCK, &kex->done, active_state);
+ 	ssh_dispatch_run_fatal(active_state, DISPATCH_BLOCK, &kex->done);
  
  	/* remove ext-info from the KEX proposals for rekeying */
  	myproposal[PROPOSAL_KEX_ALGS] =
@@ -2939,15 +3108,15 @@ index 56942ca7..7959d048 100644
  	if ((r = kex_prop2buf(kex->my, myproposal)) != 0)
  		fatal("kex_prop2buf: %s", ssh_err(r));
  
-@@ -315,6 +375,7 @@ int	input_gssapi_token(int type, u_int32_t, void *);
- int	input_gssapi_hash(int type, u_int32_t, void *);
- int	input_gssapi_error(int, u_int32_t, void *);
- int	input_gssapi_errtok(int, u_int32_t, void *);
+@@ -318,6 +377,7 @@ int	input_gssapi_token(int type, u_int32_t, struct ssh *);
+ int	input_gssapi_hash(int type, u_int32_t, struct ssh *);
+ int	input_gssapi_error(int, u_int32_t, struct ssh *);
+ int	input_gssapi_errtok(int, u_int32_t, struct ssh *);
 +int	userauth_gsskeyex(Authctxt *authctxt);
  #endif
  
  void	userauth(Authctxt *, char *);
-@@ -331,6 +392,11 @@ static char *authmethods_get(void);
+@@ -334,6 +394,11 @@ static char *authmethods_get(void);
  
  Authmethod authmethods[] = {
  #ifdef GSSAPI
@@ -2959,10 +3128,19 @@ index 56942ca7..7959d048 100644
  	{"gssapi-with-mic",
  		userauth_gssapi,
  		NULL,
-@@ -675,25 +741,40 @@ userauth_gssapi(Authctxt *authctxt)
+@@ -526,7 +591,7 @@ input_userauth_banner(int type, u_int32_t seq, struct ssh *ssh)
+ 	if (len > 0 && options.log_level >= SYSLOG_LEVEL_INFO &&
+             (options.disable_banner == SSH_DISABLEBANNER_NO ||
+             (options.disable_banner == SSH_DISABLEBANNER_INEXECMODE &&
+-            buffer_len(&command) == 0))) {
++            sshbuf_len(command) == 0))) {
+ #else
+ 	if (len > 0 && options.log_level >= SYSLOG_LEVEL_INFO) {
+ #endif
+@@ -709,25 +774,40 @@ userauth_gssapi(Authctxt *authctxt)
  	static u_int mech = 0;
  	OM_uint32 min;
- 	int ok = 0;
+ 	int r, ok = 0;
 +	char *gss_host;
 +
 +	if (options.gss_server_identity)
@@ -2987,10 +3165,11 @@ index 56942ca7..7959d048 100644
  	while (mech < gss_supported->count && !ok) {
  		/* My DER encoding requires length<128 */
  		if (gss_supported->elements[mech].length < 128 &&
- 		    ssh_gssapi_check_mechanism(&gssctxt, 
+-		    ssh_gssapi_check_mechanism(&gssctxt,
 -		    &gss_supported->elements[mech], authctxt->host)) {
-+		    &gss_supported->elements[mech], gss_host, 
-+                    options.gss_client_identity)) {
++		    ssh_gssapi_check_mechanism(&gssctxt, 
++		    &gss_supported->elements[mech], gss_host,
++		    options.gss_client_identity)) {
  			ok = 1; /* Mechanism works */
  		} else {
  			mech++;
@@ -3002,26 +3181,15 @@ index 56942ca7..7959d048 100644
  	if (!ok)
  		return 0;
  
-@@ -784,8 +865,8 @@ input_gssapi_response(int type, u_int32_t plen, void *ctxt)
- {
- 	Authctxt *authctxt = ctxt;
- 	Gssctxt *gssctxt;
--	int oidlen;
--	char *oidv;
-+	u_int oidlen;
-+	u_char *oidv;
- 
- 	if (authctxt == NULL)
- 		fatal("input_gssapi_response: no authentication context");
-@@ -898,6 +979,48 @@ input_gssapi_error(int type, u_int32_t plen, void *ctxt)
+@@ -958,6 +1038,54 @@ input_gssapi_error(int type, u_int32_t plen, struct ssh *ssh)
  	free(lang);
- 	return 0;
+ 	return r;
  }
 +
 +int
 +userauth_gsskeyex(Authctxt *authctxt)
 +{
-+	Buffer b;
++	struct sshbuf *b;
 +	gss_buffer_desc gssbuf;
 +	gss_buffer_desc mic = GSS_C_EMPTY_BUFFER;
 +	OM_uint32 ms;
@@ -3035,14 +3203,20 @@ index 56942ca7..7959d048 100644
 +		return (0);
 +	}
 +
-+	ssh_gssapi_buildmic(&b, authctxt->server_user, authctxt->service,
++	b = sshbuf_new();
++	if (b == NULL)
++		fatal("%s: sshbuf_new failed", __func__);
++
++	ssh_gssapi_buildmic(b, authctxt->server_user, authctxt->service,
 +	    "gssapi-keyex");
 +
-+	gssbuf.value = buffer_ptr(&b);
-+	gssbuf.length = buffer_len(&b);
++	gssbuf.value = sshbuf_mutable_ptr(b);
++	gssbuf.length = sshbuf_len(b);
++	if (gssbuf.value == NULL || gssbuf.length == 0)
++		fatal("%s: ssh_gssapi_buildmic left buffer empty", __func__);
 +
 +	if (GSS_ERROR(ssh_gssapi_sign(gss_kex_context, &gssbuf, &mic))) {
-+		buffer_free(&b);
++		sshbuf_free(b);
 +		return (0);
 +	}
 +
@@ -3053,7 +3227,7 @@ index 56942ca7..7959d048 100644
 +	packet_put_string(mic.value, mic.length);
 +	packet_send();
 +
-+	buffer_free(&b);
++	sshbuf_free(b);
 +	gss_release_buffer(&ms, &mic);
 +
 +	return (1);
@@ -3063,7 +3237,7 @@ index 56942ca7..7959d048 100644
  
  int
 diff --git a/sshd.c b/sshd.c
-index eee363ab..e460c238 100644
+index 866f7df9..994b7c9e 100644
 --- a/sshd.c
 +++ b/sshd.c
 @@ -123,6 +123,10 @@
@@ -3077,19 +3251,23 @@ index eee363ab..e460c238 100644
  /* Re-exec fds */
  #define REEXEC_DEVCRYPTO_RESERVED_FD	(STDERR_FILENO + 1)
  #define REEXEC_STARTUP_PIPE_FD		(STDERR_FILENO + 2)
-@@ -531,7 +535,7 @@ privsep_preauth_child(void)
+@@ -536,7 +540,8 @@ privsep_preauth_child(void)
  
  #ifdef GSSAPI
  	/* Cache supported mechanism OIDs for later use */
--	if (options.gss_authentication)
+-	ssh_gssapi_prepare_supported_oids();
 +	if (options.gss_authentication || options.gss_keyex)
- 		ssh_gssapi_prepare_supported_oids();
++		ssh_gssapi_prepare_supported_oids();
  #endif
  
-@@ -1705,10 +1709,13 @@ main(int ac, char **av)
+ 	reseed_prngs();
+@@ -1809,11 +1814,16 @@ main(int ac, char **av)
  		    key ? "private" : "agent", i, sshkey_ssh_name(pubkey), fp);
  		free(fp);
  	}
++
+ 	accumulate_host_timing_secret(cfg, NULL);
++
 +#ifndef GSSAPI
 +	/* The GSSAPI key exchange can run without a host key */
  	if (!sensitive_data.have_ssh2_key) {
@@ -3100,8 +3278,8 @@ index eee363ab..e460c238 100644
  
  	/*
  	 * Load certificates. They are stored in an array at identical
-@@ -1978,6 +1985,60 @@ main(int ac, char **av)
- 	    remote_ip, remote_port, laddr,  ssh_local_port(ssh));
+@@ -2104,6 +2114,60 @@ main(int ac, char **av)
+ 	    rdomain == NULL ? "" : "\"");
  	free(laddr);
  
 +#ifdef USE_SECURITY_SESSION_API
@@ -3161,7 +3339,7 @@ index eee363ab..e460c238 100644
  	/*
  	 * We don't want to listen forever unless the other side
  	 * successfully authenticates itself.  So we set up an alarm which is
-@@ -2179,6 +2240,48 @@ do_ssh2_kex(void)
+@@ -2307,6 +2371,48 @@ do_ssh2_kex(void)
  	myproposal[PROPOSAL_SERVER_HOST_KEY_ALGS] = compat_pkalg_proposal(
  	    list_hostkey_types());
  
@@ -3210,7 +3388,7 @@ index eee363ab..e460c238 100644
  	/* start key exchange */
  	if ((r = kex_setup(active_state, myproposal)) != 0)
  		fatal("kex_setup: %s", ssh_err(r));
-@@ -2196,6 +2299,13 @@ do_ssh2_kex(void)
+@@ -2324,6 +2430,13 @@ do_ssh2_kex(void)
  # endif
  #endif
  	kex->kex[KEX_C25519_SHA256] = kexc25519_server;
@@ -3225,10 +3403,10 @@ index eee363ab..e460c238 100644
  	kex->client_version_string=client_version_string;
  	kex->server_version_string=server_version_string;
 diff --git a/sshd_config b/sshd_config
-index 9f09e4a6..00e5a728 100644
+index 19b7c91a..2c48105f 100644
 --- a/sshd_config
 +++ b/sshd_config
-@@ -70,6 +70,8 @@ AuthorizedKeysFile	.ssh/authorized_keys
+@@ -69,6 +69,8 @@ AuthorizedKeysFile	.ssh/authorized_keys
  # GSSAPI options
  #GSSAPIAuthentication no
  #GSSAPICleanupCredentials yes
@@ -3238,10 +3416,10 @@ index 9f09e4a6..00e5a728 100644
  # Set this to 'yes' to enable PAM authentication, account processing,
  # and session processing. If this is enabled, PAM authentication will
 diff --git a/sshd_config.4 b/sshd_config.4
-index 45c54629..de03ac5e 100644
+index 446e67e7..dce30d07 100644
 --- a/sshd_config.4
 +++ b/sshd_config.4
-@@ -623,6 +623,11 @@ The default is
+@@ -648,6 +648,11 @@ The default is
  Specifies whether user authentication based on GSSAPI is allowed.
  The default on Solaris is
  .Cm yes .
@@ -3253,7 +3431,7 @@ index 45c54629..de03ac5e 100644
  .It Cm GSSAPICleanupCredentials
  Specifies whether to automatically destroy the user's credentials cache
  on logout.
-@@ -642,6 +647,11 @@ machine's default store.
+@@ -667,6 +672,11 @@ machine's default store.
  This facility is provided to assist with operation on multi homed machines.
  The default is
  .Cm yes .
@@ -3264,40 +3442,44 @@ index 45c54629..de03ac5e 100644
 +.Cm no .
  .It Cm HostbasedAcceptedKeyTypes
  Specifies the key types that will be accepted for hostbased authentication
- as a comma-separated pattern list.
+ as a list of comma-separated patterns.
 diff --git a/sshkey.c b/sshkey.c
-index c01da6c3..377d72fa 100644
+index 6555c5ef..d4862d61 100644
 --- a/sshkey.c
 +++ b/sshkey.c
-@@ -114,6 +114,7 @@ static const struct keytype keytypes[] = {
+@@ -135,6 +135,9 @@ static const struct keytype keytypes[] = {
  #  endif /* OPENSSL_HAS_NISTP521 */
  # endif /* OPENSSL_HAS_ECC */
  #endif /* WITH_OPENSSL */
-+	{ "null", "null", KEY_NULL, 0, 0, 0 },
- 	{ NULL, NULL, -1, -1, 0, 0 }
++#ifdef GSSAPI
++	{ "null", "null", NULL, KEY_NULL, 0, 0, 0 },
++#endif
+ 	{ NULL, NULL, NULL, -1, -1, 0, 0 }
  };
  
-@@ -202,7 +203,7 @@ sshkey_alg_list(int certs_only, int plain_only, char sep)
- 	const struct keytype *kt;
- 
- 	for (kt = keytypes; kt->type != -1; kt++) {
--		if (kt->name == NULL || kt->sigonly)
-+		if (kt->name == NULL || kt->sigonly || kt->type == KEY_NULL)
+@@ -227,6 +230,8 @@ sshkey_alg_list(int certs_only, int plain_only, int include_sigonly, char sep)
  			continue;
+ 		if (!include_sigonly && kt->sigonly)
+ 			continue;
++		if (kt->type == KEY_NULL)
++			continue;
  		if ((certs_only && !kt->cert) || (plain_only && kt->cert))
  			continue;
+ 		if (ret != NULL)
 diff --git a/sshkey.h b/sshkey.h
-index f3936384..7eb2a139 100644
+index f6a007fd..08348200 100644
 --- a/sshkey.h
 +++ b/sshkey.h
-@@ -62,6 +62,7 @@ enum sshkey_types {
- 	KEY_DSA_CERT,
- 	KEY_ECDSA_CERT,
+@@ -64,6 +64,9 @@ enum sshkey_types {
  	KEY_ED25519_CERT,
+ 	KEY_XMSS,
+ 	KEY_XMSS_CERT,
++#ifdef GSSAPI
 +	KEY_NULL,
++#endif
  	KEY_UNSPEC
  };
  
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0015-Enable-login-to-a-role-if-PAM-is-ok-with-it.patch b/openssh/Patches/0015-Enable-login-to-a-role-if-PAM-is-ok-with-it.patch
index 7fdfac4..8f7d2da 100644
--- a/openssh/Patches/0015-Enable-login-to-a-role-if-PAM-is-ok-with-it.patch
+++ b/openssh/Patches/0015-Enable-login-to-a-role-if-PAM-is-ok-with-it.patch
@@ -1,4 +1,4 @@
-From bc29dcd14f8623098d2383bd36e486145948a653 Mon Sep 17 00:00:00 2001
+From 326be58a153548e8218d1cdc2b0224612814d63f Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:38:19 -0700
 Subject: [PATCH 15/34] Enable login to a role if PAM is ok with it
@@ -9,14 +9,14 @@ Subject: [PATCH 15/34] Enable login to a role if PAM is ok with it
  auth.h            |  3 +++
  auth2-hostbased.c | 10 ++++++++++
  auth2.c           |  8 ++++++++
- monitor.c         | 15 ++++++++++++++-
- 6 files changed, 53 insertions(+), 1 deletion(-)
+ monitor.c         | 14 ++++++++++++++
+ 6 files changed, 53 insertions(+)
 
 diff --git a/auth-pam.c b/auth-pam.c
-index 70a25c19..46bf722e 100644
+index 01f62036..cf692526 100644
 --- a/auth-pam.c
 +++ b/auth-pam.c
-@@ -1069,6 +1069,20 @@ do_pam_account(void)
+@@ -1149,6 +1149,20 @@ do_pam_account(void)
  	return (sshpam_account_status);
  }
  
@@ -38,13 +38,13 @@ index 70a25c19..46bf722e 100644
  do_pam_setcred(int init)
  {
 diff --git a/auth-pam.h b/auth-pam.h
-index c47b442e..892a27bc 100644
+index 41986074..f5d2092f 100644
 --- a/auth-pam.h
 +++ b/auth-pam.h
-@@ -29,6 +29,10 @@ void start_pam(Authctxt *);
+@@ -31,6 +31,10 @@ void start_pam(Authctxt *);
  void finish_pam(void);
  u_int do_pam_account(void);
- void do_pam_session(void);
+ void do_pam_session(struct ssh *);
 +#ifdef HAVE_PAM_AUSER
 +void do_pam_set_auser(const char *);
 +#endif
@@ -53,10 +53,10 @@ index c47b442e..892a27bc 100644
  void do_pam_chauthtok(void);
  int do_pam_putenv(char *, char *);
 diff --git a/auth.h b/auth.h
-index 4a7f2c1f..b4efc255 100644
+index 34e69270..607aecfa 100644
 --- a/auth.h
 +++ b/auth.h
-@@ -84,6 +84,9 @@ struct Authctxt {
+@@ -99,6 +99,9 @@ struct Authctxt {
  #ifdef PAM_ENHANCEMENT
  	char		*authmethod_name;
  #endif
@@ -64,24 +64,24 @@ index 4a7f2c1f..b4efc255 100644
 +	char		*auser;
 +#endif
  };
+ 
  /*
-  * Every authentication method has to handle authentication requests for
 diff --git a/auth2-hostbased.c b/auth2-hostbased.c
-index 1b3c3b20..2c51bd2b 100644
+index 764ceff7..e3502b93 100644
 --- a/auth2-hostbased.c
 +++ b/auth2-hostbased.c
-@@ -85,6 +85,9 @@ userauth_hostbased(Authctxt *authctxt)
- 	buffer_dump(&b);
- 	buffer_free(&b);
- #endif
+@@ -80,6 +80,9 @@ userauth_hostbased(struct ssh *ssh)
+ #ifdef DEBUG_PK
+ 	debug("signature:");
+ 	sshbuf_dump_data(sig, slen, stderr);
++#endif
 +#ifdef HAVE_PAM_AUSER
 +	authctxt->auser = NULL;
-+#endif
- 	pktype = key_type_from_name(pkalg);
+ #endif
+ 	pktype = sshkey_type_from_name(pkalg);
  	if (pktype == KEY_UNSPEC) {
- 		/* this is perfectly legal */
-@@ -142,6 +145,13 @@ userauth_hostbased(Authctxt *authctxt)
- 			buffer_len(&b))) == 1)
+@@ -152,6 +155,13 @@ userauth_hostbased(struct ssh *ssh)
+ 	    sshbuf_ptr(b), sshbuf_len(b), pkalg, ssh->compat)) == 0)
  		authenticated = 1;
  
 +#ifdef HAVE_PAM_AUSER
@@ -91,14 +91,14 @@ index 1b3c3b20..2c51bd2b 100644
 +	}
 +#endif
 +
- 	buffer_free(&b);
+ 	auth2_record_key(authctxt, authenticated, key);
+ 	sshbuf_free(b);
  done:
- 	debug2("userauth_hostbased: authenticated %d", authenticated);
 diff --git a/auth2.c b/auth2.c
-index 6a9f936b..e68aa6d3 100644
+index 15ba3da2..e9bfd241 100644
 --- a/auth2.c
 +++ b/auth2.c
-@@ -339,6 +339,14 @@ userauth_finish(Authctxt *authctxt, int authenticated, const char *method,
+@@ -393,6 +393,14 @@ userauth_finish(struct ssh *ssh, int authenticated, const char *method,
  #endif
  	}
  
@@ -114,10 +114,10 @@ index 6a9f936b..e68aa6d3 100644
  
  #if defined(USE_PAM) && defined(PAM_ENHANCEMENT)
 diff --git a/monitor.c b/monitor.c
-index b0c9b4f4..d2ad5425 100644
+index 426a5736..0190d034 100644
 --- a/monitor.c
 +++ b/monitor.c
-@@ -404,6 +404,12 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
+@@ -402,6 +402,12 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
  		}
  	}
  
@@ -130,7 +130,7 @@ index b0c9b4f4..d2ad5425 100644
  	if (!authctxt->valid)
  		fatal("%s: authenticated invalid user", __func__);
  	if (strcmp(auth_method, "unknown") == 0)
-@@ -603,12 +609,14 @@ monitor_reset_key_state(void)
+@@ -612,7 +618,10 @@ monitor_reset_key_state(void)
  {
  	/* reset state */
  	free(key_blob);
@@ -139,14 +139,9 @@ index b0c9b4f4..d2ad5425 100644
 +	hostbased_cuser = NULL;
 +#endif
  	free(hostbased_chost);
+ 	sshauthopt_free(key_opts);
  	key_blob = NULL;
- 	key_bloblen = 0;
- 	key_blobtype = MM_NOKEY;
--	hostbased_cuser = NULL;
- 	hostbased_chost = NULL;
- }
- 
-@@ -1066,6 +1074,11 @@ mm_answer_pam_account(int sock, Buffer *m)
+@@ -1064,6 +1073,11 @@ mm_answer_pam_account(int sock, struct sshbuf *m)
  	if (!options.use_pam)
  		fatal("%s: PAM not enabled", __func__);
  
@@ -157,7 +152,7 @@ index b0c9b4f4..d2ad5425 100644
 +
  	ret = do_pam_account();
  
- 	buffer_put_int(m, ret);
+ 	if ((r = sshbuf_put_u32(m, ret)) != 0 ||
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0016-PAM-setcred-failures.patch b/openssh/Patches/0016-PAM-setcred-failures.patch
index b8fa8cb..0e17f3f 100644
--- a/openssh/Patches/0016-PAM-setcred-failures.patch
+++ b/openssh/Patches/0016-PAM-setcred-failures.patch
@@ -1,4 +1,4 @@
-From 37431ef55b807e6d00fd45b54a57b7ba6df81b95 Mon Sep 17 00:00:00 2001
+From 587e5e335de79d83365264cbb82a1130bbd991c9 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:38:26 -0700
 Subject: [PATCH 16/34] PAM setcred failures
@@ -20,10 +20,10 @@ Subject: [PATCH 16/34] PAM setcred failures
  1 file changed, 13 insertions(+)
 
 diff --git a/auth-pam.c b/auth-pam.c
-index 46bf722e..dcd0f208 100644
+index cf692526..962b51a0 100644
 --- a/auth-pam.c
 +++ b/auth-pam.c
-@@ -1102,12 +1102,19 @@ do_pam_setcred(int init)
+@@ -1182,12 +1182,19 @@ do_pam_setcred(int init)
  		sshpam_cred_established = 1;
  		return;
  	}
@@ -43,7 +43,7 @@ index 46bf722e..dcd0f208 100644
  }
  
  static int
-@@ -1200,10 +1207,16 @@ do_pam_session(void)
+@@ -1283,10 +1290,16 @@ do_pam_session(struct ssh *ssh)
  	if (sshpam_err == PAM_SUCCESS)
  		sshpam_session_open = 1;
  	else {
@@ -53,7 +53,7 @@ index 46bf722e..dcd0f208 100644
 +		    pam_strerror(sshpam_handle, sshpam_err));
 +#else /* orig */
  		sshpam_session_open = 0;
- 		disable_forwarding();
+ 		auth_restrict_session(ssh);
  		error("PAM: pam_open_session(): %s",
  		    pam_strerror(sshpam_handle, sshpam_err));
 +#endif /* PAM_BUGFIX */
@@ -61,5 +61,5 @@ index 46bf722e..dcd0f208 100644
  
  }
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0017-Don-t-call-do_pam_setcred-twice.patch b/openssh/Patches/0017-Don-t-call-do_pam_setcred-twice.patch
index c994c43..59c16a3 100644
--- a/openssh/Patches/0017-Don-t-call-do_pam_setcred-twice.patch
+++ b/openssh/Patches/0017-Don-t-call-do_pam_setcred-twice.patch
@@ -1,4 +1,4 @@
-From 1881e2dc1ef484c877e60a40c820f4d2df980a48 Mon Sep 17 00:00:00 2001
+From c03a29b1e7cbe6c40b4d32c2c9ca704e6e43a00c Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Mon, 3 Aug 2015 14:38:41 -0700
 Subject: [PATCH 17/34] Don't call do_pam_setcred twice
@@ -30,10 +30,10 @@ Subject: [PATCH 17/34] Don't call do_pam_setcred twice
  1 file changed, 1 insertion(+), 1 deletion(-)
 
 diff --git a/platform.c b/platform.c
-index 973a63e4..fc9c079e 100644
+index 41acc937..f5f3ce37 100644
 --- a/platform.c
 +++ b/platform.c
-@@ -145,7 +145,7 @@ platform_setusercontext(struct passwd *pw)
+@@ -144,7 +144,7 @@ platform_setusercontext(struct passwd *pw)
  void
  platform_setusercontext_post_groups(struct passwd *pw)
  {
@@ -43,5 +43,5 @@ index 973a63e4..fc9c079e 100644
  	 * PAM credentials may take the form of supplementary groups.
  	 * These will have been wiped by the above initgroups() call.
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0018-Per-session-xauthfile.patch b/openssh/Patches/0018-Per-session-xauthfile.patch
index ee62a72..87da37f 100644
--- a/openssh/Patches/0018-Per-session-xauthfile.patch
+++ b/openssh/Patches/0018-Per-session-xauthfile.patch
@@ -1,4 +1,4 @@
-From cb6c8f4391f75983553dc576014ab58695eee3eb Mon Sep 17 00:00:00 2001
+From 231cc12ac06a3dce54a48548caefa7badc4e0925 Mon Sep 17 00:00:00 2001
 From: oracle <solaris@oracle.com>
 Date: Tue, 22 Dec 2015 17:12:50 -0800
 Subject: [PATCH 18/34] Per-session xauthfile
@@ -11,12 +11,12 @@ more information, see https://bugzilla.mindrot.org/show_bug.cgi?id=2440
 In the future, if this fix is accepted by the upsteam in a later release, we
 will remove this patch when we upgrade to that release.
 ---
- session.c | 138 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--
+ session.c | 139 ++++++++++++++++++++++++++++++++++++++++++++++++++++--
  session.h |   3 ++
- 2 files changed, 137 insertions(+), 4 deletions(-)
+ 2 files changed, 138 insertions(+), 4 deletions(-)
 
 diff --git a/session.c b/session.c
-index a08aa69d..9586901e 100644
+index 2d0958d1..4003d91c 100644
 --- a/session.c
 +++ b/session.c
 @@ -63,6 +63,10 @@
@@ -30,9 +30,9 @@ index a08aa69d..9586901e 100644
  #include "openbsd-compat/sys-queue.h"
  #include "xmalloc.h"
  #include "ssh.h"
-@@ -131,6 +135,11 @@ static void do_authenticated2(Authctxt *);
+@@ -133,6 +137,11 @@ static void do_authenticated2(struct ssh *, Authctxt *);
  
- static int session_pty_req(Session *);
+ static int session_pty_req(struct ssh *, Session *);
  
 +#ifdef PER_SESSION_XAUTHFILE
 +void   session_xauthfile_cleanup(Session *);
@@ -42,19 +42,20 @@ index a08aa69d..9586901e 100644
  /* import */
  extern ServerOptions options;
  extern char *__progname;
-@@ -1056,6 +1065,11 @@ do_setup_env(Session *s, const char *shell)
+@@ -1090,6 +1099,12 @@ do_setup_env(struct ssh *ssh, Session *s, const char *shell)
+ 
  	if (getenv("TZ"))
  		child_set_env(&env, &envsize, "TZ", getenv("TZ"));
- 
++
 +#ifdef PER_SESSION_XAUTHFILE
 +        if (s->auth_file != NULL)
 +                child_set_env(&env, &envsize, "XAUTHORITY", s->auth_file);
 +#endif
 +
- 	/* Set custom environment options from RSA authentication. */
- 	while (custom_environment) {
- 		struct envstring *ce = custom_environment;
-@@ -1958,6 +1972,11 @@ session_x11_req(Session *s)
+ 	if (s->term)
+ 		child_set_env(&env, &envsize, "TERM", s->term);
+ 	if (s->display)
+@@ -2010,6 +2025,11 @@ session_x11_req(struct ssh *ssh, Session *s)
  {
  	int success;
  
@@ -66,20 +67,20 @@ index a08aa69d..9586901e 100644
  	if (s->auth_proto != NULL || s->auth_data != NULL) {
  		error("session_x11_req: session %d: "
  		    "x11 forwarding already active", s->self);
-@@ -1969,19 +1988,78 @@ session_x11_req(Session *s)
+@@ -2021,19 +2041,78 @@ session_x11_req(struct ssh *ssh, Session *s)
  	s->screen = packet_get_int();
  	packet_check_eom();
  
 -	if (xauth_valid_string(s->auth_proto) &&
 -	    xauth_valid_string(s->auth_data))
--		success = session_setup_x11fwd(s);
+-		success = session_setup_x11fwd(ssh, s);
 -	else {
 +	if (!xauth_valid_string(s->auth_proto) ||
 +	    !xauth_valid_string(s->auth_data)) {
  		success = 0;
  		error("Invalid X11 forwarding data");
 +		goto out;
-+	}
+ 	}
 +
 +#ifdef PER_SESSION_XAUTHFILE
 +	/*
@@ -129,10 +130,10 @@ index a08aa69d..9586901e 100644
 +		error("failed to create a directory for the temporary X "
 +		    "authority file: %.100s; will use the default xauth file",
 +		    strerror(errno));
- 	}
++	}
 +#endif
 +
-+	success = session_setup_x11fwd(s);
++	success = session_setup_x11fwd(ssh, s);
 +
 +out:
  	if (!success) {
@@ -149,7 +150,7 @@ index a08aa69d..9586901e 100644
  	return success;
  }
  
-@@ -2170,6 +2248,51 @@ session_pty_cleanup(Session *s)
+@@ -2297,6 +2376,51 @@ session_pty_cleanup(Session *s)
  	PRIVSEP(session_pty_cleanup2(s));
  }
  
@@ -201,7 +202,7 @@ index a08aa69d..9586901e 100644
  static char *
  sig2name(int sig)
  {
-@@ -2310,6 +2433,9 @@ session_close(Session *s)
+@@ -2436,6 +2560,9 @@ session_close(struct ssh *ssh, Session *s)
  	free(s->auth_display);
  	free(s->auth_data);
  	free(s->auth_proto);
@@ -211,7 +212,7 @@ index a08aa69d..9586901e 100644
  	free(s->subsys);
  	if (s->env != NULL) {
  		for (i = 0; i < s->num_env; i++) {
-@@ -2556,6 +2682,10 @@ do_cleanup(Authctxt *authctxt)
+@@ -2681,6 +2808,10 @@ do_cleanup(struct ssh *ssh, Authctxt *authctxt)
  	/* remove agent socket */
  	auth_sock_cleanup_proc(authctxt->pw);
  
@@ -219,14 +220,14 @@ index a08aa69d..9586901e 100644
 +	cleanup_all_session_xauthfile();
 +#endif
 +
- 	/*
- 	 * Cleanup ptys/utmp only if privsep is disabled,
- 	 * or if running in monitor.
+ 	/* remove userauth info */
+ 	if (auth_info_file != NULL) {
+ 		temporarily_use_uid(authctxt->pw);
 diff --git a/session.h b/session.h
-index 98e1dafe..f211c19c 100644
+index ce59dabd..1f078799 100644
 --- a/session.h
 +++ b/session.h
-@@ -49,6 +49,9 @@ struct Session {
+@@ -50,6 +50,9 @@ struct Session {
  	char	*auth_display;
  	char	*auth_proto;
  	char	*auth_data;
@@ -237,5 +238,5 @@ index 98e1dafe..f211c19c 100644
  
  	int	chanid;
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0019-PubKeyPlugin-support.patch b/openssh/Patches/0019-PubKeyPlugin-support.patch
index 42c708f..35f3859 100644
--- a/openssh/Patches/0019-PubKeyPlugin-support.patch
+++ b/openssh/Patches/0019-PubKeyPlugin-support.patch
@@ -1,4 +1,4 @@
-From 1e9262a6ff5a256ef884dcb6cb4c188f33721c7c Mon Sep 17 00:00:00 2001
+From 23506f5b5a2f421ede1d465b456f0099c97f4480 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Mon, 3 Aug 2015 16:27:44 -0700
 Subject: [PATCH 19/34] PubKeyPlugin support
@@ -7,13 +7,13 @@ This adds the PubKeyPlugin directive and associated code from
 SunSSH, allowing an in-process shared library to be called
 into to check public keys for authentication.
 ---
- auth2-pubkey.c | 139 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- servconf.c     |  15 +++++++
- servconf.h     |   1 +
- 3 files changed, 155 insertions(+)
+ auth2-pubkey.c | 139 ++++++++++++++++++++++++++++++++++++++++++++++++-
+ servconf.c     |  15 ++++++
+ servconf.h     |   2 +
+ 3 files changed, 155 insertions(+), 1 deletion(-)
 
 diff --git a/auth2-pubkey.c b/auth2-pubkey.c
-index 20f3309e..01daef4a 100644
+index 2fb5950e..cf5c4dd6 100644
 --- a/auth2-pubkey.c
 +++ b/auth2-pubkey.c
 @@ -22,6 +22,11 @@
@@ -28,7 +28,7 @@ index 20f3309e..01daef4a 100644
  
  #include "includes.h"
  
-@@ -42,11 +47,13 @@
+@@ -41,12 +46,14 @@
  #include <time.h>
  #include <unistd.h>
  #include <limits.h>
@@ -38,11 +38,12 @@ index 20f3309e..01daef4a 100644
  #include "ssh.h"
  #include "ssh2.h"
  #include "packet.h"
+ #include "sshbuf.h"
 +#include "digest.h"
- #include "buffer.h"
  #include "log.h"
  #include "misc.h"
-@@ -74,6 +81,15 @@ extern ServerOptions options;
+ #include "servconf.h"
+@@ -73,6 +80,15 @@ extern ServerOptions options;
  extern u_char *session_id2;
  extern u_int session_id2_len;
  
@@ -55,10 +56,10 @@ index 20f3309e..01daef4a 100644
 +typedef int (*UNIV_SYM)(struct passwd *, const char *,
 +    const u_char *, size_t);
 +
- static int
- userauth_pubkey(Authctxt *authctxt)
+ static char *
+ format_key(const struct sshkey *key)
  {
-@@ -1071,6 +1087,125 @@ user_key_command_allowed2(struct passwd *user_pw, Key *key)
+@@ -991,6 +1007,124 @@ user_key_command_allowed2(struct ssh *ssh, struct passwd *user_pw,
  	return found_key;
  }
  
@@ -76,7 +77,7 @@ index 20f3309e..01daef4a 100644
 + * it keeps this code minimally invasive.
 + */
 +static int
-+user_key_allowed_from_plugin(struct passwd *pw, Key *key)
++user_key_allowed_from_plugin(struct passwd *pw, struct sshkey *key)
 +{
 +	RSA_SYM rsa_sym = NULL;
 +	ECDSA_SYM ecdsa_sym = NULL;
@@ -87,8 +88,8 @@ index 20f3309e..01daef4a 100644
 +	int success = 0;
 +
 +	if (options.pubkey_plugin == NULL || pw == NULL || key == NULL ||
-+	    (key->type != KEY_RSA && key->type != KEY_RSA1 &&
-+	    key->type != KEY_DSA && key->type != KEY_ECDSA))
++	    (key->type != KEY_RSA && key->type != KEY_DSA &&
++	    key->type != KEY_ECDSA))
 +		return success;
 +
 +	handle = dlopen(options.pubkey_plugin, RTLD_NOW);
@@ -132,7 +133,6 @@ index 20f3309e..01daef4a 100644
 +	argfp = fp + 4;
 +
 +	switch (key->type) {
-+	case KEY_RSA1:
 +	case KEY_RSA:
 +		rsa_sym = (RSA_SYM)dlsym(handle, RSA_SYM_NAME);
 +		if (rsa_sym == NULL) {
@@ -171,7 +171,7 @@ index 20f3309e..01daef4a 100644
 +	}
 +
 +	if (success)
-+		verbose("Found matching %s key: %s", key_type(key), fp);
++		verbose("Found matching %s key: %s", sshkey_type(key), fp);
 +
 +	if (fp != NULL) {
 +		free(fp);
@@ -184,22 +184,30 @@ index 20f3309e..01daef4a 100644
  /*
   * Check whether key authenticates and authorises the user.
   */
-@@ -1089,6 +1224,10 @@ user_key_allowed(struct passwd *pw, Key *key, int auth_attempt)
- 	if (success)
- 		return success;
+@@ -1015,6 +1149,9 @@ user_key_allowed(struct ssh *ssh, struct passwd *pw, struct sshkey *key,
+ 	sshauthopt_free(opts);
+ 	opts = NULL;
  
-+	success = user_key_allowed_from_plugin(pw, key);
-+	if (success > 0)
-+		return success;
++	if ((success = user_key_allowed_from_plugin(pw, key)) != 0)
++		goto out;
 +
- 	success = user_key_command_allowed2(pw, key);
- 	if (success > 0)
- 		return success;
+ 	if ((success = user_key_command_allowed2(ssh, pw, key, &opts)) != 0)
+ 		goto out;
+ 	sshauthopt_free(opts);
+@@ -1029,7 +1166,7 @@ user_key_allowed(struct ssh *ssh, struct passwd *pw, struct sshkey *key,
+ 		free(file);
+ 	}
+ 
+- out:
++out:
+ 	if (success && authoptsp != NULL) {
+ 		*authoptsp = opts;
+ 		opts = NULL;
 diff --git a/servconf.c b/servconf.c
-index 881edd95..b492f32b 100644
+index 15567f88..c61923c1 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -178,6 +178,7 @@ initialize_server_options(ServerOptions *options)
+@@ -194,6 +194,7 @@ initialize_server_options(ServerOptions *options)
  	 */
  	options->pam_service_per_authmethod = 1;
  #endif
@@ -207,23 +215,23 @@ index 881edd95..b492f32b 100644
  }
  
  /* Returns 1 if a string option is unset or set to "none" or 0 otherwise. */
-@@ -459,6 +460,7 @@ typedef enum {
- 	sAuthenticationMethods, sHostKeyAgent, sPermitUserRC,
+@@ -538,6 +539,7 @@ typedef enum {
  	sStreamLocalBindMask, sStreamLocalBindUnlink,
  	sAllowStreamLocalForwarding, sFingerprintHash, sDisableForwarding,
+ 	sExposeAuthInfo, sRDomain,
 +	sPubKeyPlugin,
  	sDeprecated, sIgnore, sUnsupported
  } ServerOpCodes;
  
-@@ -641,6 +643,7 @@ static struct {
- 	{ "allowstreamlocalforwarding", sAllowStreamLocalForwarding, SSHCFG_ALL },
- 	{ "fingerprinthash", sFingerprintHash, SSHCFG_GLOBAL },
- 	{ "disableforwarding", sDisableForwarding, SSHCFG_ALL },
+@@ -725,6 +727,7 @@ static struct {
+ 	{ "exposeauthinfo", sExposeAuthInfo, SSHCFG_ALL },
+ 	{ "rdomain", sRDomain, SSHCFG_ALL },
+ 	{ "casignaturealgorithms", sCASignatureAlgorithms, SSHCFG_ALL },
 +	{ "pubkeyplugin", sPubKeyPlugin, SSHCFG_ALL },
  	{ NULL, sBadOption, 0 }
  };
  
-@@ -1964,6 +1967,18 @@ process_server_config_line(ServerOptions *options, char *line,
+@@ -2277,6 +2280,18 @@ process_server_config_line(ServerOptions *options, char *line,
  		}
  		break;
  
@@ -243,17 +251,18 @@ index 881edd95..b492f32b 100644
  	case sIgnore:
  	case sUnsupported:
 diff --git a/servconf.h b/servconf.h
-index 729819e7..4197ffde 100644
+index 77743737..72f0c42b 100644
 --- a/servconf.h
 +++ b/servconf.h
-@@ -201,6 +201,7 @@ typedef struct {
- #endif
- 
+@@ -222,6 +222,8 @@ typedef struct {
  	int	fingerprint_hash;
+ 	int	expose_userauth_info;
+ 	u_int64_t timing_secret;
++
 +	char   *pubkey_plugin;
  }       ServerOptions;
  
  /* Information about the incoming connection as used by Match */
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0020-Compatibility-fix-for-ListenAddress.patch b/openssh/Patches/0020-Compatibility-fix-for-ListenAddress.patch
index f52940b..2394c65 100644
--- a/openssh/Patches/0020-Compatibility-fix-for-ListenAddress.patch
+++ b/openssh/Patches/0020-Compatibility-fix-for-ListenAddress.patch
@@ -1,4 +1,4 @@
-From 4b48c7d021681a1e5b2d44dd0c5cad31238b8083 Mon Sep 17 00:00:00 2001
+From d9ce008f4d66b1abe8d13a14fd4d210ec288a098 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Mon, 3 Aug 2015 17:27:41 -0700
 Subject: [PATCH 20/34] Compatibility fix for "ListenAddress ::"
@@ -6,38 +6,36 @@ Subject: [PATCH 20/34] Compatibility fix for "ListenAddress ::"
 In SunSSH, a config that specifies only "ListenAddress ::" in
 fact will listen on both IPv4 and IPv6.
 ---
- servconf.c | 15 +++++++++++++--
- 1 file changed, 13 insertions(+), 2 deletions(-)
+ servconf.c | 13 ++++++++++++-
+ 1 file changed, 12 insertions(+), 1 deletion(-)
 
 diff --git a/servconf.c b/servconf.c
-index b492f32b..1501af6a 100644
+index c61923c1..6c1df5ac 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -763,11 +763,22 @@ process_queued_listen_addrs(ServerOptions *options)
- 		options->address_family = AF_UNSPEC;
+@@ -928,10 +928,21 @@ process_queued_listen_addrs(ServerOptions *options)
  
  	for (i = 0; i < options->num_queued_listens; i++) {
--		add_listen_addr(options, options->queued_listen_addrs[i],
--		    options->queued_listen_ports[i]);
+ 		qla = &options->queued_listen_addrs[i];
+-		add_listen_addr(options, qla->addr, qla->rdomain, qla->port);
 +		/*
 +		 * To retain backwards compat with SunSSH, convert any listener
 +		 * on :: into a listener of unspecified AF (so it listens on
 +		 * v4 too)
 +		 */
-+		if (strcmp(options->queued_listen_addrs[i], "::") == 0) {
-+			add_listen_addr(options, NULL,
-+			    options->queued_listen_ports[i]);
++		if (strcmp(qla->addr, "::") == 0) {
++			add_listen_addr(options, NULL, qla->rdomain, qla->port);
 +		} else {
-+			add_listen_addr(options, options->queued_listen_addrs[i],
-+			    options->queued_listen_ports[i]);
++			add_listen_addr(options, qla->addr, qla->rdomain,
++			    qla->port);
 +		}
- 		free(options->queued_listen_addrs[i]);
- 		options->queued_listen_addrs[i] = NULL;
+ 		free(qla->addr);
+ 		free(qla->rdomain);
  	}
 +
  	free(options->queued_listen_addrs);
  	options->queued_listen_addrs = NULL;
- 	free(options->queued_listen_ports);
+ 	options->num_queued_listens = 0;
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0021-Try-to-create-privsep-chroot-dir-if-it-doesn-t-exist.patch b/openssh/Patches/0021-Try-to-create-privsep-chroot-dir-if-it-doesn-t-exist.patch
index dcd9f5b..e36a9c4 100644
--- a/openssh/Patches/0021-Try-to-create-privsep-chroot-dir-if-it-doesn-t-exist.patch
+++ b/openssh/Patches/0021-Try-to-create-privsep-chroot-dir-if-it-doesn-t-exist.patch
@@ -1,4 +1,4 @@
-From e68e88d2de7449b53c98ad7fc3e1ff169313bef3 Mon Sep 17 00:00:00 2001
+From 3e1a810baf1b1cb1e17d7ec30d00f66ba6ac9aae Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Wed, 5 Aug 2015 12:25:15 -0700
 Subject: [PATCH 21/34] Try to create privsep chroot dir if it doesn't exist
@@ -9,12 +9,12 @@ Subject: [PATCH 21/34] Try to create privsep chroot dir if it doesn't exist
  1 file changed, 22 insertions(+), 3 deletions(-)
 
 diff --git a/sshd.c b/sshd.c
-index e460c238..67171704 100644
+index 994b7c9e..e09f3934 100644
 --- a/sshd.c
 +++ b/sshd.c
-@@ -1762,11 +1762,30 @@ main(int ac, char **av)
+@@ -1870,11 +1870,30 @@ main(int ac, char **av)
  
- 	if (use_privsep) {
+ 	if (privsep_chroot) {
  		struct stat st;
 +		int rc;
  
@@ -47,5 +47,5 @@ index e460c238..67171704 100644
  #ifdef HAVE_CYGWIN
  		if (check_ntsec(_PATH_PRIVSEP_CHROOT_DIR) &&
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0022-Add-SMF-manifest-and-method-and-install-them.patch b/openssh/Patches/0022-Add-SMF-manifest-and-method-and-install-them.patch
index ecd1845..d0ce1ff 100644
--- a/openssh/Patches/0022-Add-SMF-manifest-and-method-and-install-them.patch
+++ b/openssh/Patches/0022-Add-SMF-manifest-and-method-and-install-them.patch
@@ -1,21 +1,21 @@
-From 3c7978e563bb39fa62d9a252b4968bacc5e9dc7b Mon Sep 17 00:00:00 2001
+From 617a438c0e7f5c0538f7c87fd330aae40459f0a8 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Fri, 7 Aug 2015 12:19:47 -0700
 Subject: [PATCH 22/34] Add SMF manifest and method, and install them
 
 ---
  Makefile.in      |   6 ++
- smf/manifest.xml | 169 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
- smf/method.sh    | 121 +++++++++++++++++++++++++++++++++++++++
+ smf/manifest.xml | 169 +++++++++++++++++++++++++++++++++++++++++++++++
+ smf/method.sh    | 121 +++++++++++++++++++++++++++++++++
  3 files changed, 296 insertions(+)
  create mode 100644 smf/manifest.xml
  create mode 100644 smf/method.sh
 
 diff --git a/Makefile.in b/Makefile.in
-index 47dbceff..1ab8bc90 100644
+index a73ef0f1..08890c53 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -27,6 +27,8 @@ SFTP_SERVER=$(libexecdir)/sftp-server
+@@ -25,6 +25,8 @@ SFTP_SERVER=$(libexecdir)/sftp-server
  SSH_KEYSIGN=$(libexecdir)/ssh-keysign
  SSH_PKCS11_HELPER=$(libexecdir)/ssh-pkcs11-helper
  ROOTDLIBDIR64=$(DESTDIR)/usr/lib/dtrace/64
@@ -24,7 +24,7 @@ index 47dbceff..1ab8bc90 100644
  PRIVSEP_PATH=@PRIVSEP_PATH@
  SSH_PRIVSEP_USER=@SSH_PRIVSEP_USER@
  STRIP_OPT=@STRIP_OPT@
-@@ -364,6 +366,10 @@ install-files:
+@@ -386,6 +388,10 @@ install-files:
  	$(INSTALL) -m 644 ssh-keysign.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/ssh-keysign.1m
  	$(INSTALL) -m 644 ssh-pkcs11-helper.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/ssh-pkcs11-helper.1m
  	mkdir -p $(ROOTDLIBDIR64) && cp $(srcdir)/sftp64.d $(ROOTDLIBDIR64)/sftp64.d
@@ -34,7 +34,7 @@ index 47dbceff..1ab8bc90 100644
 +	$(INSTALL) -m 444 smf/manifest.xml $(SMFNETMANIDIR)/ssh.xml
  
  install-sysconf:
- 	if [ ! -d $(DESTDIR)$(sysconfdir) ]; then \
+ 	$(MKDIR_P) $(DESTDIR)$(sysconfdir)
 diff --git a/smf/manifest.xml b/smf/manifest.xml
 new file mode 100644
 index 00000000..50452966
@@ -340,5 +340,5 @@ index 00000000..e91ed553
 +exit $?
 \ No newline at end of file
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0023-Make-default-sshd_config-more-like-the-old-illumos-o.patch b/openssh/Patches/0023-Make-default-sshd_config-more-like-the-old-illumos-o.patch
index 4625d92..31b6744 100644
--- a/openssh/Patches/0023-Make-default-sshd_config-more-like-the-old-illumos-o.patch
+++ b/openssh/Patches/0023-Make-default-sshd_config-more-like-the-old-illumos-o.patch
@@ -1,4 +1,4 @@
-From adfd525ca0916f719609b3d7c08ceab16235b61d Mon Sep 17 00:00:00 2001
+From 9e31dd005d4dccc4fd733bee75f42cf0a63d3243 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Fri, 7 Aug 2015 13:24:58 -0700
 Subject: [PATCH 23/34] Make default sshd_config more like the old illumos one
@@ -8,7 +8,7 @@ Subject: [PATCH 23/34] Make default sshd_config more like the old illumos one
  1 file changed, 23 insertions(+), 21 deletions(-)
 
 diff --git a/sshd_config b/sshd_config
-index 00e5a728..62027108 100644
+index 2c48105f..d8e5e74b 100644
 --- a/sshd_config
 +++ b/sshd_config
 @@ -10,7 +10,7 @@
@@ -20,7 +20,7 @@ index 00e5a728..62027108 100644
  #AddressFamily any
  #ListenAddress 0.0.0.0
  #ListenAddress ::
-@@ -24,13 +24,13 @@
+@@ -23,13 +23,13 @@
  #RekeyLimit default none
  
  # Logging
@@ -37,7 +37,7 @@ index 00e5a728..62027108 100644
  #StrictModes yes
  #MaxAuthTries 6
  #MaxSessions 10
-@@ -55,8 +55,8 @@ AuthorizedKeysFile	.ssh/authorized_keys
+@@ -54,8 +54,8 @@ AuthorizedKeysFile	.ssh/authorized_keys
  #IgnoreRhosts yes
  
  # To disable tunneled clear text passwords, change to no here!
@@ -48,7 +48,7 @@ index 00e5a728..62027108 100644
  
  # Change to no to disable s/key passwords
  #ChallengeResponseAuthentication yes
-@@ -73,26 +73,28 @@ AuthorizedKeysFile	.ssh/authorized_keys
+@@ -72,26 +72,28 @@ AuthorizedKeysFile	.ssh/authorized_keys
  #GSSAPIStrictAcceptorCheck yes
  #GSSAPIKeyExchange no
  
@@ -90,8 +90,8 @@ index 00e5a728..62027108 100644
 +PrintLastLog no
 +
  #TCPKeepAlive yes
- #UseLogin no
- #UsePrivilegeSeparation sandbox
+ #PermitUserEnvironment no
+ #Compression delayed
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0024-Add-with-key-dir-configure-option-to-place-SSH-host-.patch b/openssh/Patches/0024-Add-with-key-dir-configure-option-to-place-SSH-host-.patch
index be4556d..220b2a8 100644
--- a/openssh/Patches/0024-Add-with-key-dir-configure-option-to-place-SSH-host-.patch
+++ b/openssh/Patches/0024-Add-with-key-dir-configure-option-to-place-SSH-host-.patch
@@ -1,4 +1,4 @@
-From d49e2f6e769b21d7f04e590a82b88f89fdda066d Mon Sep 17 00:00:00 2001
+From 2d471a240301ac0dfde85b736e32f9d8fdda9fd5 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Fri, 7 Aug 2015 13:32:53 -0700
 Subject: [PATCH 24/34] Add --with-key-dir configure option to place SSH host
@@ -7,14 +7,14 @@ Subject: [PATCH 24/34] Add --with-key-dir configure option to place SSH host
 ---
  Makefile.in  | 12 +++++++-----
  configure.ac | 16 ++++++++++++++++
- pathnames.h  | 19 +++++++++++++------
- 3 files changed, 36 insertions(+), 11 deletions(-)
+ pathnames.h  | 20 ++++++++++++++------
+ 3 files changed, 37 insertions(+), 11 deletions(-)
 
 diff --git a/Makefile.in b/Makefile.in
-index 1ab8bc90..3a2a840d 100644
+index 08890c53..98e0e124 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -18,6 +18,7 @@ sysconfdir=@sysconfdir@
+@@ -16,6 +16,7 @@ sysconfdir=@sysconfdir@
  piddir=@piddir@
  srcdir=@srcdir@
  top_srcdir=@top_srcdir@
@@ -22,7 +22,7 @@ index 1ab8bc90..3a2a840d 100644
  
  DESTDIR=
  VPATH=@srcdir@
-@@ -130,11 +131,11 @@ PATHSUBS	= \
+@@ -138,11 +139,11 @@ PATHSUBS	= \
  	-e 's|/etc/ssh/sshd_config|$(sysconfdir)/sshd_config|g' \
  	-e 's|/usr/libexec|$(libexecdir)|g' \
  	-e 's|/etc/shosts.equiv|$(sysconfdir)/shosts.equiv|g' \
@@ -39,19 +39,19 @@ index 1ab8bc90..3a2a840d 100644
  	-e 's|/var/run/sshd.pid|$(piddir)/sshd.pid|g' \
  	-e 's|/etc/moduli|$(sysconfdir)/moduli|g' \
  	-e 's|/etc/ssh/moduli|$(sysconfdir)/moduli|g' \
-@@ -370,6 +371,7 @@ install-files:
+@@ -392,6 +393,7 @@ install-files:
  	$(srcdir)/mkinstalldirs $(SMFNETMANIDIR)
  	$(INSTALL) -m 555 smf/method.sh $(SMFMETHODDIR)/sshd
  	$(INSTALL) -m 444 smf/manifest.xml $(SMFNETMANIDIR)/ssh.xml
 +	mkdir -p $(DESTDIR)$(keydir)
  
  install-sysconf:
- 	if [ ! -d $(DESTDIR)$(sysconfdir) ]; then \
+ 	$(MKDIR_P) $(DESTDIR)$(sysconfdir)
 diff --git a/configure.ac b/configure.ac
-index 1635897c..c7a8e662 100644
+index 59fdf6ce..5223563d 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -4780,6 +4780,20 @@ AC_DEFINE_UNQUOTED([_PATH_SSH_PIDDIR], ["$piddir"],
+@@ -5002,6 +5002,20 @@ AC_DEFINE_UNQUOTED([_PATH_SSH_PIDDIR], ["$piddir"],
  	[Specify location of ssh.pid])
  AC_SUBST([piddir])
  
@@ -72,7 +72,7 @@ index 1635897c..c7a8e662 100644
  dnl allow user to disable some login recording features
  AC_ARG_ENABLE([lastlog],
  	[  --disable-lastlog       disable use of lastlog even if detected [no]],
-@@ -5085,12 +5099,14 @@ G=`eval echo ${piddir}` ; G=`eval echo ${G}`
+@@ -5311,12 +5325,14 @@ G=`eval echo ${piddir}` ; G=`eval echo ${G}`
  H=`eval echo ${PRIVSEP_PATH}` ; H=`eval echo ${H}`
  I=`eval echo ${user_path}` ; I=`eval echo ${I}`
  J=`eval echo ${superuser_path}` ; J=`eval echo ${J}`
@@ -88,7 +88,7 @@ index 1635897c..c7a8e662 100644
  echo "                      Manual pages: $F"
  echo "                          PID file: $G"
 diff --git a/pathnames.h b/pathnames.h
-index f5e11ab1..7915c405 100644
+index cb44caa4..61214e07 100644
 --- a/pathnames.h
 +++ b/pathnames.h
 @@ -22,6 +22,10 @@
@@ -102,14 +102,14 @@ index f5e11ab1..7915c405 100644
  /*
   * System-wide file containing host keys of known hosts.  This file should be
   * world-readable.
-@@ -36,12 +40,15 @@
+@@ -36,12 +40,16 @@
   */
  #define _PATH_SERVER_CONFIG_FILE	SSHDIR "/sshd_config"
  #define _PATH_HOST_CONFIG_FILE		SSHDIR "/ssh_config"
--#define _PATH_HOST_KEY_FILE		SSHDIR "/ssh_host_key"
 -#define _PATH_HOST_DSA_KEY_FILE		SSHDIR "/ssh_host_dsa_key"
 -#define _PATH_HOST_ECDSA_KEY_FILE	SSHDIR "/ssh_host_ecdsa_key"
 -#define _PATH_HOST_ED25519_KEY_FILE	SSHDIR "/ssh_host_ed25519_key"
+-#define _PATH_HOST_XMSS_KEY_FILE	SSHDIR "/ssh_host_xmss_key"
 -#define _PATH_HOST_RSA_KEY_FILE		SSHDIR "/ssh_host_rsa_key"
 -#define _PATH_DH_MODULI			SSHDIR "/moduli"
 +
@@ -117,6 +117,7 @@ index f5e11ab1..7915c405 100644
 +#define _PATH_HOST_DSA_KEY_FILE		SSHKEYDIR "/ssh_host_dsa_key"
 +#define _PATH_HOST_ECDSA_KEY_FILE	SSHKEYDIR "/ssh_host_ecdsa_key"
 +#define _PATH_HOST_ED25519_KEY_FILE	SSHKEYDIR "/ssh_host_ed25519_key"
++#define _PATH_HOST_XMSS_KEY_FILE	SSHKEYDIR "/ssh_host_xmss_key"
 +#define _PATH_HOST_RSA_KEY_FILE		SSHKEYDIR "/ssh_host_rsa_key"
 +#define _PATH_DH_MODULI			SSHKEYDIR "/moduli"
 +/* Backwards compatibility */
@@ -125,5 +126,5 @@ index f5e11ab1..7915c405 100644
  #ifndef _PATH_SSH_PROGRAM
  #define _PATH_SSH_PROGRAM		"/usr/bin/ssh"
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0025-Re-enable-DSA-keys-for-pk-auth.patch b/openssh/Patches/0025-Re-enable-DSA-keys-for-pk-auth.patch
index 74f3874..fcb8701 100644
--- a/openssh/Patches/0025-Re-enable-DSA-keys-for-pk-auth.patch
+++ b/openssh/Patches/0025-Re-enable-DSA-keys-for-pk-auth.patch
@@ -1,4 +1,4 @@
-From 2e157a62ac6bb1ab68f65fe8cc62c125fa485edc Mon Sep 17 00:00:00 2001
+From a258627db67257db7a9a3af120fe6b34786c0709 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Wed, 19 Aug 2015 11:35:32 -0700
 Subject: [PATCH 25/34] Re-enable DSA keys for pk auth
@@ -10,12 +10,12 @@ Subject: [PATCH 25/34] Re-enable DSA keys for pk auth
  3 files changed, 7 insertions(+), 3 deletions(-)
 
 diff --git a/myproposal.h b/myproposal.h
-index 072e36ec..f6322a73 100644
+index 27b4a15a..0df91f5b 100644
 --- a/myproposal.h
 +++ b/myproposal.h
-@@ -108,11 +108,13 @@
- 	HOSTKEY_ECDSA_CERT_METHODS \
- 	"ssh-ed25519-cert-v01@openssh.com," \
+@@ -110,11 +110,13 @@
+ 	"rsa-sha2-512-cert-v01@openssh.com," \
+ 	"rsa-sha2-256-cert-v01@openssh.com," \
  	"ssh-rsa-cert-v01@openssh.com," \
 +	"ssh-dss-cert-v01@openssh.com," \
  	HOSTKEY_ECDSA_METHODS \
@@ -29,35 +29,35 @@ index 072e36ec..f6322a73 100644
  /* the actual algorithms */
  
 diff --git a/ssh_config.4 b/ssh_config.4
-index 4492ecaf..dadd092a 100644
+index 22cde6d3..62e407d7 100644
 --- a/ssh_config.4
 +++ b/ssh_config.4
-@@ -1314,8 +1314,9 @@ ecdsa-sha2-nistp384-cert-v01@openssh.com,
- ecdsa-sha2-nistp521-cert-v01@openssh.com,
+@@ -1315,8 +1315,9 @@ ecdsa-sha2-nistp521-cert-v01@openssh.com,
  ssh-ed25519-cert-v01@openssh.com,
+ rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,
  ssh-rsa-cert-v01@openssh.com,
 +ssh-dss-cert-v01@openssh.com,
  ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
+-ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
 +ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss
  .Ed
  .Pp
  The list of available key types may also be obtained using
 diff --git a/sshd_config.4 b/sshd_config.4
-index de03ac5e..6a6f940b 100644
+index dce30d07..3dc39cca 100644
 --- a/sshd_config.4
 +++ b/sshd_config.4
-@@ -1312,8 +1312,9 @@ ecdsa-sha2-nistp384-cert-v01@openssh.com,
- ecdsa-sha2-nistp521-cert-v01@openssh.com,
+@@ -1438,8 +1438,9 @@ ecdsa-sha2-nistp521-cert-v01@openssh.com,
  ssh-ed25519-cert-v01@openssh.com,
+ rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,
  ssh-rsa-cert-v01@openssh.com,
 +ssh-dss-cert-v01@openssh.com,
  ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
--ssh-ed25519,ssh-rsa
+-ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
 +ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss
  .Ed
  .Pp
  The list of available key types may also be obtained using
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0026-Don-t-use-krb5-config-to-check-for-GSSAPI-on-Illumos.patch b/openssh/Patches/0026-Don-t-use-krb5-config-to-check-for-GSSAPI-on-Illumos.patch
index b08d7af..ac1651d 100644
--- a/openssh/Patches/0026-Don-t-use-krb5-config-to-check-for-GSSAPI-on-Illumos.patch
+++ b/openssh/Patches/0026-Don-t-use-krb5-config-to-check-for-GSSAPI-on-Illumos.patch
@@ -1,4 +1,4 @@
-From 1a9462ad1d73af0c20e31258bd501f5320ca01df Mon Sep 17 00:00:00 2001
+From 6d0fa9cc20675bd1cf0d39f893ad2ca9600768cb Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Fri, 21 Aug 2015 18:47:46 -0700
 Subject: [PATCH 26/34] Don't use krb5-config to check for GSSAPI on Illumos
@@ -8,10 +8,10 @@ Subject: [PATCH 26/34] Don't use krb5-config to check for GSSAPI on Illumos
  1 file changed, 6 insertions(+), 1 deletion(-)
 
 diff --git a/configure.ac b/configure.ac
-index c7a8e662..5e64db3b 100644
+index 5223563d..a956f1ff 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -4207,6 +4207,11 @@ AC_ARG_WITH([kerberos5],
+@@ -4429,6 +4429,11 @@ AC_ARG_WITH([kerberos5],
  		AC_PATH_TOOL([KRB5CONF], [krb5-config],
  			     [$KRB5ROOT/bin/krb5-config],
  			     [$KRB5ROOT/bin:$PATH])
@@ -23,7 +23,7 @@ index c7a8e662..5e64db3b 100644
  		if test -x $KRB5CONF ; then
  			K5CFLAGS="`$KRB5CONF --cflags`"
  			K5LIBS="`$KRB5CONF --libs`"
-@@ -4248,7 +4253,7 @@ AC_ARG_WITH([kerberos5],
+@@ -4470,7 +4475,7 @@ AC_ARG_WITH([kerberos5],
  					 AC_CHECK_LIB([des], [des_cbc_encrypt],
  					   [K5LIBS="$K5LIBS -ldes"])
  				       ], [ AC_MSG_RESULT([no])
@@ -33,5 +33,5 @@ index c7a8e662..5e64db3b 100644
  			AC_SEARCH_LIBS([dn_expand], [resolv])
  
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0027-Set-default-sshd-options-based-on-etc-default-login.patch b/openssh/Patches/0027-Set-default-sshd-options-based-on-etc-default-login.patch
index 77d5075..33d7ba6 100644
--- a/openssh/Patches/0027-Set-default-sshd-options-based-on-etc-default-login.patch
+++ b/openssh/Patches/0027-Set-default-sshd-options-based-on-etc-default-login.patch
@@ -1,20 +1,20 @@
-From 846518269f65af1f02714c311eb33dfa4cb291b4 Mon Sep 17 00:00:00 2001
+From b86dde001c3c6726390ef6d114f6ff07866c0187 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Mon, 24 Aug 2015 18:57:27 -0700
 Subject: [PATCH 27/34] Set default sshd options based on /etc/default/login
 
 ---
  pathnames.h   |  1 +
- servconf.c    | 61 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- sshd_config.4 | 17 +++++++++++++++--
- 3 files changed, 77 insertions(+), 2 deletions(-)
+ servconf.c    | 61 +++++++++++++++++++++++++++++++++++++++++++++++++++
+ sshd_config.4 | 15 ++++++++++++-
+ 3 files changed, 76 insertions(+), 1 deletion(-)
 
 diff --git a/pathnames.h b/pathnames.h
-index 7915c405..40284a1f 100644
+index 61214e07..46a37fe3 100644
 --- a/pathnames.h
 +++ b/pathnames.h
-@@ -47,6 +47,7 @@
- #define _PATH_HOST_ED25519_KEY_FILE	SSHKEYDIR "/ssh_host_ed25519_key"
+@@ -48,6 +48,7 @@
+ #define _PATH_HOST_XMSS_KEY_FILE	SSHKEYDIR "/ssh_host_xmss_key"
  #define _PATH_HOST_RSA_KEY_FILE		SSHKEYDIR "/ssh_host_rsa_key"
  #define _PATH_DH_MODULI			SSHKEYDIR "/moduli"
 +#define _PATH_DEFAULT_LOGIN		ETCDIR "/default/login"
@@ -22,10 +22,10 @@ index 7915c405..40284a1f 100644
  #define _PATH_DH_PRIMES			SSHDIR "/primes"
  
 diff --git a/servconf.c b/servconf.c
-index 1501af6a..91f8c942 100644
+index 6c1df5ac..41f10df7 100644
 --- a/servconf.c
 +++ b/servconf.c
-@@ -30,6 +30,7 @@
+@@ -36,6 +36,7 @@
  #include <unistd.h>
  #include <limits.h>
  #include <stdarg.h>
@@ -33,7 +33,7 @@ index 1501af6a..91f8c942 100644
  #include <errno.h>
  #ifdef HAVE_UTIL_H
  #include <util.h>
-@@ -188,6 +189,64 @@ option_clear_or_none(const char *o)
+@@ -204,6 +205,64 @@ option_clear_or_none(const char *o)
  	return o == NULL || strcasecmp(o, "none") == 0;
  }
  
@@ -98,7 +98,7 @@ index 1501af6a..91f8c942 100644
  static void
  assemble_algorithms(ServerOptions *o)
  {
-@@ -216,6 +275,8 @@ fill_default_server_options(ServerOptions *options)
+@@ -284,6 +343,8 @@ fill_default_server_options(ServerOptions *options)
  		options->use_pam = 0;
  #endif
  
@@ -108,10 +108,10 @@ index 1501af6a..91f8c942 100644
  	if (options->num_host_key_files == 0) {
  		/* fill default hostkeys for protocols */
 diff --git a/sshd_config.4 b/sshd_config.4
-index 6a6f940b..0b2393dd 100644
+index 3dc39cca..c652f116 100644
 --- a/sshd_config.4
 +++ b/sshd_config.4
-@@ -1099,7 +1099,13 @@ Specifies the maximum number of authentication attempts permitted per
+@@ -1173,7 +1173,13 @@ Specifies the maximum number of authentication attempts permitted per
  connection.
  Once the number of failures reaches half this value,
  additional failures are logged.
@@ -126,12 +126,10 @@ index 6a6f940b..0b2393dd 100644
  .It Cm MaxSessions
  Specifies the maximum number of open shell, login or subsystem (e.g. sftp)
  sessions permitted per network connection.
-@@ -1150,7 +1156,14 @@ The default is
- When password authentication is allowed, it specifies whether the
+@@ -1225,6 +1231,13 @@ When password authentication is allowed, it specifies whether the
  server allows login to accounts with empty password strings.
  The default is
--.Cm no .
-+.Cm no
+ .Cm no .
 +unless
 +.Dq PASSREQ=YES
 +is present in
@@ -139,9 +137,9 @@ index 6a6f940b..0b2393dd 100644
 +(see
 +.Xr login 1
 +).
- .It Cm PermitOpen
- Specifies the destinations to which TCP port forwarding is permitted.
- The forwarding specification must be one of the following forms:
+ .It Cm PermitListen
+ Specifies the addresses/ports on which a remote TCP port forwarding may listen.
+ The listen specification must be one of the following forms:
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0028-Compatibility-for-SunSSH_1.5-should-include-old-DH-K.patch b/openssh/Patches/0028-Compatibility-for-SunSSH_1.5-should-include-old-DH-K.patch
index 231965d..75dec16 100644
--- a/openssh/Patches/0028-Compatibility-for-SunSSH_1.5-should-include-old-DH-K.patch
+++ b/openssh/Patches/0028-Compatibility-for-SunSSH_1.5-should-include-old-DH-K.patch
@@ -1,4 +1,4 @@
-From 17a12b9efaef1f92d91b51dd8fbaa452aa138451 Mon Sep 17 00:00:00 2001
+From 9a85d3cda8e55593e5783097de58b397212d8c1b Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Fri, 4 Sep 2015 10:38:28 -0700
 Subject: [PATCH 28/34] Compatibility for SunSSH_1.5* should include old DH KEx
@@ -11,28 +11,69 @@ dh-group14 and -group1 algorithms.
 Without this, an old SunSSH client cannot connect to our
 new daemon.
 ---
- compat.c | 31 ++++++++++++++++++++++++++++++-
- 1 file changed, 30 insertions(+), 1 deletion(-)
+ compat.c | 86 ++++++++++++++++++++++++++++++++++++++++++++++++++++----
+ 1 file changed, 81 insertions(+), 5 deletions(-)
 
 diff --git a/compat.c b/compat.c
-index 69a104fb..55fb3d93 100644
+index 0624dc6d..5cfbf28a 100644
 --- a/compat.c
 +++ b/compat.c
-@@ -92,7 +92,9 @@ compat_datafellows(const char *version)
- 		  "OpenSSH_3.0*,"
- 		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
- 		{ "OpenSSH_3.*",	SSH_OLD_FORWARD_ADDR },
--		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
-+		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
-+					SSH_OLD_DHGEX},
-+		{ "Sun_SSH_1.5*",	SSH_OLD_DHGEX},
- 		{ "OpenSSH_4*",		0 },
- 		{ "OpenSSH_5*",		SSH_NEW_OPENSSH|SSH_BUG_DYNAMIC_RPORT},
- 		{ "OpenSSH_6.6.1*",	SSH_NEW_OPENSSH},
-@@ -279,6 +281,31 @@ filter_proposal(char *proposal, const char *filter)
- 	return fix_prop;
+@@ -55,7 +55,8 @@ compat_datafellows(const char *version)
+ 					SSH_BUG_SIGTYPE},
+ 		{ "OpenSSH_3.*",	SSH_OLD_FORWARD_ADDR|SSH_BUG_SIGTYPE },
+ 		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
+-					SSH_BUG_SIGTYPE},
++					SSH_BUG_SIGTYPE|SSH_OLD_DHGEX},
++		{ "Sun_SSH_1.5*",	SSH_BUG_SIGTYPE|SSH_OLD_DHGEX},
+ 		{ "OpenSSH_2*,"
+ 		  "OpenSSH_3*,"
+ 		  "OpenSSH_4*",		SSH_BUG_SIGTYPE },
+@@ -183,6 +184,81 @@ proto_spec(const char *spec)
+ 	return ret;
  }
  
++/*
++ * Filters a proposal string, excluding any algorithm matching the 'filter'
++ * pattern list.
++ */
++static char *
++filter_proposal(char *proposal, const char *filter)
++{
++	struct sshbuf *b;
++	int rc;
++	char *orig_prop, *fix_prop;
++	char *cp, *tmp;
++
++	if ((b = sshbuf_new()) == NULL)
++		fatal("%s: sshbuf_new failed", __func__);
++
++	tmp = orig_prop = xstrdup(proposal);
++	while ((cp = strsep(&tmp, ",")) != NULL) {
++		if (match_pattern_list(cp, filter, 0) != 1) {
++			if (sshbuf_len(b) > 0) {
++				if ((rc = sshbuf_put_u8(b, ','))) {
++					fatal("%s: sshbuf_put_u8 returned %d",
++					    __func__, rc);
++				}
++			}
++			if ((rc = sshbuf_put(b, cp, strlen(cp)))) {
++				fatal("%s: sshbuf_put returned %d",
++				    __func__, rc);
++			}
++		} else
++			debug2("Compat: skipping algorithm \"%s\"", cp);
++	}
++	if ((rc = sshbuf_put_u8(b, 0)))
++		fatal("%s: sshbuf_put_u8 returned %d", __func__, rc);
++	fix_prop = xstrdup((char *)sshbuf_ptr(b));
++	if (fix_prop == NULL)
++		fatal("%s: xstrdup failed", __func__);
++	sshbuf_free(b);
++	free(orig_prop);
++
++	return fix_prop;
++}
++
 +/*
 + * Adds an algorithm to the end of a proposal list, only if the algorithm is
 + * not already present.
@@ -40,20 +81,28 @@ index 69a104fb..55fb3d93 100644
 +static char *
 +append_proposal(char *proposal, const char *append)
 +{
-+	Buffer b;
++	struct sshbuf *b;
 +	char *fix_prop;
++	int rc;
 +
 +	if (strstr(proposal, append) != NULL)
 +		return proposal;
 +
-+	buffer_init(&b);
-+	buffer_append(&b, proposal, strlen(proposal));
-+	if (buffer_len(&b) > 0)
-+		buffer_append(&b, ",", 1);
-+	buffer_append(&b, append, strlen(append));
-+	buffer_append(&b, "\0", 1);
-+	fix_prop = xstrdup((char *)buffer_ptr(&b));
-+	buffer_free(&b);
++	if ((b = sshbuf_new()) == NULL)
++		fatal("%s: sshbuf_new failed", __func__);
++	if ((rc = sshbuf_put(b, proposal, strlen(proposal))))
++		fatal("%s: sshbuf_put returned %d", __func__, rc);
++	if (sshbuf_len(b) > 0) {
++		if ((rc = sshbuf_put_u8(b, ',')))
++			fatal("%s: sshbuf_put_u8 returned %d", __func__, rc);
++	}
++	if ((rc = sshbuf_put(b, append, strlen(append))) ||
++	    (rc = sshbuf_put_u8(b, 0)))
++		fatal("%s: buffer error: %d", __func__, rc);
++	fix_prop = xstrdup((char *)sshbuf_ptr(b));
++	if (fix_prop == NULL)
++		fatal("%s: xstrdup failed", __func__);
++	sshbuf_free(b);
 +
 +	return fix_prop;
 +}
@@ -61,15 +110,21 @@ index 69a104fb..55fb3d93 100644
  char *
  compat_cipher_proposal(char *cipher_prop)
  {
-@@ -316,6 +343,8 @@ compat_kex_proposal(char *p)
+@@ -222,10 +298,10 @@ compat_kex_proposal(char *p)
+ 		    "curve25519-sha256@libssh.org")) == NULL)
+ 			fatal("match_filter_blacklist failed");
  	if ((datafellows & SSH_OLD_DHGEX) != 0) {
- 		p = filter_proposal(p, "diffie-hellman-group-exchange-sha256");
- 		p = filter_proposal(p, "diffie-hellman-group-exchange-sha1");
+-		if ((p = match_filter_blacklist(p,
+-		    "diffie-hellman-group-exchange-sha256,"
+-		    "diffie-hellman-group-exchange-sha1")) == NULL)
+-			fatal("match_filter_blacklist failed");
++		p = filter_proposal(p, "diffie-hellman-group-exchange-sha256");
++		p = filter_proposal(p, "diffie-hellman-group-exchange-sha1");
 +		p = append_proposal(p, "diffie-hellman-group14-sha1");
 +		p = append_proposal(p, "diffie-hellman-group1-sha1");
  	}
  	debug2("%s: compat KEX proposal: %s", __func__, p);
  	if (*p == '\0')
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0029-Accept-LANG-and-LC_-environment-variables-from-clien.patch b/openssh/Patches/0029-Accept-LANG-and-LC_-environment-variables-from-clien.patch
deleted file mode 100644
index 8fb1f70..0000000
--- a/openssh/Patches/0029-Accept-LANG-and-LC_-environment-variables-from-clien.patch
+++ /dev/null
@@ -1,171 +0,0 @@
-From baeb17eb76772a2dbbcc4d52a22ddfc405276db1 Mon Sep 17 00:00:00 2001
-From: Alex Wilson <alex.wilson@joyent.com>
-Date: Fri, 4 Sep 2015 11:04:30 -0700
-Subject: [PATCH 29/34] Accept LANG and LC_* environment variables from clients
- by default
-
-This preserves most of the old SunSSH locale negotiation
-behaviour (at least the parts that are most commonly used).
----
- servconf.c    | 27 +++++++++++++++++++++++++--
- session.c     | 25 +++++++++++++++++++++++--
- sshd_config   |  4 ++++
- sshd_config.4 | 13 ++++++++++++-
- 4 files changed, 64 insertions(+), 5 deletions(-)
-
-diff --git a/servconf.c b/servconf.c
-index 91f8c942..6f1f0068 100644
---- a/servconf.c
-+++ b/servconf.c
-@@ -150,7 +150,7 @@ initialize_server_options(ServerOptions *options)
- 	options->client_alive_interval = -1;
- 	options->client_alive_count_max = -1;
- 	options->num_authkeys_files = 0;
--	options->num_accept_env = 0;
-+	options->num_accept_env = -1;
- 	options->permit_tun = -1;
- 	options->num_permitted_opens = -1;
- 	options->adm_forced_command = NULL;
-@@ -400,6 +400,25 @@ fill_default_server_options(ServerOptions *options)
- 		options->max_sessions = DEFAULT_SESSIONS_MAX;
- 	if (options->use_dns == -1)
- 		options->use_dns = 0;
-+	if (options->num_accept_env == -1) {
-+		options->num_accept_env = 0;
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LANG");
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LC_ALL");
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LC_CTYPE");
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LC_COLLATE");
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LC_TIME");
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LC_NUMERIC");
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LC_MONETARY");
-+		options->accept_env[options->num_accept_env++] =
-+		    xstrdup("LC_MESSAGES");
-+	}
- 	if (options->client_alive_interval == -1)
- 		options->client_alive_interval = 0;
- 	if (options->client_alive_count_max == -1)
-@@ -1748,11 +1767,15 @@ process_server_config_line(ServerOptions *options, char *line,
- 			if (strchr(arg, '=') != NULL)
- 				fatal("%s line %d: Invalid environment name.",
- 				    filename, linenum);
-+			if (options->num_accept_env == -1)
-+				options->num_accept_env = 0;
- 			if (options->num_accept_env >= MAX_ACCEPT_ENV)
- 				fatal("%s line %d: too many allow env.",
- 				    filename, linenum);
- 			if (!*activep)
- 				continue;
-+			if (strcmp(arg, "none") == 0)
-+				continue;
- 			options->accept_env[options->num_accept_env++] =
- 			    xstrdup(arg);
- 		}
-@@ -2224,7 +2247,7 @@ copy_set_server_options(ServerOptions *dst, ServerOptions *src, int preauth)
- 	} \
- } while(0)
- #define M_CP_STRARRAYOPT(n, num_n) do {\
--	if (src->num_n != 0) { \
-+	if (src->num_n != 0 && src->num_n != -1) { \
- 		for (dst->num_n = 0; dst->num_n < src->num_n; dst->num_n++) \
- 			dst->n[dst->num_n] = xstrdup(src->n[dst->num_n]); \
- 	} \
-diff --git a/session.c b/session.c
-index 9586901e..13ee4bbe 100644
---- a/session.c
-+++ b/session.c
-@@ -860,6 +860,18 @@ child_set_env(char ***envp, u_int *envsizep, const char *name,
- }
- 
- /*
-+ * If the given environment variable is set in the daemon's environment,
-+ * push it into the new child as well. If it is unset, do nothing.
-+ */
-+static void
-+child_inherit_env(char ***envp, u_int *envsizep, const char *name)
-+{
-+	char *value;
-+	if ((value = getenv(name)) != NULL)
-+		child_set_env(envp, envsizep, name, value);
-+}
-+
-+/*
-  * Reads environment variables from the given file and adds/overrides them
-  * into the environment.  If the file does not exist, this does nothing.
-  * Otherwise, it must consist of empty lines, comments (line starts with '#')
-@@ -1022,6 +1034,16 @@ do_setup_env(Session *s, const char *shell)
- 	ssh_gssapi_do_child(&env, &envsize);
- #endif
- 
-+	/* Default to the system-wide locale/language settings. */
-+	child_inherit_env(&env, &envsize, "LANG");
-+	child_inherit_env(&env, &envsize, "LC_ALL");
-+	child_inherit_env(&env, &envsize, "LC_CTYPE");
-+	child_inherit_env(&env, &envsize, "LC_COLLATE");
-+	child_inherit_env(&env, &envsize, "LC_TIME");
-+	child_inherit_env(&env, &envsize, "LC_NUMERIC");
-+	child_inherit_env(&env, &envsize, "LC_MONETARY");
-+	child_inherit_env(&env, &envsize, "LC_MESSAGES");
-+
- 	/* Set basic environment. */
- 	for (i = 0; i < s->num_env; i++)
- 		child_set_env(&env, &envsize, s->env[i].name, s->env[i].val);
-@@ -1062,8 +1084,7 @@ do_setup_env(Session *s, const char *shell)
- 	/* Normal systems set SHELL by default. */
- 	child_set_env(&env, &envsize, "SHELL", shell);
- 
--	if (getenv("TZ"))
--		child_set_env(&env, &envsize, "TZ", getenv("TZ"));
-+	child_inherit_env(&env, &envsize, "TZ");
- 
- #ifdef PER_SESSION_XAUTHFILE
-         if (s->auth_file != NULL)
-diff --git a/sshd_config b/sshd_config
-index 62027108..9fcf2ca1 100644
---- a/sshd_config
-+++ b/sshd_config
-@@ -27,6 +27,10 @@ Port 22
- SyslogFacility AUTH
- LogLevel INFO
- 
-+# Use the client's locale/language settings
-+#AcceptEnv LANG LC_ALL LC_CTYPE LC_COLLATE LC_TIME LC_NUMERIC
-+#AcceptEnv LC_MONETARY LC_MESSAGES
-+
- # Authentication:
- 
- #LoginGraceTime 2m
-diff --git a/sshd_config.4 b/sshd_config.4
-index 0b2393dd..fbd9b1cd 100644
---- a/sshd_config.4
-+++ b/sshd_config.4
-@@ -85,7 +85,18 @@ directives.
- Be warned that some environment variables could be used to bypass restricted
- user environments.
- For this reason, care should be taken in the use of this directive.
--The default is not to accept any environment variables.
-+The default is to accept only
-+.Ev LANG
-+and the
-+.Ev LC_*
-+family of environment variables. If any
-+.Cm AcceptEnv
-+directives are present in your config file, they will replace this default
-+(ie, only the variables you list will be passed into the session's
-+.Xr environ 7
-+). You can also use an argument of
-+.Dq none
-+to specify that no environment variables should be passed.
- .It Cm AddressFamily
- Specifies which address family should be used by
- .Xr sshd 1M .
--- 
-2.11.0
-
diff --git a/openssh/Patches/0029-Accept-and-send-LANG-and-LC_-environment-variables-b.patch b/openssh/Patches/0029-Accept-and-send-LANG-and-LC_-environment-variables-b.patch
new file mode 100644
index 0000000..9ee6d29
--- /dev/null
+++ b/openssh/Patches/0029-Accept-and-send-LANG-and-LC_-environment-variables-b.patch
@@ -0,0 +1,263 @@
+From ae980b12d44a0cbeaea9478413888a8adbbf5291 Mon Sep 17 00:00:00 2001
+From: Alex Wilson <alex.wilson@joyent.com>
+Date: Fri, 4 Sep 2015 11:04:30 -0700
+Subject: [PATCH 29/34] Accept and send LANG and LC_* environment variables by
+ default
+
+This preserves most of the old SunSSH locale negotiation
+behaviour (at least the parts that are most commonly used).
+---
+ readconf.c    | 17 +++++++++++++++
+ readconf.h    |  1 +
+ servconf.c    | 59 +++++++++++++++++++++++++++++++++++++++++++++++++++
+ session.c     | 25 ++++++++++++++++++++--
+ ssh.c         |  2 ++
+ sshd.c        |  2 ++
+ sshd_config   |  4 ++++
+ sshd_config.4 | 15 ++++++++++++-
+ 8 files changed, 122 insertions(+), 3 deletions(-)
+
+diff --git a/readconf.c b/readconf.c
+index 9421e434..ee6ed916 100644
+--- a/readconf.c
++++ b/readconf.c
+@@ -2024,6 +2024,23 @@ fill_default_options_for_canonicalization(Options *options)
+ 		options->canonicalize_hostname = SSH_CANONICALISE_NO;
+ }
+ 
++void
++fill_early_default_options(Options *options)
++{
++	options->send_env = xrecallocarray(
++	    options->send_env, options->num_send_env,
++	    options->num_send_env + 8,
++	    sizeof(*options->send_env));
++	options->send_env[options->num_send_env++] = xstrdup("LANG");
++	options->send_env[options->num_send_env++] = xstrdup("LC_ALL");
++	options->send_env[options->num_send_env++] = xstrdup("LC_CTYPE");
++	options->send_env[options->num_send_env++] = xstrdup("LC_COLLATE");
++	options->send_env[options->num_send_env++] = xstrdup("LC_TIME");
++	options->send_env[options->num_send_env++] = xstrdup("LC_NUMERIC");
++	options->send_env[options->num_send_env++] = xstrdup("LC_MONETARY");
++	options->send_env[options->num_send_env++] = xstrdup("LC_MESSAGES");
++}
++
+ /*
+  * Called after processing other sources of option data, this fills those
+  * options for which no value has been specified with their default values.
+diff --git a/readconf.h b/readconf.h
+index 8abfc09c..e94e1477 100644
+--- a/readconf.h
++++ b/readconf.h
+@@ -213,6 +213,7 @@ typedef struct {
+ 
+ void     initialize_options(Options *);
+ void     fill_default_options(Options *);
++void	 fill_early_default_options(Options *);
+ void	 fill_default_options_for_canonicalization(Options *);
+ int	 process_config_line(Options *, struct passwd *, const char *,
+     const char *, char *, const char *, int, int *, int);
+diff --git a/servconf.c b/servconf.c
+index 41f10df7..c21bef1b 100644
+--- a/servconf.c
++++ b/servconf.c
+@@ -307,6 +307,22 @@ array_append(const char *file, const int line, const char *directive,
+ 	(*lp)++;
+ }
+ 
++static void
++array_delete(const char *file, const int line, const char *directive,
++    char ***array, u_int *lp, const char *s)
++{
++	u_int i, j;
++	for (i = 0; i < *lp; ++i) {
++		if (strcmp((*array)[i], s) == 0) {
++			free((*array)[i]);
++			for (j = i + 1; j < *lp; ++j) {
++				(*array)[j - 1] = (*array)[j];
++			}
++			(*lp)--;
++		}
++	}
++}
++
+ void
+ servconf_add_hostkey(const char *file, const int line,
+     ServerOptions *options, const char *path)
+@@ -329,6 +345,36 @@ servconf_add_hostcert(const char *file, const int line,
+ 	free(apath);
+ }
+ 
++void
++fill_early_default_server_options(ServerOptions *options)
++{
++	options->num_accept_env = 0;
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LANG");
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LC_ALL");
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LC_CTYPE");
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LC_COLLATE");
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LC_TIME");
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LC_NUMERIC");
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LC_MONETARY");
++	array_append("[default]", 0, "AcceptEnv",
++	    &options->accept_env, &options->num_accept_env,
++	    "LC_MESSAGES");
++}
++
+ void
+ fill_default_server_options(ServerOptions *options)
+ {
+@@ -2018,6 +2064,19 @@ process_server_config_line(ServerOptions *options, char *line,
+ 				    filename, linenum);
+ 			if (!*activep)
+ 				continue;
++			if (arg[0] == '-') {
++				array_delete(filename, linenum, "AcceptEnv",
++				    &options->accept_env,
++				    &options->num_accept_env,
++				    &arg[1]);
++				break;
++			}
++			if (strcmp(arg, "none") == 0) {
++				u_int j;
++				for (j = 0; j < options->num_accept_env; ++j)
++					free(options->accept_env[j]);
++				options->num_accept_env = 0;
++			}
+ 			array_append(filename, linenum, "AcceptEnv",
+ 			    &options->accept_env, &options->num_accept_env,
+ 			    arg);
+diff --git a/session.c b/session.c
+index 4003d91c..ad2aeea6 100644
+--- a/session.c
++++ b/session.c
+@@ -877,6 +877,18 @@ check_quietlogin(Session *s, const char *command)
+ 	return 0;
+ }
+ 
++/*
++ * If the given environment variable is set in the daemon's environment,
++ * push it into the new child as well. If it is unset, do nothing.
++ */
++static void
++child_inherit_env(char ***envp, u_int *envsizep, const char *name)
++{
++	char *value;
++	if ((value = getenv(name)) != NULL)
++		child_set_env(envp, envsizep, name, value);
++}
++
+ /*
+  * Reads environment variables from the given file and adds/overrides them
+  * into the environment.  If the file does not exist, this does nothing.
+@@ -1057,6 +1069,16 @@ do_setup_env(struct ssh *ssh, Session *s, const char *shell)
+ 	ssh_gssapi_do_child(&env, &envsize);
+ #endif
+ 
++	/* Default to the system-wide locale/language settings. */
++	child_inherit_env(&env, &envsize, "LANG");
++	child_inherit_env(&env, &envsize, "LC_ALL");
++	child_inherit_env(&env, &envsize, "LC_CTYPE");
++	child_inherit_env(&env, &envsize, "LC_COLLATE");
++	child_inherit_env(&env, &envsize, "LC_TIME");
++	child_inherit_env(&env, &envsize, "LC_NUMERIC");
++	child_inherit_env(&env, &envsize, "LC_MONETARY");
++	child_inherit_env(&env, &envsize, "LC_MESSAGES");
++
+ 	/* Set basic environment. */
+ 	for (i = 0; i < s->num_env; i++)
+ 		child_set_env(&env, &envsize, s->env[i].name, s->env[i].val);
+@@ -1097,8 +1119,7 @@ do_setup_env(struct ssh *ssh, Session *s, const char *shell)
+ 	/* Normal systems set SHELL by default. */
+ 	child_set_env(&env, &envsize, "SHELL", shell);
+ 
+-	if (getenv("TZ"))
+-		child_set_env(&env, &envsize, "TZ", getenv("TZ"));
++	child_inherit_env(&env, &envsize, "TZ");
+ 
+ #ifdef PER_SESSION_XAUTHFILE
+         if (s->auth_file != NULL)
+diff --git a/ssh.c b/ssh.c
+index 0777c31e..47e20065 100644
+--- a/ssh.c
++++ b/ssh.c
+@@ -1091,6 +1091,8 @@ main(int ac, char **av)
+ #endif
+ 		);
+ 
++	fill_early_default_options(&options);
++
+ 	/* Parse the configuration files */
+ 	process_config_files(host_arg, pw, 0);
+ 
+diff --git a/sshd.c b/sshd.c
+index e09f3934..9654b041 100644
+--- a/sshd.c
++++ b/sshd.c
+@@ -1679,6 +1679,8 @@ main(int ac, char **av)
+ 	else if (strcasecmp(config_file_name, "none") != 0)
+ 		load_server_config(config_file_name, cfg);
+ 
++	fill_early_default_server_options(&options);
++
+ 	parse_server_config(&options, rexeced_flag ? "rexec" : config_file_name,
+ 	    cfg, NULL);
+ 
+diff --git a/sshd_config b/sshd_config
+index d8e5e74b..6184ab75 100644
+--- a/sshd_config
++++ b/sshd_config
+@@ -26,6 +26,10 @@ Port 22
+ SyslogFacility AUTH
+ LogLevel INFO
+ 
++# Use the client's locale/language settings
++#AcceptEnv LANG LC_ALL LC_CTYPE LC_COLLATE LC_TIME LC_NUMERIC
++#AcceptEnv LC_MONETARY LC_MESSAGES
++
+ # Authentication:
+ 
+ #LoginGraceTime 2m
+diff --git a/sshd_config.4 b/sshd_config.4
+index c652f116..0fcf9368 100644
+--- a/sshd_config.4
++++ b/sshd_config.4
+@@ -86,7 +86,20 @@ directives.
+ Be warned that some environment variables could be used to bypass restricted
+ user environments.
+ For this reason, care should be taken in the use of this directive.
+-The default is not to accept any environment variables.
++The default is to accept only
++.Ev LANG
++and the
++.Ev LC_*
++family of environment variables. If you wish to remove one of these default
++variables, you may either use the argument
++.Dq none
++first to remove all of them, or prefix specific variable names with a
++.Dq -
++character (e.g.
++.Dq -LANG
++). Otherwise any specified
++.cm AcceptEnv
++directives will add to this default set.
+ .It Cm AddressFamily
+ Specifies which address family should be used by
+ .Xr sshd 1M .
+-- 
+2.20.1
+
diff --git a/openssh/Patches/0030-Temporarily-set-ssh-keygen-and-ssh-add-to-old-FP-for.patch b/openssh/Patches/0030-Temporarily-set-ssh-keygen-and-ssh-add-to-old-FP-for.patch
index 6fd215c..ab50008 100644
--- a/openssh/Patches/0030-Temporarily-set-ssh-keygen-and-ssh-add-to-old-FP-for.patch
+++ b/openssh/Patches/0030-Temporarily-set-ssh-keygen-and-ssh-add-to-old-FP-for.patch
@@ -1,4 +1,4 @@
-From 30642080c5d8b89043ff645010b5bbfc03c81aa5 Mon Sep 17 00:00:00 2001
+From 4e5cdb75d951cc50c9d0cb36073e165b1349e532 Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Wed, 9 Sep 2015 10:36:05 -0700
 Subject: [PATCH 30/34] Temporarily set ssh-keygen and ssh-add to old FP format
@@ -8,12 +8,12 @@ and ssh-keygen to return fingerprints in the old format.
 As a temporary measure, make us default to producing this
 same output until we have migrated everything over.
 ---
- ssh-add.c    | 13 +++++++++++--
+ ssh-add.c    | 14 +++++++++++---
  ssh-keygen.c | 22 ++++++++++++++++++----
- 2 files changed, 29 insertions(+), 6 deletions(-)
+ 2 files changed, 29 insertions(+), 7 deletions(-)
 
 diff --git a/ssh-add.c b/ssh-add.c
-index fb9a53e6..c63488a3 100644
+index 627c0298..975990b5 100644
 --- a/ssh-add.c
 +++ b/ssh-add.c
 @@ -52,6 +52,7 @@
@@ -24,7 +24,7 @@ index fb9a53e6..c63488a3 100644
  
  #include "xmalloc.h"
  #include "ssh.h"
-@@ -85,7 +86,8 @@ static char *default_files[] = {
+@@ -82,7 +83,8 @@ static char *default_files[] = {
  	NULL
  };
  
@@ -34,31 +34,31 @@ index fb9a53e6..c63488a3 100644
  
  /* Default lifetime (0 == forever) */
  static int lifetime = 0;
-@@ -360,6 +362,7 @@ static int
+@@ -420,7 +422,7 @@ update_card(int agent_fd, int add, const char *id, int qflag)
+ static int
  list_identities(int agent_fd, int do_fp)
  {
- 	char *fp;
-+	char *fpp;
- 	int r, had_identities = 0;
+-	char *fp;
++	char *fp, *fpp;
+ 	int r;
  	struct ssh_identitylist *idlist;
- 	size_t i;
-@@ -382,9 +385,14 @@ list_identities(int agent_fd, int do_fp)
- 			if (do_fp) {
- 				fp = sshkey_fingerprint(idlist->keys[i],
- 				    fingerprint_hash, SSH_FP_DEFAULT);
-+				fpp = fp;
-+				if (fingerprint_compat == 1) {
-+					assert(strncmp(fp, "MD5:", 4) == 0);
-+					fpp += 4;
-+				}
- 				printf("%u %s %s (%s)\n",
- 				    sshkey_size(idlist->keys[i]),
--				    fp == NULL ? "(null)" : fp,
-+				    fp == NULL ? "(null)" : fpp,
- 				    idlist->comments[i],
- 				    sshkey_type(idlist->keys[i]));
- 				free(fp);
-@@ -511,6 +519,7 @@ main(int argc, char **argv)
+ 	u_int32_t left;
+@@ -438,8 +440,13 @@ list_identities(int agent_fd, int do_fp)
+ 		if (do_fp) {
+ 			fp = sshkey_fingerprint(idlist->keys[i],
+ 			    fingerprint_hash, SSH_FP_DEFAULT);
++			fpp = fp;
++			if (fingerprint_compat == 1) {
++				assert(strncmp(fp, "MD5:", 4) == 0);
++				fpp += 4;
++			}
+ 			printf("%u %s %s (%s)\n", sshkey_size(idlist->keys[i]),
+-			    fp == NULL ? "(null)" : fp, idlist->comments[i],
++			    fp == NULL ? "(null)" : fpp, idlist->comments[i],
+ 			    sshkey_type(idlist->keys[i]));
+ 			free(fp);
+ 		} else {
+@@ -567,6 +574,7 @@ main(int argc, char **argv)
  		switch (ch) {
  		case 'E':
  			fingerprint_hash = ssh_digest_alg_by_name(optarg);
@@ -67,18 +67,18 @@ index fb9a53e6..c63488a3 100644
  				fatal("Invalid hash algorithm \"%s\"", optarg);
  			break;
 diff --git a/ssh-keygen.c b/ssh-keygen.c
-index 2a7939bf..6c0355bb 100644
+index 46b3af5a..61760745 100644
 --- a/ssh-keygen.c
 +++ b/ssh-keygen.c
-@@ -37,6 +37,7 @@
- #include <string.h>
- #include <unistd.h>
+@@ -39,6 +39,7 @@
  #include <limits.h>
+ #include <locale.h>
+ #include <time.h>
 +#include <assert.h>
  
  #include "xmalloc.h"
  #include "sshkey.h"
-@@ -101,7 +102,8 @@ int print_fingerprint = 0;
+@@ -104,7 +105,8 @@ int print_fingerprint = 0;
  int print_bubblebabble = 0;
  
  /* Hash algorithm to use for fingerprints. */
@@ -88,7 +88,7 @@ index 2a7939bf..6c0355bb 100644
  
  /* The identity file name, given on the command line or entered by the user. */
  char identity_file[1024];
-@@ -773,6 +775,7 @@ do_download(struct passwd *pw)
+@@ -802,6 +804,7 @@ do_download(struct passwd *pw)
  	enum sshkey_fp_rep rep;
  	int fptype;
  	char *fp, *ra;
@@ -96,7 +96,7 @@ index 2a7939bf..6c0355bb 100644
  
  	fptype = print_bubblebabble ? SSH_DIGEST_SHA1 : fingerprint_hash;
  	rep =    print_bubblebabble ? SSH_FP_BUBBLEBABBLE : SSH_FP_DEFAULT;
-@@ -788,8 +791,13 @@ do_download(struct passwd *pw)
+@@ -817,8 +820,13 @@ do_download(struct passwd *pw)
  			    SSH_FP_RANDOMART);
  			if (fp == NULL || ra == NULL)
  				fatal("%s: sshkey_fingerprint fail", __func__);
@@ -111,7 +111,7 @@ index 2a7939bf..6c0355bb 100644
  			if (log_level >= SYSLOG_LEVEL_VERBOSE)
  				printf("%s\n", ra);
  			free(ra);
-@@ -833,7 +841,7 @@ try_read_key(char **cpp)
+@@ -855,7 +863,7 @@ try_read_key(char **cpp)
  static void
  fingerprint_one_key(const struct sshkey *public, const char *comment)
  {
@@ -120,21 +120,21 @@ index 2a7939bf..6c0355bb 100644
  	enum sshkey_fp_rep rep;
  	int fptype;
  
-@@ -843,7 +851,12 @@ fingerprint_one_key(const struct sshkey *public, const char *comment)
+@@ -865,7 +873,12 @@ fingerprint_one_key(const struct sshkey *public, const char *comment)
  	ra = sshkey_fingerprint(public, fingerprint_hash, SSH_FP_RANDOMART);
  	if (fp == NULL || ra == NULL)
  		fatal("%s: sshkey_fingerprint failed", __func__);
--	printf("%u %s %s (%s)\n", sshkey_size(public), fp,
+-	mprintf("%u %s %s (%s)\n", sshkey_size(public), fp,
 +	fpp = fp;
 +	if (!print_bubblebabble && fingerprint_compat == 1) {
 +		assert(strncmp(fp, "MD5:", 4) == 0);
 +		fpp += 4;
 +	}
-+	printf("%u %s %s (%s)\n", sshkey_size(public), fpp,
++	mprintf("%u %s %s (%s)\n", sshkey_size(public), fpp,
  	    comment ? comment : "no comment", sshkey_type(public));
  	if (log_level >= SYSLOG_LEVEL_VERBOSE)
  		printf("%s\n", ra);
-@@ -2303,6 +2316,7 @@ main(int argc, char **argv)
+@@ -2486,6 +2499,7 @@ main(int argc, char **argv)
  			break;
  		case 'E':
  			fingerprint_hash = ssh_digest_alg_by_name(optarg);
@@ -143,5 +143,5 @@ index 2a7939bf..6c0355bb 100644
  				fatal("Invalid hash algorithm \"%s\"", optarg);
  			break;
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0031-Restore-tcpwrappers-libwrap-support.patch b/openssh/Patches/0031-Restore-tcpwrappers-libwrap-support.patch
index b97c920..59c6064 100644
--- a/openssh/Patches/0031-Restore-tcpwrappers-libwrap-support.patch
+++ b/openssh/Patches/0031-Restore-tcpwrappers-libwrap-support.patch
@@ -1,4 +1,4 @@
-From accb8ef16ca7b9273135ffb4cdc040383f87bfb9 Mon Sep 17 00:00:00 2001
+From d3c99d664812a8b208a775a931b51c41a018f9fa Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Wed, 16 Sep 2015 10:54:13 -0700
 Subject: [PATCH 31/34] Restore tcpwrappers/libwrap support
@@ -6,18 +6,18 @@ Subject: [PATCH 31/34] Restore tcpwrappers/libwrap support
 This reverts commit f9696566fb41320820f3b257ab564fa321bb3751
 and commit f2719b7c2b8a3b14d778d8a6d8dc729b5174b054.
 ---
- configure.ac | 57 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ configure.ac | 57 ++++++++++++++++++++++++++++++++++++++++++++++++++++
  sshd.1m      |  7 +++++++
- sshd.c       | 29 +++++++++++++++++++++++++++++
+ sshd.c       | 29 ++++++++++++++++++++++++++
  3 files changed, 93 insertions(+)
 
 diff --git a/configure.ac b/configure.ac
-index 5e64db3b..bf9c5449 100644
+index a956f1ff..02e563c5 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -1494,6 +1494,62 @@ AC_ARG_WITH([skey],
- 	]
- )
+@@ -1520,6 +1520,62 @@ else
+ 	AC_MSG_RESULT([no])
+ fi
  
 +# Check whether user wants TCP wrappers support
 +TCPW_MSG="no"
@@ -78,19 +78,19 @@ index 5e64db3b..bf9c5449 100644
  # Check whether user wants to use ldns
  LDNS_MSG="no"
  AC_ARG_WITH(ldns,
-@@ -5136,6 +5192,7 @@ echo "                 KerberosV support: $KRB5_MSG"
+@@ -5360,6 +5416,7 @@ echo "                       PAM support: $PAM_MSG"
+ echo "                   OSF SIA support: $SIA_MSG"
+ echo "                 KerberosV support: $KRB5_MSG"
  echo "                   SELinux support: $SELINUX_MSG"
- echo "                 Smartcard support: $SCARD_MSG"
- echo "                     S/KEY support: $SKEY_MSG"
 +echo "              TCP Wrappers support: $TCPW_MSG"
  echo "              MD5 password support: $MD5_MSG"
  echo "                   libedit support: $LIBEDIT_MSG"
- echo "  Solaris process contract support: $SPC_MSG"
+ echo "                   libldns support: $LDNS_MSG"
 diff --git a/sshd.1m b/sshd.1m
-index 387ea69e..55cf3f0d 100644
+index 1ca36c60..8ecce1d4 100644
 --- a/sshd.1m
 +++ b/sshd.1m
-@@ -825,6 +825,12 @@ the user's home directory becomes accessible.
+@@ -873,6 +873,12 @@ the user's home directory becomes accessible.
  This file should be writable only by the user, and need not be
  readable by anyone else.
  .Pp
@@ -103,7 +103,7 @@ index 387ea69e..55cf3f0d 100644
  .It Pa /etc/hosts.equiv
  This file is for host-based authentication (see
  .Xr ssh 1 ) .
-@@ -956,6 +962,7 @@ Each SSHv2 userauth type has its own PAM service name:
+@@ -1002,6 +1008,7 @@ Each SSHv2 userauth type has its own PAM service name:
  .Xr ssh-keygen 1 ,
  .Xr ssh-keyscan 1 ,
  .Xr chroot 2 ,
@@ -112,7 +112,7 @@ index 387ea69e..55cf3f0d 100644
  .Xr moduli 4 ,
  .Xr sshd_config 4 ,
 diff --git a/sshd.c b/sshd.c
-index 67171704..75da16b7 100644
+index 9654b041..0cc270b9 100644
 --- a/sshd.c
 +++ b/sshd.c
 @@ -127,6 +127,17 @@
@@ -133,7 +133,7 @@ index 67171704..75da16b7 100644
  /* Re-exec fds */
  #define REEXEC_DEVCRYPTO_RESERVED_FD	(STDERR_FILENO + 1)
  #define REEXEC_STARTUP_PIPE_FD		(STDERR_FILENO + 2)
-@@ -1997,6 +2008,24 @@ main(int ac, char **av)
+@@ -2123,6 +2134,24 @@ main(int ac, char **av)
  #ifdef SSH_AUDIT_EVENTS
  	audit_connection_from(remote_ip, remote_port);
  #endif
@@ -156,8 +156,8 @@ index 67171704..75da16b7 100644
 +	}
 +#endif /* LIBWRAP */
  
- 	/* Log the connection. */
- 	laddr = get_local_ipaddr(sock_in);
+ 	rdomain = ssh_packet_rdomain_in(ssh);
+ 
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/0032-Let-us-put-a-fallback-copy-of-DH-moduli-in-a-system-.patch b/openssh/Patches/0032-Let-us-put-a-fallback-copy-of-DH-moduli-in-a-system-.patch
index b7f5609..f3bf755 100644
--- a/openssh/Patches/0032-Let-us-put-a-fallback-copy-of-DH-moduli-in-a-system-.patch
+++ b/openssh/Patches/0032-Let-us-put-a-fallback-copy-of-DH-moduli-in-a-system-.patch
@@ -1,4 +1,4 @@
-From f942f3b1310e7343eab54c5d2bf0863ca06b11a8 Mon Sep 17 00:00:00 2001
+From 19f47887e03c4928af5de0364b9d25e0e9f1fd0b Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Thu, 15 Oct 2015 16:02:37 -0700
 Subject: [PATCH 32/34] Let us put a fallback copy of DH moduli in a system
@@ -15,10 +15,10 @@ that if we can't find one in the SSHKEYDIR.
  3 files changed, 25 insertions(+), 13 deletions(-)
 
 diff --git a/Makefile.in b/Makefile.in
-index 3a2a840d..e1f9d8a1 100644
+index 98e0e124..91442e0f 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -19,6 +19,7 @@ piddir=@piddir@
+@@ -17,6 +17,7 @@ piddir=@piddir@
  srcdir=@srcdir@
  top_srcdir=@top_srcdir@
  keydir=@keydir@
@@ -26,7 +26,7 @@ index 3a2a840d..e1f9d8a1 100644
  
  DESTDIR=
  VPATH=@srcdir@
-@@ -137,8 +138,8 @@ PATHSUBS	= \
+@@ -145,8 +146,8 @@ PATHSUBS	= \
  	-e 's|/etc/ssh/ssh_host_rsa_key|$(keydir)/ssh_host_rsa_key|g' \
  	-e 's|/etc/ssh/ssh_host_ed25519_key|$(keydir)/ssh_host_ed25519_key|g' \
  	-e 's|/var/run/sshd.pid|$(piddir)/sshd.pid|g' \
@@ -37,7 +37,7 @@ index 3a2a840d..e1f9d8a1 100644
  	-e 's|/etc/ssh/sshrc|$(sysconfdir)/sshrc|g' \
  	-e 's|/usr/X11R6/bin/xauth|$(XAUTH_PATH)|g' \
  	-e 's|/var/empty|$(PRIVSEP_PATH)|g' \
-@@ -372,6 +373,8 @@ install-files:
+@@ -394,6 +395,8 @@ install-files:
  	$(INSTALL) -m 555 smf/method.sh $(SMFMETHODDIR)/sshd
  	$(INSTALL) -m 444 smf/manifest.xml $(SMFNETMANIDIR)/ssh.xml
  	mkdir -p $(DESTDIR)$(keydir)
@@ -45,8 +45,8 @@ index 3a2a840d..e1f9d8a1 100644
 +	$(INSTALL) -m 644 moduli.out $(DESTDIR)$(modulidir)/moduli
  
  install-sysconf:
- 	if [ ! -d $(DESTDIR)$(sysconfdir) ]; then \
-@@ -387,16 +390,6 @@ install-sysconf:
+ 	$(MKDIR_P) $(DESTDIR)$(sysconfdir)
+@@ -407,16 +410,6 @@ install-sysconf:
  	else \
  		echo "$(DESTDIR)$(sysconfdir)/sshd_config already exists, install will not overwrite"; \
  	fi
@@ -64,10 +64,10 @@ index 3a2a840d..e1f9d8a1 100644
  host-key: ssh-keygen$(EXEEXT)
  	@if [ -z "$(DESTDIR)" ] ; then \
 diff --git a/configure.ac b/configure.ac
-index bf9c5449..b9a7e7d5 100644
+index 02e563c5..adc373bc 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -4855,6 +4855,21 @@ AC_DEFINE_UNQUOTED([SSHKEYDIR], ["$keydir"],
+@@ -5077,6 +5077,21 @@ AC_DEFINE_UNQUOTED([SSHKEYDIR], ["$keydir"],
  	[Specify location of SSH host keys])
  AC_SUBST([keydir])
  
@@ -90,11 +90,11 @@ index bf9c5449..b9a7e7d5 100644
  AC_ARG_ENABLE([lastlog],
  	[  --disable-lastlog       disable use of lastlog even if detected [no]],
 diff --git a/dh.c b/dh.c
-index 47531242..0d3aca90 100644
+index 657b32da..94bede77 100644
 --- a/dh.c
 +++ b/dh.c
-@@ -151,7 +151,11 @@ choose_dh(int min, int wantbits, int max)
- 	int linenum;
+@@ -152,7 +152,11 @@ choose_dh(int min, int wantbits, int max)
+ 	int best, bestcount, which, linenum;
  	struct dhgroup dhg;
  
 -	if ((f = fopen(_PATH_DH_MODULI, "r")) == NULL) {
@@ -107,5 +107,5 @@ index 47531242..0d3aca90 100644
  		    _PATH_DH_MODULI, strerror(errno));
  		return (dh_new_group_fallback(max));
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/1000-smartos-dtrace32.patch b/openssh/Patches/1000-smartos-dtrace32.patch
index b0b4754..409b00b 100644
--- a/openssh/Patches/1000-smartos-dtrace32.patch
+++ b/openssh/Patches/1000-smartos-dtrace32.patch
@@ -1,4 +1,4 @@
-From 66cd92553066b1d3b2ccbdb9a2407153ad6562ae Mon Sep 17 00:00:00 2001
+From 555305ee97b6fd5010fe5e891b146c6a846a7a1d Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Tue, 22 Dec 2015 14:30:19 -0800
 Subject: [PATCH 33/34] SmartOS local: make dtrace lib 32-bit
@@ -8,10 +8,10 @@ Subject: [PATCH 33/34] SmartOS local: make dtrace lib 32-bit
  1 file changed, 3 insertions(+), 3 deletions(-)
 
 diff --git a/Makefile.in b/Makefile.in
-index e1f9d8a1..58ac8ed7 100644
+index 91442e0f..066382ad 100644
 --- a/Makefile.in
 +++ b/Makefile.in
-@@ -28,7 +28,7 @@ ASKPASS_PROGRAM=$(libexecdir)/ssh-askpass
+@@ -26,7 +26,7 @@ ASKPASS_PROGRAM=$(libexecdir)/ssh-askpass
  SFTP_SERVER=$(libexecdir)/sftp-server
  SSH_KEYSIGN=$(libexecdir)/ssh-keysign
  SSH_PKCS11_HELPER=$(libexecdir)/ssh-pkcs11-helper
@@ -20,7 +20,7 @@ index e1f9d8a1..58ac8ed7 100644
  SMFMETHODDIR=$(DESTDIR)/lib/svc/method
  SMFNETMANIDIR=$(DESTDIR)/lib/svc/manifest/network
  PRIVSEP_PATH=@PRIVSEP_PATH@
-@@ -238,7 +238,7 @@ sftp_provider.h: $(srcdir)/sftp_provider.d
+@@ -239,7 +239,7 @@ sftp_provider.h: $(srcdir)/sftp_provider.d
  	    -o $(srcdir)/sftp_provider.h
  
  sftp_provider.o: sftp_provider.d sftp_provider.h sftp-server.o
@@ -29,7 +29,7 @@ index e1f9d8a1..58ac8ed7 100644
  	    sftp-server.o -o sftp_provider.o
  
  # special case for sftp-server.o, it includes sftp_provider.h
-@@ -367,7 +367,7 @@ install-files:
+@@ -389,7 +389,7 @@ install-files:
  	$(INSTALL) -m 644 sftp-server.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/sftp-server.1m
  	$(INSTALL) -m 644 ssh-keysign.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/ssh-keysign.1m
  	$(INSTALL) -m 644 ssh-pkcs11-helper.1m.out $(DESTDIR)$(mandir)/$(mansubdir)1m/ssh-pkcs11-helper.1m
@@ -39,5 +39,5 @@ index e1f9d8a1..58ac8ed7 100644
  	$(srcdir)/mkinstalldirs $(SMFNETMANIDIR)
  	$(INSTALL) -m 555 smf/method.sh $(SMFMETHODDIR)/sshd
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/Patches/1001-sunw_ssl.patch b/openssh/Patches/1001-sunw_ssl.patch
index d9425a5..95541c4 100644
--- a/openssh/Patches/1001-sunw_ssl.patch
+++ b/openssh/Patches/1001-sunw_ssl.patch
@@ -1,25 +1,24 @@
-From 6f944a0c3e6d4230275c55d6491928ff3a678466 Mon Sep 17 00:00:00 2001
+From 10fa7c77f60236d65fbea1af136350db1c0f6d1c Mon Sep 17 00:00:00 2001
 From: Alex Wilson <alex.wilson@joyent.com>
 Date: Tue, 22 Dec 2015 14:31:25 -0800
 Subject: [PATCH 34/34] SmartOS local: use sunw_ssl lib from platform
 
 ---
- configure.ac                    | 34 +++++++++++++++++-----------------
- digest-openssl.c                |  8 ++++----
- kex.c                           | 10 +++++-----
- mac.c                           |  8 ++++----
- md-sha256.c                     |  4 ++--
- myproposal.h                    |  4 ++--
- openbsd-compat/openssl-compat.h |  6 +++---
+ configure.ac                    | 98 ++++++++++++++++-----------------
+ digest-openssl.c                |  8 +--
+ kex.c                           | 16 ++++--
+ mac.c                           |  4 +-
+ myproposal.h                    |  4 +-
+ openbsd-compat/openssl-compat.h |  4 +-
  openbsd-compat/sha2.c           |  2 +-
  openbsd-compat/sha2.h           |  2 +-
- 9 files changed, 39 insertions(+), 39 deletions(-)
+ 8 files changed, 73 insertions(+), 65 deletions(-)
 
 diff --git a/configure.ac b/configure.ac
-index b9a7e7d5..8e0426a0 100644
+index adc373bc..886e5236 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -2524,8 +2524,8 @@ AC_ARG_WITH([ssl-engine],
+@@ -2616,8 +2616,8 @@ AC_ARG_WITH([ssl-engine],
  )
  
  if test "x$openssl" = "xyes" ; then
@@ -30,7 +29,7 @@ index b9a7e7d5..8e0426a0 100644
  		[Define if your ssl headers are included
  		with #include <openssl/header.h>])],
  		[
-@@ -2538,7 +2538,7 @@ if test "x$openssl" = "xyes" ; then
+@@ -2630,7 +2630,7 @@ if test "x$openssl" = "xyes" ; then
  			CPPFLAGS="-I/usr/local/ssl/include ${saved_CPPFLAGS}"
  			AC_CHECK_HEADER([openssl/opensslv.h], ,
  			    [AC_MSG_ERROR([*** OpenSSL headers missing - please install first or check config.log ***])])
@@ -39,7 +38,7 @@ index b9a7e7d5..8e0426a0 100644
  				[
  					AC_MSG_ERROR([*** Can't find recent OpenSSL libcrypto (see config.log for details) ***])
  				]
-@@ -2686,16 +2686,16 @@ if test "x$openssl" = "xyes" ; then
+@@ -2787,16 +2787,16 @@ if test "x$openssl" = "xyes" ; then
  	)
  
  	AC_CHECK_FUNCS([ \
@@ -66,18 +65,158 @@ index b9a7e7d5..8e0426a0 100644
  	])
  
  	if test "x$openssl_engine" = "xyes" ; then
-@@ -2781,8 +2781,8 @@ if test "x$openssl" = "xyes" ; then
+@@ -2882,116 +2882,116 @@ if test "x$openssl" = "xyes" ; then
  		]
  	)
  
 -	AC_SEARCH_LIBS([EVP_CIPHER_CTX_ctrl], [crypto],
--		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_CTRL], [1],
 +	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_ctrl], [sunw_crypto],
-+		[AC_DEFINE([HAVE_SUNW_EVP_CIPHER_CTX_CTRL], [1],
+ 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_CTRL], [1],
  		    [Define if libcrypto has EVP_CIPHER_CTX_ctrl])])
  
- 	AC_MSG_CHECKING([if EVP_DigestUpdate returns an int])
-@@ -2818,7 +2818,7 @@ if test "x$openssl" = "xyes" ; then
+ 	# LibreSSL/OpenSSL 1.1x API
+-	AC_SEARCH_LIBS([DH_get0_key], [crypto],
++	AC_SEARCH_LIBS([sunw_DH_get0_key], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DH_GET0_KEY], [1],
+ 		    [Define if libcrypto has DH_get0_key])])
+-	AC_SEARCH_LIBS([DH_get0_pqg], [crypto],
++	AC_SEARCH_LIBS([sunw_DH_get0_pqg], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DH_GET0_PQG], [1],
+ 		    [Define if libcrypto has DH_get0_pqg])])
+-	AC_SEARCH_LIBS([DH_set0_key], [crypto],
++	AC_SEARCH_LIBS([sunw_DH_set0_key], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DH_SET0_KEY], [1],
+ 		    [Define if libcrypto has DH_set0_key])])
+-	AC_SEARCH_LIBS([DH_set_length], [crypto],
++	AC_SEARCH_LIBS([sunw_DH_set_length], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DH_SET_LENGTH], [1],
+ 		    [Define if libcrypto has DH_set_length])])
+-	AC_SEARCH_LIBS([DH_set0_pqg], [crypto],
++	AC_SEARCH_LIBS([sunw_DH_set0_pqg], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DH_SET0_PQG], [1],
+ 		    [Define if libcrypto has DH_set0_pqg])])
+ 
+-	AC_SEARCH_LIBS([DSA_get0_key], [crypto],
++	AC_SEARCH_LIBS([sunw_DSA_get0_key], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DSA_GET0_KEY], [1],
+ 		    [Define if libcrypto has DSA_get0_key])])
+-	AC_SEARCH_LIBS([DSA_get0_pqg], [crypto],
++	AC_SEARCH_LIBS([sunw_DSA_get0_pqg], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DSA_GET0_PQG], [1],
+ 		    [Define if libcrypto has DSA_get0_pqg])])
+-	AC_SEARCH_LIBS([DSA_set0_key], [crypto],
++	AC_SEARCH_LIBS([sunw_DSA_set0_key], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DSA_SET0_KEY], [1],
+ 		    [Define if libcrypto has DSA_set0_key])])
+-	AC_SEARCH_LIBS([DSA_set0_pqg], [crypto],
++	AC_SEARCH_LIBS([sunw_DSA_set0_pqg], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DSA_SET0_PQG], [1],
+ 		    [Define if libcrypto has DSA_set0_pqg])])
+ 
+-	AC_SEARCH_LIBS([DSA_SIG_get0], [crypto],
++	AC_SEARCH_LIBS([sunw_DSA_SIG_get0], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DSA_SIG_GET0], [1],
+ 		    [Define if libcrypto has DSA_SIG_get0])])
+-	AC_SEARCH_LIBS([DSA_SIG_set0], [crypto],
++	AC_SEARCH_LIBS([sunw_DSA_SIG_set0], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_DSA_SIG_SET0], [1],
+ 		    [Define if libcrypto has DSA_SIG_set0])])
+ 
+-	AC_SEARCH_LIBS([ECDSA_SIG_get0], [crypto],
++	AC_SEARCH_LIBS([sunw_ECDSA_SIG_get0], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_ECDSA_SIG_GET0], [1],
+ 		    [Define if libcrypto has ECDSA_SIG_get0])])
+-	AC_SEARCH_LIBS([ECDSA_SIG_set0], [crypto],
++	AC_SEARCH_LIBS([sunw_ECDSA_SIG_set0], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_ECDSA_SIG_SET0], [1],
+ 		    [Define if libcrypto has ECDSA_SIG_set0])])
+ 
+-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_iv], [crypto],
++	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_iv], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_IV], [1],
+ 		    [Define if libcrypto has EVP_CIPHER_CTX_iv])])
+-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_iv_noconst], [crypto],
++	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_iv_noconst], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_IV_NOCONST], [1],
+ 		    [Define if libcrypto has EVP_CIPHER_CTX_iv_noconst])])
+-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_get_iv], [crypto],
++	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_get_iv], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_GET_IV], [1],
+ 		    [Define if libcrypto has EVP_CIPHER_CTX_get_iv])])
+-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_set_iv], [crypto],
++	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_set_iv], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_GET_IV], [1],
+ 		    [Define if libcrypto has EVP_CIPHER_CTX_set_iv])])
+ 
+-	AC_SEARCH_LIBS([RSA_get0_crt_params], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_get0_crt_params], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_GET0_CRT_PARAMS], [1],
+ 		    [Define if libcrypto has RSA_get0_crt_params])])
+-	AC_SEARCH_LIBS([RSA_get0_factors], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_get0_factors], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_GET0_FACTORS], [1],
+ 		    [Define if libcrypto has RSA_get0_factors])])
+-	AC_SEARCH_LIBS([RSA_get0_key], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_get0_key], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_GET0_KEY], [1],
+ 		    [Define if libcrypto has RSA_get0_key])])
+-	AC_SEARCH_LIBS([RSA_set0_crt_params], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_set0_crt_params], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_SET0_CRT_PARAMS], [1],
+ 		    [Define if libcrypto has RSA_get0_srt_params])])
+-	AC_SEARCH_LIBS([RSA_set0_factors], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_set0_factors], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_SET0_FACTORS], [1],
+ 		    [Define if libcrypto has RSA_set0_factors])])
+-	AC_SEARCH_LIBS([RSA_set0_key], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_set0_key], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_SET0_KEY], [1],
+ 		    [Define if libcrypto has RSA_set0_key])])
+ 
+-	AC_SEARCH_LIBS([RSA_meth_free], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_meth_free], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_METH_FREE], [1],
+ 		    [Define if libcrypto has RSA_meth_free])])
+-	AC_SEARCH_LIBS([RSA_meth_dup], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_meth_dup], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_METH_DUP], [1],
+ 		    [Define if libcrypto has RSA_meth_dup])])
+-	AC_SEARCH_LIBS([RSA_meth_set1_name], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_meth_set1_name], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_METH_SET1_NAME], [1],
+ 		    [Define if libcrypto has RSA_meth_set1_name])])
+-	AC_SEARCH_LIBS([RSA_meth_get_finish], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_meth_get_finish], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_METH_GET_FINISH], [1],
+ 		    [Define if libcrypto has RSA_meth_get_finish])])
+-	AC_SEARCH_LIBS([RSA_meth_set_priv_enc], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_meth_set_priv_enc], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_METH_SET_PRIV_ENC], [1],
+ 		    [Define if libcrypto has RSA_meth_set_priv_enc])])
+-	AC_SEARCH_LIBS([RSA_meth_set_priv_dec], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_meth_set_priv_dec], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_METH_SET_PRIV_DEC], [1],
+ 		    [Define if libcrypto has RSA_meth_set_priv_dec])])
+-	AC_SEARCH_LIBS([RSA_meth_set_finish], [crypto],
++	AC_SEARCH_LIBS([sunw_RSA_meth_set_finish], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_RSA_METH_SET_FINISH], [1],
+ 		    [Define if libcrypto has RSA_meth_set_finish])])
+ 
+-	AC_SEARCH_LIBS([EVP_PKEY_get0_RSA], [crypto],
++	AC_SEARCH_LIBS([sunw_EVP_PKEY_get0_RSA], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_EVP_PKEY_GET0_RSA], [1],
+ 		    [Define if libcrypto has EVP_PKEY_get0_RSA])])
+ 
+-	AC_SEARCH_LIBS([EVP_MD_CTX_new], [crypto],
++	AC_SEARCH_LIBS([sunw_EVP_MD_CTX_new], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_EVP_MD_CTX_NEW], [1],
+ 		    [Define if libcrypto has EVP_MD_CTX_new])])
+-	AC_SEARCH_LIBS([EVP_MD_CTX_free], [crypto],
++	AC_SEARCH_LIBS([sunw_EVP_MD_CTX_free], [sunw_crypto],
+ 		[AC_DEFINE([HAVE_EVP_MD_CTX_FREE], [1],
+ 		    [Define if libcrypto has EVP_MD_CTX_free])])
+ 
+@@ -3028,7 +3028,7 @@ if test "x$openssl" = "xyes" ; then
  	AC_CHECK_FUNCS([crypt DES_crypt])
  
  	# Search for SHA256 support in libc and/or OpenSSL
@@ -86,7 +225,7 @@ index b9a7e7d5..8e0426a0 100644
  	    [unsupported_algorithms="$unsupported_algorithms \
  		hmac-sha2-256 \
  		hmac-sha2-512 \
-@@ -2828,7 +2828,7 @@ if test "x$openssl" = "xyes" ; then
+@@ -3038,7 +3038,7 @@ if test "x$openssl" = "xyes" ; then
  	     ]
  	)
  	# Search for RIPE-MD support in OpenSSL
@@ -96,7 +235,7 @@ index b9a7e7d5..8e0426a0 100644
  		hmac-ripemd160 \
  		hmac-ripemd160@openssh.com \
 diff --git a/digest-openssl.c b/digest-openssl.c
-index 13b63c2f..c6fe9f9e 100644
+index da7ed72b..5833a3d1 100644
 --- a/digest-openssl.c
 +++ b/digest-openssl.c
 @@ -32,14 +32,14 @@
@@ -119,19 +258,25 @@ index 13b63c2f..c6fe9f9e 100644
  struct ssh_digest_ctx {
  	int alg;
 diff --git a/kex.c b/kex.c
-index d8708684..d634e648 100644
+index fb5bfaea..49f6496f 100644
 --- a/kex.c
 +++ b/kex.c
-@@ -59,7 +59,7 @@
+@@ -58,6 +58,14 @@
+ #include "ssh-gss.h"
  #endif
  
- #if OPENSSL_VERSION_NUMBER >= 0x00907000L
--# if defined(HAVE_EVP_SHA256)
++#if OPENSSL_VERSION_NUMBER >= 0x00907000L
 +# if defined(HAVE_SUNW_EVP_SHA256)
- # define evp_ssh_sha256 EVP_sha256
- # else
- extern const EVP_MD *evp_ssh_sha256(void);
-@@ -97,9 +97,9 @@ static const struct kexalg kexalgs[] = {
++# define evp_ssh_sha256 EVP_sha256
++# else
++extern const EVP_MD *evp_ssh_sha256(void);
++# endif
++#endif
++
+ /* prototype */
+ static int kex_choose_conf(struct ssh *);
+ static int kex_input_newkeys(int, u_int32_t, struct ssh *);
+@@ -89,9 +97,9 @@ static const struct kexalg kexalgs[] = {
  	{ KEX_DH16_SHA512, KEX_DH_GRP16_SHA512, 0, SSH_DIGEST_SHA512 },
  	{ KEX_DH18_SHA512, KEX_DH_GRP18_SHA512, 0, SSH_DIGEST_SHA512 },
  	{ KEX_DHGEX_SHA1, KEX_DH_GEX_SHA1, 0, SSH_DIGEST_SHA1 },
@@ -143,7 +288,7 @@ index d8708684..d634e648 100644
  #ifdef OPENSSL_HAS_ECC
  	{ KEX_ECDH_SHA2_NISTP256, KEX_ECDH_SHA2,
  	    NID_X9_62_prime256v1, SSH_DIGEST_SHA256 },
-@@ -111,10 +111,10 @@ static const struct kexalg kexalgs[] = {
+@@ -103,10 +111,10 @@ static const struct kexalg kexalgs[] = {
  # endif /* OPENSSL_HAS_NISTP521 */
  #endif /* OPENSSL_HAS_ECC */
  #endif /* WITH_OPENSSL */
@@ -157,10 +302,10 @@ index d8708684..d634e648 100644
  };
  static const struct kexalg kexalg_prefixes[] = {
 diff --git a/mac.c b/mac.c
-index 5ba7fae1..b3b92fad 100644
+index 51dc11d7..c11b6770 100644
 --- a/mac.c
 +++ b/mac.c
-@@ -58,13 +58,13 @@ static const struct macalg macs[] = {
+@@ -58,7 +58,7 @@ static const struct macalg macs[] = {
  	/* Encrypt-and-MAC (encrypt-and-authenticate) variants */
  	{ "hmac-sha1",				SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 0 },
  	{ "hmac-sha1-96",			SSH_DIGEST, SSH_DIGEST_SHA1, 96, 0, 0, 0 },
@@ -169,14 +314,7 @@ index 5ba7fae1..b3b92fad 100644
  	{ "hmac-sha2-256",			SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 0 },
  	{ "hmac-sha2-512",			SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 0 },
  #endif
- 	{ "hmac-md5",				SSH_DIGEST, SSH_DIGEST_MD5, 0, 0, 0, 0 },
- 	{ "hmac-md5-96",			SSH_DIGEST, SSH_DIGEST_MD5, 96, 0, 0, 0 },
--#ifdef HAVE_EVP_RIPEMD160
-+#ifdef HAVE_SUNW_EVP_RIPEMD160
- 	{ "hmac-ripemd160",			SSH_DIGEST, SSH_DIGEST_RIPEMD160, 0, 0, 0, 0 },
- 	{ "hmac-ripemd160@openssh.com",		SSH_DIGEST, SSH_DIGEST_RIPEMD160, 0, 0, 0, 0 },
- #endif
-@@ -74,13 +74,13 @@ static const struct macalg macs[] = {
+@@ -70,7 +70,7 @@ static const struct macalg macs[] = {
  	/* Encrypt-then-MAC variants */
  	{ "hmac-sha1-etm@openssh.com",		SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 1 },
  	{ "hmac-sha1-96-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA1, 96, 0, 0, 1 },
@@ -185,35 +323,8 @@ index 5ba7fae1..b3b92fad 100644
  	{ "hmac-sha2-256-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 1 },
  	{ "hmac-sha2-512-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 1 },
  #endif
- 	{ "hmac-md5-etm@openssh.com",		SSH_DIGEST, SSH_DIGEST_MD5, 0, 0, 0, 1 },
- 	{ "hmac-md5-96-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_MD5, 96, 0, 0, 1 },
--#ifdef HAVE_EVP_RIPEMD160
-+#ifdef HAVE_SUNW_EVP_RIPEMD160
- 	{ "hmac-ripemd160-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_RIPEMD160, 0, 0, 0, 1 },
- #endif
- 	{ "umac-64-etm@openssh.com",		SSH_UMAC, 0, 0, 128, 64, 1 },
-diff --git a/md-sha256.c b/md-sha256.c
-index 8c1b3b92..40c2dc83 100644
---- a/md-sha256.c
-+++ b/md-sha256.c
-@@ -22,7 +22,7 @@
- #include <sys/types.h>
- #include <openssl/opensslv.h>
- 
--#if !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
-+#if !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
- 
- #include <string.h>
- #include <openssl/evp.h>
-@@ -82,5 +82,5 @@ evp_ssh_sha256(void)
- 	return (&ssh_sha256);
- }
- 
--#endif /* !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L) */
-+#endif /* !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L) */
- 
 diff --git a/myproposal.h b/myproposal.h
-index f6322a73..a9637ed8 100644
+index 0df91f5b..45a6484b 100644
 --- a/myproposal.h
 +++ b/myproposal.h
 @@ -66,7 +66,7 @@
@@ -235,19 +346,10 @@ index f6322a73..a9637ed8 100644
  	"curve25519-sha256," \
  	"curve25519-sha256@libssh.org,"
 diff --git a/openbsd-compat/openssl-compat.h b/openbsd-compat/openssl-compat.h
-index 2ae42bac..042d6829 100644
+index 9e0264c0..c6a517ed 100644
 --- a/openbsd-compat/openssl-compat.h
 +++ b/openbsd-compat/openssl-compat.h
-@@ -61,7 +61,7 @@ void ssh_aes_ctr_iv(EVP_CIPHER_CTX *, int, u_char *, size_t);
- #endif
- 
- /* Replace missing EVP_CIPHER_CTX_ctrl() with something that returns failure */
--#ifndef HAVE_EVP_CIPHER_CTX_CTRL
-+#ifndef HAVE_SUNW_EVP_CIPHER_CTX_CTRL
- # ifdef OPENSSL_HAVE_EVPGCM
- #  error AES-GCM enabled without EVP_CIPHER_CTX_ctrl /* shouldn't happen */
- # else
-@@ -69,9 +69,9 @@ void ssh_aes_ctr_iv(EVP_CIPHER_CTX *, int, u_char *, size_t);
+@@ -71,9 +71,9 @@ void ssh_aes_ctr_iv(EVP_CIPHER_CTX *, int, u_char *, size_t);
  # endif
  #endif
  
@@ -260,7 +362,7 @@ index 2ae42bac..042d6829 100644
  #endif
  
 diff --git a/openbsd-compat/sha2.c b/openbsd-compat/sha2.c
-index a22099bb..d7033890 100644
+index b55ea30a..f1f96b2f 100644
 --- a/openbsd-compat/sha2.c
 +++ b/openbsd-compat/sha2.c
 @@ -40,7 +40,7 @@
@@ -286,5 +388,5 @@ index c6e6c97a..313848f0 100644
  # endif
  #else
 -- 
-2.11.0
+2.20.1
 
diff --git a/openssh/openssh-portable-7.4p1.tar.gz b/openssh/openssh-portable-7.4p1.tar.gz
deleted file mode 100644
index 0036a1a..0000000
Binary files a/openssh/openssh-portable-7.4p1.tar.gz and /dev/null differ
diff --git a/openssh/openssh-portable-7.9p1.tar.gz b/openssh/openssh-portable-7.9p1.tar.gz
new file mode 100644
index 0000000..2da4a4d
Binary files /dev/null and b/openssh/openssh-portable-7.9p1.tar.gz differ
-- 
2.21.0

