commit 03d65898d7ca38f2a8e67583eaa63ac861092449
Author: YangYong3 <yy1111.yang@samsung.com>
Date:   2017-02-03T13:21:49+09:00 (2 years, 8 months ago)
    
    joyent/node-triton#169 rbac CLI not working ..

diff --git a/lib/do_rbac/do_keys.js b/lib/do_rbac/do_keys.js
index 925c0cb..5957845 100644
--- a/lib/do_rbac/do_keys.js
+++ b/lib/do_rbac/do_keys.js
@@ -42,27 +42,30 @@ function do_keys(subcmd, opts, args, cb) {
     columns = columns.split(',');
     var sort = opts.s.split(',');
 
-    this.top.tritonapi.cloudapi.listUserKeys({userId: args[0]},
-            function (err, userKeys) {
-        if (err) {
-            cb(err);
-            return;
-        }
+    var tritonapi = this.top.tritonapi;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        tritonapi.cloudapi.listUserKeys({userId: args[0]},
+                function (err, userKeys) {
+            if (err) {
+                cb(err);
+                return;
+            }
 
-        if (opts.json) {
-            common.jsonStream(userKeys);
-        } else if (opts.authorized_keys) {
-            userKeys.forEach(function (key) {
-                console.log(common.chomp(key.key));
-            });
-        } else {
-            tabula(userKeys, {
-                skipHeader: false,
-                columns: columns,
-                sort: sort
-            });
-        }
-        cb();
+            if (opts.json) {
+                common.jsonStream(userKeys);
+            } else if (opts.authorized_keys) {
+                userKeys.forEach(function (key) {
+                    console.log(common.chomp(key.key));
+                });
+            } else {
+                tabula(userKeys, {
+                    skipHeader: false,
+                    columns: columns,
+                    sort: sort
+                });
+            }
+            cb();
+        });
     });
 }
 
diff --git a/lib/do_rbac/do_policies.js b/lib/do_rbac/do_policies.js
index a873324..6c890b2 100644
--- a/lib/do_rbac/do_policies.js
+++ b/lib/do_rbac/do_policies.js
@@ -45,29 +45,32 @@ function do_policies(subcmd, opts, args, cb) {
     columns = columns.split(',');
     var sort = opts.s.split(',');
 
-    this.top.tritonapi.cloudapi.listPolicies(function (err, policies) {
-        if (err) {
-            cb(err);
-            return;
-        }
-
-        if (opts.json) {
-            common.jsonStream(policies);
-        } else {
-            // Add some convenience fields
-            for (var i = 0; i < policies.length; i++) {
-                var role = policies[i];
-                role.nrules = role.rules.length;
-                role.rules = role.rules.sort().join('; ');
+    var tritonapi = this.top.tritonapi;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        tritonapi.cloudapi.listPolicies(function (err, policies) {
+            if (err) {
+                cb(err);
+                return;
             }
 
-            tabula(policies, {
-                skipHeader: opts.H,
-                columns: columns,
-                sort: sort
-            });
-        }
-        cb();
+            if (opts.json) {
+                common.jsonStream(policies);
+            } else {
+                // Add some convenience fields
+                for (var i = 0; i < policies.length; i++) {
+                    var role = policies[i];
+                    role.nrules = role.rules.length;
+                    role.rules = role.rules.sort().join('; ');
+                }
+
+                tabula(policies, {
+                    skipHeader: opts.H,
+                    columns: columns,
+                    sort: sort
+                });
+            }
+            cb();
+        });
     });
 }
 
diff --git a/lib/do_rbac/do_roles.js b/lib/do_rbac/do_roles.js
index 772134f..1355b1c 100644
--- a/lib/do_rbac/do_roles.js
+++ b/lib/do_rbac/do_roles.js
@@ -40,49 +40,53 @@ function do_roles(subcmd, opts, args, cb) {
     columns = columns.split(',');
     var sort = opts.s.split(',');
 
-    this.top.tritonapi.cloudapi.listRoles(function (err, roles) {
-        if (err) {
-            cb(err);
-            return;
-        }
-
-        if (opts.json) {
-            common.jsonStream(roles);
-        } else {
-            var i, j;
-            // Add some convenience fields
-            for (i = 0; i < roles.length; i++) {
-                var role = roles[i];
-                role.policies = role.policies.sort().join(',');
-                var defaultMap = {};
-                for (j = 0; j < role.default_members.length; j++) {
-                    defaultMap[role.default_members[j]] = true;
-                }
-                role.default_members = role.default_members.sort().join(',');
-                var sortedRawMembers = role.members.sort();
-                var defaultMembers = [];
-                var members = [];
-                for (j = 0; j < sortedRawMembers.length; j++) {
-                    var m = sortedRawMembers[j];
-                    if (defaultMap[m]) {
-                        defaultMembers.push(m);
-                    // TODO: formal envvar with a --no-color top-level opt
-                    } else if (process.env.TRITON_NO_COLOR) {
-                        members.push(m);
-                    } else {
-                        members.push(common.ansiStylize(m, 'magenta'));
+    var tritonapi = this.top.tritonapi;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        tritonapi.cloudapi.listRoles(function (err, roles) {
+            if (err) {
+                cb(err);
+                return;
+            }
+
+            if (opts.json) {
+                common.jsonStream(roles);
+            } else {
+                var i, j;
+                // Add some convenience fields
+                for (i = 0; i < roles.length; i++) {
+                    var role = roles[i];
+                    role.policies = role.policies.sort().join(',');
+                    var defaultMap = {};
+                    for (j = 0; j < role.default_members.length; j++) {
+                        defaultMap[role.default_members[j]] = true;
                     }
+                    role.default_members =
+                        role.default_members.sort().join(',');
+                    var sortedRawMembers = role.members.sort();
+                    var defaultMembers = [];
+                    var members = [];
+                    for (j = 0; j < sortedRawMembers.length; j++) {
+                        var m = sortedRawMembers[j];
+                        if (defaultMap[m]) {
+                            defaultMembers.push(m);
+                        // TODO: formal envvar with a --no-color top-level opt
+                        } else if (process.env.TRITON_NO_COLOR) {
+                            members.push(m);
+                        } else {
+                            members.push(common.ansiStylize(m, 'magenta'));
+                        }
+                    }
+                    role.members = defaultMembers.concat(members).join(',');
                 }
-                role.members = defaultMembers.concat(members).join(',');
-            }
 
-            tabula(roles, {
-                skipHeader: opts.H,
-                columns: columns,
-                sort: sort
-            });
-        }
-        cb();
+                tabula(roles, {
+                    skipHeader: opts.H,
+                    columns: columns,
+                    sort: sort
+                });
+            }
+            cb();
+        });
     });
 }
 
diff --git a/lib/do_rbac/do_users.js b/lib/do_rbac/do_users.js
index f12aa8f..2178650 100644
--- a/lib/do_rbac/do_users.js
+++ b/lib/do_rbac/do_users.js
@@ -41,35 +41,38 @@ function do_users(subcmd, opts, args, cb) {
 
     var sort = opts.s.split(',');
 
-    this.top.tritonapi.cloudapi.listUsers(function (err, users) {
-        if (err) {
-            cb(err);
-            return;
-        }
-
-        if (opts.json) {
-            common.jsonStream(users);
-        } else {
-            // Add some convenience fields
-            for (var i = 0; i < users.length; i++) {
-                var user = users[i];
-                user.name = ((user.firstName || '') + ' ' +
-                    (user.lastName || '')).trim() || undefined;
-                if (user.created) {
-                    user.cdate = user.created.slice(0, 10); // Just the date.
-                }
-                if (user.updated) {
-                    user.udate = user.updated.slice(0, 10); // Just the date.
-                }
+    var tritonapi = this.top.tritonapi;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        tritonapi.cloudapi.listUsers(function (err, users) {
+            if (err) {
+                cb(err);
+                return;
             }
 
-            tabula(users, {
-                skipHeader: opts.H,
-                columns: columns,
-                sort: sort
-            });
-        }
-        cb();
+            if (opts.json) {
+                common.jsonStream(users);
+            } else {
+                // Add some convenience fields
+                for (var i = 0; i < users.length; i++) {
+                    var user = users[i];
+                    user.name = ((user.firstName || '') + ' ' +
+                        (user.lastName || '')).trim() || undefined;
+                    if (user.created) {
+                        user.cdate = user.created.slice(0, 10); //Just the date
+                    }
+                    if (user.updated) {
+                        user.udate = user.updated.slice(0, 10); //Just the date
+                    }
+                }
+
+                tabula(users, {
+                    skipHeader: opts.H,
+                    columns: columns,
+                    sort: sort
+                });
+            }
+            cb();
+        });
     });
 }
 
