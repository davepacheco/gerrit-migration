From cdf5d0172678b245542defdce4c4a00171240e7a Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Fri, 26 Jan 2018 19:51:52 +0000
Subject: [PATCH] TRITON-75 Allow firewall rules to be applied in order of
 priority

---
 src/fw/lib/fw.js                              |  74 +++-
 src/fw/lib/util/log.js                        |   2 +-
 src/fw/node_modules/fwrule/index.js           |  27 +-
 src/fw/node_modules/fwrule/parser.js          | 218 +++++----
 src/fw/node_modules/fwrule/rule.js            |  98 ++++-
 src/fw/node_modules/fwrule/validators.js      |  20 +-
 src/fw/node_modules/node-uuid/LICENSE.md      |   3 -
 src/fw/node_modules/node-uuid/index.js        | 257 -----------
 src/fw/node_modules/uuid/LICENSE.md           |  21 +
 src/fw/node_modules/uuid/index.js             |   8 +
 src/fw/node_modules/uuid/lib/bytesToUuid.js   |  23 +
 src/fw/node_modules/uuid/lib/md5-browser.js   | 216 +++++++++
 src/fw/node_modules/uuid/lib/md5.js           |  25 ++
 src/fw/node_modules/uuid/lib/rng-browser.js   |  32 ++
 src/fw/node_modules/uuid/lib/rng.js           |   8 +
 src/fw/node_modules/uuid/lib/sha1-browser.js  |  89 ++++
 src/fw/node_modules/uuid/lib/sha1.js          |  25 ++
 src/fw/node_modules/uuid/lib/v35.js           |  53 +++
 src/fw/node_modules/uuid/v1.js                | 109 +++++
 src/fw/node_modules/uuid/v4.js                |  29 ++
 src/fw/package.json                           |   4 +-
 src/fw/test/lib/helpers.js                    |   2 +-
 src/fw/test/lib/mocks.js                      |   2 +-
 src/fw/test/unit/add.test.js                  |   2 +-
 src/fw/test/unit/fw.test.js                   |   2 +-
 src/fw/test/unit/global.test.js               |   2 +-
 src/fw/test/unit/icmp.test.js                 |   2 +-
 src/fw/test/unit/list.test.js                 |   2 +-
 src/fw/test/unit/owner.test.js                |   2 +-
 src/fw/test/unit/priority.test.js             | 415 ++++++++++++++++++
 src/fw/test/unit/remote-targets.test.js       |   2 +-
 src/fw/test/unit/remote-vms.test.js           |   2 +-
 src/fw/test/unit/stats.test.js                |   2 +-
 src/fw/test/unit/tags.test.js                 |   2 +-
 src/fw/test/unit/update.test.js               |   2 +-
 src/fw/test/unit/validate.test.js             |   2 +-
 src/fw/test/unit/vms.test.js                  |   2 +-
 src/fw/test/unit/wildcards.test.js            |   2 +-
 src/fw/tools/bin/rebuild-node-modules         |   8 +-
 src/fw/tools/fwrule/docs/fwrules.ebnf         |  65 ++-
 .../tools/fwrule/docs/media/img/port-list.svg | 136 ++++++
 .../tools/fwrule/docs/media/img/protocol.svg  | 138 ++++++
 src/fw/tools/fwrule/docs/media/img/rule.svg   | 121 +++++
 .../fwrule/docs/media/img/target-list.svg     | 102 +++++
 src/fw/tools/fwrule/docs/media/img/target.svg | 160 +++++++
 .../tools/fwrule/docs/media/img/type-list.svg | 131 ++++++
 src/fw/tools/fwrule/docs/rules.md             | 130 +++---
 src/fw/tools/fwrule/docs/rules.md.in          | 135 ++++--
 src/fw/tools/fwrule/etc/rules.json            |   3 +
 src/manifest                                  |  11 +-
 50 files changed, 2392 insertions(+), 536 deletions(-)
 delete mode 100644 src/fw/node_modules/node-uuid/LICENSE.md
 delete mode 100644 src/fw/node_modules/node-uuid/index.js
 create mode 100644 src/fw/node_modules/uuid/LICENSE.md
 create mode 100644 src/fw/node_modules/uuid/index.js
 create mode 100644 src/fw/node_modules/uuid/lib/bytesToUuid.js
 create mode 100644 src/fw/node_modules/uuid/lib/md5-browser.js
 create mode 100644 src/fw/node_modules/uuid/lib/md5.js
 create mode 100644 src/fw/node_modules/uuid/lib/rng-browser.js
 create mode 100644 src/fw/node_modules/uuid/lib/rng.js
 create mode 100644 src/fw/node_modules/uuid/lib/sha1-browser.js
 create mode 100644 src/fw/node_modules/uuid/lib/sha1.js
 create mode 100644 src/fw/node_modules/uuid/lib/v35.js
 create mode 100644 src/fw/node_modules/uuid/v1.js
 create mode 100644 src/fw/node_modules/uuid/v4.js
 create mode 100644 src/fw/test/unit/priority.test.js
 create mode 100644 src/fw/tools/fwrule/docs/media/img/port-list.svg
 create mode 100644 src/fw/tools/fwrule/docs/media/img/protocol.svg
 create mode 100644 src/fw/tools/fwrule/docs/media/img/rule.svg
 create mode 100644 src/fw/tools/fwrule/docs/media/img/target-list.svg
 create mode 100644 src/fw/tools/fwrule/docs/media/img/target.svg
 create mode 100644 src/fw/tools/fwrule/docs/media/img/type-list.svg
 create mode 100644 src/fw/tools/fwrule/etc/rules.json

diff --git a/src/fw/lib/fw.js b/src/fw/lib/fw.js
index a76e8395..77dfd2bb 100644
--- a/src/fw/lib/fw.js
+++ b/src/fw/lib/fw.js
@@ -124,10 +124,17 @@ function assertStringOrObject(obj, name) {
  * For a rule and a direction, return whether or not we actually need to
  * write ipf rules. FROM+ALLOW and TO+BLOCK are essentially no-ops, as
  * they will be caught by the block / allow catch-all default rules.
+ *
+ * If the rule has a priority greater than 0, then we always need to write
+ * out ipf rules.
  */
 function noRulesNeeded(dir, rule) {
+    if (rule.priority !== 0) {
+        return false;
+    }
+
     if ((dir === 'from' && rule.action === 'allow')
-            || (dir === 'to' && rule.action === 'block')) {
+        || (dir === 'to' && rule.action === 'block')) {
         return true;
     }
     return false;
@@ -974,10 +981,30 @@ function compareAddrs(a1, a2) {
 }
 
 
+/**
+ * This comparison function is used to sort the output ipf rule objects
+ * in the following order:
+ *
+ * 1. First by protocol: icmp, icmp6, tcp, udp.
+ * 2. Then by direction: outbound rules, then inbound.
+ * 3. By priority level (higher priorities come first).
+ * 4. By action:
+ *   a) For outbound traffic, block comes before allow.
+ *   b) For inbound traffic, allow comes before block.
+ * 5. By the first port or type listed.
+ * 6. By the first targeted IP.
+ *
+ * 1 and 2 help apply some organization to the output file.
+ * 5 and 6 help make testing easier by putting things in a predictable order.
+ *
+ * 3 and 4 are the actual, important metric to sort on: priority and action
+ * are important for ensuring that the actions taken by ipfilter are applied in
+ * the order that fwadm(1M) describes.
+ */
 function compareRules(r1, r2) {
     var res;
 
-    // Sort protocol as: icmp, icmp6, tcp, udp.
+    // Protocol:
     if (r1.protocol < r2.protocol) {
         return -1;
     }
@@ -986,6 +1013,48 @@ function compareRules(r1, r2) {
         return 1;
     }
 
+    // Direction:
+    if (r1.direction < r2.direction) {
+        return -1;
+    }
+
+    if (r1.direction > r2.direction) {
+        return 1;
+    }
+
+    // Priority levels:
+    if (r1.priority < r2.priority) {
+        return 1;
+    }
+
+    if (r1.priority > r2.priority) {
+        return -1;
+    }
+
+    // Action:
+    if (r1.direction === 'from') {
+        if (r1.action === 'allow') {
+            if (r2.action === 'block') {
+                return 1;
+            }
+        } else if (r2.action === 'allow') {
+            if (r1.action === 'block') {
+                return -1;
+            }
+        }
+    } else {
+        if (r1.action === 'allow') {
+            if (r2.action === 'block') {
+                return -1;
+            }
+        } else if (r2.action === 'allow') {
+            if (r1.action === 'block') {
+                return 1;
+            }
+        }
+    }
+
+    // Ports and types:
     if (icmpr.test(r1.protocol)) {
         res = compareTypes(r1.protoTargets[0], r2.protoTargets[0]);
     } else {
@@ -1017,6 +1086,7 @@ function ipfRuleObj(opts) {
     var sortObj = {
         action: rule.action,
         direction: dir,
+        priority: rule.priority,
         protocol: rule.protocol,
         header: util.format('\n# rule=%s, version=%s, %s=%s',
             rule.uuid, rule.version, opts.type, opts.value),
diff --git a/src/fw/lib/util/log.js b/src/fw/lib/util/log.js
index 1a9d82f3..777d4412 100644
--- a/src/fw/lib/util/log.js
+++ b/src/fw/lib/util/log.js
@@ -32,7 +32,7 @@ var events = require('events');
 var fs = require('fs');
 var mkdirp = require('mkdirp');
 var mod_obj = require('./obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var path = require('path');
 var sprintf = require('extsprintf').sprintf;
 var util = require('util');
diff --git a/src/fw/node_modules/fwrule/index.js b/src/fw/node_modules/fwrule/index.js
index fa88a666..c27c9dda 100644
--- a/src/fw/node_modules/fwrule/index.js
+++ b/src/fw/node_modules/fwrule/index.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright 2017, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * firewall rule parser: entry point
@@ -39,8 +39,6 @@ var validators = require('./validators');
 
 
 
-var uuidRE = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
-
 /**
  * The fwrule language is versioned so that use of new features can be
  * restricted. These versions are:
@@ -48,8 +46,13 @@ var uuidRE = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
  * 1 - Initial version of language
  * 2 - PORTS keyword & support for ranges of ports
  * 3 - Support for IPv6 targets, the ICMPv6 protocol, and the TYPE ALL keyword
+ * 4 - Support for priority levels, longer protocol targets list, and the AH and
+ *     ESP protocols (for IPsec)
  */
-var CURR_VERSION = 3;
+var CURR_VERSION = 4;
+
+
+var NON_DIGIT_RE = /[^0-9]/;
 
 
 // --- Internal helper functions
@@ -105,9 +108,15 @@ parser.yy.validateSubnet = function validateSubnet(input) {
     validators.validateSubnet('rule', input, parser.yy.enforceSubnetMask);
 };
 
+parser.yy.validatePriorityLevel = function validatePriorityLevel(num) {
+    if (NON_DIGIT_RE.test(num) || Number(num) < 0 || Number(num) > 100) {
+        throw new validators.InvalidParamError('rule',
+            'Priority level "%s" is invalid', num);
+    }
+};
 
 parser.yy.validatePortNumber = function validatePortNumber(num) {
-    if (isNaN(num) || Number(num) < 1 || Number(num) > 65535) {
+    if (NON_DIGIT_RE.test(num) || Number(num) < 1 || Number(num) > 65535) {
         throw new validators.InvalidParamError('rule',
             'Port number "%s" is invalid', num);
     }
@@ -141,7 +150,7 @@ parser.yy.createMaybePortRange = function createMaybePortRange(num) {
 
 
 parser.yy.validateICMPcode = function validateICMPcode(num) {
-    if (isNaN(num) || Number(num) < 0 || Number(num) > 255) {
+    if (NON_DIGIT_RE.test(num) || Number(num) < 0 || Number(num) > 255) {
         throw new validators.InvalidParamError('rule',
             'ICMP code "%s" is invalid', num);
     }
@@ -149,7 +158,7 @@ parser.yy.validateICMPcode = function validateICMPcode(num) {
 
 
 parser.yy.validateICMPtype = function validateICMPtype(num) {
-    if (isNaN(num) || Number(num) < 0 || Number(num) > 255) {
+    if (NON_DIGIT_RE.test(num) || Number(num) < 0 || Number(num) > 255) {
         throw new validators.InvalidParamError('rule',
             'ICMP type "%s" is invalid', num);
     }
@@ -157,7 +166,7 @@ parser.yy.validateICMPtype = function validateICMPtype(num) {
 
 
 parser.yy.validateUUID = function validateUUID(text) {
-    if (!uuidRE.test(text)) {
+    if (!validators.validateUUID(text)) {
         throw new validators.InvalidParamError('rule',
             'UUID "%s" is invalid', text);
     }
@@ -236,7 +245,7 @@ module.exports = {
     FwRule: rule.FwRule,
     generateVersion: rule.generateVersion,
     parse: parse,
-    PROTOCOLS: ['tcp', 'udp', 'icmp', 'icmp6'],
+    PROTOCOLS: ['tcp', 'udp', 'icmp', 'icmp6', 'ah', 'esp'],
     TARGET_TYPES: rule.TARGET_TYPES,
     validators: validators
 };
diff --git a/src/fw/node_modules/fwrule/parser.js b/src/fw/node_modules/fwrule/parser.js
index d9c6e5ac..ea7ef45f 100644
--- a/src/fw/node_modules/fwrule/parser.js
+++ b/src/fw/node_modules/fwrule/parser.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright 2017, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * fwadm: firewall rule parser
@@ -31,61 +31,63 @@
 var parser = (function(){
 var parser = {trace: function trace() { },
 yy: {},
-symbols_: {"error":2,"start":3,"FROM":4,"target_list":5,"TO":6,"action":7,"protocol":8,"EOF":9,"any":10,"all":11,"(":12,"target_or_list":13,")":14,"target":15,"OR":16,"ipv4":17,"ipv4_subnet":18,"ipv6":19,"ipv6_subnet":20,"tag":21,"vm":22,"ALL":23,"VMS":24,"ANY":25,"IP":26,"IPV4ADDR":27,"SUBNET":28,"CIDRSUFFIX":29,"IPV6ADDR":30,"VM":31,"uuid":32,"WORD":33,"TAG":34,"tag_string":35,"=":36,"STRING":37,"BLOCK":38,"ALLOW":39,"TCP":40,"port_list":41,"ports":42,"UDP":43,"ICMP":44,"type_list":45,"ICMP6":46,"port_and_list":47,"port":48,"port_all":49,"AND":50,"PORT":51,"portnumber":52,"PORTS":53,"portnumbers":54,"portrange":55,"-":56,",":57,"type_and_list":58,"type":59,"type_all":60,"TYPE":61,"icmptype":62,"CODE":63,"icmpcode":64,"$accept":0,"$end":1},
-terminals_: {2:"error",4:"FROM",6:"TO",9:"EOF",12:"(",14:")",16:"OR",23:"ALL",24:"VMS",25:"ANY",26:"IP",27:"IPV4ADDR",28:"SUBNET",29:"CIDRSUFFIX",30:"IPV6ADDR",31:"VM",33:"WORD",34:"TAG",36:"=",37:"STRING",38:"BLOCK",39:"ALLOW",40:"TCP",43:"UDP",44:"ICMP",46:"ICMP6",50:"AND",51:"PORT",53:"PORTS",56:"-",57:",",61:"TYPE",63:"CODE"},
-productions_: [0,[3,7],[5,1],[5,1],[5,3],[5,1],[13,1],[13,3],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[11,2],[11,4],[10,1],[10,3],[17,2],[18,3],[19,2],[20,3],[22,2],[32,1],[21,2],[21,4],[35,1],[35,1],[7,1],[7,1],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[41,3],[41,1],[41,3],[41,1],[47,1],[47,3],[48,2],[42,2],[49,2],[52,1],[55,1],[55,3],[54,1],[54,3],[45,3],[45,1],[45,3],[45,1],[58,1],[58,3],[59,4],[59,2],[60,2],[62,1],[64,1]],
+symbols_: {"error":2,"start":3,"FROM":4,"target_list":5,"TO":6,"action":7,"protocol":8,"EOF":9,"PRIORITY":10,"priolevel":11,"WORD":12,"any":13,"all":14,"(":15,"target_or_list":16,")":17,"target":18,"OR":19,"ipv4":20,"ipv4_subnet":21,"ipv6":22,"ipv6_subnet":23,"tag":24,"vm":25,"ALL":26,"VMS":27,"ANY":28,"IP":29,"IPV4ADDR":30,"SUBNET":31,"CIDRSUFFIX":32,"IPV6ADDR":33,"VM":34,"uuid":35,"TAG":36,"tag_string":37,"=":38,"STRING":39,"BLOCK":40,"ALLOW":41,"TCP":42,"port_list":43,"ports":44,"UDP":45,"ICMP":46,"type_list":47,"ICMP6":48,"AH":49,"ESP":50,"port_and_list":51,"port":52,"port_all":53,"AND":54,"PORT":55,"portnumber":56,"PORTS":57,"portnumbers":58,"portrange":59,"-":60,",":61,"type_and_list":62,"type":63,"type_all":64,"TYPE":65,"icmptype":66,"CODE":67,"icmpcode":68,"$accept":0,"$end":1},
+terminals_: {2:"error",4:"FROM",6:"TO",9:"EOF",10:"PRIORITY",12:"WORD",15:"(",17:")",19:"OR",26:"ALL",27:"VMS",28:"ANY",29:"IP",30:"IPV4ADDR",31:"SUBNET",32:"CIDRSUFFIX",33:"IPV6ADDR",34:"VM",36:"TAG",38:"=",39:"STRING",40:"BLOCK",41:"ALLOW",42:"TCP",45:"UDP",46:"ICMP",48:"ICMP6",49:"AH",50:"ESP",54:"AND",55:"PORT",57:"PORTS",60:"-",61:",",65:"TYPE",67:"CODE"},
+productions_: [0,[3,7],[3,9],[11,1],[5,1],[5,1],[5,3],[5,1],[16,1],[16,3],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[14,2],[14,4],[13,1],[13,3],[20,2],[21,3],[22,2],[23,3],[25,2],[35,1],[24,2],[24,4],[37,1],[37,1],[7,1],[7,1],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,1],[8,1],[43,3],[43,1],[43,3],[43,1],[51,1],[51,3],[52,2],[44,2],[53,2],[56,1],[59,1],[59,3],[58,1],[58,3],[47,3],[47,1],[47,3],[47,1],[62,1],[62,3],[63,4],[63,2],[64,2],[66,1],[68,1]],
 performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {
 
 var $0 = $$.length - 1;
 switch (yystate) {
 case 1: return { 'from': $$[$0-5], 'to': $$[$0-3], 'action': $$[$0-2], 'protocol': $$[$0-1] }; 
 break;
-case 4:this.$ = $$[$0-1];
+case 2: yy.validateOKVersion(4, 'priority levels');
+          return { 'from': $$[$0-7], 'to': $$[$0-5], 'action': $$[$0-4], 'protocol': $$[$0-3], 'priority': $$[$0-1] }; 
 break;
-case 7: this.$ = $$[$0-2].concat($$[$0]); 
+case 3: yy.validatePriorityLevel($$[$0]);
+          this.$ = Number($$[$0]) 
 break;
-case 14: this.$ = [ ['wildcard', 'vmall'] ]; 
+case 6:this.$ = $$[$0-1];
 break;
-case 15: this.$ = [ ['wildcard', 'vmall'] ]; 
+case 9: this.$ = $$[$0-2].concat($$[$0]); 
 break;
-case 16: this.$ = [ ['wildcard', 'any'] ]; 
+case 16: this.$ = [ ['wildcard', 'vmall'] ]; 
 break;
-case 17: this.$ = [ ['wildcard', 'any'] ]; 
+case 17: this.$ = [ ['wildcard', 'vmall'] ]; 
 break;
-case 18: yy.validateIPv4address($$[$0]);
+case 18: this.$ = [ ['wildcard', 'any'] ]; 
+break;
+case 19: this.$ = [ ['wildcard', 'any'] ]; 
+break;
+case 20: yy.validateIPv4address($$[$0]);
           this.$ = [ ['ip', $$[$0]] ]; 
 break;
-case 19: yy.validateSubnet($$[$0-1] + $$[$0]);
+case 21: yy.validateSubnet($$[$0-1] + $$[$0]);
             this.$ = [ ['subnet', $$[$0-1] + $$[$0]] ]; 
 break;
-case 20: yy.validateOKVersion(3, 'IPv6');
+case 22: yy.validateOKVersion(3, 'IPv6');
           yy.validateIPv6address($$[$0]);
           this.$ = [ ['ip', $$[$0]] ]; 
 break;
-case 21: yy.validateOKVersion(3, 'IPv6');
+case 23: yy.validateOKVersion(3, 'IPv6');
           yy.validateSubnet($$[$0-1] + $$[$0]);
             this.$ = [ ['subnet', $$[$0-1] + $$[$0]] ]; 
 break;
-case 22: this.$ = [ ['vm', $$[$0]] ]; 
+case 24: this.$ = [ ['vm', $$[$0]] ]; 
 break;
-case 23: yy.validateUUID($$[$0]);
+case 25: yy.validateUUID($$[$0]);
           this.$ = $$[$0]; 
 break;
-case 24: this.$ = [ ['tag', $$[$0]] ]; 
-break;
-case 25: this.$ = [ ['tag', [ $$[$0-2], $$[$0] ] ] ]; 
-break;
-case 26: this.$ = yytext; 
+case 26: this.$ = [ ['tag', $$[$0]] ]; 
 break;
-case 27: this.$ = $$[$0]; 
+case 27: this.$ = [ ['tag', [ $$[$0-2], $$[$0] ] ] ]; 
 break;
-case 28: this.$ = $$[$0].toLowerCase() 
+case 28: this.$ = yytext; 
 break;
-case 29: this.$ = $$[$0].toLowerCase() 
+case 29: this.$ = $$[$0]; 
 break;
-case 30: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
+case 30: this.$ = $$[$0].toLowerCase() 
 break;
-case 31: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
+case 31: this.$ = $$[$0].toLowerCase() 
 break;
 case 32: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
 break;
@@ -93,57 +95,67 @@ case 33: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] }
 break;
 case 34: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
 break;
-case 35: yy.validateOKVersion(3, 'IPv6');
+case 35: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
+break;
+case 36: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
+break;
+case 37: yy.validateOKVersion(3, 'IPv6');
           this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] }; 
 break;
-case 36: this.$ = $$[$0-1]; 
+case 38: yy.validateOKVersion(4, 'AH');
+          this.$ = { 'name': $$[$0].toLowerCase(), 'targets': [ 'all' ] }; 
+break;
+case 39: yy.validateOKVersion(4, 'ESP');
+          this.$ = { 'name': $$[$0].toLowerCase(), 'targets': [ 'all' ] }; 
 break;
-case 38: this.$ = $$[$0-1]; 
+case 40: this.$ = $$[$0-1]; 
 break;
-case 41: this.$ = $$[$0-2].concat(Number($$[$0])); 
+case 42: this.$ = $$[$0-1]; 
 break;
-case 42: this.$ = [ $$[$0] ]; 
+case 45: this.$ = $$[$0-2].concat(Number($$[$0])); 
 break;
-case 43: yy.validateOKVersion(2, 'port ranges');
+case 46: this.$ = [ $$[$0] ]; 
+break;
+case 47: yy.validateOKVersion(2, 'port ranges');
           this.$ = $$[$0]; 
 break;
-case 44: this.$ = [ 'all' ]; 
+case 48: this.$ = [ 'all' ]; 
 break;
-case 45: yy.validatePortNumber($$[$0]);
+case 49: yy.validatePortNumber($$[$0]);
           this.$ = Number($$[$0]); 
 break;
-case 46: this.$ = [ yy.createMaybePortRange($$[$0]) ]; 
+case 50: this.$ = [ yy.createMaybePortRange($$[$0]) ]; 
 break;
-case 47: yy.validatePortNumber($$[$0-2]);
+case 51: yy.validatePortNumber($$[$0-2]);
           yy.validatePortNumber($$[$0]);
           yy.validateRangeOrder($$[$0-2], $$[$0]);
           this.$ = [{ 'start': Number($$[$0-2]), 'end': Number($$[$0]) }]; 
 break;
-case 49: this.$ = $$[$0-2].concat($$[$0]); 
+case 53: this.$ = $$[$0-2].concat($$[$0]); 
 break;
-case 50: this.$ = $$[$0-1]; 
+case 54: this.$ = $$[$0-1]; 
 break;
-case 52: this.$ = $$[$0-1]; 
+case 56: this.$ = $$[$0-1]; 
 break;
-case 55: this.$ = $$[$0-2].concat($$[$0]); 
+case 59: this.$ = $$[$0-2].concat($$[$0]); 
 break;
-case 56: this.$ = [ $$[$0-2] + ':' + $$[$0] ]; 
+case 60: this.$ = [ $$[$0-2] + ':' + $$[$0] ]; 
 break;
-case 57: this.$ = [ $$[$0] ]; 
+case 61: this.$ = [ $$[$0] ]; 
 break;
-case 58: yy.validateOKVersion(3, 'all ICMP types');
+case 62: yy.validateOKVersion(3, 'all ICMP types');
           this.$ = [ 'all' ]; 
 break;
-case 59: yy.validateICMPtype($$[$0]);
+case 63: yy.validateICMPtype($$[$0]);
           this.$ = Number($$[$0]); 
 break;
-case 60: yy.validateICMPcode($$[$0]);
+case 64: yy.validateICMPcode($$[$0]);
           this.$ = Number($$[$0]); 
 break;
 }
 },
-table: [{3:1,4:[1,2]},{1:[3]},{5:3,10:4,11:5,12:[1,6],15:7,17:10,18:11,19:12,20:13,21:14,22:15,23:[1,9],25:[1,8],26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{6:[1,20]},{6:[2,2],38:[2,2],39:[2,2]},{6:[2,3],38:[2,3],39:[2,3]},{13:21,15:24,17:10,18:11,19:12,20:13,21:14,22:15,23:[1,23],25:[1,22],26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{6:[2,5],38:[2,5],39:[2,5]},{6:[2,16],38:[2,16],39:[2,16]},{24:[1,25]},{6:[2,8],14:[2,8],16:[2,8],38:[2,8],39:[2,8]},{6:[2,9],14:[2,9],16:[2,9],38:[2,9],39:[2,9]},{6:[2,10],14:[2,10],16:[2,10],38:[2,10],39:[2,10]},{6:[2,11],14:[2,11],16:[2,11],38:[2,11],39:[2,11]},{6:[2,12],14:[2,12],16:[2,12],38:[2,12],39:[2,12]},{6:[2,13],14:[2,13],16:[2,13],38:[2,13],39:[2,13]},{27:[1,26],30:[1,27]},{27:[1,28],30:[1,29]},{33:[1,32],35:30,37:[1,31]},{32:33,33:[1,34]},{5:35,10:4,11:5,12:[1,6],15:7,17:10,18:11,19:12,20:13,21:14,22:15,23:[1,9],25:[1,8],26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{14:[1,36],16:[1,37]},{14:[1,38]},{24:[1,39]},{14:[2,6],16:[2,6]},{6:[2,14],38:[2,14],39:[2,14]},{6:[2,18],14:[2,18],16:[2,18],38:[2,18],39:[2,18]},{6:[2,20],14:[2,20],16:[2,20],38:[2,20],39:[2,20]},{29:[1,40]},{29:[1,41]},{6:[2,24],14:[2,24],16:[2,24],36:[1,42],38:[2,24],39:[2,24]},{6:[2,26],14:[2,26],16:[2,26],36:[2,26],38:[2,26],39:[2,26]},{6:[2,27],14:[2,27],16:[2,27],36:[2,27],38:[2,27],39:[2,27]},{6:[2,22],14:[2,22],16:[2,22],38:[2,22],39:[2,22]},{6:[2,23],14:[2,23],16:[2,23],38:[2,23],39:[2,23]},{7:43,38:[1,44],39:[1,45]},{6:[2,4],38:[2,4],39:[2,4]},{15:46,17:10,18:11,19:12,20:13,21:14,22:15,26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{6:[2,17],38:[2,17],39:[2,17]},{14:[1,47]},{6:[2,19],14:[2,19],16:[2,19],38:[2,19],39:[2,19]},{6:[2,21],14:[2,21],16:[2,21],38:[2,21],39:[2,21]},{33:[1,32],35:48,37:[1,31]},{8:49,40:[1,50],43:[1,51],44:[1,52],46:[1,53]},{40:[2,28],43:[2,28],44:[2,28],46:[2,28]},{40:[2,29],43:[2,29],44:[2,29],46:[2,29]},{14:[2,7],16:[2,7]},{6:[2,15],38:[2,15],39:[2,15]},{6:[2,25],14:[2,25],16:[2,25],38:[2,25],39:[2,25]},{9:[1,54]},{12:[1,57],41:55,42:56,48:58,49:59,51:[1,61],53:[1,60]},{12:[1,57],41:62,42:63,48:58,49:59,51:[1,61],53:[1,60]},{12:[1,65],45:64,59:66,60:67,61:[1,68]},{12:[1,65],45:69,59:66,60:67,61:[1,68]},{1:[2,1]},{9:[2,30]},{9:[2,31]},{47:70,48:72,49:71,51:[1,61]},{9:[2,37]},{9:[2,39]},{33:[1,75],54:73,55:74},{23:[1,77],33:[1,78],52:76},{9:[2,32]},{9:[2,33]},{9:[2,34]},{58:79,59:81,60:80,61:[1,68]},{9:[2,51]},{9:[2,53]},{23:[1,83],33:[1,84],62:82},{9:[2,35]},{14:[1,85],50:[1,86]},{14:[1,87]},{14:[2,40],50:[2,40]},{9:[2,43],57:[1,88]},{9:[2,48],57:[2,48]},{9:[2,46],56:[1,89],57:[2,46]},{9:[2,42],14:[2,42],50:[2,42]},{9:[2,44],14:[2,44]},{9:[2,45],14:[2,45],50:[2,45]},{14:[1,90],50:[1,91]},{14:[1,92]},{14:[2,54],50:[2,54]},{9:[2,57],14:[2,57],50:[2,57],63:[1,93]},{9:[2,58],14:[2,58]},{9:[2,59],14:[2,59],50:[2,59],63:[2,59]},{9:[2,36]},{48:94,51:[1,95]},{9:[2,38]},{33:[1,75],55:96},{33:[1,97]},{9:[2,50]},{59:98,61:[1,99]},{9:[2,52]},{33:[1,101],64:100},{14:[2,41],50:[2,41]},{33:[1,78],52:76},{9:[2,49],57:[2,49]},{9:[2,47],57:[2,47]},{14:[2,55],50:[2,55]},{33:[1,84],62:82},{9:[2,56],14:[2,56],50:[2,56]},{9:[2,60],14:[2,60],50:[2,60]}],
-defaultActions: {54:[2,1],55:[2,30],56:[2,31],58:[2,37],59:[2,39],62:[2,32],63:[2,33],64:[2,34],66:[2,51],67:[2,53],69:[2,35],85:[2,36],87:[2,38],90:[2,50],92:[2,52]},
+table: [{3:1,4:[1,2]},{1:[3]},{5:3,13:4,14:5,15:[1,6],18:7,20:10,21:11,22:12,23:13,24:14,25:15,26:[1,9],28:[1,8],29:[1,16],31:[1,17],34:[1,19],36:[1,18]},{6:[1,20]},{6:[2,4],40:[2,4],41:[2,4]},{6:[2,5],40:[2,5],41:[2,5]},{16:21,18:24,20:10,21:11,22:12,23:13,24:14,25:15,26:[1,23],28:[1,22],29:[1,16],31:[1,17],34:[1,19],36:[1,18]},{6:[2,7],40:[2,7],41:[2,7]},{6:[2,18],40:[2,18],41:[2,18]},{27:[1,25]},{6:[2,10],17:[2,10],19:[2,10],40:[2,10],41:[2,10]},{6:[2,11],17:[2,11],19:[2,11],40:[2,11],41:[2,11]},{6:[2,12],17:[2,12],19:[2,12],40:[2,12],41:[2,12]},{6:[2,13],17:[2,13],19:[2,13],40:[2,13],41:[2,13]},{6:[2,14],17:[2,14],19:[2,14],40:[2,14],41:[2,14]},{6:[2,15],17:[2,15],19:[2,15],40:[2,15],41:[2,15]},{30:[1,26],33:[1,27]},{30:[1,28],33:[1,29]},{12:[1,32],37:30,39:[1,31]},{12:[1,34],35:33},{5:35,13:4,14:5,15:[1,6],18:7,20:10,21:11,22:12,23:13,24:14,25:15,26:[1,9],28:[1,8],29:[1,16],31:[1,17],34:[1,19],36:[1,18]},{17:[1,36],19:[1,37]},{17:[1,38]},{27:[1,39]},{17:[2,8],19:[2,8]},{6:[2,16],40:[2,16],41:[2,16]},{6:[2,20],17:[2,20],19:[2,20],40:[2,20],41:[2,20]},{6:[2,22],17:[2,22],19:[2,22],40:[2,22],41:[2,22]},{32:[1,40]},{32:[1,41]},{6:[2,26],17:[2,26],19:[2,26],38:[1,42],40:[2,26],41:[2,26]},{6:[2,28],17:[2,28],19:[2,28],38:[2,28],40:[2,28],41:[2,28]},{6:[2,29],17:[2,29],19:[2,29],38:[2,29],40:[2,29],41:[2,29]},{6:[2,24],17:[2,24],19:[2,24],40:[2,24],41:[2,24]},{6:[2,25],17:[2,25],19:[2,25],40:[2,25],41:[2,25]},{7:43,40:[1,44],41:[1,45]},{6:[2,6],40:[2,6],41:[2,6]},{18:46,20:10,21:11,22:12,23:13,24:14,25:15,29:[1,16],31:[1,17],34:[1,19],36:[1,18]},{6:[2,19],40:[2,19],41:[2,19]},{17:[1,47]},{6:[2,21],17:[2,21],19:[2,21],40:[2,21],41:[2,21]},{6:[2,23],17:[2,23],19:[2,23],40:[2,23],41:[2,23]},{12:[1,32],37:48,39:[1,31]},{8:49,42:[1,50],45:[1,51],46:[1,52],48:[1,53],49:[1,54],50:[1,55]},{42:[2,30],45:[2,30],46:[2,30],48:[2,30],49:[2,30],50:[2,30]},{42:[2,31],45:[2,31],46:[2,31],48:[2,31],49:[2,31],50:[2,31]},{17:[2,9],19:[2,9]},{6:[2,17],40:[2,17],41:[2,17]},{6:[2,27],17:[2,27],19:[2,27],40:[2,27],41:[2,27]},{9:[1,56],10:[1,57]},{15:[1,60],43:58,44:59,52:61,53:62,55:[1,64],57:[1,63]},{15:[1,60],43:65,44:66,52:61,53:62,55:[1,64],57:[1,63]},{15:[1,68],47:67,63:69,64:70,65:[1,71]},{15:[1,68],47:72,63:69,64:70,65:[1,71]},{9:[2,38],10:[2,38]},{9:[2,39],10:[2,39]},{1:[2,1]},{11:73,12:[1,74]},{9:[2,32],10:[2,32]},{9:[2,33],10:[2,33]},{51:75,52:77,53:76,55:[1,64]},{9:[2,41],10:[2,41]},{9:[2,43],10:[2,43]},{12:[1,80],58:78,59:79},{12:[1,83],26:[1,82],56:81},{9:[2,34],10:[2,34]},{9:[2,35],10:[2,35]},{9:[2,36],10:[2,36]},{62:84,63:86,64:85,65:[1,71]},{9:[2,55],10:[2,55]},{9:[2,57],10:[2,57]},{12:[1,89],26:[1,88],66:87},{9:[2,37],10:[2,37]},{9:[1,90]},{9:[2,3]},{17:[1,91],54:[1,92]},{17:[1,93]},{17:[2,44],54:[2,44]},{9:[2,47],10:[2,47],61:[1,94]},{9:[2,52],10:[2,52],61:[2,52]},{9:[2,50],10:[2,50],60:[1,95],61:[2,50]},{9:[2,46],10:[2,46],17:[2,46],54:[2,46]},{9:[2,48],10:[2,48],17:[2,48]},{9:[2,49],10:[2,49],17:[2,49],54:[2,49]},{17:[1,96],54:[1,97]},{17:[1,98]},{17:[2,58],54:[2,58]},{9:[2,61],10:[2,61],17:[2,61],54:[2,61],67:[1,99]},{9:[2,62],10:[2,62],17:[2,62]},{9:[2,63],10:[2,63],17:[2,63],54:[2,63],67:[2,63]},{1:[2,2]},{9:[2,40],10:[2,40]},{52:100,55:[1,101]},{9:[2,42],10:[2,42]},{12:[1,80],59:102},{12:[1,103]},{9:[2,54],10:[2,54]},{63:104,65:[1,105]},{9:[2,56],10:[2,56]},{12:[1,107],68:106},{17:[2,45],54:[2,45]},{12:[1,83],56:81},{9:[2,53],10:[2,53],61:[2,53]},{9:[2,51],10:[2,51],61:[2,51]},{17:[2,59],54:[2,59]},{12:[1,89],66:87},{9:[2,60],10:[2,60],17:[2,60],54:[2,60]},{9:[2,64],10:[2,64],17:[2,64],54:[2,64]}],
+defaultActions: {56:[2,1],74:[2,3],90:[2,2]},
 parseError: function parseError(str, hash) {
     throw new Error(str);
 },
@@ -437,106 +449,118 @@ case 4:return 6;
 break;
 case 5:return 6;
 break;
-case 6:return 26;
+case 6:return 29;
+break;
+case 7:return 29;
+break;
+case 8:return 31;
+break;
+case 9:return 31;
+break;
+case 10:return 28;
+break;
+case 11:return 28;
+break;
+case 12:return 26;
 break;
-case 7:return 26;
+case 13:return 26;
 break;
-case 8:return 28;
+case 14:return 36;
 break;
-case 9:return 28;
+case 15:return 36;
 break;
-case 10:return 25;
+case 16:return 34;
 break;
-case 11:return 25;
+case 17:return 34;
 break;
-case 12:return 23;
+case 18:return 27;
 break;
-case 13:return 23;
+case 19:return 27;
 break;
-case 14:return 34;
+case 20:return 60;
 break;
-case 15:return 34;
+case 21:return 61;
 break;
-case 16:return 31;
+case 22:return 38;
 break;
-case 17:return 31;
+case 23:return 15;
 break;
-case 18:return 24;
+case 24:return 17;
 break;
-case 19:return 24;
+case 25:return 19;
 break;
-case 20:return 56;
+case 26:return 19;
 break;
-case 21:return 57;
+case 27:return 54;
 break;
-case 22:return 36;
+case 28:return 54;
 break;
-case 23:return 12;
+case 29:return 40;
 break;
-case 24:return 14;
+case 30:return 40;
 break;
-case 25:return 16;
+case 31:return 41;
 break;
-case 26:return 16;
+case 32:return 41;
 break;
-case 27:return 50;
+case 33:return 55;
 break;
-case 28:return 50;
+case 34:return 55;
 break;
-case 29:return 38;
+case 35:return 57;
 break;
-case 30:return 38;
+case 36:return 57;
 break;
-case 31:return 39;
+case 37:return 42;
 break;
-case 32:return 39;
+case 38:return 42;
 break;
-case 33:return 51;
+case 39:return 45;
 break;
-case 34:return 51;
+case 40:return 45;
 break;
-case 35:return 53;
+case 41:return 46;
 break;
-case 36:return 53;
+case 42:return 46;
 break;
-case 37:return 40;
+case 43:return 48;
 break;
-case 38:return 40;
+case 44:return 48;
 break;
-case 39:return 43;
+case 45:return 49;
 break;
-case 40:return 43;
+case 46:return 49;
 break;
-case 41:return 44;
+case 47:return 50;
 break;
-case 42:return 44;
+case 48:return 50;
 break;
-case 43:return 46;
+case 49:return 65;
 break;
-case 44:return 46;
+case 50:return 65;
 break;
-case 45:return 61;
+case 51:return 67;
 break;
-case 46:return 61;
+case 52:return 67;
 break;
-case 47:return 63;
+case 53:return 10;
 break;
-case 48:return 63;
+case 54:return 10;
 break;
-case 49:yy_.yytext = yy.tagUnescape(yy_.yytext.substr(1,yy_.yyleng-2)); return 37;
+case 55:yy_.yytext = yy.tagUnescape(yy_.yytext.substr(1,yy_.yyleng-2)); return 39;
 break;
-case 50:return 27;
+case 56:return 30;
 break;
-case 51:return 30;
+case 57:return 33;
 break;
-case 52:return 29;
+case 58:return 32;
 break;
-case 53:return 33
+case 59:return 12
 break;
 }
 },
-rules: [/^(?:\s+)/,/^(?:$)/,/^(?:FROM\b)/,/^(?:from\b)/,/^(?:TO\b)/,/^(?:to\b)/,/^(?:IP\b)/,/^(?:ip\b)/,/^(?:SUBNET\b)/,/^(?:subnet\b)/,/^(?:ANY\b)/,/^(?:any\b)/,/^(?:ALL\b)/,/^(?:all\b)/,/^(?:TAG\b)/,/^(?:tag\b)/,/^(?:VM\b)/,/^(?:vm\b)/,/^(?:VMS\b)/,/^(?:vms\b)/,/^(?:-)/,/^(?:,)/,/^(?:=)/,/^(?:\()/,/^(?:\))/,/^(?:OR\b)/,/^(?:or\b)/,/^(?:AND\b)/,/^(?:and\b)/,/^(?:BLOCK\b)/,/^(?:block\b)/,/^(?:ALLOW\b)/,/^(?:allow\b)/,/^(?:PORT\b)/,/^(?:port\b)/,/^(?:PORTS\b)/,/^(?:ports\b)/,/^(?:TCP\b)/,/^(?:tcp\b)/,/^(?:UDP\b)/,/^(?:udp\b)/,/^(?:ICMP\b)/,/^(?:icmp\b)/,/^(?:ICMP6\b)/,/^(?:icmp6\b)/,/^(?:TYPE\b)/,/^(?:type\b)/,/^(?:CODE\b)/,/^(?:code\b)/,/^(?:"(?:\\["bfnrt/()\\]|\\u[a-fA-F0-9]{4}|[^"\\])*")/,/^(?:(([0-9]){1,3})\.(([0-9]){1,3})\.(([0-9]){1,3})\.(([0-9]){1,3}))/,/^(?:([0-9a-f])*:([0-9a-f])*:[:0-9a-f]*)/,/^(?:\/([0-9]){1,3})/,/^(?:[-a-zA-Z0-9_]+)/],
-conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"inclusive":true}}
+rules: [/^(?:\s+)/,/^(?:$)/,/^(?:FROM\b)/,/^(?:from\b)/,/^(?:TO\b)/,/^(?:to\b)/,/^(?:IP\b)/,/^(?:ip\b)/,/^(?:SUBNET\b)/,/^(?:subnet\b)/,/^(?:ANY\b)/,/^(?:any\b)/,/^(?:ALL\b)/,/^(?:all\b)/,/^(?:TAG\b)/,/^(?:tag\b)/,/^(?:VM\b)/,/^(?:vm\b)/,/^(?:VMS\b)/,/^(?:vms\b)/,/^(?:-)/,/^(?:,)/,/^(?:=)/,/^(?:\()/,/^(?:\))/,/^(?:OR\b)/,/^(?:or\b)/,/^(?:AND\b)/,/^(?:and\b)/,/^(?:BLOCK\b)/,/^(?:block\b)/,/^(?:ALLOW\b)/,/^(?:allow\b)/,/^(?:PORT\b)/,/^(?:port\b)/,/^(?:PORTS\b)/,/^(?:ports\b)/,/^(?:TCP\b)/,/^(?:tcp\b)/,/^(?:UDP\b)/,/^(?:udp\b)/,/^(?:ICMP\b)/,/^(?:icmp\b)/,/^(?:ICMP6\b)/,/^(?:icmp6\b)/,/^(?:AH\b)/,/^(?:ah\b)/,/^(?:ESP\b)/,/^(?:esp\b)/,/^(?:TYPE\b)/,/^(?:type\b)/,/^(?:CODE\b)/,/^(?:code\b)/,/^(?:PRIORITY\b)/,/^(?:priority\b)/,/^(?:"(?:\\["bfnrt/()\\]|\\u[a-fA-F0-9]{4}|[^"\\])*")/,/^(?:(([0-9]){1,3})\.(([0-9]){1,3})\.(([0-9]){1,3})\.(([0-9]){1,3}))/,/^(?:([0-9a-f])*:([0-9a-f])*:[:0-9a-f]*)/,/^(?:\/([0-9]){1,3})/,/^(?:[-a-zA-Z0-9_]+)/],
+conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"inclusive":true}}
 };
 return lexer;
 })();
diff --git a/src/fw/node_modules/fwrule/rule.js b/src/fw/node_modules/fwrule/rule.js
index d9eab021..8032a3ff 100644
--- a/src/fw/node_modules/fwrule/rule.js
+++ b/src/fw/node_modules/fwrule/rule.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2016, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * fwadm: firewall rule model
@@ -29,7 +29,7 @@
 'use strict';
 
 var mod_net = require('net');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var sprintf = require('extsprintf').sprintf;
 var util = require('util');
 var validators = require('./validators');
@@ -55,8 +55,12 @@ var FIELDS = [
 ];
 // Maximum number of targets per side:
 var MAX_TARGETS_PER_SIDE = 24;
-// Maximum number of ports:
-var MAX_PORTS = 8;
+// Maximum number of protocol targets:
+var MAX_PROTOCOL_TARGETS = 24;
+// Minimum version for using a larger list of protocol targets:
+var MINVER_LGPROTOTARG = 4;
+// The old maximum number of protocol targets:
+var OLD_MAX_PORTS = 8;
 var STRING_PROPS = ['created_by', 'description'];
 var TARGET_TYPES = ['wildcard', 'ip', 'subnet', 'tag', 'vm'];
 
@@ -393,14 +397,14 @@ function FwRule(data, opts) {
                 'global must be true or false'));
         }
 
-        if (hasOwnProperty(data, 'global')
-            && hasOwnProperty(data, 'owner_uuid') && data.global) {
+        if (hasOwnProperty(data, 'global') &&
+            hasOwnProperty(data, 'owner_uuid') && data.global) {
             errs.push(new validators.InvalidParamError('global',
                 'cannot specify both global and owner_uuid'));
         }
 
-        if (!hasOwnProperty(data, 'global')
-            && !hasOwnProperty(data, 'owner_uuid')) {
+        if (!hasOwnProperty(data, 'global') &&
+            !hasOwnProperty(data, 'owner_uuid')) {
             errs.push(new validators.InvalidParamError('owner_uuid',
                 'owner_uuid required'));
         }
@@ -420,24 +424,42 @@ function FwRule(data, opts) {
     var dir;
 
     this.action = parsed.action;
+    this.priority = parsed.priority || 0;
     this.protocol = parsed.protocol.name;
 
-    if (icmpr.test(this.protocol)) {
+    switch (this.protocol) {
+    case 'icmp':
+    case 'icmp6':
         this.types = icmpTypeSort(parsed.protocol.targets);
         this.protoTargets = this.types;
-    } else {
+        break;
+    case 'ah':
+    case 'esp':
+        this.protoTargets = parsed.protocol.targets;
+        break;
+    case 'tcp':
+    case 'udp':
         this.ports = parsed.protocol.targets.sort(function (a, b) {
             var first = hasOwnProperty(a, 'start') ? a.start : a;
             var second = hasOwnProperty(b, 'start') ? b.start : b;
             return Number(first) - Number(second);
         });
         this.protoTargets = this.ports;
+        break;
+    default:
+        throw new validators.InvalidParamError('rule',
+            'unknown protocol "%s"', this.protocol);
     }
 
-    if (this.protoTargets.length > MAX_PORTS) {
+    if (opts.maxVersion < MINVER_LGPROTOTARG) {
+        if (this.protoTargets.length > OLD_MAX_PORTS) {
+            throw new validators.InvalidParamError('rule',
+                'maximum of %d %s allowed', OLD_MAX_PORTS,
+                icmpr.test(this.protocol) ? 'types' : 'ports');
+        }
+    } else if (this.protoTargets.length > MAX_PROTOCOL_TARGETS) {
         throw new validators.InvalidParamError('rule',
-            'maximum of %d %s allowed',
-            MAX_TARGETS_PER_SIDE,
+            'maximum of %d %s allowed', MAX_PROTOCOL_TARGETS,
             icmpr.test(this.protocol) ? 'types' : 'ports');
     }
 
@@ -570,6 +592,7 @@ FwRule.prototype.raw = function () {
         action: this.action,
         enabled: this.enabled,
         from: this.from,
+        priority: this.priority,
         protocol: this.protocol,
         to: this.to,
         uuid: this.uuid,
@@ -580,10 +603,20 @@ FwRule.prototype.raw = function () {
         raw.owner_uuid = this.owner_uuid;
     }
 
-    if (icmpr.test(this.protocol)) {
+    switch (this.protocol) {
+    case 'icmp':
+    case 'icmp6':
         raw.types = this.types;
-    } else {
+        break;
+    case 'ah':
+    case 'esp':
+        break;
+    case 'tcp':
+    case 'udp':
         raw.ports = this.ports;
+        break;
+    default:
+        throw new Error('unknown protocol: ' + this.protocol);
     }
 
     for (var s in STRING_PROPS) {
@@ -635,6 +668,7 @@ FwRule.prototype.text = function () {
     var containsRange;
     var ports;
     var protoTxt;
+    var prioTxt = '';
     var targets = {
         from: [],
         to: []
@@ -659,8 +693,10 @@ FwRule.prototype.text = function () {
     });
 
     // Protocol-specific text: different for ICMP rather than TCP/UDP
-    if (icmpr.test(this.protocol)) {
-        protoTxt = util.format('%sTYPE %s%s',
+    switch (this.protocol) {
+    case 'icmp':
+    case 'icmp6':
+        protoTxt = util.format(' %sTYPE %s%s',
             this.types.length > 1 ? '(' : '',
             this.types.map(function (type) {
                 return type.toString().split(':');
@@ -669,10 +705,16 @@ FwRule.prototype.text = function () {
             }).join(' AND TYPE '),
             this.types.length > 1 ? ')' : ''
         );
-    } else {
+        break;
+    case 'ah':
+    case 'esp':
+        protoTxt = '';
+        break;
+    case 'tcp':
+    case 'udp':
         ports = this.ports.map(function (port) {
-            if (hasOwnProperty(port, 'start')
-                && hasOwnProperty(port, 'end')) {
+            if (hasOwnProperty(port, 'start') &&
+                hasOwnProperty(port, 'end')) {
                 /*
                  * We only output PORTS when we have a range, since we don't
                  * distinguish PORTS 1, 2 from (PORT 1 AND PORT 2) after
@@ -685,17 +727,24 @@ FwRule.prototype.text = function () {
             }
         });
         if (containsRange) {
-            protoTxt = util.format('PORTS %s', ports.join(', '));
+            protoTxt = util.format(' PORTS %s', ports.join(', '));
         } else {
-            protoTxt = util.format('%sPORT %s%s',
+            protoTxt = util.format(' %sPORT %s%s',
                 ports.length > 1 ? '(' : '',
                 ports.join(' AND PORT '),
                 ports.length > 1 ? ')' : ''
             );
         }
+        break;
+    default:
+        throw new Error('unknown protocol: ' + this.protocol);
+    }
+
+    if (this.priority > 0) {
+        prioTxt += ' PRIORITY ' + this.priority.toString();
     }
 
-    return util.format('FROM %s%s%s TO %s%s%s %s %s',
+    return util.format('FROM %s%s%s TO %s%s%s %s %s%s%s',
             targets.from.length > 1 ? '(' : '',
             targets.from.join(' OR '),
             targets.from.length > 1 ? ')' : '',
@@ -704,7 +753,8 @@ FwRule.prototype.text = function () {
             targets.to.length > 1 ? ')' : '',
             this.action.toUpperCase(),
             this.protocol.toLowerCase(),
-            protoTxt
+            protoTxt,
+            prioTxt
     );
 };
 
diff --git a/src/fw/node_modules/fwrule/validators.js b/src/fw/node_modules/fwrule/validators.js
index 4238cc9c..817eb5ec 100644
--- a/src/fw/node_modules/fwrule/validators.js
+++ b/src/fw/node_modules/fwrule/validators.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2016, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  */
 
@@ -41,7 +41,6 @@ var VError = require('verror').VError;
 
 
 
-var icmpr = /^icmp6?$/;
 var portRE = /^[0-9]{1,5}$/;
 var UUID_REGEX =
     /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;
@@ -130,16 +129,25 @@ function validatePortOrAll(port) {
 }
 
 /**
- * Returns true if protocol is one of tcp, udp, icmp (mixing of upper
- * and lower-case allowed)
+ * Returns true if protocol is one of the protocols recognized by the
+ * fwrule language. (Mixing of upper and lower-case is allowed.)
  */
 function validateProtocol(protocol) {
     if (typeof (protocol) !== 'string') {
         return false;
     }
 
-    var protoLC = protocol.toLowerCase();
-    return ((protoLC === 'tcp') || (protoLC === 'udp') || icmpr.test(protoLC));
+    switch (protocol.toLowerCase()) {
+    case 'ah':
+    case 'esp':
+    case 'icmp':
+    case 'icmp6':
+    case 'tcp':
+    case 'udp':
+        return true;
+    default:
+        return false;
+    }
 }
 
 
diff --git a/src/fw/node_modules/node-uuid/LICENSE.md b/src/fw/node_modules/node-uuid/LICENSE.md
deleted file mode 100644
index bcdddf9a..00000000
--- a/src/fw/node_modules/node-uuid/LICENSE.md
+++ /dev/null
@@ -1,3 +0,0 @@
-Copyright (c) 2010 Robert Kieffer
-
-Dual licensed under the [MIT](http://en.wikipedia.org/wiki/MIT_License) and [GPL](http://en.wikipedia.org/wiki/GNU_General_Public_License) licenses.
diff --git a/src/fw/node_modules/node-uuid/index.js b/src/fw/node_modules/node-uuid/index.js
deleted file mode 100644
index 76328cd9..00000000
--- a/src/fw/node_modules/node-uuid/index.js
+++ /dev/null
@@ -1,257 +0,0 @@
-/*
- * Generate RFC4122 (v1 and v4) UUIDs
- *
- * Documentation at https://github.com/broofa/node-uuid
- */
-(function() {
-  // Use WHATWG crypto api if available, otherwise shim it
-  // http://wiki.whatwg.org/wiki/Crypto
-  //
-  // (Create a static _rnds array here as well, which lets us avoid per-uuid
-  // array creation)
-  var crypto, _rnds;
-  if (crypto && crypto.getRandomValues) {
-    _rnds = new Uint32Array(4);
-  } else {
-    _rnds = new Array(4);
-    // Math.random does not have the cryptographic-quality guarantee for
-    // randomness that crypto.getRandomValues has, but it's the best we have.
-    crypto = {
-      getRandomValues: function(arr) {
-        for (var i = 0, l = arr.length; i < l; i++) {
-          _rnds[i] = Math.random() * 0x100000000;
-        }
-      }
-    };
-  }
-
-  // Use node.js Buffer class if available, otherwise use the Array class
-  var BufferClass = typeof(Buffer) == 'function' ? Buffer : Array;
-
-  // Maps for number <-> hex string conversion
-  var _octetToHex = [];
-  var _hexToOctet = {};
-  for (var i = 0; i < 256; i++) {
-    _octetToHex[i] = (i + 0x100).toString(16).substr(1);
-    _hexToOctet[_octetToHex[i]] = i;
-  }
-
-  /**
-   * Parse a uuid string into it's component octets.
-   *
-   * This is a loose parser.  It parses the first 16 octet pairs as hex
-   * values.  If fewer than 16 are found, any remaining entries in the array
-   * are set to zero.
-   *
-   * @param s (String) string to parse.
-   * @param buf (Array|Buffer) Optional buffer to capture parsed values in
-   * @param offset (Number) Optional starting offset into buf
-   */
-  function parse(s, buf, offset) {
-    var buf = buf || new BufferClass(16),
-        i = offset || 0,
-        ii = 0;
-    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(octet) {
-      if (ii < 16) { // Don't overflow!
-        buf[i + ii++] = _hexToOctet[octet];
-      }
-    });
-
-    // Zero out remaining octets if string was short
-    while (ii < 16) {
-      buf[i + ii] = 0;
-    }
-
-    return buf;
-  }
-
-  /**
-   * Generate a uuid string from octet array
-   *
-   * @param buf (Array|Buffer) Optional buffer to pull octets from
-   * @param offset (Number) Optional starting offset into buf
-   */
-  function unparse(buf, offset) {
-    var oth = _octetToHex,
-        b = buf,
-        i = offset || 0;
-    return  oth[b[i + 0]] + oth[b[i + 1]] +
-            oth[b[i + 2]] + oth[b[i + 3]] + '-' +
-            oth[b[i + 4]] + oth[b[i + 5]] + '-' +
-            oth[b[i + 6]] + oth[b[i + 7]] + '-' +
-            oth[b[i + 8]] + oth[b[i + 9]] + '-' +
-            oth[b[i + 10]] + oth[b[i + 11]] +
-            oth[b[i + 12]] + oth[b[i + 13]] +
-            oth[b[i + 14]] + oth[b[i + 15]];
-  }
-
-  /**
-   * Create and return octets for a 48-bit node id:
-   * 47 bits random, 1 bit (multicast) set to 1
-   */
-  function _randomNodeId() {
-    crypto.getRandomValues(_rnds);
-
-    return [
-      _rnds[0] & 0xff | 0x01, // Set multicast bit, per 4.1.6 and 4.5
-      _rnds[0] >>> 8 & 0xff,
-      _rnds[0] >>> 16 & 0xff,
-      _rnds[0] >>> 24 & 0xff,
-      _rnds[1] & 0xff,
-      _rnds[1] >>> 8 & 0xff
-    ];
-  }
-
-  // Pre-allocate arrays to avoid per-uuid array creation
-  var _buf = new BufferClass(16);
-
-  //
-  // v1 UUID support
-  //
-  // Inspired by https://github.com/LiosK/UUID.js
-  // and http://docs.python.org/library/uuid.html
-  //
-
-  // Per 4.1.4 - Offset (in msecs) from JS time to UUID (gregorian) time
-  var EPOCH_OFFSET = 12219292800000;
-
-  // Per 4.1.4 - UUID time has 100ns resolution
-  // Per 4.2.1.2 - Count of uuids may be used with low resolution clocks
-  var UUIDS_PER_TICK = 10000;
-
-  // Per 4.5, use a random node id
-  var _nodeId = _randomNodeId();
-
-  // Per 4.2.2, use 14 bit random unsigned integer to initialize clock_seq
-  var _clockSeq = _rnds[2] & 0x3fff;
-
-  // Time of previous uuid creation
-  var _last = 0;
-
-  // # of UUIDs that have been created during current millisecond time tick
-  var _count = 0;
-
-  /**
-   * See docs at https://github.com/broofa/node-uuid
-   */
-  function v1(options, buf, offset) {
-    options = typeof(options) == 'string' ? {format: options} : options || {};
-
-    var b = options.format != 'binary' ? _buf :
-            (buf ? buf : new BufferClass(16));
-    var i = buf && offset || 0;
-
-    // JS Numbers don't have sufficient resolution for keeping time in
-    // 100-nanosecond units, as spec'ed by the RFC, so we kind of kludge things
-    // here by tracking time in JS-msec units, with a second var for the
-    // additional 100-nanosecond units to add to the millisecond-based time.
-    var msecs = 0; // JS time (msecs since Unix epoch)
-    var nsecs = 0; // Additional time (100-nanosecond units), added to msecs
-
-    // Get msecs & nsecs
-    if (options.msecs == null) {
-      // Per 4.2.1.2, use uuid count to simulate higher resolution clock
-      // Get current time and simulate higher clock resolution
-      msecs = new Date().getTime() + EPOCH_OFFSET;
-      _count = (msecs == _last) ? _count + 1 : 0;
-
-      // Per 4.2.1.2 If generator overruns, throw an error
-      // (*Highly* unlikely - requires generating > 10M uuids/sec)
-      if (_count == UUIDS_PER_TICK) {
-        throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
-      }
-
-      // Per 4.2.1.2, if time regresses bump the clock sequence.
-      if (msecs < _last) {
-        _clockSeq++;
-        _count = 0;
-      }
-
-      _last = msecs;
-      nsecs = _count;
-    } else {
-      msecs = options.msecs + EPOCH_OFFSET;
-      nsecs = options.nsecs || 0;
-    }
-    // Per 4.1.4, timestamp composition
-    // time is uuid epoch time in _msecs_
-    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
-    var tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;
-    var tm = tmh & 0xffff, th = tmh >> 16;
-    var thav = (th & 0xfff) | 0x1000; // Set version, per 4.1.3
-
-    // Clock sequence
-    var cs = options.clockseq != null ? options.clockseq : _clockSeq;
-
-    // time_low
-    b[i++] = tl >>> 24 & 0xff;
-    b[i++] = tl >>> 16 & 0xff;
-    b[i++] = tl >>> 8 & 0xff;
-    b[i++] = tl & 0xff;
-
-    // time_mid
-    b[i++] = tm >>> 8 & 0xff;
-    b[i++] = tm & 0xff;
-
-    // time_high_and_version
-    b[i++] = thav >>> 8 & 0xff;
-    b[i++] = thav & 0xff;
-
-    // clock_seq_hi_and_reserved (include variant, per 4.2.2)
-    b[i++] = (cs >>> 8) | 0x80;
-
-    // clock_seq_low
-    b[i++] = cs & 0xff;
-
-    // node
-    var node = options.node || _nodeId;
-    for (var n = 0; n < 6; n++) {
-      b[i + n] = node[n];
-    }
-
-    return options.format == null ? unparse(b) : b;
-  }
-
-  //
-  // v4 UUID support
-  //
-
-  /**
-   * See docs at https://github.com/broofa/node-uuid
-   */
-  function v4(options, buf, offset) {
-    options = typeof(options) == 'string' ? {format: options} : options || {};
-
-    var b = options.format != 'binary' ? _buf :
-            (buf ? buf : new BufferClass(16));
-    var i = buf && offset || 0;
-
-    var rnds = options.random || crypto.getRandomValues(_rnds);
-
-    // v4 ideas are all random bits
-    for (var c = 0 ; c < 16; c++) {
-      var ri = c >> 2,
-          rb = (c & 0x03) * 8;
-      b[i + c] = _rnds[ri] >>> rb & 0xff;
-    }
-
-    // ... except for this
-    b[i + 6] = (b[i + 6] & 0x0f) | 0x40; // Per RFC4122 sect. 4.1.3
-    b[i + 8] = (b[i + 8] & 0x3f) | 0x80; // Per RFC4122 sect. 4.4
-
-    return options.format == null ? unparse(b) : b;
-  }
-
-  var uuid = v4;
-  uuid.v1 = v1;
-  uuid.v4 = v4;
-  uuid.parse = parse;
-  uuid.unparse = unparse;
-  uuid.BufferClass = BufferClass;
-
-  if (typeof(module) != 'undefined') {
-    module.exports = uuid;
-  } else {
-    this.uuid = uuid;
-  }
-}());
diff --git a/src/fw/node_modules/uuid/LICENSE.md b/src/fw/node_modules/uuid/LICENSE.md
new file mode 100644
index 00000000..8c84e398
--- /dev/null
+++ b/src/fw/node_modules/uuid/LICENSE.md
@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright (c) 2010-2016 Robert Kieffer and other contributors
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/src/fw/node_modules/uuid/index.js b/src/fw/node_modules/uuid/index.js
new file mode 100644
index 00000000..e96791ab
--- /dev/null
+++ b/src/fw/node_modules/uuid/index.js
@@ -0,0 +1,8 @@
+var v1 = require('./v1');
+var v4 = require('./v4');
+
+var uuid = v4;
+uuid.v1 = v1;
+uuid.v4 = v4;
+
+module.exports = uuid;
diff --git a/src/fw/node_modules/uuid/lib/bytesToUuid.js b/src/fw/node_modules/uuid/lib/bytesToUuid.js
new file mode 100644
index 00000000..2c9a2230
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/bytesToUuid.js
@@ -0,0 +1,23 @@
+/**
+ * Convert array of 16 byte values to UUID string format of the form:
+ * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
+ */
+var byteToHex = [];
+for (var i = 0; i < 256; ++i) {
+  byteToHex[i] = (i + 0x100).toString(16).substr(1);
+}
+
+function bytesToUuid(buf, offset) {
+  var i = offset || 0;
+  var bth = byteToHex;
+  return bth[buf[i++]] + bth[buf[i++]] +
+          bth[buf[i++]] + bth[buf[i++]] + '-' +
+          bth[buf[i++]] + bth[buf[i++]] + '-' +
+          bth[buf[i++]] + bth[buf[i++]] + '-' +
+          bth[buf[i++]] + bth[buf[i++]] + '-' +
+          bth[buf[i++]] + bth[buf[i++]] +
+          bth[buf[i++]] + bth[buf[i++]] +
+          bth[buf[i++]] + bth[buf[i++]];
+}
+
+module.exports = bytesToUuid;
diff --git a/src/fw/node_modules/uuid/lib/md5-browser.js b/src/fw/node_modules/uuid/lib/md5-browser.js
new file mode 100644
index 00000000..9b3b6c7e
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/md5-browser.js
@@ -0,0 +1,216 @@
+/*
+ * Browser-compatible JavaScript MD5
+ *
+ * Modification of JavaScript MD5
+ * https://github.com/blueimp/JavaScript-MD5
+ *
+ * Copyright 2011, Sebastian Tschan
+ * https://blueimp.net
+ *
+ * Licensed under the MIT license:
+ * https://opensource.org/licenses/MIT
+ *
+ * Based on
+ * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
+ * Digest Algorithm, as defined in RFC 1321.
+ * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
+ * Distributed under the BSD License
+ * See http://pajhome.org.uk/crypt/md5 for more info.
+ */
+
+'use strict';
+
+function md5(bytes) {
+  if (typeof(bytes) == 'string') {
+    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape
+    bytes = new Array(msg.length);
+    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);
+  }
+
+  return md5ToHexEncodedArray(
+    wordsToMd5(
+      bytesToWords(bytes)
+      , bytes.length * 8)
+  );
+}
+
+
+/*
+* Convert an array of little-endian words to an array of bytes
+*/
+function md5ToHexEncodedArray(input) {
+  var i;
+  var x;
+  var output = [];
+  var length32 = input.length * 32;
+  var hexTab = '0123456789abcdef';
+  var hex;
+
+  for (i = 0; i < length32; i += 8) {
+    x = (input[i >> 5] >>> (i % 32)) & 0xFF;
+
+    hex = parseInt(hexTab.charAt((x >>> 4) & 0x0F) + hexTab.charAt(x & 0x0F), 16);
+
+    output.push(hex);
+  }
+  return output;
+}
+
+/*
+* Calculate the MD5 of an array of little-endian words, and a bit length.
+*/
+function wordsToMd5(x, len) {
+  /* append padding */
+  x[len >> 5] |= 0x80 << (len % 32);
+  x[(((len + 64) >>> 9) << 4) + 14] = len;
+
+  var i;
+  var olda;
+  var oldb;
+  var oldc;
+  var oldd;
+  var a = 1732584193;
+  var b = -271733879;
+  var c = -1732584194;
+
+  var d = 271733878;
+
+  for (i = 0; i < x.length; i += 16) {
+    olda = a;
+    oldb = b;
+    oldc = c;
+    oldd = d;
+
+    a = md5ff(a, b, c, d, x[i], 7, -680876936);
+    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
+    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
+    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
+    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
+    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
+    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
+    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
+    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
+    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
+    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
+    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
+    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
+    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
+    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
+    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
+
+    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
+    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
+    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
+    b = md5gg(b, c, d, a, x[i], 20, -373897302);
+    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
+    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
+    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
+    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
+    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
+    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
+    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
+    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
+    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
+    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
+    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
+    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
+
+    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
+    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
+    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
+    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
+    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
+    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
+    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
+    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
+    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
+    d = md5hh(d, a, b, c, x[i], 11, -358537222);
+    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
+    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
+    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
+    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
+    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
+    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
+
+    a = md5ii(a, b, c, d, x[i], 6, -198630844);
+    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
+    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
+    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
+    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
+    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
+    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
+    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
+    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
+    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
+    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
+    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
+    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
+    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
+    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
+    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
+
+    a = safeAdd(a, olda);
+    b = safeAdd(b, oldb);
+    c = safeAdd(c, oldc);
+    d = safeAdd(d, oldd);
+  }
+  return [a, b, c, d];
+}
+
+/*
+* Convert an array bytes to an array of little-endian words
+* Characters >255 have their high-byte silently ignored.
+*/
+function bytesToWords(input) {
+  var i;
+  var output = [];
+  output[(input.length >> 2) - 1] = undefined;
+  for (i = 0; i < output.length; i += 1) {
+    output[i] = 0;
+  }
+  var length8 = input.length * 8;
+  for (i = 0; i < length8; i += 8) {
+    output[i >> 5] |= (input[(i / 8)] & 0xFF) << (i % 32);
+  }
+
+  return output;
+}
+
+/*
+* Add integers, wrapping at 2^32. This uses 16-bit operations internally
+* to work around bugs in some JS interpreters.
+*/
+function safeAdd(x, y) {
+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
+  return (msw << 16) | (lsw & 0xFFFF);
+}
+
+/*
+* Bitwise rotate a 32-bit number to the left.
+*/
+function bitRotateLeft(num, cnt) {
+  return (num << cnt) | (num >>> (32 - cnt));
+}
+
+/*
+* These functions implement the four basic operations the algorithm uses.
+*/
+function md5cmn(q, a, b, x, s, t) {
+  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
+}
+function md5ff(a, b, c, d, x, s, t) {
+  return md5cmn((b & c) | ((~b) & d), a, b, x, s, t);
+}
+function md5gg(a, b, c, d, x, s, t) {
+  return md5cmn((b & d) | (c & (~d)), a, b, x, s, t);
+}
+function md5hh(a, b, c, d, x, s, t) {
+  return md5cmn(b ^ c ^ d, a, b, x, s, t);
+}
+function md5ii(a, b, c, d, x, s, t) {
+  return md5cmn(c ^ (b | (~d)), a, b, x, s, t);
+}
+
+module.exports = md5;
diff --git a/src/fw/node_modules/uuid/lib/md5.js b/src/fw/node_modules/uuid/lib/md5.js
new file mode 100644
index 00000000..7044b872
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/md5.js
@@ -0,0 +1,25 @@
+'use strict';
+
+var crypto = require('crypto');
+
+function md5(bytes) {
+  if (typeof Buffer.from === 'function') {
+    // Modern Buffer API
+    if (Array.isArray(bytes)) {
+      bytes = Buffer.from(bytes);
+    } else if (typeof bytes === 'string') {
+      bytes = Buffer.from(bytes, 'utf8');
+    }
+  } else {
+    // Pre-v4 Buffer API
+    if (Array.isArray(bytes)) {
+      bytes = new Buffer(bytes);
+    } else if (typeof bytes === 'string') {
+      bytes = new Buffer(bytes, 'utf8');
+    }
+  }
+
+  return crypto.createHash('md5').update(bytes).digest();
+}
+
+module.exports = md5;
diff --git a/src/fw/node_modules/uuid/lib/rng-browser.js b/src/fw/node_modules/uuid/lib/rng-browser.js
new file mode 100644
index 00000000..14d21170
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/rng-browser.js
@@ -0,0 +1,32 @@
+// Unique ID creation requires a high quality random # generator.  In the
+// browser this is a little complicated due to unknown quality of Math.random()
+// and inconsistent support for the `crypto` API.  We do the best we can via
+// feature-detection
+
+// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.
+var getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||
+                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));
+if (getRandomValues) {
+  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
+  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef
+
+  module.exports = function whatwgRNG() {
+    getRandomValues(rnds8);
+    return rnds8;
+  };
+} else {
+  // Math.random()-based (RNG)
+  //
+  // If all else fails, use Math.random().  It's fast, but is of unspecified
+  // quality.
+  var rnds = new Array(16);
+
+  module.exports = function mathRNG() {
+    for (var i = 0, r; i < 16; i++) {
+      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
+      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
+    }
+
+    return rnds;
+  };
+}
diff --git a/src/fw/node_modules/uuid/lib/rng.js b/src/fw/node_modules/uuid/lib/rng.js
new file mode 100644
index 00000000..58f0dc9c
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/rng.js
@@ -0,0 +1,8 @@
+// Unique ID creation requires a high quality random # generator.  In node.js
+// this is pretty straight-forward - we use the crypto API.
+
+var crypto = require('crypto');
+
+module.exports = function nodeRNG() {
+  return crypto.randomBytes(16);
+};
diff --git a/src/fw/node_modules/uuid/lib/sha1-browser.js b/src/fw/node_modules/uuid/lib/sha1-browser.js
new file mode 100644
index 00000000..5758ed75
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/sha1-browser.js
@@ -0,0 +1,89 @@
+// Adapted from Chris Veness' SHA1 code at
+// http://www.movable-type.co.uk/scripts/sha1.html
+'use strict';
+
+function f(s, x, y, z) {
+  switch (s) {
+    case 0: return (x & y) ^ (~x & z);
+    case 1: return x ^ y ^ z;
+    case 2: return (x & y) ^ (x & z) ^ (y & z);
+    case 3: return x ^ y ^ z;
+  }
+}
+
+function ROTL(x, n) {
+  return (x << n) | (x>>> (32 - n));
+}
+
+function sha1(bytes) {
+  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
+  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
+
+  if (typeof(bytes) == 'string') {
+    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape
+    bytes = new Array(msg.length);
+    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);
+  }
+
+  bytes.push(0x80);
+
+  var l = bytes.length/4 + 2;
+  var N = Math.ceil(l/16);
+  var M = new Array(N);
+
+  for (var i=0; i<N; i++) {
+    M[i] = new Array(16);
+    for (var j=0; j<16; j++) {
+      M[i][j] =
+        bytes[i * 64 + j * 4] << 24 |
+        bytes[i * 64 + j * 4 + 1] << 16 |
+        bytes[i * 64 + j * 4 + 2] << 8 |
+        bytes[i * 64 + j * 4 + 3];
+    }
+  }
+
+  M[N - 1][14] = ((bytes.length - 1) * 8) /
+    Math.pow(2, 32); M[N - 1][14] = Math.floor(M[N - 1][14]);
+  M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;
+
+  for (var i=0; i<N; i++) {
+    var W = new Array(80);
+
+    for (var t=0; t<16; t++) W[t] = M[i][t];
+    for (var t=16; t<80; t++) {
+      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
+    }
+
+    var a = H[0];
+    var b = H[1];
+    var c = H[2];
+    var d = H[3];
+    var e = H[4];
+
+    for (var t=0; t<80; t++) {
+      var s = Math.floor(t/20);
+      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;
+      e = d;
+      d = c;
+      c = ROTL(b, 30) >>> 0;
+      b = a;
+      a = T;
+    }
+
+    H[0] = (H[0] + a) >>> 0;
+    H[1] = (H[1] + b) >>> 0;
+    H[2] = (H[2] + c) >>> 0;
+    H[3] = (H[3] + d) >>> 0;
+    H[4] = (H[4] + e) >>> 0;
+  }
+
+  return [
+    H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff,
+    H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff,
+    H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff,
+    H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff,
+    H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff
+  ];
+}
+
+module.exports = sha1;
diff --git a/src/fw/node_modules/uuid/lib/sha1.js b/src/fw/node_modules/uuid/lib/sha1.js
new file mode 100644
index 00000000..0b54b250
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/sha1.js
@@ -0,0 +1,25 @@
+'use strict';
+
+var crypto = require('crypto');
+
+function sha1(bytes) {
+  if (typeof Buffer.from === 'function') {
+    // Modern Buffer API
+    if (Array.isArray(bytes)) {
+      bytes = Buffer.from(bytes);
+    } else if (typeof bytes === 'string') {
+      bytes = Buffer.from(bytes, 'utf8');
+    }
+  } else {
+    // Pre-v4 Buffer API
+    if (Array.isArray(bytes)) {
+      bytes = new Buffer(bytes);
+    } else if (typeof bytes === 'string') {
+      bytes = new Buffer(bytes, 'utf8');
+    }
+  }
+
+  return crypto.createHash('sha1').update(bytes).digest();
+}
+
+module.exports = sha1;
diff --git a/src/fw/node_modules/uuid/lib/v35.js b/src/fw/node_modules/uuid/lib/v35.js
new file mode 100644
index 00000000..842c60ea
--- /dev/null
+++ b/src/fw/node_modules/uuid/lib/v35.js
@@ -0,0 +1,53 @@
+var bytesToUuid = require('./bytesToUuid');
+
+function uuidToBytes(uuid) {
+  // Note: We assume we're being passed a valid uuid string
+  var bytes = [];
+  uuid.replace(/[a-fA-F0-9]{2}/g, function(hex) {
+    bytes.push(parseInt(hex, 16));
+  });
+
+  return bytes;
+}
+
+function stringToBytes(str) {
+  str = unescape(encodeURIComponent(str)); // UTF8 escape
+  var bytes = new Array(str.length);
+  for (var i = 0; i < str.length; i++) {
+    bytes[i] = str.charCodeAt(i);
+  }
+  return bytes;
+}
+
+module.exports = function(name, version, hashfunc) {
+  var generateUUID = function(value, namespace, buf, offset) {
+    var off = buf && offset || 0;
+
+    if (typeof(value) == 'string') value = stringToBytes(value);
+    if (typeof(namespace) == 'string') namespace = uuidToBytes(namespace);
+
+    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');
+    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');
+
+    // Per 4.3
+    var bytes = hashfunc(namespace.concat(value));
+    bytes[6] = (bytes[6] & 0x0f) | version;
+    bytes[8] = (bytes[8] & 0x3f) | 0x80;
+
+    if (buf) {
+      for (var idx = 0; idx < 16; ++idx) {
+        buf[off+idx] = bytes[idx];
+      }
+    }
+
+    return buf || bytesToUuid(bytes);
+  };
+
+  generateUUID.name = name;
+
+  // Pre-defined namespaces, per Appendix C
+  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
+  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
+
+  return generateUUID;
+};
diff --git a/src/fw/node_modules/uuid/v1.js b/src/fw/node_modules/uuid/v1.js
new file mode 100644
index 00000000..d84c0f45
--- /dev/null
+++ b/src/fw/node_modules/uuid/v1.js
@@ -0,0 +1,109 @@
+var rng = require('./lib/rng');
+var bytesToUuid = require('./lib/bytesToUuid');
+
+// **`v1()` - Generate time-based UUID**
+//
+// Inspired by https://github.com/LiosK/UUID.js
+// and http://docs.python.org/library/uuid.html
+
+var _nodeId;
+var _clockseq;
+
+// Previous uuid creation time
+var _lastMSecs = 0;
+var _lastNSecs = 0;
+
+// See https://github.com/broofa/node-uuid for API details
+function v1(options, buf, offset) {
+  var i = buf && offset || 0;
+  var b = buf || [];
+
+  options = options || {};
+  var node = options.node || _nodeId;
+  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;
+
+  // node and clockseq need to be initialized to random values if they're not
+  // specified.  We do this lazily to minimize issues related to insufficient
+  // system entropy.  See #189
+  if (node == null || clockseq == null) {
+    var seedBytes = rng();
+    if (node == null) {
+      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
+      node = _nodeId = [
+        seedBytes[0] | 0x01,
+        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]
+      ];
+    }
+    if (clockseq == null) {
+      // Per 4.2.2, randomize (14 bit) clockseq
+      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
+    }
+  }
+
+  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
+  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
+  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
+  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
+  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();
+
+  // Per 4.2.1.2, use count of uuid's generated during the current clock
+  // cycle to simulate higher resolution clock
+  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;
+
+  // Time since last uuid creation (in msecs)
+  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;
+
+  // Per 4.2.1.2, Bump clockseq on clock regression
+  if (dt < 0 && options.clockseq === undefined) {
+    clockseq = clockseq + 1 & 0x3fff;
+  }
+
+  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
+  // time interval
+  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
+    nsecs = 0;
+  }
+
+  // Per 4.2.1.2 Throw error if too many uuids are requested
+  if (nsecs >= 10000) {
+    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
+  }
+
+  _lastMSecs = msecs;
+  _lastNSecs = nsecs;
+  _clockseq = clockseq;
+
+  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
+  msecs += 12219292800000;
+
+  // `time_low`
+  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
+  b[i++] = tl >>> 24 & 0xff;
+  b[i++] = tl >>> 16 & 0xff;
+  b[i++] = tl >>> 8 & 0xff;
+  b[i++] = tl & 0xff;
+
+  // `time_mid`
+  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
+  b[i++] = tmh >>> 8 & 0xff;
+  b[i++] = tmh & 0xff;
+
+  // `time_high_and_version`
+  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
+  b[i++] = tmh >>> 16 & 0xff;
+
+  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
+  b[i++] = clockseq >>> 8 | 0x80;
+
+  // `clock_seq_low`
+  b[i++] = clockseq & 0xff;
+
+  // `node`
+  for (var n = 0; n < 6; ++n) {
+    b[i + n] = node[n];
+  }
+
+  return buf ? buf : bytesToUuid(b);
+}
+
+module.exports = v1;
diff --git a/src/fw/node_modules/uuid/v4.js b/src/fw/node_modules/uuid/v4.js
new file mode 100644
index 00000000..1f07be1c
--- /dev/null
+++ b/src/fw/node_modules/uuid/v4.js
@@ -0,0 +1,29 @@
+var rng = require('./lib/rng');
+var bytesToUuid = require('./lib/bytesToUuid');
+
+function v4(options, buf, offset) {
+  var i = buf && offset || 0;
+
+  if (typeof(options) == 'string') {
+    buf = options === 'binary' ? new Array(16) : null;
+    options = null;
+  }
+  options = options || {};
+
+  var rnds = options.random || (options.rng || rng)();
+
+  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
+  rnds[6] = (rnds[6] & 0x0f) | 0x40;
+  rnds[8] = (rnds[8] & 0x3f) | 0x80;
+
+  // Copy bytes to buffer, if provided
+  if (buf) {
+    for (var ii = 0; ii < 16; ++ii) {
+      buf[i + ii] = rnds[ii];
+    }
+  }
+
+  return buf || bytesToUuid(rnds);
+}
+
+module.exports = v4;
diff --git a/src/fw/package.json b/src/fw/package.json
index f0e44cfa..91311202 100644
--- a/src/fw/package.json
+++ b/src/fw/package.json
@@ -16,10 +16,10 @@
     "clone": "0.1.4",
     "cmdln": "4.1.1",
     "extsprintf": "1.0.2",
-    "fwrule": "1.4.1",
+    "fwrule": "2.0.0",
     "ip6addr": "0.2.2",
     "mkdirp": "0.3.4",
-    "node-uuid": "1.2.0",
+    "uuid": "3.2.1",
     "tab": "0.1.0",
     "vasync": "1.6.3",
     "verror": "1.6.0"
diff --git a/src/fw/test/lib/helpers.js b/src/fw/test/lib/helpers.js
index 713c4b4d..0852e9f6 100644
--- a/src/fw/test/lib/helpers.js
+++ b/src/fw/test/lib/helpers.js
@@ -31,7 +31,7 @@ var fwrule = require('fwrule');
 var mod_addr = require('ip6addr');
 var mod_obj = require('../../lib/util/obj');
 var mocks = require('./mocks');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 var VError = require('verror');
diff --git a/src/fw/test/lib/mocks.js b/src/fw/test/lib/mocks.js
index 3c9cb976..d2fb1227 100644
--- a/src/fw/test/lib/mocks.js
+++ b/src/fw/test/lib/mocks.js
@@ -473,12 +473,12 @@ function setup(opts) {
         'fwrule',
         'ip6addr',
         'net',
-        'node-uuid',
         'path',
         'stream',
         'vasync',
         'verror',
         'util',
+        'uuid',
         './',
         './clonePrototype.js',
         './filter',
diff --git a/src/fw/test/unit/add.test.js b/src/fw/test/unit/add.test.js
index 2eecd15b..1dd634b7 100644
--- a/src/fw/test/unit/add.test.js
+++ b/src/fw/test/unit/add.test.js
@@ -10,7 +10,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/test/unit/fw.test.js b/src/fw/test/unit/fw.test.js
index 95aeec42..cee15158 100644
--- a/src/fw/test/unit/fw.test.js
+++ b/src/fw/test/unit/fw.test.js
@@ -31,7 +31,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/test/unit/global.test.js b/src/fw/test/unit/global.test.js
index e96a09e3..dfbea8fd 100644
--- a/src/fw/test/unit/global.test.js
+++ b/src/fw/test/unit/global.test.js
@@ -10,7 +10,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/test/unit/icmp.test.js b/src/fw/test/unit/icmp.test.js
index 05e32bc3..53deb355 100644
--- a/src/fw/test/unit/icmp.test.js
+++ b/src/fw/test/unit/icmp.test.js
@@ -31,7 +31,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/test/unit/list.test.js b/src/fw/test/unit/list.test.js
index a61e4c53..95f88a82 100644
--- a/src/fw/test/unit/list.test.js
+++ b/src/fw/test/unit/list.test.js
@@ -10,7 +10,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/test/unit/owner.test.js b/src/fw/test/unit/owner.test.js
index 7a6d4eb4..9e229b9e 100644
--- a/src/fw/test/unit/owner.test.js
+++ b/src/fw/test/unit/owner.test.js
@@ -31,7 +31,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 
 var createSubObjects = mod_obj.createSubObjects;
diff --git a/src/fw/test/unit/priority.test.js b/src/fw/test/unit/priority.test.js
new file mode 100644
index 00000000..d31fc0a8
--- /dev/null
+++ b/src/fw/test/unit/priority.test.js
@@ -0,0 +1,415 @@
+/*
+ * CDDL HEADER START
+ *
+ * The contents of this file are subject to the terms of the
+ * Common Development and Distribution License, Version 1.0 only
+ * (the "License").  You may not use this file except in compliance
+ * with the License.
+ *
+ * You can obtain a copy of the license at http://smartos.org/CDDL
+ *
+ * See the License for the specific language governing permissions
+ * and limitations under the License.
+ *
+ * When distributing Covered Code, include this CDDL HEADER in each
+ * file.
+ *
+ * If applicable, add the following below this CDDL HEADER, with the
+ * fields enclosed by brackets "[]" replaced with your own identifying
+ * information: Portions Copyright [yyyy] [name of copyright owner]
+ *
+ * CDDL HEADER END
+ *
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
+ *
+ * fwadm tests: Sorting based on PRIORITY keyword
+ */
+
+var async = require('async');
+var clone = require('clone');
+var fw;
+var helpers = require('../lib/helpers');
+var mocks = require('../lib/mocks');
+var mod_obj = require('../../lib/util/obj');
+var mod_uuid = require('uuid');
+var util = require('util');
+var util_vm = require('../../lib/util/vm');
+
+
+// --- Globals
+
+
+
+// Set this to any of the exports in this file to only run that test,
+// plus setup and teardown
+var runOne;
+
+
+
+// --- Setup
+
+
+
+exports['setup'] = function (t) {
+    fw = mocks.setup();
+    t.ok(fw, 'fw loaded');
+    t.done();
+};
+
+
+// run before every test
+exports.setUp = function (cb) {
+    if (fw) {
+        mocks.reset();
+    }
+    cb();
+};
+
+
+
+// --- Tests
+
+
+exports['Overriding inbound rules'] = function (t) {
+    var vm = helpers.generateVM();
+    var payload = {
+        rules: [
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.254 TO vm %s BLOCK '
+                    + 'tcp PORT 22 PRIORITY 2', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM subnet 10.99.99.0/24 TO vm %s BLOCK '
+                    + 'tcp PORT all PRIORITY 1', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.254 TO vm %s ALLOW '
+                    + 'tcp PORTS 15 - 30 PRIORITY 1', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM any TO vm %s ALLOW tcp PORT all',
+                    vm.uuid),
+                enabled: true
+            }
+        ],
+        vms: [vm]
+    };
+
+    var expRules = clone(payload.rules);
+    var vmsEnabled = {};
+    var v4rules = helpers.defaultZoneRules(vm.uuid);
+    var v6rules = helpers.defaultZoneRules(vm.uuid);
+
+    async.series([
+    function (cb) {
+        fw.add(payload, function (err, res) {
+            t.ifError(err);
+            if (err) {
+                cb();
+                return;
+            }
+
+            helpers.fillInRuleBlanks(res.rules, expRules);
+
+            t.deepEqual(res, {
+                rules: expRules,
+                vms: [ vm.uuid ]
+            }, 'rules returned');
+
+            v4rules[vm.uuid].in.tcp = [
+                helpers.blockPortInTCP('10.99.99.254', 22),
+                helpers.allowRangeInTCP('10.99.99.254', 15, 30),
+                helpers.blockPortInTCP('10.99.99.0/24'),
+                helpers.allowPortInTCP('any')
+            ];
+
+            v6rules[vm.uuid].in.tcp = [
+                helpers.allowPortInTCP('any')
+            ];
+
+            t.deepEqual(helpers.zoneIPFconfigs(4), v4rules,
+                'zone ipf.conf files correct');
+            t.deepEqual(helpers.zoneIPFconfigs(6), v6rules,
+                'zone ipf6.conf files correct');
+
+            vmsEnabled[vm.uuid] = true;
+            t.deepEqual(helpers.getIPFenabled(), vmsEnabled,
+                'ipf enabled in VMs');
+
+            cb();
+        });
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[0], cb);
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[1], cb);
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[2], cb);
+
+    }, function (cb) {
+        helpers.fwListEquals(t, expRules, cb);
+
+    }
+
+    ], function () {
+        t.done();
+    });
+};
+
+exports['Overriding outbound rules'] = function (t) {
+    var vm = helpers.generateVM();
+    var payload = {
+        rules: [
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM vm %s TO ip 10.99.99.254 ALLOW '
+                    + 'udp PORT 22 PRIORITY 15', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM vm %s TO subnet 10.99.99.0/24 ALLOW '
+                    + 'udp PORT all PRIORITY 2', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM vm %s TO ip 10.99.99.254 BLOCK '
+                    + 'udp PORTS 15 - 30 PRIORITY 2', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM vm %s TO any BLOCK udp PORT all',
+                    vm.uuid),
+                enabled: true
+            }
+        ],
+        vms: [vm]
+    };
+
+    var expRules = clone(payload.rules);
+    var vmsEnabled = {};
+    var v4rules = helpers.defaultZoneRules(vm.uuid);
+    var v6rules = helpers.defaultZoneRules(vm.uuid);
+
+    async.series([
+    function (cb) {
+        fw.add(payload, function (err, res) {
+            t.ifError(err);
+            if (err) {
+                cb();
+                return;
+            }
+
+            helpers.fillInRuleBlanks(res.rules, expRules);
+
+            t.deepEqual(res, {
+                rules: expRules,
+                vms: [ vm.uuid ]
+            }, 'rules returned');
+
+            v4rules[vm.uuid].out.udp = [
+                helpers.allowPortOutUDP('10.99.99.254', 22),
+                helpers.blockRangeOutUDP('10.99.99.254', 15, 30),
+                helpers.allowPortOutUDP('10.99.99.0/24'),
+                helpers.blockPortOutUDP('any')
+            ];
+
+            v6rules[vm.uuid].out.udp = [
+                helpers.blockPortOutUDP('any')
+            ];
+
+            t.deepEqual(helpers.zoneIPFconfigs(4), v4rules,
+                'zone ipf.conf files correct');
+            t.deepEqual(helpers.zoneIPFconfigs(6), v6rules,
+                'zone ipf6.conf files correct');
+
+            vmsEnabled[vm.uuid] = true;
+            t.deepEqual(helpers.getIPFenabled(), vmsEnabled,
+                'ipf enabled in VMs');
+
+            cb();
+        });
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[0], cb);
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[1], cb);
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[2], cb);
+
+    }, function (cb) {
+        helpers.fwListEquals(t, expRules, cb);
+
+    }
+
+    ], function () {
+        t.done();
+    });
+};
+
+exports['Priority levels sorted correctly'] = function (t) {
+    var vm = helpers.generateVM();
+    var payload = {
+        /*
+         * The goal here is to assert that we sort the priority levels
+         * correctly: higher priorities come earlier than lower priorities,
+         * and priority levels are sorted numerically and not lexicographically.
+         * That is, 100 > 23 > 2 > 1, and not 23 > 2 > 100 > 1.
+         */
+        rules: [
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.1 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 1', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.2 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 100', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.3 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 10', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.4 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 15', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.5 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 2', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.6 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 23', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.7 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 25', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.8 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 55', vm.uuid),
+                enabled: true
+            },
+            {
+                owner_uuid: vm.owner_uuid,
+                rule: util.format('FROM ip 10.99.99.9 TO vm %s ALLOW '
+                    + 'tcp PORT all PRIORITY 50', vm.uuid),
+                enabled: true
+            }
+        ],
+        vms: [vm]
+    };
+
+    var expRules = clone(payload.rules);
+    var vmsEnabled = {};
+    var v4rules = helpers.defaultZoneRules(vm.uuid);
+    var v6rules = helpers.defaultZoneRules(vm.uuid);
+
+    async.series([
+    function (cb) {
+        fw.add(payload, function (err, res) {
+            t.ifError(err);
+            if (err) {
+                cb();
+                return;
+            }
+
+            helpers.fillInRuleBlanks(res.rules, expRules);
+
+            t.deepEqual(res, {
+                rules: expRules,
+                vms: [ vm.uuid ]
+            }, 'rules returned');
+
+            v4rules[vm.uuid].in.tcp = [
+                helpers.allowPortInTCP('10.99.99.2'),
+                helpers.allowPortInTCP('10.99.99.8'),
+                helpers.allowPortInTCP('10.99.99.9'),
+                helpers.allowPortInTCP('10.99.99.7'),
+                helpers.allowPortInTCP('10.99.99.6'),
+                helpers.allowPortInTCP('10.99.99.4'),
+                helpers.allowPortInTCP('10.99.99.3'),
+                helpers.allowPortInTCP('10.99.99.5'),
+                helpers.allowPortInTCP('10.99.99.1')
+            ];
+
+            t.deepEqual(helpers.zoneIPFconfigs(4), v4rules,
+                'zone ipf.conf files correct');
+            t.deepEqual(helpers.zoneIPFconfigs(6), v6rules,
+                'zone ipf6.conf files correct');
+
+            vmsEnabled[vm.uuid] = true;
+            t.deepEqual(helpers.getIPFenabled(), vmsEnabled,
+                'ipf enabled in VMs');
+
+            cb();
+        });
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[0], cb);
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[1], cb);
+
+    }, function (cb) {
+        helpers.fwGetEquals(t, expRules[2], cb);
+
+    }, function (cb) {
+        helpers.fwListEquals(t, expRules, cb);
+
+    }
+
+    ], function () {
+        t.done();
+    });
+};
+
+
+
+// --- Teardown
+
+
+
+exports['teardown'] = function (t) {
+    mocks.teardown();
+    t.done();
+};
+
+
+// Use to run only one test in this file:
+if (runOne) {
+    module.exports = {
+        setup: exports.setup,
+        setUp: exports.setUp,
+        oneTest: runOne,
+        teardown: exports.teardown
+    };
+}
diff --git a/src/fw/test/unit/remote-targets.test.js b/src/fw/test/unit/remote-targets.test.js
index fd6d8d5f..22579d8c 100644
--- a/src/fw/test/unit/remote-targets.test.js
+++ b/src/fw/test/unit/remote-targets.test.js
@@ -10,7 +10,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 
 var createSubObjects = mod_obj.createSubObjects;
diff --git a/src/fw/test/unit/remote-vms.test.js b/src/fw/test/unit/remote-vms.test.js
index 04b1f7e7..3e99b58b 100644
--- a/src/fw/test/unit/remote-vms.test.js
+++ b/src/fw/test/unit/remote-vms.test.js
@@ -31,7 +31,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/test/unit/stats.test.js b/src/fw/test/unit/stats.test.js
index 5cb045a7..35f7dfbd 100644
--- a/src/fw/test/unit/stats.test.js
+++ b/src/fw/test/unit/stats.test.js
@@ -7,7 +7,7 @@
 var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 
 
diff --git a/src/fw/test/unit/tags.test.js b/src/fw/test/unit/tags.test.js
index 4380c525..27dbc245 100644
--- a/src/fw/test/unit/tags.test.js
+++ b/src/fw/test/unit/tags.test.js
@@ -32,7 +32,7 @@ var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_addr = require('ip6addr');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var net = require('net');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
diff --git a/src/fw/test/unit/update.test.js b/src/fw/test/unit/update.test.js
index ba0f6ba5..71931205 100644
--- a/src/fw/test/unit/update.test.js
+++ b/src/fw/test/unit/update.test.js
@@ -31,7 +31,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/test/unit/validate.test.js b/src/fw/test/unit/validate.test.js
index 5606b086..15d99cb1 100644
--- a/src/fw/test/unit/validate.test.js
+++ b/src/fw/test/unit/validate.test.js
@@ -8,7 +8,7 @@ var async = require('async');
 var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 
 
diff --git a/src/fw/test/unit/vms.test.js b/src/fw/test/unit/vms.test.js
index 3872f941..2f802312 100644
--- a/src/fw/test/unit/vms.test.js
+++ b/src/fw/test/unit/vms.test.js
@@ -10,7 +10,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 
 var createSubObjects = mod_obj.createSubObjects;
diff --git a/src/fw/test/unit/wildcards.test.js b/src/fw/test/unit/wildcards.test.js
index 529483d2..af8d267b 100644
--- a/src/fw/test/unit/wildcards.test.js
+++ b/src/fw/test/unit/wildcards.test.js
@@ -31,7 +31,7 @@ var fw;
 var helpers = require('../lib/helpers');
 var mocks = require('../lib/mocks');
 var mod_obj = require('../../lib/util/obj');
-var mod_uuid = require('node-uuid');
+var mod_uuid = require('uuid');
 var util = require('util');
 var util_vm = require('../../lib/util/vm');
 
diff --git a/src/fw/tools/bin/rebuild-node-modules b/src/fw/tools/bin/rebuild-node-modules
index b99638bf..2d0b281e 100755
--- a/src/fw/tools/bin/rebuild-node-modules
+++ b/src/fw/tools/bin/rebuild-node-modules
@@ -35,9 +35,10 @@ mkdir ${NM}/assert-plus
 cp ${NM_ORIG}/assert-plus/assert.js ${NM}/assert-plus/index.js
 cp ${NM_ORIG}/assert-plus/README.md ${NM}/assert-plus/README.md
 
-mkdir ${NM}/node-uuid
-cp ${NM_ORIG}/node-uuid/uuid.js ${NM}/node-uuid/index.js
-cp ${NM_ORIG}/node-uuid/LICENSE.md ${NM}/node-uuid/LICENSE.md
+mkdir -p ${NM}/uuid/lib
+cp ${NM_ORIG}/uuid/{index,v1,v4}.js ${NM}/uuid/
+cp ${NM_ORIG}/uuid/lib/{bytesToUuid,rng}.js ${NM}/uuid/lib
+cp ${NM_ORIG}/uuid/LICENSE.md ${NM}/uuid/LICENSE.md
 
 mkdir ${NM}/mkdirp
 cp ${NM_ORIG}/mkdirp/index.js ${NM}/mkdirp/index.js
@@ -50,6 +51,7 @@ cp ${NM_ORIG}/clone/{LICENSE,clonePrototype.js} ${NM}/clone/
 mkdir ${NM}/fwrule
 cp ${NM_ORIG}/fwrule/lib/* ${NM}/fwrule/
 cp -r ${NM_ORIG}/fwrule/docs tools/fwrule/
+cp -r ${NM_ORIG}/fwrule/etc tools/fwrule/
 
 mkdir ${NM}/cmdln
 cp ${NM_ORIG}/cmdln/lib/cmdln.js ${NM}/cmdln/index.js
diff --git a/src/fw/tools/fwrule/docs/fwrules.ebnf b/src/fw/tools/fwrule/docs/fwrules.ebnf
index 77360ad4..284625b1 100644
--- a/src/fw/tools/fwrule/docs/fwrules.ebnf
+++ b/src/fw/tools/fwrule/docs/fwrules.ebnf
@@ -1,37 +1,28 @@
-
-/* 
-    Converted from https://mo.joyent.com/fwrule/raw/master/src/fwrule.jison
-    with http://bottlecaps.de/convert/ 
-    then elided for simplicity
-    then generated with http://bottlecaps.de/rr/ui
- */ 
-
-/* converted on Mon Dec 16, 2013, 20:22 (UTC-05) by jison-to-w3c v0.33.722 which is Copyright (c) 2011-2013 by Gunther Rademacher <grd@gmx.net> */
-
-rule     ::= 'FROM' target_list 'TO' target_list action protocol 
-target_list
-         ::= 'ANY'
-           | 'ALL VMS'
-           | '(' target ( 'OR' target )* ')'
-           | target
-target   ::= 'IP ADDRESS'
-           | 'SUBNET'
-           | 'TAG' tag_string
-           | 'TAG' tag_string '=' tag_value
-           | 'VM' uuid
-action   ::= 'BLOCK'
-           | 'ALLOW'
-protocol ::= 'TCP' port_list
-           | 'UDP' port_list
-           | 'ICMP' type_list
-port_list
-         ::= '(' port ( 'AND' port )* ')'
-           | port
-           | '(' 'PORT ALL' ')'
-           | 'PORT ALL'
-port     ::= 'PORT' '1 - 65535'
-type_list
-         ::= '(' type ( 'AND' type )* ')'
-           | type
-type     ::= 'TYPE' '0 - 255' 'CODE' '0 - 255'
-           | 'TYPE' '0 - 255'
+rule        ::= 'FROM' target_list 'TO' target_list action protocol
+target_list ::= 'ANY'
+              | 'ALL VMS'
+              | '(' target ( 'OR' target )* ')'
+              | target
+target      ::= 'IP' address
+              | 'SUBNET' cidr
+              | 'TAG' tag_string
+              | 'TAG' tag_string '=' tag_value
+              | 'VM' uuid
+action      ::= 'BLOCK'
+              | 'ALLOW'
+protocol    ::= 'TCP' port_list
+              | 'UDP' port_list
+              | 'ICMP' type_list
+              | 'ICMP6' type_list
+port_list   ::= '(' port ( 'AND' port )* ')'
+              | port
+              | 'PORTS' portrange ( ',' portrange )*
+              | 'PORT ALL'
+portnumber  ::= '1 - 65535'
+port        ::= 'PORT' portnumber
+portrange   ::= portnumber
+              | portnumber '-' portnumber
+type_list   ::= '(' type ( 'AND' type )* ')'
+              | type
+type        ::= 'TYPE' '0 - 255' ( 'CODE' '0 - 255' )?
+              | 'TYPE ALL'
diff --git a/src/fw/tools/fwrule/docs/media/img/port-list.svg b/src/fw/tools/fwrule/docs/media/img/port-list.svg
new file mode 100644
index 00000000..695f31ad
--- /dev/null
+++ b/src/fw/tools/fwrule/docs/media/img/port-list.svg
@@ -0,0 +1,136 @@
+<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="401" height="182" viewBox="0 0 401 182">
+<defs><style type="text/css"><![CDATA[
+svg.railroad-diagram path {
+  stroke-width: 3;
+  stroke: black;
+  fill: none;
+}
+svg.railroad-diagram text {
+  font: bold 14px monospace;
+  text-anchor: middle;
+}
+svg.railroad-diagram text.label {
+  text-anchor: start;
+}
+svg.railroad-diagram text.comment {
+  font: italic 12px monospace;
+}
+svg.railroad-diagram rect {
+  stroke-width: 3;
+  stroke: black;
+  fill: hsl(120,100%,90%);
+}
+ ]]></style></defs>
+<g transform="translate(.5 .5)">
+<path d="M 20 21 v 20 m 10 -20 v 20 m -10 -10 h 20.5"></path>
+<g>
+<path d="M40 31h0"></path>
+<path d="M360 31h0"></path>
+<path d="M40 31h20"></path>
+<g>
+<path d="M60 31h0"></path>
+<path d="M340 31h0"></path>
+<path d="M60 31h10"></path>
+<g>
+<path d="M70 31h0"></path>
+<path d="M98 31h0"></path>
+<rect x="70" y="20" width="28" height="22" rx="10" ry="10"></rect>
+<text x="84" y="35">(</text>
+</g>
+<path d="M98 31h10"></path>
+<path d="M108 31h10"></path>
+<g>
+<path d="M118 31h0"></path>
+<path d="M282 31h0"></path>
+<path d="M118 31h10"></path>
+<g>
+<path d="M128 31h0"></path>
+<path d="M272 31h0"></path>
+<path d="M128 31h10"></path>
+<g>
+<path d="M138 31h0"></path>
+<path d="M190 31h0"></path>
+<rect x="138" y="20" width="52" height="22" rx="10" ry="10"></rect>
+<text x="164" y="35">PORT</text>
+</g>
+<path d="M190 31h10"></path>
+<path d="M200 31h10"></path>
+<g>
+<path d="M210 31h0"></path>
+<path d="M262 31h0"></path>
+<rect x="210" y="20" width="52" height="22"></rect>
+<text x="236" y="35">port</text>
+</g>
+<path d="M262 31h10"></path>
+</g>
+<path d="M272 31h10"></path>
+<path d="M128 31a10 10 0 0 0 -10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M128 61h50"></path>
+<path d="M222 61h50"></path>
+<rect x="178" y="50" width="44" height="22" rx="10" ry="10"></rect>
+<text x="200" y="65">AND</text>
+</g>
+<path d="M272 61a10 10 0 0 0 10 -10v-10a10 10 0 0 0 -10 -10"></path>
+</g>
+<path d="M282 31h10"></path>
+<path d="M292 31h10"></path>
+<g>
+<path d="M302 31h0"></path>
+<path d="M330 31h0"></path>
+<rect x="302" y="20" width="28" height="22" rx="10" ry="10"></rect>
+<text x="316" y="35">)</text>
+</g>
+<path d="M330 31h10"></path>
+</g>
+<path d="M340 31h20"></path>
+<path d="M40 31a10 10 0 0 1 10 10v40a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 91h34"></path>
+<path d="M306 91h34"></path>
+<path d="M94 91h10"></path>
+<g>
+<path d="M104 91h0"></path>
+<path d="M164 91h0"></path>
+<rect x="104" y="80" width="60" height="22" rx="10" ry="10"></rect>
+<text x="134" y="95">PORTS</text>
+</g>
+<path d="M164 91h10"></path>
+<path d="M174 91h10"></path>
+<g>
+<path d="M184 91h0"></path>
+<path d="M296 91h0"></path>
+<path d="M184 91h10"></path>
+<g>
+<path d="M194 91h0"></path>
+<path d="M286 91h0"></path>
+<rect x="194" y="80" width="92" height="22"></rect>
+<text x="240" y="95">portrange</text>
+</g>
+<path d="M286 91h10"></path>
+<path d="M194 91a10 10 0 0 0 -10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M194 121h32"></path>
+<path d="M254 121h32"></path>
+<rect x="226" y="110" width="28" height="22" rx="10" ry="10"></rect>
+<text x="240" y="125">,</text>
+</g>
+<path d="M286 121a10 10 0 0 0 10 -10v-10a10 10 0 0 0 -10 -10"></path>
+</g>
+<path d="M296 91h10"></path>
+</g>
+<path d="M340 91a10 10 0 0 0 10 -10v-40a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v100a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 151h98"></path>
+<path d="M242 151h98"></path>
+<rect x="158" y="140" width="84" height="22" rx="10" ry="10"></rect>
+<text x="200" y="155">PORT ALL</text>
+</g>
+<path d="M340 151a10 10 0 0 0 10 -10v-100a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M 360 31 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
+</g>
+</svg>
diff --git a/src/fw/tools/fwrule/docs/media/img/protocol.svg b/src/fw/tools/fwrule/docs/media/img/protocol.svg
new file mode 100644
index 00000000..fdc74a2a
--- /dev/null
+++ b/src/fw/tools/fwrule/docs/media/img/protocol.svg
@@ -0,0 +1,138 @@
+<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="313" height="212" viewBox="0 0 313 212">
+<defs><style type="text/css"><![CDATA[
+svg.railroad-diagram path {
+  stroke-width: 3;
+  stroke: black;
+  fill: none;
+}
+svg.railroad-diagram text {
+  font: bold 14px monospace;
+  text-anchor: middle;
+}
+svg.railroad-diagram text.label {
+  text-anchor: start;
+}
+svg.railroad-diagram text.comment {
+  font: italic 12px monospace;
+}
+svg.railroad-diagram rect {
+  stroke-width: 3;
+  stroke: black;
+  fill: hsl(120,100%,90%);
+}
+ ]]></style></defs>
+<g transform="translate(.5 .5)">
+<path d="M 20 21 v 20 m 10 -20 v 20 m -10 -10 h 20.5"></path>
+<g>
+<path d="M40 31h0"></path>
+<path d="M272 31h0"></path>
+<path d="M40 31h20"></path>
+<g>
+<path d="M60 31h8"></path>
+<path d="M244 31h8"></path>
+<path d="M68 31h10"></path>
+<g>
+<path d="M78 31h0"></path>
+<path d="M122 31h0"></path>
+<rect x="78" y="20" width="44" height="22" rx="10" ry="10"></rect>
+<text x="100" y="35">TCP</text>
+</g>
+<path d="M122 31h10"></path>
+<path d="M132 31h10"></path>
+<g>
+<path d="M142 31h0"></path>
+<path d="M234 31h0"></path>
+<rect x="142" y="20" width="92" height="22"></rect>
+<text x="188" y="35">port&#95;list</text>
+</g>
+<path d="M234 31h10"></path>
+</g>
+<path d="M252 31h20"></path>
+<path d="M40 31a10 10 0 0 1 10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 61h8"></path>
+<path d="M244 61h8"></path>
+<path d="M68 61h10"></path>
+<g>
+<path d="M78 61h0"></path>
+<path d="M122 61h0"></path>
+<rect x="78" y="50" width="44" height="22" rx="10" ry="10"></rect>
+<text x="100" y="65">UDP</text>
+</g>
+<path d="M122 61h10"></path>
+<path d="M132 61h10"></path>
+<g>
+<path d="M142 61h0"></path>
+<path d="M234 61h0"></path>
+<rect x="142" y="50" width="92" height="22"></rect>
+<text x="188" y="65">port&#95;list</text>
+</g>
+<path d="M234 61h10"></path>
+</g>
+<path d="M252 61a10 10 0 0 0 10 -10v-10a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v40a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 91h4"></path>
+<path d="M248 91h4"></path>
+<path d="M64 91h10"></path>
+<g>
+<path d="M74 91h0"></path>
+<path d="M126 91h0"></path>
+<rect x="74" y="80" width="52" height="22" rx="10" ry="10"></rect>
+<text x="100" y="95">ICMP</text>
+</g>
+<path d="M126 91h10"></path>
+<path d="M136 91h10"></path>
+<g>
+<path d="M146 91h0"></path>
+<path d="M238 91h0"></path>
+<rect x="146" y="80" width="92" height="22"></rect>
+<text x="192" y="95">type&#95;list</text>
+</g>
+<path d="M238 91h10"></path>
+</g>
+<path d="M252 91a10 10 0 0 0 10 -10v-40a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v70a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 121h0"></path>
+<path d="M252 121h0"></path>
+<path d="M60 121h10"></path>
+<g>
+<path d="M70 121h0"></path>
+<path d="M130 121h0"></path>
+<rect x="70" y="110" width="60" height="22" rx="10" ry="10"></rect>
+<text x="100" y="125">ICMP6</text>
+</g>
+<path d="M130 121h10"></path>
+<path d="M140 121h10"></path>
+<g>
+<path d="M150 121h0"></path>
+<path d="M242 121h0"></path>
+<rect x="150" y="110" width="92" height="22"></rect>
+<text x="196" y="125">type&#95;list</text>
+</g>
+<path d="M242 121h10"></path>
+</g>
+<path d="M252 121a10 10 0 0 0 10 -10v-70a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v100a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 151h78"></path>
+<path d="M174 151h78"></path>
+<rect x="138" y="140" width="36" height="22" rx="10" ry="10"></rect>
+<text x="156" y="155">AH</text>
+</g>
+<path d="M252 151a10 10 0 0 0 10 -10v-100a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v130a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 181h74"></path>
+<path d="M178 181h74"></path>
+<rect x="134" y="170" width="44" height="22" rx="10" ry="10"></rect>
+<text x="156" y="185">ESP</text>
+</g>
+<path d="M252 181a10 10 0 0 0 10 -10v-130a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M 272 31 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
+</g>
+</svg>
diff --git a/src/fw/tools/fwrule/docs/media/img/rule.svg b/src/fw/tools/fwrule/docs/media/img/rule.svg
new file mode 100644
index 00000000..d07f515e
--- /dev/null
+++ b/src/fw/tools/fwrule/docs/media/img/rule.svg
@@ -0,0 +1,121 @@
+<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="925" height="92" viewBox="0 0 925 92">
+<defs><style type="text/css"><![CDATA[
+svg.railroad-diagram path {
+  stroke-width: 3;
+  stroke: black;
+  fill: none;
+}
+svg.railroad-diagram text {
+  font: bold 14px monospace;
+  text-anchor: middle;
+}
+svg.railroad-diagram text.label {
+  text-anchor: start;
+}
+svg.railroad-diagram text.comment {
+  font: italic 12px monospace;
+}
+svg.railroad-diagram rect {
+  stroke-width: 3;
+  stroke: black;
+  fill: hsl(120,100%,90%);
+}
+ ]]></style></defs>
+<g transform="translate(.5 .5)">
+<path d="M 20 21 v 20 m 10 -20 v 20 m -10 -10 h 20.5"></path>
+<path d="M40 31h10"></path>
+<g>
+<path d="M50 31h0"></path>
+<path d="M102 31h0"></path>
+<rect x="50" y="20" width="52" height="22" rx="10" ry="10"></rect>
+<text x="76" y="35">FROM</text>
+</g>
+<path d="M102 31h10"></path>
+<path d="M112 31h10"></path>
+<g>
+<path d="M122 31h0"></path>
+<path d="M230 31h0"></path>
+<rect x="122" y="20" width="108" height="22"></rect>
+<text x="176" y="35">target&#95;list</text>
+</g>
+<path d="M230 31h10"></path>
+<path d="M240 31h10"></path>
+<g>
+<path d="M250 31h0"></path>
+<path d="M286 31h0"></path>
+<rect x="250" y="20" width="36" height="22" rx="10" ry="10"></rect>
+<text x="268" y="35">TO</text>
+</g>
+<path d="M286 31h10"></path>
+<path d="M296 31h10"></path>
+<g>
+<path d="M306 31h0"></path>
+<path d="M414 31h0"></path>
+<rect x="306" y="20" width="108" height="22"></rect>
+<text x="360" y="35">target&#95;list</text>
+</g>
+<path d="M414 31h10"></path>
+<g>
+<path d="M424 31h0"></path>
+<path d="M524 31h0"></path>
+<path d="M424 31h20"></path>
+<g>
+<path d="M444 31h0"></path>
+<path d="M504 31h0"></path>
+<rect x="444" y="20" width="60" height="22" rx="10" ry="10"></rect>
+<text x="474" y="35">ALLOW</text>
+</g>
+<path d="M504 31h20"></path>
+<path d="M424 31a10 10 0 0 1 10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M444 61h0"></path>
+<path d="M504 61h0"></path>
+<rect x="444" y="50" width="60" height="22" rx="10" ry="10"></rect>
+<text x="474" y="65">BLOCK</text>
+</g>
+<path d="M504 61a10 10 0 0 0 10 -10v-10a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M524 31h10"></path>
+<g>
+<path d="M534 31h0"></path>
+<path d="M618 31h0"></path>
+<rect x="534" y="20" width="84" height="22"></rect>
+<text x="576" y="35">protocol</text>
+</g>
+<path d="M618 31h10"></path>
+<g>
+<path d="M628 31h0"></path>
+<path d="M884 31h0"></path>
+<path d="M628 31h20"></path>
+<g>
+<path d="M648 31h216"></path>
+</g>
+<path d="M864 31h20"></path>
+<path d="M628 31a10 10 0 0 1 10 10v0a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M648 51h0"></path>
+<path d="M864 51h0"></path>
+<path d="M648 51h10"></path>
+<g>
+<path d="M658 51h0"></path>
+<path d="M742 51h0"></path>
+<rect x="658" y="40" width="84" height="22" rx="10" ry="10"></rect>
+<text x="700" y="55">PRIORITY</text>
+</g>
+<path d="M742 51h10"></path>
+<path d="M752 51h10"></path>
+<g>
+<path d="M762 51h0"></path>
+<path d="M854 51h0"></path>
+<rect x="762" y="40" width="92" height="22"></rect>
+<text x="808" y="55">priolevel</text>
+</g>
+<path d="M854 51h10"></path>
+</g>
+<path d="M864 51a10 10 0 0 0 10 -10v0a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M 884 31 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
+</g>
+</svg>
diff --git a/src/fw/tools/fwrule/docs/media/img/target-list.svg b/src/fw/tools/fwrule/docs/media/img/target-list.svg
new file mode 100644
index 00000000..017e127b
--- /dev/null
+++ b/src/fw/tools/fwrule/docs/media/img/target-list.svg
@@ -0,0 +1,102 @@
+<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="325" height="182" viewBox="0 0 325 182">
+<defs><style type="text/css"><![CDATA[
+svg.railroad-diagram path {
+  stroke-width: 3;
+  stroke: black;
+  fill: none;
+}
+svg.railroad-diagram text {
+  font: bold 14px monospace;
+  text-anchor: middle;
+}
+svg.railroad-diagram text.label {
+  text-anchor: start;
+}
+svg.railroad-diagram text.comment {
+  font: italic 12px monospace;
+}
+svg.railroad-diagram rect {
+  stroke-width: 3;
+  stroke: black;
+  fill: hsl(120,100%,90%);
+}
+ ]]></style></defs>
+<g transform="translate(.5 .5)">
+<path d="M 20 21 v 20 m 10 -20 v 20 m -10 -10 h 20.5"></path>
+<g>
+<path d="M40 31h0"></path>
+<path d="M284 31h0"></path>
+<path d="M40 31h20"></path>
+<g>
+<path d="M60 31h80"></path>
+<path d="M184 31h80"></path>
+<rect x="140" y="20" width="44" height="22" rx="10" ry="10"></rect>
+<text x="162" y="35">ANY</text>
+</g>
+<path d="M264 31h20"></path>
+<path d="M40 31a10 10 0 0 1 10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 61h64"></path>
+<path d="M200 61h64"></path>
+<rect x="124" y="50" width="76" height="22" rx="10" ry="10"></rect>
+<text x="162" y="65">ALL VMS</text>
+</g>
+<path d="M264 61a10 10 0 0 0 10 -10v-10a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v40a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 91h0"></path>
+<path d="M264 91h0"></path>
+<path d="M60 91h10"></path>
+<g>
+<path d="M70 91h0"></path>
+<path d="M98 91h0"></path>
+<rect x="70" y="80" width="28" height="22" rx="10" ry="10"></rect>
+<text x="84" y="95">(</text>
+</g>
+<path d="M98 91h10"></path>
+<path d="M108 91h10"></path>
+<g>
+<path d="M118 91h0"></path>
+<path d="M206 91h0"></path>
+<path d="M118 91h10"></path>
+<g>
+<path d="M128 91h0"></path>
+<path d="M196 91h0"></path>
+<rect x="128" y="80" width="68" height="22"></rect>
+<text x="162" y="95">target</text>
+</g>
+<path d="M196 91h10"></path>
+<path d="M128 91a10 10 0 0 0 -10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M128 121h16"></path>
+<path d="M180 121h16"></path>
+<rect x="144" y="110" width="36" height="22" rx="10" ry="10"></rect>
+<text x="162" y="125">OR</text>
+</g>
+<path d="M196 121a10 10 0 0 0 10 -10v-10a10 10 0 0 0 -10 -10"></path>
+</g>
+<path d="M206 91h10"></path>
+<path d="M216 91h10"></path>
+<g>
+<path d="M226 91h0"></path>
+<path d="M254 91h0"></path>
+<rect x="226" y="80" width="28" height="22" rx="10" ry="10"></rect>
+<text x="240" y="95">)</text>
+</g>
+<path d="M254 91h10"></path>
+</g>
+<path d="M264 91a10 10 0 0 0 10 -10v-40a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v100a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 151h68"></path>
+<path d="M196 151h68"></path>
+<rect x="128" y="140" width="68" height="22"></rect>
+<text x="162" y="155">target</text>
+</g>
+<path d="M264 151a10 10 0 0 0 10 -10v-100a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M 284 31 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
+</g>
+</svg>
diff --git a/src/fw/tools/fwrule/docs/media/img/target.svg b/src/fw/tools/fwrule/docs/media/img/target.svg
new file mode 100644
index 00000000..a90ed030
--- /dev/null
+++ b/src/fw/tools/fwrule/docs/media/img/target.svg
@@ -0,0 +1,160 @@
+<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="465" height="182" viewBox="0 0 465 182">
+<defs><style type="text/css"><![CDATA[
+svg.railroad-diagram path {
+  stroke-width: 3;
+  stroke: black;
+  fill: none;
+}
+svg.railroad-diagram text {
+  font: bold 14px monospace;
+  text-anchor: middle;
+}
+svg.railroad-diagram text.label {
+  text-anchor: start;
+}
+svg.railroad-diagram text.comment {
+  font: italic 12px monospace;
+}
+svg.railroad-diagram rect {
+  stroke-width: 3;
+  stroke: black;
+  fill: hsl(120,100%,90%);
+}
+ ]]></style></defs>
+<g transform="translate(.5 .5)">
+<path d="M 20 21 v 20 m 10 -20 v 20 m -10 -10 h 20.5"></path>
+<g>
+<path d="M40 31h0"></path>
+<path d="M424 31h0"></path>
+<path d="M40 31h20"></path>
+<g>
+<path d="M60 31h96"></path>
+<path d="M308 31h96"></path>
+<path d="M156 31h10"></path>
+<g>
+<path d="M166 31h0"></path>
+<path d="M202 31h0"></path>
+<rect x="166" y="20" width="36" height="22" rx="10" ry="10"></rect>
+<text x="184" y="35">IP</text>
+</g>
+<path d="M202 31h10"></path>
+<path d="M212 31h10"></path>
+<g>
+<path d="M222 31h0"></path>
+<path d="M298 31h0"></path>
+<rect x="222" y="20" width="76" height="22"></rect>
+<text x="260" y="35">address</text>
+</g>
+<path d="M298 31h10"></path>
+</g>
+<path d="M404 31h20"></path>
+<path d="M40 31a10 10 0 0 1 10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 61h92"></path>
+<path d="M312 61h92"></path>
+<path d="M152 61h10"></path>
+<g>
+<path d="M162 61h0"></path>
+<path d="M230 61h0"></path>
+<rect x="162" y="50" width="68" height="22" rx="10" ry="10"></rect>
+<text x="196" y="65">SUBNET</text>
+</g>
+<path d="M230 61h10"></path>
+<path d="M240 61h10"></path>
+<g>
+<path d="M250 61h0"></path>
+<path d="M302 61h0"></path>
+<rect x="250" y="50" width="52" height="22"></rect>
+<text x="276" y="65">cidr</text>
+</g>
+<path d="M302 61h10"></path>
+</g>
+<path d="M404 61a10 10 0 0 0 10 -10v-10a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v40a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 91h80"></path>
+<path d="M324 91h80"></path>
+<path d="M140 91h10"></path>
+<g>
+<path d="M150 91h0"></path>
+<path d="M194 91h0"></path>
+<rect x="150" y="80" width="44" height="22" rx="10" ry="10"></rect>
+<text x="172" y="95">TAG</text>
+</g>
+<path d="M194 91h10"></path>
+<path d="M204 91h10"></path>
+<g>
+<path d="M214 91h0"></path>
+<path d="M314 91h0"></path>
+<rect x="214" y="80" width="100" height="22"></rect>
+<text x="264" y="95">tag&#95;string</text>
+</g>
+<path d="M314 91h10"></path>
+</g>
+<path d="M404 91a10 10 0 0 0 10 -10v-40a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v70a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 121h0"></path>
+<path d="M404 121h0"></path>
+<path d="M60 121h10"></path>
+<g>
+<path d="M70 121h0"></path>
+<path d="M114 121h0"></path>
+<rect x="70" y="110" width="44" height="22" rx="10" ry="10"></rect>
+<text x="92" y="125">TAG</text>
+</g>
+<path d="M114 121h10"></path>
+<path d="M124 121h10"></path>
+<g>
+<path d="M134 121h0"></path>
+<path d="M234 121h0"></path>
+<rect x="134" y="110" width="100" height="22"></rect>
+<text x="184" y="125">tag&#95;string</text>
+</g>
+<path d="M234 121h10"></path>
+<path d="M244 121h10"></path>
+<g>
+<path d="M254 121h0"></path>
+<path d="M282 121h0"></path>
+<rect x="254" y="110" width="28" height="22" rx="10" ry="10"></rect>
+<text x="268" y="125">=</text>
+</g>
+<path d="M282 121h10"></path>
+<path d="M292 121h10"></path>
+<g>
+<path d="M302 121h0"></path>
+<path d="M394 121h0"></path>
+<rect x="302" y="110" width="92" height="22"></rect>
+<text x="348" y="125">tag&#95;value</text>
+</g>
+<path d="M394 121h10"></path>
+</g>
+<path d="M404 121a10 10 0 0 0 10 -10v-70a10 10 0 0 1 10 -10"></path>
+<path d="M40 31a10 10 0 0 1 10 10v100a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 151h108"></path>
+<path d="M296 151h108"></path>
+<path d="M168 151h10"></path>
+<g>
+<path d="M178 151h0"></path>
+<path d="M214 151h0"></path>
+<rect x="178" y="140" width="36" height="22" rx="10" ry="10"></rect>
+<text x="196" y="155">VM</text>
+</g>
+<path d="M214 151h10"></path>
+<path d="M224 151h10"></path>
+<g>
+<path d="M234 151h0"></path>
+<path d="M286 151h0"></path>
+<rect x="234" y="140" width="52" height="22"></rect>
+<text x="260" y="155">uuid</text>
+</g>
+<path d="M286 151h10"></path>
+</g>
+<path d="M404 151a10 10 0 0 0 10 -10v-100a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M 424 31 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
+</g>
+</svg>
diff --git a/src/fw/tools/fwrule/docs/media/img/type-list.svg b/src/fw/tools/fwrule/docs/media/img/type-list.svg
new file mode 100644
index 00000000..c2ca2abe
--- /dev/null
+++ b/src/fw/tools/fwrule/docs/media/img/type-list.svg
@@ -0,0 +1,131 @@
+<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="633" height="132" viewBox="0 0 633 132">
+<defs><style type="text/css"><![CDATA[
+svg.railroad-diagram path {
+  stroke-width: 3;
+  stroke: black;
+  fill: none;
+}
+svg.railroad-diagram text {
+  font: bold 14px monospace;
+  text-anchor: middle;
+}
+svg.railroad-diagram text.label {
+  text-anchor: start;
+}
+svg.railroad-diagram text.comment {
+  font: italic 12px monospace;
+}
+svg.railroad-diagram rect {
+  stroke-width: 3;
+  stroke: black;
+  fill: hsl(120,100%,90%);
+}
+ ]]></style></defs>
+<g transform="translate(.5 .5)">
+<path d="M 20 31 v 20 m 10 -20 v 20 m -10 -10 h 20.5"></path>
+<g>
+<path d="M40 41h0"></path>
+<path d="M592 41h0"></path>
+<path d="M40 41h20"></path>
+<g>
+<path d="M60 41h0"></path>
+<path d="M572 41h0"></path>
+<path d="M60 41h10"></path>
+<g>
+<path d="M70 41h0"></path>
+<path d="M98 41h0"></path>
+<rect x="70" y="30" width="28" height="22" rx="10" ry="10"></rect>
+<text x="84" y="45">(</text>
+</g>
+<path d="M98 41h10"></path>
+<path d="M108 41h10"></path>
+<g>
+<path d="M118 41h0"></path>
+<path d="M514 41h0"></path>
+<path d="M118 41h10"></path>
+<g>
+<path d="M128 41h0"></path>
+<path d="M504 41h0"></path>
+<path d="M128 41h10"></path>
+<g>
+<path d="M138 41h0"></path>
+<path d="M190 41h0"></path>
+<rect x="138" y="30" width="52" height="22" rx="10" ry="10"></rect>
+<text x="164" y="45">TYPE</text>
+</g>
+<path d="M190 41h10"></path>
+<path d="M200 41h10"></path>
+<g>
+<path d="M210 41h0"></path>
+<path d="M286 41h0"></path>
+<rect x="210" y="30" width="76" height="22" rx="10" ry="10"></rect>
+<text x="248" y="45">0 - 255</text>
+</g>
+<path d="M286 41h10"></path>
+<g>
+<path d="M296 41h0"></path>
+<path d="M504 41h0"></path>
+<path d="M296 41a10 10 0 0 0 10 -10v0a10 10 0 0 1 10 -10"></path>
+<g>
+<path d="M316 21h168"></path>
+</g>
+<path d="M484 21a10 10 0 0 1 10 10v0a10 10 0 0 0 10 10"></path>
+<path d="M296 41h20"></path>
+<g>
+<path d="M316 41h0"></path>
+<path d="M484 41h0"></path>
+<path d="M316 41h10"></path>
+<g>
+<path d="M326 41h0"></path>
+<path d="M378 41h0"></path>
+<rect x="326" y="30" width="52" height="22" rx="10" ry="10"></rect>
+<text x="352" y="45">CODE</text>
+</g>
+<path d="M378 41h10"></path>
+<path d="M388 41h10"></path>
+<g>
+<path d="M398 41h0"></path>
+<path d="M474 41h0"></path>
+<rect x="398" y="30" width="76" height="22" rx="10" ry="10"></rect>
+<text x="436" y="45">0 - 255</text>
+</g>
+<path d="M474 41h10"></path>
+</g>
+<path d="M484 41h20"></path>
+</g>
+</g>
+<path d="M504 41h10"></path>
+<path d="M128 41a10 10 0 0 0 -10 10v10a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M128 71h166"></path>
+<path d="M338 71h166"></path>
+<rect x="294" y="60" width="44" height="22" rx="10" ry="10"></rect>
+<text x="316" y="75">AND</text>
+</g>
+<path d="M504 71a10 10 0 0 0 10 -10v-10a10 10 0 0 0 -10 -10"></path>
+</g>
+<path d="M514 41h10"></path>
+<path d="M524 41h10"></path>
+<g>
+<path d="M534 41h0"></path>
+<path d="M562 41h0"></path>
+<rect x="534" y="30" width="28" height="22" rx="10" ry="10"></rect>
+<text x="548" y="45">)</text>
+</g>
+<path d="M562 41h10"></path>
+</g>
+<path d="M572 41h20"></path>
+<path d="M40 41a10 10 0 0 1 10 10v40a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M60 101h214"></path>
+<path d="M358 101h214"></path>
+<rect x="274" y="90" width="84" height="22" rx="10" ry="10"></rect>
+<text x="316" y="105">TYPE ALL</text>
+</g>
+<path d="M572 101a10 10 0 0 0 10 -10v-40a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M 592 41 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
+</g>
+</svg>
diff --git a/src/fw/tools/fwrule/docs/rules.md b/src/fw/tools/fwrule/docs/rules.md
index 60f71e9b..230fd25a 100644
--- a/src/fw/tools/fwrule/docs/rules.md
+++ b/src/fw/tools/fwrule/docs/rules.md
@@ -13,14 +13,16 @@ Adding and updating rules takes effect immediately.  Adding or removing
 tags on a VM causes rules that apply to those tags to be added or removed
 immediately.
 
-In the case of two rules that affect the same VM and port, the rule that
-goes counter to the default policy takes precedence.  This means:
+In the case of two rules that affect the same VM and port and have the same
+priority level (0 when one isn't specified), the rule that goes counter to
+the default policy takes precedence by default. This means:
 
 * If you have an incoming BLOCK and an incoming ALLOW rule for the
-  same VM and port, the ALLOW will override.
+  same VM and port of the same priority, the ALLOW will override.
+  Give the BLOCK a higher priority to have it applied first.
 * If you have an outgoing BLOCK and an outgoing ALLOW rule for the
-  same VM and port, the BLOCK will override.
-
+  same VM and port of the same priority, the BLOCK will override.
+  Give the ALLOW a higher priority to have it applied first.
 
 # Rule payload
 
@@ -51,40 +53,30 @@ a rule.
 
 Firewall rules are in the following format:
 
-    FROM &lt;from targets> TO &lt;to targets> &lt;action> &lt;protocol> &lt;ports or types>
-    
-The parameters are the following:
-
-**from targets** and **to targets** can be any of the following types
-(see the Target Types section below):
+<p style="text-align: center">
+<img alt="Rules are of the form: FROM target_list TO target_list action protocol ports/types" src="./media/img/rule.svg" />
+</p>
 
-* vm &lt;uuid>
-* ip &lt;IPv4 or IPv6 address>
-* subnet &lt;subnet CIDR>
-* tag &lt;tag name>
-* tag &lt;tag name>=&lt;tag value>
-* a target list of up to 32 of the above
-* all vms
-* any
+Affected sources and destinations can be defined as a list of targets in the
+following syntax:
 
-**action** can be one of (see the Actions section below):
+<p style="text-align: center">
+<img alt="Target List Keywords: ALL VMS, ANY, or a list of targets separated by OR" src="./media/img/target-list.svg" />
+</p>
 
-* ALLOW
-* BLOCK
+**from targets** and **to targets** can be any of the following types
+(see the Target Types section below):
 
-**protocol** can be one of (see the Protocols section below):
+<p style="text-align: center">
+<img alt="Target Keywords: VM, IP, SUBNET, TAG" src="./media/img/target.svg" />
+</p>
 
-* tcp
-* udp
-* icmp
-* icmp6
+Protocols can be targeted using:
 
-**ports** or **types** can be one of (see the Ports section below):
+<p style="text-align: center">
+<img alt="Protocol Keywords: TCP, UDP, ICMP, ICMP6, AH, ESP" src="./media/img/protocol.svg" />
+</p>
 
-* port &lt;port number> (if protocol is tcp or udp)
-* ports &lt;port numbers and ranges> (if protocol is tcp or udp)
-* type &lt;ICMP type> (if protocol is icmp)
-* type &lt;ICMP type> code &lt;ICMP code> (if protocol is icmp)
 
 
 The limits for the parameters are:
@@ -98,7 +90,7 @@ The limits for the parameters are:
 
 ## vm
 
-    vm &lt;uuid>
+    vm <uuid>
 
 Targets the VM with that UUID.
 
@@ -110,7 +102,7 @@ Allows HTTP traffic from any host to VM 04128...
 
 ## ip
 
-    ip &lt;IP address>
+    ip <IP address>
 
 Targets the specified IPv4 or IPv6 address.
 
@@ -122,7 +114,7 @@ Blocks SMTP traffic to that IP.
 
 ## subnet
 
-    subnet &lt;subnet CIDR>
+    subnet <subnet CIDR>
 
 Targets the specified IPv4 or IPv6 subnet range.
 
@@ -140,9 +132,9 @@ Allows HTTPS traffic from a private IPv6 /64 to the specified VM.
 
 ## tag
 
-    tag &lt;name>
-    tag &lt;name> = &lt;value>
-    tag "&lt;name with spaces>" = "&lt;value with spaces>"
+    tag <name>
+    tag <name> = <value>
+    tag "<name with spaces>" = "<value with spaces>"
 
 Targets all VMs with the specified tag, or all VMs with the specified tag
 and value.  Both tag name and value can be quoted if they contain spaces.
@@ -188,7 +180,7 @@ Allows HTTP traffic from any IP to all VMs.
 
 ## target list
 
-    ( &lt;target> OR &lt;target> OR ... )
+    ( <target> OR <target> OR ... )
 
 The vm, ip, subnet and tag target types can be combined into a list surrounded
 by parentheses and joined by OR.
@@ -226,20 +218,18 @@ have an effect.
     udp
     icmp
     icmp6
+    ah
+    esp
 
-The protocol can be one of tcp, udp or icmp(6). The protocol dictates whether
-ports or types can be used (see the Ports section below).
+The protocol can be one of tcp, udp, icmp(6), ah or esp. The protocol dictates
+whether ports or types can be used (see the Ports section below).
 
 
 # Ports
 
-    port &lt;port number>
-    ( port &lt;port number> AND port &lt;port number> ... )
-    ports &lt;port number or range>
-    ports &lt;port number or range>, &lt;port number or range>, ...
-    type &lt;icmp type>
-    type &lt;icmp type> code &lt;icmp code>
-    ( type &lt;icmp type> AND type &lt;icmp type> code &lt;icmp code> AND ... )
+<p style="text-align: center">
+<img alt="All, specific, or ranges of ports can be allowed and blocked" src="./media/img/port-list.svg" />
+</p>
 
 For TCP and UDP, this specifies the port numbers that the rule applies to.
 Port numbers must be between 1 and 65535, inclusive. Ranges are written as two
@@ -247,9 +237,6 @@ port numbers separated by a - (hyphen), with the lower number coming first, with
 optional spaces around the hyphen. Port ranges are inclusive, so writing the
 range "20 - 22" would cause the rule to apply to the ports 20, 21 and 22.
 
-For ICMP, this specifies the ICMP type and optional code that the rule
-applies to.  Types and codes must be between 0 and 255, inclusive.
-
 **Examples:**
 
     FROM tag www TO any ALLOW tcp (port 80 AND port 443)
@@ -261,6 +248,18 @@ Allows HTTP and HTTPS traffic from any IP to all webservers.
 Allows traffic on HTTP, HTTPS and common alternative HTTP ports from any IP to
 all webservers.
 
+
+# ICMP Types
+
+<p style="text-align: center">
+<img alt="All ICMP types can be specified, or a list of specific ones" src="./media/img/type-list.svg" />
+</p>
+
+For ICMP, this specifies the ICMP type and optional code that the rule
+applies to.  Types and codes must be between 0 and 255, inclusive.
+
+**Examples:**
+
     FROM any TO all vms ALLOW icmp TYPE 8 CODE 0
 
 Allows pinging all VMs. The IPv6 equivalent would be:
@@ -273,6 +272,28 @@ And to block outgoing replies:
     FROM all vms TO any BLOCK icmp6 TYPE 129
 
 
+# Priority
+
+    priority <level>
+
+Specifying a priority for a rule allows defining its relation with other rules.
+By default, a rule has a priority level of 0, the lowest priority. Rules with a
+higher priority will be used before ones with a lower priority. The highest
+level that can be specified is 100.
+
+**Examples:**
+
+    FROM any TO tag mta ALLOW tcp PORT 25
+    FROM subnet 10.20.30.0/24 TO tag mta BLOCK tcp PORT 25 PRIORITY 1
+
+Allows traffic from anyone but 10.20.30.0/24 to access an MTA.
+
+    FROM all vms TO any BLOCK tcp PORT all
+    FROM all vms TO any ALLOW tcp PORT 22 PRIORITY 1
+
+Blocks all outbound traffic, overriding the default outbound policy,
+except for SSH.
+
 # Examples
 
     FROM all vms TO tag syslog ALLOW udp port 514
@@ -291,6 +312,13 @@ Allows ssh traffic between all VMs.
 
 Allow HTTP traffic from any host to all VMs.
 
+    FROM any TO all vms ALLOW ah
+    FROM any TO all vms ALLOW esp
+    FROM any TO all vms ALLOW udp (PORT 500 and PORT 4500)
+
+Allows [IPsec](https://en.wikipedia.org/wiki/IPsec) traffic from any host to
+all VMs.
+
 
 # Error Messages
 
diff --git a/src/fw/tools/fwrule/docs/rules.md.in b/src/fw/tools/fwrule/docs/rules.md.in
index 51f83cb0..dc9847ca 100644
--- a/src/fw/tools/fwrule/docs/rules.md.in
+++ b/src/fw/tools/fwrule/docs/rules.md.in
@@ -13,14 +13,16 @@ Adding and updating rules takes effect immediately.  Adding or removing
 tags on a VM causes rules that apply to those tags to be added or removed
 immediately.
 
-In the case of two rules that affect the same VM and port, the rule that
-goes counter to the default policy takes precedence.  This means:
+In the case of two rules that affect the same VM and port and have the same
+priority level (0 when one isn't specified), the rule that goes counter to
+the default policy takes precedence by default. This means:
 
 * If you have an incoming BLOCK and an incoming ALLOW rule for the
-  same VM and port, the ALLOW will override.
+  same VM and port of the same priority, the ALLOW will override.
+  Give the BLOCK a higher priority to have it applied first.
 * If you have an outgoing BLOCK and an outgoing ALLOW rule for the
-  same VM and port, the BLOCK will override.
-
+  same VM and port of the same priority, the BLOCK will override.
+  Give the ALLOW a higher priority to have it applied first.
 
 # Rule payload
 
@@ -51,8 +53,35 @@ a rule.
 
 Firewall rules are in the following format:
 
+{{#images}}
+<p style="text-align: center">
+<img alt="Rules are of the form: FROM target_list TO target_list action protocol ports/types" src="./media/img/rule.svg" />
+</p>
+
+Affected sources and destinations can be defined as a list of targets in the
+following syntax:
+
+<p style="text-align: center">
+<img alt="Target List Keywords: ALL VMS, ANY, or a list of targets separated by OR" src="./media/img/target-list.svg" />
+</p>
+
+**from targets** and **to targets** can be any of the following types
+(see the Target Types section below):
+
+<p style="text-align: center">
+<img alt="Target Keywords: VM, IP, SUBNET, TAG" src="./media/img/target.svg" />
+</p>
+
+Protocols can be targeted using:
+
+<p style="text-align: center">
+<img alt="Protocol Keywords: TCP, UDP, ICMP, ICMP6, AH, ESP" src="./media/img/protocol.svg" />
+</p>
+
+{{/images}}
+{{^images}}
     {{#indent_and_wrap}}
-    FROM &lt;from targets> TO &lt;to targets> &lt;action> &lt;protocol> &lt;ports or types>
+    FROM <from targets> TO <to targets> <action> <protocol> <ports or types>
     {{/indent_and_wrap}}
 
 The parameters are the following:
@@ -80,6 +109,8 @@ The parameters are the following:
 * udp
 * icmp
 * icmp6
+* ah
+* esp
 
 **ports** or **types** can be one of (see the Ports section below):
 
@@ -87,6 +118,7 @@ The parameters are the following:
 * ports &lt;port numbers and ranges> (if protocol is tcp or udp)
 * type &lt;ICMP type> (if protocol is icmp)
 * type &lt;ICMP type> code &lt;ICMP code> (if protocol is icmp)
+{{/images}}
 
 
 The limits for the parameters are:
@@ -100,7 +132,7 @@ The limits for the parameters are:
 
 ## vm
 
-    vm &lt;uuid>
+    vm <uuid>
 
 Targets the VM with that UUID.
 
@@ -112,7 +144,7 @@ Allows HTTP traffic from any host to VM 04128...
 
 ## ip
 
-    ip &lt;IP address>
+    ip <IP address>
 
 Targets the specified IPv4 or IPv6 address.
 
@@ -124,7 +156,7 @@ Blocks SMTP traffic to that IP.
 
 ## subnet
 
-    subnet &lt;subnet CIDR>
+    subnet <subnet CIDR>
 
 Targets the specified IPv4 or IPv6 subnet range.
 
@@ -146,9 +178,9 @@ Allows HTTPS traffic from a private IPv6 /64 to the specified VM.
 
 ## tag
 
-    tag &lt;name>
-    tag &lt;name> = &lt;value>
-    tag "&lt;name with spaces>" = "&lt;value with spaces>"
+    tag <name>
+    tag <name> = <value>
+    tag "<name with spaces>" = "<value with spaces>"
 
 Targets all VMs with the specified tag, or all VMs with the specified tag
 and value.  Both tag name and value can be quoted if they contain spaces.
@@ -194,7 +226,7 @@ Allows HTTP traffic from any IP to all VMs.
 
 ## target list
 
-    ( &lt;target> OR &lt;target> OR ... )
+    ( <target> OR <target> OR ... )
 
 The vm, ip, subnet and tag target types can be combined into a list surrounded
 by parentheses and joined by OR.
@@ -234,20 +266,27 @@ have an effect.
     udp
     icmp
     icmp6
+    ah
+    esp
 
-The protocol can be one of tcp, udp or icmp(6). The protocol dictates whether
-ports or types can be used (see the Ports section below).
+The protocol can be one of tcp, udp, icmp(6), ah or esp. The protocol dictates
+whether ports or types can be used (see the Ports section below).
 
 
 # Ports
 
-    port &lt;port number>
-    ( port &lt;port number> AND port &lt;port number> ... )
-    ports &lt;port number or range>
-    ports &lt;port number or range>, &lt;port number or range>, ...
-    type &lt;icmp type>
-    type &lt;icmp type> code &lt;icmp code>
-    ( type &lt;icmp type> AND type &lt;icmp type> code &lt;icmp code> AND ... )
+{{#images}}
+<p style="text-align: center">
+<img alt="All, specific, or ranges of ports can be allowed and blocked" src="./media/img/port-list.svg" />
+</p>
+{{/images}}
+{{^images}}
+    port all
+    port <port number>
+    ( port <port number> AND port <port number> ... )
+    ports <port number or range>
+    ports <port number or range>, <port number or range>, ...
+{{/images}}
 
 For TCP and UDP, this specifies the port numbers that the rule applies to.
 Port numbers must be between 1 and 65535, inclusive. Ranges are written as two
@@ -255,9 +294,6 @@ port numbers separated by a - (hyphen), with the lower number coming first, with
 optional spaces around the hyphen. Port ranges are inclusive, so writing the
 range "20 - 22" would cause the rule to apply to the ports 20, 21 and 22.
 
-For ICMP, this specifies the ICMP type and optional code that the rule
-applies to.  Types and codes must be between 0 and 255, inclusive.
-
 **Examples:**
 
     FROM tag www TO any ALLOW tcp (port 80 AND port 443)
@@ -269,6 +305,26 @@ Allows HTTP and HTTPS traffic from any IP to all webservers.
 Allows traffic on HTTP, HTTPS and common alternative HTTP ports from any IP to
 all webservers.
 
+
+# ICMP Types
+
+{{#images}}
+<p style="text-align: center">
+<img alt="All ICMP types can be specified, or a list of specific ones" src="./media/img/type-list.svg" />
+</p>
+{{/images}}
+{{^images}}
+    type all
+    type <icmp type>
+    type <icmp type> code <icmp code>
+    ( type <icmp type> AND type <icmp type> code <icmp code> AND ... )
+{{/images}}
+
+For ICMP, this specifies the ICMP type and optional code that the rule
+applies to.  Types and codes must be between 0 and 255, inclusive.
+
+**Examples:**
+
     FROM any TO all vms ALLOW icmp TYPE 8 CODE 0
 
 Allows pinging all VMs. The IPv6 equivalent would be:
@@ -281,6 +337,28 @@ And to block outgoing replies:
     FROM all vms TO any BLOCK icmp6 TYPE 129
 
 
+# Priority
+
+    priority <level>
+
+Specifying a priority for a rule allows defining its relation with other rules.
+By default, a rule has a priority level of 0, the lowest priority. Rules with a
+higher priority will be used before ones with a lower priority. The highest
+level that can be specified is 100.
+
+**Examples:**
+
+    FROM any TO tag mta ALLOW tcp PORT 25
+    FROM subnet 10.20.30.0/24 TO tag mta BLOCK tcp PORT 25 PRIORITY 1
+
+Allows traffic from anyone but 10.20.30.0/24 to access an MTA.
+
+    FROM all vms TO any BLOCK tcp PORT all
+    FROM all vms TO any ALLOW tcp PORT 22 PRIORITY 1
+
+Blocks all outbound traffic, overriding the default outbound policy,
+except for SSH.
+
 # Examples
 
     FROM all vms TO tag syslog ALLOW udp port 514
@@ -299,6 +377,13 @@ Allows ssh traffic between all VMs.
 
 Allow HTTP traffic from any host to all VMs.
 
+    FROM any TO all vms ALLOW ah
+    FROM any TO all vms ALLOW esp
+    FROM any TO all vms ALLOW udp (PORT 500 and PORT 4500)
+
+Allows [IPsec](https://en.wikipedia.org/wiki/IPsec) traffic from any host to
+all VMs.
+
 
 # Error Messages
 
diff --git a/src/fw/tools/fwrule/etc/rules.json b/src/fw/tools/fwrule/etc/rules.json
new file mode 100644
index 00000000..80560636
--- /dev/null
+++ b/src/fw/tools/fwrule/etc/rules.json
@@ -0,0 +1,3 @@
+{
+    "images": true
+}
diff --git a/src/manifest b/src/manifest
index a34e2a3d..d7479116 100644
--- a/src/manifest
+++ b/src/manifest
@@ -792,9 +792,14 @@ f usr/fw/node_modules/extsprintf.js 0444 root bin
 d usr/fw/node_modules/mkdirp/ 0555 root bin
 f usr/fw/node_modules/mkdirp/index.js 0444 root bin
 f usr/fw/node_modules/mkdirp/LICENSE 0444 root bin
-d usr/fw/node_modules/node-uuid/ 0555 root bin
-f usr/fw/node_modules/node-uuid/index.js 0444 root bin
-f usr/fw/node_modules/node-uuid/LICENSE.md 0444 root bin
+d usr/fw/node_modules/uuid/ 0555 root bin
+f usr/fw/node_modules/uuid/index.js 0444 root bin
+f usr/fw/node_modules/uuid/v1.js 0444 root bin
+f usr/fw/node_modules/uuid/v4.js 0444 root bin
+f usr/fw/node_modules/uuid/LICENSE.md 0444 root bin
+d usr/fw/node_modules/uuid/lib 0555 root bin
+f usr/fw/node_modules/uuid/lib/bytesToUuid.js 0555 root bin
+f usr/fw/node_modules/uuid/lib/rng.js 0555 root bin
 f usr/fw/node_modules/onlyif.js 0444 root bin
 f usr/fw/node_modules/strsplit/index.js 0444 root bin
 f usr/fw/node_modules/strsplit/LICENSE 0444 root bin
-- 
2.21.0

