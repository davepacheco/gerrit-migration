From b670ea1ab40b2885ce47464d36d4447b986c5bc7 Mon Sep 17 00:00:00 2001
From: Bryan Cantrill <bryan@joyent.com>
Date: Wed, 12 Oct 2016 22:13:53 +0000
Subject: [PATCH] OS-5605 lint error in inotify OS-5592 inotify should have
 comment that input name length is validated OS-5714 missing pollwakeup() can
 induce clog of IN_IGNORED events Reviewed by: Jerry Jelinek
 <jerry.jelinek@joyent.com> Reviewed by: Patrick Mooney
 <patrick.mooney@joyent.com> Approved by: Robert Mustacchi <rm@joyent.com>

---
 usr/src/uts/common/io/inotify.c | 24 +++++++++++++++++++++---
 1 file changed, 21 insertions(+), 3 deletions(-)

diff --git a/usr/src/uts/common/io/inotify.c b/usr/src/uts/common/io/inotify.c
index baa36cfc8d..a326054046 100644
--- a/usr/src/uts/common/io/inotify.c
+++ b/usr/src/uts/common/io/inotify.c
@@ -10,7 +10,7 @@
  */
 
 /*
- * Copyright (c) 2015 Joyent, Inc.  All rights reserved.
+ * Copyright (c) 2016 Joyent, Inc.  All rights reserved.
  * Copyright (c) 2015 The MathWorks, Inc.  All rights reserved.
  */
 
@@ -492,6 +492,10 @@ inotify_watch_event(inotify_watch_t *watch, uint64_t mask, char *name)
 	}
 
 	if (name != NULL) {
+		/*
+		 * We are in the context of a file event monitoring operation,
+		 * so the name length is bounded by the kernel.
+		 */
 		len = strlen(name) + 1;
 		len = roundup(len, sizeof (struct inotify_event));
 	} else {
@@ -505,7 +509,7 @@ inotify_watch_event(inotify_watch_t *watch, uint64_t mask, char *name)
 	event->ine_event.len = len;
 
 	if (name != NULL)
-		strcpy(event->ine_event.name, name);
+		(void) strcpy(event->ine_event.name, name);
 
 	if (tail != NULL) {
 		tail->ine_next = event;
@@ -628,8 +632,15 @@ inotify_watch_add(inotify_state_t *state, inotify_watch_t *parent,
 		inotify_watch_hold(parent);
 		watch->inw_mask &= IN_CHILD_EVENTS;
 		watch->inw_parent = parent;
+
+		/*
+		 * Copy the name.  Note that when the name is user-specified,
+		 * its length is bounded by the copyinstr() to be MAXPATHLEN
+		 * (and regardless, we know by this point that it exists in
+		 * our parent).
+		 */
 		watch->inw_name = kmem_alloc(strlen(name) + 1, KM_SLEEP);
-		strcpy(watch->inw_name, name);
+		(void) strcpy(watch->inw_name, name);
 
 		avl_add(&parent->inw_children, watch);
 	}
@@ -956,6 +967,13 @@ inotify_rm_watch(inotify_state_t *state, int32_t wd)
 	inotify_watch_remove(state, watch);
 	mutex_exit(&state->ins_lock);
 
+	/*
+	 * Because removing a watch will generate an IN_IGNORED event (and
+	 * because inotify_watch_remove() won't alone induce a pollwakeup()),
+	 * we need to explicitly issue a pollwakeup().
+	 */
+	pollwakeup(&state->ins_pollhd, POLLRDNORM | POLLIN);
+
 	return (0);
 }
 
-- 
2.21.0

