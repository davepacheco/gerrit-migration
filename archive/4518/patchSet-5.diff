commit d185b398accf172381462ea32ac9debc5175b6ac (refs/changes/18/4518/5)
Author: Kody A Kantor <kody@kkantor.com>
Date:   2018-07-30T19:14:30+00:00 (1 year, 2 months ago)
    
    MANTA-3808 add functionality to disable mackerel and mola jobs

diff --git a/deps/jsstyle b/deps/jsstyle
index da42b50..52dc973 160000
--- a/deps/jsstyle
+++ b/deps/jsstyle
@@ -1 +1 @@
-Subproject commit da42b50ceb12d431437b32efd4c411a8e2fac0c8
+Subproject commit 52dc973cf64da11834eca7cf46ebce8518e3ee88
diff --git a/lib/main.js b/lib/main.js
index 63f926a..6295b28 100755
--- a/lib/main.js
+++ b/lib/main.js
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 var mod_assert = require('assert-plus');
@@ -20,7 +20,7 @@ var mod_generateLookup = require('./generateLookup');
 
 var usageMsg = [
 'Usage:',
-'meter -j jobName -d date [-r] [-w] [-c] [-f configFile]'
+'meter -j jobName -d date [-r] [-w] [-c] [-F] [-f configFile]'
 ].join('\n');
 
 var LOG = mod_bunyan.createLogger({
@@ -54,7 +54,7 @@ function usage(msg) {
 function getOpts(argv) {
         var opts = {};
         var usageErr = '';
-        var parser = new mod_getopt.BasicParser('crwd:f:j:', argv);
+        var parser = new mod_getopt.BasicParser('crwd:f:j:F', argv);
         var option;
 
         while ((option = parser.getopt()) !== undefined) {
@@ -80,6 +80,9 @@ function getOpts(argv) {
                 case 'j':
                         opts.jobName = option.optarg;
                         break;
+                case 'F':
+                        opts.forceRun = true;
+                        break;
                 default:
                         /* error message already emitted by getopt */
                         usage('unrecognized option ' + option.option);
@@ -89,6 +92,7 @@ function getOpts(argv) {
 
         opts.config = opts.config || DEFAULT_CONFIG;
         opts.config = mod_path.resolve(opts.config);
+        opts.forceRun = opts.forceRun || false;
 
         if (!opts.date) {
                 usageErr += 'Date is required (-d <date>)\n';
@@ -118,6 +122,39 @@ function main() {
                 process.exit(1);
         }
 
+        if (config.disableAllJobs === true && !opts.forceRun) {
+                console.log('all jobs are disabled, exiting.');
+                process.exit(0);
+        }
+
+        /* check if this job is enabled or not. */
+        var isEnabled = true;
+        switch (opts.jobName) {
+                case 'storage':
+                        isEnabled = (config.meterStorageEnabled === true);
+                        break;
+                case 'compute':
+                        isEnabled = (config.meterComputeEnabled === true);
+                        break;
+                case 'request':
+                case 'accessLogs':
+                        isEnabled = (config.meterRequestEnabled === true);
+                        break;
+                case 'summarizeDaily':
+                        isEnabled = (config.meterPrevDayEnabled === true);
+                        break;
+                default:
+                        console.log('unknown job name');
+                        break;
+        }
+
+        /* exit if job is not enabled. */
+        if (isEnabled === false && !opts.forceRun) {
+                console.log(opts.jobName, 'job is disabled, exiting.');
+                process.exit(0);
+        }
+
+
         if (opts.configOnly) {
                 mod_meter.configureJob({
                         jobConfig: jobConfig,
diff --git a/sapi_manifests/mackerel/template b/sapi_manifests/mackerel/template
index c21c167..f87c7e4 100755
--- a/sapi_manifests/mackerel/template
+++ b/sapi_manifests/mackerel/template
@@ -24,5 +24,35 @@
     },
     "jobsFile": "etc/jobs.json",
     "mantaBaseDirectory": "/poseidon/stor/usage",
-    "lookupFile": "assets/etc/lookup.json"
+    "lookupFile": "assets/etc/lookup.json",
+    {{#DISABLE_ALL_JOBS}}
+    "disableAllJobs": {{DISABLE_ALL_JOBS}},
+    {{/DISABLE_ALL_JOBS}}
+    {{^DISABLE_ALL_JOBS}}
+    "disableAllJobs": false,
+    {{/DISABLE_ALL_JOBS}}
+    {{#METER_STORAGE_ENABLED}}
+    "meterStorageEnabled": {{METER_STORAGE_ENABLED}},
+    {{/METER_STORAGE_ENABLED}}
+    {{^METER_STORAGE_ENABLED}}
+    "meterStorageEnabled": true,
+    {{/METER_STORAGE_ENABLED}}
+    {{#METER_COMPUTE_ENABLED}}
+    "meterComputeEnabled": {{METER_COMPUTE_ENABLED}},
+    {{/METER_COMPUTE_ENABLED}}
+    {{^METER_COMPUTE_ENABLED}}
+    "meterComputeEnabled": true,
+    {{/METER_COMPUTE_ENABLED}}
+    {{#METER_REQUEST_ENABLED}}
+    "meterRequestEnabled": {{METER_REQUEST_ENABLED}},
+    {{/METER_REQUEST_ENABLED}}
+    {{^METER_REQUEST_ENABLED}}
+    "meterRequestEnabled": true,
+    {{/METER_REQUEST_ENABLED}}
+    {{#METER_PREV_DAY_ENABLED}}
+    "meterPrevDayEnabled": {{METER_PREV_DAY_ENABLED}}
+    {{/METER_PREV_DAY_ENABLED}}
+    {{^METER_PREV_DAY_ENABLED}}
+    "meterPrevDayEnabled": true
+    {{/METER_PREV_DAY_ENABLED}}
 }
