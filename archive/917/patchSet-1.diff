commit e26f130ab9a72c8857a6da33252234bf6ca6bd6c (refs/changes/17/917/1)
Author: David Pacheco <dap@joyent.com>
Date:   2016-11-17T13:49:44-08:00 (2 years, 11 months ago)
    
    MORAY-377 moray client masks callers failing to add "error" listeners

diff --git a/lib/client.js b/lib/client.js
index 80702a6..89c935a 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -728,7 +728,7 @@ MorayClient.prototype.createFastConnection =
  *        If a backend connection is available, a MorayRpcContext will be
  *        returned from ctxCreateForEmitter().  These functions typically use
  *        releaseWhenDone() to release the RPC context when the event emitter
- *        emits 'end' or 'error'.
+ *        emits '_moray_internal_rpc_done'.
  *
  *        If no backend connection is available, then the caller is responsible
  *        for allocating and returning a new EventEmitter that will emit the
@@ -858,14 +858,11 @@ MorayClient.prototype.releaseWhenDone = function releaseOnEnd(rpcctx, emitter) {
     assert.object(emitter);
     assert.ok(emitter instanceof EventEmitter);
 
-    function onEmitterRpcComplete() {
+    emitter.on('_moray_internal_rpc_done', function onEmitterRpcComplete() {
         assert.ok(!done);
         done = true;
         self.ctxRelease(rpcctx);
-    }
-
-    emitter.on('error', onEmitterRpcComplete);
-    emitter.on('end', onEmitterRpcComplete);
+    });
 };
 
 /*
diff --git a/lib/meta.js b/lib/meta.js
index a6c887d..70cc641 100644
--- a/lib/meta.js
+++ b/lib/meta.js
@@ -165,6 +165,8 @@ function sql(rpcctx, statement, values, options) {
         } else {
             res.emit('end');
         }
+
+        res.emit('_moray_internal_rpc_done');
     });
 
     req.on('data', function (msg) {
diff --git a/lib/objects.js b/lib/objects.js
index f4029c4..cd502af 100644
--- a/lib/objects.js
+++ b/lib/objects.js
@@ -141,6 +141,8 @@ function findObjects(rpcctx, bucket, filter, options) {
         } else {
             res.emit('end');
         }
+
+        res.emit('_moray_internal_rpc_done');
     });
 
     req.on('data', function onObject(msg) {
