From 24cbc0f417199b039db14dc886cc8f838594d4c2 Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Fri, 9 Aug 2019 17:55:27 +0000
Subject: [PATCH] OS-7944 Want support for printing RTT variance with
 connstat(1M)

---
 usr/src/cmd/connstat/connstat_tcp.c     | 4 ++++
 usr/src/man/man1m/connstat.1m           | 3 +++
 usr/src/uts/common/inet/mib2.h          | 2 ++
 usr/src/uts/common/inet/tcp/tcp_stats.c | 1 +
 4 files changed, 10 insertions(+)

diff --git a/usr/src/cmd/connstat/connstat_tcp.c b/usr/src/cmd/connstat/connstat_tcp.c
index 4cd20c9b09..7ec3b23495 100644
--- a/usr/src/cmd/connstat/connstat_tcp.c
+++ b/usr/src/cmd/connstat/connstat_tcp.c
@@ -77,6 +77,7 @@ typedef struct tcp_fields_buf_s {
 	uint64_t t_rtt_sum;
 	int t_state;
 	uint64_t t_rtt;
+	uint64_t t_rttvar;
 } tcp_fields_buf_t;
 
 static boolean_t print_tcp_state(ofmt_arg_t *, char *, uint_t);
@@ -126,6 +127,8 @@ static ofmt_field_t tcp_fields[] = {
 		offsetof(tcp_fields_buf_t, t_rtt_sum),	print_uint64 },
 	{ "RTTC",	11,
 		offsetof(tcp_fields_buf_t, t_rtt_cnt),	print_uint32 },
+	{ "RTTVAR",	8,
+		offsetof(tcp_fields_buf_t, t_rttvar),	print_uint64 },
 	{ "STATE",	12,
 		offsetof(tcp_fields_buf_t, t_state),	print_tcp_state },
 	{ NULL, 0, 0, NULL}
@@ -189,6 +192,7 @@ tcp_ci2buf(struct tcpConnEntryInfo_s *ci)
 	fields_buf.t_rtt = (ci->ce_out_data_segs == 0 ? 0 : ci->ce_rtt_sa);
 	fields_buf.t_rtt_sum = ci->ce_rtt_sum;
 	fields_buf.t_rtt_cnt = ci->ce_rtt_cnt;
+	fields_buf.t_rttvar = ci->ce_rtt_sd;
 	fields_buf.t_state = ci->ce_state;
 }
 
diff --git a/usr/src/man/man1m/connstat.1m b/usr/src/man/man1m/connstat.1m
index 2175fefdb3..ad9b6931ea 100644
--- a/usr/src/man/man1m/connstat.1m
+++ b/usr/src/man/man1m/connstat.1m
@@ -165,6 +165,9 @@ The current retransmission timeout in milliseconds.
 .It Sy rtt
 The current smoothed round-trip time to the peer in microseconds.
 The smoothed RTT average algorithm used is as described in RFC 6298.
+.It Sy rttvar
+The current smoothed variation of the round-trip time to the peer in
+microseconds.
 .It Sy rttc
 The number of times that a round-trip sample was added to
 .Sy rtts .
diff --git a/usr/src/uts/common/inet/mib2.h b/usr/src/uts/common/inet/mib2.h
index 847ad1c560..c1ef4cc2c9 100644
--- a/usr/src/uts/common/inet/mib2.h
+++ b/usr/src/uts/common/inet/mib2.h
@@ -1388,6 +1388,8 @@ typedef struct mib2_tcpConnEntry {
 		Gauge		ce_rwnd;
 				/* round-trip time smoothed average (us) */
 		Gauge		ce_rtt_sa;
+				/* round-trip time smoothed deviation (us) */
+		Gauge		ce_rtt_sd;
 				/* current rto (retransmit timeout) */
 		Gauge		ce_rto;
 				/* round-trip time count */
diff --git a/usr/src/uts/common/inet/tcp/tcp_stats.c b/usr/src/uts/common/inet/tcp/tcp_stats.c
index dbf320d09d..37f4255b6a 100644
--- a/usr/src/uts/common/inet/tcp/tcp_stats.c
+++ b/usr/src/uts/common/inet/tcp/tcp_stats.c
@@ -127,6 +127,7 @@ tcp_set_conninfo(tcp_t *tcp, struct tcpConnEntryInfo_s *tcei, boolean_t ispriv)
 	tcei->ce_mss =  tcp->tcp_mss;
 	tcei->ce_state = tcp->tcp_state;
 	tcei->ce_rtt_sa = NSEC2USEC(tcp->tcp_rtt_sa >> 3);
+	tcei->ce_rtt_sd = NSEC2USEC(tcp->tcp_rtt_sd >> 2);
 	tcei->ce_rtt_sum = NSEC2USEC(tcp->tcp_rtt_sum);
 	tcei->ce_rtt_cnt = tcp->tcp_rtt_cnt;
 }
-- 
2.21.0

