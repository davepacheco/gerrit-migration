From 6ca313365cd759921d2da7661e3b9f2dfae80992 Mon Sep 17 00:00:00 2001
From: Jerry Jelinek <jerry.jelinek@joyent.com>
Date: Tue, 17 Oct 2017 18:25:24 +0000
Subject: [PATCH] OS-6368 lxbrand: mlockall struggles with anonymous overcommit

---
 usr/src/lib/brand/lx/lx_brand/common/mem.c | 5 ++++-
 usr/src/lib/brand/lx/testing/ltp_skiplist  | 1 +
 usr/src/uts/common/os/grow.c               | 2 +-
 usr/src/uts/common/sys/mman.h              | 9 ++++++++-
 usr/src/uts/common/vm/seg_vn.c             | 9 ++++++++-
 5 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/usr/src/lib/brand/lx/lx_brand/common/mem.c b/usr/src/lib/brand/lx/lx_brand/common/mem.c
index 9632649091..d319abe046 100644
--- a/usr/src/lib/brand/lx/lx_brand/common/mem.c
+++ b/usr/src/lib/brand/lx/lx_brand/common/mem.c
@@ -54,6 +54,9 @@ int pagesize;	/* needed for mmap2() */
 #define	LX_MAP_NORESERVE	0x04000
 #define	LX_MAP_32BIT		0x00040
 
+/* Must match mman.h - once this code moves in-kernel, remove this def. */
+#define	_MAP_OVERCOMMIT		0x4000
+
 #define	TWO_GB			0x80000000
 
 static void lx_remap_anoncache_invalidate(uintptr_t, size_t);
@@ -68,7 +71,7 @@ ltos_mmap_flags(int flags)
 	if (flags & LX_MAP_ANONYMOUS)
 		new_flags |= MAP_ANONYMOUS;
 	if (flags & LX_MAP_NORESERVE)
-		new_flags |= MAP_NORESERVE;
+		new_flags |= MAP_NORESERVE | _MAP_OVERCOMMIT;
 
 #if defined(_LP64)
 	if (flags & LX_MAP_32BIT)
diff --git a/usr/src/lib/brand/lx/testing/ltp_skiplist b/usr/src/lib/brand/lx/testing/ltp_skiplist
index 0f670d1866..96e2cc4ac1 100644
--- a/usr/src/lib/brand/lx/testing/ltp_skiplist
+++ b/usr/src/lib/brand/lx/testing/ltp_skiplist
@@ -186,6 +186,7 @@ llistxattr01
 llistxattr02
 llistxattr03
 madvise08		# no MADV_DONTDUMP support (yet?)
+mlock02			# need mmap in kernel
 mmap13
 mq_notify01
 mq_notify02
diff --git a/usr/src/uts/common/os/grow.c b/usr/src/uts/common/os/grow.c
index 9d40f93da1..092bbe5922 100644
--- a/usr/src/uts/common/os/grow.c
+++ b/usr/src/uts/common/os/grow.c
@@ -662,7 +662,7 @@ smmap_common(caddr_t *addrp, size_t len,
 
 	if ((flags & ~(MAP_SHARED | MAP_PRIVATE | MAP_FIXED | _MAP_NEW |
 	    _MAP_LOW32 | MAP_NORESERVE | MAP_ANON | MAP_ALIGN |
-	    MAP_TEXT | MAP_INITDATA)) != 0) {
+	    _MAP_OVERCOMMIT | MAP_TEXT | MAP_INITDATA)) != 0) {
 		/* | MAP_RENAME */	/* not implemented, let user know */
 		return (EINVAL);
 	}
diff --git a/usr/src/uts/common/sys/mman.h b/usr/src/uts/common/sys/mman.h
index 65819c1209..3315285454 100644
--- a/usr/src/uts/common/sys/mman.h
+++ b/usr/src/uts/common/sys/mman.h
@@ -25,7 +25,7 @@
  *
  * Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright 2015 Joyent, Inc.  All rights reserved.
+ * Copyright 2017 Joyent, Inc.  All rights reserved.
  */
 
 /*	Copyright (c) 1983, 1984, 1985, 1986, 1987, 1988, 1989 AT&T	*/
@@ -96,6 +96,13 @@ extern "C" {
 #ifdef _KERNEL
 #define	_MAP_TEXTREPL	0x1000
 #define	_MAP_RANDOMIZE	0x2000
+
+/*
+ * Can be combined with MAP_NORESERVE to prevent mlock failures on overcomitted
+ * mappings. This flag must be stored in the segment data flags field. Since
+ * that is a ushort_t, we need to use one of the lower bits.
+ */
+#define	_MAP_OVERCOMMIT	0x4000
 #endif /* _KERNEL */
 
 #if	(_POSIX_C_SOURCE <= 2) && !defined(_XPG4_2)
diff --git a/usr/src/uts/common/vm/seg_vn.c b/usr/src/uts/common/vm/seg_vn.c
index f143c1e464..5c82cc3950 100644
--- a/usr/src/uts/common/vm/seg_vn.c
+++ b/usr/src/uts/common/vm/seg_vn.c
@@ -20,7 +20,7 @@
  */
 /*
  * Copyright (c) 1986, 2010, Oracle and/or its affiliates. All rights reserved.
- * Copyright 2015, Joyent, Inc. All rights reserved.
+ * Copyright 2017, Joyent, Inc. All rights reserved.
  * Copyright 2015 Nexenta Systems, Inc.  All rights reserved.
  */
 
@@ -7793,6 +7793,13 @@ segvn_lockop(struct seg *seg, caddr_t addr, size_t len,
 			if (sp != NULL)
 				mutex_exit(&sp->shm_mlock);
 			SEGVN_LOCK_EXIT(seg->s_as, &svd->lock);
+
+			/*
+			 * Silently ignore the rctl limit locking failure on
+			 * overcommitted segments.
+			 */
+			if ((svd->flags & _MAP_OVERCOMMIT) != 0)
+				return (0);
 			return (err);
 		}
 	}
-- 
2.21.0

