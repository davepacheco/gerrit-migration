From 48167a834eac55218c51facf76141001fcc0765a Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Tue, 21 May 2019 15:54:32 -0700
Subject: [PATCH] =?UTF-8?q?TRITON-1691=20want=20cross-account=20RBAC=20in?=
 =?UTF-8?q?=20cloudapi=20Reviewed=20by:=20Pedro=20Palaz=C3=B3n=20Candel=20?=
 =?UTF-8?q?<pedro@joyent.com>=20Approved=20by:=20Pedro=20Palaz=C3=B3n=20Ca?=
 =?UTF-8?q?ndel=20<pedro@joyent.com>?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 lib/auth.js       | 36 +++++++++++++++++++++++-------------
 package.json      |  2 +-
 test/auth.test.js | 23 +++++++++++++++++++++++
 test/common.js    | 47 +++++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 94 insertions(+), 14 deletions(-)

diff --git a/lib/auth.js b/lib/auth.js
index 9d95ae2..a96b8fb 100644
--- a/lib/auth.js
+++ b/lib/auth.js
@@ -530,10 +530,6 @@ function authorize(req, res, next) {
         return next();
     }
 
-    if (!req.subuser || !req.accountMgmt) {
-        return next(new NotAuthorizedError(FORBIDDEN, account.login));
-    }
-
     var activeRoles;
     function getRoles(_, cb) {
         var asRoleParam = req.params['as-role'];
@@ -544,7 +540,7 @@ function authorize(req, res, next) {
         // not, we load the user's default roles as activeRoles for this
         // operation instead.
         if (requestedRoles && requestedRoles.length) {
-            caller.roles(function (err, roles) {
+            caller.rolesOnAccount(account.uuid, function (err, roles) {
                 if (err) {
                     return cb(err);
                 }
@@ -567,7 +563,9 @@ function authorize(req, res, next) {
                 return cb();
             });
         } else {
-            caller.defaultRoles(function (err, defaultRoles) {
+            caller.defaultRolesOnAccount(account.uuid,
+                function (err, defaultRoles) {
+
                 if (err) {
                     return cb(err);
                 }
@@ -581,15 +579,27 @@ function authorize(req, res, next) {
 
     var info;
     function getUser(_, cb) {
-        mahi.getUser(caller.login, account.login, function (err, _info) {
-            if (err) {
-                return cb(err);
-            }
+        if (req.subuser) {
+            mahi.getUser(caller.login, account.login, function (err, _info) {
+                if (err) {
+                    return cb(err);
+                }
 
-            info = _info;
+                info = _info;
 
-            return cb();
-        });
+                return cb();
+            });
+        } else {
+            mahi.getAccount(caller.login, function (err, _info) {
+                if (err) {
+                    return cb(err);
+                }
+
+                info = _info;
+
+                return cb();
+            });
+        }
     }
 
     var owner;
diff --git a/package.json b/package.json
index 6700250..7cb1674 100644
--- a/package.json
+++ b/package.json
@@ -39,7 +39,7 @@
         "semver": "5.4.1",
         "triton-metrics": "0.1.0",
         "triton-netconfig": "1.3.0",
-        "ufds": "1.5.0",
+        "ufds": "1.6.0",
         "uuid-by-string": "0.6.0",
         "vasync": "2.2.0",
         "verror": "1.10.0"
diff --git a/test/auth.test.js b/test/auth.test.js
index 8fd7e53..0bc6a93 100644
--- a/test/auth.test.js
+++ b/test/auth.test.js
@@ -36,6 +36,7 @@ var SERVER;
 var POLICY_NAME;
 var ROLE_NAME;
 var ROLE_UUID;
+var XROLE_NAME;
 
 
 // --- Tests
@@ -53,6 +54,8 @@ test('setup', function (t) {
         ROLE_NAME   = CLIENT.role.name;
         POLICY_NAME = CLIENT.policy.name;
 
+        XROLE_NAME  = CLIENT.xrole.name;
+
         t.end();
     });
 });
@@ -700,6 +703,26 @@ test('get /:account role-tag - other', function (t) {
 });
 
 
+test('get /:account/keys - other no xacct role', function (t) {
+    OTHER.get('/' + CLIENT.login + '/keys', function (err, req, res, body) {
+        checkNotAuthorized(t, err, req, res, body);
+        t.end();
+    });
+});
+
+test('get /:account/keys - other xacct role', function (t) {
+    OTHER.get('/' + CLIENT.login + '/keys?as-role=' + XROLE_NAME,
+        function (err, req, res, body) {
+
+        t.ifError(err, 'other xacct role keys err');
+        t.ok(body, 'other xacct role keys body');
+        t.ok(Array.isArray(body), 'resource is an array');
+        t.ok(body[0].fingerprint, 'resource array contains keys');
+        t.end();
+    });
+});
+
+
 test('cleanup resources', function (t) {
     common.deleteResources(CLIENT, function (err) {
         t.ifError(err);
diff --git a/test/common.js b/test/common.js
index bfefb00..0c18c1f 100644
--- a/test/common.js
+++ b/test/common.js
@@ -395,6 +395,47 @@ function createTestPolicy(client, cb) {
     });
 }
 
+function createXTestPolicy(client, cb) {
+    var entry = {
+        name: 'x-test-policy',
+        rule: [
+            'CAN listkeys and headkeys *'
+        ],
+        description: 'Policy used by test helper',
+        account: client.account.uuid
+    };
+
+    client.ufds.addPolicy(client.account.uuid, entry, function (err, policy) {
+        if (err) {
+            return cb(err);
+        }
+
+        client.xpolicy = policy;
+
+        return cb();
+    });
+}
+
+
+function createXTestRole(client, otherAccount, cb) {
+    var entry = {
+        name: 'x-test-role',
+        uniquemember: [otherAccount.dn],
+        memberpolicy: [client.xpolicy.dn],
+        account: client.account.uuid
+    };
+
+    client.ufds.addRole(client.account.uuid, entry, function (err, role) {
+        if (err) {
+            return cb(err);
+        }
+
+        client.xrole = role;
+
+        return cb();
+    });
+}
+
 
 function addUserKey(client, keyPath, cb) {
     var publicKey  = fs.readFileSync(keyPath + '.pub', 'ascii');
@@ -733,6 +774,12 @@ function setup(opts, cb) {
         function setupRole(_, next) {
             createTestRole(userClient, subUserClient.account, next);
         },
+        function setupXPolicy(_, next) {
+            createXTestPolicy(userClient, next);
+        },
+        function setupXRole(_, next) {
+            createXTestRole(userClient, otherUserClient.account, next);
+        },
         function setupPackage(_, next) {
             addPackage(userClient, SDC_128_PACKAGE, next);
         },
-- 
2.21.0

