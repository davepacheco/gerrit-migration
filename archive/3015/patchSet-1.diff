commit ebda519c1a280795fb24bb158ab7f899e60c1ff8 (refs/changes/15/3015/1)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-11-30T02:37:20+00:00 (1 year, 10 months ago)
    
    MANTA-3503 moray pgclient query function creates its own request id

diff --git a/lib/control.js b/lib/control.js
index f7b8b39..47e9bfc 100644
--- a/lib/control.js
+++ b/lib/control.js
@@ -52,7 +52,7 @@ function _getPGHandleAfter(req, cb) {
             if (req.opts.hasOwnProperty('timeout')) {
                 pg.setTimeout(req.opts.timeout);
             }
-
+            pg.setRequestId(req.req_id);
             req.pg = pg;
             cb(null);
         }
diff --git a/lib/pg.js b/lib/pg.js
index 521bde9..28cfd21 100644
--- a/lib/pg.js
+++ b/lib/pg.js
@@ -113,6 +113,28 @@ PGClient.prototype.setTimeout = function setQueryTimeout(timeout) {
 };
 
 
+/*
+ * Set the request id for this client. This allows us to associate database
+ * queries with a specific RPC being processed by Moray by passing it as an
+ * argument to the 'query-*' dtrace probes.
+ */
+PGClient.prototype.setRequestId = function setRequestId(reqid) {
+    assert.string(reqid, 'reqid');
+    this.reqid = reqid;
+};
+
+
+/*
+ * Called when the postgres client is released back into the pool. Currently,
+ * all new RPCs will overwrite the request id anyway, but this guards against
+ * accidential request id re-use by future users of this client.
+ */
+PGClient.prototype.clearRequestId = function clearRequestId() {
+    assert.string(this.reqid, 'this.reqid');
+    this.reqid = null;
+};
+
+
 /*
  * Restore default timeout in case it was changed, and return this
  * client back to the pool.
@@ -120,6 +142,7 @@ PGClient.prototype.setTimeout = function setQueryTimeout(timeout) {
 PGClient.prototype.release = function clientRelease() {
     assert.equal(false, this._moray_txn, 'finished transaction');
     this.setTimeout(this._defaultTimeout);
+    this.clearRequestId();
     this.pool.release(this);
 };
 
@@ -136,7 +159,7 @@ PGClient.prototype.query = function clientQuery(sql, args) {
     var res = new EventEmitter();
     var self = this;
     var timer;
-    var reqid = libuuid.create();
+    var reqid = this.reqid;
     var aborted = false;
 
     function done(event, arg) {
diff --git a/lib/ping.js b/lib/ping.js
index 8407350..22550ef 100644
--- a/lib/ping.js
+++ b/lib/ping.js
@@ -68,7 +68,7 @@ function ping(options) {
                 rpc.fail(startErr);
                 return;
             }
-
+            pg.setRequestId(req_id);
             var req = pg.query('SELECT name FROM buckets_config ' +
                                'LIMIT 1');
 
