From c32f41668ccdf64c80118454924b7ad8aa6f4c35 Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Mon, 21 Aug 2017 11:55:13 -0700
Subject: [PATCH] joyent/node-docker-registry-client#22 Update
 examples/v2/login.js to use newer mainline code

---
 examples/v2/login.js | 139 +++++++++++++++++++------------------------
 1 file changed, 61 insertions(+), 78 deletions(-)

diff --git a/examples/v2/login.js b/examples/v2/login.js
index 7447f5f..a7ef1a6 100644
--- a/examples/v2/login.js
+++ b/examples/v2/login.js
@@ -7,7 +7,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 /* BEGIN JSSTYLED */
@@ -21,7 +21,7 @@
  * Usage:
  *      node examples/login.js [INDEX-NAME] [USERNAME] [PASSWORD]
  *
- * Run with TRACE=1 envvar to get trace-level logging.
+ * Run with -v for more more verbose logging.
  *
  * Example:
  *      $ node examples/login.js
@@ -32,96 +32,79 @@
  */
 /* END JSSTYLED */
 
-var bunyan = require('bunyan');
-var format = require('util').format;
 var read = require('read');
 var vasync = require('vasync');
 
 var drc = require('../../');
-
+var mainline = require('../mainline');
 
 
 // --- globals
 
 var cmd = 'login';
 
+mainline({cmd: cmd}, function (log, parser, opts, args) {
+    var name = args[0];
+    if (!name) {
+        console.error('usage: node examples/v2/%s.js REPO[:TAG|@DIGEST]\n' +
+            '\n' +
+            'options:\n' +
+            '%s', cmd, parser.help().trimRight());
+        process.exit(2);
+    }
 
 
-// --- internal support stuff
-
-function fail(err) {
-    console.error('%s: error: %s', cmd, err.message || err);
-    process.exit(2);
-}
-
-
-// --- mainline
-
-var logLevel = 'warn';
-if (process.env.TRACE) {
-    logLevel = 'trace';
-}
-var log = bunyan.createLogger({
-    name: cmd,
-    level: logLevel
-});
-
-
-// `docker login` with no args passes
-// `serveraddress=https://index.docker.io/v1/` (yes, "v1", even in a v2 world).
-var indexName = process.argv[2] || 'https://index.docker.io/v1/';
-if (indexName === '-h' || indexName === '--help') {
-    console.error('usage: node examples/v2/%s.js [INDEX] [USERNAME] ' +
-        '[PASSWORD]', cmd);
-    process.exit(2);
-}
+    // `docker login` with no args passes
+    // `serveraddress=https://index.docker.io/v1/` (yes, "v1", even for v2 reg).
+    var indexName = args[0] || 'https://index.docker.io/v1/';
+    var username = args[1];
+    var password = args[2];
 
-var username = process.argv[3];
-var password = process.argv[4];
-vasync.pipeline({funcs: [
-    function getUsername(_, next) {
-        if (username) {
-            return next();
-        }
-        read({prompt: 'Username:'}, function (err, val) {
-            if (err) {
-                return next(err);
-            }
-            username = val.trim();
-            next();
-        });
-    },
-    function getPassword(_, next) {
-        if (password) {
-            return next();
-        }
-        read({prompt: 'Password:', silent: true}, function (err, val) {
-            if (err) {
-                return next(err);
+    vasync.pipeline({funcs: [
+        function getUsername(_, next) {
+            if (username) {
+                return next();
             }
-            password = val.trim();
-            next();
-        });
-    },
-    function doLogin(_, next) {
-        drc.loginV2({
-            indexName: indexName,
-            log: log,
-            // TODO: insecure: insecure,
-            // auth info:
-            username: username,
-            password: password
-        }, function (err, result) {
-            if (err) {
-                next(err);
-            } else {
-                console.log('Result:', JSON.stringify(result, null, 4));
+            read({prompt: 'Username:'}, function (err, val) {
+                if (err) {
+                    return next(err);
+                }
+                username = val.trim();
                 next();
+            });
+        },
+        function getPassword(_, next) {
+            if (password) {
+                return next();
             }
-        });
-    }
-]}, function (err) {
-    if (err) {
-        fail(err);
-    }
+            read({prompt: 'Password:', silent: true}, function (err, val) {
+                if (err) {
+                    return next(err);
+                }
+                password = val.trim();
+                next();
+            });
+        },
+        function doLogin(_, next) {
+            drc.loginV2({
+                indexName: indexName,
+                log: log,
+                // TODO: insecure: insecure,
+                // auth info:
+                username: username,
+                password: password
+            }, function (err, result) {
+                if (err) {
+                    next(err);
+                } else {
+                    console.log('Result:', JSON.stringify(result, null, 4));
+                    next();
+                }
+            });
+        }
+    ]}, function (err) {
+        if (err) {
+            mainline.fail(cmd, err, opts);
+        }
+    });
 });
-- 
2.21.0

