commit ef0afd28c142a9d95294dd90c0985d66e22bbf5a (refs/changes/97/3197/1)
Author: Jason King <jason.king@joyent.com>
Date:   2018-01-11T00:46:36+00:00 (1 year, 9 months ago)
    
    OS-6525 SADB_ACQUIRE proposals don't include mechanism salt length

diff --git a/usr/src/lib/libipsecutil/common/ipsec_util.c b/usr/src/lib/libipsecutil/common/ipsec_util.c
index b983e75e37..5f628a9bc0 100644
--- a/usr/src/lib/libipsecutil/common/ipsec_util.c
+++ b/usr/src/lib/libipsecutil/common/ipsec_util.c
@@ -23,7 +23,7 @@
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
  * Copyright 2012 Milan Juri. All rights reserved.
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 #include <unistd.h>
@@ -2387,9 +2387,10 @@ print_prop(FILE *file, char *prefix, struct sadb_prop *prop)
 			    "Encryption = "));
 			(void) dump_ealg(combs[i].sadb_comb_encrypt, file);
 			(void) fprintf(file, dgettext(TEXT_DOMAIN,
-			    "  minbits=%u, maxbits=%u.\n%s "),
+			    "  minbits=%u, maxbits=%u, saltbits=%u.\n%s "),
 			    combs[i].sadb_comb_encrypt_minbits,
-			    combs[i].sadb_comb_encrypt_maxbits, prefix);
+			    combs[i].sadb_comb_encrypt_maxbits,
+			    combs[i].sadb_x_comb_encrypt_saltlen, prefix);
 		}
 
 		(void) fprintf(file, dgettext(TEXT_DOMAIN, "HARD: "));
diff --git a/usr/src/uts/common/inet/ip/sadb.c b/usr/src/uts/common/inet/ip/sadb.c
index a45f69c19e..7dd5ffcd3c 100644
--- a/usr/src/uts/common/inet/ip/sadb.c
+++ b/usr/src/uts/common/inet/ip/sadb.c
@@ -22,7 +22,7 @@
  * Copyright 2010 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
  * Copyright (c) 2012 Nexenta Systems, Inc. All rights reserved.
- * Copyright (c) 2017 Joyent, Inc.
+ * Copyright (c) 2018 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -5126,7 +5126,7 @@ sadb_acquire_prop(ipsec_action_t *ap, netstack_t *ns, boolean_t do_esp)
 	sadb_comb_t *comb;
 	ipsec_action_t *walker;
 	int ncombs, allocsize, ealgid, aalgid, aminbits, amaxbits, eminbits,
-	    emaxbits, replay;
+	    emaxbits, esaltlen, replay;
 	uint64_t softbytes, hardbytes, softaddtime, hardaddtime, softusetime,
 	    hardusetime;
 	uint64_t kmc = 0;
@@ -5254,13 +5254,14 @@ sadb_acquire_prop(ipsec_action_t *ap, netstack_t *ns, boolean_t do_esp)
 		}
 
 		if (ealg == NULL) {
-			ealgid = eminbits = emaxbits = 0;
+			ealgid = eminbits = emaxbits = esaltlen = 0;
 		} else {
 			ealgid = ealg->alg_id;
 			eminbits =
 			    MAX(prot->ipp_espe_minbits, ealg->alg_ef_minbits);
 			emaxbits =
 			    MIN(prot->ipp_espe_maxbits, ealg->alg_ef_maxbits);
+			esaltlen = SADB_8TO1(ealg->alg_saltlen);
 		}
 
 		if (aalg == NULL) {
@@ -5278,6 +5279,7 @@ sadb_acquire_prop(ipsec_action_t *ap, netstack_t *ns, boolean_t do_esp)
 		comb->sadb_comb_encrypt = ealgid;
 		comb->sadb_comb_encrypt_minbits = eminbits;
 		comb->sadb_comb_encrypt_maxbits = emaxbits;
+		comb->sadb_x_comb_encrypt_saltlen = esaltlen;
 		comb->sadb_comb_auth = aalgid;
 		comb->sadb_comb_auth_minbits = aminbits;
 		comb->sadb_comb_auth_maxbits = amaxbits;
diff --git a/usr/src/uts/common/net/pfkeyv2.h b/usr/src/uts/common/net/pfkeyv2.h
index 909c73414a..bf0f8358f5 100644
--- a/usr/src/uts/common/net/pfkeyv2.h
+++ b/usr/src/uts/common/net/pfkeyv2.h
@@ -23,7 +23,7 @@
  * Use is subject to license terms.
  */
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 #ifndef	_NET_PFKEYV2_H
@@ -290,7 +290,9 @@ typedef struct sadb_comb {
 	uint16_t sadb_comb_auth_maxbits;
 	uint16_t sadb_comb_encrypt_minbits;	/* Bit strengths for encrypt */
 	uint16_t sadb_comb_encrypt_maxbits;
-	uint32_t sadb_comb_reserved;
+	uint8_t sadb_x_comb_encrypt_saltlen;
+	uint8_t sadb_x_comb_reserved;
+	uint16_t sadb_comb_reserved;
 	uint32_t sadb_comb_soft_allocations;	/* Lifetime proposals for */
 	uint32_t sadb_comb_hard_allocations;	/* this combination. */
 	uint64_t sadb_comb_soft_bytes;
