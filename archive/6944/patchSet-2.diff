From 894187ac2d2bbb3b89699c0eab4421b57a1cbde8 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex@uq.edu.au>
Date: Tue, 1 Oct 2019 14:51:51 +1000
Subject: [PATCH] joyent/sdc-ufds#3 want smartlogin to support administrator
 role

---
 capi/keys.js | 46 ++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 44 insertions(+), 2 deletions(-)

diff --git a/capi/keys.js b/capi/keys.js
index dfdf84c..bb8e9bb 100644
--- a/capi/keys.js
+++ b/capi/keys.js
@@ -5,7 +5,8 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
+ * Copyright 2019 University of Queensland
  */
 
 /*
@@ -22,6 +23,7 @@ var sshpk = require('sshpk');
 var ldap = require('ldapjs');
 var restify = require('restify');
 var libuuid = require('libuuid');
+var vasync = require('vasync');
 function uuid() {
     return (libuuid.create());
 }
@@ -93,7 +95,47 @@ function loadKeys(req, callback) {
             return translateKey(key, req.params.uuid);
         });
 
-        return callback(null, keys);
+        var roleFilter = '(&(objectclass=sdcaccountrole)(name=administrator))';
+        req.ufds.listRoles(req.params.uuid, roleFilter, function (err2, roles) {
+            if (err2) {
+                return callback(err2);
+            }
+
+            var adminRole = roles[0];
+            if (!adminRole || !adminRole.uniquememberdefault) {
+                return callback(null, keys);
+            }
+
+            var members = adminRole.uniquememberdefault;
+            if (!Array.isArray(members)) {
+                members = [members];
+            }
+
+            vasync.forEachParallel({
+                func: addUserKeys,
+                inputs: members
+            }, function (err3) {
+                if (err3) {
+                    return callback(err3);
+                }
+                return callback(null, keys);
+            });
+
+            function addUserKeys(dn, ccb) {
+                req.ufds.search(dn, {
+                    scope: 'sub',
+                    filter: '(objectclass=sdckey)'
+                }, function (err4, userKeys) {
+                    if (err4) {
+                        return ccb(err4);
+                    }
+                    userKeys.forEach(function (key) {
+                        keys.push(translateKey(key, req.params.uuid));
+                    });
+                    return ccb(null);
+                });
+            }
+        });
     });
 }
 
-- 
2.21.0

