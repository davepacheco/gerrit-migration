From 43b65ae267825a5efc7295895362227c6a5c5727 Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Wed, 24 Jan 2018 23:34:09 +0000
Subject: [PATCH] TRITON-117 Update number of ports allowed per firewall rule

---
 lib/index.js         |  3 ++-
 lib/rule.js          | 19 ++++++++++++++-----
 test/invalid.test.js | 34 ++++++++++++++++++++++++++++------
 3 files changed, 44 insertions(+), 12 deletions(-)

diff --git a/lib/index.js b/lib/index.js
index 9e38f7c..c27c9dd 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -46,7 +46,8 @@ var validators = require('./validators');
  * 1 - Initial version of language
  * 2 - PORTS keyword & support for ranges of ports
  * 3 - Support for IPv6 targets, the ICMPv6 protocol, and the TYPE ALL keyword
- * 4 - Support for priority levels, and the AH and ESP protocols (for IPsec)
+ * 4 - Support for priority levels, longer protocol targets list, and the AH and
+ *     ESP protocols (for IPsec)
  */
 var CURR_VERSION = 4;
 
diff --git a/lib/rule.js b/lib/rule.js
index 8854caa..99cdecf 100644
--- a/lib/rule.js
+++ b/lib/rule.js
@@ -55,8 +55,12 @@ var FIELDS = [
 ];
 // Maximum number of targets per side:
 var MAX_TARGETS_PER_SIDE = 24;
-// Maximum number of ports:
-var MAX_PORTS = 8;
+// Maximum number of protocol targets:
+var MAX_PROTOCOL_TARGETS = 24;
+// Minimum version for using a larger list of protocol targets:
+var MINVER_LGPROTOTARG = 4;
+// The old maximum number of protocol targets:
+var OLD_MAX_PORTS = 8;
 var STRING_PROPS = ['created_by', 'description'];
 var TARGET_TYPES = ['wildcard', 'ip', 'subnet', 'tag', 'vm'];
 
@@ -447,10 +451,15 @@ function FwRule(data, opts) {
             'unknown protocol "%s"', this.protocol);
     }
 
-    if (this.protoTargets.length > MAX_PORTS) {
+    if (opts.maxVersion < MINVER_LGPROTOTARG) {
+        if (this.protoTargets.length > OLD_MAX_PORTS) {
+            throw new validators.InvalidParamError('rule',
+                'maximum of %d %s allowed', OLD_MAX_PORTS,
+                icmpr.test(this.protocol) ? 'types' : 'ports');
+        }
+    } else if (this.protoTargets.length > MAX_PROTOCOL_TARGETS) {
         throw new validators.InvalidParamError('rule',
-            'maximum of %d %s allowed',
-            MAX_TARGETS_PER_SIDE,
+            'maximum of %d %s allowed', MAX_PROTOCOL_TARGETS,
             icmpr.test(this.protocol) ? 'types' : 'ports');
     }
 
diff --git a/test/invalid.test.js b/test/invalid.test.js
index 0047b1a..8263c68 100644
--- a/test/invalid.test.js
+++ b/test/invalid.test.js
@@ -294,8 +294,14 @@ var INVALID = [
         }, 'rule',
         'maximum of 24 targets allowed per side'],
 
-    [ 'rule: max number of ports', {
-        rule: 'FROM all vms TO ip 192.168.5.4 BLOCK TCP ' + nPorts(9)
+    [ 'rule: max number of ports (small)', {
+        rule: 'FROM all vms TO ip 192.168.5.4 BLOCK TCP ' + nPorts(25),
+        maxVersion: 3
+        }, 'rule',
+        'maximum of 8 ports allowed'],
+
+    [ 'rule: max number of ports (large)', {
+        rule: 'FROM all vms TO ip 192.168.5.4 BLOCK TCP ' + nPorts(25)
         }, 'rule',
         'maximum of 24 ports allowed'],
 
@@ -339,13 +345,25 @@ var INVALID = [
         }, 'rule',
         'ICMP code "270" is invalid'],
 
-    [ 'rule: max number of ICMPv6 types', {
-        rule: 'FROM all vms TO ip fd00::45 BLOCK ICMP ' + nTypes(9)
+    [ 'rule: max number of ICMPv6 types (small)', {
+        rule: 'FROM all vms TO ip fd00::45 BLOCK ICMP ' + nTypes(25),
+        maxVersion: 3
+        }, 'rule',
+        'maximum of 8 types allowed'],
+
+    [ 'rule: max number of ICMPv6 types (large)', {
+        rule: 'FROM all vms TO ip fd00::45 BLOCK ICMP ' + nTypes(25)
         }, 'rule',
         'maximum of 24 types allowed'],
 
-    [ 'rule: max number of ICMP types', {
-        rule: 'FROM all vms TO ip 192.168.5.4 BLOCK ICMP ' + nTypes(9)
+    [ 'rule: max number of ICMP types (small)', {
+        rule: 'FROM all vms TO ip 192.168.5.4 BLOCK ICMP ' + nTypes(9),
+        maxVersion: 3
+        }, 'rule',
+        'maximum of 8 types allowed'],
+
+    [ 'rule: max number of ICMP types (large)', {
+        rule: 'FROM all vms TO ip 192.168.5.4 BLOCK ICMP ' + nTypes(25)
         }, 'rule',
         'maximum of 24 types allowed']
 ];
@@ -360,6 +378,10 @@ test('Invalid rules', function (t) {
         var rule = data[1];
         var thrown = false;
 
+        if (rule.maxVersion) {
+            opts.maxVersion = rule.maxVersion;
+        }
+
         try {
             if (field === 'global') {
                 opts.enforceGlobal = true;
-- 
2.21.0

