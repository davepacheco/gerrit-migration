commit f96fba2161454806aa282d3fd8f5a13e12371c94 (refs/changes/27/1927/3)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2017-05-12T12:22:50+02:00 (2 years, 5 months ago)
    
    TOOLS-1773 sdcadm experimental update-agents should use node's fs API instead of fork to use symlink/unlink
    Reviewed by: Trent Mick <trentm@gmail.com>
    Approved by: Trent Mick <trentm@gmail.com>

diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 4d1f268..8cca91c 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -33,6 +33,7 @@ var WfClient = require('wf-client');
 var uuid = require('node-uuid');
 var ProgressBar = require('progbar').ProgressBar;
 var cueball = require('cueball');
+var VError = require('verror');
 
 var common = require('./common');
 var svcadm = require('./svcadm');
@@ -1724,27 +1725,26 @@ SdcAdm.prototype.updateAgents = function updateAgents(options, callback) {
 
         function createLatestSymlink(_, next) {
             if (justDownload) {
-                return next();
+                next();
+                return;
             }
-            // TODO: this should just use `fs.unlink/symlink`.
-            progress('Create /usbkey/extra/agents/latest symlink');
-            common.execFilePlus({
-                argv: [ 'rm', '-f', '/usbkey/extra/agents/latest' ],
-                log: self.log
-            }, function (rmErr) {
-                if (rmErr) {
-                    return next(rmErr);
+            var symlink = '/usbkey/extra/agents/latest';
+            progress('Create %s symlink', symlink);
+            fs.unlink(symlink, function (unlinkErr) {
+                if (unlinkErr && unlinkErr.code !== 'ENOENT') {
+                    next(new VError(unlinkErr,
+                        'Unable to remove % symlink', symlink));
+                    return;
                 }
                 fname = path.basename(filepath);
-                common.execFilePlus({
-                    argv: ['ln', '-s', fname, 'latest'],
-                    cwd: '/usbkey/extra/agents',
-                    log: self.log
-                }, function (lnErr) {
-                    if (lnErr) {
-                        return next(lnErr);
+                fs.symlink(fname, symlink, function (symlinkErr) {
+                    if (symlinkErr) {
+                        next(new VError(symlinkErr,
+                            'Unable to create "latest" symlink to "%s"',
+                            fname));
+                        return;
                     }
-                    return next();
+                    next();
                 });
             });
         },
