From 36feb6d766c9c2a6dfc8b4c85744256b412d9679 Mon Sep 17 00:00:00 2001
From: Richard Bradley <richard.bradley@joyent.com>
Date: Wed, 25 Jan 2017 14:05:45 +0000
Subject: [PATCH] NET-367 sysinfo-refresh should be more hesitant about
 deleting NICs from NAPI

---
 lib/workflows/server-sysinfo.js | 62 ++++-----------------------------
 1 file changed, 7 insertions(+), 55 deletions(-)

diff --git a/lib/workflows/server-sysinfo.js b/lib/workflows/server-sysinfo.js
index 01f3306..c959d56 100644
--- a/lib/workflows/server-sysinfo.js
+++ b/lib/workflows/server-sysinfo.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -16,10 +16,13 @@
  * - Get server's pre-existing nics from NAPI
  * - Update NAPI with any changed nics
  * - Add any new nics to NAPI
- * - Delete any removed nics from NAPI
+ *
+ * NICs are not deleted from NAPI by this workflow, which if required (e.g. a
+ * swap of the physical NIC on the server) should be done directly by the
+ * operator via the DeleteNic endpoint in NAPI.
  */
 
-var VERSION = '1.1.2';
+var VERSION = '1.1.3';
 
 var sdcClients = require('sdc-clients');
 var vasync = require('vasync');
@@ -183,7 +186,7 @@ function getServerNics(job, cb) {
         }
 
         // Now that we have the current nics, go through and figure out
-        // if they're adds, deletes, updates, or no change.
+        // if they're adds, updates, or no change.
         var sysinfo = job.params.sysinfo;
         var uuid = sysinfo['UUID'];
         var aggrNics = [];
@@ -324,18 +327,10 @@ function getServerNics(job, cb) {
 
         job.params.updateNics = toUpdateNics;
         job.params.addNics = toAddNics;
-        job.params.deleteNics =
-            Object.keys(napiNics).map(function (i) {
-                return napiNics[i];
-            }).filter(function (nic) {
-                // Don't include vnics setup for underlay networks:
-                return !nic.underlay;
-            });
 
         job.log.info({
             updateNics: toUpdateNics,
             addNics: toAddNics,
-            deleteNics: job.params.deleteNics,
             napiNics: nics
         }, 'Got old nics from NAPI');
 
@@ -470,42 +465,6 @@ function addNics(job, callback) {
 }
 
 
-function deleteNics(job, callback) {
-    var length = job.params.deleteNics.length;
-    if (length === 0) {
-        callback(null, 'no nics to delete; returning');
-        return;
-    }
-
-    var napi = new sdcClients.NAPI({ url: napiUrl });
-    var deleted = [];
-
-    vasync.forEachParallel({
-        inputs: job.params.deleteNics,
-        func: function (params, next) {
-            napi.deleteNic(params.mac, function (err) {
-                job.log.info({
-                    params: params,
-                    status: err ? 'error: ' + err.message : 'success'
-                }, 'deleted nic: ' + params.mac);
-                if (err) {
-                    next(err);
-                    return;
-                }
-                deleted.push(params.mac);
-                next();
-            });
-        }
-    },
-    function (err) {
-        if (err) {
-            return callback(err);
-        }
-        callback(null, 'nics deleted: ' + deleted.join(', '));
-    });
-}
-
-
 function updateAggrs(job, cb) {
     if (job.params.existingAggrs.length === 0 &&
         Object.keys(job.params.sysinfoAggrs).length === 0) {
@@ -666,13 +625,6 @@ module.exports = {
             body: addNics,
             modules: { sdcClients: 'sdc-clients', vasync: 'vasync' }
         },
-        {
-            name: 'napi.delete_nics',
-            timeout: 10,
-            retry: 1,
-            body: deleteNics,
-            modules: { sdcClients: 'sdc-clients', vasync: 'vasync' }
-        },
         {
             name: 'napi.update_aggrs',
             timeout: 10,
-- 
2.21.0

