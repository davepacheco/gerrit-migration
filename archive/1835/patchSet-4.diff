From 834941d67c8927bf71df1849ec430cba686d89a1 Mon Sep 17 00:00:00 2001
From: Hans Rosenfeld <hans.rosenfeld@joyent.com>
Date: Thu, 20 Apr 2017 17:44:15 +0200
Subject: [PATCH] OS-6075 kernel panic in apix:apic_timer_init

---
 usr/src/uts/i86pc/io/apix/apix.c     |  9 ++++++---
 usr/src/uts/i86pc/io/pcplusmp/apic.c | 14 +++++++++++---
 2 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/usr/src/uts/i86pc/io/apix/apix.c b/usr/src/uts/i86pc/io/apix/apix.c
index 062dca64b9..aaf6e7eb21 100644
--- a/usr/src/uts/i86pc/io/apix/apix.c
+++ b/usr/src/uts/i86pc/io/apix/apix.c
@@ -27,7 +27,7 @@
  * All rights reserved.
  */
 /*
- * Copyright (c) 2013, Joyent, Inc.  All rights reserved.
+ * Copyright (c) 2017, Joyent, Inc.  All rights reserved.
  */
 
 /*
@@ -263,8 +263,11 @@ apix_probe()
 		/* check if x2APIC mode is supported */
 		if ((apix_supported_hw & APIX_SUPPORT_X2APIC) ==
 		    APIX_SUPPORT_X2APIC) {
-			if (!((apic_local_mode() == LOCAL_X2APIC) ||
-			    apic_detect_x2apic())) {
+			if (apic_local_mode() == LOCAL_X2APIC) {
+				/* x2APIC mode activated by BIOS, switch ops */
+				apic_mode = LOCAL_X2APIC;
+				apic_change_ops();
+			} else if (!apic_detect_x2apic()) {
 				/* x2APIC mode is not supported in the hw */
 				apix_enable = 0;
 			}
diff --git a/usr/src/uts/i86pc/io/pcplusmp/apic.c b/usr/src/uts/i86pc/io/pcplusmp/apic.c
index d65e4db941..cd06f76967 100644
--- a/usr/src/uts/i86pc/io/pcplusmp/apic.c
+++ b/usr/src/uts/i86pc/io/pcplusmp/apic.c
@@ -27,7 +27,7 @@
  * All rights reserved.
  */
 /*
- * Copyright (c) 2013, Joyent, Inc.  All rights reserved.
+ * Copyright (c) 2017, Joyent, Inc.  All rights reserved.
  */
 
 /*
@@ -248,8 +248,16 @@ apic_probe(void)
 	/* check if apix is initialized */
 	if (apix_enable && apix_loaded())
 		return (PSM_FAILURE);
-	else
-		apix_enable = 0; /* continue using pcplusmp PSM */
+
+	/*
+	 * Check whether x2APIC mode was activated by BIOS. We don't support
+	 * that in pcplusmp as apix normally handles that.
+	 */
+	if (apic_local_mode() == LOCAL_X2APIC)
+		return (PSM_FAILURE);
+
+	/* continue using pcplusmp PSM */
+	apix_enable = 0;
 
 	return (apic_probe_common(apic_psm_info.p_mach_idstring));
 }
-- 
2.21.0

