commit 5fa970d2c434011d4d0dc3ed59008265e62398f0 (refs/changes/83/2583/1)
Author: Tim Kordas <tim.kordas@joyent.com>
Date:   2017-09-15T10:48:21-07:00 (2 years, 1 month ago)
    
    OS-6348 Reconcile module unloadability with module stub.

diff --git a/usr/src/uts/common/fs/nfs/nfs_server.c b/usr/src/uts/common/fs/nfs/nfs_server.c
index c6ae29d220..9ee6171b9c 100644
--- a/usr/src/uts/common/fs/nfs/nfs_server.c
+++ b/usr/src/uts/common/fs/nfs/nfs_server.c
@@ -155,12 +155,6 @@ _init(void)
 	return (status);
 }
 
-int
-_fini()
-{
-	return (EBUSY);
-}
-
 int
 _info(struct modinfo *modinfop)
 {
diff --git a/usr/src/uts/common/os/shm.c b/usr/src/uts/common/os/shm.c
index 5deae96d73..f8e4b9f536 100644
--- a/usr/src/uts/common/os/shm.c
+++ b/usr/src/uts/common/os/shm.c
@@ -236,12 +236,6 @@ _init(void)
 	return (result);
 }
 
-int
-_fini(void)
-{
-	return (EBUSY);
-}
-
 int
 _info(struct modinfo *modinfop)
 {
diff --git a/usr/src/uts/intel/ia32/ml/modstubs.s b/usr/src/uts/intel/ia32/ml/modstubs.s
index 4eb46059a9..7d38a09eb5 100644
--- a/usr/src/uts/intel/ia32/ml/modstubs.s
+++ b/usr/src/uts/intel/ia32/ml/modstubs.s
@@ -579,11 +579,11 @@ fcnname/**/_info:							\
  */
 #ifndef NFSSRV_MODULE
 	MODULE(nfssrv,misc);
-	STUB(nfssrv,		exportfs,	nomod_minus_one);
-	STUB(nfssrv,		nfs_getfh,	nomod_minus_one);
-	STUB(nfssrv,		nfsl_flush,	nomod_minus_one);
-	STUB(nfssrv,		rfs4_check_delegated, nomod_zero);
-	STUB(nfssrv,		mountd_args,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	exportfs,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	nfs_getfh,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	nfsl_flush,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	rfs4_check_delegated, nomod_zero);
+	NO_UNLOAD_STUB(nfssrv,	mountd_args,	nomod_minus_one);
 	NO_UNLOAD_STUB(nfssrv,	rdma_start,	nomod_zero);
 	NO_UNLOAD_STUB(nfssrv,	nfs_svc,	nomod_zero);
 	END_MODULE(nfssrv);
@@ -724,9 +724,9 @@ fcnname/**/_info:							\
  */
 #ifndef FIFO_MODULE
 	MODULE(fifofs,fs);
-	STUB(fifofs, fifovp,      	0);
-	STUB(fifofs, fifo_getinfo,	0);
-	STUB(fifofs, fifo_vfastoff,	0);
+	NO_UNLOAD_STUB(fifofs, fifovp,      	nomod_zero);
+	NO_UNLOAD_STUB(fifofs, fifo_getinfo,	nomod_zero);
+	NO_UNLOAD_STUB(fifofs, fifo_vfastoff,	nomod_zero);
 	END_MODULE(fifofs);
 #endif
 
@@ -891,9 +891,9 @@ fcnname/**/_info:							\
  */
 #ifndef SHMSYS_MODULE
 	MODULE(shmsys,sys);
-	WSTUB(shmsys, shmexit,		nomod_zero);
-	WSTUB(shmsys, shmfork,		nomod_zero);
-	WSTUB(shmsys, shmgetid,		nomod_minus_one);
+	NO_UNLOAD_STUB(shmsys, shmexit,	nomod_zero);
+	NO_UNLOAD_STUB(shmsys, shmfork,	nomod_zero);
+	NO_UNLOAD_STUB(shmsys, shmgetid,nomod_minus_one);
 	END_MODULE(shmsys);
 #endif
 
@@ -902,19 +902,19 @@ fcnname/**/_info:							\
  */
 #ifndef DOOR_MODULE
 	MODULE(doorfs,sys);
-	WSTUB(doorfs, door_slam,			nomod_zero);
-	WSTUB(doorfs, door_exit,			nomod_zero);
-	WSTUB(doorfs, door_revoke_all,			nomod_zero);
-	WSTUB(doorfs, door_fork,			nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_slam,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_exit,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_revoke_all,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_fork,		nomod_zero);
 	NO_UNLOAD_STUB(doorfs, door_upcall,		nomod_einval);
 	NO_UNLOAD_STUB(doorfs, door_ki_create,		nomod_einval);
 	NO_UNLOAD_STUB(doorfs, door_ki_open,		nomod_einval);
 	NO_UNLOAD_STUB(doorfs, door_ki_lookup,		nomod_zero);
-	WSTUB(doorfs, door_ki_upcall,			nomod_einval);
-	WSTUB(doorfs, door_ki_upcall_limited,		nomod_einval);
-	WSTUB(doorfs, door_ki_hold,			nomod_zero);
-	WSTUB(doorfs, door_ki_rele,			nomod_zero);
-	WSTUB(doorfs, door_ki_info,			nomod_einval);
+	NO_UNLOAD_STUB(doorfs, door_ki_upcall,		nomod_einval);
+	NO_UNLOAD_STUB(doorfs, door_ki_upcall_limited,	nomod_einval);
+	NO_UNLOAD_STUB(doorfs, door_ki_hold,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_ki_rele,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_ki_info,		nomod_einval);
 	END_MODULE(doorfs);
 #endif
 
diff --git a/usr/src/uts/sparc/ml/modstubs.s b/usr/src/uts/sparc/ml/modstubs.s
index 658ba929d2..2e028e41e4 100644
--- a/usr/src/uts/sparc/ml/modstubs.s
+++ b/usr/src/uts/sparc/ml/modstubs.s
@@ -464,11 +464,11 @@ stubs_base:
  */
 #ifndef NFSSRV_MODULE
 	MODULE(nfssrv,misc);
-	STUB(nfssrv,		exportfs,	nomod_minus_one);
-	STUB(nfssrv,		nfs_getfh,	nomod_minus_one);
-	STUB(nfssrv,		nfsl_flush,	nomod_minus_one);
-	STUB(nfssrv,		rfs4_check_delegated, nomod_zero);
-	STUB(nfssrv,		mountd_args,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	exportfs,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	nfs_getfh,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	nfsl_flush,	nomod_minus_one);
+	NO_UNLOAD_STUB(nfssrv,	rfs4_check_delegated, nomod_zero);
+	NO_UNLOAD_STUB(nfssrv,	mountd_args,	nomod_minus_one);
 	NO_UNLOAD_STUB(nfssrv,	rdma_start,	nomod_zero);
 	NO_UNLOAD_STUB(nfssrv,	nfs_svc,	nomod_zero);
 	END_MODULE(nfssrv);
@@ -609,9 +609,9 @@ stubs_base:
  */
 #ifndef FIFO_MODULE
 	MODULE(fifofs,fs);
-	STUB(fifofs, fifovp,      	0);
-	STUB(fifofs, fifo_getinfo,	0);
-	STUB(fifofs, fifo_vfastoff,	0);
+	NO_UNLOAD_STUB(fifofs, fifovp,      	nomod_zero);
+	NO_UNLOAD_STUB(fifofs, fifo_getinfo,	nomod_zero);
+	NO_UNLOAD_STUB(fifofs, fifo_vfastoff,	nomod_zero);
 	END_MODULE(fifofs);
 #endif
 
@@ -806,9 +806,9 @@ stubs_base:
  */
 #ifndef SHMSYS_MODULE
 	MODULE(shmsys,sys);
-	WSTUB(shmsys, shmexit,		nomod_zero);
-	WSTUB(shmsys, shmfork,		nomod_zero);
-	WSTUB(shmsys, shmgetid,		nomod_minus_one);
+	NO_UNLOAD_STUB(shmsys, shmexit,	nomod_zero);
+	NO_UNLOAD_STUB(shmsys, shmfork,	nomod_zero);
+	NO_UNLOAD_STUB(shmsys, shmgetid,nomod_minus_one);
 	END_MODULE(shmsys);
 #endif
 
@@ -817,19 +817,19 @@ stubs_base:
  */
 #ifndef DOORFS_MODULE
 	MODULE(doorfs,sys);
-	WSTUB(doorfs, door_slam,			nomod_zero);
-	WSTUB(doorfs, door_exit,			nomod_zero);
-	WSTUB(doorfs, door_revoke_all,			nomod_zero);
-	WSTUB(doorfs, door_fork,			nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_slam,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_exit,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_revoke_all,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_fork,		nomod_zero);
 	NO_UNLOAD_STUB(doorfs, door_upcall,		nomod_einval);
 	NO_UNLOAD_STUB(doorfs, door_ki_create,		nomod_einval);
 	NO_UNLOAD_STUB(doorfs, door_ki_open,		nomod_einval);
 	NO_UNLOAD_STUB(doorfs, door_ki_lookup,		nomod_zero);
-	WSTUB(doorfs, door_ki_upcall,			nomod_einval);
-	WSTUB(doorfs, door_ki_upcall_limited,		nomod_einval);
-	WSTUB(doorfs, door_ki_hold,			nomod_zero);
-	WSTUB(doorfs, door_ki_rele,			nomod_zero);
-	WSTUB(doorfs, door_ki_info,			nomod_einval);
+	NO_UNLOAD_STUB(doorfs, door_ki_upcall,		nomod_einval);
+	NO_UNLOAD_STUB(doorfs, door_ki_upcall_limited,	nomod_einval);
+	NO_UNLOAD_STUB(doorfs, door_ki_hold,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_ki_rele,		nomod_zero);
+	NO_UNLOAD_STUB(doorfs, door_ki_info,		nomod_einval);
 	END_MODULE(doorfs);
 #endif
 
