From 45b3d1e168da5314efedabff042f560bb7a29e3b Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Mon, 20 Feb 2017 19:47:43 +0100
Subject: [PATCH] TOOLS-1682 `sdcadm create -s SERVER ...` should support
 server hostname

---
 lib/cli/do_create.js | 22 +++++++++++++++++++++-
 lib/sdcadm.js        | 20 +++++++++++++++-----
 2 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/lib/cli/do_create.js b/lib/cli/do_create.js
index 4aa3f85..5b517e6 100644
--- a/lib/cli/do_create.js
+++ b/lib/cli/do_create.js
@@ -9,6 +9,7 @@
  */
 
 var p = console.log;
+var util = require('util');
 
 var assert = require('assert-plus');
 var vasync = require('vasync');
@@ -70,6 +71,25 @@ Create.prototype.execute = function cExecute(opts, args, cb) {
                 next(err);
             });
         },
+        function getServerFromHostname(_, next) {
+            if (!opts.server || common.UUID_RE.test(opts.server)) {
+                next();
+                return;
+            }
+            self.sdcadm.cnapi.listServers({
+                hostname: opts.server
+            }, function (err, servers) {
+                if (err || !servers.length) {
+                    self.sdcadm.log.error({err: err}, 'do_create');
+                    next(new errors.UsageError(util.format(
+                        'Cannot find server "%s"', opts.server)));
+                    return;
+                }
+                opts.server = servers[0].uuid;
+                next();
+            });
+
+        },
         function getChangeFromArgs(_, next) {
             if (args.length === 0) {
                 return next(new errors.UsageError(
@@ -93,7 +113,7 @@ Create.prototype.execute = function cExecute(opts, args, cb) {
 
             if (!opts.server) {
                 return next(new errors.UsageError(
-                    'Must specify server uuid'));
+                    'Must specify server uuid or hostname'));
             }
             change.server = opts.server;
             change.type = 'create-instance';
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 8387569..7364ce0 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -3641,7 +3641,11 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
                     checkMinPlatform(ch.instance, ch);
                 } else if (ch.type === 'create-instance') {
                     server = serverFromUuidOrHostname[ch.server];
-                    throw new Error('TODO');
+                    checkMinPlatform({
+                        instance: 'new',
+                        service: ch.service.name,
+                        server: ch.server
+                    }, ch);
                 }
             }
             if (errs.length) {
@@ -3657,7 +3661,7 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
             if (options.forceBypassMinImage) {
                 return next();
             }
-            var ch, server;
+            var ch;
             var errs = [];
 
             function checkMinImageBuidDate(ins) {
@@ -3710,9 +3714,15 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
                         checkMinImageBuidDate(ch.instance);
                     }
                 } else if (ch.type === 'create-instance') {
-                    server = serverFromUuidOrHostname[ch.server];
-                    console.log(server); // shut make check up about unused var
-                    throw new Error('TODO');
+                    if (self.config.svcMinImages[ch.service.name]) {
+                        checkMinImageBuidDate({
+                            instance: 'new',
+                            service: ch.service.name,
+                            server: ch.server,
+                            image: ch.image.uuid,
+                            version: ch.image.version
+                        });
+                    }
                 }
 
             }
-- 
2.21.0

