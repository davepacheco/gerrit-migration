commit 9f19ca771b8a7f6741e45e841cde0302ecefe57c (refs/changes/94/1594/6)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-03-08T00:07:43+00:00 (2 years, 7 months ago)
    
    joyent/node-manta#281 mfind NotFound errors should not be fatal
    joyent/node-manta#224 `mfind ... DIR1 NOSUCHDIR DIR2` errors with "NotFoundError" but doesn't specify which
    Reviewed by: David Pacheco <dap@joyent.com>
    Approved by: Cody Peter Mello <cody.mello@joyent.com>

diff --git a/CHANGES.md b/CHANGES.md
index 7164278..32abfe4 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -2,9 +2,15 @@
 
 ## not yet released
 
+## 4.2.0
+
+Minor bump due to relaxation of API requirements in `mfind` (NotFound
+errors are no longer fatal unless none of the arguments are found)
+
 - joyent/node-manta#230 Allow redirection of `mlogin` debug log output on
   `stderr`; e.g., `LOG_LEVEL=trace mlogin -v 2> >(bunyan -o short)`.
 - joyent/node-manta#298 mjob-simple fails because of GNU date regression
+- joyent/node-manta#281 mfind NotFound errors should not be fatal
 
 ## 4.1.1
 
diff --git a/bin/mfind b/bin/mfind
index 3a9b602..a1c691b 100755
--- a/bin/mfind
+++ b/bin/mfind
@@ -88,12 +88,9 @@ var TOTAL_ENTRIES = 0;
 
 ///--- Functions
 
-function ifError(err) {
-    if (err) {
-        console.error('mfind: ' +
-                      (process.env.DEBUG === '1' ? err.stack : err.toString()));
-        process.exit(1);
-    }
+function printError(epath, err) {
+    console.error('mfind: in ' + epath + ': ' +
+                  (process.env.DEBUG === '1' ? err.stack : err.toString()));
 }
 
 
@@ -134,7 +131,8 @@ function printEntry(opts, obj) {
     } else {
         console.log(obj.parent + (obj.name ? ('/' + obj.name) : ''));
     }
-    if (opts.limit && (++TOTAL_ENTRIES >= opts.limit)) {
+    ++TOTAL_ENTRIES;
+    if (opts.limit && TOTAL_ENTRIES >= opts.limit) {
         process.exit(0);
     }
 }
@@ -148,8 +146,14 @@ function printEntry(opts, obj) {
     var options = parseOptions();
     var client = manta.createBinClient(options);
     var print = printEntry.bind(null, options);
+    var lastError;
 
-    barrier.once('drain', client.close.bind(client));
+    barrier.once('drain', function () {
+        client.close();
+        if (lastError !== undefined) {
+            process.exit(1);
+        }
+    });
 
     options.paths.forEach(function (p) {
         barrier.start(p);
@@ -161,8 +165,19 @@ function printEntry(opts, obj) {
                     print(err.info);
                     barrier.done(p);
                     return;
+                } else if (err.name === 'NotFoundError') {
+                    if (err.path === undefined)
+                        err.path = p;
+                    printError(err.path, err);
+                    lastError = err;
+                    barrier.done(p);
+                    return;
                 } else {
-                    ifError(err);
+                    var epath = p;
+                    if (err.path !== undefined)
+                        epath = err.path;
+                    printError(epath, err);
+                    process.exit(1);
                 }
             }
 
diff --git a/lib/client.js b/lib/client.js
index 8de4b24..fa1e730 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -999,6 +999,7 @@ MantaClient.prototype.ftw = function ftw(p, opts, cb) {
             worker: function (_opts, _cb) {
                 self.ls(_opts.path, options, function (err, ls_res) {
                     if (err) {
+                        err.path = _opts.path;
                         _cb(err);
                         return;
                     }
diff --git a/package.json b/package.json
index c36677e..ae4a006 100644
--- a/package.json
+++ b/package.json
@@ -7,7 +7,7 @@
         "type": "git",
         "url": "git://github.com/joyent/node-manta.git"
     },
-    "version": "4.1.1",
+    "version": "4.2.0",
     "main": "./lib/index.js",
     "dependencies": {
         "assert-plus": "^1.0.0",
diff --git a/test/mfind.test.js b/test/mfind.test.js
index f5e2f4c..bc77413 100644
--- a/test/mfind.test.js
+++ b/test/mfind.test.js
@@ -27,6 +27,7 @@ var MMKDIR = path.resolve(BINDIR, 'mmkdir');
 var MPUT = path.resolve(BINDIR, 'mput');
 var MRM = path.resolve(BINDIR, 'mrm');
 
+var OPER;
 var TESTDIR = format('/%s/stor/node-manta-test-mfind-%s',
     process.env.MANTA_USER || 'admin',
     libuuid.v4().split('-')[0]);
@@ -96,6 +97,19 @@ test('setup: create test tree at ' + TESTDIR, function (t) {
     });
 });
 
+test('check if operator (mfind forbidden)', function (t) {
+    forkExecWait({
+        argv: [MFIND, '-t', 'd', '--maxdepth=1', '/poseidon/stor']
+    }, function (err, info) {
+        if (err) {
+            OPER = false;
+            t.ok(/Forbidden/m.test(info.stderr), 'Forbidden in stderr');
+        } else {
+            OPER = true;
+        }
+        t.done();
+    });
+});
 
 test('mfind TESTDIR', function (t) {
     forkExecWait({
@@ -145,6 +159,51 @@ test('mfind TESTDIR/afile.txt', function (t) {
     });
 });
 
+test('mfind TESTDIR/notafile.txt', function (t) {
+    forkExecWait({
+        argv: [MFIND, TESTDIR + '/notafile.txt']
+    }, function (err, info) {
+        t.ok(err);
+        t.equal(info.status, 1);
+        t.ok(/notafile\.txt/m.test(info.stderr), 'notafile.txt in stderr');
+        t.ok(/NotFound/m.test(info.stderr), 'NotFound in stderr');
+        t.done();
+    });
+});
+
+test('mfind TESTDIR/notafile.txt TESTDIR/afile.txt', function (t) {
+    forkExecWait({
+        argv: [MFIND, TESTDIR + '/notafile.txt', TESTDIR + '/afile.txt']
+    }, function (err, info) {
+        t.ok(err);
+        t.equal(info.status, 1);
+        t.ok(/afile.txt$/m.test(info.stdout), 'afile.txt in stdout');
+        t.ok(/notafile\.txt/m.test(info.stderr), 'notafile.txt in stderr');
+        t.ok(/NotFound/m.test(info.stderr), 'NotFound in stderr');
+        t.done();
+    });
+});
+
+test('mfind /poseidon/stor TESTDIR/afile.txt', function (t) {
+    if (OPER === true) {
+        console.log('WARNING: skipping mfind forbidden test: user is an ' +
+            'operator');
+        t.done();
+        return;
+    }
+    forkExecWait({
+        argv: [MFIND, '-p', '1', '/poseidon/stor', TESTDIR + '/afile.txt']
+    }, function (err, info) {
+        t.ok(err);
+        t.equal(info.status, 1);
+        /* XXX: Flakey due to node-manta#300 (can't control parallelism) */
+        /* t.ok(!/afile.txt$/m.test(info.stdout), 'afile.txt in stdout'); */
+        t.ok(/poseidon\/stor/m.test(info.stderr), 'poseidon/stor in stderr');
+        t.ok(/Forbidden/m.test(info.stderr), 'Forbidden in stderr');
+        t.done();
+    });
+});
+
 test('cleanup: rm test tree ' + TESTDIR, function (t) {
     // Sanity checks that we don't `mrm -r` a non-test dir.
     assert.ok(TESTDIR);
