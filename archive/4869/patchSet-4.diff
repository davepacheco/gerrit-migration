commit f1ce8c7e68225455c97291777ae1ed575da37eff (refs/changes/69/4869/4)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2018-09-28T22:02:13+00:00 (1 year ago)
    
    MANTA-3962 allow use of aperture resource '*' or 'all'
    Reviewed by: David Pacheco <dap@joyent.com>
    Approved by: Joshua M. Clulow <jmc@joyent.com>

diff --git a/lib/client.js b/lib/client.js
index b5279dd..552fb8c 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -429,12 +429,25 @@ MahiClient.prototype.authorize = function authorize(opts) {
     var resourceTags = resource.roles;
     var owner = resource.owner;
     var activeRoles = opts.conditions.activeRoles;
+
+    /* The final context we will give to aperture. */
     var context = {
         action: opts.action,
-        conditions: opts.conditions
+        conditions: opts.conditions,
+        resource: ''
     };
-    var rules = [];
-    var roles = [];
+    /*
+     * The set of rules we will select from all the relevant policy and
+     * pass to aperture for evaluation.
+     */
+    var rulesToEvaluate = [];
+    /*
+     * List of roles that we selected rules from. We track this in order
+     * to return the correct error code (no roles were used vs. roles were
+     * used but they had no rules on them).
+     */
+    var matchingRoles = [];
+
     var i;
 
     /*
@@ -463,10 +476,12 @@ MahiClient.prototype.authorize = function authorize(opts) {
     }
 
     /*
-     * Mahi only uses the "action" and "conditions" parts of the aperture
-     * language. We enforce "principal" and "resource" checks by comparing the
-     * resource role tags with the roles the user has active and is allowed to
-     * access.
+     * Mahi mainly uses the "action" and "conditions" parts of the aperture
+     * language -- we enforce "principal" constraints by limiting the list of
+     * roles we consider here based on membership, and "resource" constraints
+     * in one of two ways: by using the resource role tags (stored with the
+     * resource itself); or by using the regular resource evaluator only if
+     * the "resource" part of the rule was explicitly set to '*' or 'all'.
      */
     for (i = 0; i < activeRoles.length; ++i) {
         // check if the principal is allowed to assume the role
@@ -475,6 +490,14 @@ MahiClient.prototype.authorize = function authorize(opts) {
             throw new errors.InvalidRoleError(activeRoles[i]);
         }
 
+        /*
+         * Aperture parser sets .resources to the Number 1 if '*' or 'all' was
+         * given as the target.
+         */
+        var rulesWithAll = role.rules.filter(function (rule) {
+            return (rule[1].resources === 1);
+        });
+
         /*
          * Having the "administrator" role on a given account means you can do
          * anything to objects owned by that account.
@@ -502,25 +525,33 @@ MahiClient.prototype.authorize = function authorize(opts) {
 
         } else if (resourceTags.indexOf(activeRoles[i]) >= 0) {
             /* Ordinary non-admin roles are processed below. */
-            roles.push(activeRoles[i]);
+            matchingRoles.push(activeRoles[i]);
+            role.rules.forEach(function (rule) {
+                rulesToEvaluate.push(rule[1]);
+            });
+
+        } else if (rulesWithAll.length > 0) {
+            matchingRoles.push(activeRoles[i]);
+            /*
+             * Only push the rules that have the * resource. If we push any
+             * others, they will end up applying even though there's no role
+             * tag!
+             */
+            rulesWithAll.forEach(function (rule) {
+                rulesToEvaluate.push(rule[1]);
+            });
         }
     }
 
-    if (!roles.length) {
+    if (!matchingRoles.length) {
         throw new errors.NoMatchingRoleTagError();
     }
 
-    roles.forEach(function (thisRole) {
-        principal.roles[thisRole].rules.forEach(function (rule) {
-            rules.push(rule[1]);
-        });
-    });
-
-    if (!rules.length) {
+    if (!rulesToEvaluate.length) {
         throw new errors.RulesEvaluationFailedError();
     }
 
-    var ok = evaluator.evaluate(rules, context);
+    var ok = evaluator.evaluate(rulesToEvaluate, context);
     if (!ok) {
         throw new errors.RulesEvaluationFailedError();
     }
diff --git a/package.json b/package.json
index 9f863ff..6c1569d 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "mahi",
     "description": "Mahi client",
-    "version": "2.1.0",
+    "version": "2.2.0",
     "author": "Joyent (joyent.com)",
     "main": "index.js",
     "dependencies": {
