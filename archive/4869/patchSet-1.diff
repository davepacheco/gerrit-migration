commit cc4ce9d52f9a1ec45f657268b741cea0929b8bb4 (refs/changes/69/4869/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2018-09-24T16:56:43-07:00 (1 year ago)
    
    MANTA-3962 allow use of aperture resource '*' or 'all'

diff --git a/lib/client.js b/lib/client.js
index b5279dd..26f03e0 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -431,7 +431,8 @@ MahiClient.prototype.authorize = function authorize(opts) {
     var activeRoles = opts.conditions.activeRoles;
     var context = {
         action: opts.action,
-        conditions: opts.conditions
+        conditions: opts.conditions,
+        resource: ''
     };
     var rules = [];
     var roles = [];
@@ -463,10 +464,12 @@ MahiClient.prototype.authorize = function authorize(opts) {
     }
 
     /*
-     * Mahi only uses the "action" and "conditions" parts of the aperture
-     * language. We enforce "principal" and "resource" checks by comparing the
-     * resource role tags with the roles the user has active and is allowed to
-     * access.
+     * Mahi mainly uses the "action" and "conditions" parts of the aperture
+     * language -- we enforce "principal" constraints by limiting the list of
+     * roles we consider here based on membership, and "resource" constraints
+     * in one of two ways: by using the resource role tags (stored with the
+     * resource itself); or by using the regular resource evaluator only if
+     * the "resource" part of the rule was explicitly set to '*' or 'all'.
      */
     for (i = 0; i < activeRoles.length; ++i) {
         // check if the principal is allowed to assume the role
@@ -475,6 +478,14 @@ MahiClient.prototype.authorize = function authorize(opts) {
             throw new errors.InvalidRoleError(activeRoles[i]);
         }
 
+        /*
+         * Aperture parser sets .resources to the Number 1 if '*' or 'all' was
+         * given as the target.
+         */
+        var rulesWithAll = role.rules.filter(function (rule) {
+            return (rule[1].resources === 1);
+        });
+
         /*
          * Having the "administrator" role on a given account means you can do
          * anything to objects owned by that account.
@@ -503,6 +514,9 @@ MahiClient.prototype.authorize = function authorize(opts) {
         } else if (resourceTags.indexOf(activeRoles[i]) >= 0) {
             /* Ordinary non-admin roles are processed below. */
             roles.push(activeRoles[i]);
+
+        } else if (rulesWithAll.length > 0) {
+            roles.push(activeRoles[i]);
         }
     }
 
diff --git a/package.json b/package.json
index 9f863ff..6c1569d 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "mahi",
     "description": "Mahi client",
-    "version": "2.1.0",
+    "version": "2.2.0",
     "author": "Joyent (joyent.com)",
     "main": "index.js",
     "dependencies": {
