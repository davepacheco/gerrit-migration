From 24c965828daed7cd2d1de4d6cde6ff85c13e89f1 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Thu, 20 Jul 2017 15:29:27 -0700
Subject: [PATCH] PUBAPI-1419 error messages to clients during authentication
 should be less specific Reviewed by: Trent Mick <trent.mick@joyent.com>
 Approved by: Trent Mick <trent.mick@joyent.com>

---
 lib/auth.js | 30 +++++++++++++++++++-----------
 1 file changed, 19 insertions(+), 11 deletions(-)

diff --git a/lib/auth.js b/lib/auth.js
index 88ba0fa..24a64c6 100644
--- a/lib/auth.js
+++ b/lib/auth.js
@@ -75,19 +75,17 @@ var SIGN_ALGOS = {
 ///--- Messages
 
 var ACCOUNT_DISABLED = 'Account or user is disabled';
-var BACKEND_ERR = 'Unexpected error fetching account';
+var BACKEND_ERR = 'Internal error occurred while validating account';
 var DEF_401 = 'You must make authenticated requests to use CloudAPI';
 var FORBIDDEN = 'You do not have permission to access %s';
-var INVALID_ERR = 'Invalid %s %s';
 var INVALID_AUTHZ = 'Invalid authorization header';
+var INVALID_CREDS = 'Invalid authorization credentials supplied';
 var INVALID_KEY = 'Invalid KeyId %s in authorization header';
-var INVALID_SIG = 'The signature we calculated does not match the one you sent';
 var INVALID_ALGO = '%s is not a supported signing algorithm';
 var INVALID_DEV = 'The token provided is not authorized for this application';
 var MISSING_CREDS = 'Missing credentials';
 var SCHEME_NOT_SUPPORTED = 'The authorization scheme you requested is ' +
     'not supported';
-var USER_404 = 'User %s does not exist';
 
 
 
@@ -106,6 +104,15 @@ function setAccountInfo(req, account, subuser) {
     req.username = account.login;
 }
 
+function ldapFilterEscape(str) {
+    return (str.replace(/[*()\\\x00]/g, function (ch) {
+        var n = ch.charCodeAt(0).toString(16).toUpperCase();
+        while (n.length < 2) {
+            n = '0' + n;
+        }
+        return ('\\' + n);
+    }));
+}
 
 /*
  * Check whether the incoming HTTP request uses http-signature-auth
@@ -186,7 +193,7 @@ function signatureAuth(req, res, next) {
                     log.trace({err: err}, 'UFDS.getUser error');
                 }
 
-                return cb(new InvalidCreds(INVALID_ERR, 'account', login));
+                return cb(new InvalidCreds(INVALID_CREDS));
             }
             account = u;
             return cb(null);
@@ -196,10 +203,11 @@ function signatureAuth(req, res, next) {
     function getKey(_, cb) {
         var a = (subuser) ? account.uuid : null;
         var u = (subuser) ? subuser : account;
-        ufds.getKey(u, keyID, a, function (err, k) {
+        var id = ldapFilterEscape(keyID);
+        ufds.getKey(u, id, a, function (err, k) {
             if (err) {
                 log.trace({err: err}, 'UFDS.getKey error');
-                return cb(new InvalidCreds(INVALID_ERR, 'key', keyID));
+                return cb(new InvalidCreds(INVALID_CREDS));
             }
 
             key = k;
@@ -216,7 +224,7 @@ function signatureAuth(req, res, next) {
                     log.trace({err: err}, 'UFDS.getUser error');
                 }
 
-                return cb(new InvalidCreds(INVALID_ERR, 'account', sublogin));
+                return cb(new InvalidCreds(INVALID_CREDS));
             }
             subuser = u;
             return cb(null);
@@ -235,12 +243,12 @@ function signatureAuth(req, res, next) {
             }
         } catch (err) {
             log.error({err: err}, 'verifySignature: exception');
-            return cb(new InvalidCreds(INVALID_SIG));
+            return cb(new InvalidCreds(INVALID_CREDS));
         }
 
         if (!signatureVerified) {
             log.debug({sig: sig, key: key.standard}, 'verifySignature: FAIL');
-            return cb(new InvalidCreds(INVALID_SIG));
+            return cb(new InvalidCreds(INVALID_CREDS));
         }
         return cb(null);
     }
@@ -380,7 +388,7 @@ function tokenAuth(req, res, next) {
         return req.sdc.keyapi.detoken(token, setCreds);
     } catch (e) {
         log.error('Error calling keyapi: ' + e.stack);
-        return next(new InvalidCredentialsError(INVALID_SIG));
+        return next(new InvalidCredentialsError(INVALID_CREDS));
     }
 }
 
-- 
2.21.0

