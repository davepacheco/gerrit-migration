From b78c05d8a2bca73cddd854da972935f98a749959 Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Tue, 7 May 2019 21:58:42 -0700
Subject: [PATCH] TRITON-1240 fwapi "runtests" should be able to run some tests
 against a single server

---
 ...{gen-multi-test-config => gen-test-config} | 13 ++++--
 test/integration/provision.multi-test.js      | 31 ++++++-------
 test/integration/vm-update.multi-test.js      | 27 +++++++-----
 test/runtests                                 | 44 ++++++++-----------
 tools/jsl.node.conf                           |  1 +
 5 files changed, 60 insertions(+), 56 deletions(-)
 rename test/bin/{gen-multi-test-config => gen-test-config} (91%)

diff --git a/test/bin/gen-multi-test-config b/test/bin/gen-test-config
similarity index 91%
rename from test/bin/gen-multi-test-config
rename to test/bin/gen-test-config
index 064a8f9..3f669e0 100755
--- a/test/bin/gen-multi-test-config
+++ b/test/bin/gen-test-config
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright 2016, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 #
@@ -26,10 +26,15 @@ set -o pipefail
 
 function fatal
 {
-    echo "$(basename $0): fatal error: $*"
+    echo "$(basename $0): fatal error: $*" >&2
     exit 1
 }
 
+function warn
+{
+    echo "$(basename $0): warn: $*" >&2
+}
+
 #---- main
 
 dir=$(unset CDPATH; cd $(dirname $0); pwd)
@@ -49,7 +54,7 @@ image_uuid=$(curl -sS ${imgapi_url}/images'?name=sdc-smartos' | json 0.uuid)
 billing_id=$(curl -sS ${papi_url}/packages'?name=sample-128M' | json 0.uuid)
 [[ -z ${billing_id} ]] && fatal "Could not find a package named sample-128M in PAPI"
 
-# Find two appropriate servers on which we can provision test VMs.
+# Find two appropriate servers on which we can provision test VMs, if we can.
 # - list setup servers
 # - exclude "Virtual" servers, or Mock CNs from mockcloud because firewaller
 #   isn't (at least currently) running there
@@ -62,7 +67,7 @@ servers=( $(curl -sS "${cnapi_url}/servers?extras=sysinfo&setup=true" \
     | sort -rk3 | awk '$2 ~ /true/ { print $1 }' | head -n 2) )
 
 [[ -z ${servers[0]} ]] && fatal "Could not get server1 from CNAPI"
-[[ -z ${servers[1]} ]] && fatal "Could not get server2 from CNAPI"
+[[ -z ${servers[1]} ]] && warn "Could not get server2 from CNAPI"
 
 ${dir}/add-test-user
 
diff --git a/test/integration/provision.multi-test.js b/test/integration/provision.multi-test.js
index b01df79..441b97b 100644
--- a/test/integration/provision.multi-test.js
+++ b/test/integration/provision.multi-test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -26,6 +26,9 @@ var util = require('util');
 // --- Globals
 
 
+var OPTS = {
+    skip: !config.test.server2_uuid
+};
 
 var OWNERS = [ config.test.owner_uuid ];
 var RULES = {};
@@ -41,6 +44,9 @@ var VMS = [];
 
 // --- Setup
 
+if (OPTS.skip) {
+    console.log('# SKIP %s tests (no server2_uuid)', __filename);
+}
 
 function pre_test(t) {
     config.haveTestVars(
@@ -71,8 +77,8 @@ function checkVMsProvisioned(callback) {
  * Add a couple 'FROM any to tag' rules: these explicitly do not reference
  * other VMs, because they allow traffic from 'any'
  */
-test('pre_test', pre_test);
-test('Add rules', function (t) {
+test('pre_test', OPTS, pre_test);
+test('Add rules', OPTS, function (t) {
     t.test('allow SSH', function (t2) {
         RULES.ssh = {
             description: 'allow SSH',
@@ -105,8 +111,7 @@ test('Add rules', function (t) {
 });
 
 
-test('pre_test', pre_test);
-test('Provision VMs', function (t) {
+test('Provision VMs', OPTS, function (t) {
     // Explicitly pick different servers for these VMs, since this is ting
     // that remote VMs get added to other servers.
     var vms = [
@@ -155,8 +160,8 @@ var group_pre_test = function (t) {
     });
 };
 
-test('pre_test', pre_test);
-test('After provision: rules', function (t) {
+test('pre_test', OPTS, pre_test);
+test('After provision: rules', OPTS, function (t) {
 
     // CN 0 (with VM 0): should have the DNS rule but not the SSH rule
     group_pre_test(t);
@@ -215,8 +220,7 @@ test('After provision: rules', function (t) {
 /*
  * Add a disabled rule
  */
-test('pre_test', pre_test);
-test('Add disabled rule', function (t) {
+test('Add disabled rule', OPTS, function (t) {
 
     group_pre_test(t);
     t.test('add', function (t2) {
@@ -285,8 +289,7 @@ test('Add disabled rule', function (t) {
 });
 
 
-test('pre_test', pre_test);
-test('Enable rule', function (t) {
+test('Enable rule', OPTS, function (t) {
 
     group_pre_test(t);
     t.test('enable', function (t2) {
@@ -378,8 +381,7 @@ test('Enable rule', function (t) {
 /*
  * Add a VM -> VM rule
  */
-test('pre_test', pre_test);
-test('Add VMs rule', function (t) {
+test('Add VMs rule', OPTS, function (t) {
 
     group_pre_test(t);
     t.test('add', function (t2) {
@@ -444,8 +446,7 @@ test('Add VMs rule', function (t) {
 // --- Teardown
 
 
-
-test('teardown', function (t) {
+test('teardown', OPTS, function (t) {
     t.test('delete rules', function (t2) {
         mod_rule.delAllCreated(t2);
     });
diff --git a/test/integration/vm-update.multi-test.js b/test/integration/vm-update.multi-test.js
index 5741018..414ecfa 100644
--- a/test/integration/vm-update.multi-test.js
+++ b/test/integration/vm-update.multi-test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -26,6 +26,9 @@ var util = require('util');
 // --- Globals
 
 
+var OPTS = {
+    skip: !config.test.server2_uuid
+};
 
 var OWNERS = [ config.test.owner_uuid ];
 var RULES = {};
@@ -41,7 +44,9 @@ var VMS = [];
 
 // --- Setup
 
-
+if (OPTS.skip) {
+    console.log('# SKIP %s tests (no server2_uuid)', __filename);
+}
 
 // Run before every test
 function pre_test(t) {
@@ -69,8 +74,8 @@ function checkVMsProvisioned(t2) {
 
 
 
-test('pre_test', pre_test);
-test('Add rules', function (t) {
+test('pre_test', OPTS, pre_test);
+test('Add rules', OPTS, function (t) {
     t.test('VM 0 to VM 1: SSH', function (t2) {
         RULES.ssh1 = {
             description: 'allow SSH',
@@ -109,7 +114,7 @@ test('Add rules', function (t) {
 /**
  * Provision two VMs with firewalls disabled
  */
-test('Provision VMs', function (t) {
+test('Provision VMs', OPTS, function (t) {
     // Explicitly pick different servers for these VMs, since this is ting
     // that remote VMs get added to other servers.
     var vms = [
@@ -161,7 +166,7 @@ var group_pre_test = function (t) {
  * Since both VMs have firewalls disabled, no rules or RVMs should have
  * been synced to either CN.
  */
-test('After provision: rules', function (t) {
+test('After provision: rules', OPTS, function (t) {
 
     // Since both VMs have their firewalls disabled, neither should have
     // the rule present.
@@ -229,7 +234,7 @@ test('After provision: rules', function (t) {
  * Enable VM 1's firewall. This should cause RVM 0 and the SSH rule to be
  * synced to VM1's CN.
  */
-test('Enable firewall', function (t) {
+test('Enable firewall', OPTS, function (t) {
 
     t.test('update VM', function (t2) {
         mod_vm.update(t2, {
@@ -291,7 +296,7 @@ test('Enable firewall', function (t) {
 });
 
 
-test('Remove "web" tag from VM 2', function (t) {
+test('Remove "web" tag from VM 2', OPTS, function (t) {
 
     t.test('update VM', function (t2) {
         mod_vm.removeTag(t2, {
@@ -326,7 +331,7 @@ test('Remove "web" tag from VM 2', function (t) {
 });
 
 
-test('Add back "web" tag to VM 2', function (t) {
+test('Add back "web" tag to VM 2', OPTS, function (t) {
 
     t.test('update VM', function (t2) {
         VMS[2].tags[TAGS.web] = '4';
@@ -348,7 +353,7 @@ test('Add back "web" tag to VM 2', function (t) {
 });
 
 
-test('Change value of "role" tag on VM 0', function (t) {
+test('Change value of "role" tag on VM 0', OPTS, function (t) {
 
     t.test('update VM', function (t2) {
         VMS[0].tags[TAGS.role] = 'three';
@@ -389,7 +394,7 @@ test('Change value of "role" tag on VM 0', function (t) {
 
 
 
-test('teardown', function (t) {
+test('teardown', OPTS, function (t) {
     t.test('delete rules', mod_rule.delAllCreated);
     t.test('delete VMs', mod_vm.delAllCreated);
     t.end();
diff --git a/test/runtests b/test/runtests
index 219a7a6..751d535 100755
--- a/test/runtests
+++ b/test/runtests
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright 2016, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 #
@@ -104,36 +104,28 @@ mkdir -p /$OUTPUT_DIR
 
 cd $TOP
 
+# Generate the test config, if necessary.
+vmapi_url=$(json -f /opt/smartdc/fwapi/config.json vmapi.url)
+cnapi_url=${vmapi_url//vmapi/cnapi}
+if [[ ! -f /opt/smartdc/fwapi/test/config.json ]]; then
+    /opt/smartdc/fwapi/test/bin/gen-test-config
+fi
+[[ ! -f /opt/smartdc/fwapi/test/config.json ]] \
+    && fatal "Could not generate multi-server test config"
+
 # Run the integration tests
-multi_test_files=
-test_files=$(ls -1 test/integration/*.test.js)
+test_files=$(ls -1 test/integration/*.test.js test/integration/*.multi-test.js)
 if [[ -n "$opt_test_pattern" ]]; then
     test_files=$(echo "$test_files" | grep "$opt_test_pattern" || true)
     echo "# Running filtered set of test files: $test_files"
 fi
 
-vmapi_url=$(json -f /opt/smartdc/fwapi/config.json vmapi.url)
-cnapi_url=${vmapi_url//vmapi/cnapi}
-
-num_servers=$(curl -sS ${cnapi_url}/servers | json -a uuid setup | grep true | wc -l)
-if [[ ${num_servers} -gt 1 ]]; then
-    echo "# More than 1 server: running multi-server tests"
-    multi_test_files=$(ls -1 test/integration/*.multi-test.js)
-
-    if [[ ! -f /opt/smartdc/fwapi/test/config.json ]]; then
-        # No test config present - generate it
-        /opt/smartdc/fwapi/test/bin/gen-multi-test-config
-    fi
-
-    [[ ! -f /opt/smartdc/fwapi/test/config.json ]] && fatal "Could not generate multi-server test config"
-fi
-
 echo ""
 set +o errexit
 
 test_failed=
 
-for file in $test_files $multi_test_files; do
+for file in $test_files; do
     test_file=$(basename $file)
     echo "# $test_file"
 
@@ -143,12 +135,12 @@ for file in $test_files $multi_test_files; do
     # If a test program crashes, ensure that this
     # script exits non-zero.
     if [[ "$?" != "0" ]]; then
-       if [[ -n "$opt_stop_on_failure" ]]; then
-           break
-       else
-           test_failed="true"
-       fi
-   fi
+        if [[ -n "$opt_stop_on_failure" ]]; then
+            break
+        else
+            test_failed="true"
+        fi
+    fi
 done
 
 set -o errexit
diff --git a/tools/jsl.node.conf b/tools/jsl.node.conf
index b8354e4..88a847d 100644
--- a/tools/jsl.node.conf
+++ b/tools/jsl.node.conf
@@ -110,6 +110,7 @@
 #
 # Common uses for webpages might be:
 +define __dirname
++define __filename
 +define clearInterval
 +define clearTimeout
 +define console
-- 
2.21.0

