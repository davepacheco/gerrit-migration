{"project":"joyent/node-manta","branch":"master","id":"I17763ab9009f5633b76e1d6c079a722f0812ae93","number":"1207","subject":"MANTA-3071 mls reports no results, no error","owner":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"url":"https://cr.joyent.us/1207","commitMessage":"MANTA-3071 mls reports no results, no error\n","createdOn":1483572048,"lastUpdated":1570663373,"open":false,"status":"ABANDONED","comments":[{"timestamp":1483572048,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Uploaded patch set 1."},{"timestamp":1483572049,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\nNew commits:\n    \n    commit 2ba0b479844b0720c36052f281a663f772b3d2de\n    \n    use the lserror if that is all we have"},{"timestamp":1483572063,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\nThe test suite passes:\n\nOK: 273 assertions (57393ms)"},{"timestamp":1483572078,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1483573882,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1483573970,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\nAlso, what\u0027s the output now when the HEAD fails but the GET doesn\u0027t?"},{"timestamp":1483575074,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\nDave,\n\nIt looks like this:\n\n```\n[16:09:46 trentm@danger0:~/joy/node-manta (grr-MANTA-3071)]\n$ gd\ndiff --git a/bin/mls b/bin/mls\nindex 7e78ed8..21c7434 100755\n--- a/bin/mls\n+++ b/bin/mls\n@@ -205,6 +205,10 @@ function printEntry(opts, obj) {\n\n     options.paths.forEach(function (p) {\n         client.ls(p, options, function (lsErr, res) {\n+            // XXX\n+            var restifyErrors \u003d require(\u0027restify-clients/node_modules/restify-errors\u0027);\n+            lsErr \u003d new restifyErrors.ForbiddenError();\n+\n             if (lsErr) {\n                 if (lsErr.name \u003d\u003d\u003d \u0027InvalidDirectoryError\u0027) {\n                     printEntry(options, lsErr.info);\n[16:09:48 trentm@danger0:~/joy/node-manta (grr-MANTA-3071)]\n$ mls\nmls: ForbiddenError\n[16:09:53 trentm@danger0:~/joy/node-manta (grr-MANTA-3071)]\n$ echo $?\n1\n```"},{"timestamp":1483575345,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1483577405,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\nOther notes from chat:\n- I wonder if we should skip the get altogether and provide hardcoded strings based on the response code.  Or retry only errors \u003c 500, which are less likely to be transient (but still could be).\n- As you mention, if we keep doing the get, we probably ought to abort the stream if possible.  But I\u0027m not sure there\u0027s a way to do that.\n- It would be nice to fix up mrm and mrmdir, which were also affected by the change that introduced this.\n\nThanks for digging into all this."},{"timestamp":1483634380,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\n(1 comment)\n\nI want to look at an option to client.get for this use case: \"I just want an error, if any. If it isn\u0027t an error, then just close the stream and return."},{"timestamp":1483638677,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Uploaded patch set 2."},{"timestamp":1483638678,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 2:\n\nNew commits:\n    \n    commit 24eef3d6afcac0da9a6293d138efebf3cf43e6d8\n    \n    add returnErrorOnly option to client.get and use that"},{"timestamp":1483638703,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1486513215,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Uploaded patch set 3."},{"timestamp":1486513217,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 3:\n\nNew commits:\n    \n    commit 497c8ba2aca9f55e02a222bbfdc0aee22888bb4d\n    \n    add returnErrorOnly option to client.get and use that\n    \n    commit 370534fff3f39a16431c733545d8257e0c834fca\n    \n    use the lserror if that is all we have"},{"timestamp":1486513247,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1486773913,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Uploaded patch set 4: Patch Set 3 was rebased."},{"timestamp":1486773914,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 4:\n\nNew commits:\n    \n    commit b76d86d278bde597f3d4ad485ee24de7ff4b5dd0\n    \n    add returnErrorOnly option to client.get and use that\n    \n    commit 3ae4738eb3ea7591a5ff7a4a6a2dbb7deb6052c8\n    \n    use the lserror if that is all we have"},{"timestamp":1486773949,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4:\n\n\"make check\" passed ok"},{"timestamp":1487016265,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 4:\n\n(1 comment)"},{"timestamp":1570663373,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Abandoned\n\nhttps://github.com/joyent/node-manta/pull/366"}],"currentPatchSet":{"number":"4","revision":"17763ab9009f5633b76e1d6c079a722f0812ae93","parents":["98cec088c80378eb1ccd26aa617a02093ea10fa8"],"ref":"refs/changes/07/1207/4","uploader":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"createdOn":1486773913,"author":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1486513247,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"bin/mls","line":214,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"The \"returnErrorOnly\" flag feels like a band-aid.  Why would a client ever really do that?  That\u0027s what a HEAD is supposed to be.  I get why it isn\u0027t, but I\u0027m not sure it makes sense to expose this complexity (and put extra load on the server) in hopes that we get a better message, particularly given that we may still end up showing the same error we would have anyway, or even a different error than we really saw with the HEAD.  I\u0027d rather we just reported what we know: \"the server reported status code X [and we don\u0027t have more information than that]\".\n\nThat\u0027s just my take.  Maybe others feel differently?"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":2,"deletions":0},{"file":"bin/mls","type":"MODIFIED","insertions":16,"deletions":-5},{"file":"bin/mrm","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"bin/mrmdir","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"lib/client.js","type":"MODIFIED","insertions":13,"deletions":0}],"sizeInsertions":57,"sizeDeletions":-17},"patchSets":[{"number":"1","revision":"a1c56780dfd1d30b44d2638711aee85fb2828cdf","parents":["23cee39e13cf3f08bdff749b7a1e9720b23df564"],"ref":"refs/changes/07/1207/1","uploader":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"createdOn":1483572048,"author":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1483572078,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"bin/mls","line":222,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Does this potentially fetch an entire object?  What happens to that?"},{"file":"bin/mls","line":222,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"That\u0027s somewhat true. A successful client.get results in returning a stream... and I think client.get will start processing the stream right away in the nextTick. So perhaps it is better to explicitly end that."},{"file":"bin/mls","line":222,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"*Currently* mls will exit soon after with process.exit(1), which will mean we won\u0027t hang on a streaming file with the *current* code. However, we might eventually want to move to not calling process.exit directly because of stdout/stderr flushing behaviour in node v4+... so we should consider that."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":3,"deletions":0},{"file":"bin/mls","type":"MODIFIED","insertions":16,"deletions":-5}],"sizeInsertions":19,"sizeDeletions":-5},{"number":"2","revision":"db8c18065677aa0a3235fdc41efb18f2a5f0d367","parents":["23cee39e13cf3f08bdff749b7a1e9720b23df564"],"ref":"refs/changes/07/1207/2","uploader":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"createdOn":1483638677,"author":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1483638703,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":3,"deletions":0},{"file":"bin/mls","type":"MODIFIED","insertions":16,"deletions":-5},{"file":"bin/mrm","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"bin/mrmdir","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"lib/client.js","type":"MODIFIED","insertions":13,"deletions":0}],"sizeInsertions":58,"sizeDeletions":-17},{"number":"3","revision":"4aa3973a6549b981829845170fb964d7396ec80c","parents":["9827908c3bb1f3e8fb3c9fd7ab74679966821fc6"],"ref":"refs/changes/07/1207/3","uploader":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"createdOn":1486513215,"author":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1486513247,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":2,"deletions":0},{"file":"bin/mls","type":"MODIFIED","insertions":16,"deletions":-5},{"file":"bin/mrm","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"bin/mrmdir","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"lib/client.js","type":"MODIFIED","insertions":13,"deletions":0}],"sizeInsertions":57,"sizeDeletions":-17},{"number":"4","revision":"17763ab9009f5633b76e1d6c079a722f0812ae93","parents":["98cec088c80378eb1ccd26aa617a02093ea10fa8"],"ref":"refs/changes/07/1207/4","uploader":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"createdOn":1486773913,"author":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1486513247,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"bin/mls","line":214,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"The \"returnErrorOnly\" flag feels like a band-aid.  Why would a client ever really do that?  That\u0027s what a HEAD is supposed to be.  I get why it isn\u0027t, but I\u0027m not sure it makes sense to expose this complexity (and put extra load on the server) in hopes that we get a better message, particularly given that we may still end up showing the same error we would have anyway, or even a different error than we really saw with the HEAD.  I\u0027d rather we just reported what we know: \"the server reported status code X [and we don\u0027t have more information than that]\".\n\nThat\u0027s just my take.  Maybe others feel differently?"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":2,"deletions":0},{"file":"bin/mls","type":"MODIFIED","insertions":16,"deletions":-5},{"file":"bin/mrm","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"bin/mrmdir","type":"MODIFIED","insertions":13,"deletions":-6},{"file":"lib/client.js","type":"MODIFIED","insertions":13,"deletions":0}],"sizeInsertions":57,"sizeDeletions":-17}],"allReviewers":[{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},{"name":"Joyent Automation","username":"joyent-automation"}]}