commit 661a52cc5dfce06d9aaf5100b7f10f278da590b5 (refs/changes/99/599/1)
Author: Trent Mick <trentm@gmail.com>
Date:   2016-10-05T12:26:22-07:00 (3 years ago)
    
    WORKFLOW-212 get wf-client working with node v4, and publish versions to npm

diff --git a/CHANGES.md b/CHANGES.md
new file mode 100644
index 0000000..acb7faa
--- /dev/null
+++ b/CHANGES.md
@@ -0,0 +1,12 @@
+# sdc-wf-client changelog
+
+## not yet released
+
+## 0.2.0
+
+- Support for building against node v4 without build errors/warnings.
+
+
+## 0.1.1
+
+The version when this changelog was started.
diff --git a/Makefile b/Makefile
index f7b4e42..2082e7a 100644
--- a/Makefile
+++ b/Makefile
@@ -57,5 +57,32 @@ CLEAN_FILES += $(NODEUNIT) ./node_modules/tap
 test: $(NODEUNIT)
 	$(NODEUNIT) test/wf-client.test.js
 
+# Ensure CHANGES.md and package.json have the same version.
+.PHONY: versioncheck
+versioncheck:
+	@echo version is: $(shell cat package.json | json version)
+	[[ `cat package.json | json version` == `grep '^## ' CHANGES.md | head -2 | tail -1 | awk '{print $$2}'` ]]
+
+.PHONY: cutarelease
+cutarelease: versioncheck
+	[[ -z `git status --short` ]]  # If this fails, the working dir is dirty.
+	@which json 2>/dev/null 1>/dev/null && \
+	    ver=$(shell json -f package.json version) && \
+	    name=$(shell json -f package.json name) && \
+	    publishedVer=$(shell npm view -j $(shell json -f package.json name)@$(shell json -f package.json version) version 2>/dev/null) && \
+	    if [[ -n "$$publishedVer" ]]; then \
+		echo "error: $$name@$$ver is already published to npm"; \
+		exit 1; \
+	    fi && \
+	    echo "** Are you sure you want to tag and publish $$name@$$ver to npm?" && \
+	    echo "** Enter to continue, Ctrl+C to abort." && \
+	    read
+	ver=$(shell cat package.json | json version) && \
+	    date=$(shell date -u "+%Y-%m-%d") && \
+	    git tag -a "v$$ver" -m "version $$ver ($$date)" && \
+	    git push --tags origin && \
+	    npm publish
+
+
 include ./tools/mk/Makefile.deps
 include ./tools/mk/Makefile.targ
diff --git a/README.md b/README.md
index c185358..b81f459 100644
--- a/README.md
+++ b/README.md
@@ -1,48 +1,55 @@
-<!--
-    This Source Code Form is subject to the terms of the Mozilla Public
-    License, v. 2.0. If a copy of the MPL was not distributed with this
-    file, You can obtain one at http://mozilla.org/MPL/2.0/.
--->
-
-<!--
-    Copyright (c) 2014, Joyent, Inc.
--->
-
 # sdc-wf-client
 
-This library allows Workflow API clients to manage their own workflows and jobs.
-It is a simple abstraction of the SDC internal Workflow API.
+This repository is part of the Joyent Triton project. See the [contribution
+guidelines](https://github.com/joyent/triton/blob/master/CONTRIBUTING.md) --
+*Triton does not use GitHub PRs* -- and general documentation at the main
+[Triton project](https://github.com/joyent/triton) page.
 
-This repository is part of the Joyent SmartDataCenter project (SDC).  For
-contribution guidelines, issues, and general documentation, visit the main
-[SDC](http://github.com/joyent/sdc) project page.
+This is a Node.js client library for the Triton core Workflow API service.
 
-# Features
 
-* Load workflow files from disk into WFAPI
-* Find a workflow
-* Create jobs
-* Find jobs
+## Documentation
 
-The distinctive feature that this library provides is being able to drop in any
-workflow *compatible* javascript file that can be programatically loaded into
-WFAPI, so application developers can write their own custom workflows and use
-WfClient to create them with a single function call.
+See [the wf-client docs here](./docs/index.md).
 
-# Getting Started
 
-All you need to use (and test) WfClient is a running WFAPI instance. A sample
-unit test is provided for more information about how to load workflows and how
-to create jobs for them.
+## Testing
 
-    # To test, get the source.
-    git clone git@github.com:joyent/sdc-wf-client.git
-    cd wf-client/
     make test
 
-	# To use as a module, add the package to your package.json
-    ...
-        "wf-client": "git+ssh://git@github.com:joyent/sdc-wf-client.git",
-    ...
+Currently this assumes a Workflow API endpoint at <https://10.99.99.19>, the
+common IP for a [CoaL setup](https://github.com/joyent/triton#getting-started).
+To test a workflow API at a different IP run:
+
+    make test WORKFLOW_IP=...
+
+
+## Development
+
+Before commit, ensure that the following checks are clean:
+
+    make prepush
+
+Also see the note at the top that cr.joyent.us is used for code review for
+this repo.
+
+
+## Releases
+
+Changes with possible user impact should:
+
+1. Add a note to the changelog (CHANGES.md).
+2. Bump the version in package.json and CHANGES.md.
+3. Once merged to master, the new version should be tagged and published to npm
+   via:
+
+        make cutarelease
+
+   To list to npm accounts that have publish access:
+
+        npm owner ls wf-client
+
+The desire is that users of this package use published versions in their
+package.json `dependencies`, rather than depending on git shas.
+
 
-    npm install
diff --git a/lib/wf-client.js b/lib/wf-client.js
index 0abb888..0dff752 100644
--- a/lib/wf-client.js
+++ b/lib/wf-client.js
@@ -5,20 +5,15 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
-/*
- * A brief overview of this source file: what is its purpose.
- */
-
-
-var restify = require('restify');
 var assert = require('assert-plus');
 var path = require('path');
 var crypto = require('crypto');
 var async = require('async');
 var backoff = require('backoff');
+var restifyClients = require('restify-clients');
 
 
 /*
@@ -41,7 +36,7 @@ function WfClient(options) {
     };
 
     if (options.agent !== undefined) restifyOptions.agent = options.agent;
-    this.client = restify.createJsonClient(restifyOptions);
+    this.client = restifyClients.createJsonClient(restifyOptions);
 
     this.retry = options.retry || {};
     this.log = options.log;
diff --git a/package.json b/package.json
index 200a77e..b6525d9 100644
--- a/package.json
+++ b/package.json
@@ -1,20 +1,18 @@
 {
   "name": "wf-client",
-  "description": "Workflow API Client",
-  "version": "0.1.1",
-  "author": "Andres Rodriguez (andres@joyent.com)",
+  "description": "a node.js client for the Triton core Workflow API service",
+  "version": "0.2.0",
+  "author": "Joyent (joyent.com)",
   "main": "./lib/wf-client.js",
   "dependencies": {
-    "assert-plus": "~0.1.5",
-    "restify": "^2.8.4",
-    "node-uuid": "1.3.3",
-    "bunyan": "^1.3.2",
+    "assert-plus": "~1.0.0",
     "async": "~0.9.0",
-    "backoff": "^2.4.1"
+    "backoff": "^2.4.1",
+    "bunyan": "^1.8.1",
+    "restify-clients": "^1.3.1"
   },
   "devDependencies": {
-    "nodeunit": "0.7.4"
+    "nodeunit": "^0.10.2"
   },
-  "scripts": {},
   "license": "MPL-2.0"
 }
diff --git a/test/wf-client.test.js b/test/wf-client.test.js
index d349119..7fc6b59 100644
--- a/test/wf-client.test.js
+++ b/test/wf-client.test.js
@@ -5,30 +5,27 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
-/* Test the WfClient */
+var assert = require('assert');
+var bunyan = require('bunyan');
+var restifyClients = require('restify-clients');
 
 var WfClient = require('../lib/wf-client');
-var Logger = require('bunyan');
-var restify = require('restify');
-var assert = require('assert');
 
 
-var log = new Logger({
+var log = bunyan.createLogger({
     name: 'wf-client',
     level: 'info',
-    serializers: {
-        err: Logger.stdSerializers.err,
-        req: Logger.stdSerializers.req,
-        res: restify.bunyan.serializers.res
-    }
+    serializers: restifyClients.bunyan.serializers
 });
 
+var workflowUrl = 'http://' + (process.env.WORKFLOW_IP || '10.99.99.19');
+
 var config = {
     workflows: ['say'],
-    url: 'http://10.99.99.19',
+    url: workflowUrl,
     path: './test',
     log: log,
     forceReplace: false,
