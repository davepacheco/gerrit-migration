From e6e5be210c3e66ae6990c1e1395e25422a2390de Mon Sep 17 00:00:00 2001
From: David Pacheco <dap@joyent.com>
Date: Thu, 26 Jan 2017 15:52:37 -0800
Subject: [PATCH] MANTA-3124 update libmanta to moray v3 Reviewed by: Robert
 Mustacchi <rm@joyent.com> Approved by: Jordan Hendricks
 <jordan.hendricks@joyent.com>

---
 lib/moray.js                            | 76 +++++++------------------
 package.json                            |  4 +-
 test/moray.test.js                      |  7 ++-
 test/trigger/manta/manta-triggers-setup |  7 ++-
 4 files changed, 29 insertions(+), 65 deletions(-)

diff --git a/lib/moray.js b/lib/moray.js
index 12dbed3..43396de 100644
--- a/lib/moray.js
+++ b/lib/moray.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 //
@@ -15,6 +15,7 @@
 
 var EventEmitter = require('events').EventEmitter;
 var fs = require('fs');
+var jsprim = require('jsprim');
 var path = require('path');
 var util = require('util');
 
@@ -384,17 +385,22 @@ function Moray(options) {
 
     EventEmitter.call(this);
 
-    this.connectTimeout = options.connectTimeout || 1000;
     this.client = null;
-    this.host = options.host;
-    this.log = options.log.child({
-        component: 'MorayIndexClient',
-        host: options.host,
-        port: (options.port || 2020)
-    }, true);
-    this.port = parseInt(options.port || 2020, 10);
-    this.retry = options.retry;
-    this.url = 'tcp://' + options.host + ':' + (options.port || 2020);
+
+    if (options.hasOwnProperty('morayOptions')) {
+        this.morayOptions = jsprim.deepCopy(options.morayOptions);
+    } else {
+        this.morayOptions = {
+            'host': options.host,
+            'port': parseInt(options.port || 2020, 10),
+            'retry': options.retry,
+            'connectTimeout': options.connectTimeout || 1000
+        };
+    }
+
+    this.log = options.log.child({ component: 'MorayIndexClient' }, true);
+    this.morayOptions.log = this.log;
+    this.morayOptions.unwrapErrors = true;
 
     /*
      * Configure the exponential backoff object we use to manage backoff during
@@ -474,14 +480,7 @@ Moray.prototype.initAttempt = function initAttempt() {
 
     this.initPipeline = vasync.waterfall([
         function initClient(callback) {
-            self.client = moray.createClient({
-                connectTimeout: self.connectTimeout,
-                log: self.log,
-                host: self.host,
-                port: self.port,
-                retry: self.retry,
-                unwrapErrors: true
-            });
+            self.client = moray.createClient(self.morayOptions);
 
             var onErrorDuringConnect = function onErrDuringConnect(err) {
                 callback(new VError(err, 'moray client error'));
@@ -812,12 +811,7 @@ Moray.prototype.close = function close(callback) {
 
 
 Moray.prototype.toString = function toString() {
-    // ugly...
-    var c = (((this.client || {}).client || {}).conn || {});
-    var str = sprintf('[object MorayRingClient<url=%s, remote=%s:%s>]',
-                      this.url,
-                      c.remoteAddress, c.remotePort);
-    return (str);
+    return ('[object MorayRingClient]');
 };
 
 
@@ -829,35 +823,3 @@ module.exports = {
         return (new Moray(opts));
     }
 };
-
-
-
-///--- Tests
-
-function _test() {
-    var bunyan = require('bunyan');
-
-    var log = bunyan.createLogger({
-        name: 'moray_test',
-        stream: process.stdout,
-        level: process.env.LOG_LEVEL || 'trace',
-        serializers: bunyan.stdSerializers
-    });
-
-    var clients = [];
-    for (var i = 0; i < 20; i++) {
-        clients.push(new Moray({
-            connectTimeout: 4000,
-            host: 'electric-moray.coal.joyent.us',
-            port: 2020,
-            log: log
-        }));
-
-        clients[clients.length - 1].once('connect', function () {
-            clients[clients.length - 1].close();
-        });
-    }
-}
-
-if (require.main === module)
-    _test();
diff --git a/package.json b/package.json
index 90e09e8..624b6e3 100644
--- a/package.json
+++ b/package.json
@@ -13,8 +13,9 @@
         "assert-plus": "0.1.5",
         "backoff": "2.3.0",
         "bunyan": "0.22.1",
+        "jsprim": "^1.3.1",
         "lru-cache": "2.3.1",
-        "moray": "^2.0.0",
+        "moray": "3.0.0",
         "once": "1.3.0",
         "restify": "2.6.3",
         "redis": "0.10.1",
@@ -25,7 +26,6 @@
     "devDependencies": {
         "cmdutil": "0.1.0",
         "extsprintf": "1.3.0",
-        "jsprim": "0.6.1",
         "libuuid": "0.1.2",
         "lstream": "0.0.4",
         "manta": "1.5.2",
diff --git a/test/moray.test.js b/test/moray.test.js
index 1b3d605..0847050 100644
--- a/test/moray.test.js
+++ b/test/moray.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var once = require('once');
@@ -116,8 +116,9 @@ before(function (cb) {
 
     this.ring = libmanta.createMorayClient({
         log: helper.createLogger(),
-        host: process.env.ELECTRIC_MORAY,
-        port: 2020
+        morayOptions: {
+            srvDomain: process.env.ELECTRIC_MORAY
+        }
     });
 
     this.ring.once('error', cb);
diff --git a/test/trigger/manta/manta-triggers-setup b/test/trigger/manta/manta-triggers-setup
index b5bcf49..bbeebf1 100755
--- a/test/trigger/manta/manta-triggers-setup
+++ b/test/trigger/manta/manta-triggers-setup
@@ -7,7 +7,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -30,8 +30,9 @@ if (!process.env.ELECTRIC_MORAY_HOST) {
 
 ring = libmanta.createMorayClient({
     log: helper.createLogger(),
-    host: process.env.ELECTRIC_MORAY_HOST,
-    port: 2020
+    morayOptions: {
+        srvDomain: process.env.ELECTRIC_MORAY_HOST
+    }
 });
 
 ring.once('connect', function () {
-- 
2.21.0

