commit 31a7d8b8631390a25d441c6bc7d708bf6924d291 (refs/changes/34/2434/8)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-09-05T17:44:07+00:00 (2 years, 1 month ago)
    
    MANTA-3368 MPU commit does not return the computed MD5

diff --git a/lib/uploads/commit.js b/lib/uploads/commit.js
index ded74d8..856e1a7 100644
--- a/lib/uploads/commit.js
+++ b/lib/uploads/commit.js
@@ -516,6 +516,7 @@ function commit(req, res, next) {
             }, 'commit: completed');
 
             res.setHeader('Location', p);
+            res.setHeader('Computed-MD5', md5);
             res.send(201);
             next();
         }
diff --git a/package.json b/package.json
index 22ed74d..32365b7 100644
--- a/package.json
+++ b/package.json
@@ -33,14 +33,14 @@
         "moray": "3.1.1",
         "once": "1.3.0",
         "restify": "2.6.3",
-        "vasync": "1.4.3",
+        "vasync": "^1.5.0",
         "verror": "^1.9.0",
         "watershed": "0.3.0",
         "xtend": "2.1.1"
     },
     "devDependencies": {
         "smartdc": "7.3.1",
-        "manta": "4.3.0",
+        "manta": "4.5.0",
         "nodeunit": "0.9.1",
         "node-uuid": "1.4.1"
     },
diff --git a/test/mpu/commit.test.js b/test/mpu/commit.test.js
index 51f454d..a64e769 100644
--- a/test/mpu/commit.test.js
+++ b/test/mpu/commit.test.js
@@ -112,6 +112,65 @@ test('commit upload: one part', function (t) {
     });
 });
 
+test('commit upload: commit content md5 match', function (t) {
+    var self = this;
+    vasync.waterfall([
+        function (callback) {
+            self.createUpload(self.path, null, function (err) {
+                if (ifErr(t, err, 'created upload')) {
+                    callback(err);
+                } else {
+                    callback(null);
+                }
+            });
+        },
+        function (callback) {
+            self.writeTestObject(self.uploadId, 0, function (err, res) {
+                if (ifErr(t, err, 'uploaded part')) {
+                    callback(err);
+                } else {
+                    t.ok(res);
+                    t.checkResponse(res, 204);
+                    callback(null, res.headers.etag);
+                }
+            });
+        },
+        function (etag, callback) {
+            self.commitUpload(self.uploadId, [etag], function (err, res) {
+                if (ifErr(t, err, 'commited upload')) {
+                    callback(err);
+                } else {
+                    t.ok(res);
+                    t.ok(res.headers);
+                    t.ok(res.headers['computed-md5']);
+                    if (res === undefined || res.headers == undefined) {
+                        callback(new Error('commit upload missing res'));
+                        return;
+                    }
+                    callback(null, res.headers['computed-md5']);
+                }
+            });
+        },
+        function (computedMd5, callback) {
+            self.client.info(self.path, function (err, info) {
+                if (ifErr(t, err, 'got object info')) {
+                    callback(err);
+                } else {
+                    t.ok(info, 'failed to get object info');
+                    if (info) {
+                        var headers = info.headers || {};
+                        t.equal(computedMd5, helper.TEXT_MD5);
+                        t.equal(computedMd5, headers['content-md5']);
+                    }
+                    callback(null);
+                }
+            });
+        }
+    ], function () {
+        t.end();
+    });
+});
+
 
 test('commit upload: already commited, same set of parts', function (t) {
     var self = this;
diff --git a/test/mpu/helper.js b/test/mpu/helper.js
index 7a71f53..06d07bf 100644
--- a/test/mpu/helper.js
+++ b/test/mpu/helper.js
@@ -337,12 +337,12 @@ function commitUploadHelper(id, etags, subuser, cb) {
         account: self.client.user
     };
 
-    client.commitUpload(id, etags, opts, function (err) {
+    client.commitUpload(id, etags, opts, function (err, res) {
         if (err) {
             cb(err);
         } else {
             self.uploadFinalized = true;
-            cb();
+            cb(null, res);
         }
     });
 }
