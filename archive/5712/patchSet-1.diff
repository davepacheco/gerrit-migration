From 3cc4806bf03ff111276d1942d07164a09ea432ac Mon Sep 17 00:00:00 2001
From: John Levon <john.levon@joyent.com>
Date: Mon, 4 Mar 2019 14:12:12 +0000
Subject: [PATCH] OS-7604 -faggressive-loop-optimizations should be off
 everywhere OS-7624 remove lint target support from smartos-live

---
 Makefile                             |  2 +
 configure                            |  8 +--
 src/Makefile                         | 95 ++++++++++++----------------
 src/Makefile.defs                    | 58 ++++++++++-------
 src/Makefile.targ                    |  9 ++-
 src/common/strings/Makefile          | 50 ++++-----------
 src/dockerinit/Makefile              | 60 ++++--------------
 src/dockerinit/mdata-client/Makefile |  2 +
 src/fw/Makefile                      |  4 +-
 src/lx_hook_postnet/Makefile         | 79 ++++++-----------------
 src/routeinfo/Makefile               | 67 +++++---------------
 src/vmunbundle.c                     | 10 ++-
 12 files changed, 152 insertions(+), 292 deletions(-)

diff --git a/Makefile b/Makefile
index d4374038..b3d50476 100644
--- a/Makefile
+++ b/Makefile
@@ -287,6 +287,7 @@ update-base:
 	touch $@
 
 0-subdir-%-stamp: 0-illumos-stamp
+	@echo "========== building $* =========="
 	cd "$(ROOT)/projects/local/$*" && \
 	    if [[ -f Makefile.joyent ]]; then \
 		gmake -f Makefile.joyent $(SUBDIR_DEFS) DESTDIR=$(PROTO) \
@@ -332,6 +333,7 @@ strap-cache:
 	touch $@
 
 0-livesrc-stamp: 0-illumos-stamp 0-strap-stamp 0-extra-stamp
+	@echo "========== building src =========="
 	(cd $(ROOT)/src && \
 	    gmake -j$(MAX_JOBS) NATIVEDIR=$(STRAP_PROTO) \
 	    DESTDIR=$(PROTO) && \
diff --git a/configure b/configure
index ddb60449..c3ec218d 100755
--- a/configure
+++ b/configure
@@ -242,8 +242,6 @@ function generate_env
 	local nopts="-CimMNnt"
 	local lprefix
 
-	[[ "$ILLUMOS_LINT" = "yes" ]] && nopts="${nopts}l"
-
 	case $ILLUMOS_ENABLE_DEBUG in
 	exclusive)
 		nopts="${nopts}DF" ;;
@@ -430,8 +428,6 @@ read -r -d '' usage <<EOF
 		build Illumos in DEBUG mode only [default: no]
 	-h
 		this message
-	-l
-		run lint pass on Illumos [default: no]
 	-p gcc4
 		primary compiler version [default: gcc4]
 	-r
@@ -442,7 +438,7 @@ EOF
 
 source_vars
 
-while getopts "cdhlp:rs:" arg; do
+while getopts "cdhp:rs:" arg; do
 	case $arg in
 	c)
 		ILLUMOS_CLOBBER=yes ;;
@@ -458,8 +454,6 @@ while getopts "cdhlp:rs:" arg; do
 	h)
 		echo "$usage"
 		exit 0 ;;
-	l)
-		ILLUMOS_LINT=yes ;;
 	p)
 		PRIMARY_COMPILER=$OPTARG
 		FORCE_STRAP_REBUILD=yes ;;
diff --git a/src/Makefile b/src/Makefile
index 0961e82f..b946cf12 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -13,15 +13,16 @@
 # Copyright (c) 2019, Joyent, Inc.
 #
 
+BASE =		$(CURDIR)
+
 include Makefile.defs
 
 #
 # ROOT is used only when building and running the below tools.
 #
-ROOT =		$(PWD)/..
+ROOT =		$(CURDIR)/..
 JSSTYLE =	$(ROOT)/tools/jsstyle/jsstyle
 JSLINT =	$(ROOT)/tools/javascriptlint/build/install/jsl
-CSTYLE =	$(ROOT)/tools/cstyle
 
 #
 # Tool options
@@ -67,7 +68,7 @@ fswatcher :	LIBS +=		-lthread -lnvpair -lavl
 zfs_recv :	LIBS +=		-lsocket
 zfs_send :	LIBS +=		-lsocket
 vmbundle :	CPPFLAGS +=	-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
-sdc-on-tty :	CFLAGS +=	$(OPT_FLAG)
+sdc-on-tty :	CFLAGS +=	$(OPT_FLAGS)
 sysevent :	LIBS +=		-lnvpair -lsysevent
 sysinfo_mod.so : CPPFLAGS +=	-D_REENTRANT
 sysinfo_mod.so : CFLAGS +=	-fpic -Wno-unused-parameter
@@ -159,17 +160,7 @@ C_CHECK_TARGETS=\
 	zfs_send.c \
 	sdc-on-tty.c \
 	sysinfo_mod.c \
-	sysevent.c \
-	dockerinit/src/dockerexec.c \
-	dockerinit/src/dockerinit.c \
-	dockerinit/src/docker-common.c \
-	lx_hook_postnet/main.c
-
-#
-# Generic flags we apply by default to everything.
-#
-CFLAGS +=	$(WARN_FLAGS)
-CXXFLAGS =	$(CFLAGS)
+	sysevent.c
 
 #
 # Node native add-on patterns.  For add-ons with a single source file in the
@@ -183,7 +174,7 @@ EXPAT.NODE =	$(EXPAT_OBJDIR)/node-expat.node
 
 $(EXPAT.NODE) :	WARN_FLAGS +=	-Wno-unused
 $(EXPAT.NODE) :	CPPFLAGS +=	$(NODE_CPPFLAGS)
-$(EXPAT.NODE) :	CXXFLAGS +=	$(NODE_CFLAGS)
+$(EXPAT.NODE) :	CXXFLAGS +=	$(NODE_CXXFLAGS)
 $(EXPAT.NODE) :	LDFLAGS +=	$(NODE_LDFLAGS)
 $(EXPAT.NODE) :	LIBS +=		-lexpat
 
@@ -195,7 +186,7 @@ KSTAT.NODE =	$(KSTAT_OBJDIR)/kstat.node
 
 $(KSTAT.NODE) :	WARN_FLAGS +=	-Wno-unused -Wno-write-strings -Wno-sign-compare
 $(KSTAT.NODE) :	CPPFLAGS +=	$(NODE_CPPFLAGS)
-$(KSTAT.NODE) :	CXXFLAGS +=	$(NODE_CFLAGS)
+$(KSTAT.NODE) :	CXXFLAGS +=	$(NODE_CXXFLAGS)
 $(KSTAT.NODE) :	LDFLAGS +=	$(NODE_LDFLAGS)
 $(KSTAT.NODE) :	LIBS +=		-lkstat
 
@@ -208,6 +199,7 @@ V8PLUS_SUBDIR_ENV = \
 			CXX=$(GXX) \
 			PREFIX_NODE=$(PREFIX_NODE) \
 			NODE_EXEC=$(NODE_EXEC) \
+			OPT_FLAGS="$(OPT_FLAGS)" \
 			CTFCONVERT=$(CTFCONVERT) \
 			CTFMERGE=$(CTFMERGE)
 
@@ -257,7 +249,7 @@ $(DTRACE_PROVIDER.NODE) :	CFLAGS +=	$(NODE_CFLAGS)
 $(DTRACE_PROVIDER.NODE) :	CPPFLAGS +=	\
 					$(NODE_CPPFLAGS) \
 					-Inode-dtrace-provider/libusdt
-$(DTRACE_PROVIDER.NODE) :	CXXFLAGS +=	$(NODE_CFLAGS)
+$(DTRACE_PROVIDER.NODE) :	CXXFLAGS +=	$(NODE_CXXFLAGS)
 $(DTRACE_PROVIDER.NODE) :	LDFLAGS +=	$(NODE_LDFLAGS)
 
 CLEANFILES +=	$(DTRACE_PROVIDER.NODE) $(DTRACE_PROVIDER_OBJS)
@@ -271,7 +263,7 @@ UUID.NODE =	$(UUID_OBJDIR)/uuid.node
 
 $(UUID.NODE) :	WARN_FLAGS +=	-Wno-unused -Wno-write-strings -Wno-sign-compare
 $(UUID.NODE) :	CPPFLAGS +=	$(NODE_CPPFLAGS)
-$(UUID.NODE) :	CXXFLAGS +=	$(NODE_CFLAGS)
+$(UUID.NODE) :	CXXFLAGS +=	$(NODE_CXXFLAGS)
 $(UUID.NODE) :	LDFLAGS +=	$(NODE_LDFLAGS)
 $(UUID.NODE) :	LIBS +=		-luuid
 
@@ -282,9 +274,12 @@ NOMKNOD_SRC =		nomknod.c
 NOMKNOD_SO =		nomknod.so
 NOMKNOD_32 =		$(NOMKNOD_SO).32
 NOMKNOD_64 =		$(NOMKNOD_SO).64
-NOMKNOD_32_FLAGS =	-m32
-NOMKNOD_64_FLAGS =	-m64
-NOMKNOD_FLAGS =		-nostdlib $(PIC_FLAGS) $(SHARED_FLAGS)
+
+NOMKNOD_FLAGS =		-nostdlib $(OPT_FLAGS) $(PIC_FLAGS) $(SHARED_FLAGS) \
+			-Wno-unused-parameter
+
+$(NOMKNOD_32) :		CFLAGS += -m32 $(NOMKNOD_FLAGS)
+$(NOMKNOD_64) :		CFLAGS += -m64 $(NOMKNOD_FLAGS)
 NOMKNOD_TARGS =		$(NOMKNOD_32) $(NOMKNOD_64)
 NOMKNOD_ROOT =		$(DESTDIR)/usr/img/lib
 NOMKNOD_ROOT64 =	$(DESTDIR)/usr/img/lib/amd64
@@ -337,21 +332,16 @@ SMARTDC_LIB_TARGETS = \
 #
 SUBDIRS = dockerinit routeinfo lx_hook_postnet
 
-SUBDIRS_ENV = \
-	CTFCONVERT=$(CTFCONVERT) \
-	CTFMERGE=$(CTFMERGE) \
-	DESTDIR=$(DESTDIR)
-
 all : TARGET = all
 clean : TARGET = clean
 install : TARGET = install
-check : TARGET = lint
+check : TARGET = check
 
 all: $(TARGETS) $(USR_LIB_TARGETS) sysinfo nictagadm sysevent \
 	$(SMARTDC_TARGETS) $(SMARTDC_LIB_TARGETS) $(SUBDIRS)
 
 $(SUBDIRS): FRC
-	@cd $@; pwd; $(MAKE) $(SUBDIRS_ENV) $(TARGET)
+	@cd $@; pwd; $(MAKE) $(TARGET)
 
 install: all $(SUBDIRS)
 	mkdir -p $(DESTDIR)/usr/bin
@@ -447,8 +437,8 @@ install: all $(SUBDIRS)
 	    > $(DESTDIR)/usr/fw/node_modules/bunyan.js
 	mkdir -m 0755 -p $(DESTDIR)/usr/lib/sdc
 	cp -p net-boot-config $(DESTDIR)/usr/lib/sdc
-	cd routeinfo && $(MAKE) install $(SUBDIRS_ENV)
-	cd lx_hook_postnet && $(MAKE) install $(SUBDIRS_ENV)
+	cd routeinfo && $(MAKE) install
+	cd lx_hook_postnet && $(MAKE) install
 	mkdir -p $(SYSINFO_MOD_DIR)
 	rm -f $(SYSINFO_MOD_DIR)/sysinfo_mod.so
 	/usr/sbin/install -f $(SYSINFO_MOD_DIR) -m 0555 sysinfo_mod.so
@@ -465,7 +455,7 @@ check: $(JSLINT) $(SUBDIRS)
 	@echo "==> Running cstyle..."
 	@# cstyle doesn't echo as it goes so we add an echo to each line below
 	@(for file in $(C_CHECK_TARGETS); do \
-		echo $(PWD)/$$file; \
+		echo $(CURDIR)/$$file; \
 		$(CSTYLE) $$file; \
 		[[ $$? == "0" ]] || exit 1; \
 	done)
@@ -476,12 +466,12 @@ check: $(JSLINT) $(SUBDIRS)
 	@printf "\n==> Running jsstyle...\n"
 	@# jsstyle doesn't echo as it goes so we add an echo to each line below
 	(for file in $(JS_CHECK_TARGETS); do \
-		echo $(PWD)/$$file; \
+		echo $(CURDIR)/$$file; \
 		$(JSSTYLE) $(JSSTYLE_OPTS) $$file; \
 		[[ $$? == "0" ]] || exit 1; \
 	done)
 	(for file in $(JS_CHECK_OLDSKOOL_TARGETS); do \
-		echo $(PWD)/$$file; \
+		echo $(CURDIR)/$$file; \
 		$(JSSTYLE) $(JSSTYLE_OLDSKOOL_OPTS) $$file; \
 		[[ $$? == "0" ]] || exit 1; \
 	done)
@@ -556,8 +546,8 @@ vm/node_modules/props.js: vm/node_modules/proptable.js vm/node_modules/expander.
 # add-on and see the comment and definitions for EXPAT.NODE above as well.
 #
 $(EXPAT.NODE): node-expat/node-expat.cc
-	@mkdir -p $(EXPAT_OBJDIR)
-	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@ $< $(LIBS)
+	@mkdir -p $(@D)
+	$(LINK.cc) $^ $(LIBS)
 
 #
 # node-lockfd and node-zonename are built using the v8plus-based Makefile
@@ -570,14 +560,14 @@ $(LOCKFD_BINDING.NODE): FRC
 	LD_OPTIONS=-lc \
 	$(MAKE) \
 		$(V8PLUS_SUBDIR_ENV) \
-		V8PLUS=$(PWD)/$(LOCKFD_V8PLUS_DIR)
+		V8PLUS=$(CURDIR)/$(LOCKFD_V8PLUS_DIR)
 
 $(ZONENAME_BINDING.NODE): FRC
 	cd $(ZONENAME_SRC_DIR) && \
 	LD_OPTIONS=-lc \
 	$(MAKE) \
 		$(V8PLUS_SUBDIR_ENV) \
-		V8PLUS=$(PWD)/$(ZONENAME_V8PLUS_DIR)
+		V8PLUS=$(CURDIR)/$(ZONENAME_V8PLUS_DIR)
 
 #
 # The next two are used to build libusdt files into
@@ -585,37 +575,34 @@ $(ZONENAME_BINDING.NODE): FRC
 #
 $(DTRACE_PROVIDER_OBJDIR)/%.o: $(DTRACE_PROVIDER_SRCDIR)/%.c \
 	    $(DTRACE_PROVIDER_HDRS)
-	@mkdir -p $(DTRACE_PROVIDER_OBJDIR)/libusdt
-	$(GCC) $(CPPFLAGS) $(CFLAGS) -o $@ -c $<
+	@mkdir -p $(@D)
+	$(COMPILE.c) $<
 
 $(DTRACE_PROVIDER_OBJDIR)/%.o: $(DTRACE_PROVIDER_SRCDIR)/%.s
-	@mkdir -p $(DTRACE_PROVIDER_OBJDIR)/libusdt
-	$(GCC) $(CPPFLAGS) $(CFLAGS) -o $@ -c $<
+	@mkdir -p $(@D)
+	$(COMPILE.c) $^
 
 $(DTRACE_PROVIDER_OBJDIR)/%.o: $(DTRACE_PROVIDER_SRCDIR)/%.cc \
 	    $(DTRACE_PROVIDER_HDRS)
-	@mkdir -p $(DTRACE_PROVIDER_OBJDIR)
-	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@ -c $<
+	@mkdir -p $(@D)
+	$(COMPILE.cc) $<
 
 $(DTRACE_PROVIDER.NODE): $(DTRACE_PROVIDER_OBJS)
-	@mkdir -p $(DTRACE_PROVIDER_OBJDIR)
-	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@ $(DTRACE_PROVIDER_OBJS) $(LIBS)
+	@mkdir -p $(@D)
+	$(LINK.cc) $^ $(LIBS)
 
 $(KSTAT.NODE): node-kstat/kstat.cc
-	@mkdir -p $(KSTAT_OBJDIR)
-	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@ $< $(LIBS)
+	@mkdir -p $(@D)
+	$(LINK.cc) $^ $(LIBS)
 
 $(UUID.NODE): $(UUID_SRCDIR)/uuid.cc
-	@mkdir -p $(UUID_OBJDIR)
-	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@ $< $(LIBS)
+	@mkdir -p $(@D)
+	$(LINK.cc) $^ $(LIBS)
 
 $(NOMKNOD_32):	$(NOMKNOD_SRC)
-	$(GCC) $(NOMKNOD_FLAGS) $(NOMKNOD_32_FLAGS) -o $@ $<
+	$(LINK.c) $^
 
 $(NOMKNOD_64):	$(NOMKNOD_SRC)
-	$(GCC) $(NOMKNOD_FLAGS) $(NOMKNOD_64_FLAGS) -o $@ $<
-
-$(SYSINFO_MOD): $(SYSINFO_MOD_SRC)
-	$(GCC) $(CPPFLAGS) $(CFLAGS) -o $@ -c $<
+	$(LINK.c) $^
 
 FRC:
diff --git a/src/Makefile.defs b/src/Makefile.defs
index 4b3559e1..105b6101 100644
--- a/src/Makefile.defs
+++ b/src/Makefile.defs
@@ -18,10 +18,18 @@
 #
 # CDDL HEADER END
 #
-# Copyright 2015, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
-BASE =		$(PWD)
+#
+# MG runs make check prior to ./configure, so allow build.env not to exist.
+#
+ifeq ($(MAKECMDGOALS),check)
+-include	$(BASE)/../build.env
+else
+include		$(BASE)/../build.env
+endif
+
 DESTDIR =	$(BASE)/../proto
 NATIVEDIR =	$(BASE)/../proto.strap
 ILLUMOS_SRC =	$(BASE)/../projects/illumos/usr/src
@@ -36,6 +44,7 @@ endif
 
 MAX_JOBS =	128
 PARALLEL =	-j$(MAX_JOBS)
+CSTYLE =	$(BASE)/../tools/cstyle
 GCC =		$(NATIVEDIR)/usr/bin/gcc
 GXX =		$(NATIVEDIR)/usr/bin/g++
 
@@ -57,9 +66,20 @@ NODE_EXEC =	$(NATIVEDIR)/usr/node/0.10/bin/node
 DEBUG_FLAGS =	-g
 WARN_FLAGS =	-Wall -Wextra -Werror
 PIC_FLAGS =	-fPIC
-OPT_FLAGS =	-O2
 
-NODE_CFLAGS =	$(DEBUG_FLAGS) $(WARN_FLAGS) $(PIC_FLAGS) $(OPT_FLAGS)
+#
+# Avoid GCC's overly aggressive optimizations. We don't know of any specific
+# instances this causes problems, so this is just in case.
+#
+GCC_OPT_FLAGS_4 = -O2
+GCC_OPT_FLAGS_7 = -O2 -fno-aggressive-loop-optimizations
+
+OPT_FLAGS = $(GCC_OPT_FLAGS_$(PRIMARY_COMPILER_VER))
+
+CFLAGS =	-std=gnu99 $(WARN_FLAGS) $(OPT_FLAGS)
+CXXFLAGS =	$(WARN_FLAGS) $(OPT_FLAGS)
+NODE_CFLAGS =	$(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS) $(PIC_FLAGS)
+NODE_CXXFLAGS =	$(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS) $(PIC_FLAGS)
 
 STD_DEFS =	-D_GNU_SOURCE
 NODE_DEFS =	-DBUILDING_NODE_EXTENSION
@@ -75,23 +95,13 @@ NODE_LIBDIR =	-L$(PREFIX_NODE)/lib
 
 NODE_LDFLAGS =	$(SHARED_FLAGS) $(ZTEXT) $(NODE_LIBDIR)
 
-SUBDIR_CC =		CC="$(GCC)"
-SUBDIR_CXX =		CXX="$(GXX)"
-SUBDIR_CPPFLAGS =	CPPFLAGS="$(CPPFLAGS)"
-SUBDIR_CFLAGS =		CFLAGS="$(CFLAGS)"
-SUBDIR_CXXFLAGS =	CXXFLAGS="$(CXXFLAGS)"
-SUBDIR_LDFLAGS =	LDFLAGS="$(LDFLAGS)"
-SUBDIR_LIBS =		LIBS="$(LIBS)"
-SUBDIR_MAKE =		MAKE="$(MAKE)"
-SUBDIR_DESTDIR =	DESTDIR="$(DESTDIR)"
-
-SUBDIR_ENV = \
-	$(SUBDIR_CC) \
-	$(SUBDIR_CXX) \
-	$(SUBDIR_CPPFLAGS) \
-	$(SUBDIR_CFLAGS) \
-	$(SUBDIR_CXXFLAGS) \
-	$(SUBDIR_LDFLAGS) \
-	$(SUBDIR_LIBS) \
-	$(SUBDIR_MAKE) \
-	$(SUBDIR_DESTDIR)
+STRINGS_DIR =	$(BASE)/common/strings
+DOCKER_DIR =	$(BASE)/dockerinit
+
+INSTALL_PROG =	mkdir -p $(@D) && rm -f $@ && cp $^ $@ && \
+		chmod 755 $@ && touch $@
+
+COMPILE.c =	$(GCC) $(CPPFLAGS) $(CFLAGS) -o $@ -c
+LINK.c =	$(GCC) $(CPPFLAGS) $(CFLAGS) -o $@
+COMPILE.cc =	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@ -c
+LINK.cc =	$(GXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
diff --git a/src/Makefile.targ b/src/Makefile.targ
index f220388e..b3cdb470 100644
--- a/src/Makefile.targ
+++ b/src/Makefile.targ
@@ -10,7 +10,7 @@
 #
 
 #
-# Copyright 2015 Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
 %: %.c
@@ -18,4 +18,9 @@
 
 %.so: %.c
 	$(GCC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -o $@ $< $(LIBS)
-	$(ALTCTFCONV) -L VERSION -i $@
+
+$(OBJDIR)/%.o: src/%.c | $(OBJDIR)
+	$(COMPILE.c) $<
+
+$(OBJDIR)/%.o: $(BASE)/common/strings/%.c | $(OBJDIR)
+	$(COMPILE.c) $<
diff --git a/src/common/strings/Makefile b/src/common/strings/Makefile
index 5c5d36aa..8157c176 100644
--- a/src/common/strings/Makefile
+++ b/src/common/strings/Makefile
@@ -10,7 +10,7 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
 #
@@ -20,18 +20,14 @@
 # objects from this source in their own Makefile.
 #
 
-BASE :=		$(PWD)
-DESTDIR =	$(BASE)/../../../proto
-NATIVEDIR =	$(BASE)/../../../proto.strap
+BASE =		$(CURDIR)/../../
 
-GCC =		$(NATIVEDIR)/usr/bin/gcc
-GXX =		$(NATIVEDIR)/usr/bin/g++
+include $(BASE)/Makefile.defs
 
 .SUFFIXES:
 .SECONDARY:
 
-CFLAGS =	-std=gnu99 -Wall -Wextra -Werror -m32 -g \
-		-Wno-unused-parameter -I$(BASE)
+CFLAGS +=	$(DEBUG_FLAGS) -m32 -Wno-unused-parameter -I.
 
 TEST_PROGRAMS = \
 		test0 \
@@ -48,34 +44,16 @@ STRINGS_OBJECTS = \
 		strlist.o \
 		strpath.o
 
-OBJECTS = \
-		$(STRINGS_OBJECTS:%=obj/%)
-
-CTFCONVERT =	/usr/bin/true
-CTFMERGE =	/usr/bin/true
-
-CC =		$(GCC)
-CSTYLE =	../../../tools/cstyle
+OBJECTS =	$(STRINGS_OBJECTS:%=obj/%)
 
 LIBS =		-lumem
 
-COMPILE_C =	$(CC) $(CPPFLAGS) $(LDFLAGS) $(CFLAGS) -c -o $@ $< $(LIBS)
-
-INSTALL_PROG =	mkdir -p $(@D) && rm -f $@ && cp $^ $@ && \
-		chmod 755 $@ && touch $@
-
 .PHONY: all
 all: $(TEST_BINS)
 
 .PHONY: check
 check: $(STRINGS_OBJECTS:%.o=%.check)
 
-%.check: %.c
-	$(CSTYLE) -cPp $<
-
-lint:
-	/usr/bin/true
-
 clean:
 	rm -f $(OBJECTS) $(TEST_BINS:%=%.o)
 	rm -f $(TEST_BINS)
@@ -90,21 +68,17 @@ test: all $(TEST_PROGRAMS:%=%.runtest)
 	@echo OK
 	@echo ""
 
-#
-# Compilation and linking targets
-#
-obj/test%: obj/test%.o $(OBJECTS)
-	$(CC) $(CPPFLAGS) $(LDFLAGS) $(CFLAGS) -o $@ $^ $(LIBS) \
-	    tests/force_umem_debug.c
-	$(CTFMERGE) -L VERSION -o $@ $(OBJECTS)
+obj/test%: obj/test%.o $(OBJECTS) tests/force_umem_debug.c
+	@mkdir -p $(@D)
+	$(LINK.c) $^ $(LIBS)
+	$(CTFCONVERT) -L VERSION $@
 
 obj/test%.o: tests/test%.c
 	@mkdir -p $(@D)
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 obj/%.o: %.c
 	@mkdir -p $(@D)
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
+include $(BASE)/Makefile.targ
diff --git a/src/dockerinit/Makefile b/src/dockerinit/Makefile
index 55ac3730..eaa31704 100644
--- a/src/dockerinit/Makefile
+++ b/src/dockerinit/Makefile
@@ -10,28 +10,18 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
-BASE :=		$(PWD)
-DESTDIR =	$(BASE)/../../proto
-NATIVEDIR =	$(BASE)/../../proto.strap
+BASE :=		$(CURDIR)/../
+
+include		$(BASE)/Makefile.defs
 
 PROGRAMS =	dockerinit dockerexec
 
 .SUFFIXES:
 .SECONDARY:
 
-GCC =		$(NATIVEDIR)/usr/bin/gcc
-GXX =		$(NATIVEDIR)/usr/bin/g++
-
-SYSINCDIRS =	/usr/include
-SYSLIBDIRS =	/usr/lib /lib
-
-CPPFLAGS =	$(SYSINCDIRS:%=-isystem $(DESTDIR)/%)
-LDFLAGS =	$(SYSLIBDIRS:%=-L$(DESTDIR)/%) \
-		-Wl,-zassert-deflib -Wl,-zfatal-warnings
-
 JSON_OBJS =	json-nvlist.o
 JSON_LIBS =	-lnvpair
 
@@ -64,28 +54,15 @@ OBJS =		$(JSON_OBJS:%=obj/%) \
 		$(STRINGS_OBJS:%=obj/%) \
 		$(DOCKER_OBJS:%=obj/%)
 
-CTFCONVERT =	/usr/bin/true
-CTFMERGE =	/usr/bin/true
-
-CC =		$(GCC)
-CFLAGS =	-std=gnu99 -Wall -Wextra -Werror -D__HAVE_BOOLEAN_T -m32 -g \
-		-I$(BASE)/../common/strings
-
-COMPILE_C =	$(CC) $(CPPFLAGS) $(LDFLAGS) -c $(CFLAGS) -o $@ $<
-
-CSTYLE =	../../tools/cstyle
+CFLAGS +=	$(DEBUG_FLAGS) -D__HAVE_BOOLEAN_T -m32 -I$(STRINGS_DIR)
 
 all: $(BUILD_PROGS)
 
 install: all
 
-#
-# Compilation and Linking Targets
-#
-
 $(BUILD)/%: obj/%.o $(OBJS) | $(BUILD)
-	$(CC) $(CPPFLAGS) $(LDFLAGS) $(CFLAGS) -o $@ $^ $(LIBS)
-	$(CTFMERGE) -L VERSION -o $@ $(OBJS)
+	$(LINK.c) $^ $(LIBS)
+	$(CTFCONVERT) -L VERSION $@
 
 mdata-client/plat/%.o: mdata-client/plat/%.c
 	(cd mdata-client && $(MAKE) plat/$(@F))
@@ -94,30 +71,13 @@ mdata-client/%.o: mdata-client/%.c
 	(cd mdata-client && $(MAKE) $(@F))
 
 $(OBJDIR)/%.o: json-nvlist/%.c | $(OBJDIR)
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
-
-$(OBJDIR)/%.o: src/%.c | $(OBJDIR)
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
-
-$(OBJDIR)/%.o: $(BASE)/../common/strings/%.c | $(OBJDIR)
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $<
 
 $(OBJDIR) $(BUILD):
 	mkdir -p $@
 
-#
-# Check, Lint and Clean Targets
-#
-
 check: src/*.c
-	@echo $(PWD)/$^
-	@$(CSTYLE) $^
-
-lint:
-	/usr/bin/true
+	$(CSTYLE) -P $^
 
 clean:
 	rm -f $(BUILD_PROGS)
@@ -125,3 +85,5 @@ clean:
 	rm -f $(OBJS)
 	if test -d $(BUILD); then rmdir $(BUILD); fi
 	if test -d $(OBJDIR); then rmdir $(OBJDIR); fi
+
+include $(BASE)/Makefile.targ
diff --git a/src/dockerinit/mdata-client/Makefile b/src/dockerinit/mdata-client/Makefile
index eb4a0c03..a0e290b6 100644
--- a/src/dockerinit/mdata-client/Makefile
+++ b/src/dockerinit/mdata-client/Makefile
@@ -1,6 +1,8 @@
 
 VERSION = 0.0.1
 
+# FIXME: ugh
+
 CC = gcc
 
 CTFMERGE = /bin/true
diff --git a/src/fw/Makefile b/src/fw/Makefile
index d4248596..025c264c 100644
--- a/src/fw/Makefile
+++ b/src/fw/Makefile
@@ -1,12 +1,12 @@
 #
-# Copyright (c) 2014, Joyent, Inc. All rights reserved.
+# Copyright (c) 2019, Joyent, Inc. All rights reserved.
 #
 
 
 #
 # Directories
 #
-ROOT = $(PWD)/../..
+ROOT = $(CURDIR)/../..
 TOP := $(shell pwd)
 NM := node_modules
 NM_ORIG := node_modules.orig
diff --git a/src/lx_hook_postnet/Makefile b/src/lx_hook_postnet/Makefile
index 8a007cdd..d317266d 100644
--- a/src/lx_hook_postnet/Makefile
+++ b/src/lx_hook_postnet/Makefile
@@ -10,30 +10,19 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
-BASE :=		$(PWD)
-DESTDIR =	$(BASE)/../../proto
-NATIVEDIR =	$(BASE)/../../proto.strap
+BASE :=		$(CURDIR)/../
 
-PROGRAM =	lx_hook_postnet
-
-GCC =		$(NATIVEDIR)/usr/bin/gcc
-GXX =		$(NATIVEDIR)/usr/bin/g++
-
-SYSINCDIRS =	/usr/include
-SYSLIBDIRS =	/usr/lib /lib
+include		$(BASE)/Makefile.defs
 
-CFLAGS =	-std=gnu99 -Wall -Wextra -Werror -m32 -g \
-		-I$(DOCKER_DIR) \
-		-Wno-unused-parameter
-CPPFLAGS =	$(SYSINCDIRS:%=-isystem $(DESTDIR)/%)
-LDFLAGS =	$(SYSLIBDIRS:%=-L$(DESTDIR)/%) \
-		-Wl,-zassert-deflib -Wl,-zfatal-warnings
+PROGRAM =	lx_hook_postnet
 
-STRINGS_DIR =	$(BASE)/../common/strings
-DOCKER_DIR =	$(BASE)/../dockerinit
+CFLAGS +=	$(DEBUG_FLAGS) -m32 -I$(DOCKER_DIR) -I$(STRINGS_DIR) \
+		-I$(DOCKER_DIR)/mdata-client -I$(DOCKER_DIR)/src \
+		-I$(DOCKER_DIR)/json-nvlist \
+		 -Wno-unused-parameter -D__HAVE_BOOLEAN_T
 
 LXINIT_HOOK_OBJECTS = \
 		main.o
@@ -48,13 +37,6 @@ MDATA_OBJECTS = \
 		sunos.o \
 		unix_common.o
 
-custr.o :	CFLAGS += -I$(STRINGS_DIR)
-mdata_%.o :	CFLAGS += -I$(DOCKER_DIR)/mdata-client -D__HAVE_BOOLEAN_T
-main.o:	CFLAGS += -I$(STRINGS_DIR)
-docker_common.o:	CFLAGS += -I$(DOCKER_DIR)/src
-strlist.o:	CFLAGS += -I$(STRINGS_DIR)
-strpath.o:	CFLAGS += -I$(STRINGS_DIR)
-
 OBJECTS = \
 		$(MDATA_OBJECTS:%=mdata_%) \
 		custr.o \
@@ -64,24 +46,8 @@ OBJECTS = \
 		strlist.o \
 		strpath.o
 
-json-nvlist.o :	CFLAGS += -I$(DOCKER_DIR)/json-nvlist -I$(STRINGS_DIR)
-
-docker_common.o :	CFLAGS += -I$(DOCKER_DIR)/json-nvlist -I$(STRINGS_DIR)
-
 LIBS =		-lnvpair -lnsl -lsocket -lsmbios -lgen
 
-CTFCONVERT =	/usr/bin/true
-CTFMERGE =	/usr/bin/true
-
-CC=$(GCC)
-CFLAGS +=	-Wall -Wextra -Werror -D__HAVE_BOOLEAN_T -m32
-CSTYLE =	../../tools/cstyle
-
-COMPILE_C =	$(CC) $(CPPFLAGS) $(LDFLAGS) $(CFLAGS) -c -o $@ $<
-
-INSTALL_PROG =	mkdir -p $(@D) && rm -f $@ && cp $^ $@ && \
-		chmod 755 $@ && touch $@
-
 .PHONY: all
 all: $(PROGRAM)
 
@@ -89,41 +55,30 @@ all: $(PROGRAM)
 check: $(LXINIT_HOOK_OBJECTS:%.o=%.check)
 
 %.check: %.c
-	$(CSTYLE) -cPp $<
-
-lint:
-	/usr/bin/true
+	$(CSTYLE) -P $<
 
 clean:
 	rm -f $(OBJECTS)
 	rm -f $(PROGRAM)
 
-#
-# Compilation and linking targets
-#
 $(PROGRAM): $(OBJECTS)
-	$(CC) $(CPPFLAGS) $(LDFLAGS) $(CFLAGS) -o $@ $(OBJECTS) $(LIBS)
-	$(CTFMERGE) -L VERSION -o $@ $(OBJECTS)
+	$(LINK.c) $^ $(LIBS)
+	$(CTFCONVERT) -L VERSION $@
 
 %.o: $(STRINGS_DIR)/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 mdata_%.o: $(DOCKER_DIR)/mdata-client/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 mdata_%.o: $(DOCKER_DIR)/mdata-client/plat/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 docker_common.o: $(DOCKER_DIR)/src/docker-common.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 %.o: $(DOCKER_DIR)/json-nvlist/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 #
 # Installation
@@ -133,3 +88,5 @@ install: $(DESTDIR)/usr/lib/brand/lx/$(PROGRAM)
 
 $(DESTDIR)/usr/lib/brand/lx/$(PROGRAM): $(PROGRAM)
 	$(INSTALL_PROG)
+
+include		$(BASE)/Makefile.targ
diff --git a/src/routeinfo/Makefile b/src/routeinfo/Makefile
index 39c3bc83..33fe22c4 100644
--- a/src/routeinfo/Makefile
+++ b/src/routeinfo/Makefile
@@ -10,30 +10,18 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
-BASE :=		$(PWD)
-DESTDIR =	$(BASE)/../../proto
-NATIVEDIR =	$(BASE)/../../proto.strap
+BASE :=		$(CURDIR)/../
 
-PROGRAM =	routeinfo
-
-GCC =		$(NATIVEDIR)/usr/bin/gcc
-GXX =		$(NATIVEDIR)/usr/bin/g++
-
-SYSINCDIRS =	/usr/include
-SYSLIBDIRS =	/usr/lib /lib
+include		$(BASE)/Makefile.defs
 
-CFLAGS =	-std=gnu99 -Wall -Wextra -Werror -m32 -g \
-		-I$(DOCKER_DIR) \
-		-Wno-unused-parameter
-CPPFLAGS =	$(SYSINCDIRS:%=-isystem $(DESTDIR)/%)
-LDFLAGS =	$(SYSLIBDIRS:%=-L$(DESTDIR)/%) \
-		-Wl,-zassert-deflib -Wl,-zfatal-warnings
+PROGRAM =	routeinfo
 
-STRINGS_DIR =	$(BASE)/../common/strings
-DOCKER_DIR =	$(BASE)/../dockerinit
+CFLAGS +=	$(DEBUG_FLAGS) -m32 -I$(DOCKER_DIR) -I$(STRINGS_DIR) \
+		-I$(DOCKER_DIR)/mdata-client -I$(DOCKER_DIR)/json-nvlist \
+		 -Wno-unused-parameter -D__HAVE_BOOLEAN_T
 
 ROUTEINFO_OBJECTS = \
 		main.o
@@ -48,31 +36,14 @@ MDATA_OBJECTS = \
 		sunos.o \
 		unix_common.o
 
-custr.o :	CFLAGS += -I$(STRINGS_DIR)
-mdata_%.o :	CFLAGS += -I$(DOCKER_DIR)/mdata-client -D__HAVE_BOOLEAN_T
-
 OBJECTS = \
 		$(MDATA_OBJECTS:%=mdata_%) \
 		custr.o \
 		json-nvlist.o \
 		main.o
 
-json-nvlist.o :	CFLAGS += -I$(DOCKER_DIR)/json-nvlist -I$(STRINGS_DIR)
-
 LIBS =		-lnvpair -lnsl -lsocket -lsmbios
 
-CTFCONVERT =	/usr/bin/true
-CTFMERGE =	/usr/bin/true
-
-CC=$(GCC)
-CFLAGS +=	-Wall -Wextra -Werror -D__HAVE_BOOLEAN_T -m32
-CSTYLE =	../../tools/cstyle
-
-COMPILE_C =	$(CC) $(CPPFLAGS) $(LDFLAGS) $(CFLAGS) -c -o $@ $<
-
-INSTALL_PROG =	mkdir -p $(@D) && rm -f $@ && cp $^ $@ && \
-		chmod 755 $@ && touch $@
-
 .PHONY: all
 all: $(PROGRAM)
 
@@ -82,35 +53,25 @@ check: $(ROUTEINFO_OBJECTS:%.o=%.check)
 %.check: %.c
 	$(CSTYLE) -cPp $<
 
-lint:
-	/usr/bin/true
-
 clean:
 	rm -f $(OBJECTS)
 	rm -f $(PROGRAM)
 
-#
-# Compilation and linking targets
-#
 $(PROGRAM): $(OBJECTS)
-	$(CC) $(CPPFLAGS) $(LDFLAGS) $(CFLAGS) -o $@ $(OBJECTS) $(LIBS)
-	$(CTFMERGE) -L VERSION -o $@ $(OBJECTS)
+	$(LINK.c) $^ $(LIBS)
+	$(CTFCONVERT) -L VERSION $@
 
 %.o: $(STRINGS_DIR)/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 mdata_%.o: $(DOCKER_DIR)/mdata-client/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 mdata_%.o: $(DOCKER_DIR)/mdata-client/plat/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 %.o: $(DOCKER_DIR)/json-nvlist/%.c
-	$(COMPILE_C)
-	$(CTFCONVERT) -L VERSION $@
+	$(COMPILE.c) $^
 
 #
 # Installation
@@ -120,3 +81,5 @@ install: $(DESTDIR)/usr/lib/brand/lx/$(PROGRAM)
 
 $(DESTDIR)/usr/lib/brand/lx/$(PROGRAM): $(PROGRAM)
 	$(INSTALL_PROG)
+
+include		$(BASE)/Makefile.targ
diff --git a/src/vmunbundle.c b/src/vmunbundle.c
index 86f181f5..53350389 100644
--- a/src/vmunbundle.c
+++ b/src/vmunbundle.c
@@ -1,3 +1,7 @@
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
 #include <errno.h>
 #include <signal.h>
 #include <stdio.h>
@@ -36,7 +40,7 @@ size_t zfs_receive(int fd, const char * snapshot);
 ssize_t
 write_bytes(int fd, const void *buf, size_t bytes)
 {
-    ssize_t numwritten;
+    ssize_t numwritten = 0;
     void * ptr;
     size_t remain;
 
@@ -61,7 +65,7 @@ ssize_t
 read_bytes(int fd, char *data, size_t bytes)
 {
     size_t remain;
-    ssize_t numread;
+    ssize_t numread = 0;
     ssize_t total_read = 0;
     char *ptr;
 
@@ -314,7 +318,7 @@ main(int argc, char *argv[])
 {
     header_t header;
     char * json = NULL;
-    enum {JSON = 0, DATASET} mode;
+    enum {JSON = 0, DATASET} mode = JSON;
     int res;
 
     progname = argv[0];
-- 
2.21.0

