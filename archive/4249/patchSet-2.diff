From 58fb5c44f56229ed07adfe5224723ba600581b9a Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Fri, 15 Jun 2018 19:08:09 +0000
Subject: [PATCH] MANTA-3768 add SAPI property to disable/enable snaplinks per
 account

---
 etc/config.coal.json           |  1 +
 lib/common.js                  | 25 ++++++++++++++++++++++++-
 lib/errors.js                  | 10 ++++++++++
 lib/link.js                    |  1 +
 main.js                        | 13 +++++++++++++
 sapi_manifests/muskie/template |  5 +++++
 tools/jsl.node.conf            |  1 +
 7 files changed, 55 insertions(+), 1 deletion(-)

diff --git a/etc/config.coal.json b/etc/config.coal.json
index 9b075c4..dff7e7d 100644
--- a/etc/config.coal.json
+++ b/etc/config.coal.json
@@ -27,6 +27,7 @@
         "maxTranslationCacheSize": 1000,
         "maxTranslationCacheAgeMs": 300
     },
+    "accountsSnaplinksDisabled": [],
     "moray": {
         "morayOptions": {
             "srvDomain": "electric-moray.coal.joyent.us",
diff --git a/lib/common.js b/lib/common.js
index 36a1645..11b7dcd 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -324,6 +324,21 @@ function ensureEntryExists(req, res, next) {
 }
 
 
+function ensureSnaplinksNotDisabled(req, res, next) {
+    for (var i = 0; i < req.accountsSnaplinksDisabled.length; i++) {
+        var account = req.accountsSnaplinksDisabled[i];
+        assert.string(account.uuid, 'account.uuid');
+        assert.string(req.caller.account.uuid, 'req.caller.account.uuid');
+
+        if (account.uuid === req.caller.account.uuid) {
+            next(new SnaplinksDisabledError());
+            return;
+        }
+    }
+    next();
+}
+
+
 function ensureNotDirectory(req, res, next) {
     if (!req.metadata) {
         next(new DirectoryOperationError(req));
@@ -894,6 +909,10 @@ module.exports = {
         return (ensureEntryExists);
     },
 
+    ensureSnaplinksNotDisabledHandler: function () {
+        return (ensureSnaplinksNotDisabled);
+    },
+
     ensureNotDirectoryHandler: function () {
         return (ensureNotDirectory);
     },
@@ -928,6 +947,8 @@ module.exports = {
         assert.object(options.multipartUpload, 'options.multipartUpload');
         assert.number(options.multipartUpload.prefixDirLen,
             'options.multipartUpload.prefixDirLen');
+        assert.arrayOfObject(options.accountsSnaplinksDisabled,
+            'options.accountsSnaplinksDisabled');
 
         function setup(req, res, next) {
             req.config = options;
@@ -959,8 +980,10 @@ module.exports = {
             req.msk_defaults = {
                 maxStreamingSize: options.storage.defaultMaxStreamingSizeMB *
                     1024 * 1024,
-                mpuPrefixDirLen: options.multipartUpload.prefixDirLen
+                mpuPrefixDirLen: options.multipartUpload.prefixDirLen,
+
             };
+            req.accountsSnaplinksDisabled = options.accountsSnaplinksDisabled
 
             var _opts = {
                 account: req.owner.account,
diff --git a/lib/errors.js b/lib/errors.js
index a542cda..28ccd51 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -589,6 +589,16 @@ function ServiceUnavailableError(req, cause) {
 util.inherits(ServiceUnavailableError, MuskieError);
 
 
+function SnaplinksDisabledError() {
+    MuskieError.call(this, {
+        restCode: 'SnaplinksDisabledError',
+        statusCode: 403,
+        message: 'snaplinks have been disabled for this account'
+    });
+}
+util.inherits(SnaplinksDisabledError, MuskieError);
+
+
 function SSLRequiredError() {
     MuskieError.call(this, {
         restCode: 'SecureTransportRequired',
diff --git a/lib/link.js b/lib/link.js
index 9c3315d..821963d 100644
--- a/lib/link.js
+++ b/lib/link.js
@@ -221,6 +221,7 @@ module.exports = {
 
     putLinkHandler: function () {
         var chain = [
+            common.ensureSnaplinksNotDisabledHandler(),
             common.ensureNotRootHandler(),
             common.ensureNotDirectoryHandler(),
             common.ensureParentHandler(),
diff --git a/main.js b/main.js
index 4677e36..84bbae9 100644
--- a/main.js
+++ b/main.js
@@ -191,6 +191,19 @@ function configure(appName, opts, dtProbes) {
         DEF_MAX_STREAMING_SIZE_MB, cfg.storage, cfg.log,
         function (x) { return (x >= 1); });
 
+    if (!cfg.hasOwnProperty('accountsSnaplinksDisabled')) {
+        cfg.accountsSnaplinksDisabled = [];
+    } else {
+        assert.arrayOfObject(cfg.accountsSnaplinksDisabled,
+            'cfg.accountsSnaplinksDisabled');
+        for (var i = 0; i < cfg.accountsSnaplinksDisabled.length; i++) {
+            var uuid = cfg.accountsSnaplinksDisabled[i].uuid;
+
+            assert.uuid(uuid, 'cfg.accountsSnaplinksDisabled[i].uuid');
+            cfg.log.info('snaplinks disabled for uuid ' + uuid);
+        }
+    }
+
     if (!cfg.hasOwnProperty('multipartUpload')) {
         cfg.multipartUpload = {};
     }
diff --git a/sapi_manifests/muskie/template b/sapi_manifests/muskie/template
index 43083bb..1d5827f 100644
--- a/sapi_manifests/muskie/template
+++ b/sapi_manifests/muskie/template
@@ -38,6 +38,11 @@
     "maxTranslationCacheSize": 1000,
     "maxTranslationCacheAgeMs": 300000
   },
+  "accountsSnaplinksDisabled": [ {{#ACCOUNTS_SNAPLINKS_DISABLED}}
+    {
+      "uuid": "{{uuid}}"
+    }{{^last}},{{/last}}{{/ACCOUNTS_SNAPLINKS_DISABLED}}
+  ],
   "moray": {
     "morayOptions": {
         "srvDomain": "{{ELECTRIC_MORAY}}",
diff --git a/tools/jsl.node.conf b/tools/jsl.node.conf
index 293bc4c..eac7168 100644
--- a/tools/jsl.node.conf
+++ b/tools/jsl.node.conf
@@ -184,6 +184,7 @@
 +define RootDirectoryError
 +define ServiceUnavailableError
 +define SharksExhaustedError
++define SnaplinksDisabledError
 +define SSLRequiredError
 +define ThrottledError
 +define UploadAbandonedError
-- 
2.21.0

