{"project":"joyent/illumos-joyent","branch":"master","id":"I7183b77050b5624048feeed2711a746372658d1f","number":"2697","subject":"OS-6366 lx: need support for PR_GET_NAME Reviewed by: Dan McDonald \u003cdanmcd@joyent.com\u003e Reviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e Reviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e Reviewed by: Robert Mustacchi \u003crm@joyent.com\u003e Approved by:","owner":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"url":"https://cr.joyent.us/2697","commitMessage":"OS-6366 lx: need support for PR_GET_NAME\nReviewed by: Dan McDonald \u003cdanmcd@joyent.com\u003e\nReviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\nReviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e\nReviewed by: Robert Mustacchi \u003crm@joyent.com\u003e\nApproved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\n","createdOn":1506979065,"lastUpdated":1507214739,"open":false,"status":"MERGED","comments":[{"timestamp":1506979065,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 1."},{"timestamp":1506979730,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 1:\n\n(2 comments)"},{"timestamp":1506980036,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 1:\n\n(2 comments)"},{"timestamp":1506980568,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\n(3 comments)\n\nIn addition to Patrick\u0027s comments, I had a few additional things."},{"timestamp":1506984093,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1:\n\n(7 comments)"},{"timestamp":1506988015,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 1:\n\n(6 comments)\n\nSince this is LX-only, my normal suggestion about putting test.c into usr/src/test can wait until the fully-native version shows up."},{"timestamp":1507036941,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\nJust a couple of comments on the other feedback.\n1) I think using copyinstr will be problematic since it will error instead of truncate if the string is too long.\n2) We already have a test repo for lx tests (called lx-tests) that are expected to be built on Linux and run on either Linux or lx. We use that for our extended tests that we write specifically to validate lx behavior."},{"timestamp":1507039839,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 1:\n\n\u003e 2) We already have a test repo for lx tests (called lx-tests) that\n \u003e are expected to be built on Linux and run on either Linux or lx.\n\nCool!  Can the test.c on the bug report be somehow dropped in here?"},{"timestamp":1507040093,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1:\n\n\u003e 1) I think using copyinstr will be problematic since it will error\n \u003e instead of truncate if the string is too long.\n\ncopyinstr will copy in all the bytes before it fails if the buffer isn\u0027t sufficiently sized. It will return ENAMETOOLONG. So I think it is actually ok to do this, but we just want to handle this along side and in a different fashion from it returning EFAULT."},{"timestamp":1507041406,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 1:\n\n(11 comments)"},{"timestamp":1507043175,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 2."},{"timestamp":1507043608,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 2:\n\n(3 comments)"},{"timestamp":1507046549,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 2:\n\n(2 comments)"},{"timestamp":1507050929,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1507055573,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 3."},{"timestamp":1507056115,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 3: Code-Review+1"},{"timestamp":1507056291,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 3: Code-Review+1"},{"timestamp":1507068681,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 3:\n\n(1 comment)"},{"timestamp":1507070672,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 3:\n\n(1 comment)"},{"timestamp":1507082649,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 4."},{"timestamp":1507090337,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 4: Code-Review+1"},{"timestamp":1507119316,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 4: Code-Review+1"},{"timestamp":1507126302,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 4: Code-Review+1\n\n(2 comments)\n\nI have a few minor questions on the behavior with the mdb bits. I\u0027m not sure they\u0027re worth changing, but thought I\u0027d mention them just in case."},{"timestamp":1507128829,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 4:\n\n(2 comments)"},{"timestamp":1507129451,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 4:\n\n(8 comments)"},{"timestamp":1507129471,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 4: Code-Review-1"},{"timestamp":1507129655,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 4: -Code-Review\n\n(1 comment)"},{"timestamp":1507130635,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 4:\n\n(2 comments)"},{"timestamp":1507131554,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 5."},{"timestamp":1507131825,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 6."},{"timestamp":1507132260,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 6: -Code-Review\n\n(1 comment)"},{"timestamp":1507133671,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 7."},{"timestamp":1507134938,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1507136163,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1507145254,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1507155105,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 8."},{"timestamp":1507158473,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 8: Code-Review+1"},{"timestamp":1507165066,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 8: Code-Review+1"},{"timestamp":1507165444,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 8: Code-Review+1"},{"timestamp":1507205548,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 8: Code-Review+1"},{"timestamp":1507213138,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 9: Commit message was updated."},{"timestamp":1507214409,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 9: Integration-Approval+1"},{"timestamp":1507214518,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 10: Commit message was updated."},{"timestamp":1507214561,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 11: Patch Set 10 was rebased"},{"timestamp":1507214739,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Jason King"}],"currentPatchSet":{"number":"11","revision":"3df01e00bc5ef3f882d18e8188e4165831f8b694","parents":["6dda4c2c4460e45b80f917d3676f5ce39e479cac"],"ref":"refs/changes/97/2697/11","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507214561,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507158473,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165066,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165444,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507205548,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1507214409,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1507214739,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":12,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":185,"sizeDeletions":-19},"patchSets":[{"number":"1","revision":"3b0d568a0004b2df06c1493a3ef0245b9fe60476","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/1","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1506979065,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":665,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"semi-related question: Do we have a strategy for constants like this differing between core dumps?  Maybe it\u0027s something we should think about in the long term."},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":665,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"I\u0027m not aware of anything -- is there even any mechanism for recording such information (#define values) in a kernel crash dump?\n\nFor other similar instances I\u0027ve encountered, the field is usually embedded within another stucture (i.e. struct XX { ...; char foo[NN]; } ) so that the array size can be read via CTF, however that\u0027s not an option here I don\u0027t think since we explicitly didn\u0027t want to expand the size of kthread_t that much (under the assumption that names won\u0027t be used with most threads, so it\u0027d just be wasted space)."},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1014,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"While the patient is open, can you s/Solaris/illumos/g on at least this file?  (\"Too frivolous\" is an acceptable answer, BTW.)"},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1014,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1046,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"It seems like our goal is to just get a string out and not necessarily the actual contents of the buffer (hence using namelen - 1). Maybe mdb_readstr() is a better fit (even if you\u0027ve implemented most of this anyways)?"},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1046,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1047,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"If you choose to not go Robert\u0027s mdb_readstr() route, this MAY be a place to put Patrick\u0027s different-versions/different-lengths checking."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":0,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Is it possible to add the lx changes under a separate commit? This will make it easier for us to upstream / work with this."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":143,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Note, Linux always ensures that the LX_PR_SET_NAME_NAMELEN buffer is null terminated. In other words that byte 15 is 0.  If we\u0027re truncating, this would lead a user to end up with a non-null terminated string which could cause odd program behavior."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":147,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"This should be performed under the protection of p_lock to synchronize against thread_setname."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":147,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":155,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I do not believe we should increase the buffer size by one. If you look at the Linux code, it will actually only ever copy in 15 bytes and ensure that the 16th byte is null terminated. It would be incorrect to have the extra byte to assign."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":158,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I don\u0027t believe that copyin here is correct. A user does not need to supply a LX_PR_SET_NAME_NAMELEN buffer to PR_SET_NAME. I suspect that we need to use copyinstr() here. or example, I should be able to give you a buffer that only is as large as the size I need plus a nul terminator."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":181,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Two PR_SET_NAME operations on tid\u003d1 could theoretically race since p_lock is acquired/dropped twice.  It\u0027s probably a possibility so narrow and mild that we don\u0027t care about it, but perhaps it should be mentioned in a comment."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":181,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"It\u0027d be nice if we can structure this such that we don\u0027t have data out of sync. That\u0027ll be a real confusing thing for users."},{"file":"usr/src/uts/common/disp/thread.c","line":2241,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Is this XXX meant to be lingering in the CR?"},{"file":"usr/src/uts/common/disp/thread.c","line":2241,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"That was a holdover after I had to reimport all of this after git decided to go into quisinart mode with the branches on the instance I was working with.  It\u0027ll be reworked just to note that this occurs."},{"file":"usr/src/uts/common/disp/thread.c","line":2243,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I believe it\u0027s worth having a conversation somewhere about why the design was such that we have we only allocate a single buffer and keep it around and overwrite the existing buffer, etc."},{"file":"usr/src/uts/common/disp/thread.c","line":2243,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"See my thread.h comment, e.g."},{"file":"usr/src/uts/common/disp/thread.c","line":2243,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"I\u0027ll add some commentary here explaining that reusing an already allocated buffer makes it easier for things like dtrace to access it (since the value is always either NULL or the address of the buffer allocated once in the lifetime of the kthread_t)."},{"file":"usr/src/uts/common/disp/thread.c","line":2244,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I guess the assumption here is that any permission checking must be done by the caller. Maybe the comment here should make that explicit."},{"file":"usr/src/uts/common/disp/thread.c","line":2244,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"I may be getting ahead of myself, but what is the native-version going to use to get here?"},{"file":"usr/src/uts/common/disp/thread.c","line":2244,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"In the current design, there will be pthread_{get,set}name_np() functions (as well as being able to set a name in pthread_attr_t) to manipulate names.  Those functions then read/write a new field in lwpsinfo_t (added at the end of the struct) in /proc/PID/lwp/TID/lwpsinfo to do the change (though the latter is explicitly left as an implementation detail)."},{"file":"usr/src/uts/common/disp/thread.c","line":2244,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/uts/common/disp/thread.c","line":2270,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"It\u0027s generally good style to use curly braces with an if/else statement, even though each block is only a single line."},{"file":"usr/src/uts/common/disp/thread.c","line":2270,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"I thought one-line actions didn\u0027t need \u0027em, but ANY multi-line action brought the braces in."},{"file":"usr/src/uts/common/disp/thread.c","line":2270,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"My understanding is that they\u0027re optional for single lines.  However, I don\u0027t feel strongly about leaving them out either, so I can put them in."},{"file":"usr/src/uts/common/disp/thread.c","line":2274,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"You could move the do_free into the correct clause above and get rid of re-testing buf !\u003d NULL here."},{"file":"usr/src/uts/common/disp/thread.c","line":2274,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"I forgot kmem_free isn\u0027t as constrained about where it can be used as opposed to kmem_alloc(..., KM_SLEEP) :).  I\u0027ll move the kmem_free up."},{"file":"usr/src/uts/common/sys/thread.h","line":355,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"I take it that the extra 24-28 bytes of just making this \"char t_name[THREAD_NAME_MAX]\" is too much for thread_t?  Or are you solving some other problem by indirecting the thread\u0027s name?"},{"file":"usr/src/uts/common/sys/thread.h","line":355,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Pretty much just assuming most threads won\u0027t have a name, so less overhead by not embedding the space into kthread_t."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":11,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":44,"deletions":-1},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":2,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":29,"deletions":-7},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":48,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":140,"sizeDeletions":-12},{"number":"2","revision":"a3cb0ff9f75ebdf23c86a483ebee5574223c2471","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/2","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507043175,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1047,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So, if this returns -1 after copying some data into the buffer should we really be returning to the user without anything here? I guess while we don\u0027t need the size per se, shouldn\u0027t we still care about the return value if it\u0027s -1?"},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1047,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"What scant information exists on mdb_readstr doesn\u0027t really provide any guidance surrounding error conditions (trying to peel away all the indirection present hasn\u0027t provided any better insight so far) -- might there be partial content worth showing even in the event of an error? Should we just return an empty string \u0026 warn?  warn \u0026 show any partial contents?"},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":154,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Linux does use a copyout here for this, fwiw."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":194,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"If we\u0027re not going to do anything about Patrick\u0027s comment, then we should at least leave a comment about this."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":194,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"I\u0027d still like to get a better feel from everyone about how bad they feel it\u0027d be if thread_setname() required the caller to hold the process lock prior to calling it (even though it would mean a blocking allocation could happen while the lock is held) before a decision is made here -- if that happens, the concerns are mooted, but if not and it stays, I do plan to add a comment."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":194,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"After a bit more thinking and discussion, I think with the current change to lines 195/196 should be ok, though I will add a comment to the code explaining as such -- on Linux, there are two paths to setting a thread\u0027s name -- prctl(2) and writing to /proc.  AFAIK, this means there is no guarantee from the Linux kernel that a PR_SET_NAME immediately followed by a PR_GET_NAME will read the same value -- something could come inbetween the two calls and change it via /proc on Linux.  As long as we set u_comm/u_psargs with the \u0027current\u0027 name when we hold the lock, this should be no worse or more racy than what Linux does."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":11,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":44,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":2,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":51,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":166,"sizeDeletions":-19},{"number":"3","revision":"22e19b7f04ce76cb16de8e29d2e98db14b4e4884","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/3","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507055573,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507056115,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507056291,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"comments":[{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1053,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"This having to zero it just makes me wonder if we should instead just be returning a boolean_t around whether or not we could successfully fill in any data about the name or not."},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1053,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"It probably depends on what we want the behavior of the consumers of this to be.  Currently that\u0027s ::ps -l and ::threadlist.  The current implementation just skip any name handling if strlen(name) \u003d\u003d 0 -- that way you don\u0027t see things like \u0027NAME: \\n\u0027 or \u0027foo_() []\\n\u0027 all over the output, but only include the info (and labeling) when there\u0027s something to display.  This way it can still deal with dumps that predate this feature without breaking or being noisy (having fixed two mdb issues so far related to struct changing breaking thoth, I wanted to be mindful of this).\n\nI\u0027ve sort of given up trying to figure out what assurances on error it gives because of all the indirection used to locate the code the does the actual work of mdb_readstr() and instead just make no assumptions.  The output buffer is zeroed before it starts, and if mdb_readstr() fails part way, we can still output some partial data which may be useful w/ a warning, and if it fails and never touches the output buffer, it\u0027ll at least have a warning, but return an empty buffer."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":11,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":50,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":2,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":181,"sizeDeletions":-19},{"number":"4","revision":"0ebf2192c92bd1a51016860b2f28b40c8ef2b935","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/4","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507082649,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507119316,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"-1","grantedOn":1507129471,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507090337,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"comments":[{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1054,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"If we have a failure, is that really worth trying to show the user?"},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1054,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Maybe? :)  Since it seems annoyingly difficult to determine what the failure modes for mdb_readstr() are, it\u0027s hard to say one way or the other (or even if it\u0027s possible to get partial contents in the event of a failure)."},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1057,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"If we have an explicitly set name that is zero characters, should we not be showing that?"},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1057,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"With the current code, since kthread_t.t_name never goes away after being allocated (until kthread_t is freed) to simplify access by stuff like DTrace, that is how you\u0027d clear the name after setting it -- it seems like that wouldn\u0027t be too interesting to show (at least via ::ps -l or ::threadlist), though using it in practice might show otherwise."},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","line":1057,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"I think equating a zero-length name with no name being set at all is reasonable. (Unless there\u0027s documentation in POSIX, Linux, or the BSDs which suggests otherwise.)\n\nIf we go with that behavior, it should be consistent across the board."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":146,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"The \u0027ttoproc()\u0027 macro seems to be used more often than a direct \u0027t_procp\u0027 reference."},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","line":166,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Same \u0027ttoproc\u0027 comment"},{"file":"usr/src/uts/common/disp/thread.c","line":2263,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"If a 0-length name is considered indistinguishable from no name set at all (which seems reasonable to me), perhaps this check should include \"|| name[0] \u003d\u003d \u0027\\0\u0027\"?"},{"file":"usr/src/uts/common/disp/thread.c","line":2263,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Do you mean \u0027\u0026\u0026 name[0] !\u003d \u0027\\0\u0027\u0027?"},{"file":"usr/src/uts/common/disp/thread.c","line":2268,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"ttoproc()"},{"file":"usr/src/uts/common/disp/thread.c","line":2277,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"If \u0027name \u003d\u003d NULL\u0027, this will kmem_free() the still-NULL buf.  It might be clearer if this portion checked \u0027buf !\u003d NULL\u0027 and performed the kmem_free() alongside the bzero() case."},{"file":"usr/src/uts/common/disp/thread.c","line":2277,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"That\u0027s a good catch. kmem_free(NULL, non-zero) can corrupt the system."},{"file":"usr/src/uts/common/disp/thread.c","line":2277,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Doh! The first revision had this right, then I messed it up."},{"file":"usr/src/uts/common/sys/thread.h","line":613,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"s/NUL/terminating NUL/?"},{"file":"usr/src/uts/common/sys/thread.h","line":613,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Parens unnecessary for a bare integer value?"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":2,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":183,"sizeDeletions":-19},{"number":"5","revision":"f16a61fbb228396e50fb4b1ef3384bf280dba067","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/5","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507131554,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"-1","grantedOn":1507129471,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":2,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":54,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":185,"sizeDeletions":-19},{"number":"6","revision":"3e7756bd205b1a38eb36bf78d10d72e095da77ae","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/6","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507131825,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/disp/thread.c","line":2279,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"If you switched \u0027name !\u003d NULL\u0027 to \u0027buf !\u003d NULL\u0027, then you could nest the kmem_free under that branch and benefit from the extra strlen() \u003d\u003d 0 check done above."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":54,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":187,"sizeDeletions":-19},{"number":"7","revision":"dc7f2155d3d998bbf6e25647fb3719c7c0bff209","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/7","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507133671,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507136163,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507145254,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507134938,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":185,"sizeDeletions":-19},{"number":"8","revision":"583a467ec3ce3ae8e8410faca59743964d3c6efd","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/8","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507155105,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165444,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507205548,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507158473,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165066,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":185,"sizeDeletions":-19},{"number":"9","revision":"8796fc1354064bd04f739be766fd6f356215507c","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/9","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507213138,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165444,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507205548,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1507214409,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507158473,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165066,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":185,"sizeDeletions":-19},{"number":"10","revision":"7183b77050b5624048feeed2711a746372658d1f","parents":["914d7a738527f83b1e811b066563842839f125a7"],"ref":"refs/changes/97/2697/10","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507214518,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165444,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507205548,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1507214409,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507158473,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165066,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":12,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":185,"sizeDeletions":-19},{"number":"11","revision":"3df01e00bc5ef3f882d18e8188e4165831f8b694","parents":["6dda4c2c4460e45b80f917d3676f5ce39e479cac"],"ref":"refs/changes/97/2697/11","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1507214561,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165444,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507205548,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1507214409,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507158473,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"SUBM","value":"1","grantedOn":1507214739,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507165066,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":12,"deletions":0},{"file":"usr/src/cmd/mdb/common/modules/genunix/genunix.c","type":"MODIFIED","insertions":10,"deletions":-3},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.c","type":"MODIFIED","insertions":53,"deletions":-2},{"file":"usr/src/cmd/mdb/common/modules/genunix/thread.h","type":"MODIFIED","insertions":4,"deletions":0},{"file":"usr/src/uts/common/brand/lx/syscall/lx_prctl.c","type":"MODIFIED","insertions":60,"deletions":-13},{"file":"usr/src/uts/common/disp/thread.c","type":"MODIFIED","insertions":52,"deletions":-1},{"file":"usr/src/uts/common/sys/thread.h","type":"MODIFIED","insertions":6,"deletions":0}],"sizeInsertions":185,"sizeDeletions":-19}],"allReviewers":[{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}]}