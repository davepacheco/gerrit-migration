From 092778ac6c6df31313ba42cfa647f64e35645fde Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Tue, 3 Oct 2017 02:23:38 +0000
Subject: [PATCH] MANTA-3440 Add support for Content-Encoding for objects

---
 docs/index.md    |  5 +++++
 lib/common.js    |  1 +
 lib/obj.js       |  4 ++++
 package.json     |  2 +-
 test/obj.test.js | 53 ++++++++++++++++++++++++++++++++++++++++++++++++
 5 files changed, 64 insertions(+), 1 deletion(-)

diff --git a/docs/index.md b/docs/index.md
index c80befb..6cf32bb 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -359,6 +359,11 @@ the content uploaded matches the value of the header.  Even if you do not includ
 one, successful responses will include a `computed-md5` header. This is the MD5
 checksum that Manta calculated when ingesting your object.
 
+You can specify a `Content-Encoding` header; if you do, GetObject and metadata
+read operations, like `minfo`, will include this header in their corresponding
+responses. This is allows clients to, for example, compress manta objects and then
+decompress them with the appropriate algorithm without maintaining extra state.
+
 The service is able to provide test/set semantics for you if you use HTTP conditional
 request semantics (e.g., `If-Match` or `If-Modified-Since`).
 
diff --git a/lib/common.js b/lib/common.js
index 5688a80..0b31216 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -219,6 +219,7 @@ function createMetadata(req, type, cb) {
         break;
 
     case 'object':
+        md.contentEncoding = req.header('content-encoding');
         md.contentLength = req._size !== undefined ?
             req._size : prev.contentLength;
         md.contentMD5 = req._contentMD5 || prev.contentMD5;
diff --git a/lib/obj.js b/lib/obj.js
index 23082b5..222809b 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -626,6 +626,7 @@ function saveMetadata(req, res, next) {
         log.debug({
             options: opts
         }, 'saveMetadata: entered');
+
         req.moray.putMetadata(opts, function (err2) {
             req.sharks = null;
             if (err2) {
@@ -708,6 +709,7 @@ function streamFromSharks(req, res, next) {
     if (md.contentLength === 0 || req.method === 'HEAD') {
         log.debug('streamFromSharks: HEAD || zero-byte object');
         res.header('Durability-Level', req.metadata.sharks.length);
+        res.header('Content-Encoding', req.metadata.contentEncoding);
         res.header('Content-Length', md.contentLength);
         res.header('Content-MD5', md.contentMD5);
         res.header('Content-Type', md.contentType);
@@ -732,6 +734,8 @@ function streamFromSharks(req, res, next) {
         }
 
         res.header('Content-Length', sh['content-length']);
+
+        res.header('Content-Encoding', req.metadata.contentEncoding);
         res.header('Durability-Level', req.metadata.sharks.length);
 
         req._size = sh['content-length'];
diff --git a/package.json b/package.json
index a82fad1..d44d805 100644
--- a/package.json
+++ b/package.json
@@ -26,7 +26,7 @@
         "kang": "1.1.0",
         "keep-alive-agent": "0.0.1",
         "keyapi": "git+https://github.com/joyent/keyapi.git#e14b3d58",
-        "libmanta": "git+https://github.com/joyent/node-libmanta.git#master",
+        "libmanta": "file:../node-libmanta",
         "libuuid": "0.1.2",
         "lru-cache": "2.3.1",
         "lstream": "0.0.4",
diff --git a/test/obj.test.js b/test/obj.test.js
index c4863a1..ba424d9 100644
--- a/test/obj.test.js
+++ b/test/obj.test.js
@@ -14,6 +14,7 @@ var MemoryStream = require('stream').PassThrough;
 var restify = require('restify');
 var uuid = require('node-uuid');
 var vasync = require('vasync');
+var util = require('util');
 
 if (require.cache[__dirname + '/helper.js'])
     delete require.cache[__dirname + '/helper.js'];
@@ -550,6 +551,58 @@ test('put unmodified-since fail', function (t) {
 });
 
 
+test('put check content-encoding info', function (t) {
+    var self = this;
+    var opts = {
+        headers: {
+            'content-encoding': 'gzip'
+        }
+    };
+
+    self.putObject(t, opts, function (_, headers) {
+        self.client.info(self.key, function (err2, info, res) {
+            t.ifError(err2);
+            if (!err2) {
+                t.ok(res && res.headers);
+                t.ok(res.headers['content-encoding']);
+                t.equal(res.headers['content-encoding'], 'gzip');
+            }
+            t.end();
+        });
+    });
+});
+
+
+test('put check content-encoding get', function (t) {
+    var self = this;
+    var opts = {
+        headers: {
+            'content-encoding': 'gzip'
+        }
+    };
+
+    self.putObject(t, opts, function (_, headers) {
+        self.client.get(self.key, function (err, stream, res) {
+            t.ifError(err);
+            if (!err) {
+                t.ok(res && res.headers, 'get response missing headers');
+                t.ok(res.headers['content-encoding'],
+                    'missing content-encoding');
+                t.equal(res.headers['content-encoding'], 'gzip');
+            }
+            if (stream) {
+                stream.once('end', function () {
+                    t.end();
+                });
+                stream.resume();
+            } else {
+                t.end();
+            }
+        });
+    });
+});
+
+
 test('put bad content-md5', function (t) {
     var opts = {
         md5: 'bogus',
-- 
2.17.2 (Apple Git-113)

