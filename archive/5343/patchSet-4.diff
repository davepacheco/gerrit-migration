From 242579f348de531ef5c1e0f0a8ad1cf3da1d9c81 Mon Sep 17 00:00:00 2001
From: Rui Loura <rui@joyent.com>
Date: Thu, 10 Jan 2019 17:31:35 +0000
Subject: [PATCH] TRITON-877 admin NIC functions in net-agent need to be
 factored out

---
 dummy/net-agent.js | 24 ++++++++++++------------
 lib/server-fsm.js  | 23 ++++++-----------------
 package.json       |  3 ++-
 3 files changed, 20 insertions(+), 30 deletions(-)

diff --git a/dummy/net-agent.js b/dummy/net-agent.js
index 332644a..de61520 100755
--- a/dummy/net-agent.js
+++ b/dummy/net-agent.js
@@ -23,6 +23,7 @@ var bunyan = require('bunyan');
 var bunyanSerializers = require('sdc-bunyan-serializers');
 var DummyVmadm = require('vmadm/lib/index.dummy_vminfod');
 var mockcloud_common = require('triton-mockcloud-common');
+var netconfig = require('triton-netconfig');
 var uuidv4 = require('uuid/v4');
 var vasync = require('vasync');
 
@@ -67,23 +68,22 @@ function loadSysinfo(server_uuid, callback) {
     });
 }
 
-// TODO: should use common method in backends to get rackaware admin IP.
-// For now, just copied this from cn-agent.
 function findZoneAdminIp(ctx, callback) {
     mdataGet('sdc:nics', function _onMdata(err, nicsData) {
         var idx;
-        var nic;
-        var nics = JSON.parse(nicsData.toString());
-
-        for (idx = 0; idx < nics.length; idx++) {
-            nic = nics[idx];
-            if (nic.nic_tag === 'admin') {
-                ctx.bindIP = nic.ip;
-                break;
-            }
+        var nics;
+
+        try {
+            nics = JSON.parse(nicsData.toString());
+        } catch (e) {
+            callback(e);
+            return;
         }
 
-        assert.string(ctx.bindIP, 'ctx.bindIP');
+        if (!err) {
+            ctx.bindIP = netconfig.adminIpFromNicsArray(nics);        
+            assert.string(ctx.bindIP, 'ctx.bindIP');
+        }
 
         callback();
     });
diff --git a/lib/server-fsm.js b/lib/server-fsm.js
index 4214ec8..ae3cb4e 100644
--- a/lib/server-fsm.js
+++ b/lib/server-fsm.js
@@ -20,14 +20,9 @@ var mod_util = require('util');
 // --- Globals
 
 var VNIC_NAME_RE = /^([a-zA-Z0-9_]{0,31})[0-9]+$/;
-var ADMIN_TAG_RE = /^ADMIN(_RACK_[A-Z0-9_-]+)?$/;
 
 // --- Internal helpers
 
-function isAdminLike(tag) {
-    return ADMIN_TAG_RE.test(tag.toUpperCase());
-}
-
 function loadSysinfo(callback) {
     mod_forkexec.forkExecWait({
         argv: [ '/usr/bin/sysinfo' ],
@@ -158,7 +153,7 @@ ServerFSM.prototype._update = function (sysinfo) {
             self.nictags[tag] = name;
         });
 
-        watchNic(mac, self._fmtpnic(pnic));
+        watchNic(mac, self._fmtpnic(pnic, sysinfo));
     });
 
     mod_jsprim.forEachKey(vnics, function (name, vnic) {
@@ -186,7 +181,8 @@ ServerFSM.prototype._fmtstate = function (state) {
     return (state === 'up' ? 'running' : 'stopped');
 };
 
-ServerFSM.prototype._fmtpnic = function (nic) {
+ServerFSM.prototype._fmtpnic = function (nic, sysinfo) {
+    var admin_tag = sysinfo['Admin NIC Tag'] || 'admin';
     var o = {
         belongs_to_uuid: this.uuid,
         belongs_to_type: 'server',
@@ -199,16 +195,9 @@ ServerFSM.prototype._fmtpnic = function (nic) {
         o.ip = nic.ip4addr;
     }
 
-    /* If this smells like an admin NIC, try to set "nic_tag" */
-    var atags = nic['NIC Names'].filter(isAdminLike);
-    if (atags.length > 0) {
-        if (atags.length > 1) {
-            this.log.warn({
-                nic: nic, matching: atags
-            }, 'multiple candidate tags found for admin-like interface');
-        }
-
-        o.nic_tag = atags[0];
+    /* If this is an admin NIC, try to set "nic_tag" */
+    if (nic['NIC Names'].indexOf(admin_tag) !== -1) {
+        o.nic_tag = admin_tag;
         o.vlan_id = 0;
     }
 
diff --git a/package.json b/package.json
index 48fa455..048bea1 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "net-agent",
     "description": "Triton Network Agent",
-    "version": "2.2.1",
+    "version": "2.2.2",
     "author": "Joyent (joyent.com)",
     "private": true,
     "dependencies": {
@@ -17,6 +17,7 @@
         "sdc-bunyan-serializers": "git+https://github.com/joyent/sdc-bunyan-serializers.git#aefc119",
         "sdc-clients": "^10.5.0",
         "triton-mockcloud-common": "git+http://github.com/joyent/triton-mockcloud-common.git#master",
+        "triton-netconfig": "1.1.0",
         "uuid": "3.2.1",
         "vasync": "^1.6.4",
         "verror": "^1.6.1",
-- 
2.21.0

