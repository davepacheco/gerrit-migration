From 6938c7be9347caff4a34e2a56f37ff5dfe395239 Mon Sep 17 00:00:00 2001
From: Jerry Jelinek <jerry.jelinek@joyent.com>
Date: Thu, 15 Dec 2016 22:54:00 +0000
Subject: [PATCH] OS-5853 processes exiting or exited are missing from lx /proc

---
 .../uts/common/brand/lx/procfs/lx_prsubr.c    | 32 ++++++++++++++++---
 1 file changed, 28 insertions(+), 4 deletions(-)

diff --git a/usr/src/uts/common/brand/lx/procfs/lx_prsubr.c b/usr/src/uts/common/brand/lx/procfs/lx_prsubr.c
index 25824af541..7c9bb4af46 100644
--- a/usr/src/uts/common/brand/lx/procfs/lx_prsubr.c
+++ b/usr/src/uts/common/brand/lx/procfs/lx_prsubr.c
@@ -199,10 +199,12 @@ lxpr_lock_pid(lxpr_node_t *lxpnp, pid_t pid, zombok_t zombie_ok,
 	zone_t *zone = LXPTOZ(lxpnp);
 	proc_t *p;
 	kthread_t *t;
+	boolean_t locked;
 
 	ASSERT(!MUTEX_HELD(&pidlock));
 
 retry:
+	locked = B_TRUE;
 	if (pid == 0) {
 		/*
 		 * Present zsched as pid 0 for the zone.  There is no worry
@@ -215,7 +217,19 @@ retry:
 		sprlock_proc(p);
 	} else {
 		if (lx_lpid_lock(pid, zone, PRLOCK, &p, &t) != 0) {
-			return (NULL);
+			/* See sprtrylock_proc: can't lock exiting/zombie */
+			if (zombie_ok == ZOMB_OK &&
+			    lx_lpid_lock(pid, zone, NO_PRLOCK, &p, &t) == 0) {
+				if ((p->p_flag & SEXITING) ||
+				    p->p_stat == SZOMB) {
+					locked = B_FALSE;
+				} else {
+					mutex_exit(&p->p_lock);
+					return (NULL);
+				}
+			} else {
+				return (NULL);
+			}
 		}
 	}
 
@@ -241,14 +255,16 @@ retry:
 		if ((lwp = ttolwp(t)) == NULL ||
 		    (lwpd = lwptolxlwp(lwp)) == NULL ||
 		    lwpd->br_pid != pid) {
-			sprunlock(p);
+			if (locked)
+				sprunlock(p);
 			return (NULL);
 		}
 	}
 
 	if (zombie_ok == NO_ZOMB &&
 	    ((p->p_flag & SEXITING) || p->p_stat == SZOMB)) {
-		sprunlock(p);
+		if (locked)
+			sprunlock(p);
 		return (NULL);
 	}
 
@@ -271,7 +287,8 @@ retry:
 			 * up again in case the process exited for some reason.
 			 */
 			mp = &p->p_lock;
-			sprunprlock(p);
+			if (locked)
+				sprunprlock(p);
 			cv_wait(&pr_pid_cv[p->p_slot], mp);
 			mutex_exit(mp);
 			goto retry;
@@ -356,6 +373,13 @@ lxpr_fixpid(zone_t *zone, proc_t *p, pid_t *pidp, pid_t *ppidp)
 void
 lxpr_unlock(proc_t *p)
 {
+	/* lxpr_lock_pid() can't lock exiting/zombie processes */
+	if ((p->p_proc_flag & P_PR_LOCK) == 0 &&
+	    ((p->p_flag & SEXITING) || p->p_stat == SZOMB)) {
+		mutex_exit(&p->p_lock);
+		return;
+	}
+
 	ASSERT(p->p_proc_flag & P_PR_LOCK);
 	ASSERT(MUTEX_HELD(&p->p_lock));
 	ASSERT(!MUTEX_HELD(&pidlock));
-- 
2.21.0

