commit 1038e6eb11a8d9f83bc3ee6920cbf2b6ad6eaeb7 (refs/changes/20/1220/1)
Author: David Pacheco <dap@joyent.com>
Date:   2017-01-06T11:11:59-08:00 (2 years, 9 months ago)
    
    add bootstrap resolver CLI option and environment variable

diff --git a/lib/cmd.js b/lib/cmd.js
index 49266b6..c6b1756 100644
--- a/lib/cmd.js
+++ b/lib/cmd.js
@@ -27,7 +27,7 @@ var VError = require('verror');
 var fprintf = require('extsprintf').fprintf;
 
 /* Option string for options common to all commands */
-var commonOptStr = 'h:(host)p:(port)S:(service)v';
+var commonOptStr = 'b:(bootstrap-domain)h:(host)p:(port)S:(service)v';
 
 /*
  * Currently, we only export parseCliOptions().  If we find we need more (or
@@ -35,7 +35,7 @@ var commonOptStr = 'h:(host)p:(port)S:(service)v';
  * can provide higher or lower-level interfaces here.
  */
 exports.parseCliOptions = parseCliOptions;
-exports.commonUsage = '[-h host] [-p port] [-S service] [-v]';
+exports.commonUsage = '[-b domain] [-h host] [-p port] [-S service] [-v]';
 
 /*
  * Parse command-line options and common environment variables.  This function
@@ -66,7 +66,8 @@ exports.commonUsage = '[-h host] [-p port] [-S service] [-v]';
  *                  create a Moray client.  That will include some combination
  *                  of "host", "port", and "srvDomain" as well as an appropriate
  *                  bunyan logger, configured based on the environment and
- *                  presence of "-v" options.
+ *                  presence of "-v" options.  This may also contain
+ *                  cueballOptions.
  *
  *  onUsage         function to be invoked when there's a usage error
  *
@@ -131,6 +132,7 @@ function parseCliOptions(args) {
     parser = new getopt.BasicParser(commonOptStr + args.extraOptStr, args.argv);
     while ((option = parser.getopt()) !== undefined) {
         switch (option.option) {
+        case 'b':
         case 'h':
         case 'p':
         case 'S':
@@ -187,6 +189,14 @@ function parseCommonCliOption(errstream, options, option) {
     assert.object(option, 'option');
 
     switch (option.option) {
+    case 'b':
+        if (!options.hasOwnProperty('cueballOptions')) {
+            options.cueballOptions = {};
+        }
+
+        options.cueballOptions.resolvers = [ option.optarg ];
+        break;
+
     case 'h':
         options.host = option.optarg;
         break;
@@ -232,6 +242,20 @@ function parseCommonCliOption(errstream, options, option) {
  * error message to stderr and returns false.
  */
 function finalizeCliOptions(errstream, options, env) {
+    /*
+     * Independent of anything else, if the user specified a bootstrap domain in
+     * the environment and didn't specify it on the CLI, incorporate that here.
+     */
+    if ((!options.hasOwnProperty('cueballOptions') ||
+        !options.cueballOptions.hasOwnProperty('resolvers')) &&
+        env['MORAY_BOOTSTRAP_DOMAIN']) {
+        if (!options.hasOwnProperty('cueballOptions')) {
+            options.cueballOptions = {};
+        }
+
+        options.cueballOptions.resolvers = [ env['MORAY_BOOTSTRAP_DOMAIN'] ];
+    }
+
     if (options.srvDomain !== undefined) {
         /* The user specified -s/--service. */
         if (options.port !== undefined || options.host !== undefined) {
