commit 52997b383c4055f03b78f6f54bd5043ed830e548 (refs/changes/48/2548/1)
Author: Julien Gilli <julien.gilli@joyent.com>
Date:   2017-09-12T11:41:19-04:00 (2 years, 1 month ago)
    
    VOLAPI-78 creating volume with default size creates volume with incorrect size
    VOLAPI-79 volume reservations creation/deletion/listing doesn't work as expected

diff --git a/lib/endpoints/volume-reservations.js b/lib/endpoints/volume-reservations.js
index 541dcb7..31d039a 100644
--- a/lib/endpoints/volume-reservations.js
+++ b/lib/endpoints/volume-reservations.js
@@ -456,7 +456,7 @@ function removeVolumeReservation(req, res, next) {
         function checkExists(ctx, done) {
             reservationModels.getVolumeReservation(volResUuid,
                 function onVolResLoaded(getVolResErr, volResObject) {
-                    if (getVolResErr === undefined) {
+                    if (!getVolResErr) {
                         if (volResObject === undefined) {
                             err = new Error('No volume reservation with uuid ' +
                                 volResUuid);
@@ -475,7 +475,7 @@ function removeVolumeReservation(req, res, next) {
                         }
                     }
 
-                    next(err);
+                    done(err);
                 });
         },
         function checkOwner(ctx, done) {
@@ -483,7 +483,7 @@ function removeVolumeReservation(req, res, next) {
                 'ctx.volumeReservationObject');
 
             var checkOwnerErr;
-            var volResOwnerUuid = ctx.volumeReservation.value.owner_uuid;
+            var volResOwnerUuid = ctx.volumeReservationObject.value.owner_uuid;
 
             if (volResOwnerUuid !== expectedVolResOwnerUuid) {
                 checkOwnerErr = new Error('owner_uuid: '  +
@@ -649,8 +649,7 @@ function mount(config, server, applicationState) {
         name: 'RemoveVolumeReservation',
         version: '1.0.0'
     }, restify.queryParser(),
-        validateRemoveVolumeReservation, volumesMiddlewares.loadVolumeObject,
-        removeVolumeReservation, renderVolumeReservation,
+        validateRemoveVolumeReservation, removeVolumeReservation,
         renderingMiddlewares.makeSendResponseHandler({
             statusCode: 204
         }));
diff --git a/lib/endpoints/volumes.js b/lib/endpoints/volumes.js
index 769b29a..6420dd7 100644
--- a/lib/endpoints/volumes.js
+++ b/lib/endpoints/volumes.js
@@ -47,6 +47,7 @@ var VOLUME_TICKETS_SCOPE = 'nfs_volume';
 //
 //   callback(err, pkgs, count);
 //
+// pkgs is an array of package objects sorted by size, ascending.
 function getAllNfsSharedVolumesPackages(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.papiClient, 'opts.papiClient');
@@ -54,7 +55,8 @@ function getAllNfsSharedVolumesPackages(opts, callback) {
 
     opts.papiClient.list({}, {
         active: true,
-        name: 'sdc_volume_nfs*'
+        name: 'sdc_volume_nfs*',
+        sort: 'quota'
     }, function onListDone(err, pkgs, count) {
         // explicitly call callback with these args so we're clear about our API
         // rather than passing callback to papiClient.list.
@@ -420,6 +422,11 @@ function createVolume(req, res, next) {
                 }
 
                 if (requestedSize === undefined) {
+                    /*
+                     * pkgs is sorted by size (or quota) ascending, so by
+                     * getting the first element we get the smallest volume
+                     * size.
+                     */
                     ctx.storageVmPkg = pkgs[0];
                 } else {
                     availableSizes = pkgs.map(function getSizeFromPkg(pkg) {
