commit 06ebccb7ad7dec0c28132bd9d2274998daa50c87 (refs/changes/08/3708/1)
Author: Patrick Mooney <pmooney@pfmooney.com>
Date:   2018-03-22T21:52:03+00:00 (1 year, 7 months ago)
    
    OS-6807 viona rx ring can deadlock on shutdown

diff --git a/usr/src/uts/i86pc/io/viona/viona.c b/usr/src/uts/i86pc/io/viona/viona.c
index ee1380ae7d..359f814265 100644
--- a/usr/src/uts/i86pc/io/viona/viona.c
+++ b/usr/src/uts/i86pc/io/viona/viona.c
@@ -1094,7 +1094,16 @@ viona_worker_rx(viona_vring_t *ring, viona_link_t *link)
 		(void) cv_wait_sig(&ring->vr_cv, &ring->vr_lock);
 	} while (!VRING_NEED_BAIL(ring, p));
 
+	mutex_exit(&ring->vr_lock);
+	/*
+	 * Clearing the RX function involves MAC quiescing any flows on that
+	 * client.  If MAC happens to be delivering packets to this ring via
+	 * viona_rx() at the time of worker clean-up, that thread may need to
+	 * acquire vr_lock for tasks such as delivering an interrupt.  In order
+	 * to avoid such deadlocks, vr_lock must temporarily be dropped here.
+	 */
 	mac_rx_clear(link->l_mch);
+	mutex_enter(&ring->vr_lock);
 }
 
 static void
