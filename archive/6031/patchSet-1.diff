From 33c16682f6fdaa61eeaf24750a5cd7bac550b949 Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <jwilsdon@joyent.com>
Date: Fri, 29 Mar 2019 12:16:10 -0700
Subject: [PATCH] TRITON-1361 new CNs have NaN% provisionable memory

---
 lib/models/server.js | 2 +-
 package.json         | 2 +-
 test/test-servers.js | 7 ++++++-
 3 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/lib/models/server.js b/lib/models/server.js
index 08f21ac..e49f6da 100644
--- a/lib/models/server.js
+++ b/lib/models/server.js
@@ -2047,7 +2047,7 @@ function _attemptUpsert(
             // that go into this calculation.
             //
             // In the future we should redefine how this works.
-            if (newServerObj.reservationRatio && newServerObj.vms &&
+            if (newServerObj.reservation_ratio && newServerObj.vms &&
                 (properties.reservation_ratio ||
                 properties.vms ||
                 properties.sysinfo ||
diff --git a/package.json b/package.json
index 8bce5dc..6a1430c 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cnapi",
   "description": "SmartDataCenter Compute Node API",
-  "version": "1.21.9",
+  "version": "1.21.10",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/test-servers.js b/test/test-servers.js
index e892747..d35a8e2 100644
--- a/test/test-servers.js
+++ b/test/test-servers.js
@@ -190,7 +190,7 @@ function testUpdateServer(t) {
 
     async.waterfall([
         function (next) {
-            client.get('/servers?headnode=true',
+            client.get('/servers?headnode=true&extras=memory',
                        function (err, req, res, body) {
                 if (err) {
                     next(err);
@@ -200,6 +200,7 @@ function testUpdateServer(t) {
                 uuid = body[0].uuid;
                 oldRatio = body[0].reservation_ratio;
                 oldNextReboot = body[0].next_reboot;
+                oldMemoryProvisionable = body[0].memory_provisionable_bytes;
 
                 next();
             });
@@ -226,6 +227,10 @@ function testUpdateServer(t) {
                     'ensure reservation ratio is 0.50');
                 t.equal(body.next_reboot, '2016-04-22T12:50:40.512Z',
                     'ensure next_reboot timestamp is correct');
+                // memory_provisionable_bytes should also be recalculated here
+                t.notEqual(body.memory_provisionable_bytes,
+                    oldMemoryProvisionable, 'memory_provisionable_bytes ' +
+                    'should change with reservation_ratio');
 
                 next();
             });
-- 
2.21.0

