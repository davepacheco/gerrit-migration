From 6755ccf66f4d63873360528b2912ea5a6f7b35ca Mon Sep 17 00:00:00 2001
From: Nick Zivkovic <nick.zivkovic@joyent.com>
Date: Wed, 15 Feb 2017 01:56:08 +0000
Subject: [PATCH] NAPI-326 'free' and 'unassign' IP need their usages untangled

---
 deps/javascriptlint           |  2 +-
 deps/jsstyle                  |  2 +-
 deps/sdc-scripts              |  2 +-
 lib/endpoints/networks/ips.js |  5 ++++-
 lib/models/ip/index.js        | 23 ++++++++++++++++++-----
 lib/util/constants.js         |  1 +
 test/unit/ips.test.js         | 21 +++++++++++++++++++++
 7 files changed, 47 insertions(+), 9 deletions(-)

diff --git a/deps/javascriptlint b/deps/javascriptlint
index ad52812..040bf5e 160000
--- a/deps/javascriptlint
+++ b/deps/javascriptlint
@@ -1 +1 @@
-Subproject commit ad52812e77bdfb1e90fb71a1201adb2b665a27e6
+Subproject commit 040bf5e429969ae42d976b570fd64c9e17fab20f
diff --git a/deps/jsstyle b/deps/jsstyle
index ccb145b..b94eb62 160000
--- a/deps/jsstyle
+++ b/deps/jsstyle
@@ -1 +1 @@
-Subproject commit ccb145bab281b81e1fbebd45b5d2c084c454df5d
+Subproject commit b94eb629ee524d21b563c8b4461caa2bdf1becc6
diff --git a/deps/sdc-scripts b/deps/sdc-scripts
index bda632a..17fc5c8 160000
--- a/deps/sdc-scripts
+++ b/deps/sdc-scripts
@@ -1 +1 @@
-Subproject commit bda632a69ff44114f9faf689a5cd4af1fe578d66
+Subproject commit 17fc5c8b83623078388b00260e5ad4be4f7348ac
diff --git a/lib/endpoints/networks/ips.js b/lib/endpoints/networks/ips.js
index 38fde2f..dc2c6bb 100644
--- a/lib/endpoints/networks/ips.js
+++ b/lib/endpoints/networks/ips.js
@@ -18,6 +18,7 @@ var mod_common = require('./common');
 var mod_ip = require('../../models/ip');
 var restify = require('restify');
 var util_ip = require('../../util/ip');
+var mod_jsprim = require('jsprim');
 
 
 
@@ -111,7 +112,9 @@ function putIP(req, res, next) {
     // the mod_ip.* functions require a network model object:
     req.params.network = req._network;
 
-    if (req.params.hasOwnProperty('free') && req.params.free) {
+    if (mod_jsprim.hasKey(req.params, 'free') && req.params.free &&
+        !req.params.hasOwnProperty('unassign')) {
+
         return mod_ip.del(req.app, req.log, req.params, function (err) {
             if (err && err.statusCode !== 404) {
                 return next(err);
diff --git a/lib/models/ip/index.js b/lib/models/ip/index.js
index 35b9a67..abe2a54 100644
--- a/lib/models/ip/index.js
+++ b/lib/models/ip/index.js
@@ -26,7 +26,6 @@ var util_ip = require('../../util/ip');
 var validate = require('../../util/validate');
 
 
-
 // --- Globals
 
 
@@ -143,7 +142,19 @@ function validateNetworkOwner(_opts, _, validated, callback) {
             constants.OWNER_MATCH_MSG));
     }
 
-    return callback();
+    callback();
+}
+
+/*
+ * The `free` and `unassign` property can't be set to `true` at the same time.
+ */
+function validateFreeUnassign(_opts, _, validated, callback) {
+    if (validated.free && validated.unassign) {
+        return callback(errors.invalidParam('unassign',
+            constants.FREE_UNASSIGN_MSG));
+    }
+
+    callback();
 }
 
 
@@ -316,14 +327,16 @@ function updateIP(app, log, params, callback) {
             belongs_to_uuid: validate.UUID,
             check_owner: validate.bool,
             owner_uuid: validate.UUID,
-            reserved: validate.bool
+            reserved: validate.bool,
+            unassign: validate.bool,
+            free: validate.bool
         },
 
         required: {
             network: validateNetworkObj
         },
 
-        after: validateNetworkOwner
+        after: [validateNetworkOwner, validateFreeUnassign]
     };
 
     // both belongs_to_type and belongs_to_uuid must be set in UFDS at the
@@ -366,7 +379,7 @@ function updateIP(app, log, params, callback) {
 
         // If unassigning, remove the 'belongs_to' information, but keep
         // owner and reserved
-        if (params.unassign) {
+        if (validatedParams.unassign) {
             updateOpts.val = {
                 belongs_to_type: true,
                 belongs_to_uuid: true
diff --git a/lib/util/constants.js b/lib/util/constants.js
index 74aef90..df3a3b7 100644
--- a/lib/util/constants.js
+++ b/lib/util/constants.js
@@ -164,6 +164,7 @@ module.exports = {
     MTU_NICTAG_UPDATE_MSG: 'nic_tag mtu update must support existing networks',
     NIC_PROVISION_RETRIES: 100,
     OWNER_MATCH_MSG: 'network owner_uuids do not match',
+    FREE_UNASSIGN_MSG: 'free and unassign are both true',
     POOL_IP_MSG: 'IP cannot be specified with a network pool',
     POOL_MIN_NETS_MSG:
         'network pool must contain at least one network',
diff --git a/test/unit/ips.test.js b/test/unit/ips.test.js
index 26077dd..095ba17 100644
--- a/test/unit/ips.test.js
+++ b/test/unit/ips.test.js
@@ -26,6 +26,7 @@ var mod_uuid = require('node-uuid');
 var test = require('tape');
 var util = require('util');
 var vasync = require('vasync');
+var constants = require('../../lib/util/constants');
 
 
 
@@ -716,6 +717,26 @@ test('Update IP - free (IP not in moray)', function (t) {
     });
 });
 
+test('Update IPv4 - unassign and free (IP in moray)', function (t) {
+    var params = {
+        belongs_to_type: 'server',
+        belongs_to_uuid: mod_uuid.v4(),
+        owner_uuid: mod_uuid.v4()
+    };
+
+    NAPI.updateIP(NETV4.uuid, '10.0.2.34', params, function (err) {
+        t.ifError(err);
+        var uf_params = { unassign: 'true', free: 'true' };
+        NAPI.updateIP(NETV4.uuid, '10.0.2.34', uf_params,
+            function (err2, _, req, res) {
+                t.ok(err2, 'Expecting error');
+                t.deepEqual(err2.body.errors[0], {field: 'unassign',
+                    code: 'InvalidParameter',
+                    message: constants.FREE_UNASSIGN_MSG});
+                t.end();
+            });
+    });
+});
 
 test('Update IPv4 - unassign (IP in moray)', function (t) {
     var params = {
-- 
2.21.0

