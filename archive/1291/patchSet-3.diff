From aa7861655191dfa6fdc1c06bf82b74769c223ad1 Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Thu, 19 Jan 2017 01:13:32 +0000
Subject: [PATCH] MORAY-388 Moray needs "microtime" dependency back

---
 test/buckets.test.js | 70 +++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 69 insertions(+), 1 deletion(-)

diff --git a/test/buckets.test.js b/test/buckets.test.js
index 1417ec0..95571f4 100644
--- a/test/buckets.test.js
+++ b/test/buckets.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright 2017, Joyent, Inc.
  */
 
 var jsprim = require('jsprim');
@@ -580,3 +580,71 @@ test('MORAY-378 - Bucket cache cleared on bucket update', function (t) {
         t.end();
     });
 });
+
+
+test('MORAY-388 - triggers can require microtime/crc modules', function (t) {
+    function requireMicrotime(req, cb) {
+        var err = new Error('Required "microtime"');
+        err.name = 'RequireError';
+        try {
+            require('microtime');
+            cb(err);
+        } catch (e) {
+            cb(e);
+        }
+    }
+
+    function requireCRC(req, cb) {
+        var err = new Error('Required "crc"');
+        err.name = 'RequireError';
+        try {
+            require('crc');
+            cb(err);
+        } catch (e) {
+            cb(e);
+        }
+    }
+
+    function testTrigger(name, cb) {
+        c.putObject(b, 'key1', {}, function (err) {
+            if (err) {
+                var cause = VError.findCauseByName(err, 'RequireError');
+                if (cause) {
+                    t.equal(cause.message, 'Required "' + name + '"');
+                } else {
+                    t.error(err, name + ' module not required');
+                }
+            } else {
+                t.fail('trigger not called');
+            }
+
+            cb();
+        });
+    }
+
+    var schema1 = { pre: [ requireMicrotime ] };
+    var schema2 = { post: [ requireMicrotime ] };
+    var schema3 = { pre: [ requireCRC ] };
+    var schema4 = { post: [ requireCRC ] };
+
+    vasync.pipeline({ funcs: [
+        // Create the initial bucket to check "pre" microtime trigger.
+        function (_, cb) { c.createBucket(b, schema1, cb); },
+        function (_, cb) { testTrigger('microtime', cb); },
+
+        // Update the bucket to check "post" microtime trigger.
+        function (_, cb) { c.updateBucket(b, schema2, cb); },
+        function (_, cb) { testTrigger('microtime', cb); },
+
+        // Update the bucket to check "pre" crc trigger.
+        function (_, cb) { c.updateBucket(b, schema3, cb); },
+        function (_, cb) { testTrigger('crc', cb); },
+
+        // Update the bucket to check "post" crc trigger.
+        function (_, cb) { c.updateBucket(b, schema4, cb); },
+        function (_, cb) { testTrigger('crc', cb); }
+    ]}, function (err) {
+        t.error(err, 'Finish without error');
+        t.end();
+    });
+});
-- 
2.21.0

