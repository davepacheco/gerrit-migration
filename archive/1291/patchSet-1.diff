commit 57e4d31b5667984c5129440bd9bebde50d9032ea (refs/changes/91/1291/1)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2017-01-19T01:41:15+00:00 (2 years, 9 months ago)
    
    MORAY-388 Moray needs "microtime" dependency back

diff --git a/test/buckets.test.js b/test/buckets.test.js
index 1417ec0..ce2b80a 100644
--- a/test/buckets.test.js
+++ b/test/buckets.test.js
@@ -580,3 +580,71 @@ test('MORAY-378 - Bucket cache cleared on bucket update', function (t) {
         t.end();
     });
 });
+
+
+test('MORAY-388 - triggers can require microtime/crc modules', function (t) {
+    function requireMicrotime(req, cb) {
+        var err = new Error('Required "microtime"')
+        err.name = 'RequireError';
+        try {
+            require('microtime');
+            cb(err);
+        } catch (e) {
+            cb(e);
+        }
+    }
+
+    function requireCRC(req, cb) {
+        var err = new Error('Required "crc"')
+        err.name = 'RequireError';
+        try {
+            require('crc');
+            cb(err);
+        } catch (e) {
+            cb(e);
+        }
+    }
+
+    function testTrigger(name, cb) {
+        c.putObject(b, 'key1', {}, function (err) {
+            if (err) {
+                var cause = VError.findCauseByName(err, 'RequireError');
+                if (cause) {
+                    t.equal(cause.message, 'Required "' + name + '"');
+                } else {
+                    t.error(err, name + ' module not required');
+                }
+            } else {
+                t.fail('trigger not called');
+            }
+
+            cb();
+        });
+    }
+
+    var schema1 = { pre: [ requireMicrotime ] };
+    var schema2 = { post: [ requireMicrotime ] };
+    var schema3 = { pre: [ requireCRC ] };
+    var schema4 = { post: [ requireCRC ] };
+
+    vasync.pipeline({ funcs: [
+        // Create the initial bucket to check "pre" microtime trigger.
+        function (_, cb) { c.createBucket(b, schema1, cb); },
+        function (_, cb) { testTrigger('microtime', cb); },
+
+        // Update the bucket to check "post" microtime trigger.
+        function (_, cb) { c.updateBucket(b, schema2, cb); },
+        function (_, cb) { testTrigger('microtime', cb); },
+
+        // Update the bucket to check "pre" crc trigger.
+        function (_, cb) { c.updateBucket(b, schema3, cb); },
+        function (_, cb) { testTrigger('crc', cb); },
+
+        // Update the bucket to check "post" crc trigger.
+        function (_, cb) { c.updateBucket(b, schema4, cb); },
+        function (_, cb) { testTrigger('crc', cb); }
+    ]}, function (err) {
+        t.error(err, 'Finish without error');
+        t.end();
+    });
+});
