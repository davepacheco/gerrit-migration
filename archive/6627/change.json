{"project":"joyent/manta-remora","branch":"master","id":"I199bb7cbf4b88196cd6dd63f7da4f11fbba40735","number":"6627","subject":"MANTA-4420 Rebalancer Agent: Implement API for obtaining assignment information, accompanied by stats Reviewed by: Rui Loura \u003crui.loura@joyent.com\u003e Approved by: Rui Loura \u003crui.loura@joyent.com\u003e","owner":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"url":"https://cr.joyent.us/6627","commitMessage":"MANTA-4420 Rebalancer Agent: Implement API for obtaining assignment information, accompanied by stats\nReviewed by: Rui Loura \u003crui.loura@joyent.com\u003e\nApproved by: Rui Loura \u003crui.loura@joyent.com\u003e\n","createdOn":1563560962,"lastUpdated":1564769603,"open":false,"status":"MERGED","comments":[{"timestamp":1563560962,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 1."},{"timestamp":1563569876,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 2."},{"timestamp":1563808685,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Patch Set 2:\n\n(10 comments)"},{"timestamp":1563838693,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 3."},{"timestamp":1563839031,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 3:\n\n(6 comments)\n\nI took care of half the feedback.  For the rest of it, I\u0027m still working on the most concise way of handling."},{"timestamp":1564006353,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 4."},{"timestamp":1564012571,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 5."},{"timestamp":1564093120,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 6."},{"timestamp":1564208194,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 7."},{"timestamp":1564209298,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 7:\n\n(6 comments)"},{"timestamp":1564429909,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 8."},{"timestamp":1564430030,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 9."},{"timestamp":1564430097,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 10: Commit message was updated."},{"timestamp":1564594053,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Patch Set 10:\n\n(12 comments)\n\nThis looks pretty good. Spent most of the review time learning new things.  I\u0027d like to take another scan through the SQL stuff but I wanted to get some comments back to you asap."},{"timestamp":1564599008,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 10:\n\n(10 comments)"},{"timestamp":1564602129,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 10:\n\n(1 comment)"},{"timestamp":1564603893,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Patch Set 10:\n\n(5 comments)"},{"timestamp":1564605997,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 10:\n\n(2 comments)"},{"timestamp":1564637318,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 11."},{"timestamp":1564668387,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Patch Set 10:\n\n(1 comment)"},{"timestamp":1564674432,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 11:\n\n(1 comment)"},{"timestamp":1564691211,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 12."},{"timestamp":1564691975,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 12:\n\n(3 comments)"},{"timestamp":1564700653,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Patch Set 12:\n\n(1 comment)"},{"timestamp":1564701580,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 13."},{"timestamp":1564701590,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Patch Set 13:\n\n(1 comment)"},{"timestamp":1564704281,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Patch Set 13: Code-Review+1"},{"timestamp":1564762067,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 14: Commit message was updated."},{"timestamp":1564762243,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Patch Set 14: Integration-Approval+1"},{"timestamp":1564769591,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Uploaded patch set 15: Commit message was updated."},{"timestamp":1564769603,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Robert Bogart"}],"currentPatchSet":{"number":"15","revision":"199bb7cbf4b88196cd6dd63f7da4f11fbba40735","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/15","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564769591,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1564704281,"by":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1564762243,"by":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"}},{"type":"SUBM","value":"1","grantedOn":1564769603,"by":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":284,"deletions":-125},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":324,"sizeDeletions":-166},"patchSets":[{"number":"1","revision":"b1b63ad83b787d45c680be6413fd6257157e7493","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/1","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1563560962,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":158,"deletions":-20},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":59,"deletions":-41}],"sizeInsertions":217,"sizeDeletions":-62},{"number":"2","revision":"7d5abf77f4acd35bd9d3da8d019b3ec45ef29022","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/2","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1563569876,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","comments":[{"file":"src/agent.rs","line":1,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"copyright"},{"file":"src/agent.rs","line":1,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":24,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"I was thinking these would be in agent.rs\n\nperhaps what we should do is create an assignment.rs and put all kinds of stuff in there, so fine with me to punt on that for now."},{"file":"src/agent.rs","line":24,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"I think I agree.  As of patch #3, I haven\u0027t taken care of that yet, but I will."},{"file":"src/agent.rs","line":24,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":256,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"would be nice to factor this and 352 out to AgentAssignmentStats::new(uuid)"},{"file":"src/agent.rs","line":256,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":256,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":360,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"It would be nice if we didn\u0027t have to run this calculation every time."},{"file":"src/agent.rs","line":360,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"This will be another HashMap of structures, keyed by the assignment uuid.  It can be done, but I will have to expand some of my existing function interfaces to take this HashMap too."},{"file":"src/agent.rs","line":360,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":378,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"One idea to avoid generating the AssignmentStats struct on the fly for each POST and GET would be to create an AssignmentStats instance upon receiving (POST /assignments), and then update it as the agent iterates over the Task.  This way:\n- When the assignment is complete and is pushed back to the zone the same AssignmentStats instance that was being populated can be sent back to the zone.\n- If a request from the zone of (GET /assignments/\u003cuuid\u003e) the AssignmentStats instance, either on disk or in mem, can be returned directly.  \n\nOne consideration is that the completed assignments aren\u0027t currently needed by the zone.  So the AssignmentStats struct could include a Vec of completed tasks, and use the  #[serde(skip_serializing)] (or skip_serializing_if) field attribute to avoid sending them over the wire.\n\nOf course the AssignmentStats structure would have to change."},{"file":"src/agent.rs","line":378,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Since the enum value \"Complete\" is currently the only one that has an additional field Option\u003cVec\u003cTask\u003e\u003e, it turns out it\u0027s a moot point.  Failed tasks can not be attached to an AssignmentState that is has a value of anything other than \"Complete\" anyway.  At any rate, this is done."},{"file":"src/agent.rs","line":417,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"you can use std::mem::discriminant(t.status) \u003d\u003d std::mem::discriminant(status) here instead of creating a new function."},{"file":"src/agent.rs","line":417,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":478,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"The zone just needs status of the assignment from the (GET /assignment endpoint).  It may come to pass that we need to get all tasks from an assignment or only a subset of tasks.  For which I would expect to use:\n\nGET /assignment/\u003cuuid\u003e/tasks?status\u003d\u003cstatus\u003e"},{"file":"src/agent.rs","line":478,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"While I wouldn\u0027t disagree, that\u0027s not really what this particular API is for.  It\u0027s there to give the remora zone the exact same information that it would receive at the completion of assignment (in the event that it didn\u0027t receive it).  I would say that 481-485 is more about what you described above."},{"file":"src/agent.rs","line":482,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"I changed this so that it takes a status type.  The format currently looks something like:\n\n/GET /tasks/\u003cuuid\u003e?status\u003d[pending|running|complete|failed]\n\nWhile I\u0027m not dead set on the way this currently works, I\u0027m seeing some unnecessary parts to the path that you described on 478 -- notably, the presence of both an \"assignment\" part in the path as well as \"tasks\".  Your response would probably be that there is both a tasks component to an assignment as well as a stats component and it\u0027s not that that didn\u0027t occur to me, rather, it doesn\u0027t feel right (to me) to think of stats from a semantic standpoint as something that\u0027s part of an assignment.  In summary, I don\u0027t see \"tasks\" as a necessary part in the path if we have \"assignment\".\n\nAt any rate, the heavy lifting as far as handling things like the uuid as part of the path as opposed extracting query parameters is in this CR now.  We just need to find some common ground on conventions (e.g. /tasks/, /assignments/, ...)."},{"file":"src/agent.rs","line":704,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"To remove ambiguity can you use Arc::clone(agent.assignments) here and below?"},{"file":"src/agent.rs","line":704,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":726,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"I think we can remove these per the comment on 478."},{"file":"src/config.rs","line":67,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Thanks."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":158,"deletions":-20},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":25,"deletions":0}],"sizeInsertions":183,"sizeDeletions":-21},{"number":"3","revision":"65ad3ad2b6c759656dc656af38193bc6d869ffb4","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/3","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1563838693,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","comments":[{"file":"src/job.rs","line":150,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"space after :"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":161,"deletions":-25},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":36,"deletions":-2}],"sizeInsertions":197,"sizeDeletions":-28},{"number":"4","revision":"7dc31552176b8b159ab88ad78c9b445a789d0748","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/4","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564006353,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":268,"deletions":-68},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":68,"deletions":-40}],"sizeInsertions":336,"sizeDeletions":-109},{"number":"5","revision":"f4ec5db75dde74bc5096d27ac922979f7e23fac9","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/5","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564012571,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":266,"deletions":-79},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":68,"deletions":-40}],"sizeInsertions":334,"sizeDeletions":-120},{"number":"6","revision":"35e31b99159a85842ff6de7325d9cbd02aa8eaf9","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/6","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564093120,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":312,"deletions":-96},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":352,"sizeDeletions":-137},{"number":"7","revision":"d95920b9223f486bd80f2c6fd42b8b1942ea0de6","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/7","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564208194,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":334,"deletions":-95},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":374,"sizeDeletions":-136},{"number":"8","revision":"bef8d16112b7d724fdf09f37e33a987b7c24ae44","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/8","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564429909,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":229,"deletions":-108},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":269,"sizeDeletions":-149},{"number":"9","revision":"39663f9bdf82b7f3adeab0b715f51f460c948c27","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/9","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564430030,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":228,"deletions":-108},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":268,"sizeDeletions":-149},{"number":"10","revision":"563a4f557eaaab248d7724d32c0eede0803292cd","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/10","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564430097,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","comments":[{"file":"src/agent.rs","line":45,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"as commented below we probably need to remove \"remora\" from our vernacular."},{"file":"src/agent.rs","line":45,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"What is the recommendation?  \"REBALANCER\"?  I\u0027m fine with whatever."},{"file":"src/agent.rs","line":45,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"yeah.  I think the consensus is that we should move away from code names.  :/"},{"file":"src/agent.rs","line":57,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"is this the same uuid as the new Assignment struct?"},{"file":"src/agent.rs","line":57,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"It is.  I can remove it, but it means that we would probably never want to send this structure unaccompanied by the rest of an assignment."},{"file":"src/agent.rs","line":59,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"I thought we were going to remove these for now?"},{"file":"src/agent.rs","line":59,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Remove what exactly?  If you\u0027re talking about the counters, I don\u0027t want to remove this.  I gave the JSON a couple of times now for what the would look like in Mattermost so I have to say, I\u0027m a little surprised that the presence of this information is a surprise."},{"file":"src/agent.rs","line":59,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Im fine either way."},{"file":"src/agent.rs","line":103,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"If we do dispense with the stats this could be:\n\n  pub struct Assignment {\n    pub uuid: String,\n    pub status: AgentAssignmentStatus,\n  }\n\nWhich would look like this in the case of completed state with failed tasks:\n\n  {\n     \"uuid\": \"3135ecf8-aacd-432a-9dcb-f47bbbe504b6\",\n     \"status\": {\n       \"Complete\": [\n          { \u003cfailed task\u003e },\n          { \u003cfailed task\u003e },\n          { \u003cfailed task\u003e },\n       ]\n     }\n  }\n\nWhat you have is fine, but with this suggestion I think we may be able to remove one level of indirection."},{"file":"src/agent.rs","line":103,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Yes, but in the event that an assignment is not complete, I think it\u0027s important to know how far along we are in processing it, hence why the counter information is supplied."},{"file":"src/agent.rs","line":290,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"we might want to change the path to \"/manta/rebalancer\""},{"file":"src/agent.rs","line":290,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Sounds good."},{"file":"src/agent.rs","line":412,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"see comment on line 714."},{"file":"src/agent.rs","line":449,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"We should probably be specific about GET here.  Since verbs like PUT generally imply an update this may be confusing to consumers."},{"file":"src/agent.rs","line":449,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Sounds good."},{"file":"src/agent.rs","line":449,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"},{"file":"src/agent.rs","line":631,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Can you add a comment about how this function receives a uuid  from add_assignment() and begins work on the associated assignment?\n\nI was a little confused about the flow from an incoming POST request to here."},{"file":"src/agent.rs","line":631,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"I\u0027d rather not right now.  The reason why is that I\u0027m making a change in MANTA-4442 that will eliminates assignment_add anyway.  In my opinion what might be more informative is a comment about how process_assignment() is invoked by a worker thread that receives the uuid of the assignment via a channel.  The \"producer\" in this case happens to be the thread handling the request(s) that come in to Gotham.\n\nWhile we are on the subject, you may want to see what I write up for MANTA-4442.  The proposal there is that all worker threads obtain their assignments from disk rather than caching them in memory."},{"file":"src/agent.rs","line":631,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"As discussed offline, I added a rather lengthy block at the top of this function disclosing details about the current architecture."},{"file":"src/agent.rs","line":675,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"what if the array is altered or reordered between here and 652?\n\nFrom my read of the code I don\u0027t see a place where that happens, but in the future someone could make the reasonable assumption that once the write lock is dropped the order, number of, and value of the contents of the array are all up for grabs."},{"file":"src/agent.rs","line":675,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Yeah, there is no other place where this can happen.  That is by design.  The only way to protect against someone making a change in the future that could modify the task list is to somehow acquire the read lock on it for the duration of the operation.  It\u0027s a long time to hold a lock although since I happen to know that nothing else will need the write lock on it, it\u0027s not a big deal.\n\nAt the end though, I\u0027d have to drop the read lock and immediately acquire a write lock in order to make the status update to a given task in the assignment.  There is still a period of time (regardless of how small) where it\u0027s vulnerable, but the window would be reduced in size by the amount of time it basically takes to download a an object in each iteration through the vector.  If that\u0027s an amicable compromise, I\u0027ll do that.  And actually, aside from that, there really is no other way that I can think aside from holding a full-blown mutex, but you don\u0027t want to do that because then a request for assignment information would force the client to wait until the assignment is done processing."},{"file":"src/agent.rs","line":675,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"If GET /assignment always reads from disk that should clear up any contention while the assignment is running.\n\nStore it in memory while running and then when complete push it out to disk.\n\nDo we plan on having multiple threads process a single assignment concurrently?  I would think in the future the rebalancer zone would issue commands to the agents telling them how many assignments to process in parallel.  That way the unit of concurrency would be the assignment and the zone could manage performance by assignment size and number of assignments in parallel.  I think it would probably not be wise to have performance of a job independently dictated by each agent.\n\nIf there is only one thread processing each assignment I\u0027m not sure we need locks.  However, I think locks are probably a good idea given that we do want to protect against another future thread modifying the same assignment at the same time.  And they are also needed for interior mutability.\n\nSome alternatives would be to turn the vec of tasks into a hashmap by uuid or some index and then:\n- take read lock\n- get/clone task\n// could update task state to \"running\" in here if you took the write lock.\n- drop read lock\n- process copy of task\n- grab write lock\n- update assignment\n- update task\n- drop write lock"},{"file":"src/agent.rs","line":675,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"I do not think it makes sense to *ever* multithread the processing of a single assignment.  My thinking was that if you have a list of say 20 objects and you want it processed in parallel, then break it up in to two assignments and allow the thread pool to tackle it on a per-assignment basis.\n\nAs far as what the size of the thread pool that processes assignments should be, I would think that something like that would be dictated by SAPI...if we ever even make that tunable.  As evidenced by accelerated GC, too many tunables gives you enough rope to hang yourself.\n\nThe lock on the assignment is necessary.  The reason why is because process_task() has two periods where it can modify task data (which is part of the assignment) and a request for an assignment can come in while we\u0027re in the middle of that.  I think it\u0027s wrong to not serialize access to a structure that can change knowing that there\u0027s a possibility that something else may come along and attempt to read it while that change is taking place.  Further, if the structure is ARC\u0027d (and it needs to be), the mutex is required even if, as the developer, I know better.\n\nAnd to pre-fetch on something else, the lock on the hash map is necessary too so that we don\u0027t remove a completed assignment from it while we are in the middle of serializing something.\n\nFinally, in the heuristic that you have outlined above, that looks like almost exactly what I am doing except I think there is a problem with the third bullet point -- my understanding is that a write-lock requires exclusive access.  In other words, I\u0027d have to drop a read lock first (which is what I do).  That was my understanding based on what I read, but if I\u0027m wrong and it\u0027s possible to have both a read lock and a write lock at the same time, let me know."},{"file":"src/agent.rs","line":675,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"\u003e \"The lock on the assignment is necessary.  The reason why is because process_task() has two periods where it can modify task data (which is part of the assignment) and a request for an assignment can come in while we\u0027re in the middle of that.  I think it\u0027s wrong to not serialize access to a structure that can change knowing that there\u0027s a possibility that something else may come along and attempt to read it while that change is taking place. \"\n\nThis is why I mentioned considering having all reads come from disk.  I thought you mentioned this elsewhere as well, but I can\u0027t find it now.  Something about the other bug?\n\n\u003e \"Finally, in the heuristic that you have outlined above, that looks like almost exactly what I am doing except I think there is a problem with the third bullet point -- my understanding is that a write-lock requires exclusive access.\"\n\nThe third bullet point is an alternative to the taking the read lock at all.  Perhaps what is should say is:\n\n* // could update task state to \"running\" in here if you took the write lock in step 1 instead.\n\nWhat I was suggesting is you could take the write lock, update the task to running, clone it, then drop the write lock, then process the cloned task.  Later when the cloned task is processed, take the write lock again and replace the task in the hash map of tasks.\n\n\nThat\u0027s just another idea that would ensure consistency.  I still think the best approach here is to have reads come from disk but I\u0027m not convinced either way."},{"file":"src/agent.rs","line":675,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Sorry to be dense, but it still isn\u0027t obvious to me why what you\u0027re suggesting eliminates some situation where data gets modified out from underneath the worker.  Once the worker has access to the assignment and its constituent parts (e.g. the task list), no other thread ever modifies that information again.\n\nObtaining a lock on an assignment, cloning a task, then dropping the lock and doing some processing and finally obtaining the lock again to copy the modified task back in to the vector doesn\u0027t really protect against anything, even in the future.  Unless a worker holds a lock to the whole HashMap, there are still the kinds of risks that I think you\u0027re about.  That is, an assignment could (in theory) be removed from the HashMap since it\u0027s a shared structure among threads, while a task within the assignment is being processed.  I believe the best way to solve this is with an architecture where you have assurance that only one thread will ever modify an assignment once its being processed.  Further, we need assurance that that same thread is the only one that would ever remove the assignment from the HashMap.  Without that, there will always be chinks in the armor unless you guard everything with one monolithic lock and ensure that the processing of an assignment from the moment that the request is received to when it\u0027s complete is atomic, but again, a lock on the entire HashMap would be needed.\n\nAlso, in MANTA-4442, I\u0027m not proposing that reads go to disk.  The main point of that ticket is to ensure that a given assignment is not loaded in to memory unless we are actively processing it.  Imagine a scenario (regardless of how likely) where the agent is hit with a bunch of assignments, each taking days to complete.  In the interim, other potentially large assignments are just sitting in memory waiting to be processed.  This was just my way of keeping the footprint as low as possible as the backlog of assignments rises.  I don\u0027t see how doing this solves the problem that you\u0027re talking about."},{"file":"src/agent.rs","line":689,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"I got a little confused here, so it maybe worth adding a comment (for those that are as daft as I) about how the mpsc channel works under the concurrency model below.\n\nWhat it seems like is happening is that the tx is cloned anytime a request comes in (per line 716).  That creates multiple producers.\n\nThe single receiver is protected by a mutex, so when the threadpool is \u003e 1 all the Arc::clone()\u0027d receivers will be sitting behind a lock.  When an assignment is sent through the channel the head of the line receiver takes it, gets the uuid and passes it along to process_assignment().\n\n\nIf my understanding is correct I have a couple questions.\n\n1. is the rx lock held by the uuid variable?  If so won\u0027t the lock be held until after process_assignment() returns?  In that case, no other Arc::clone()\u0027d receiver could pick up the lock until process_assignment() is done, right?\n\n2. Is there a need to wrap the tx in a Mutex?  Seems like if they are cloned then they aren\u0027t sharing any memory.\nhttps://play.rust-lang.org/?version\u003dstable\u0026mode\u003ddebug\u0026edition\u003d2018\u0026gist\u003d327b4dbc30eb47ed2be3e359488d5f79"},{"file":"src/agent.rs","line":689,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Your understanding is not correct.  Once a consumer obtains the uuid from the rx portion of the channel, the lock is implicitly dropped.  Think about it like this: the only thing that the uuid variable holds is a string, so if there is no lock in scope, it\u0027s not locked.  While this was my original understanding, I also by attempted to re-acquire the lock within a worker after obtaining the uuid and was able to do so successfully.\n\nRegarding whether or not the tx portion of the channel needs a lock, my initial reasoning was that Gotham supposedly can handle requests concurrently which would potentially mean concurrent accesses to the tx portion of the channel.  At the surface, this may look like a 1 producer and multiple consumers, but I *think* it\u0027s actually multiple producers and consumers.\n\nBut now that I think about it, I wonder if any part of the channel *needs* a lock.  I had sort of thought about the process of sending/receive as reading and writing, but I don\u0027t think invoking those methods necessarily mean that it\u0027s fundamentally changing the underlying object.  I\u0027ll need to play around with that and see and dig a little deeper in to how channels are implemented.  It\u0027s possible that simply arc\u0027ing both side of the channel would be enough, assuming that there is some kind of locking under the hood that they provide.\n\nAll that being said, since this was technically not part of the current CR, I would rather punt the exploration of this to a separate ticket (which I\u0027m willing to file today).  I want to keep the scope of each CR that I introduce fairly small and quantifiable.  What I know for sure right now is that while what is there may not be necessary, it\u0027s not blocking the agent from getting work done."},{"file":"src/agent.rs","line":689,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Based on a scan of: https://doc.rust-lang.org/std/sync/mpsc/, I think I don\u0027t even need to arc a channel actually.  It should be ok to just clone it and use it, regardless of which side we\u0027re talking about.  All the same I\u0027d still probably prefer to keep the scope of this CR narrow, but I will file a ticket since I\u0027d want to do some in-depth testing to make sure it works the way I expect."},{"file":"src/agent.rs","line":689,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"good point about the uuid.  \n\nI\u0027m fine with filing a bug here.  This is my first time going through all this code so my comments may not pertain to the specific CR, and I\u0027m fine with filing bugs in those cases for later."},{"file":"src/agent.rs","line":689,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"I a have filed https://jira.joyent.us/browse/MANTA-4453 to track this."},{"file":"src/agent.rs","line":714,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Cloud we do something like:\n  let uuid_v4_pattern \u003d \"^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$\";\n  .get(format!(\"/assignments/:uuid:{}\", uuid_v4_pattern))\n\nThen see comment on 412.\n\nref: https://github.com/gotham-rs/gotham/blob/master/examples/path/regex/src/main.rs"},{"file":"src/agent.rs","line":714,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Since this all goes to the same handler regardless, I think it makes more sense to handle interpreting the contents of the path (and query string in the future) there, especially given that the uuid may be in a different place within the path depending on what other API\u0027s we supply.\n\nIf the question was simply about using a regular expression for ensuring that what\u0027s there meets the format requirements of a uuid, I think that has merit and I\u0027d be willing to add logic in the handler to verify that a given part in the path is indeed a uuid."},{"file":"src/agent.rs","line":714,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"It is very common to have separate for each route based on the regex of the path.  Keeps the code nicely decoupled.  \n\nBut what you have will work fine, modulo uuid validation."},{"file":"src/agent.rs","line":714,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"I agree with you.  I\u0027d rather do what you\u0027re saying.  If I could have more than one handler, it\u0027d much easier to let the routing do the heavy lifting for me.  But as it stands, everything has to go through that NewHandler for Agent.  A different kind of handler wouldn\u0027t give me access to the agent object which is what I need."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":228,"deletions":-108},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":268,"sizeDeletions":-149},{"number":"11","revision":"e8cddc0ed0770a4c2240d2739b1510c44b05c93e","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/11","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564637318,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":264,"deletions":-121},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":304,"sizeDeletions":-162},{"number":"12","revision":"d5e73f51477a6d771db1f3954759318a3d001e6d","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/12","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564691211,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","comments":[{"file":"src/agent.rs","line":670,"reviewer":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},"message":"Can we s/assn/assignments/ so that it doesn\u0027t collide with line 678 below."},{"file":"src/agent.rs","line":670,"reviewer":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":282,"deletions":-123},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":322,"sizeDeletions":-164},{"number":"13","revision":"04aaf88bfbe72d4128b8c5db0836024789b38514","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/13","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564701580,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1564704281,"by":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":284,"deletions":-125},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":324,"sizeDeletions":-166},{"number":"14","revision":"1969436b1415d1f19616d5aa610ddc70a55fe64c","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/14","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564762067,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1564704281,"by":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1564762243,"by":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":284,"deletions":-125},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":324,"sizeDeletions":-166},{"number":"15","revision":"199bb7cbf4b88196cd6dd63f7da4f11fbba40735","parents":["196089254b8a76840bef38dabe303f5c0c5073d9"],"ref":"refs/changes/27/6627/15","uploader":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"},"createdOn":1564769591,"author":{"name":"rhb2","email":"robert.bogart@joyent.com","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1564704281,"by":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1564762243,"by":{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"}},{"type":"SUBM","value":"1","grantedOn":1564769603,"by":{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"src/agent.rs","type":"MODIFIED","insertions":284,"deletions":-125},{"file":"src/config.rs","type":"MODIFIED","insertions":0,"deletions":-1},{"file":"src/job.rs","type":"MODIFIED","insertions":40,"deletions":-40}],"sizeInsertions":324,"sizeDeletions":-166}],"allReviewers":[{"name":"Michael Zeller","email":"mike.zeller@joyent.com","username":"papertigers"},{"name":"Rui Loura","email":"rui@joyent.com","username":"rjloura"},{"name":"Robert Bogart","email":"Robert.bogart@joyent.com","username":"rhb2"}]}