commit 60728930887445c78f466c050e4af386b039598a (refs/changes/72/2872/2)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-10-25T23:16:09+00:00 (1 year, 11 months ago)
    
    MANTA-3475 muskie should report 503 errors when moray hits its max queue length

diff --git a/lib/common.js b/lib/common.js
index 5688a80..fdba1b5 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -509,6 +509,11 @@ function loadMetadata(req, opts, callback) {
                            null)
                 };
             } else {
+                var info = VError.info(err);
+                if (info.morayMaxQueueDepthReached) {
+                    callback(new ServiceUnavailableError(req, err));
+                    return;
+                }
                 return (callback(err, req));
             }
         }
diff --git a/lib/dir.js b/lib/dir.js
index 01f2fd0..32b29a4 100644
--- a/lib/dir.js
+++ b/lib/dir.js
@@ -80,6 +80,11 @@ function mkdir(req, res, next) {
         req.moray.putMetadata(opts, function (err2) {
             if (err2) {
                 log.debug(err2, 'mkdir: failed');
+                var info = VError.info(err2);
+                if (info.morayMaxQueueDepthReached) {
+                    next(new ServiceUnavailableError(req, err2));
+                    return;
+                }
                 next(err2);
             } else {
                 log.debug({dir: req.key}, 'mkdir: done');
@@ -111,6 +116,13 @@ function getDirectoryCount(req, res, next) {
             VError.findCauseByName(err, 'ObjectNotFoundError') === null) {
             next(translateError(err, req));
         } else {
+            if (err) {
+                var info = VError.info(err);
+                if (info.morayMaxQueueDepthReached) {
+                    next(new ServiceUnavailableError(req, err));
+                    return;
+                }
+            }
             req._dircount = count || 0;
             next();
         }
diff --git a/lib/errors.js b/lib/errors.js
index 8e1e22d..485d1a9 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -574,11 +574,12 @@ function ResourceNotFoundError(p) {
 util.inherits(ResourceNotFoundError, MuskieError);
 
 
-function ServiceUnavailableError(req) {
+function ServiceUnavailableError(req, cause) {
     MuskieError.call(this, {
         restCode: 'ServiceUnavailable',
         statusCode: 503,
-        message: 'manta is unable to serve this request'
+        message: 'manta is unable to serve this request',
+        cause: cause
     });
 }
 util.inherits(ServiceUnavailableError, MuskieError);
diff --git a/lib/jobs/create.js b/lib/jobs/create.js
index 42ac15b..c1d2b1f 100644
--- a/lib/jobs/create.js
+++ b/lib/jobs/create.js
@@ -13,6 +13,7 @@ var util = require('util');
 var restify = require('restify');
 var libuuid = require('libuuid');
 var vasync = require('vasync');
+var verror = require('verror');
 
 var auth = require('../auth');
 var common = require('../common');
@@ -196,6 +197,11 @@ function mkdirForJob(req, res, next) {
             func: req.moray.putMetadata.bind(req.moray),
             inputs: results.successes
         }, function (err2) {
+            var info = verror.info(err2);
+            if (info.morayMaxQueueDepthReached) {
+                next(new ServiceUnavailableError(req, err2));
+                return;
+            }
             next(err2);
         });
     });
diff --git a/lib/link.js b/lib/link.js
index 9c3315d..df58ee8 100644
--- a/lib/link.js
+++ b/lib/link.js
@@ -14,6 +14,7 @@ var libmanta = require('libmanta');
 var restify = require('restify');
 
 var common = require('./common');
+var verror = require('verror');
 require('./errors');
 
 
@@ -200,6 +201,11 @@ function saveMetadata(req, res, next) {
         req.moray.putMetadata(opts, function (err2) {
             if (err2) {
                 log.debug(err2, 'saveMetadata: failed');
+                var info = verror.info(err2);
+                if (info.morayMaxQueueDepthReached) {
+                    next(new ServiceUnavailableError(req, err2));
+                    return;
+                }
                 next(err2);
             } else {
                 var lmd = req.link.metadata;
diff --git a/lib/obj.js b/lib/obj.js
index 23082b5..6e144c5 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -342,6 +342,11 @@ function enforceDirectoryCount(req, res, next) {
     req.moray.getDirectoryCount(opts, function (err, count, obj) {
         if (err &&
             VError.findCauseByName(err, 'ObjectNotFoundError') === null) {
+            var info = VError.info(err);
+            if (info.morayMaxQueueDepthReached) {
+                next(new ServiceUnavailableError(req, err));
+                return;
+            }
             next(translateError(err, req));
         } else {
             count = count || 0;
@@ -630,6 +635,11 @@ function saveMetadata(req, res, next) {
             req.sharks = null;
             if (err2) {
                 log.debug(err2, 'saveMetadata: failed');
+                var info = VError.info(err2);
+                if (info.morayMaxQueueDepthReached) {
+                    next(new ServiceUnavailableError(req, err2));
+                    return;
+                }
                 next(err2);
             } else {
                 log.debug('saveMetadata: done');
@@ -907,6 +917,11 @@ function deletePointer(req, res, next) {
     log.debug(opts, 'deletePointer: entered');
     req.moray.delMetadata(opts, function (err) {
         if (err) {
+            var info = VError.info(err);
+            if (info.morayMaxQueueDepthReached) {
+                next(new ServiceUnavailableError(req, err));
+                return;
+            }
             next(err);
         } else {
             log.debug('deletePointer: done');
diff --git a/lib/server.js b/lib/server.js
index b04eb4b..20180f9 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -17,6 +17,7 @@ var assert = require('assert-plus');
 var bunyan = require('bunyan');
 var mime = require('mime');
 var restify = require('restify');
+var verror = require('verror');
 
 var audit = require('./audit');
 var auth = require('./auth');
@@ -185,26 +186,33 @@ function createServer(options, clearProxy) {
 
     server.use(function ensureDependencies(req, res, next) {
         var ok = true;
+        var errors = [];
 
         if (!options.picker()) {
             req.log.error('picker unavailable');
+            errors.push(new Error('picker unavailable'));
             ok = false;
         } else if (!options.moray()) {
             req.log.error('index moray unavailable');
+            errors.push(new Error('index moray unavailable'));
             ok = false;
         } else if (!options.mahi()) {
             req.log.error('mahi unavailable');
+            errors.push(new Error('mahi unavailable'));
             ok = false;
         } else if (!options.marlin()) {
             req.log.error('marlin unavailable');
+            errors.push(new Error('marlin unavailable'));
             ok = !req.isMarlinRequest();
         } else if (!options.medusa()) {
             req.log.error('medusa unavailable');
+            errors.push(new Error('medusa unavailable'));
             ok = !req.isMedusaRequest();
         }
 
         if (!ok) {
-            next(new ServiceUnavailableError());
+            next(new ServiceUnavailableError(req,
+                        new verror.MultiError(errors)));
         } else {
             next();
         }
diff --git a/lib/uploads/commit.js b/lib/uploads/commit.js
index 5fb63a9..06d3204 100644
--- a/lib/uploads/commit.js
+++ b/lib/uploads/commit.js
@@ -284,7 +284,12 @@ function validateParts(req, res, next) {
                     errors.push(new MultipartUploadInvalidArgumentError(id,
                         sprintf('[part %d] part does not exist', index)));
                 } else {
-                    errors.push(new InternalError(err));
+                    var info = verror.info(err);
+                    if (info.morayMaxQueueDepthReached) {
+                        errors.push(new ServiceUnavailableError(req, err));
+                    } else {
+                        errors.push(new InternalError(err));
+                    }
                 }
             } else {
                 var size = parseInt(md.contentLength, 10);
@@ -319,13 +324,15 @@ function validateParts(req, res, next) {
     queue.on('end', function () {
         log.debug('part validation completed');
         if (errors.length > 0) {
-
+            var queueLimitError;
             // Even if there's an internal error, we still send any user
             // errors we encountered, so they can be corrected and retried.
             for (var i = 0; i < errors.length; i++) {
                 var e = errors[i];
                 assert.number(e.statusCode);
-                if (e.statusCode >= 500) {
+                if (e.statusCode == 503) {
+                    queueLimitError = e;
+                } else if (e.statusCode >= 500) {
                     e = new verror.VError(e, 'internal error');
                     log.warn(e);
                 } else if (e.statusCode >= 400) {
@@ -336,7 +343,11 @@ function validateParts(req, res, next) {
                 }
             }
 
-            next(new InternalError(new Error('commit error')));
+            if (queueLimitError) {
+                next(queueLimitError);
+            } else {
+                next(new InternalError(new Error('commit error')));
+            }
 
         } else {
             req.upload.checkSize(sum, function (valid, expected) {
diff --git a/lib/uploads/common.js b/lib/uploads/common.js
index a6ac81b..a138e0a 100644
--- a/lib/uploads/common.js
+++ b/lib/uploads/common.js
@@ -513,6 +513,11 @@ function persistUploadRecord(upload, state, type, cb) {
     upload.uploadMd.toSave.requestId = upload.req.getId();
     upload.req.moray.putMetadata(upload.uploadMd.toSave, function (err, md) {
         if (err) {
+            var info = verror.info(err);
+            if (info.morayMaxQueueDepthReached) {
+                cb(new ServiceUnavailableError(upload.req, err));
+                return;
+            }
             cb(err);
         } else {
             log.debug({
@@ -542,6 +547,11 @@ function loadUploadRecord(upload, cb) {
 
     upload.req.moray.getMetadata(options, function (err, md, wrap) {
         if (err) {
+            var info = verror.info(err);
+            if (info.morayMaxQueueDepthReached) {
+                cb(new ServiceUnavailableError(upload.req, err));
+                return;
+            }
             cb(err);
         } else {
             assert.ok(md);
@@ -576,6 +586,11 @@ function loadFinalizingRecord(upload, cb) {
 
     upload.req.moray.getFinalizingMetadata(options, function (err, md, wrap) {
         if (err) {
+            var info = verror.info(err);
+            if (info.morayMaxQueueDepthReached) {
+                cb(new ServiceUnavailableError(upload.req, err));
+                return;
+            }
             cb(err);
         } else {
             assert.ok(md);
@@ -1001,6 +1016,11 @@ MultipartUpload.prototype.abortUpload = function abortUpload(cb) {
             },
             function (err2) {
                 if (err2) {
+                    var info = verror.info(err2);
+                    if (info.morayMaxQueueDepthReached) {
+                        cb(new ServiceUnavailableError(this.req, err2));
+                        return;
+                    }
                     cb(err2);
                 } else {
                     cb();
@@ -1078,6 +1098,11 @@ function commitUpload(partsMD5, size, md5, cb) {
                         if (err3) {
                             err3 = new verror.VError(err3,
                                 'error batching data');
+                            var info = verror.info(err3);
+                            if (info.morayMaxQueueDepthReached) {
+                                cb(new ServiceUnavailableError(self.req, err3));
+                                return;
+                            }
                             log.warn(err3);
                             cb(err3);
                         } else {
diff --git a/lib/uploads/create.js b/lib/uploads/create.js
index 805116d..cc797cc 100644
--- a/lib/uploads/create.js
+++ b/lib/uploads/create.js
@@ -275,6 +275,7 @@ function ensurePrefixDir(req, res, next) {
     };
 
     req.moray.getMetadata(parentOpts, function (err, md, _) {
+        var info;
         if (err) {
             if (verror.hasCauseWithName(err, 'ObjectNotFoundError')) {
                 // If the directory doesn't exist yet, create it.
@@ -286,6 +287,11 @@ function ensurePrefixDir(req, res, next) {
 
                 req.moray.putMetadata(parentOpts, function (err2) {
                     if (err2) {
+                        info = verror.info(err2);
+                        if (info.morayMaxQueueDepthReached) {
+                            next(new ServiceUnavailableError(req, err2));
+                            return;
+                        }
                         next(err2);
                     } else {
                         log.debug('prefix directory \"' + parentOpts.key +
@@ -294,6 +300,11 @@ function ensurePrefixDir(req, res, next) {
                     }
                 });
             } else {
+                info = verror.info(err);
+                if (info.morayMaxQueueDepthReached) {
+                    next(new ServiceUnavailableError(req, err));
+                    return;
+                }
                 next(err);
             }
         } else {
