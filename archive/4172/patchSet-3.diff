From e436d18297b49a22fe701a15b0be74b846028a57 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Mon, 11 Jun 2018 18:40:46 +0200
Subject: [PATCH] TRITON-477 `sdcadm create $SVC --image` does not support
 channels

---
 lib/cli/do_create.js      | 19 +++++++++++++++++++
 test/check-health.test.js |  2 +-
 test/create.test.js       |  4 +---
 3 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/lib/cli/do_create.js b/lib/cli/do_create.js
index 17f5736..5fa7065 100644
--- a/lib/cli/do_create.js
+++ b/lib/cli/do_create.js
@@ -73,6 +73,19 @@ Create.prototype.execute = function cExecute(opts, args, cb) {
     };
 
     vasync.pipeline({ arg: context, funcs: [
+        function ensureSdcApp(_, next) {
+            self.sdcadm.ensureSdcApp({}, function (err) {
+                if (err) {
+                    next(err);
+                    return;
+                }
+                // Set or override the default channel if anything is given:
+                if (opts.channel) {
+                    self.sdcadm.updates.channel = opts.channel;
+                }
+                next();
+            });
+        },
         function getLock(_, next) {
             self.sdcadm.acquireLock({progress: self.progress},
                                     function (lockErr, unlock_) {
@@ -277,6 +290,12 @@ do_create.options = [
         type: 'string',
         help: 'UUID of the Image to be used for the instance.'
     },
+    {
+        names: ['channel', 'C'],
+        type: 'string',
+        help: 'Use the given channel to fetch the image, even if it is ' +
+            'not the default one.'
+    },
     {
         // Deprecated in favour of `-s,--servers`
         names: ['server'],
diff --git a/test/check-health.test.js b/test/check-health.test.js
index e16cfac..8db6c3f 100644
--- a/test/check-health.test.js
+++ b/test/check-health.test.js
@@ -248,7 +248,7 @@ test('check-health when binder is down', function (t) {
                     });
             },
             function checkHealth(_, next) {
-                exec('sdcadm check-health', function (err, stdout, stderr) {
+                exec('sdcadm check-health -H', function (err, stdout, stderr) {
                     t.equal(err && err.code, 1, 'errcode is 1');
                     t.equal(err.killed, false, 'process not killed');
                     t.equal(stdout, '');
diff --git a/test/create.test.js b/test/create.test.js
index fd78a3c..9a3cb5b 100644
--- a/test/create.test.js
+++ b/test/create.test.js
@@ -190,9 +190,7 @@ test('sdcadm create amonredis --dev-allow-multiple-instances ' +
 
 
 // Create test with latest available image:
-// TODO: Skip this test until we have support for channels
-// in sdcadm create (TRITON-477)
-test.skip('sdcadm create amonredis --dev-allow-multiple-instances' +
+test('sdcadm create amonredis --dev-allow-multiple-instances' +
      ' -y -s --image', function createWithLatestImg(t) {
     vasync.pipeline({
         arg: {},
-- 
2.21.0

