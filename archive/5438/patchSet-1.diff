commit 6a977e792d03d608e7606152d3b6d4eda0854147 (refs/changes/38/5438/1)
Author: Marsell Kukuljevic <marsell@joyent.com>
Date:   2019-01-28T17:40:43+01:00 (8 months ago)
    
    TRITON-1032 Docker container resize broken by TRITON-738

diff --git a/lib/datasets.js b/lib/datasets.js
index 22f311f..3fbdd74 100644
--- a/lib/datasets.js
+++ b/lib/datasets.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 //
@@ -212,9 +212,11 @@ function loadImage(req, cb) {
     var datasetUuid = req.params.dataset || req.params.image;
     var opts = { headers: { 'x-request-id': req.getId() } };
 
-    if (/\/machines/.test(pathname) && req.method === 'GET') {
+    if (/\/machines/.test(pathname) && req.method === 'GET' ||
+        req.route.name === 'updatemachine' && req.params.action === 'resize') {
         // We don't pass 'account' here, since we might be loading a
-        // now-disabled image which was previously used for a machine:
+        // now-disabled image which was previously used for a machine, or
+        // (in the case of resizing Docker) loading a private image:
         return req.sdc.imgapi.getImage(datasetUuid, opts, cb);
     } else {
         return req.sdc.imgapi.getImage(datasetUuid, accountUuid, opts, cb);
diff --git a/test/machines.test.js b/test/machines.test.js
index bd8979e..38c52e8 100644
--- a/test/machines.test.js
+++ b/test/machines.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 var util = require('util');
@@ -1128,8 +1128,8 @@ test('machine audit', function (t) {
             'destroy', 'disable_deletion_protection', 'delete_snapshot',
             'rollback_snapshot', 'create_snapshot', 'replace_metadata',
             'remove_metadata', 'set_metadata', 'remove_tags', 'replace_tags',
-            'remove_tags', 'set_tags', 'resize', 'resize', 'reboot', 'start',
-            'stop', 'provision'
+            'remove_tags', 'set_tags', 'resize', 'resize', 'resize', 'reboot',
+            'start', 'stop', 'provision'
         ];
 
         for (var i = 0; i !== expectedJobs.length; i++) {
diff --git a/test/machines/resize.js b/test/machines/resize.js
index 435de6a..2c427b1 100644
--- a/test/machines/resize.js
+++ b/test/machines/resize.js
@@ -5,10 +5,11 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var common = require('../common');
+var vasync = require('vasync');
 var waitForJob = require('./common').waitForJob;
 
 var uuid = common.uuid;
@@ -102,6 +103,56 @@ function (suite, client, other, machine, pkgDown, pkgSame, pkgUp, cb) {
         waitAndCheckResize(t, pkgDown);
     });
 
+    suite.test('Resize with private image (docker)', function (t) {
+        var imgapi = client.imgapi;
+        var img;
+
+        function getImage(ctx, next) {
+            client.vmapi.getVm({ uuid: machine }, function onGetVm(err, vm) {
+                t.ifError(err, 'GetVm error');
+
+                imgapi.getImage(vm.image_uuid, function onGetImage(err2, _img) {
+                    t.ifError(err2, 'GetImage error');
+                    img = _img;
+                    next(err);
+                });
+            });
+        }
+
+        function updateImage(ctx, next) {
+            imgapi.updateImage(img.uuid, {
+                public: false
+            }, next);
+        }
+
+        function resizeMachine(ctx, next) {
+            client.post('/my/machines/' + machine, {
+                action: 'resize',
+                'package': pkgDown.uuid
+            }, function onResize(err) {
+                t.ifError(err, 'Error resizing machine');
+                next(); // don't pass on err here so we can reset public later
+            });
+        }
+
+        function resetPublic(ctx, next) {
+            imgapi.updateImage(img.uuid, {
+                public: img.public
+            }, next);
+        }
+
+        vasync.pipeline({ funcs: [
+            getImage, updateImage, resizeMachine, resetPublic
+        ]}, function (err) {
+            t.ifError(err, 'Error during test');
+            t.end();
+        });
+    });
+
+    suite.test('Wait For resize with private image', function (t) {
+        waitAndCheckResize(t, pkgDown);
+    });
+
     function waitAndCheckResize(t, pkg) {
         client.vmapi.listJobs({
             vm_uuid: machine,
