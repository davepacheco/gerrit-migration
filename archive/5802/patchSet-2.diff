From cbf2ef2d16a395e821050724e85af8b193e670ba Mon Sep 17 00:00:00 2001
From: Dave Eddy <dave@daveeddy.com>
Date: Fri, 15 Mar 2019 16:18:08 -0400
Subject: [PATCH] joyent/node-boray#5 listbuckets/listobjects buffer all data
 in memory Reviewed by: Kelly McLaughlin <kelly.mclaughlin@joyent.com>
 Approved by: Kelly McLaughlin <kelly.mclaughlin@joyent.com>

---
 lib/bucket_buckets.js | 32 ++++++++++++++++----------------
 lib/bucket_objects.js | 32 ++++++++++++++++----------------
 2 files changed, 32 insertions(+), 32 deletions(-)

diff --git a/lib/bucket_buckets.js b/lib/bucket_buckets.js
index fef7839..b4f5f0c 100644
--- a/lib/bucket_buckets.js
+++ b/lib/bucket_buckets.js
@@ -255,23 +255,23 @@ function listBuckets(rpcctx, owner, vnode) {
 
     var res = new EventEmitter();
 
-    rpc.rpcCommonBufferData({
+    var req = rpc.rpcCommon({
         rpcctx: rpcctx,
         rpcmethod: 'listbuckets',
         rpcargs: [arg],
         log: log
-    }, function (err, buckets) {
+    }, function (err) {
         if (err) {
             res.emit('error', err);
-            return;
+        } else {
+            res.emit('end');
         }
 
-        buckets.forEach(function (bucket) {
-            res.emit('record', bucket);
-        });
-
         res.emit('_moray_internal_rpc_done');
-        res.emit('end');
+    });
+
+    req.on('data', function (msg) {
+        res.emit('record', msg);
     });
 
     return (res);
@@ -287,23 +287,23 @@ function listBucketsNoVnode(rpcctx, owner) {
 
     var res = new EventEmitter();
 
-    rpc.rpcCommonBufferData({
+    var req = rpc.rpcCommon({
         rpcctx: rpcctx,
         rpcmethod: 'listbuckets',
         rpcargs: [owner],
         log: log
-    }, function (err, buckets) {
+    }, function (err) {
         if (err) {
             res.emit('error', err);
-            return;
+        } else {
+            res.emit('end');
         }
 
-        buckets.forEach(function (bucket) {
-            res.emit('record', bucket);
-        });
-
         res.emit('_moray_internal_rpc_done');
-        res.emit('end');
+    });
+
+    req.on('data', function (msg) {
+        res.emit('record', msg);
     });
 
     return (res);
diff --git a/lib/bucket_objects.js b/lib/bucket_objects.js
index f5a0c32..47a47ed 100644
--- a/lib/bucket_objects.js
+++ b/lib/bucket_objects.js
@@ -389,23 +389,23 @@ function listObjects(rpcctx, owner, bucket_id, vnode) {
 
     var res = new EventEmitter();
 
-    rpc.rpcCommonBufferData({
+    var req = rpc.rpcCommon({
         rpcctx: rpcctx,
         rpcmethod: 'listobjects',
         rpcargs: [arg],
         log: log
-    }, function (err, objects) {
+    }, function (err) {
         if (err) {
             res.emit('error', err);
-            return;
+        } else {
+            res.emit('end');
         }
 
-        objects.forEach(function (object) {
-            res.emit('record', object);
-        });
-
         res.emit('_moray_internal_rpc_done');
-        res.emit('end');
+    });
+
+    req.on('data', function (msg) {
+        res.emit('record', msg);
     });
 
     return (res);
@@ -424,23 +424,23 @@ function listObjectsNoVnode(rpcctx, owner, bucket_id) {
 
     var res = new EventEmitter();
 
-    rpc.rpcCommonBufferData({
+    var req = rpc.rpcCommon({
         rpcctx: rpcctx,
         rpcmethod: 'listobjects',
         rpcargs: [owner, bucket_id],
         log: log
-    }, function (err, objects) {
+    }, function (err) {
         if (err) {
             res.emit('error', err);
-            return;
+        } else {
+            res.emit('end');
         }
 
-        objects.forEach(function (object) {
-            res.emit('record', object);
-        });
-
         res.emit('_moray_internal_rpc_done');
-        res.emit('end');
+    });
+
+    req.on('data', function (msg) {
+        res.emit('record', msg);
     });
 
     return (res);
-- 
2.21.0

