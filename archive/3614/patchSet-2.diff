From 1592ef69513d95a7514c86ca6b6ef01f94215b50 Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Tue, 13 Mar 2018 13:49:06 +0000
Subject: [PATCH] MANTA-3602 reshard repository clean up

---
 CONTRIBUTING.md                               | 15 ++++++++++
 README.md                                     | 15 +---------
 boot/everyboot.sh                             |  2 +-
 boot/firstboot.sh                             |  2 +-
 cmd/phases.js                                 | 15 +++++-----
 cmd/plan_archive.js                           | 11 ++++++--
 cmd/plan_get.js                               | 11 ++++++--
 cmd/plan_list.js                              | 13 +++++----
 cmd/plan_pause.js                             | 11 ++++++--
 cmd/plan_resume.js                            | 11 ++++++--
 cmd/plan_tune.js                              | 13 +++++++--
 cmd/plan_unhold.js                            | 11 ++++++--
 cmd/server.js                                 | 12 +++++++-
 cmd/status.js                                 | 12 ++++++++
 lib/common.js                                 | 13 ++++++++-
 lib/create_instance.js                        | 14 ++++++++--
 lib/data_access.js                            | 11 ++++++--
 lib/electric_moray.js                         | 12 ++++++--
 lib/executor.js                               | 28 +++++++++++++------
 lib/http_client.js                            | 11 ++++++++
 lib/http_server.js                            | 13 ++++++++-
 lib/locks.js                                  | 11 +++++++-
 lib/manatee_adm.js                            | 26 ++++++++++++-----
 lib/phase_check_postgres_version.js           | 15 ++++++++--
 lib/phase_create_manatee_peers.js             | 15 ++++++++--
 lib/phase_create_morays.js                    | 15 ++++++++--
 lib/phase_create_sentinel_bucket.js           | 13 +++++++--
 lib/phase_critical_section_enter.js           | 17 +++++++----
 lib/phase_critical_section_exit.js            | 17 +++++++----
 lib/phase_delete_data.js                      | 11 ++++++++
 lib/phase_establish_cluster.js                | 18 +++++++++++-
 lib/phase_freeze_cluster.js                   | 13 ++++++++-
 lib/phase_install_ring.js                     | 15 ++++++++--
 lib/phase_reconfigure_peers.js                | 14 ++++++++--
 lib/phase_remap_ring.js                       | 12 ++++++++
 lib/phase_restart_electric_moray_readonly.js  | 21 +++++++-------
 lib/phase_restart_electric_moray_readwrite.js | 21 +++++++-------
 lib/phase_sapi_cleanup.js                     | 14 ++++++++--
 lib/phase_shutdown_new_peers.js               | 12 ++++++++
 lib/phase_unfreeze_cluster.js                 | 15 ++++++++--
 lib/phase_update_electric_moray_ring.js       | 20 +++++++------
 lib/phase_update_sapi_mark_readonly.js        | 15 +++++++---
 lib/phase_update_sapi_mark_readwrite.js       | 14 ++++++++--
 lib/postgres.js                               | 11 ++++++++
 lib/serial.js                                 | 16 ++++++-----
 lib/status.js                                 | 11 ++++++++
 lib/template.js                               | 10 ++++++-
 lib/triton_access.js                          | 12 ++++++++
 lib/wrap.sh                                   | 10 ++++++-
 scripts/reshard.sh                            |  9 ++++++
 smf/manifests/reshard.xml                     |  2 +-
 templates/electric-moray-get-vnodes.sh        |  9 ++++++
 templates/electric-moray-update-ring.sh       |  9 ++++++
 templates/hashring-cleanup.sh                 |  9 ++++++
 templates/hashring-create-archive.sh          |  9 ++++++
 templates/hashring-prime-workspace.sh         | 10 +++++++
 templates/hashring-remap-vnodes.sh            | 10 +++++++
 test/generate_cluster_state.js                | 13 +++++++--
 test/manatee_adm_parser.js                    | 12 ++++++--
 test/status.js                                | 10 +++++++
 test/status_wide.js                           | 10 +++++++
 test/template.js                              | 13 +++++++--
 62 files changed, 638 insertions(+), 157 deletions(-)
 create mode 100644 CONTRIBUTING.md

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000..63fe3d9
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,15 @@
+# Contributing
+
+This repository uses [cr.joyent.us](https://cr.joyent.us) (Gerrit) for new
+changes. Anyone can submit changes. To get started, see the [cr.joyent.us user
+guide](https://github.com/joyent/joyent-gerrit/blob/master/docs/user/README.md).
+This repo does not use GitHub pull requests.
+
+See the [Joyent Engineering
+Guidelines](https://github.com/joyent/eng/blob/master/docs/index.md) for general
+best practices expected in this repository.
+
+Contributions should be "make prepush" clean.
+
+If you're changing something non-trivial or user-facing, you may want to submit
+an issue first.
diff --git a/README.md b/README.md
index 2895a62..a2375bd 100644
--- a/README.md
+++ b/README.md
@@ -5,7 +5,7 @@
 -->
 
 <!--
-    Copyright (c) 2017, Joyent, Inc.
+    Copyright (c) 2018, Joyent, Inc.
 -->
 
 # Manta Resharding System
@@ -17,16 +17,3 @@ guidelines, issues, and general documentation, visit the main
 This is the resharding system for Manta.  It comprises a service and a set of
 client tools for breaking up Moray shards within the Manta indexing tier to
 increase the performance and storage capacity of the system.
-
-## Before pushing changes
-
-- Your code should be `make prepush` clean.  That includes both `make check` and
-  `make test` (the test suite).
-- Assess the test impact of your changes -- make sure you've run all manual
-  tests you can think of, and automated all of the ones that can reasonably be
-  automated.
-- Assess any impact on fresh install / deployment and make sure you've tested
-  that if necessary.
-- Assess any impact on upgrade, including flag days for developers or existing
-  deployments.
-- Code review (via Gerrit) is required.
diff --git a/boot/everyboot.sh b/boot/everyboot.sh
index 8931661..56f13ab 100644
--- a/boot/everyboot.sh
+++ b/boot/everyboot.sh
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2018, Joyent, Inc.
 #
 
 #
diff --git a/boot/firstboot.sh b/boot/firstboot.sh
index 8d4ce75..d9ca02f 100644
--- a/boot/firstboot.sh
+++ b/boot/firstboot.sh
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2018, Joyent, Inc.
 #
 
 printf '==> firstboot @ %s\n' "$(date -u +%FT%TZ)"
diff --git a/cmd/phases.js b/cmd/phases.js
index 62fcf96..e5ee3e0 100644
--- a/cmd/phases.js
+++ b/cmd/phases.js
@@ -1,16 +1,17 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_net = require('net');
-var mod_http = require('http');
 
-var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
-var mod_vasync = require('vasync');
-var mod_jsprim = require('jsprim');
 var mod_extsprintf = require('extsprintf');
 
-var lib_common = require('../lib/common');
-var lib_status = require('../lib/status');
 var lib_http_client = require('../lib/http_client');
 
 var VE = mod_verror.VError;
diff --git a/cmd/plan_archive.js b/cmd/plan_archive.js
index 69e5493..84f36cf 100644
--- a/cmd/plan_archive.js
+++ b/cmd/plan_archive.js
@@ -1,12 +1,17 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_verror = require('verror');
 
 var lib_common = require('../lib/common');
 var lib_http_client = require('../lib/http_client');
 
-var VE = mod_verror.VError;
-
 
 if (process.argv.length !== 3 || !lib_common.is_uuid(process.argv[2])) {
 	console.error('ERROR: Usage: archive <plan_uuid>');
diff --git a/cmd/plan_get.js b/cmd/plan_get.js
index 9351434..adc5e39 100644
--- a/cmd/plan_get.js
+++ b/cmd/plan_get.js
@@ -1,12 +1,17 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_verror = require('verror');
 
 var lib_common = require('../lib/common');
 var lib_http_client = require('../lib/http_client');
 
-var VE = mod_verror.VError;
-
 
 if (process.argv.length !== 3 || !lib_common.is_uuid(process.argv[2])) {
 	console.error('ERROR: Usage: get <plan_uuid>');
diff --git a/cmd/plan_list.js b/cmd/plan_list.js
index 369ecac..fe4776d 100644
--- a/cmd/plan_list.js
+++ b/cmd/plan_list.js
@@ -1,14 +1,17 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_verror = require('verror');
 
-var lib_common = require('../lib/common');
 var lib_http_client = require('../lib/http_client');
 
-var VE = mod_verror.VError;
 
-
-//if (process.argv.length !== 2 || !lib_common.is_uuid(process.argv[2])) {
 if (process.argv.length !== 2) {
 	console.error('ERROR: Usage: list');
 	process.exit(1);
diff --git a/cmd/plan_pause.js b/cmd/plan_pause.js
index 433e70f..63b50f5 100644
--- a/cmd/plan_pause.js
+++ b/cmd/plan_pause.js
@@ -1,12 +1,17 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_verror = require('verror');
 
 var lib_common = require('../lib/common');
 var lib_http_client = require('../lib/http_client');
 
-var VE = mod_verror.VError;
-
 
 if (process.argv.length < 3 || process.argv.length > 4 ||
     !lib_common.is_uuid(process.argv[2])) {
diff --git a/cmd/plan_resume.js b/cmd/plan_resume.js
index 75ea1a3..e70135c 100644
--- a/cmd/plan_resume.js
+++ b/cmd/plan_resume.js
@@ -1,12 +1,17 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_verror = require('verror');
 
 var lib_common = require('../lib/common');
 var lib_http_client = require('../lib/http_client');
 
-var VE = mod_verror.VError;
-
 
 if (process.argv.length !== 3 || !lib_common.is_uuid(process.argv[2])) {
 	console.error('ERROR: Usage: resume <plan_uuid>');
diff --git a/cmd/plan_tune.js b/cmd/plan_tune.js
index dbc495b..84b2509 100644
--- a/cmd/plan_tune.js
+++ b/cmd/plan_tune.js
@@ -1,13 +1,19 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
-var mod_verror = require('verror');
 var mod_jsprim = require('jsprim');
 
 var lib_common = require('../lib/common');
 var lib_http_client = require('../lib/http_client');
 
-var VE = mod_verror.VError;
-
 
 function
 usage()
@@ -17,6 +23,7 @@ usage()
 	process.exit(1);
 }
 
+
 /*
  * If no tuning name and value are provided, just fetch all tuning values for
  * this plan.
diff --git a/cmd/plan_unhold.js b/cmd/plan_unhold.js
index 99872f4..b889010 100644
--- a/cmd/plan_unhold.js
+++ b/cmd/plan_unhold.js
@@ -1,12 +1,17 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_verror = require('verror');
 
 var lib_common = require('../lib/common');
 var lib_http_client = require('../lib/http_client');
 
-var VE = mod_verror.VError;
-
 
 if (process.argv.length !== 3 || !lib_common.is_uuid(process.argv[2])) {
 	console.error('ERROR: Usage: unhold <plan_uuid>');
diff --git a/cmd/server.js b/cmd/server.js
index 12276c2..a9fa0fd 100644
--- a/cmd/server.js
+++ b/cmd/server.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_fs = require('fs');
 var mod_path = require('path');
@@ -18,9 +28,9 @@ var lib_http_server = require('../lib/http_server');
 var lib_executor = require('../lib/executor');
 var lib_locks = require('../lib/locks');
 
-
 var VE = mod_verror.VError;
 
+
 function
 retry(func, ctx, done, nsecs)
 {
diff --git a/cmd/status.js b/cmd/status.js
index a78edbc..c00c27e 100644
--- a/cmd/status.js
+++ b/cmd/status.js
@@ -1,3 +1,12 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
 var mod_verror = require('verror');
@@ -9,11 +18,13 @@ var lib_http_client = require('../lib/http_client');
 
 var VE = mod_verror.VError;
 
+
 var PLAN_MATCH_LIST = null;
 var ONLY_ERRORS = false;
 var REDRAW = false;
 var FORCE_UTF8 = false;
 
+
 function
 include_plan(plan_uuid)
 {
@@ -108,6 +119,7 @@ redraw_callback(err)
 	setTimeout(print_status, 500, redraw_callback);
 }
 
+
 var option;
 var parser = new mod_getopt.BasicParser('rxU', process.argv);
 
diff --git a/lib/common.js b/lib/common.js
index 6b800ec..b1d41b2 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
@@ -5,9 +15,10 @@ var mod_vasync = require('vasync');
 var mod_jsprim = require('jsprim');
 var mod_pg = require('pg');
 
+var lib_manatee_adm = require('../lib/manatee_adm');
+
 var VE = mod_verror.VError;
 
-var lib_manatee_adm = require('../lib/manatee_adm');
 
 var REGEX_UUID = new RegExp('^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-' +
     '[0-9a-f]{4}-[0-9a-f]{12}$');
diff --git a/lib/create_instance.js b/lib/create_instance.js
index 3bb3d49..5ba387e 100644
--- a/lib/create_instance.js
+++ b/lib/create_instance.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_path = require('path');
 var mod_fs = require('fs');
@@ -10,6 +20,7 @@ var mod_vasync = require('vasync');
 
 var sprintf = mod_extsprintf.sprintf;
 
+
 /*
  * XXX This function is copied from "sdc-manta.git".  It should be refactored
  * into a common library for creating the SAPI provisioning request for new
@@ -17,9 +28,6 @@ var sprintf = mod_extsprintf.sprintf;
  *
  * XXX I have also pruned out the parts not relevant to "moray" or "postgres"
  * zones.
- *
- * XXX We should probably seek to check/copy the value of PG_CONFIG_OVERRIDES
- * from the existing instances onto the new instances we create...
  */
 function
 create_instance(ctx, opts, callback)
diff --git a/lib/data_access.js b/lib/data_access.js
index 5a66f2a..75a3eaa 100644
--- a/lib/data_access.js
+++ b/lib/data_access.js
@@ -1,3 +1,12 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
 var mod_assert = require('assert-plus');
@@ -5,7 +14,6 @@ var mod_moray = require('moray');
 var mod_vasync = require('vasync');
 var mod_verror = require('verror');
 var mod_jsprim = require('jsprim');
-var mod_uuid = require('uuid');
 
 var VE = mod_verror.VError;
 
@@ -386,7 +394,6 @@ lock_store(ctx, lock, callback)
 }
 
 
-
 module.exports = {
 	create_moray_client: create_moray_client,
 	plan_load: plan_load,
diff --git a/lib/electric_moray.js b/lib/electric_moray.js
index 028d9b9..6b99850 100644
--- a/lib/electric_moray.js
+++ b/lib/electric_moray.js
@@ -1,7 +1,15 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
 var mod_net = require('net');
-var mod_http = require('http');
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
@@ -21,8 +29,6 @@ em_fetch_status(ctl, ip, port, callback)
 	mod_assert.number(port, 'port');
 	mod_assert.func(callback, 'callback');
 
-	var finished = false;
-
 	ctl.log.info('fetching status from http://%s:%d', ip, port);
 
 	lib_http_client.http_get(ip, port, '/status', function (err, res) {
diff --git a/lib/executor.js b/lib/executor.js
index c94697c..e9d5114 100644
--- a/lib/executor.js
+++ b/lib/executor.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_crypto = require('crypto');
 
@@ -8,8 +18,6 @@ var mod_jsprim = require('jsprim');
 var mod_uuid = require('uuid');
 var mod_moray = require('moray');
 
-var VE = mod_verror.VError;
-
 var lib_common = require('../lib/common');
 var lib_triton_access = require('./triton_access');
 var lib_data_access = require('./data_access');
@@ -18,6 +26,8 @@ var lib_status = require('./status');
 var lib_locks = require('./locks');
 var lib_create_instance = require('./create_instance');
 
+var VE = mod_verror.VError;
+
 
 var PHASES = [
 	'check_postgres_version',
@@ -37,11 +47,11 @@ var PHASES = [
 	'create_manatee_peers',
 
 	/*
-	 * XXX At this point in the plan, we need to serialise execution so
-	 * that two plans don't stomp on one another (generating new hash
-	 * rings, confirming that two plans do not create the same new shard,
-	 * etc).  This serialisation needs to persist in the database so that
-	 * it cannot be broken even if we restart unexpectedly.
+	 * At this point in the plan, we need to serialise execution so that
+	 * two plans don't stomp on one another (generating new hash rings,
+	 * confirming that two plans do not create the same new shard, etc).
+	 * This serialisation needs to persist in the database so that it
+	 * cannot be broken even if we restart unexpectedly.
 	 */
 	'critical_section_enter',
 
@@ -63,8 +73,8 @@ var PHASES = [
 	'sapi_cleanup',
 
 	/*
-	 * XXX Here we can return to parallel execution, allowing another
-	 * plan to proceed into the critical region.
+	 * Here we can return to parallel execution, allowing another plan to
+	 * proceed into the critical region.
 	 */
 	'critical_section_exit',
 
diff --git a/lib/http_client.js b/lib/http_client.js
index 8cfd95d..e0ecfd6 100644
--- a/lib/http_client.js
+++ b/lib/http_client.js
@@ -1,3 +1,12 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
 var mod_net = require('net');
@@ -8,6 +17,7 @@ var mod_verror = require('verror');
 
 var VE = mod_verror.VError;
 
+
 function
 http_request(method, ip, port, path, body, callback)
 {
@@ -157,6 +167,7 @@ cmd_print_result(err, res)
 	console.log('result: %s', JSON.stringify(res, false, 4));
 }
 
+
 module.exports = {
 	http_get: http_get,
 	http_post: http_post,
diff --git a/lib/http_server.js b/lib/http_server.js
index 182b674..0bc38b5 100644
--- a/lib/http_server.js
+++ b/lib/http_server.js
@@ -1,12 +1,23 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_restify = require('restify');
 var mod_verror = require('verror');
 var mod_jsprim = require('jsprim');
 
+var lib_common = require('../lib/common');
+
 var VE = mod_verror.VError;
 
-var lib_common = require('../lib/common');
 
 function
 handle_ping(req, res, next)
diff --git a/lib/locks.js b/lib/locks.js
index 5eecdd0..2e7b613 100644
--- a/lib/locks.js
+++ b/lib/locks.js
@@ -1,3 +1,12 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
 var mod_assert = require('assert-plus');
@@ -6,7 +15,6 @@ var mod_verror = require('verror');
 
 var lib_data_access = require('../lib/data_access');
 
-
 var VE = mod_verror.VError;
 
 
@@ -187,6 +195,7 @@ unlock(name, owner, callback)
 	});
 };
 
+
 module.exports = {
 	Locks: Locks,
 };
diff --git a/lib/manatee_adm.js b/lib/manatee_adm.js
index 26ad9bc..b713dee 100644
--- a/lib/manatee_adm.js
+++ b/lib/manatee_adm.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_verror = require('verror');
 var mod_jsprim = require('jsprim');
@@ -7,10 +17,11 @@ var lib_http_client = require('../lib/http_client');
 
 var VE = mod_verror.VError;
 
+
 function
 valid_number(n)
 {
-	return (typeof (n) === 'number' && !isNaN(n));
+	return (typeof (n) === 'number' && !isNaN(n) && isFinite(n));
 }
 
 function
@@ -311,19 +322,20 @@ parse_manatee_adm_show(stdout)
 	 * then a colon, then a variable amount of whitespace, then the value.
 	 * This stanza is terminated by a blank line.
 	 */
+	var l, m;
 	for (;;) {
 		if (pos >= lines.length) {
 			return (unexpected_end());
 		}
 
-		var l = lines[pos];
+		l = lines[pos];
 
 		if (l === '') {
 			pos++;
 			break;
 		}
 
-		var m = l.match(/^([^:]+):\s+(.*)$/);
+		m = l.match(/^([^:]+):\s+(.*)$/);
 		if (!m) {
 			return (fail_invalid());
 		}
@@ -351,14 +363,14 @@ parse_manatee_adm_show(stdout)
 			return (unexpected_end());
 		}
 
-		var l = lines[pos];
+		l = lines[pos];
 
 		if (l === '') {
 			pos++;
 			break;
 		}
 
-		var m = l.match(/^([^\s]+)\s+([a-f0-9-]{36})\s+([^\s]+)\s*$/);
+		m = l.match(/^([^\s]+)\s+([a-f0-9-]{36})\s+([^\s]+)\s*$/);
 		if (!m) {
 			return (fail_invalid());
 		}
@@ -375,7 +387,7 @@ parse_manatee_adm_show(stdout)
 	 * The penultimate stanza lists each peer with its current replication
 	 * status.  There is a header row, then a set of peers.
 	 */
-	var headings = lines[pos].trimRight().split(/\s+/);
+	headings = lines[pos].trimRight().split(/\s+/);
 	if (!mod_jsprim.deepEqual(headings, [ 'ROLE', 'PEER', 'PG', 'REPL',
 	    'SENT', 'FLUSH', 'REPLAY', 'LAG' ])) {
 		return (fail_invalid());
@@ -390,7 +402,7 @@ parse_manatee_adm_show(stdout)
 			break;
 		}
 
-		var l = lines[pos];
+		l = lines[pos];
 
 		if (l === '') {
 			/*
diff --git a/lib/phase_check_postgres_version.js b/lib/phase_check_postgres_version.js
index d5db852..ec00347 100644
--- a/lib/phase_check_postgres_version.js
+++ b/lib/phase_check_postgres_version.js
@@ -1,12 +1,22 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 
+var lib_common = require('../lib/common');
+
 var VE = mod_verror.VError;
 
-var lib_manatee_adm = require('../lib/manatee_adm');
-var lib_common = require('../lib/common');
 
 function
 phase_check_postgres_version(ctl)
@@ -109,6 +119,7 @@ phase_check_postgres_version(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_check_postgres_version: phase_check_postgres_version,
 };
diff --git a/lib/phase_create_manatee_peers.js b/lib/phase_create_manatee_peers.js
index 158928c..ea2d460 100644
--- a/lib/phase_create_manatee_peers.js
+++ b/lib/phase_create_manatee_peers.js
@@ -1,14 +1,24 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 var mod_jsprim = require('jsprim');
 
-var VE = mod_verror.VError;
-
 var lib_manatee_adm = require('../lib/manatee_adm');
 var lib_common = require('../lib/common');
 
+var VE = mod_verror.VError;
+
 
 function
 phase_create_manatee_peers(ctl)
@@ -431,6 +441,7 @@ create_one_peer(ctl, opts, callback)
 	});
 }
 
+
 module.exports = {
 	phase_create_manatee_peers: phase_create_manatee_peers,
 };
diff --git a/lib/phase_create_morays.js b/lib/phase_create_morays.js
index 6589cd5..81adcb2 100644
--- a/lib/phase_create_morays.js
+++ b/lib/phase_create_morays.js
@@ -1,13 +1,23 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 var mod_jsprim = require('jsprim');
 
-var VE = mod_verror.VError;
-
 var lib_common = require('../lib/common');
 
+var VE = mod_verror.VError;
+
 
 function
 phase_create_morays(ctl)
@@ -300,6 +310,7 @@ create_one_moray(ctl, opts, callback)
 	});
 }
 
+
 module.exports = {
 	phase_create_morays: phase_create_morays,
 };
diff --git a/lib/phase_create_sentinel_bucket.js b/lib/phase_create_sentinel_bucket.js
index 0afeffc..175a72b 100644
--- a/lib/phase_create_sentinel_bucket.js
+++ b/lib/phase_create_sentinel_bucket.js
@@ -1,11 +1,19 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
-var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 
 var VE = mod_verror.VError;
 
-var lib_manatee_adm = require('../lib/manatee_adm');
 
 function
 phase_create_sentinel_bucket(ctl)
@@ -56,6 +64,7 @@ phase_create_sentinel_bucket(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_create_sentinel_bucket: phase_create_sentinel_bucket,
 };
diff --git a/lib/phase_critical_section_enter.js b/lib/phase_critical_section_enter.js
index 7fee7d2..48c766a 100644
--- a/lib/phase_critical_section_enter.js
+++ b/lib/phase_critical_section_enter.js
@@ -1,13 +1,19 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_assert = require('assert-plus');
-var mod_verror = require('verror');
-var mod_vasync = require('vasync');
-var mod_jsprim = require('jsprim');
 
-var lib_common = require('../lib/common');
+var mod_verror = require('verror');
 
 var VE = mod_verror.VError;
 
+
 function
 phase_critical_section_enter(ctl)
 {
@@ -57,6 +63,7 @@ phase_critical_section_enter(ctl)
 	try_lock();
 }
 
+
 module.exports = {
 	phase_critical_section_enter: phase_critical_section_enter,
 };
diff --git a/lib/phase_critical_section_exit.js b/lib/phase_critical_section_exit.js
index 7788e38..9a06f6a 100644
--- a/lib/phase_critical_section_exit.js
+++ b/lib/phase_critical_section_exit.js
@@ -1,13 +1,19 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_assert = require('assert-plus');
-var mod_verror = require('verror');
-var mod_vasync = require('vasync');
-var mod_jsprim = require('jsprim');
 
-var lib_common = require('../lib/common');
+var mod_verror = require('verror');
 
 var VE = mod_verror.VError;
 
+
 function
 phase_critical_section_exit(ctl)
 {
@@ -23,6 +29,7 @@ phase_critical_section_exit(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_critical_section_exit: phase_critical_section_exit,
 };
diff --git a/lib/phase_delete_data.js b/lib/phase_delete_data.js
index 975c3c8..f7ad7fb 100644
--- a/lib/phase_delete_data.js
+++ b/lib/phase_delete_data.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_net = require('net');
 
@@ -14,6 +24,7 @@ var lib_postgres = require('../lib/postgres');
 var VE = mod_verror.VError;
 var sprintf = mod_extsprintf.sprintf;
 
+
 function
 phase_delete_data(ctl)
 {
diff --git a/lib/phase_establish_cluster.js b/lib/phase_establish_cluster.js
index b75a279..6f59e61 100644
--- a/lib/phase_establish_cluster.js
+++ b/lib/phase_establish_cluster.js
@@ -1,5 +1,14 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
-var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 var mod_zkstream = require('zkstream');
@@ -9,8 +18,14 @@ var lib_common = require('../lib/common');
 
 var VE = mod_verror.VError;
 
+
+/*
+ * When we establish a new Manatee cluster, we need to nominate a peer for each
+ * of these three roles.
+ */
 var ROLES = [ 'primary', 'sync', 'async' ];
 
+
 function
 phase_establish_cluster(ctl)
 {
@@ -229,6 +244,7 @@ phase_establish_cluster(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_establish_cluster: phase_establish_cluster,
 };
diff --git a/lib/phase_freeze_cluster.js b/lib/phase_freeze_cluster.js
index d7f99e3..a35ddee 100644
--- a/lib/phase_freeze_cluster.js
+++ b/lib/phase_freeze_cluster.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
@@ -5,9 +15,9 @@ var mod_vasync = require('vasync');
 
 var VE = mod_verror.VError;
 
-var lib_manatee_adm = require('../lib/manatee_adm');
 var lib_common = require('../lib/common');
 
+
 function
 phase_freeze_cluster(ctl)
 {
@@ -107,6 +117,7 @@ phase_freeze_cluster(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_freeze_cluster: phase_freeze_cluster,
 };
diff --git a/lib/phase_install_ring.js b/lib/phase_install_ring.js
index 26d5ccf..e910926 100644
--- a/lib/phase_install_ring.js
+++ b/lib/phase_install_ring.js
@@ -1,16 +1,24 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 
-var lib_common = require('../lib/common');
-
 var VE = mod_verror.VError;
 
+
 function
 phase_install_ring(ctl)
 {
-	var p = ctl.plan();
 	var status = ctl.status();
 
 	var hold = false;
@@ -89,6 +97,7 @@ phase_install_ring(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_install_ring: phase_install_ring,
 };
diff --git a/lib/phase_reconfigure_peers.js b/lib/phase_reconfigure_peers.js
index a304b57..4d12f45 100644
--- a/lib/phase_reconfigure_peers.js
+++ b/lib/phase_reconfigure_peers.js
@@ -1,12 +1,21 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 
-var lib_common = require('../lib/common');
-
 var VE = mod_verror.VError;
 
+
 function
 phase_reconfigure_peers(ctl)
 {
@@ -183,6 +192,7 @@ phase_reconfigure_peers(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_reconfigure_peers: phase_reconfigure_peers,
 };
diff --git a/lib/phase_remap_ring.js b/lib/phase_remap_ring.js
index 0e724b9..1bf519a 100644
--- a/lib/phase_remap_ring.js
+++ b/lib/phase_remap_ring.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
@@ -10,6 +20,7 @@ var lib_common = require('../lib/common');
 
 var VE = mod_verror.VError;
 
+
 function
 phase_remap_ring(ctl)
 {
@@ -476,6 +487,7 @@ phase_remap_ring(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_remap_ring: phase_remap_ring,
 };
diff --git a/lib/phase_restart_electric_moray_readonly.js b/lib/phase_restart_electric_moray_readonly.js
index 464d464..d2613d6 100644
--- a/lib/phase_restart_electric_moray_readonly.js
+++ b/lib/phase_restart_electric_moray_readonly.js
@@ -1,27 +1,25 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_path = require('path');
-var mod_fs = require('fs');
-var mod_http = require('http');
-var mod_net = require('net');
 
-var mod_assert = require('assert-plus');
-var mod_verror = require('verror');
 var mod_vasync = require('vasync');
-var mod_uuid = require('uuid');
-var mod_jsprim = require('jsprim');
 
 var lib_common = require('../lib/common');
 var lib_electric_moray = require('../lib/electric_moray');
 
-var VE = mod_verror.VError;
 
 function
 phase_restart_electric_moray_readonly(ctl)
 {
 	var insts;
-	var plan = ctl.plan();
 	var status = ctl.status();
-	var scripts = {};
 
 	mod_vasync.waterfall([ function (done) {
 		if (ctl.pausing(done)) {
@@ -134,6 +132,7 @@ ensure_shards_are_read_only(ctl, lookup_shard)
 	return (old_readonly && new_readonly);
 }
 
+
 module.exports = {
 	phase_restart_electric_moray_readonly:
 	    phase_restart_electric_moray_readonly,
diff --git a/lib/phase_restart_electric_moray_readwrite.js b/lib/phase_restart_electric_moray_readwrite.js
index 0719e23..b9068a6 100644
--- a/lib/phase_restart_electric_moray_readwrite.js
+++ b/lib/phase_restart_electric_moray_readwrite.js
@@ -1,27 +1,25 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_path = require('path');
-var mod_fs = require('fs');
-var mod_http = require('http');
-var mod_net = require('net');
 
-var mod_assert = require('assert-plus');
-var mod_verror = require('verror');
 var mod_vasync = require('vasync');
-var mod_uuid = require('uuid');
-var mod_jsprim = require('jsprim');
 
 var lib_common = require('../lib/common');
 var lib_electric_moray = require('../lib/electric_moray');
 
-var VE = mod_verror.VError;
 
 function
 phase_restart_electric_moray_readwrite(ctl)
 {
 	var insts;
-	var plan = ctl.plan();
 	var status = ctl.status();
-	var scripts = {};
 
 	mod_vasync.waterfall([ function (done) {
 		if (ctl.pausing(done)) {
@@ -133,6 +131,7 @@ ensure_shards_are_read_write(ctl, lookup_shard)
 	return (old_readwrite && new_readwrite);
 }
 
+
 module.exports = {
 	phase_restart_electric_moray_readwrite:
 	    phase_restart_electric_moray_readwrite,
diff --git a/lib/phase_sapi_cleanup.js b/lib/phase_sapi_cleanup.js
index 16a0fd6..0cbfe38 100644
--- a/lib/phase_sapi_cleanup.js
+++ b/lib/phase_sapi_cleanup.js
@@ -1,13 +1,22 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 var mod_jsprim = require('jsprim');
 
-var lib_common = require('../lib/common');
-
 var VE = mod_verror.VError;
 
+
 function
 phase_sapi_cleanup(ctl)
 {
@@ -131,6 +140,7 @@ cleanup_one(ctl, zone, callback)
 	});
 }
 
+
 module.exports = {
 	phase_sapi_cleanup: phase_sapi_cleanup,
 };
diff --git a/lib/phase_shutdown_new_peers.js b/lib/phase_shutdown_new_peers.js
index 14c96d5..11b5ceb 100644
--- a/lib/phase_shutdown_new_peers.js
+++ b/lib/phase_shutdown_new_peers.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_net = require('net');
 
@@ -9,6 +19,7 @@ var lib_common = require('../lib/common');
 
 var VE = mod_verror.VError;
 
+
 function
 phase_shutdown_new_peers(ctl)
 {
@@ -425,6 +436,7 @@ shut_down_one_role(ctl, primary, candidates, role, status, callback)
 	});
 }
 
+
 module.exports = {
 	phase_shutdown_new_peers: phase_shutdown_new_peers,
 };
diff --git a/lib/phase_unfreeze_cluster.js b/lib/phase_unfreeze_cluster.js
index fd98de4..3c64203 100644
--- a/lib/phase_unfreeze_cluster.js
+++ b/lib/phase_unfreeze_cluster.js
@@ -1,12 +1,22 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 
+var lib_common = require('../lib/common');
+
 var VE = mod_verror.VError;
 
-var lib_manatee_adm = require('../lib/manatee_adm');
-var lib_common = require('../lib/common');
 
 function
 phase_unfreeze_cluster(ctl)
@@ -145,6 +155,7 @@ unfreeze_shard(ctl, shard, status, callback)
 	});
 }
 
+
 module.exports = {
 	phase_unfreeze_cluster: phase_unfreeze_cluster,
 };
diff --git a/lib/phase_update_electric_moray_ring.js b/lib/phase_update_electric_moray_ring.js
index 50b1857..b301ece 100644
--- a/lib/phase_update_electric_moray_ring.js
+++ b/lib/phase_update_electric_moray_ring.js
@@ -1,13 +1,19 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
-var mod_path = require('path');
-var mod_fs = require('fs');
-var mod_http = require('http');
 var mod_net = require('net');
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
-var mod_uuid = require('uuid');
 var mod_jsprim = require('jsprim');
 
 var lib_common = require('../lib/common');
@@ -16,13 +22,12 @@ var lib_electric_moray = require('../lib/electric_moray');
 
 var VE = mod_verror.VError;
 
+
 function
 phase_update_electric_moray_ring(ctl)
 {
 	var insts;
-	var plan = ctl.plan();
 	var status = ctl.status();
-	var scripts = {};
 
 	var opts = {
 		HASH_RING_IMAGE: ctl.prop_get('new_hash_ring_uuid'),
@@ -284,8 +289,6 @@ update_one(ctl, zone, opts, status, callback)
 function
 restart_until_ok(ctl, zone, smf, script_opts, callback)
 {
-	var p = ctl.plan();
-
 	var complete = false;
 	var script;
 
@@ -517,6 +520,7 @@ restart_until_ok(ctl, zone, smf, script_opts, callback)
 	});
 }
 
+
 module.exports = {
 	phase_update_electric_moray_ring: phase_update_electric_moray_ring,
 };
diff --git a/lib/phase_update_sapi_mark_readonly.js b/lib/phase_update_sapi_mark_readonly.js
index 193b09a..1dc13b4 100644
--- a/lib/phase_update_sapi_mark_readonly.js
+++ b/lib/phase_update_sapi_mark_readonly.js
@@ -1,12 +1,18 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
-var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 var mod_jsprim = require('jsprim');
 
-var lib_common = require('../lib/common');
-
-var VE = mod_verror.VError;
 
 function
 phase_update_sapi_mark_readonly(ctl)
@@ -92,6 +98,7 @@ phase_update_sapi_mark_readonly(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_update_sapi_mark_readonly: phase_update_sapi_mark_readonly,
 };
diff --git a/lib/phase_update_sapi_mark_readwrite.js b/lib/phase_update_sapi_mark_readwrite.js
index d932b3a..6a79872 100644
--- a/lib/phase_update_sapi_mark_readwrite.js
+++ b/lib/phase_update_sapi_mark_readwrite.js
@@ -1,13 +1,22 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
 var mod_jsprim = require('jsprim');
 
-var lib_common = require('../lib/common');
-
 var VE = mod_verror.VError;
 
+
 function
 phase_update_sapi_mark_readwrite(ctl)
 {
@@ -96,6 +105,7 @@ phase_update_sapi_mark_readwrite(ctl)
 	});
 }
 
+
 module.exports = {
 	phase_update_sapi_mark_readwrite: phase_update_sapi_mark_readwrite,
 };
diff --git a/lib/postgres.js b/lib/postgres.js
index df10ca9..db0c6e0 100644
--- a/lib/postgres.js
+++ b/lib/postgres.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_assert = require('assert-plus');
 var mod_pg = require('pg');
@@ -157,6 +167,7 @@ info_set(info)
 	self.pg_info = info;
 };
 
+
 module.exports = {
 	Postgres: Postgres,
 };
diff --git a/lib/serial.js b/lib/serial.js
index c439da2..1a8b5bb 100644
--- a/lib/serial.js
+++ b/lib/serial.js
@@ -1,13 +1,15 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_assert = require('assert-plus');
-var mod_restify = require('restify');
-var mod_verror = require('verror');
-var mod_vasync = require('vasync');
-var mod_jsprim = require('jsprim');
-var mod_uuid = require('uuid');
 
-var VE = mod_verror.VError;
+var mod_assert = require('assert-plus');
 
 
 function
diff --git a/lib/status.js b/lib/status.js
index 7d1a9bd..59f4648 100644
--- a/lib/status.js
+++ b/lib/status.js
@@ -1,3 +1,12 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
 var mod_assert = require('assert-plus');
@@ -7,6 +16,7 @@ var mod_monowrap = require('monowrap');
 
 var sprintf = mod_extsprintf.sprintf;
 
+
 var ID = 0;
 
 var UTF8 = false;
@@ -238,6 +248,7 @@ pretty_print(status_dump, extra_opts)
 	return (status_print_level(status_dump, { stk: [] }, g));
 }
 
+
 module.exports = {
 	Status: Status,
 	pretty_print: pretty_print,
diff --git a/lib/template.js b/lib/template.js
index 8bdf094..ad38819 100644
--- a/lib/template.js
+++ b/lib/template.js
@@ -1,4 +1,12 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
 
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
 
 var mod_path = require('path');
@@ -7,7 +15,6 @@ var mod_fs = require('fs');
 var mod_assert = require('assert-plus');
 var mod_verror = require('verror');
 var mod_vasync = require('vasync');
-var mod_jsprim = require('jsprim');
 
 var VE = mod_verror.VError;
 
@@ -193,6 +200,7 @@ template_load(name, callback)
 	});
 }
 
+
 module.exports = {
 	template_load: template_load,
 };
diff --git a/lib/triton_access.js b/lib/triton_access.js
index 6177e5e..ac437a2 100644
--- a/lib/triton_access.js
+++ b/lib/triton_access.js
@@ -1,3 +1,13 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_net = require('net');
 
@@ -8,6 +18,7 @@ var mod_jsprim = require('jsprim');
 
 var VE = mod_verror.VError;
 
+
 function
 get_sapi_application(log, sapi, name, include_master, callback)
 {
@@ -519,6 +530,7 @@ get_hashring_image(ctx, uuid, callback)
 	});
 }
 
+
 module.exports = {
 	get_sapi_application: get_sapi_application,
 	refresh_manta_application: refresh_manta_application,
diff --git a/lib/wrap.sh b/lib/wrap.sh
index a19d29f..b620e8b 100755
--- a/lib/wrap.sh
+++ b/lib/wrap.sh
@@ -1,5 +1,13 @@
 #!/bin/bash
-# vim: set ts=8 sts=8 sw=8 noet:
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
 
 set -o errexit
 set -o pipefail
diff --git a/scripts/reshard.sh b/scripts/reshard.sh
index 65e37ff..e777c71 100755
--- a/scripts/reshard.sh
+++ b/scripts/reshard.sh
@@ -1,4 +1,13 @@
 #!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
 
 case "$1" in
 plan)
diff --git a/smf/manifests/reshard.xml b/smf/manifests/reshard.xml
index aacc46b..8a74c07 100644
--- a/smf/manifests/reshard.xml
+++ b/smf/manifests/reshard.xml
@@ -7,7 +7,7 @@
 -->
 
 <!--
-    Copyright (c) 2017, Joyent, Inc.
+    Copyright (c) 2018, Joyent, Inc.
 -->
 
 <service_bundle type="manifest" name="manta-application-reshard">
diff --git a/templates/electric-moray-get-vnodes.sh b/templates/electric-moray-get-vnodes.sh
index 45a2327..8a0493e 100644
--- a/templates/electric-moray-get-vnodes.sh
+++ b/templates/electric-moray-get-vnodes.sh
@@ -1,4 +1,13 @@
 #!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
 
 NODE='/opt/smartdc/electric-moray/build/node/bin/node'
 EM_BIN='/opt/smartdc/electric-moray/node_modules/.bin'
diff --git a/templates/electric-moray-update-ring.sh b/templates/electric-moray-update-ring.sh
index 14353c9..69705b7 100644
--- a/templates/electric-moray-update-ring.sh
+++ b/templates/electric-moray-update-ring.sh
@@ -1,4 +1,13 @@
 #!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
 
 NODE='/opt/smartdc/electric-moray/build/node/bin/node'
 EM_BIN='/opt/smartdc/electric-moray/node_modules/.bin'
diff --git a/templates/hashring-cleanup.sh b/templates/hashring-cleanup.sh
index 26a6c4d..b68c09d 100644
--- a/templates/hashring-cleanup.sh
+++ b/templates/hashring-cleanup.sh
@@ -1,4 +1,13 @@
 #!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
 
 export PATH='/usr/bin:/usr/sbin:/sbin'
 
diff --git a/templates/hashring-create-archive.sh b/templates/hashring-create-archive.sh
index 1f5c87c..86ac16d 100644
--- a/templates/hashring-create-archive.sh
+++ b/templates/hashring-create-archive.sh
@@ -1,4 +1,13 @@
 #!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
 
 NODE='/opt/smartdc/electric-moray/build/node/bin/node'
 EM_BIN='/opt/smartdc/electric-moray/node_modules/.bin'
diff --git a/templates/hashring-prime-workspace.sh b/templates/hashring-prime-workspace.sh
index 50da2eb..4971788 100644
--- a/templates/hashring-prime-workspace.sh
+++ b/templates/hashring-prime-workspace.sh
@@ -1,4 +1,14 @@
 #!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
+
 #
 # This script will download a pristine copy of the current hash ring database
 # from IMGAPI and unpack it in a workspace directory specific to the current
diff --git a/templates/hashring-remap-vnodes.sh b/templates/hashring-remap-vnodes.sh
index 5867cea..da7cb10 100644
--- a/templates/hashring-remap-vnodes.sh
+++ b/templates/hashring-remap-vnodes.sh
@@ -1,4 +1,14 @@
 #!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
+
 #
 # This script will use the pristine copy of the hash ring database previously
 # unpacked in the workspace directory, marking all of the vnodes for a
diff --git a/test/generate_cluster_state.js b/test/generate_cluster_state.js
index 465128a..2363d4e 100755
--- a/test/generate_cluster_state.js
+++ b/test/generate_cluster_state.js
@@ -1,6 +1,15 @@
 #!/usr/bin/env node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
-var mod_fs = require('fs');
 var mod_util = require('util');
 
 var mod_verror = require('verror');
@@ -8,8 +17,6 @@ var mod_verror = require('verror');
 var lib_manatee_adm = require('../lib/manatee_adm');
 
 
-
-
 var result = lib_manatee_adm.generate_cluster_state({
 	peers: [
 		{ zone: '884697f8-d5e6-40ab-8023-86f96879db43',
diff --git a/test/manatee_adm_parser.js b/test/manatee_adm_parser.js
index a17d31d..e906ee3 100755
--- a/test/manatee_adm_parser.js
+++ b/test/manatee_adm_parser.js
@@ -1,4 +1,14 @@
 #!/usr/bin/env node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var mod_fs = require('fs');
 var mod_util = require('util');
@@ -8,12 +18,10 @@ var mod_verror = require('verror');
 var lib_manatee_adm = require('../lib/manatee_adm');
 
 
-
 var data = mod_fs.readFileSync(process.argv[2]).toString('utf8');
 
 var result = lib_manatee_adm.parse_manatee_adm_show(data);
 
-
 if (result instanceof Error) {
 	var info = mod_verror.info(result);
 	var stack = mod_verror.fullStack(result);
diff --git a/test/status.js b/test/status.js
index bd4c81d..157c078 100755
--- a/test/status.js
+++ b/test/status.js
@@ -1,4 +1,14 @@
 #!/usr/bin/env node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var lib_status = require('../lib/status');
 
diff --git a/test/status_wide.js b/test/status_wide.js
index 2aba49a..0837fea 100755
--- a/test/status_wide.js
+++ b/test/status_wide.js
@@ -1,4 +1,14 @@
 #!/usr/bin/env node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
 
 var lib_status = require('../lib/status');
 
diff --git a/test/template.js b/test/template.js
index f4ced4c..fa7e2e6 100755
--- a/test/template.js
+++ b/test/template.js
@@ -1,7 +1,14 @@
 #!/usr/bin/env node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
 
-var mod_fs = require('fs');
-var mod_util = require('util');
 
 var mod_verror = require('verror');
 
@@ -9,6 +16,7 @@ var lib_template = require('../lib/template');
 
 var VE = mod_verror.VError;
 
+
 var opts = {};
 
 process.argv.slice(3).forEach(function (arg) {
@@ -22,7 +30,6 @@ process.argv.slice(3).forEach(function (arg) {
 	opts[t[0]] = t[1];
 });
 
-
 lib_template.template_load(process.argv[2], function (err, t) {
 	if (err) {
 		console.error('ERROR: %s', VE.fullStack(err));
-- 
2.21.0

