From 63ecec4455ffe4397ed23edace7c0409015800a4 Mon Sep 17 00:00:00 2001
From: Patrick Mooney <pmooney@pfmooney.com>
Date: Wed, 3 Aug 2016 19:47:51 +0000
Subject: [PATCH] OS-5572 seg_umap should load mapping for F_SOFTLOCK Reviewed
 by: Jerry Jelinek <jerry.jelinek@joyent.com> Reviewed by: Robert Mustacchi
 <rm@joyent.com> Approved by: Jerry Jelinek <jerry.jelinek@joyent.com>

---
 usr/src/uts/common/vm/seg_umap.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/usr/src/uts/common/vm/seg_umap.c b/usr/src/uts/common/vm/seg_umap.c
index 1475ec8af9..3b4bb04f69 100644
--- a/usr/src/uts/common/vm/seg_umap.c
+++ b/usr/src/uts/common/vm/seg_umap.c
@@ -238,13 +238,14 @@ segumap_fault(struct hat *hat, struct seg *seg, caddr_t addr, size_t len,
 	ASSERT(type == F_INVAL || type == F_SOFTLOCK);
 	rw_enter(&sud->sud_lock, RW_WRITER);
 
-	if (type == F_INVAL) {
+	if (type == F_INVAL ||
+	    (type == F_SOFTLOCK && sud->sud_softlockcnt == 0)) {
 		/*
 		 * Load the (entire) segment into the HAT.
 		 *
 		 * It's possible that threads racing into as_fault will cause
 		 * seg_umap to load the same range multiple times in quick
-		 * succession.  This is safely handled by hat_devload.
+		 * succession.  Redundant hat_devload operations are safe.
 		 */
 		for (uintptr_t i = 0; i < seg->s_size; i += PAGESIZE) {
 			pfn_t pfn;
-- 
2.21.0

