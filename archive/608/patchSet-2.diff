commit 1eddf46e4215b75ac5be2809afbaeaaec82bff1e (refs/changes/08/608/2)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2016-10-06T19:05:08+00:00 (3 years ago)
    
    joyent/node-ip6addr#1 Want a simpler Addr.clone()

diff --git a/ip6addr.js b/ip6addr.js
index 3098909..a63808c 100644
--- a/ip6addr.js
+++ b/ip6addr.js
@@ -9,7 +9,6 @@
  */
 
 var assert = require('assert-plus');
-var clone = require('clone');
 var util = require('util');
 
 
@@ -263,8 +262,10 @@ Addr.prototype.toLong = function toLong() {
 
 Addr.prototype.clone = function cloneAddr() {
   var out = new Addr();
-  out._fields = clone(this._fields);
-  out._attrs = clone(this._attrs);
+  out._fields = this._fields.slice();
+  for (var k in this._attrs) {
+      out._attrs[k] = this._attrs[k];
+  }
   return out;
 };
 
diff --git a/package.json b/package.json
index 37520c3..433ad7f 100644
--- a/package.json
+++ b/package.json
@@ -9,7 +9,6 @@
   },
   "main": "ip6addr.js",
   "dependencies": {
-    "clone": "1.0.0",
     "assert-plus": "0.1.5"
   },
   "devDependencies": {
diff --git a/test/clone.test.js b/test/clone.test.js
new file mode 100644
index 0000000..27ae10e
--- /dev/null
+++ b/test/clone.test.js
@@ -0,0 +1,90 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2016, Joyent, Inc.
+ */
+
+var test = require('tape').test;
+
+
+///--- Globals
+
+var lib;
+
+
+///--- Tests
+
+test('load library', function (t) {
+  lib = require('../ip6addr.js');
+  t.ok(lib);
+  t.end();
+});
+
+test('clone() produces an equivalent address', function (t) {
+  var addr1 = lib.parse('1.2.3.4');
+  var addr2 = addr1.clone();
+
+  t.deepEqual(addr1, addr2, 'IPv4: addr1 == addr2');
+  t.deepEqual(addr1.toString(), addr2.toString(),
+    'IPv4: addr1.toString() == addr2.toString()');
+
+  addr1 = lib.parse('::ffff:1.2.3.4');
+  addr2 = addr1.clone();
+
+  t.deepEqual(addr1, addr2, 'IPv4 Mapped: addr1 == addr2');
+  t.deepEqual(addr1.toString(), addr2.toString(),
+    'IPv4 Mapped: addr1.toString() == addr2.toString()');
+
+  addr1 = lib.parse('fd00::40e');
+  addr2 = addr1.clone();
+
+  t.deepEqual(addr1, addr2, 'IPv6: addr1 == addr2');
+  t.deepEqual(addr1.toString(), addr2.toString(),
+    'IPv6: addr1.toString() == addr2.toString()');
+
+  t.end();
+});
+
+test('modifying the clone has no effect on the original', function (t) {
+  var addr1 = lib.parse('1.2.3.4');
+  var addr2 = addr1.clone();
+
+  addr2._fields[7]++;
+  t.equal(addr1.toString(), '1.2.3.4', 'addr1 is still 1.2.3.4');
+  t.equal(addr2.toString(), '1.2.3.5', 'addr2 is now 1.2.3.5');
+
+  addr2._attrs.ipv4Bare = false;
+  addr2._attrs.ipv4Mapped = true;
+  t.equal(addr1.toString(), '1.2.3.4', 'addr1 remained the same');
+  t.equal(addr2.toString(), '::ffff:1.2.3.5', 'addr2 is now a v4-mapped addr');
+
+  addr2._attrs.ipv4Mapped = false;
+  t.equal(addr1.toString(), '1.2.3.4', 'addr1 remained the same');
+  t.equal(addr2.toString(), '::ffff:102:305', 'addr2 is now a v6 addr');
+
+  t.end();
+});
+
+test('modifying the original has no effect on the clone', function (t) {
+  var addr1 = lib.parse('1.2.3.4');
+  var addr2 = addr1.clone();
+
+  addr1._fields[7]++;
+  t.equal(addr1.toString(), '1.2.3.5', 'addr1 is now 1.2.3.5');
+  t.equal(addr2.toString(), '1.2.3.4', 'addr2 is still 1.2.3.4');
+
+  addr1._attrs.ipv4Bare = false;
+  addr1._attrs.ipv4Mapped = true;
+  t.equal(addr1.toString(), '::ffff:1.2.3.5', 'addr1 is now a v4-mapped addr');
+  t.equal(addr2.toString(), '1.2.3.4', 'addr2 remained the same');
+
+  addr1._attrs.ipv4Mapped = false;
+  t.equal(addr1.toString(), '::ffff:102:305', 'addr1 is now a v6 addr');
+  t.equal(addr2.toString(), '1.2.3.4', 'addr2 remained the same');
+
+  t.end();
+});
