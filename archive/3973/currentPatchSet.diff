From d88767147724e678489c2b6b13e2d5a0d509c2bc Mon Sep 17 00:00:00 2001
From: Mike Zeller <mike.zeller@joyent.com>
Date: Thu, 24 May 2018 15:02:58 +0000
Subject: [PATCH] TRITON-394 cleanupNics can be skipped if the workflow fails
 early enough Reviewed by: Cody Peter Mello <melloc@writev.io> Approved by:
 Cody Peter Mello <melloc@writev.io>

---
 lib/workflows/job-common.js |  9 +++-
 test/vms.full.test.js       | 88 +++++++++++++++++++++++++++++++++----
 2 files changed, 88 insertions(+), 9 deletions(-)

diff --git a/lib/workflows/job-common.js b/lib/workflows/job-common.js
index 8ae4dea..c07aefa 100644
--- a/lib/workflows/job-common.js
+++ b/lib/workflows/job-common.js
@@ -970,7 +970,14 @@ function cleanupNics(job, cb) {
     var macs = job.params.macs;
 
     if (!macs) {
-            var nics = job.params['add_nics'] || job.params['nics'];
+            /*
+             * filteredNetworks.nics will contain any pre provisioned NICs. If
+             * the workflow fails early enough the other job.params fields will
+             * not yet have been populated yet, but we still have some NICs that
+             * need to be removed.
+             */
+            var nics = job.params['add_nics'] || job.params['nics'] ||
+                job.params.filteredNetworks.nics;
 
             if (!nics) {
                 return cb(null, 'No MACs given, and no NICs were provisioned');
diff --git a/test/vms.full.test.js b/test/vms.full.test.js
index a946efb..01e11b3 100644
--- a/test/vms.full.test.js
+++ b/test/vms.full.test.js
@@ -84,6 +84,20 @@ function checkJob(t, job) {
     t.ok(job.params, 'params');
 }
 
+function getJobOk(t) {
+    assert.object(t, 't');
+
+    client.get(jobLocation, function (err, req, res, body) {
+        common.ifError(t, err);
+        t.equal(res.statusCode, 200, 'GetJob 200 OK');
+        common.checkHeaders(t, res.headers);
+        t.ok(body, 'job ok');
+        checkJob(t, body);
+        t.done();
+    });
+}
+
+
 
 function waitForNicState(t, query, state, waitCallback) {
     var stop = false;
@@ -804,6 +818,71 @@ exports.create_vm_with_unknown_network_name = function (t) {
     });
 };
 
+// Test that pre-provisioned NICs get cleaned up properly (TRITON-394)
+exports.create_vm_dapi_failure = function (t) {
+    var vm = {
+        alias: makeVmAlias(testUuid.generateShortUuid()),
+        owner_uuid: CUSTOMER,
+        image_uuid: IMAGE,
+        networks: [ { uuid: ADMIN_NETWORK.uuid } ],
+        brand: 'joyent-minimal',
+        billing_id: '00000000-0000-0000-0000-000000000000',
+        ram: 64000000, // Something way too large
+        quota: 10,
+        creator_uuid: CUSTOMER
+    };
+
+    var opts = createOpts('/vms', vm);
+
+    client.post(opts, vm, function onCreateVm(err, req, res, body) {
+        common.ifError(t, err);
+        t.equal(res.statusCode, 202, '202 Accepted');
+        common.checkHeaders(t, res.headers);
+        t.ok(res.headers['workflow-api'], 'workflow-api header');
+        t.ok(body, 'vm ok');
+
+        jobLocation = '/jobs/' + body.job_uuid;
+        t.ok(true, 'jobLocation: ' + jobLocation);
+        newUuid = body.vm_uuid;
+        t.ok(true, 'vmUuid: ' + newUuid);
+        vmLocation = '/vms/' + newUuid;
+
+        t.done();
+    });
+};
+
+exports.get_eventual_fail_job = function (t) {
+    getJobOk(t);
+};
+
+
+exports.wait_provisioned_job_failed = function (t) {
+    waitForValue(jobLocation, 'execution', 'failed', {
+        client: client
+    }, function (err) {
+        common.ifError(t, err);
+        t.done();
+    });
+};
+
+// verify create_vm_dapi_failure VM has no NICs
+exports.failed_provision_has_no_nics = function (t) {
+    var vmUuid = vmLocation.split('/')[2];
+
+    var params = {
+        belongs_to_uuid: vmUuid,
+        belongs_to_type: 'zone',
+        owner_uuid: CUSTOMER
+    };
+
+    client.napi.get({path: '/nics', query:  params},
+        function onGetNics(err, req, res, nics) {
+        common.ifError(t, err);
+        t.ok(Array.isArray(nics), 'nics array');
+        t.equal(nics.length, 0, 'failed provision has no nics');
+        t.done();
+    });
+};
 
 exports.create_vm = function (t) {
     var md = {
@@ -858,14 +937,7 @@ exports.create_vm = function (t) {
 
 
 exports.get_job = function (t) {
-    client.get(jobLocation, function (err, req, res, body) {
-        common.ifError(t, err);
-        t.equal(res.statusCode, 200, 'GetJob 200 OK');
-        common.checkHeaders(t, res.headers);
-        t.ok(body, 'job ok');
-        checkJob(t, body);
-        t.done();
-    });
+    getJobOk(t);
 };
 
 
-- 
2.21.0

