commit d402692540a999f73165f5d5262a9b43970dfff6 (refs/changes/92/992/1)
Author: Chris Burroughs <chris.burroughs@joyent.com>
Date:   2016-11-30T13:56:05-05:00 (2 years, 10 months ago)
    
    1112  2016-11-23_16:22:48 ./bin/triton  fwrule disable  172b1c32-2edd-4cfa-ac70-b2bcd0be0c5c
    1113  2016-11-23_16:22:54 ./bin/triton  fwrule list
    1114  2016-11-23_16:23:47 ./bin/triton  fwrule enable  172b1c32-2edd-4cfa-ac70-b2bcd0be0c5c

diff --git a/lib/do_fwrule/do_disable.js b/lib/do_fwrule/do_disable.js
index 7ea887b..7c51b87 100644
--- a/lib/do_fwrule/do_disable.js
+++ b/lib/do_fwrule/do_disable.js
@@ -30,22 +30,26 @@ function do_disable(subcmd, opts, args, cb) {
         return;
     }
 
-    var cli = this.top;
-
-    vasync.forEachParallel({
-        inputs: args,
-        func: function disableOne(id, nextId) {
-            cli.tritonapi.disableFirewallRule({ id: id }, function (err) {
-                if (err) {
-                    nextId(err);
-                    return;
-                }
-
-                console.log('Disabled firewall rule %s', id);
-                nextId();
-            });
+    var tritonapi = this.top.tritonapi;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        if (setupErr) {
+            cb(setupErr);
         }
-    }, cb);
+        vasync.forEachParallel({
+            inputs: args,
+            func: function disableOne(id, nextId) {
+                tritonapi.disableFirewallRule({ id: id }, function (err) {
+                    if (err) {
+                        nextId(err);
+                        return;
+                    }
+
+                    console.log('Disabled firewall rule %s', id);
+                    nextId();
+                });
+            }
+        }, cb);
+    });
 }
 
 
diff --git a/lib/do_fwrule/do_enable.js b/lib/do_fwrule/do_enable.js
index 4f22747..c5401e9 100644
--- a/lib/do_fwrule/do_enable.js
+++ b/lib/do_fwrule/do_enable.js
@@ -30,22 +30,26 @@ function do_enable(subcmd, opts, args, cb) {
         return;
     }
 
-    var cli = this.top;
-
-    vasync.forEachParallel({
-        inputs: args,
-        func: function enableOne(id, nextId) {
-            cli.tritonapi.enableFirewallRule({ id: id }, function (err) {
-                if (err) {
-                    nextId(err);
-                    return;
-                }
-
-                console.log('Enabled firewall rule %s', id);
-                nextId();
-            });
+    var tritonapi = this.top.tritonapi;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        if (setupErr) {
+            cb(setupErr);
         }
-    }, cb);
+        vasync.forEachParallel({
+            inputs: args,
+            func: function enableOne(id, nextId) {
+                tritonapi.enableFirewallRule({ id: id }, function (err) {
+                    if (err) {
+                        nextId(err);
+                        return;
+                    }
+
+                    console.log('Enabled firewall rule %s', id);
+                    nextId();
+                });
+            }
+        }, cb);
+    });
 }
 
 
