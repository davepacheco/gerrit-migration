commit 008aa6a8574698553a38ab5d23540deb9930e5d0 (refs/changes/68/968/2)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2016-12-01T02:46:25+00:00 (2 years, 10 months ago)
    
    joyent/node-mname-client#2 want to know which errors came from which nameservers
    Reviewed by: Cody Mello <cody.mello@joyent.com>

diff --git a/lib/client.js b/lib/client.js
index c3f352d..b620773 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -165,7 +165,7 @@ DnsClient.prototype.lookupOnce = function (options, cb) {
 		if (timer !== undefined) {
 			timer = undefined;
 			req.cancel();
-			cb(new TimeoutError(options.domain));
+			cb(new TimeoutError(options.domain, options.resolver));
 		}
 	}, options.timeout);
 
@@ -188,7 +188,7 @@ DnsClient.prototype.lookupOnce = function (options, cb) {
 			return;
 		}
 
-		var err = msg.toError();
+		var err = msg.toError(options.resolver);
 		if (err && err instanceof mod_message.TruncationError &&
 		    protocol === 'udp') {
 			self.dc_tcpNeeded.add(
@@ -254,11 +254,13 @@ DnsClient.prototype.lookupOnce = function (options, cb) {
 	return (req);
 };
 
-function TimeoutError(domain) {
+function TimeoutError(domain, resolver) {
 	if (Error.captureStackTrace)
 		Error.captureStackTrace(this, TimeoutError);
 	this.name = 'TimeoutError';
-	this.message = 'DNS request for "' + domain + '" timed out';
+	this.resolver = resolver;
+	this.message = 'DNS request for "' + domain + '" timed out [' +
+	    resolver + ']';
 }
 mod_util.inherits(TimeoutError, Error);
 
diff --git a/lib/message.js b/lib/message.js
index 67a278f..41bb120 100644
--- a/lib/message.js
+++ b/lib/message.js
@@ -40,13 +40,16 @@ ERR_CODES[mod_proto.rCodes.NOTAUTH] =
 ERR_CODES[mod_proto.rCodes.NOTZONE] =
     'DNS name not contained in given zone (NOTZONE)';
 
-function DnsError(code) {
+function DnsError(code, resolver) {
 	if (Error.captureStackTrace)
 		Error.captureStackTrace(this, DnsError);
 	this.rcode = code;
 	this.code = mod_proto.rCodes[code];
 	this.name = 'DnsError';
+	this.resolver = resolver;
 	this.message = ERR_CODES[code] || 'DNS error code ' + this.code;
+	if (resolver !== undefined)
+		this.message += ' [' + resolver + ']';
 }
 mod_util.inherits(DnsError, Error);
 
@@ -99,13 +102,13 @@ DnsMessage.prototype.isError = function () {
 	    this.header.flags.tc);
 };
 
-DnsMessage.prototype.toError = function () {
+DnsMessage.prototype.toError = function (resolver) {
 	if (this.header.flags.rcode === mod_proto.rCodes.NOERROR &&
 	    this.header.flags.tc) {
 		return (new TruncationError());
 	}
 	if (this.header.flags.rcode !== mod_proto.rCodes.NOERROR) {
-		return (new DnsError(this.header.flags.rcode));
+		return (new DnsError(this.header.flags.rcode, resolver));
 	}
 	return (null);
 };
diff --git a/package.json b/package.json
index b3b63c7..6f9c0e4 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "mname-client",
   "description": "DNS client library for node.js",
-  "version": "0.3.7",
+  "version": "0.4.0",
   "author": "Joyent, Inc",
   "scripts": {
     "test": "tape test/*.test.js"
diff --git a/test/google.test.js b/test/google.test.js
index 7c41a8a..3897304 100644
--- a/test/google.test.js
+++ b/test/google.test.js
@@ -50,8 +50,9 @@ mod_tape.test('look up a non-existent name with 8.8.8.8', function (t) {
 	});
 	req.on('reply', function (msg, done) {
 		t.ok(msg.isError());
-		var e = msg.toError();
+		var e = msg.toError('8.8.8.8');
 		t.strictEqual(e.code, 'NXDOMAIN');
+		t.strictEqual(e.resolver, '8.8.8.8');
 		done();
 		t.end();
 	});
