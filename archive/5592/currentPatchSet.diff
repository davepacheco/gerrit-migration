From 9113500d9cfe5a1238e68ba66aee45ee190dd009 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Thu, 21 Feb 2019 21:11:20 +0100
Subject: [PATCH] TRITON-1199 sdcadm failures when running test suite after
 triton-mockcloud is installed Reviewed by: Marsell Kukuljevic
 <marsell@joyent.com> Approved by: Marsell Kukuljevic <marsell@joyent.com>

---
 lib/cli/do_fix_core_vm_resolvers.js | 62 ++++++++++++++++-------------
 lib/cli/do_update_agents.js         | 11 ++++-
 lib/cli/do_update_gz_tools.js       |  8 ++--
 lib/post-setup/docker.js            |  3 +-
 lib/sdcadm.js                       |  5 +++
 lib/steps/binder.js                 |  2 +-
 lib/steps/sapi.js                   |  4 +-
 test/common.js                      | 13 +-----
 test/experimental.test.js           |  2 +-
 test/instances.test.js              | 15 +++----
 test/manatee.test.js                |  6 ++-
 test/platform.test.js               | 10 ++---
 test/post-setup-ha-binder.test.js   |  8 ++--
 test/post-setup.test.js             | 36 +----------------
 test/rollback.test.js               |  6 ---
 test/services.test.js               |  4 +-
 test/shared.js                      |  3 +-
 test/update-gz-tools.test.js        |  2 +-
 18 files changed, 86 insertions(+), 114 deletions(-)

diff --git a/lib/cli/do_fix_core_vm_resolvers.js b/lib/cli/do_fix_core_vm_resolvers.js
index 5db6af8..dd8709d 100644
--- a/lib/cli/do_fix_core_vm_resolvers.js
+++ b/lib/cli/do_fix_core_vm_resolvers.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var util = require('util');
@@ -28,38 +28,44 @@ function do_fix_core_vm_resolvers(subcmd, opts, args, cb) {
         return;
     }
 
-    steps.binder.checkCoreVmInstancesResolvers({
-        sdcadm: self.sdcadm,
-        progress: progress,
-        log: log,
-        adminOnly: opts.admin_only
-    }, function (err, resolvers) {
-        if (err) {
-            cb(err);
+    self.sdcadm.ensureSdcApp({}, function (appErr) {
+        if (appErr) {
+            cb(appErr);
             return;
         }
-
-        Object.keys(resolvers).forEach(function (r) {
-            progress(
-                format('VM %s (%s) resolvers need to be updated\n', r,
-                    resolvers[r].alias) +
-                common.indent(format('from [%s] to [%s]',
-                    resolvers[r].current.join(', '),
-                    resolvers[r].expected.join(', '))));
-        });
-
-        if (opts.dry_run) {
-            cb();
-            return;
-        }
-
-        steps.binder.updateCoreVmsResolvers({
+        steps.binder.checkCoreVmInstancesResolvers({
             sdcadm: self.sdcadm,
             progress: progress,
             log: log,
-            fixableResolvers: resolvers
-        }, function (updateError) {
-            cb(updateError);
+            adminOnly: opts.admin_only
+        }, function updateResolvers(err, resolvers) {
+            if (err) {
+                cb(err);
+                return;
+            }
+
+            Object.keys(resolvers).forEach(function reportProgress(r) {
+                progress(
+                    format('VM %s (%s) resolvers need to be updated\n', r,
+                        resolvers[r].alias) +
+                    common.indent(format('from [%s] to [%s]',
+                        resolvers[r].current.join(', '),
+                        resolvers[r].expected.join(', '))));
+            });
+
+            if (opts.dry_run) {
+                cb();
+                return;
+            }
+
+            steps.binder.updateCoreVmsResolvers({
+                sdcadm: self.sdcadm,
+                progress: progress,
+                log: log,
+                fixableResolvers: resolvers
+            }, function (updateError) {
+                cb(updateError);
+            });
         });
     });
 }
diff --git a/lib/cli/do_update_agents.js b/lib/cli/do_update_agents.js
index 45315b0..8d9dc63 100644
--- a/lib/cli/do_update_agents.js
+++ b/lib/cli/do_update_agents.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 'use strict';
 
@@ -517,6 +517,11 @@ UpdateAgents.prototype.exec = function exec(callback) {
                         ctx.excludedServers.push(srv.uuid);
                         return false;
                     }
+
+                    // Avoid attempts to use Ur in mock cloud servers:
+                    if (srv.hostname.indexOf('VC') === 0) {
+                        return false;
+                    }
                     return srv.setup;
                 });
                 next();
@@ -532,7 +537,9 @@ UpdateAgents.prototype.exec = function exec(callback) {
                     s = ctx.serverFromUuid[id] || ctx.serverFromHostname[id];
                     if (s) {
                         // Avoid drop dupes in `opts.servers`.
-                        if (!serverToUpdateFromUuid[s.uuid]) {
+                        if (!serverToUpdateFromUuid[s.uuid] &&
+                            // Skip mock cloud servers
+                            (s.hostname.indexOf('VC') !== 0)) {
                             ctx.serversToUpdate.push(s);
                             serverToUpdateFromUuid[s.uuid] = true;
                         }
diff --git a/lib/cli/do_update_gz_tools.js b/lib/cli/do_update_gz_tools.js
index 8baee6f..a99cbb5 100644
--- a/lib/cli/do_update_gz_tools.js
+++ b/lib/cli/do_update_gz_tools.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var child_process = require('child_process');
@@ -613,8 +613,10 @@ UpdateGzTools.prototype.execute = function cExecute(opts, args, callback) {
             common.urDiscovery({
                 sdcadm: sdcadm,
                 progress: progress,
-                nodes: ctx.servers.map(
-                    function (s) {
+
+                nodes: ctx.serversToUpdate.filter(function skipMocks(s) {
+                        return s.hostname && s.hostname.indexOf('VC') !== 0;
+                    }).map(function (s) {
                         return s.uuid;
                     }),
                 urconn: ctx.urconn
diff --git a/lib/post-setup/docker.js b/lib/post-setup/docker.js
index 5c7ffa5..70cac65 100644
--- a/lib/post-setup/docker.js
+++ b/lib/post-setup/docker.js
@@ -485,7 +485,8 @@ function do_docker(subcmd, opts, args, cb) {
                     }
                 } else {
                     ctx.serversToUpdate = servers.filter(function (svr) {
-                        return svr.setup;
+                        // Skip unsetup servers and mock cloud ones:
+                        return svr.setup && svr.hostname.indexOf('VC') !== 0;
                     });
                 }
 
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 5b88add..c4b9658 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -3914,6 +3914,11 @@ SdcAdm.prototype.checkHealth = function checkHealth(opts, cb) {
             next();
             return;
         }
+        // Avoid trying to use urConnection with Mock Cloud Servers:
+        if (inst.type === 'agent' && inst.hostname.indexOf('VC') === 0) {
+            next();
+            return;
+        }
 
         // Make sure we remove the properties we'll assign later from an
         // eventual previous invocation of this function, or those will be
diff --git a/lib/steps/binder.js b/lib/steps/binder.js
index 3a8891e..1ba04af 100644
--- a/lib/steps/binder.js
+++ b/lib/steps/binder.js
@@ -44,7 +44,7 @@ function checkCoreVmInstancesResolvers(arg, cb) {
     assert.func(arg.progress, 'arg.progress');
     assert.object(arg.log, 'arg.log');
     assert.object(arg.sdcadm, 'arg.sdcadm');
-    assert.object(arg.sdcadm.sdcApp, 'arg.sdcaadm.sdcApp');
+    assert.object(arg.sdcadm.sdcApp, 'arg.sdcadm.sdcApp');
     assert.optionalObject(arg.ctx, 'arg.ctx');
     assert.func(cb, 'cb');
 
diff --git a/lib/steps/sapi.js b/lib/steps/sapi.js
index abd481b..9de86c1 100644
--- a/lib/steps/sapi.js
+++ b/lib/steps/sapi.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018 Joyent, Inc.
+ * Copyright (c) 2019 Joyent, Inc.
  *
  * Steps for doing some things with SAPI.
  */
@@ -34,7 +34,7 @@ function ensureAgentServices(arg, cb) {
     assert.func(arg.progress, 'arg.progress');
     assert.object(arg.log, 'arg.log');
     assert.object(arg.sdcadm, 'arg.sdcadm');
-    assert.object(arg.sdcadm.sdcApp, 'arg.sdcaadm.sdcApp');
+    assert.object(arg.sdcadm.sdcApp, 'arg.sdcadm.sdcApp');
     assert.func(cb, 'cb');
 
     var log = arg.log.child({component: 'sapiEnsureAgentServices'}, true);
diff --git a/test/common.js b/test/common.js
index d227a58..6ab80f6 100644
--- a/test/common.js
+++ b/test/common.js
@@ -5,11 +5,10 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 var exec = require('child_process').exec;
-var util = require('util');
 
 var vasync = require('vasync');
 
@@ -89,14 +88,6 @@ function checkInsts(t, opts, cb) {
                 return;
             }
 
-            var description = (item.alias !== '-') ?
-                util.format('%s (%s)', item.alias, item.instance) :
-                util.format('%s (%s)', item.instance, item.service);
-            t.comment(util.format('checking %s in %s',
-                description, item.hostname));
-
-
-
             var cmd2 = 'sdc-sapi /instances/' + item.instance + ' | json -H';
             exec(cmd2, function (err2, stdout2, stderr2) {
                 t.ifError(err2, 'no SAPI error');
@@ -120,7 +111,6 @@ function checkInsts(t, opts, cb) {
                 var cmd = 'sdc-vmapi /vms/' + item.instance + ' | json -H';
                 exec(cmd, function (err, stdout, stderr) {
                     t.ifError(err, 'no VMAPI error');
-
                     var vmDetails = parseJsonOut(stdout);
                     if (!vmDetails) {
                         t.ok(false, 'failed to parse JSON for cmd ' + cmd);
@@ -146,7 +136,6 @@ function checkInsts(t, opts, cb) {
 
                         exec(cmd3, function (err3, stdout3, stderr3) {
                             t.ifError(err3, 'IMGAPI call error');
-
                             var imgInfo = parseJsonOut(stdout3);
                             if (!imgInfo) {
                                 t.ok(false, 'failed to parse JSON for cmd ' +
diff --git a/test/experimental.test.js b/test/experimental.test.js
index b3092d5..978729a 100644
--- a/test/experimental.test.js
+++ b/test/experimental.test.js
@@ -119,7 +119,7 @@ test('sdcadm experimental update-agents --just-download', function (t) {
 });
 
 
-test('sdcadm experimental update-agents --force --latest --yes', function (t) {
+test('sdcadm experimental update-agents -a --latest --yes', function (t) {
     var cmd = 'sdcadm experimental update-agents --latest --yes -a';
     exec(cmd, function (err, stdout, stderr) {
         t.ifError(err, 'Execution error');
diff --git a/test/instances.test.js b/test/instances.test.js
index 8e3981f..3527535 100644
--- a/test/instances.test.js
+++ b/test/instances.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 
@@ -49,6 +49,13 @@ function parseInstancesOutput(t, output, expectedTitles) {
 
 
 function checkInstancesDetails(t, instancesDetails) {
+    // Prevent checking of mockcloud agent instances or mockloud itself:
+    instancesDetails = instancesDetails.filter(function removeMocks(inst) {
+        var svcName = inst[1];
+        var cnHostName = inst[2];
+        return (svcName !== 'mockcloud' && cnHostName.indexOf('VC') !== 0);
+    });
+
     instancesDetails = instancesDetails.map(function (item) {
         return ({
             instance: item[0],
@@ -132,7 +139,6 @@ test('sdcadm instances', function (t) {
         // global, so other tests can compare against
         INSTANCES_DETAILS = parseInstancesOutput(t, stdout);
         t.ok(INSTANCES_DETAILS.length > 0);
-
         checkInstancesDetails(t, common.deepCopy(INSTANCES_DETAILS));
     });
 });
@@ -248,7 +254,6 @@ test('dockerlogger insts of removed servers', function (t) {
     var svcCmd = 'sdc-sapi /services?name=dockerlogger|json -H';
     exec(svcCmd, function execCb(err, stdout, stderr) {
         t.ifError(err);
-        t.equal(stderr, '');
         var services = JSON.parse(stdout.trim());
         t.ok(Array.isArray(services));
         t.ok(services[0].uuid);
@@ -264,14 +269,11 @@ test('dockerlogger insts of removed servers', function (t) {
 
         exec(instCmd, function execCb2(err2, stdout2, stderr2) {
             t.ifError(err2);
-            t.equal(stderr2, '');
-
             // TOOLS-1492: Orphan server instances should not throw exceptions
             // and sdcadm should just ignore them:
             var listCmd = 'sdcadm insts svc=dockerlogger -j';
             exec(listCmd, function execCb3(err3, stdout3, stderr3) {
                 t.ifError(err3);
-                t.equal(stderr3, '');
 
                 var listOfInsts = JSON.parse(stdout.trim());
                 t.ok(Array.isArray(listOfInsts));
@@ -281,7 +283,6 @@ test('dockerlogger insts of removed servers', function (t) {
                     '-X DELETE';
                 exec(delCmd, function execCb4(err4, stdout4, stderr4) {
                     t.ifError(err4);
-                    t.equal(stderr4, '');
 
                     t.end();
                 });
diff --git a/test/manatee.test.js b/test/manatee.test.js
index 29db524..944cf7b 100644
--- a/test/manatee.test.js
+++ b/test/manatee.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
@@ -40,7 +40,9 @@ function getServers(t, cb) {
         t.ifError(err, 'cnapi error');
         t.equal(stdout, '', 'empty stdout');
         var out = JSON.parse(stderr);
-        servers = out;
+        servers = out.filter(function skipMocks(s) {
+            return s.hostname.indexOf('VC') !== 0;
+        });
         cb();
     });
 }
diff --git a/test/platform.test.js b/test/platform.test.js
index 6a7e9d0..cc96de3 100644
--- a/test/platform.test.js
+++ b/test/platform.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 
@@ -235,7 +235,6 @@ test('sdcadm platform usage VERSION', function (t) {
         if (!usageDetails || !usageDetails.length) {
             // If latest platform is not used at all, we will not have any
             // output so cannot check titles:
-            t.comment('Skipping usage checks (latest platform not used)');
             t.end();
             return;
         }
@@ -263,7 +262,6 @@ test('sdcadm platform usage VERSION -j', function (t) {
         if (!usageDetails || !usageDetails.length) {
             // If latest platform is not used at all, we will not have any
             // output so cannot check titles:
-            t.comment('Skipping usage checks (latest platform not used)');
             t.end();
             return;
         }
@@ -333,7 +331,10 @@ test('sdcadm platform assign', function (t) {
         t.end();
         return;
     }
-    var _1stServer = CNAPI_SERVERS[0];
+    var _1stServer = CNAPI_SERVERS.filter(function skipMocks(s) {
+        return s.hostname.indexOf('VC') !== 0;
+    })[0];
+
     var currPlatform = _1stServer.boot_platform;
     var cmd = util.format('sdcadm platform assign %s %s',
             LATEST_AVAIL_PLATFORM.version, _1stServer.uuid);
@@ -374,7 +375,6 @@ test('sdcadm platform assign', function (t) {
                     t.ifError(err3, 'Execution error');
                     t.equal(stderr3, '', 'Empty stderr');
 
-
                     t.notEqual(stdout3.indexOf('updating ' +
                                 _1stServer.hostname +
                                 ' ' + _1stServer.uuid + ' to ' +
diff --git a/test/post-setup-ha-binder.test.js b/test/post-setup-ha-binder.test.js
index 404c4b8..8b1f468 100644
--- a/test/post-setup-ha-binder.test.js
+++ b/test/post-setup-ha-binder.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
@@ -32,8 +32,10 @@ function getServers(t, cb) {
         t.ifError(err, 'cnapi error');
         t.equal(stdout, '', 'empty stdout');
         var out = JSON.parse(stderr);
-        servers = out;
-        if (out.length && out.length > 1) {
+        servers = out.filter(function skipMocks(s) {
+            return s.hostname.indexOf('VC') !== 0;
+        });
+        if (servers.length && servers.length > 1) {
             haveMultipleServers = true;
         }
         cb();
diff --git a/test/post-setup.test.js b/test/post-setup.test.js
index 08e9b45..abb74f2 100644
--- a/test/post-setup.test.js
+++ b/test/post-setup.test.js
@@ -5,14 +5,12 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
  * PENDING TESTS:
  *
- * - Complete ha-manatee setup
- * - Complete ha-bider setup
  * - post-setup fabrics
  * - post-setup underlay-nics
  */
@@ -320,38 +318,6 @@ test('sdcadm post-setup help dev-sample-data', function (t) {
 });
 
 
-test('sdcadm post-setup ha-manatee', function (t) {
-    exec('sdcadm post-setup ha-manatee', function (err, stdout, stderr) {
-        t.ok(err);
-
-        t.equal(stdout, '');
-        t.notEqual(stderr.indexOf('Must specify 2 target servers'), -1);
-
-        t.end();
-    });
-});
-
-
-test('sdcadm post-setup ha-manatee --servers', function (t) {
-    var serverUuids = '';
-
-    exec('sdcadm post-setup ha-manatee -s' + serverUuids,
-         function (err, stdout, stderr) {
-             console.log(err);
-             console.log(stdout);
-             console.log(stderr);
-        // TODO
-        t.end();
-    });
-});
-
-
-test('sdcadm post-setup help ha-manatee', function (t) {
-    checkHelp(t, 'post-setup ha-manatee',
-              'Create 2nd and 3rd manatee instances');
-});
-
-
 test('sdcadm post-setup help fabrics', function (t) {
     checkHelp(t, 'post-setup fabrics',
               'Create portolan instance and setup fabrics');
diff --git a/test/rollback.test.js b/test/rollback.test.js
index e5f34a2..b8bfcf5 100644
--- a/test/rollback.test.js
+++ b/test/rollback.test.js
@@ -122,7 +122,6 @@ test('setup', function (t) {
             },
             function (_, next) {
                 if (!AVAILABLE_VERSION) {
-                    t.comment('No available image, skipping update');
                     next();
                     return;
                 }
@@ -176,7 +175,6 @@ test('sdcadm rollback', function (t) {
 
 test('sdcadm rollback -f', function (t) {
     if (!SUCCESSFULLY_UPDATED) {
-        t.comment('Update did not happened. Skipping rollback');
         t.end();
         return;
     }
@@ -195,7 +193,6 @@ test('sdcadm rollback -f', function (t) {
 
 test('sdcadm rollback --dry-run -f', function (t) {
     if (!SUCCESSFULLY_UPDATED) {
-        t.comment('Update did not happened. Skipping rollback');
         t.end();
         return;
     }
@@ -214,7 +211,6 @@ test('sdcadm rollback --dry-run -f', function (t) {
 
 test('sdcadm rollback --dry-run --force --yes -f', function (t) {
     if (!SUCCESSFULLY_UPDATED) {
-        t.comment('Update did not happened. Skipping rollback');
         t.end();
         return;
     }
@@ -235,7 +231,6 @@ test('sdcadm rollback --dry-run --force --yes -f', function (t) {
 
 test('sdcadm rollback --force --yes -f', function (t) {
     if (!SUCCESSFULLY_UPDATED) {
-        t.comment('Update did not happened. Skipping rollback');
         t.end();
         return;
     }
@@ -272,7 +267,6 @@ test('sdcadm rollback --force --yes -f', function (t) {
 
 test('teardown', function (t) {
     if (!SUCCESSFULLY_UPDATED) {
-        t.comment('Update did not happened. Skipping teardown');
         t.end();
         return;
     }
diff --git a/test/services.test.js b/test/services.test.js
index 8dff178..e1b415e 100644
--- a/test/services.test.js
+++ b/test/services.test.js
@@ -5,13 +5,12 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 
 var test = require('tape').test;
 var exec = require('child_process').exec;
-var util = require('util');
 
 var vasync = require('vasync');
 
@@ -91,7 +90,6 @@ function checkServicesDetails(t, servicesDetails) {
             var name     = serviceDetails[2];
             var imgUuid  = serviceDetails[3];
             var numInsts = +serviceDetails[4];
-            t.comment(util.format('checking service %s (%s)', name, svcUuid));
 
             t.notEqual(['vm', 'agent'].indexOf(type), -1,
                 svcUuid + ' service type');
diff --git a/test/shared.js b/test/shared.js
index 4021ab8..80f050b 100644
--- a/test/shared.js
+++ b/test/shared.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
@@ -31,7 +31,6 @@ function haveCommonExternalNics(t, cb) {
         'json -H';
     exec(cmd, function haveNicsCb(err, stdout, stderr) {
         t.ifError(err, 'Execution error');
-        t.equal(stderr, '', 'Empty stderr');
         var vms = common.parseJsonOut(stdout);
         vms = vms.filter(function alreadyHasExternalNic(vm) {
             return vm.nics.some(function (nic) {
diff --git a/test/update-gz-tools.test.js b/test/update-gz-tools.test.js
index 17072f1..fb96990 100644
--- a/test/update-gz-tools.test.js
+++ b/test/update-gz-tools.test.js
@@ -115,7 +115,7 @@ test('update-gz-tools --latest --just-download', function (t) {
 
         findStrings.forEach(function (str) {
             t.notEqual(stdout.indexOf(str), -1,
-                util.format('check just-download string present %s', str));
+                util.format('check just-download string present \'%s\'', str));
         });
 
         var findNotStrings = [
-- 
2.21.0

