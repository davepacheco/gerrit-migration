From ae70eb1382c3c613c83d1f51500440b1e932494c Mon Sep 17 00:00:00 2001
From: "Pedro P. Candel" <pedro@joyent.com>
Date: Sat, 6 Aug 2016 08:34:27 +0200
Subject: [PATCH] TOOLS-1487 sdcadm improve function for handling circular
 references Reviewed by: Trent Mick <trent.mick@joyent.com> Reviewed by:
 Joshua M. Clulow <jmc@joyent.com>

---
 lib/common.js       | 21 ++++++++++++++++++++-
 lib/history.js      | 27 ++++-----------------------
 lib/ur.js           | 14 ++------------
 test/common.test.js | 31 +++++++++++++++++++++++++++++++
 4 files changed, 57 insertions(+), 36 deletions(-)
 create mode 100644 test/common.test.js

diff --git a/lib/common.js b/lib/common.js
index f2bdc5f..a565ceb 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -1590,6 +1590,24 @@ function copyFile(src, dst, cb) {
     readStream.pipe(writeStream);
 }
 
+
+// Intended to be used as second argument to JSON.stringify() in order to
+// prevent 'TypeError: Converting circular structure to JSON'
+function safeCycles() {
+    var objs = [];
+    return function (key, value) {
+        if (!value || typeof (value) !== 'object') {
+            return value;
+        }
+        if (objs.indexOf(value) !== -1) {
+            return '[Circular]';
+        } else {
+            objs.push(value);
+        }
+        return value;
+    };
+}
+
 //---- exports
 
 module.exports = {
@@ -1624,6 +1642,7 @@ module.exports = {
     isUsbKeyMounted: isUsbKeyMounted,
     mountUsbKey: mountUsbKey,
     unmountUsbKey: unmountUsbKey,
-    copyFile: copyFile
+    copyFile: copyFile,
+    safeCycles: safeCycles
 };
 // vim: set softtabstop=4 shiftwidth=4:
diff --git a/lib/history.js b/lib/history.js
index ae03cac..578bc04 100644
--- a/lib/history.js
+++ b/lib/history.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 /*
  * This file includes both, the `sdcadm history` command and the functions
@@ -24,37 +24,18 @@ var assert = require('assert-plus');
 var uuid = require('node-uuid');
 var vasync = require('vasync');
 
+var common = require('./common');
 var errors = require('./errors');
 
 var UUID_RE = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
 
-// Intended to be used as second argument to JSON.Stringify() in order to
-// prevent 'TypeError: Converting circular structure to JSON'
-function replacer() {
-    var i = 0;
-    var objs = [];
-    return function (key, value) {
-        // Avoid "RangeError: Maximum call stack size exceeded"
-        // (Note this is an arbitrary number, need to set max depth
-        // at some point)
-        if (i >= 29) {
-            return '[Unknown]';
-        }
-        i += 1;
-        if (objs.indexOf(value) !== -1) {
-            return '[Circular]';
-        } else {
-            objs.push(value);
-        }
-        return value;
-    };
-}
+
 
 
 function saveHistoryToFile(fname, history, cb) {
     var s;
     try {
-        s = JSON.stringify(history, replacer());
+        s = JSON.stringify(history, common.safeCycles());
     } catch (e) {
         s = '{}';
     }
diff --git a/lib/ur.js b/lib/ur.js
index be44bcb..ecfeb93 100644
--- a/lib/ur.js
+++ b/lib/ur.js
@@ -88,18 +88,8 @@ function exec(opts, cb) {
             5000 : opts.connectTimeout),
         enable_http: false
     });
-    // Prevent issues with bunyan logger, console.log and other functions
-    // trying to stringify the error messages comming from ur client, which
-    // happen to include Circular references
-    client.on('error', function (err) {
-        if (err.urce_amqp) {
-            delete err.urce_amqp;
-        }
-        if (err.urce_urconn) {
-            delete err.urce_urconn;
-        }
-        return cb_(err);
-    });
+
+    client.on('error', cb_);
     client.on('ready', function () {
         client.exec({
             script: opts.cmd,
diff --git a/test/common.test.js b/test/common.test.js
new file mode 100644
index 0000000..b90fc0c
--- /dev/null
+++ b/test/common.test.js
@@ -0,0 +1,31 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2016 Joyent, Inc.
+ */
+
+var test = require('tape').test;
+var common = require('/opt/smartdc/sdcadm/lib/common.js');
+
+test('safeCycles', function (t) {
+    var a = {
+        foo: {
+            bar: null
+        }
+    };
+    a.foo.bar = a;
+
+    t.throws(function () {
+        JSON.stringify(a);
+    }, TypeError);
+
+    t.doesNotThrow(function () {
+        JSON.stringify(a, common.safeCycles());
+    }, TypeError);
+
+    t.end();
+});
-- 
2.21.0

