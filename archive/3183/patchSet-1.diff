commit 0395f8ef8cf19658dd04d064e70749dc26f135e3 (refs/changes/83/3183/1)
Author: Richard Bradley <richard.bradley@joyent.com>
Date:   2018-01-10T14:28:06+00:00 (1 year, 9 months ago)
    
    MANTA-3541 allocation of ZK_IDs is broken

diff --git a/lib/deploy.js b/lib/deploy.js
index 9d3142f..7c02c5c 100644
--- a/lib/deploy.js
+++ b/lib/deploy.js
@@ -415,15 +415,21 @@ Deployer.prototype.deploy = function (options, svcname, callback)
 			if (!metadata.ZK_SERVERS)
 				metadata.ZK_SERVERS = [];
 
+			var zkId = pickNextZkId(metadata.ZK_SERVERS);
+			if (zkId instanceof Error) {
+				log.error(zkId);
+				cb(zkId);
+				return;
+			}
+
 			metadata.ZK_SERVERS.push({
 				host: nic.ip,
-				port: 2181
+				port: 2181,
+				num: zkId
 			});
 
 			var len = metadata.ZK_SERVERS.length;
 
-			metadata.ZK_SERVERS[len - 1].num = len;
-
 			for (var ii = 0; ii < len - 1; ii++)
 				delete metadata.ZK_SERVERS[ii].last;
 			metadata.ZK_SERVERS[len - 1].last = true;
@@ -991,3 +997,28 @@ function pickNextStorageId(instances, svcname)
 
 	return (sprintf('%d.%s', max + 1, svcname));
 }
+
+function pickNextZkId(servers)
+{
+	var max, err, server, n;
+
+	max = 0;
+	err = null;
+
+	for (var i = 0; i < servers.length; i++) {
+		server = servers[i];
+		n = parseInt(server.num, 10);
+		if (isNaN(n) || n < 1) {
+			err = new VError('ZK_SERVERS[%d].num ("%s") is not a ' +
+			    'positive integer', i, server.num);
+			break;
+		}
+		max = Math.max(max, n);
+	}
+
+	if (err !== null) {
+		return (new VError(err, 'failed to allocate new ZK_ID'));
+	}
+
+	return (max + 1);
+}
