From 249144228f290fc4d101cc2324d2f85eb8d495e8 Mon Sep 17 00:00:00 2001
From: Tim Foster <tim.foster@joyent.com>
Date: Fri, 17 May 2019 10:48:08 +0100
Subject: [PATCH] TOOLS-2178 eng check targets should reference resources in
 deps/eng/tools

---
 Makefile           |   8 +--
 bin/manta-mako-adm |   4 +-
 deps/eng           |   2 +-
 tools/bashstyle    | 164 ---------------------------------------------
 4 files changed, 7 insertions(+), 171 deletions(-)
 delete mode 100755 tools/bashstyle

diff --git a/Makefile b/Makefile
index d03fc01..d80c081 100644
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2019, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 #
@@ -25,7 +25,6 @@
 #
 # Tools
 #
-BASHSTYLE	 = $(NODE) tools/bashstyle
 TAPE		:= ./node_modules/.bin/tape
 NPM		:= npm
 NGXSYMCHECK	= tools/ngx_symcheck
@@ -40,6 +39,7 @@ JSL_CONF_NODE	= tools/jsl.node.conf
 JSL_FILES_NODE	= $(JS_FILES)
 JSSTYLE_FILES	= $(JS_FILES)
 JSSTYLE_FLAGS	= -f tools/jsstyle.conf
+SMF_MANIFESTS	= smf/manifests/nginx.xml
 
 #
 # Variables
@@ -67,6 +67,7 @@ TOP ?= $(error Unable to access eng.git submodule Makefiles.)
 ifeq ($(shell uname -s),SunOS)
 	include ./deps/eng/tools/mk/Makefile.node_prebuilt.defs
 	include ./deps/eng/tools/mk/Makefile.agent_prebuilt.defs
+	include ./deps/eng/tools/mk/Makefile.smf.defs
 else
 	include ./deps/eng/tools/mk/Makefile.node.defs
 endif
@@ -97,8 +98,6 @@ $(TAPE): | $(NPM_EXEC)
 
 CLEAN_FILES += $(TAPE) ./node_modules/ build
 
-check-bash: $(NODE_EXEC)
-
 .PHONY: test
 test: $(TAPE)
 	@for f in test/*.test.js; do	\
@@ -149,6 +148,7 @@ include ./deps/eng/tools/mk/Makefile.deps
 ifeq ($(shell uname -s),SunOS)
 	include ./deps/eng/tools/mk/Makefile.node_prebuilt.targ
 	include ./deps/eng/tools/mk/Makefile.agent_prebuilt.targ
+	include ./deps/eng/tools/mk/Makefile.smf.targ
 else
 	include ./deps/eng/tools/mk/Makefile.node.targ
 endif
diff --git a/bin/manta-mako-adm b/bin/manta-mako-adm
index 2890825..d4440e3 100755
--- a/bin/manta-mako-adm
+++ b/bin/manta-mako-adm
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2015, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 #
@@ -180,7 +180,7 @@ function check_status
 		warn "minnow is disabled, but moray record indicates enabled"
 		rv=1
 	fi
-	
+
 	return $rv
 }
 
diff --git a/deps/eng b/deps/eng
index 126c0f0..d25b8fc 160000
--- a/deps/eng
+++ b/deps/eng
@@ -1 +1 @@
-Subproject commit 126c0f032b8bfddd45b14e8ee14e73e9798a013f
+Subproject commit d25b8fc60fb8c649559924870fe3aaf75e7421d5
diff --git a/tools/bashstyle b/tools/bashstyle
deleted file mode 100755
index 3e8052e..0000000
--- a/tools/bashstyle
+++ /dev/null
@@ -1,164 +0,0 @@
-#!/usr/bin/env node
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-/*
- * bashstyle: check bash scripts for adherence to style guidelines, including:
- *
- *    o no lines longer than 80 characters
- *    o file does not end with a blank line
- *    o Do not use 'local' and var initialization *using a subshell* in the
- *      same statement. See
- *      <http://www.tldp.org/LDP/abs/html/localvar.html#EXITVALANOMALY01>
- *      for why not. Arguably this belongs in a separate 'bashlint'.
- *
- * Future enhancements could include:
- *    o indents consistent with respect to tabs, spaces
- *    o indents consistently sized (all are some multiple of the smallest
- *      indent, which must be a tab or 4 or 8 spaces)
- */
-
-var VERSION = '2.0.0';
-
-var mod_assert = require('assert');
-var mod_fs = require('fs');
-
-var nerrors = 0;
-
-main();
-process.exit(0);
-
-function main()
-{
-	var files = process.argv.slice(2);
-
-	if (files.length === 0) {
-		console.error('usage: %s file1 [...]',
-		    process.argv.slice(0, 2).join(' '));
-		process.exit(2);
-	}
-
-	files.forEach(checkFile);
-
-	if (nerrors != 0)
-		process.exit(1);
-}
-
-function checkFile(filename)
-{
-	var text = mod_fs.readFileSync(filename, 'utf-8');
-	var lines = text.split('\n');
-	var i;
-	var styled = false;
-	var styleStart;
-
-	mod_assert.ok(lines.length > 0);
-
-	/*
-	 * Expand tabs in each line and check for long lines.
-	 */
-	for (i = 1; i <= lines.length; i++) {
-		var line = expandTabs(lines[i - 1]);
-
-		if (i > 1 && lines[i-2].match(/# BASHSTYLED/)) {
-			continue;
-		}
-
-		if (line.match(/# BEGIN BASHSTYLED/)) {
-			styleStart = i;
-			styled = true;
-		}
-
-		if (line.match(/# END BASHSTYLED/)) {
-			if (styled != true) {
-				nerrors++;
-				console.log('%s: %d: END BASHSTYLED w/o corresponding BEGIN',
-				            filename, i);
-			}
-			styled = false;
-		}
-
-		if (!styled && line.match(/^\s*local\s+(\w+)\s*=.*\$\(/)) {
-			nerrors++;
-			var m = line.match(/^\s*local\s+(\w+)\s*=/);
-			console.log('%s: %d: declaring and setting a "local" ' +
-				'var in the same statement ' +
-				'ignores a subshell return code ' +
-				'<http://www.tldp.org/LDP/abs/html/localvar.html#EXITVALANOMALY01>: ' +
-				'local %s=...',
-				filename, i, m[1]);
-		}
-
-		// Regexplanation: non-[, [, space (contents) space, ], non-]
-		// groups before and after brackets to ease search/replace.
-		if (!styled && line.match(/(^|[^\[])\[(\s.+\s)\]([^\]])/)) {
-			nerrors++;
-			console.log('%s: %d: prefer [[ to [ for tests.', filename, i);
-		}
-
-		if (!styled && line.length > 80) {
-			nerrors++;
-			console.log('%s: %d: line exceeds 80 columns',
-			    filename, i);
-		}
-	}
-
-	if (styled) {
-		nerrors++;
-		console.log('%s: %d: BEGIN BASHSTYLED that does not END',
-		            filename, styleStart);
-	}
-
-
-	/*
-	 * No sane editor lets you save a file without a newline at the very end.
-	 */
-	if (lines[lines.length - 1].length !== 0) {
-		nerrors++;
-		console.log('%s: %d: file does not end with newline',
-			filename, lines.length);
-	}
-
-	/*
-	 * Since the file will always end with a newline, the last entry of
-	 * "lines" will actually be blank.
-	 */
-	if (lines.length > 1 && lines[lines.length - 2].length === 0) {
-		nerrors++;
-		console.log('%s: %d: file ends with a blank line',
-		    filename, lines.length - 1);
-	}
-}
-
-function expandTabs(text)
-{
-	var out = '';
-	var col = 0;
-	var j, k;
-
-	for (j = 0; j < text.length; j++) {
-		if (text[j] != '\t') {
-			out += text[j];
-			col++;
-			continue;
-		}
-
-		k = 8 - (col % 8);
-		col += k;
-
-		do {
-			out += ' ';
-		}  while (--k > 0);
-
-		col += k;
-	}
-
-	return (out);
-}
-- 
2.21.0

