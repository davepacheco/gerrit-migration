From e7af000cece4f73801edeacfd665c184c45057cf Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Wed, 13 Feb 2019 14:04:54 -0800
Subject: [PATCH] TRITON-1226 add dev support for manually making mockcloud
 cn-agent "agents_uninstall" delay and fail

---
 lib/backends/dummy/tasks/agents_uninstall.js | 69 ++++++++++++++------
 package.json                                 |  2 +-
 2 files changed, 51 insertions(+), 20 deletions(-)

diff --git a/lib/backends/dummy/tasks/agents_uninstall.js b/lib/backends/dummy/tasks/agents_uninstall.js
index a6a8462..ec6dd83 100644
--- a/lib/backends/dummy/tasks/agents_uninstall.js
+++ b/lib/backends/dummy/tasks/agents_uninstall.js
@@ -24,11 +24,23 @@ var path = require('path');
 var assert = require('assert-plus');
 var rimraf = require('rimraf');
 var vasync = require('vasync');
+var VError = require('verror');
 
 var common = require('../common');
 var shared = require('./shared');
 var Task = require('../../../task_agent/task');
 
+// These constants can be manually tweaked for development to have this task
+// randomly be slow or fail.
+//
+// - Set `DEV_DELAY_MAX_MS` to a maximum number of milliseconds to delay
+//   the execution of removing the agents. The actual delay is a randomized
+//   value up to this maximum
+// - Set `DEV_FAIL_RATE` to a value between 0.0 and 1.0 for a probability that
+//   this task executation will fail.
+const DEV_DELAY_MAX_MS = 0;
+const DEV_FAIL_RATE = 0;
+
 function AgentsUninstallTask(req) {
     Task.call(this);
     this.req = req;
@@ -46,28 +58,47 @@ function start() {
     var agents = self.req.params.agents;
     var agentsDir = path.join(common.SERVER_ROOT, self.sysinfo.UUID, 'agents');
 
-    vasync.forEachPipeline({
-        inputs: agents,
-        func: function rmOneAgent(agent, nextAgent) {
-            var agentDir = path.join(agentsDir, agent);
-            rimraf(agentDir, nextAgent);
-        }
-    }, function onRemoved(rmErr) {
-        if (rmErr) {
-            self.fatal('AgentsUninstallTask error: ' + rmErr.message);
-            return;
-        }
+    vasync.pipeline({funcs: [
+        function handleDevDelay(_, next) {
+            if (DEV_DELAY_MAX_MS) {
+                var delay = Math.random() * DEV_DELAY_MAX_MS;
+                setTimeout(next, delay);
+            } else {
+                next();
+            }
+        },
 
-        shared.refreshAgents({
-            log: self.log,
-            serverUuid: self.sysinfo.UUID
-        }, function (refreshErr) {
-            if (refreshErr) {
-                self.fatal('AgentsUninstallTask error: ' + refreshErr.message);
+        function handleDevFail(_, next) {
+            if (DEV_FAIL_RATE && Math.random() < DEV_FAIL_RATE) {
+                next(new VError('random dev failure (DEV_FAIL_RATE=%f)',
+                    DEV_FAIL_RATE));
             } else {
-                self.finish();
+                next();
             }
-        });
+        },
+
+        function rmAgentDirs(_, next) {
+            vasync.forEachPipeline({
+                inputs: agents,
+                func: function rmOneAgent(agent, nextAgent) {
+                    var agentDir = path.join(agentsDir, agent);
+                    rimraf(agentDir, nextAgent);
+                }
+            }, next);
+        },
+
+        function refreshTheAgentsInCnapi(_, next) {
+            shared.refreshAgents({
+                log: self.log,
+                serverUuid: self.sysinfo.UUID
+            }, next);
+        }
+    ]}, function finish(err) {
+        if (err) {
+            self.fatal('AgentsUninstallTask error: ' + err.message);
+        } else {
+            self.finish();
+        }
     });
 }
 
diff --git a/package.json b/package.json
index ffb73d8..acb351d 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cn-agent",
   "description": "Triton Compute Node Agent",
-  "version": "2.8.2",
+  "version": "2.8.3",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

