From 8ee479a33344da4e0b851e2b8bc16d0602efad5f Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Thu, 13 Oct 2016 14:12:14 -0700
Subject: [PATCH] DOCKER-950 docker pull fails on registry that does not use
 authentication Reviewed by: Trent Mick <trentm@gmail.com>

---
 lib/registry-client-v2.js | 45 ++++++++++++++++++++++-----------------
 1 file changed, 25 insertions(+), 20 deletions(-)

diff --git a/lib/registry-client-v2.js b/lib/registry-client-v2.js
index 41f17ab..25b952a 100644
--- a/lib/registry-client-v2.js
+++ b/lib/registry-client-v2.js
@@ -68,18 +68,20 @@ function _basicAuthHeader(username, password) {
 
 
 /*
- * Return an appropriate "Authorization" HTTP header for the given auth info.
+ * Set the appropriate "Authorization" HTTP header into the headers object from
+ * the given auth info.
  * - Bearer auth if `token`.
  * - Else, Basic auth if `username` and `password`.
  * - Else, undefined
  */
-function _authHeaderFromAuthInfo(authInfo) {
+function _setAuthHeaderFromAuthInfo(headers, authInfo) {
     if (authInfo.token) {
-        return 'Bearer ' + authInfo.token;
+        headers.authorization = 'Bearer ' + authInfo.token;
     } else if (authInfo.username && authInfo.password) {
-        return _basicAuthHeader(authInfo.username, authInfo.password);
-    } else {
-        return undefined;
+        headers.authorization = _basicAuthHeader(authInfo.username,
+            authInfo.password);
+    } else if (headers.authorization) {
+        delete headers.authorization;
     }
 }
 
@@ -186,8 +188,10 @@ function _getToken(opts, cb) {
         query.account = opts.username;
     }
     if (opts.username && opts.password) {
-        headers.authorization = _basicAuthHeader(opts.username,
-            opts.password);
+        _setAuthHeaderFromAuthInfo(headers, {
+            username: opts.username,
+            password: opts.password
+        });
     }
     if (Object.keys(query).length) {
         tokenUrl += '?' + querystring.stringify(query);
@@ -676,10 +680,12 @@ function ping(opts, cb) {
 
     var headers = {};
     if (opts.authInfo) {
-        headers.authorization = _authHeaderFromAuthInfo(opts.authInfo);
+        _setAuthHeaderFromAuthInfo(headers, opts.authInfo);
     } else if (opts.username) {
-        headers.authorization = _basicAuthHeader(opts.username,
-            opts.password);
+        _setAuthHeaderFromAuthInfo(headers, {
+            username: opts.username,
+            password: opts.password
+        });
     }
 
     client.get({
@@ -999,13 +1005,13 @@ function RegistryClientV2(opts) {
     this.password = opts.password;
     this._loggedIn = false;
     this._authInfo = null;
-    this._headers = {
-        authorization: _authHeaderFromAuthInfo({
-            token: opts.token,
-            username: opts.username,
-            password: opts.password
-        })
-    };
+    this._headers = {};
+
+    _setAuthHeaderFromAuthInfo(this._headers, {
+        token: opts.token,
+        username: opts.username,
+        password: opts.password
+    });
 
     // XXX relevant for v2?
     //this._cookieJar = new tough.CookieJar();
@@ -1123,8 +1129,7 @@ RegistryClientV2.prototype.login = function regLogin(opts, cb) {
             assert.ok(result);
             self._loggedIn = true;
             self._authInfo = result.authInfo;
-            self._headers.authorization =
-                _authHeaderFromAuthInfo(self._authInfo);
+            _setAuthHeaderFromAuthInfo(self._headers, self._authInfo);
         }
         self.log.trace({err: err, loggedIn: self._loggedIn}, 'login: done');
         cb(err);
-- 
2.21.0

