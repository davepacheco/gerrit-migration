commit 0ef2859a094d212d5ef80594564e39f4150d94da
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2019-06-27T21:05:08+00:00 (3 months ago)
    
    TRITON-439 firewaller stops performing sync tasks and never recovers

diff --git a/Makefile b/Makefile
index 1c710cc..607e701 100644
--- a/Makefile
+++ b/Makefile
@@ -58,7 +58,16 @@ DSTDIR          := $(RELSTAGEDIR)/$(NAME)
 NODEUNIT_EXEC := ./node_modules/.bin/nodeunit
 NODEUNIT := $(NODE) $(NODEUNIT_EXEC)
 
-
+#
+# Due to the unfortunate nature of npm, the Node Package Manager, there appears
+# to be no way to assemble our dependencies without running the lifecycle
+# scripts.  These lifecycle scripts should not be run except in the context of
+# an agent installation or uninstallation, so we provide a magic environment
+# varible to disable them here.
+#
+NPM_ENV =		SDC_AGENT_SKIP_LIFECYCLE=yes
+NPM_ENV +=		MAKE_OVERRIDES="CTFCONVERT=/bin/true CTFMERGE=/bin/true"
+RUN_NPM_INSTALL =	$(NPM_ENV) $(NPM) install
 
 #
 # Repo-specific targets
@@ -68,7 +77,7 @@ NODEUNIT := $(NODE) $(NODEUNIT_EXEC)
 # against the platform node
 .PHONY: all
 all: $(SMF_MANIFESTS) | $(NODE_EXEC) $(NPM_EXEC) $(REPO_DEPS)
-	SDC_AGENT_SKIP_LIFECYCLE=yes MAKE_OVERRIDES="CTFCONVERT=/bin/true CTFMERGE=/bin/true" $(NPM) install --production
+	$(RUN_NPM_INSTALL) --production
 	cp -r deps/fw-overlay/* node_modules/fw
 
 CLEAN_FILES += node_modules
@@ -83,7 +92,7 @@ test: $(NODEUNIT_EXEC)
 	done)
 
 $(NODEUNIT_EXEC): $(NPM_EXEC)
-	$(NPM) install
+	$(RUN_NPM_INSTALL)
 
 .PHONY: release
 release: all docs $(SMF_MANIFESTS)
diff --git a/lib/agent.js b/lib/agent.js
index 11dac5b..580c9b7 100644
--- a/lib/agent.js
+++ b/lib/agent.js
@@ -103,6 +103,8 @@ function FwAgent(opts) {
     assert.object(opts.vmapi, 'opts.vmapi');
     assert.string(opts.vmapi.host, 'opts.vmapi');
 
+    assert.optionalObject(opts.cueballAgent, 'opts.cueballAgent');
+
     var self = this;
     this.cache = new VMCache();
     this.config = opts;
@@ -117,6 +119,8 @@ function FwAgent(opts) {
     this.config.fwapi.fast.host = opts.fwapi.host;
     this.config.fwapi.fast.client_id = opts.serverUUID;
 
+    this.cueballAgent = this.config.cueballAgent;
+
     if (opts.imageVersion < '20131105T084235Z') {
         fw._setOldIPF();
     }
@@ -268,6 +272,7 @@ FwAgent.prototype.runTask = function runTask(message, callback) {
     log.info('Running task "%s"', message.name);
 
     return tasks[message.name]({
+        cueballAgent: this.cueballAgent,
         cache: this.cache,
         config: this.config,
         log: log,
diff --git a/lib/fwapi.js b/lib/fwapi.js
index 2c30273..736eae9 100644
--- a/lib/fwapi.js
+++ b/lib/fwapi.js
@@ -133,7 +133,10 @@ function createClient(opts) {
     assert.object(opts.config.fwapi, 'opts.config.fwapi');
     assert.string(opts.config.fwapi.host, 'opts.config.fwapi.host');
 
-    return new FWAPI({ url: 'http://' + opts.config.fwapi.host });
+    return new FWAPI({
+        agent: opts.cueballAgent,
+        url: 'http://' + opts.config.fwapi.host
+    });
 }
 
 
diff --git a/lib/vmapi.js b/lib/vmapi.js
index 7fc77cd..3214ca6 100644
--- a/lib/vmapi.js
+++ b/lib/vmapi.js
@@ -50,7 +50,10 @@ function buildRVM(vm) {
 
 
 function createClient(opts) {
-    return new VMAPI({ url: 'http://' + opts.config.vmapi.host });
+    return new VMAPI({
+        agent: opts.cueballAgent,
+        url: 'http://' + opts.config.vmapi.host
+    });
 }
 
 
diff --git a/main.js b/main.js
index 455b5e2..6494758 100644
--- a/main.js
+++ b/main.js
@@ -17,6 +17,7 @@
 var assert = require('assert-plus');
 var bunyan = require('bunyan');
 var config = require('./lib/config');
+var cueball = require('cueball');
 var firewaller = require('./lib/agent');
 var fs = require('fs');
 var netconfig = require('triton-netconfig');
@@ -75,6 +76,27 @@ config.sdc(function (err, sdcConfig) {
         CONFIG.vmapi = { host: sdcConfig.vmapi_domain };
         CONFIG.listenIP = netconfig.adminIpFromSysinfo(sysinfo);
 
+        var resolvers = sdcConfig.binder_admin_ips.split(/,/g);
+
+        CONFIG.cueballAgent = new cueball.HttpAgent({
+            resolvers: resolvers,
+            initialDomains: [
+                CONFIG.fwapi.host,
+                CONFIG.vmapi.host
+            ],
+            spares: 3,
+            maximum: 10,
+            recovery: {
+                default: {
+                    timeout: 2000,
+                    maxTimeout: 8000,
+                    retries: 3,
+                    delay: 0,
+                    maxDelay: 1000
+                }
+            }
+        });
+
         if (!CONFIG.listenIP) {
             LOG.error({ sysinfo: sysinfo }, 'Error finding sysinfo admin IP');
             return;
diff --git a/package.json b/package.json
index 63e95e1..aa1e478 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "firewaller",
     "description": "Triton Data Center firewalling agent",
-    "version": "1.5.4",
+    "version": "1.5.5",
     "author": "Joyent (joyent.com)",
     "private": true,
     "dependencies": {
@@ -9,9 +9,10 @@
         "backoff": "2.3.0",
         "bunyan": "0.22.1",
         "clone": "1.0.2",
+        "cueball": "2.7.1",
         "fast-stream": "git+https://github.com/joyent/sdc-fast-stream.git#893d59d",
         "fw": "./deps/fw",
-        "jsprim": "0.5.0",
+        "jsprim": "2.0.0",
         "lockfd": "~1.2.1",
         "restify": "2.6.1",
         "sdc-clients": "12.1.1",
diff --git a/test/unit/helpers.js b/test/unit/helpers.js
index 4e1232d..8903569 100644
--- a/test/unit/helpers.js
+++ b/test/unit/helpers.js
@@ -130,6 +130,7 @@ function setupMocks() {
     var allowed = [
         './',
         './add-rule',
+        './agent',
         './bunyan_helper',
         './cache',
         './charset.js',
