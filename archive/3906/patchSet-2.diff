commit 68430c7e747fb282297f2c40730424e180f2b21c (refs/changes/06/3906/2)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2018-05-03T21:41:19+00:00 (1 year, 5 months ago)
    
    TRITON-367 Check network pool owners during NIC provisioning

diff --git a/lib/models/network-pool.js b/lib/models/network-pool.js
index 733d30e..6df797d 100644
--- a/lib/models/network-pool.js
+++ b/lib/models/network-pool.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -407,6 +407,20 @@ Object.defineProperty(NetworkPool.prototype, 'uuid', {
 });
 
 
+NetworkPool.prototype.isOwner = function poolHasOwner(owner) {
+    if (!this.params.hasOwnProperty('owner_uuids') ||
+        this.params.owner_uuids.length === 0) {
+        return true;
+    }
+
+    if (owner === constants.UFDS_ADMIN_UUID) {
+        return true;
+    }
+
+    return (this.params.owner_uuids.indexOf(owner) !== -1);
+};
+
+
 /**
  * Returns the raw moray form of the network pool
  */
diff --git a/lib/models/nic/common.js b/lib/models/nic/common.js
index 4ec7a2a..2bb9dd0 100644
--- a/lib/models/nic/common.js
+++ b/lib/models/nic/common.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -307,6 +307,12 @@ function validateNetworkParams(opts, _, parsedParams, callback) {
     }
 
     if (parsedParams.network_pool) {
+        if (badOwnerUUID(parsedParams, parsedParams.network_pool)) {
+            callback(errors.invalidParam('owner_uuid',
+                constants.OWNER_MATCH_MSG));
+            return;
+        }
+
         try {
             parsedParams.intersections = getPoolIntersections('network_uuid',
                 parsedParams, [ parsedParams.network_pool ]);
diff --git a/test/unit/network-owner.test.js b/test/unit/network-owner.test.js
index cd8d19a..d61a963 100644
--- a/test/unit/network-owner.test.js
+++ b/test/unit/network-owner.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -551,7 +551,7 @@ test('pool update', function (t) {
 
 
 test('nic provision', function (t) {
-    t.plan(8);
+    t.plan(9);
 
     t.test('on network pool with same owner_uuid', function (t2) {
         return provisionNic(pools[0].uuid, { owner_uuid: owner }, t2,
@@ -568,7 +568,7 @@ test('nic provision', function (t) {
     });
 
 
-    t.test('with a different owner_uuid', function (t2) {
+    t.test('with a different owner_uuid (nets[0])', function (t2) {
         mod_nic.provision(t2, {
             net: nets[0].uuid,
             params: {
@@ -587,6 +587,24 @@ test('nic provision', function (t) {
     });
 
 
+    t.test('with a different owner_uuid (pools[0])', function (t2) {
+        mod_nic.provision(t2, {
+            net: pools[0].uuid,
+            params: {
+                belongs_to_type: 'zone',
+                belongs_to_uuid: mod_uuid.v4(),
+                owner_uuid: mod_uuid.v4()
+            },
+            expCode: 422,
+            expErr: helpers.invalidParamErr({
+                errors: [
+                    mod_err.invalidParam('owner_uuid',
+                        constants.OWNER_MATCH_MSG)
+                ]
+            })
+        });
+    });
+
     t.test('with a different owner_uuid and no network_uuid', function (t2) {
         mod_nic.create(t2, {
             mac: helpers.randomMAC(),
diff --git a/test/unit/network-pools.test.js b/test/unit/network-pools.test.js
index aa385ea..19a26d3 100644
--- a/test/unit/network-pools.test.js
+++ b/test/unit/network-pools.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -1104,7 +1104,7 @@ test('Provision NIC on pool: Retry after QueryTimeoutErrors', function (t) {
     var params = {
         belongs_to_type: 'zone',
         belongs_to_uuid: mod_uuid.v4(),
-        owner_uuid: mod_uuid.v4()
+        owner_uuid: constants.UFDS_ADMIN_UUID
     };
 
     var fakeErr = new Error('Timed out');
