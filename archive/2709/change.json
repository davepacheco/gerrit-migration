{"project":"joyent/manta-muskie","branch":"master","id":"Ie47ff221adaca7a257d7e122863bba93f55ce64b","number":"2709","subject":"MANTA-3438 Muskie startup should not block on Moray.init","owner":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"url":"https://cr.joyent.us/2709","commitMessage":"MANTA-3438 Muskie startup should not block on Moray.init\n","createdOn":1507070031,"lastUpdated":1507242047,"open":false,"status":"ABANDONED","comments":[{"timestamp":1507070031,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 1."},{"timestamp":1507070033,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\nNew commits:\n    \n    commit 7e9195d32a1fa50629f3ac5be3144588bec55c11\n    \n    MANTA-3438 Muskie startup should not block on Moray.init\n    Change Muskie to wait for Moray initialization before starting the restify\n    servers. This change also includes some more general refactoring that includes\n    replacing the use of some global variables, making the configuration data object\n    immutable, and adding a separate object to store client connections."},{"timestamp":1507070066,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1507076839,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\n(3 comments)\n\nI haven\u0027t taken a close look at all of main.js yet.\n\nI mentioned this in CR2710, but you probably want to create a separate ticket for separate changes."},{"timestamp":1507142937,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\n(2 comments)"},{"timestamp":1507143760,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1507154778,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1507158322,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1507238870,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1507239768,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1507242029,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\nI have created a new issue for this specific change at MANTA-3452 and an new CR associated with that issue at https://cr.joyent.us/#/c/2732. Marking this CR as abandoned."},{"timestamp":1507242047,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Abandoned\n\nMoved to https://cr.joyent.us/#/c/2732"}],"currentPatchSet":{"number":"1","revision":"e47ff221adaca7a257d7e122863bba93f55ce64b","parents":["2e4845c519e1915da9965868d467bd4d1242a2cb"],"ref":"refs/changes/09/2709/1","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1507070031,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1507070066,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"main.js","line":11,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think it would be better to keep the use of `var` or `const` consistent within each repo.  No objection to switching to `const`, though I think we might want to separate that change for clarity in the history."},{"file":"main.js","line":11,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"That\u0027s fair, I\u0027ll undo this change."},{"file":"main.js","line":532,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"style nit: I think most of our existing log messages start with lowercase letters."},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I don\u0027t think we want to block startup on all of these.  For medusa, keyapi, authcache, picker, and marlin, if they\u0027re not functioning, Muskie may still be able to complete many requests.  Especially if authcache and/or picker are up, we really should be able to handle a lot.  (And it\u0027s important that we do -- otherwise, restarting what seems like a mostly-working muskie can effectively take it out of commission until the downstack problem is fixed.)\n\nWe\u0027re trying to balance the contradictory goals of (a) if all dependencies are working, we\u0027d ideally wait for us to become connected to all of them, which by definition shouldn\u0027t take long; and (b) even if some dependencies are down, if we can serve some classes of request, we should open the socket and do so.  We could explore more complicated options (like opening the socket once we\u0027re connected to all of these _or_ once some timeout elapses).  I just suggested blocking on Moray.init as a simpler approximation."},{"file":"main.js","line":589,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Ok that works. It\u0027s easy to only wait for Moray, though when I\u0027ve tested this it seems like Moray is always the last to complete. I\u0027m also happy to go for something a little more complicated using the timeout approach to be more effective. Or maybe just wait for authcache and picker and then start listening?"},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Honestly, I think there\u0027s a good chance that the other change to use advisory locks addresses a large fraction of the problem, since most instances of this seem to result from conflicts among too many consumers doing this at the same time.\n\nThe other major cause that I know of is when a database shard is offline for writes, the trigger install procedure likely won\u0027t work, and libmanta.Moray.init won\u0027t complete.  I don\u0027t think that will be addressed by any of the changes we mentioned.  I don\u0027t think we can address that in Muskie.  It would have to keep track of which shards it has checked and which shards are online, but there would always be a race where a shard might come online and then be used by an electric-moray RPC before we\u0027ve applied this change to it.  We may have to first-class the trigger functionality into electric-moray or moray in order for this to work properly.\n\nOn the other hand, if we don\u0027t wait for authcache and picker, is the result that we\u0027ll end up failing all requests anyway (because we check for all prerequisites up front)?  (See also: MANTA-2133.)"},{"file":"main.js","line":589,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Maybe a compromise is to right now wait for authcache, picker, and moray. Then while I\u0027m in muskie land I can check with Brittany and see if she wants to hand off 2133 to me and I can work on a fix that would also include only waiting on moray. Does that sound like a reasonable way forward?\n\nI think the issue with the triggers and read-only shards will be addressed by the changes for MANTA-3371 which seem close to completion."},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"\u003e Maybe a compromise is to right now wait for authcache, picker, and moray. Then while I\u0027m in muskie land I can check with Brittany and see if she wants to hand off 2133 to me and I can work on a fix that would also include only waiting on moray. Does that sound like a reasonable way forward?\n\nI\u0027m just not sure we want to wait on authcache or picker.  We can serve anonymous requests without authcache (and I think we\u0027ll initialize our connections to it lazily as needed anyway).  We can serve read-only requests without picker.  On the other hand, if we explicitly fail *all* requests anyway without these, then yeah, that probably makes sense.\n\n\u003e I think the issue with the triggers and read-only shards will be addressed by the changes for MANTA-3371 which seem close to completion.\n\nI think that ticket refers to a different notion of \"read-only\".  I think MANTA-3371 refers to whether any vnodes are marked read-only (in electric-moray\u0027s hash ring), but we\u0027re talking about whether the shard itself is read-only."},{"file":"main.js","line":589,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"I did a quick test and if picker isn\u0027t available we aren\u0027t even able to serve anonymous read-only requests currently. Given that information for this specific change I\u0027d suggest we wait on moray and picker.\n\nThen we can fix MANTA-2133 and remove the waiting on picker at that time. \n\nI have another (not totally fleshed out) idea that would allow us to start serving read requests asap without waiting on anything. It is beyond the scope of this change, but I\u0027ll briefly describe it. It would involve using haproxy ACLs to only route GET requests to either muskie zones or specific muskie instances that are just starting up, but can handle read traffic. When muskie starts up in would be in read-only mode and only once the client connections are established we would indicate the muskie zone or instance is ready for writes. I envision this working in concert with registrar and muppet or some muppet-like program running on the muskie zone depending on the granularity we want to go for. Very hand wavy I know, but it could help to find a nice balance between the goals of having muskie handle requests as quickly as possible on startup and avoiding pitching errors on writes when there are muskie instances available to handle the request."},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Sounds good!"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/auth.js","type":"MODIFIED","insertions":3,"deletions":-3},{"file":"lib/common.js","type":"MODIFIED","insertions":14,"deletions":-14},{"file":"lib/server.js","type":"MODIFIED","insertions":10,"deletions":-9},{"file":"main.js","type":"MODIFIED","insertions":233,"deletions":-195}],"sizeInsertions":260,"sizeDeletions":-221},"patchSets":[{"number":"1","revision":"e47ff221adaca7a257d7e122863bba93f55ce64b","parents":["2e4845c519e1915da9965868d467bd4d1242a2cb"],"ref":"refs/changes/09/2709/1","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1507070031,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1507070066,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"main.js","line":11,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think it would be better to keep the use of `var` or `const` consistent within each repo.  No objection to switching to `const`, though I think we might want to separate that change for clarity in the history."},{"file":"main.js","line":11,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"That\u0027s fair, I\u0027ll undo this change."},{"file":"main.js","line":532,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"style nit: I think most of our existing log messages start with lowercase letters."},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I don\u0027t think we want to block startup on all of these.  For medusa, keyapi, authcache, picker, and marlin, if they\u0027re not functioning, Muskie may still be able to complete many requests.  Especially if authcache and/or picker are up, we really should be able to handle a lot.  (And it\u0027s important that we do -- otherwise, restarting what seems like a mostly-working muskie can effectively take it out of commission until the downstack problem is fixed.)\n\nWe\u0027re trying to balance the contradictory goals of (a) if all dependencies are working, we\u0027d ideally wait for us to become connected to all of them, which by definition shouldn\u0027t take long; and (b) even if some dependencies are down, if we can serve some classes of request, we should open the socket and do so.  We could explore more complicated options (like opening the socket once we\u0027re connected to all of these _or_ once some timeout elapses).  I just suggested blocking on Moray.init as a simpler approximation."},{"file":"main.js","line":589,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Ok that works. It\u0027s easy to only wait for Moray, though when I\u0027ve tested this it seems like Moray is always the last to complete. I\u0027m also happy to go for something a little more complicated using the timeout approach to be more effective. Or maybe just wait for authcache and picker and then start listening?"},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Honestly, I think there\u0027s a good chance that the other change to use advisory locks addresses a large fraction of the problem, since most instances of this seem to result from conflicts among too many consumers doing this at the same time.\n\nThe other major cause that I know of is when a database shard is offline for writes, the trigger install procedure likely won\u0027t work, and libmanta.Moray.init won\u0027t complete.  I don\u0027t think that will be addressed by any of the changes we mentioned.  I don\u0027t think we can address that in Muskie.  It would have to keep track of which shards it has checked and which shards are online, but there would always be a race where a shard might come online and then be used by an electric-moray RPC before we\u0027ve applied this change to it.  We may have to first-class the trigger functionality into electric-moray or moray in order for this to work properly.\n\nOn the other hand, if we don\u0027t wait for authcache and picker, is the result that we\u0027ll end up failing all requests anyway (because we check for all prerequisites up front)?  (See also: MANTA-2133.)"},{"file":"main.js","line":589,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Maybe a compromise is to right now wait for authcache, picker, and moray. Then while I\u0027m in muskie land I can check with Brittany and see if she wants to hand off 2133 to me and I can work on a fix that would also include only waiting on moray. Does that sound like a reasonable way forward?\n\nI think the issue with the triggers and read-only shards will be addressed by the changes for MANTA-3371 which seem close to completion."},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"\u003e Maybe a compromise is to right now wait for authcache, picker, and moray. Then while I\u0027m in muskie land I can check with Brittany and see if she wants to hand off 2133 to me and I can work on a fix that would also include only waiting on moray. Does that sound like a reasonable way forward?\n\nI\u0027m just not sure we want to wait on authcache or picker.  We can serve anonymous requests without authcache (and I think we\u0027ll initialize our connections to it lazily as needed anyway).  We can serve read-only requests without picker.  On the other hand, if we explicitly fail *all* requests anyway without these, then yeah, that probably makes sense.\n\n\u003e I think the issue with the triggers and read-only shards will be addressed by the changes for MANTA-3371 which seem close to completion.\n\nI think that ticket refers to a different notion of \"read-only\".  I think MANTA-3371 refers to whether any vnodes are marked read-only (in electric-moray\u0027s hash ring), but we\u0027re talking about whether the shard itself is read-only."},{"file":"main.js","line":589,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"I did a quick test and if picker isn\u0027t available we aren\u0027t even able to serve anonymous read-only requests currently. Given that information for this specific change I\u0027d suggest we wait on moray and picker.\n\nThen we can fix MANTA-2133 and remove the waiting on picker at that time. \n\nI have another (not totally fleshed out) idea that would allow us to start serving read requests asap without waiting on anything. It is beyond the scope of this change, but I\u0027ll briefly describe it. It would involve using haproxy ACLs to only route GET requests to either muskie zones or specific muskie instances that are just starting up, but can handle read traffic. When muskie starts up in would be in read-only mode and only once the client connections are established we would indicate the muskie zone or instance is ready for writes. I envision this working in concert with registrar and muppet or some muppet-like program running on the muskie zone depending on the granularity we want to go for. Very hand wavy I know, but it could help to find a nice balance between the goals of having muskie handle requests as quickly as possible on startup and avoiding pitching errors on writes when there are muskie instances available to handle the request."},{"file":"main.js","line":589,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Sounds good!"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/auth.js","type":"MODIFIED","insertions":3,"deletions":-3},{"file":"lib/common.js","type":"MODIFIED","insertions":14,"deletions":-14},{"file":"lib/server.js","type":"MODIFIED","insertions":10,"deletions":-9},{"file":"main.js","type":"MODIFIED","insertions":233,"deletions":-195}],"sizeInsertions":260,"sizeDeletions":-221}],"allReviewers":[{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},{"name":"Jared Morrow","email":"jm@joyent.com","username":"jaredmorrow"},{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},{"name":"Joyent Automation","username":"joyent-automation"}]}