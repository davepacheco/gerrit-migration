commit 6e33f383d82abd0c9042ef9b5c4390233e8d653b (refs/changes/76/5576/1)
Author: Josh Wilsdon <josh@wilsdon.ca>
Date:   2019-02-12T23:16:18-08:00 (8 months ago)
    
    TRITON-1225 cn-agent should have more consistent capitalization

diff --git a/lib/app.js b/lib/app.js
index 6c7b9c5..6381d9a 100644
--- a/lib/app.js
+++ b/lib/app.js
@@ -100,7 +100,7 @@ function App(options) {
         'this.sdc_config.datacenter_name');
     assert.object(this.sysinfo, 'this.sysinfo');
 
-    this.log.info('started cn-agent for %s', this.uuid);
+    this.log.info('Started cn-agent for %s', this.uuid);
 }
 
 
@@ -158,9 +158,9 @@ App.prototype.updateAgents = function (callback) {
         }, function (postErr) {
             if (postErr) {
                 self.log.warn({ error: postErr },
-                    'error posting agents to cnapi');
+                    'Error posting agents to cnapi');
             } else {
-                self.log.info('posted agents info to cnapi');
+                self.log.info('Posted agents info to cnapi');
             }
 
             callback();
@@ -182,7 +182,7 @@ function queueStatusUpdateIfNotAlreadyQueued() {
     var self = this;
 
     if (self.statusQueued === true) {
-        self.log.debug('already have a status update pending');
+        self.log.debug('Already have a status update pending');
         return;
     }
 
@@ -239,9 +239,9 @@ App.prototype.postHeartbeat = function postHeartbeat(callback) {
         function _onHeartbeatPosted(err) {
 
         if (err) {
-            self.log.warn({ error: err }, 'failed to post heartbeat to CNAPI');
+            self.log.warn({ error: err }, 'Failed to post heartbeat to CNAPI');
         } else {
-            self.log.debug('posted heartbeat to CNAPI');
+            self.log.debug('Posted heartbeat to CNAPI');
         }
 
         callback();
@@ -259,9 +259,9 @@ App.prototype.postStatus = function postStatus(callback) {
         function _onStatusPosted(err) {
 
         if (err) {
-            self.log.warn({ error: err }, 'failed to post status to CNAPI');
+            self.log.warn({ error: err }, 'Failed to post status to CNAPI');
         } else {
-            self.log.debug('posted status to CNAPI');
+            self.log.debug('Posted status to CNAPI');
         }
 
         callback();
@@ -285,7 +285,7 @@ App.prototype.startHeartbeater = function () {
     // meantime, we'll update self.latestStatus, so when we finally run the
     // status update, it will always post the latest one we have at that time.
     statusReporter.on('status', function _queueStatusUpdate(_status) {
-        self.log.trace({ status: _status }, 'status report');
+        self.log.trace({ status: _status }, 'Status report');
         self.latestStatus = _status;
         self.queueStatusUpdateIfNotAlreadyQueued();
     });
@@ -369,7 +369,7 @@ App.prototype.registerServer = function registerServer(callback) {
         self.log.info({
             headers: res.headers,
             statusCode: res.statusCode
-        }, 'posted sysinfo to CNAPI');
+        }, 'Posted sysinfo to CNAPI');
 
         callback();
     });
@@ -409,7 +409,7 @@ App.prototype.start = function () {
 
     function completeStartup() {
         agent.useQueues(queueDefns);
-        self.log.info('starting cn-agent for %s', self.uuid);
+        self.log.info('Starting cn-agent for %s', self.uuid);
         agent.start();
     }
 
diff --git a/lib/backends/common.js b/lib/backends/common.js
index eb744c7..5901fa3 100644
--- a/lib/backends/common.js
+++ b/lib/backends/common.js
@@ -396,7 +396,7 @@ function adoptInstanceInSapi(opts, callback) {
                             opts.log.error({
                                 agentName: opts.agentName,
                                 err: err
-                            }, 'failed to get SAPI service');
+                            }, 'Failed to get SAPI service');
 
                             cb(err);
                             return;
@@ -428,7 +428,7 @@ function adoptInstanceInSapi(opts, callback) {
                         opts.log.info({
                             agentName: opts.agentName,
                             sapiServiceUuid: sapiServiceUuid
-                        }, 'got SAPI service');
+                        }, 'Got SAPI service');
 
                         cb();
                     });
@@ -471,7 +471,7 @@ function adoptInstanceInSapi(opts, callback) {
 
             opts.log.warn({
                 retriesRemaining: retries
-            }, 'failed to adopt instance in SAPI');
+            }, 'Failed to adopt instance in SAPI');
 
             if (retries <= 0) {
                 callback(err);
diff --git a/lib/backends/dummy/tasks/agent_install.js b/lib/backends/dummy/tasks/agent_install.js
index a7104b6..80ef255 100644
--- a/lib/backends/dummy/tasks/agent_install.js
+++ b/lib/backends/dummy/tasks/agent_install.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -107,7 +107,7 @@ function start() {
                     return cb(err);
                 }
 
-                self.log.debug('downloaded agent %s image %s to %s',
+                self.log.debug('Downloaded agent %s image %s to %s',
                     name, imageUuid, file);
 
                 ctx.package_file = file;
diff --git a/lib/backends/dummy/tasks/image_ensure_present.js b/lib/backends/dummy/tasks/image_ensure_present.js
index 189c394..84bbb5c 100644
--- a/lib/backends/dummy/tasks/image_ensure_present.js
+++ b/lib/backends/dummy/tasks/image_ensure_present.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -34,7 +34,7 @@ function start() {
 
     self.log.info({
         params: self.req.params
-    }, 'pretending to ensure_image');
+    }, 'Pretending to ensure_image');
 
     self.finish();
 }
diff --git a/lib/backends/dummy/tasks/machine_boot.js b/lib/backends/dummy/tasks/machine_boot.js
index 5ee2981..6d2ec43 100644
--- a/lib/backends/dummy/tasks/machine_boot.js
+++ b/lib/backends/dummy/tasks/machine_boot.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var DummyVmadm = require('vmadm/lib/index.dummy_vminfod');
@@ -111,7 +111,7 @@ function start(callback) {
 
     // If 'update' param exists, update before starting the vm.
     if (self.req.params.hasOwnProperty('update')) {
-        self.log.info('updating vm before starting');
+        self.log.info('Updating vm before starting');
         self.req.params.update.uuid = self.req.params.uuid;
         vmadm.update(_addVmadmOpts(self.req.params.update), function (error) {
             if (error) {
diff --git a/lib/backends/dummy/tasks/machine_create.js b/lib/backends/dummy/tasks/machine_create.js
index bb12e82..d893e7b 100644
--- a/lib/backends/dummy/tasks/machine_create.js
+++ b/lib/backends/dummy/tasks/machine_create.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 // node
@@ -230,7 +230,7 @@ function fetch_dataset(arg, callback) {
     var self = this;
 
     if (arg.dataset_exists) {
-        self.log.info('dataset exists, not fetching');
+        self.log.info('Dataset exists, not fetching');
         callback();
         return;
     }
@@ -354,7 +354,7 @@ function build_payload(arg, callback) {
 
     payload = map_payload({log: self.log}, req.params);
 
-    self.log.info({payload: payload}, 'built payload');
+    self.log.info({payload: payload}, 'Built payload');
 
     arg.payload = payload;
 
diff --git a/lib/backends/dummy/tasks/machine_reboot.js b/lib/backends/dummy/tasks/machine_reboot.js
index d309f3a..75ca284 100644
--- a/lib/backends/dummy/tasks/machine_reboot.js
+++ b/lib/backends/dummy/tasks/machine_reboot.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var DummyVmadm = require('vmadm/lib/index.dummy_vminfod');
@@ -131,7 +131,7 @@ function start(callback) {
 
     // If 'update' param exists, update before rebooting the vm.
     if (self.req.params.hasOwnProperty('update')) {
-        self.log.info('updating vm before rebooting');
+        self.log.info('Updating vm before rebooting');
         self.req.params.update.uuid = self.req.params.uuid;
         vmadm.update(_addVmadmOpts(self.req.params.update), function (error) {
             if (error) {
diff --git a/lib/backends/dummy/tasks/server_update_nics.js b/lib/backends/dummy/tasks/server_update_nics.js
index 002425f..582f7c4 100644
--- a/lib/backends/dummy/tasks/server_update_nics.js
+++ b/lib/backends/dummy/tasks/server_update_nics.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var fs = require('fs');
@@ -69,7 +69,7 @@ function writeSysinfo(opts, sysinfo, callback) {
             }
         ]
     }, function _onWroteSysinfo(err) {
-        opts.log.debug({err: err, sysinfo: sysinfo}, 'wrote sysinfo');
+        opts.log.debug({err: err, sysinfo: sysinfo}, 'Wrote sysinfo');
         callback(err);
     });
 }
@@ -118,7 +118,7 @@ function start() {
                     nic.nic_tags_provided;
                 modified = true;
             } else {
-                self.log.error({nic: nic}, 'unknown NIC');
+                self.log.error({nic: nic}, 'Unknown NIC');
             }
         }
 
diff --git a/lib/backends/dummy/tasks/shared.js b/lib/backends/dummy/tasks/shared.js
index eed1e9a..5723dd5 100644
--- a/lib/backends/dummy/tasks/shared.js
+++ b/lib/backends/dummy/tasks/shared.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -87,7 +87,7 @@ function installAgent(opts, callback) {
                 opts.log.debug({
                     agentFile: opts.agentFile,
                     baseName: ctx.baseName
-                }, 'found baseName from agent tarball');
+                }, 'Found baseName from agent tarball');
 
                 cb(err);
             });
@@ -164,7 +164,7 @@ function installAgent(opts, callback) {
                     opts.log.error({
                         err: err,
                         packageJsonFile: packageJsonFile
-                    }, 'failed to read package.json');
+                    }, 'Failed to read package.json');
                     cb(err);
                     return;
                 }
@@ -175,7 +175,7 @@ function installAgent(opts, callback) {
                     opts.log.error({
                         err: err,
                         packageJsonFile: packageJsonFile
-                    }, 'failed to parse JSON in package.json');
+                    }, 'Failed to parse JSON in package.json');
                     cb(e);
                     return;
                 }
@@ -242,7 +242,7 @@ function installAgent(opts, callback) {
                             agentName: agentName,
                             instanceUuid: ctx.instanceUuid,
                             serverUuid: opts.serverUuid
-                        }, 'created new uuid for agent instance');
+                        }, 'Created new uuid for agent instance');
                         fs.writeFile(instanceFile, ctx.instanceUuid + '\n',
                             'utf8', cb);
                         return;
@@ -259,7 +259,7 @@ function installAgent(opts, callback) {
                     agentName: agentName,
                     instanceUuid: ctx.instanceUuid,
                     serverUuid: opts.serverUuid
-                }, 'loaded uuid for agent instance');
+                }, 'Loaded uuid for agent instance');
                 cb();
             });
         },
@@ -281,7 +281,7 @@ function installAgent(opts, callback) {
 
                 opts.log.debug({
                     sapiUrl: sapiUrl
-                }, 'created SAPI client');
+                }, 'Created SAPI client');
 
                 cb();
             });
@@ -351,7 +351,7 @@ function _installAgentIfInstallable(opts, callback) {
         dir: opts.dir,
         filename: opts.filename,
         serverUuid: opts.serverUuid
-    }, 'trying to install agent');
+    }, 'Trying to install agent');
 
     if (!opts.filename.match(/\.(tar\.gz|tgz|tar\.bz2)$/)) {
         opts.log.warn({filename: opts.filename},
@@ -378,7 +378,7 @@ function _installAgentIfInstallable(opts, callback) {
                 err: err,
                 filename: opts.filename,
                 serverUuid: opts.serverUuid
-            }, 'failed to install agent');
+            }, 'Failed to install agent');
         }
         callback(err);
     });
@@ -453,7 +453,7 @@ function installAgentsShar(opts, callback) {
                         opts.log.debug({
                             data: data,
                             sharFile: opts.sharFile
-                        }, 'loaded shar "head" data');
+                        }, 'Loaded shar "head" data');
 
                         // Don't need the file open any more.
                         fs.close(fd, function onClose(closeErr) {
@@ -579,7 +579,7 @@ function installAgentsShar(opts, callback) {
 
                 // Ok, we created it.
                 opts.log.info({serverAgentsDir: serverAgentsDir},
-                    'created agents dir for server');
+                    'Created agents dir for server');
                 cb();
             });
         },
diff --git a/lib/backends/dummy/tools/run-servers.js b/lib/backends/dummy/tools/run-servers.js
index c91e447..e1ad7a7 100644
--- a/lib/backends/dummy/tools/run-servers.js
+++ b/lib/backends/dummy/tools/run-servers.js
@@ -200,7 +200,7 @@ function main() {
             }, function _pipelineComplete(_pipelineErr, results) {
                 assert.ifError(_pipelineErr);
 
-                state.log.info('started all servers');
+                state.log.info('Started all servers');
             });
         });
     });
diff --git a/lib/backends/smartos/imgadm.js b/lib/backends/smartos/imgadm.js
index 01a642a..c246f30 100644
--- a/lib/backends/smartos/imgadm.js
+++ b/lib/backends/smartos/imgadm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2019, Joyent, Inc. All rights reserved.
  */
 
 /*
@@ -98,7 +98,7 @@ function importImage(options, callback) {
             encoding: 'utf8',
             env: env
         };
-        options.log.info('calling: ' + argv.join(' '));
+        options.log.info('Calling: ' + argv.join(' '));
         var child = spawn(argv[0], argv.slice(1), execOpts);
         var stdout = [];
         child.stdout.setEncoding('utf8');
diff --git a/lib/backends/smartos/index.js b/lib/backends/smartos/index.js
index d88d416..6d23d77 100644
--- a/lib/backends/smartos/index.js
+++ b/lib/backends/smartos/index.js
@@ -547,7 +547,7 @@ function startZoneConfigWatcher(opts, watchers) {
         opts.dirtyFn();
     });
 
-    opts.log.info('started fs.watch() for ' + dir);
+    opts.log.info('Started fs.watch() for ' + dir);
 }
 
 
diff --git a/lib/backends/smartos/lib/docker-stdio.js b/lib/backends/smartos/lib/docker-stdio.js
index bc01407..2a5e0ad 100644
--- a/lib/backends/smartos/lib/docker-stdio.js
+++ b/lib/backends/smartos/lib/docker-stdio.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -890,7 +890,7 @@ function writeData(opts) {
     assert.ok(opts.stream);
 
     if (opts.stream.destroyed) {
-        opts.log.warn('cannot write to a destroyed stream');
+        opts.log.warn('Cannot write to a destroyed stream');
         return;
     }
 
@@ -1481,7 +1481,7 @@ function tryUnmount(opts, cb) {
     common.zoneadm(opts.uuid, ['unmount'], { log: opts.log },
     function _readStreamTryZoneadmUnmount(err) {
         if (err) {
-            opts.log.error('error (%s) running zoneadm unmount on %s',
+            opts.log.error('Error (%s) running zoneadm unmount on %s',
                 err.code, opts.uuid);
         }
         if (cb) {
diff --git a/lib/backends/smartos/tasks/agent_install.js b/lib/backends/smartos/tasks/agent_install.js
index 6a306fe..a55834a 100644
--- a/lib/backends/smartos/tasks/agent_install.js
+++ b/lib/backends/smartos/tasks/agent_install.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -169,7 +169,7 @@ function start() {
                     return;
                 }
 
-                self.log.debug('downloaded agent %s image %s to %s',
+                self.log.debug('Downloaded agent %s image %s to %s',
                         name, image_uuid, file);
 
                 package_file = file;
@@ -188,12 +188,12 @@ function start() {
                 return cb();
             }
 
-            self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'executing');
+            self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'Executing');
             return execFile(cmd, args, function (err, stdout, stderr) {
                 if (err) {
                     self.log.error({
                         err: err
-                    }, 'failed to enable cn-agent-update service');
+                    }, 'Failed to enable cn-agent-update service');
                     return cb(err);
                 }
                 self.log.debug({
@@ -212,7 +212,7 @@ function start() {
                     url: 'http://' + self.req.req_host.split(':')[0] + ':5310',
                     log: logger
                 });
-                self.log.trace({client: client}, 'restify client');
+                self.log.trace({client: client}, 'Restify client');
                 client.post('/tasks', {
                     task: 'agent_install',
                     params: {
@@ -221,11 +221,11 @@ function start() {
                         package_file: package_file
                     }
                 }, function cliCb(err, req, res) {
-                    self.log.trace({res: res}, 'restify client response');
+                    self.log.trace({res: res}, 'Restify client response');
                     if (err) {
                         self.log.error({
                             err: err
-                        }, 'failed to send task to cn-agent-update');
+                        }, 'Failed to send task to cn-agent-update');
                         return cb(err);
                     }
                     self.log.debug({
@@ -276,14 +276,14 @@ function start() {
                     if (err) {
                         self.log.error({
                             err: err
-                        }, 'failed to remove backup');
+                        }, 'Failed to remove backup');
                         cb(err);
                         return;
                     }
                     self.log.debug({
                         stdout: stdout,
                         stderr: stderr
-                    }, 'backup removed');
+                    }, 'Backup removed');
                     cb();
                     return;
                 });
@@ -300,18 +300,18 @@ function start() {
                 prefix + package_name,
                 prefix + package_name + '.updating-to.' + image_uuid
             ];
-            self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'executing');
+            self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'Executing');
             return execFile(cmd, args, function (err, stdout, stderr) {
                 if (err) {
                     self.log.error({
                         err: err
-                    }, 'failed to backup agent');
+                    }, 'Failed to backup agent');
                     return cb(err);
                 }
                 self.log.debug({
                     stdout: stdout,
                     stderr: stderr
-                }, 'backup agent');
+                }, 'Backup agent');
                 return cb();
             });
         },
@@ -326,7 +326,7 @@ function start() {
                 if (err) {
                     self.log.error({
                         err: err
-                    }, 'failed to install agent package');
+                    }, 'Failed to install agent package');
                     install_failed = true;
                     install_failed_err = err;
                 }
@@ -352,14 +352,14 @@ function start() {
                 if (err) {
                     self.log.error({
                         err: err
-                    }, 'failed to remove failed install dir');
+                    }, 'Failed to remove failed install dir');
                     cb(err);
                     return;
                 }
                 self.log.debug({
                     stdout: stdout,
                     stderr: stderr
-                }, 'failed install dir removed');
+                }, 'Failed install dir removed');
                 cb();
                 return;
             });
@@ -369,7 +369,7 @@ function start() {
                 cb();
                 return;
             }
-            self.log.info('restoring agent backup');
+            self.log.info('Restoring agent backup');
             var prefix = '/opt/smartdc/agents/lib/node_modules/';
             var cmd = '/usr/bin/cp';
             var args = [
@@ -379,12 +379,12 @@ function start() {
             ];
             self.log.debug({
                 cmdline: cmd + ' ' + args.join(' ')
-            }, 'executing');
+            }, 'Executing');
             execFile(cmd, args, function (er2, stdout, stderr) {
                 if (er2) {
                     self.log.error({
                         err: er2
-                    }, 'failed to restore agent backup');
+                    }, 'Failed to restore agent backup');
                     // Still, we'll return the previous error here:
                     if (install_failed_err) {
                         cb(install_failed_err);
@@ -396,7 +396,7 @@ function start() {
                 self.log.debug({
                     stdout: stdout,
                     stderr: stderr
-                }, 'restore agent backup');
+                }, 'Restore agent backup');
                 cb(install_failed_err);
             });
         },
@@ -411,19 +411,19 @@ function start() {
                 '/opt/smartdc/agents/lib/node_modules/' + package_name +
                      '.updating-to.' + image_uuid
             ];
-            self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'executing');
+            self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'Executing');
             return execFile(cmd, args, function (err2, stdout, stderr) {
                 // We will not fail the operation anyway, backup directory will
                 // not affect normal operation and can be removed later:
                 if (err2) {
                     self.log.error({
                         err: err2
-                    }, 'failed to remove agent backup');
+                    }, 'Failed to remove agent backup');
                 }
                 self.log.debug({
                     stdout: stdout,
                     stderr: stderr
-                }, 'remove agent backup');
+                }, 'Remove agent backup');
                 return cb();
             });
 
@@ -464,7 +464,7 @@ function start() {
                     if (err) {
                         self.log.error({
                             err: err
-                        }, 'failed to send task to cn-agent');
+                        }, 'Failed to send task to cn-agent');
                         return cb(err);
                     }
                     self.log.debug({
diff --git a/lib/backends/smartos/tasks/command_execute.js b/lib/backends/smartos/tasks/command_execute.js
index 8ac2b83..9d2a4b3 100644
--- a/lib/backends/smartos/tasks/command_execute.js
+++ b/lib/backends/smartos/tasks/command_execute.js
@@ -115,7 +115,7 @@ function start(callback) {
     function _onExecute(err, results) {
         assert.equal(err, null);
 
-        opts.log.info({results: results}, 'executed command');
+        opts.log.info({results: results}, 'Executed command');
         self.finish(results);
     });
 }
diff --git a/lib/backends/smartos/tasks/docker_build.js b/lib/backends/smartos/tasks/docker_build.js
index bdb625e..e722ce5 100644
--- a/lib/backends/smartos/tasks/docker_build.js
+++ b/lib/backends/smartos/tasks/docker_build.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var Task = require('../../../task_agent/task');
@@ -74,5 +74,5 @@ function start(callback) {
         uuid: self.req.params.uuid
     });
 
-    self.log.debug('waiting for child process to message back');
+    self.log.debug('Waiting for child process to message back');
 }
diff --git a/lib/backends/smartos/tasks/image_ensure_present.js b/lib/backends/smartos/tasks/image_ensure_present.js
index 7d28294..f0d2957 100644
--- a/lib/backends/smartos/tasks/image_ensure_present.js
+++ b/lib/backends/smartos/tasks/image_ensure_present.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -70,11 +70,11 @@ function start() {
 
         zfs.list(fullDataset, { type: 'all' }, function (error, fields, list) {
             if (!error && list.length) {
-                self.log.info('image already installed (' + fullDataset + ')');
+                self.log.info('Image already installed (' + fullDataset + ')');
                 installed = true;
                 cb();
             } else if (error && error.toString().match(/does not exist/)) {
-                self.log.info('image didn\'t appear to be installed');
+                self.log.info('Image didn\'t appear to be installed');
                 cb();
             } else if (error) {
                 cb(error);
diff --git a/lib/backends/smartos/tasks/machine_boot.js b/lib/backends/smartos/tasks/machine_boot.js
index 6fa280c..d8c14b4 100644
--- a/lib/backends/smartos/tasks/machine_boot.js
+++ b/lib/backends/smartos/tasks/machine_boot.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var Task = require('../../../task_agent/task');
@@ -106,7 +106,7 @@ function start(callback) {
 
     // If 'update' param exists, update before starting the vm.
     if (self.req.params.hasOwnProperty('update')) {
-        self.log.info('updating vm before starting');
+        self.log.info('Updating vm before starting');
         self.req.params.update.uuid = self.req.params.uuid;
         vmadm.update(_addVmadmOpts(self.req.params.update), function (error) {
             if (error) {
diff --git a/lib/backends/smartos/tasks/machine_reboot.js b/lib/backends/smartos/tasks/machine_reboot.js
index 61a305a..217aed1 100644
--- a/lib/backends/smartos/tasks/machine_reboot.js
+++ b/lib/backends/smartos/tasks/machine_reboot.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var Task = require('../../../task_agent/task');
@@ -119,7 +119,7 @@ function start(callback) {
 
     // If 'update' param exists, update before rebooting the vm.
     if (self.req.params.hasOwnProperty('update')) {
-        self.log.info('updating vm before rebooting');
+        self.log.info('Updating vm before rebooting');
         self.req.params.update.uuid = self.req.params.uuid;
         vmadm.update(_addVmadmOpts(self.req.params.update), function (error) {
             if (error) {
diff --git a/lib/backends/smartos/tasks/machine_screenshot.js b/lib/backends/smartos/tasks/machine_screenshot.js
index 7335103..626e8ef 100644
--- a/lib/backends/smartos/tasks/machine_screenshot.js
+++ b/lib/backends/smartos/tasks/machine_screenshot.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var Task = require('../../../task_agent/task');
@@ -44,7 +44,7 @@ function start(callback) {
         var ssFilename = '/zones/' + self.req.params.uuid + '/root/tmp/vm.ppm';
         self.log.info('vmadm screenshot success: ' + ssFilename);
         var ssContents = fs.readFileSync(ssFilename);
-        self.log.info('file: ' + ssContents.length + ' bytes');
+        self.log.info('File: ' + ssContents.length + ' bytes');
 
         self.event('screenshot', ssContents.toString('base64'));
 
diff --git a/lib/backends/smartos/tasks/server_update_nics.js b/lib/backends/smartos/tasks/server_update_nics.js
index fa83482..04d483e 100644
--- a/lib/backends/smartos/tasks/server_update_nics.js
+++ b/lib/backends/smartos/tasks/server_update_nics.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var async = require('async');
@@ -106,7 +106,7 @@ function start(callback) {
             }
         }
 
-        self.log.debug('commands to execute: '
+        self.log.debug('Commands to execute: '
             + JSON.stringify(admCommands, null, 2));
 
         return async.eachSeries(admCommands, function _run(args, cb) {
diff --git a/lib/backends/smartos/tasks/shared.js b/lib/backends/smartos/tasks/shared.js
index 6a72010..baca992 100644
--- a/lib/backends/smartos/tasks/shared.js
+++ b/lib/backends/smartos/tasks/shared.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -158,7 +158,7 @@ function refreshAgents(opts, cb) {
                         error: err
                     }, 'posting agents to cnapi');
                 } else {
-                    log.info('posted agents info to cnapi');
+                    log.info('Posted agents info to cnapi');
                 }
                 return callback();
             });
diff --git a/lib/backends/smartos/tasks/shutdown_cn_agent_update.js b/lib/backends/smartos/tasks/shutdown_cn_agent_update.js
index b69cc91..9e504da 100644
--- a/lib/backends/smartos/tasks/shutdown_cn_agent_update.js
+++ b/lib/backends/smartos/tasks/shutdown_cn_agent_update.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var Task = require('../../../task_agent/task');
@@ -22,12 +22,12 @@ function start(callback) {
     var self = this;
     var args = ['disable', 'cn-agent-update'];
     var cmd = '/usr/sbin/svcadm';
-    self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'executing');
+    self.log.debug({cmdline: cmd + ' ' + args.join(' ')}, 'Executing');
     execFile(cmd, args, function (err, stdout, stderr) {
         if (err) {
             self.log.error({
                 err: err
-            }, 'failed to disable cn-agent-update service');
+            }, 'Failed to disable cn-agent-update service');
             var msg = err instanceof Error ? err.message : err;
             return self.fatal('Disable cn-agent-update error: ' + msg);
         }
diff --git a/lib/heartbeater.js b/lib/heartbeater.js
index ba2f6f9..150dded 100644
--- a/lib/heartbeater.js
+++ b/lib/heartbeater.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var cp = require('child_process');
@@ -98,7 +98,7 @@ StatusReporter.prototype.updateSample = function () {
                 + self.updateSampleAttemptsMax);
         }
         self.log.error(
-            'samplerLock is still held, skipping update. Attempt #'
+            'SamplerLock is still held, skipping update. Attempt #'
             + self.updateSampleAttempts);
         return;
     }
@@ -121,8 +121,8 @@ StatusReporter.prototype.updateSample = function () {
                     var vmobj;
 
                     if (err) {
-                        self.log.error({err: err}, 'unable update VM list');
-                        cb(new Error('unable to update VM list.'));
+                        self.log.error({err: err}, 'Unable update VM list');
+                        cb(new Error('Unable to update VM list.'));
                         return;
                     }
 
@@ -157,7 +157,7 @@ StatusReporter.prototype.updateSample = function () {
                     serverUuid: self.serverUuid
                 }, function onZpoolInfo(err, zpoolInfo) {
                     if (err) {
-                        self.log.error({err: err}, 'unable to get zpool info');
+                        self.log.error({err: err}, 'Unable to get zpool info');
                         cb(err);
                         return;
                     }
@@ -170,7 +170,7 @@ StatusReporter.prototype.updateSample = function () {
                     serverUuid: self.serverUuid
                 }, function onMemoryInfo(err, meminfo) {
                     if (err) {
-                        self.log.warn({err: err}, 'unable to get memory info');
+                        self.log.warn({err: err}, 'Unable to get memory info');
                     } else {
                         newSample.meminfo = meminfo;
                     }
@@ -183,7 +183,7 @@ StatusReporter.prototype.updateSample = function () {
                 }, function onDiskUsage(err, diskusage) {
                     if (err) {
                         self.log.warn({err: err},
-                            'unable to get disk usage');
+                            'Unable to get disk usage');
                     } else {
                         newSample.diskinfo = diskusage;
                     }
@@ -196,7 +196,7 @@ StatusReporter.prototype.updateSample = function () {
                 }, function onBootTime(err, boot_time) {
                     if (err) {
                         self.log.warn({err: err},
-                            'unable to get system boot time');
+                            'Unable to get system boot time');
                     } else {
                         newSample.boot_time = boot_time;
                     }
@@ -213,7 +213,7 @@ StatusReporter.prototype.updateSample = function () {
         if (err) {
             // mark as dirty so that we'll try again
             self.markDirty();
-            self.log.error({err: err}, 'failed to update sample');
+            self.log.error({err: err}, 'Failed to update sample');
         } else {
             self.sample = newSample;
             self.readySample = true;
@@ -241,7 +241,7 @@ StatusReporter.prototype.checkEmitStatus = function () {
     }
 
     if (!self.sample) {
-        self.log.warn('no sample');
+        self.log.warn('No sample');
     }
 };
 
diff --git a/lib/server.js b/lib/server.js
index e3825d6..2bd593c 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
@@ -129,12 +129,12 @@ AgentHttpServer.prototype.init = function () {
             uuid = self.uuid;
         }
 
-        self.log.warn('desired uuid was %s', uuid);
+        self.log.warn('Desired uuid was %s', uuid);
         assert.string(uuid, 'uuid');
 
         if (!self.handleTasks.hasOwnProperty(uuid)) {
-            self.log.warn('agent not hooked up for uuid %s', uuid);
-            self.log.info({ handleTasks: self.handleTasks }, 'handle Tasks');
+            self.log.warn('Agent not hooked up for uuid %s', uuid);
+            self.log.info({ handleTasks: self.handleTasks }, 'Handle tasks');
 
             res.send(404);
             next();
@@ -184,7 +184,7 @@ AgentHttpServer.prototype.init = function () {
 
 AgentHttpServer.prototype.registerTaskHandler = function (uuid, handler) {
     var self = this;
-    self.log.info('registering handler for %s', uuid);
+    self.log.info('Registering handler for %s', uuid);
     self.handleTasks[uuid] = handler;
 };
 
diff --git a/lib/task_agent/task_agent.js b/lib/task_agent/task_agent.js
index beb9fe1..bb7887c 100644
--- a/lib/task_agent/task_agent.js
+++ b/lib/task_agent/task_agent.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var util = require('util');
@@ -77,7 +77,7 @@ TaskAgent.prototype.start = function () {
 TaskAgent.prototype.setupTaskRoutes = function (defns) {
     var self = this;
 
-    self.log.info('setting up task route for %s', self.uuid);
+    self.log.info('Setting up task route for %s', self.uuid);
     this.agentserver.registerTaskHandler(self.uuid, handler);
 
     function handler(req, res, next) {
@@ -126,7 +126,7 @@ TaskAgent.prototype.setupTaskRoutes = function (defns) {
             req.log.info({ task: req.params }, '%s task params', taskName);
         } else {
             req.log.info(
-                'not logging task params for %s (log_params=false)', taskName);
+                'Not logging task params for %s (log_params=false)', taskName);
         }
 
         var value, error;
diff --git a/package.json b/package.json
index babce7a..ffb73d8 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cn-agent",
   "description": "Triton Compute Node Agent",
-  "version": "2.8.1",
+  "version": "2.8.2",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
