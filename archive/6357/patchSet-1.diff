From 0a7b61e057ad7ae11b99b61db9599a3e8e15deee Mon Sep 17 00:00:00 2001
From: Orlando Vazquez <ovazquez@gmail.com>
Date: Fri, 24 May 2019 09:26:03 -0700
Subject: [PATCH] TRITON-1703 cn-agent should accept rate limiting flag for
 migrate sync

---
 .../smartos/bin/machine-migrate-send.js       | 20 ++++++++++++-------
 1 file changed, 13 insertions(+), 7 deletions(-)

diff --git a/lib/backends/smartos/bin/machine-migrate-send.js b/lib/backends/smartos/bin/machine-migrate-send.js
index b06a3ab..acc1742 100644
--- a/lib/backends/smartos/bin/machine-migrate-send.js
+++ b/lib/backends/smartos/bin/machine-migrate-send.js
@@ -31,6 +31,7 @@ var SERVER_CLOSE_TIMEOUT = 60 * 1000; // 1 minute
 var SNAPSHOT_NAME_PREFIX = 'vm-migration-';
 var SYNC_ABORT_MSG = 'Sync was aborted';
 var currentProgress = 0;
+var MB = 1024 * 1024;
 var gSyncHandler = null;
 var stopProcess = false;
 var tcpServer;
@@ -160,6 +161,8 @@ function SyncHandler(opts, event, socket) {
     this.pendingCallbacks = {};
     this.syncAborted = false;
 
+    this.zfs_send_mbps_limit = opts.payload.zfs_send_mbps_limit;
+
     // This is the main context for each dataset sync operation.
     this.datasets = {};
     this.datasets[this.vm.zfs_filesystem] = {
@@ -1025,16 +1028,19 @@ SyncHandler.prototype.startSync = function _syncHandleRunSync(ctx, callback) {
         }
     });
 
-    // XXX: TODO: Rate should come from inputs.
-    var rate;
-    // rate = 1 * 1024 * 1024; // 1 MB/sec
-    // rate = 1 * 128 * 1024; // 128 KB/sec
-
     // Limit how much "zfs send" data we send through the socket.
-    if (rate) {
-        self.throttle = new streamThrottle.Throttle({rate: rate});
+    if (self.zfs_send_mbps_limit) {
+        log.info('startSync: config.zfs_send_mbps_limit is set, ' +
+            'sending at %d MB/sec',
+            self.zfs_send_mbps_limit);
+        self.throttle = new streamThrottle.Throttle({
+            rate: self.zfs_send_mbps_limit * MB // convert value to B/sec
+        });
         zfsSend.stdout.pipe(self.throttle).pipe(ctx.receiverSocket);
     } else {
+        log.info('startSync: config.zfs_send_mbps_limit not set, ' +
+            'sending with no bandwidth limit',
+            self.zfs_send_mbps_limit);
         zfsSend.stdout.pipe(ctx.receiverSocket);
     }
 
-- 
2.21.0

