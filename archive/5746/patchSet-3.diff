commit 900e97762a1b41cd9f1271187ab117257c44d014
Author: Orlando Vazquez <ovazquez@gmail.com>
Date:   2019-03-08T20:32:29-08:00 (7 months ago)
    
    TRITON-1296 CNAPI waitlist logic must account for the possibility of non-UUID server_uuid values (for instance, 'default')
    Reviewed by: Josh Wilsdon <josh@wilsdon.ca>
    Approved by: Orlando Vazquez <orlando@joyent.com>

diff --git a/lib/models/waitlist.js b/lib/models/waitlist.js
index df62745..62e4772 100644
--- a/lib/models/waitlist.js
+++ b/lib/models/waitlist.js
@@ -748,7 +748,9 @@ function WaitlistDirectorAddToPendingActivations(opts) {
     var pending = ModelWaitlist.pendingActivationsByServer;
 
     assert.object(opts, 'opts');
-    assert.uuid(opts.server_uuid, 'opts.server_uuid');
+    if (opts.server_uuid !== 'default') {
+        assert.uuid(opts.server_uuid, 'opts.server_uuid');
+    }
     assert.string(opts.scope, 'opts.scope');
     assert.string(opts.id, 'opts.id');
 
@@ -788,7 +790,11 @@ function WaitlistDirectorRemoveFromPendingActivations(opts) {
     var pending = ModelWaitlist.pendingActivationsByServer;
 
     assert.object(opts, 'opts');
-    assert.uuid(opts.server_uuid, 'opts.server_uuid');
+
+    if (opts.server_uuid !== 'default') {
+        assert.uuid(opts.server_uuid, 'opts.server_uuid');
+    }
+
     assert.string(opts.scope, 'opts.scope');
     assert.string(opts.id, 'opts.id');
 
@@ -836,7 +842,11 @@ function ModelWaitlistActivateOne(opts, callback) {
     var etag;
 
     assert.object(opts, 'opts');
-    assert.uuid(opts.server_uuid, 'opts.server_uuid');
+
+    if (opts.server_uuid !== 'default') {
+        assert.uuid(opts.server_uuid, 'opts.server_uuid');
+    }
+
     assert.string(opts.id, 'opts.id');
     assert.string(opts.scope, 'opts.scope');
 
@@ -944,6 +954,19 @@ function ModelWaitlistTicketOperation(opts, callback) {
     assert.object(opts, 'opts');
     assert.string(opts.operation, 'opts.operation');
     assert.uuid(opts.ticket_uuid, 'opts.ticket_uuid');
+
+    if (opts.operation === TICKET_OPERATION_CREATE ||
+        opts.operation === TICKET_OPERATION_UPDATE) {
+        assert.object(opts.payload, 'opts.payload');
+    }
+
+    if (opts.operation === TICKET_OPERATION_CREATE) {
+        if (opts.payload.server_uuid !== 'default') {
+            assert.optionalUuid(opts.payload.server_uuid,
+                'opts.payload.server_uuid');
+        }
+    }
+
     assert.func(callback, 'callback');
 
     // Only care about payload when creating or updating
@@ -1109,6 +1132,11 @@ function ModelWaitlistCreateTicket(opts, callback) {
     assert.string(opts.id, 'opts.id');
     assert.string(opts.expires_at, 'opts.expires_at');
     assert.optionalString(opts.action, 'opts.action');
+
+    if (opts.server_uuid !== 'default') {
+        assert.optionalUuid(opts.server_uuid, 'opts.server_uuid');
+    }
+
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.optionalObject(opts.extra, 'opts.extra');
     assert.func(callback, 'callback');
