From 12e3212c615de602881225619ffc620418fdc10f Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Wed, 5 Oct 2016 20:25:22 -0700
Subject: [PATCH] joyent/node-mooremachine#9 substates are broken

---
 lib/fsm.js         | 25 +++++++++++++++++++----
 test/basic.test.js | 51 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 72 insertions(+), 4 deletions(-)

diff --git a/lib/fsm.js b/lib/fsm.js
index 65d519c..2842068 100644
--- a/lib/fsm.js
+++ b/lib/fsm.js
@@ -50,6 +50,11 @@ FSMStateHandle.prototype.gotoState = function (state) {
 	return (this.fsh_fsm._gotoState(state));
 };
 
+FSMStateHandle.prototype.reset = function () {
+	this.fsh_valid = true;
+	this.fsh_nextState = undefined;
+};
+
 FSMStateHandle.prototype.disconnect = function () {
 	var ls = this.fsh_listeners;
 	for (var i = 0; i < ls.length; ++i) {
@@ -71,8 +76,14 @@ FSMStateHandle.prototype.disconnect = function () {
 	this.fsh_timeouts = [];
 	this.fsh_intervals = [];
 	this.fsh_immediates = [];
+	return (this.fsh_link);
+};
+
+FSMStateHandle.prototype.disconnectAll = function () {
+	this.disconnect();
 	if (this.fsh_link !== undefined)
-		this.fsh_link.disconnect();
+		return (this.fsh_link.disconnect());
+	return (undefined);
 };
 
 FSMStateHandle.prototype.on = function (obj, evt, cb) {
@@ -176,9 +187,15 @@ FSM.prototype._gotoState = function (state) {
 	 */
 	var parts = (this.fsm_state ? this.fsm_state.split('.') : ['']);
 	var newParts = state.split('.');
-	if (parts[0] !== newParts[0] && this.fsm_handle !== undefined) {
-		this.fsm_handle.disconnect();
-		this.fsm_handle = undefined;
+	if (this.fsm_handle !== undefined) {
+		if (parts[0] === newParts[0] && parts[1] === undefined &&
+		    newParts[1] !== undefined) {
+			this.fsm_handle.reset();
+		} else if (parts[0] === newParts[0]) {
+			this.fsm_handle = this.fsm_handle.disconnect();
+		} else {
+			this.fsm_handle = this.fsm_handle.disconnectAll();
+		}
 	}
 
 	var f = this['state_' + newParts[0]];
diff --git a/test/basic.test.js b/test/basic.test.js
index 2eb5cb9..f7c2f57 100644
--- a/test/basic.test.js
+++ b/test/basic.test.js
@@ -110,3 +110,54 @@ test('double transition', function (t) {
 		});
 	});
 });
+
+test('substates', function (t) {
+		var Class = function () {
+		FSM.call(this, 'initial');
+	};
+	util.inherits(Class, FSM);
+	Class.prototype.state_initial = function (S) {
+		S.on(this, 'foo', function () {
+			S.gotoState('next');
+		});
+		S.gotoState('initial.sub1');
+	};
+	Class.prototype.state_initial.sub1 = function (S) {
+		S.on(this, 'foobar', function () {
+			S.gotoState('initial.sub2');
+		});
+	};
+	Class.prototype.state_initial.sub2 = function (S) {
+		S.on(this, 'baz', function () {
+			S.gotoState('initial.sub1');
+		});
+	};
+	Class.prototype.state_next = function (S) {
+		S.validTransitions([]);
+	};
+
+	var c = new Class();
+	var history = [];
+	c.on('stateChanged', function (st) {
+		history.push(st);
+	});
+	t.ok(c.isInState('initial'));
+	t.ok(c.isInState('initial.sub1'));
+	t.strictEqual(c.listeners('foobar').length, 1);
+	t.strictEqual(c.listeners('foo').length, 1);
+	c.emit('foobar');
+	t.ok(c.isInState('initial.sub2'));
+	t.strictEqual(c.listeners('foobar').length, 0);
+	c.emit('foobar');
+	t.ok(c.isInState('initial.sub2'));
+	c.emit('baz');
+	t.ok(c.isInState('initial.sub1'));
+	c.emit('foo');
+	t.ok(c.isInState('next'));
+
+	setImmediate(function () {
+		t.deepEqual(history, ['initial', 'initial.sub1',
+		    'initial.sub2', 'initial.sub1', 'next']);
+		t.end();
+	});
+});
-- 
2.21.0

