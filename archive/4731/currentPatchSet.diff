commit 5d8e5ac82348f2e607d55b5fc64cec96963b05e2 (refs/changes/31/4731/3)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2018-08-22T22:46:20+00:00 (1 year, 2 months ago)
    
    MANTA-3875 Add metric to muskie to measure bytes deleted
    Reviewed by: Robert Bogart <robert.bogart@joyent.com>
    Reviewed by: Jared Morrow <jm@joyent.com>
    Approved by: Robert Bogart <robert.bogart@joyent.com>

diff --git a/lib/audit.js b/lib/audit.js
index ccd0829..59a5d27 100644
--- a/lib/audit.js
+++ b/lib/audit.js
@@ -121,6 +121,8 @@ function auditLogger(options) {
     // Retrieve metric collectors for request count and request latency.
     var request_counter = options.collector.getCollector(
         common.METRIC_REQUEST_COUNTER);
+    var deleted_data_counter = options.collector.getCollector(
+        common.METRIC_DELETED_DATA_COUNTER);
     var latency_histogram = options.collector.getCollector(
         common.METRIC_LATENCY_HISTOGRAM);
     var time_histogram = options.collector.getCollector(
@@ -297,6 +299,32 @@ function auditLogger(options) {
             latency_histogram.observe(obj.latencyToFirstByte, labels);
         }
 
+        if (op === 'DELETE') {
+            /*
+             * Delete metrics for snaplink-disabled accounts provide a
+             * meaningful measure of short-term storage reclamation in
+             * deployments with garbage-collectors.
+             *
+             * We avoid tracking these metrics for accounts that are not
+             * snaplink-disabled because the storage for objects owned by such
+             * accounts may still be occupied for long periods of time after
+             * the corresponding delete API calls complete.
+             */
+            common.checkAccountSnaplinksEnabled(req, req.caller.account.uuid,
+                function (enabled) {
+                if (enabled) {
+                    return;
+                }
+                var md = req.metadata;
+                if (md.type === 'object' && md.contentLength > 0) {
+                    var storage = md.contentLength * md.sharks.length;
+                    labels.login = req.caller.account.login ||
+                        req.caller.account.uuid;
+                    deleted_data_counter.add(storage, labels);
+                }
+            });
+        }
+
         log.info(obj, 'handled: %d', res.statusCode);
 
         return (true);
diff --git a/lib/common.js b/lib/common.js
index 733004c..5df530b 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -77,6 +77,7 @@ var METRIC_LATENCY_HISTOGRAM = 'http_request_latency_ms';
 var METRIC_DURATION_HISTOGRAM = 'http_request_time_ms';
 var METRIC_INBOUND_DATA_COUNTER = 'muskie_inbound_streamed_bytes';
 var METRIC_OUTBOUND_DATA_COUNTER = 'muskie_outbound_streamed_bytes';
+var METRIC_DELETED_DATA_COUNTER = 'muskie_deleted_bytes';
 
 // The max number of headers we store on an object in Moray: 4 KB.
 var MAX_HDRSIZE = 4 * 1024;
@@ -790,6 +791,8 @@ module.exports = {
 
     METRIC_OUTBOUND_DATA_COUNTER: METRIC_OUTBOUND_DATA_COUNTER,
 
+    METRIC_DELETED_DATA_COUNTER: METRIC_DELETED_DATA_COUNTER,
+
     storagePaths: function storagePaths(cfg) {
         var StoragePaths = {
             'public': {
diff --git a/lib/server.js b/lib/server.js
index df6a1d1..a7a3780 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -145,6 +145,10 @@ function createServer(options, clients, name) {
         name: common.METRIC_OUTBOUND_DATA_COUNTER,
         help: 'count of object bytes streamed from storage to client'
     });
+    options.collector.counter({
+        name: common.METRIC_DELETED_DATA_COUNTER,
+        help: 'count of bytes deleted by snaplink-disabled clients'
+    });
 
     var _timeout = parseInt((process.env.SOCKET_TIMEOUT || 120), 10) * 1000;
     server.server.setTimeout(_timeout, function onTimeout(socket) {
