{"project":"joyent/manatee-state-machine","branch":"master","id":"Iff78e7596746ba8ff6b75784270c71ddaac008c9","number":"3056","subject":"MANATEE-380 would like `manatee-adm promote` Reviewed by: David Pacheco \u003cdap@joyent.com\u003e Approved by: David Pacheco \u003cdap@joyent.com\u003e Approved by: Isaac Davis \u003cisaac.davis@joyent.com\u003e Approved by: Joshua M. Clulow \u003cjmc@joyent.com\u003e","owner":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"url":"https://cr.joyent.us/3056","commitMessage":"MANATEE-380 would like `manatee-adm promote`\nReviewed by: David Pacheco \u003cdap@joyent.com\u003e\nApproved by: David Pacheco \u003cdap@joyent.com\u003e\nApproved by: Isaac Davis \u003cisaac.davis@joyent.com\u003e\nApproved by: Joshua M. Clulow \u003cjmc@joyent.com\u003e\n","createdOn":1512582758,"lastUpdated":1556549470,"open":false,"status":"MERGED","comments":[{"timestamp":1512582758,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 1."},{"timestamp":1512582762,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1513102391,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1513157070,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 2."},{"timestamp":1513157074,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1513157823,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 2:\n\nThanks for looking, Tim!\n\nPS2 adds some README changes that should word out the intended implementation at Dave\u0027s suggestion.\n\nOne of the biggest concerns I have with this implementation is the validation of the \"promote\" object. I validate this separately to the rest of the clusterState because it would be a shame to have a peer blow up on an assertion that the whole clusterState is invalid if \"promote\" is even slightly unexpected. This is similar to \"freeze\" but doesn\u0027t apply to the state machine because it only checks for the freeze property, not what it contains.\n\nI\u0027ve considered having this promote object separate to the clusterState (something like \"/manatee/\u003cshardName\u003e/promote\" in ZooKeeper) and having the cluster watch an extra path, but I\u0027ve not explored that too much. It will add complexity to the change as it requires changes across more projects, and more state stored in different locations in ZooKeeper, but it feels a bit more appropriate as the \"promote\" object doesn\u0027t necessarily contain information on the actual state of the cluster (rather, its intended/requested state)."},{"timestamp":1513366084,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 2:\n\n(18 comments)\n\nNice!"},{"timestamp":1513366191,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1515166628,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 3."},{"timestamp":1515166631,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1515166715,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 2:\n\n(19 comments)"},{"timestamp":1515625672,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 3:\n\n(7 comments)"},{"timestamp":1516029744,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 4."},{"timestamp":1516029747,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1516029786,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 4:\n\n(7 comments)"},{"timestamp":1516295692,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 3:\n\n(3 comments)"},{"timestamp":1516790232,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 5."},{"timestamp":1516790235,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1516790349,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 5:\n\n(2 comments)"},{"timestamp":1520297499,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 5: Code-Review+1\n\n(2 comments)\n\nLooks great!  I just had one question about the test."},{"timestamp":1520335641,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 5:\n\n(1 comment)"},{"timestamp":1520355818,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 5:\n\n(1 comment)"},{"timestamp":1521457154,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 5:\n\nWhile testing some parts of the joyent/manatee changes I\u0027ve realised that some of this might need to change.\n\nWhen a promotion is requested, the state machine will evaluate the object it finds and return true from \"promotion()\" if it\u0027s deemed valid. At this point we stop evaluating the rest of the state and put a new state object after going through either \"startTakeover()\" or \"startUpdateAsyncs()\".\n\nHowever, if \"promotion()\" returns false due to an invalid object, we continue with the state object evaluation (\"evalClusterState()\"), but we\u0027ve also asynchronously fired off an update to the cluster to delete the object, setting \"mp_updating\" to true. If during the rest of \"evalClusterState()\" we find that we need to update the state object, we\u0027ll likely blow an assertion.\n\nFor example, in a cluster with just primary and sync, a promotion is requested of the sync with the override flag. The cluster first sees this object and ignores it because there\u0027s no asyncs, leaving the object in place in this case (I\u0027d like to change this). If an async is then added after expireTime, we\u0027ll eval this promote object again, return from \"promotion()\" falsy and start deleting it, but will eventually need to run \"startUpdateAsyncs\" and blow the \"mp_updating\" assertion.\n\nI\u0027m not quite sure how this can be tested for just yet or how big the change will be, but I\u0027d like to figure this out."},{"timestamp":1521537739,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 6."},{"timestamp":1521537743,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 6: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1521538028,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 6:\n\nPS6 fixes the assertion crash I mentioned in my PS5 comment by making a small change to the purpose of \"promotion()\". Now, it acts as a method to determine if any cluster state action is required as part of finding a promote object in the cluster\u0027s state, even if that is to delete the request (i.e. it is invalid and we\u0027re the primary).\n\nRegarding my point on leaving the promotion request in place if there are no asyncs, I don\u0027t think this is avoidable in this change\u0027s current state. By the time we\u0027ve made the decision to fire \"startTakeover()\" and potentially find out that there\u0027s no asyncs, the primary has already dropped out of this decision making (this is the sync\u0027s responsibility in this case) so the cluster is not able to clear the request. This is unfortunate, but ultimately only possible if the operator intentionally ignores the warnings reported by the CLI, and can be cleared with tooling anyway."},{"timestamp":1521583834,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 6: Code-Review+1"},{"timestamp":1554799105,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 7: Patch Set 6 was rebased"},{"timestamp":1554799110,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 7:\n\n\"make check\" passed ok"},{"timestamp":1554815891,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 8."},{"timestamp":1554815895,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 8: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1555019241,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 8: Code-Review+1"},{"timestamp":1556218635,"reviewer":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"},"message":"Patch Set 8: Integration-Approval+1\n\nThe testing looks good for this.  We had a call (Dave, Richard, Isaac, and myself) and this part of the change looks good to go!"},{"timestamp":1556218650,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 8: Integration-Approval+1"},{"timestamp":1556218947,"reviewer":{"name":"Isaac Davis","email":"isaac.davis@joyent.com","username":"isaacdavis"},"message":"Patch Set 8: Integration-Approval+1"},{"timestamp":1556548257,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Uploaded patch set 9: Commit message was updated."},{"timestamp":1556549470,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Richard Bradley"}],"currentPatchSet":{"number":"9","revision":"ff78e7596746ba8ff6b75784270c71ddaac008c9","parents":["b03cc5a80e14525306a87233eef7c6cf73184ed9"],"ref":"refs/changes/56/3056/9","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1556548257,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1554815895,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1555019241,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218635,"by":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218650,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218947,"by":{"name":"Isaac Davis","email":"isaac.davis@joyent.com","username":"isaacdavis"}},{"type":"SUBM","value":"1","grantedOn":1556549470,"by":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":145,"deletions":-2},{"file":"lib/schemas.js","type":"MODIFIED","insertions":27,"deletions":-1},{"file":"lib/sim.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/validation.js","type":"MODIFIED","insertions":50,"deletions":-1},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":656,"sizeDeletions":-6},"patchSets":[{"number":"1","revision":"5552a9b9538bba5a7b7165aa29b5e0d48f0a4732","parents":["795baa99af4b29087cae00f152d8e121c4c20e3f"],"ref":"refs/changes/56/3056/1","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1512582758,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1512582762,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1513102391,"by":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":55,"deletions":0},{"file":"lib/schemas.js","type":"MODIFIED","insertions":26,"deletions":0},{"file":"lib/sim.js","type":"MODIFIED","insertions":39,"deletions":0},{"file":"lib/validation.js","type":"MODIFIED","insertions":36,"deletions":0},{"file":"test/tst.promote.js","type":"ADDED","insertions":134,"deletions":0}],"sizeInsertions":291,"sizeDeletions":0},{"number":"2","revision":"5f181390cf85f77e7455d64495e4f71a4a3e3061","parents":["795baa99af4b29087cae00f152d8e121c4c20e3f"],"ref":"refs/changes/56/3056/2","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1513157070,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1513157074,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"README.md","line":395,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"\"optional\"?"},{"file":"README.md","line":395,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"README.md","line":400,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"\"optional\" (if that makes sense)"},{"file":"README.md","line":400,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"README.md","line":408,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Maybe \"deadline\" or \"expireTime\"?"},{"file":"README.md","line":408,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"This one was a bit of a placeholder. I\u0027ve changed it to \"expireTime\"."},{"file":"lib/manatee-peer.js","line":488,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Would you mind putting braces around this one-line \"if\" body?"},{"file":"lib/manatee-peer.js","line":488,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"lib/manatee-peer.js","line":732,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think bunyan handles this better if you just log the error directly.\n\nA pattern I often use is:\n\n    err \u003d  new VError(promote, \u0027attempted to promote but invalid\u0027);\n    log.warn(err);\n\ni.e., whatever would go into the log message winds up on the Error too.  It doesn\u0027t matter here because you\u0027re not doing anything with the error (appropriately), but it\u0027s helpful when the error is being propagated somewhere else so that the error message has the same context that was added for the log message.\n\nI think this should probably be a warning or even an error-level message."},{"file":"lib/manatee-peer.js","line":732,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Thanks for the suggestion. The log message is formatted nicely like that!\n\nI think I\u0027ll change this to a warning. The existing code classes a validation of the state object as an error, and a bad promote object isn\u0027t as fatal. Also, warnings seem to be used in other places for a similar type of event (e.g. L724, where no asyncs are present in an attempted takeover)."},{"file":"lib/manatee-peer.js","line":733,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I forgot one thing: suppose we wind up with an invalid \"promote\" object.  How do we get ourselves out of this situation?  Would there be an option to \"manatee-adm promote\" like \"--cancel\" that would remove the object?  And/or a \"--cleanup\" that would remove an object whose deadline had passed or whose generation was no longer valid?  Or should the primary just do that here if it runs into this?"},{"file":"lib/manatee-peer.js","line":733,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Yes, good point! This is probably my biggest gripe in this implementation, and part of the reason why I mentioned storing this promotion object in another path. I\u0027m definitely open to suggestions on this one.\n\nRight now, it stays in the cluster state until an operator removes it (tooling required), or for some reason the state machine writes to ZooKeeper for other reasons (e.g. a change in active peers resulting in a topology change). Specifically, this is because it doesn\u0027t make its way into \"mp_updating_state\" whenever this is being put together.\n\nI had planned on having {{manatee-adm}} handle this, where when a promotion is requested, if the promotion takes longer than expireTime and the object is still in ZooKeeper\u0027s state (perhaps along with other checks on topology), then the tool will warn the user, remove the object, and exit non-0.\n\nClearly this leaves the case where the operator for some reason ctrl-C\u0027s out of the command at some point between the object being written and a promotion _not_ happening for whatever reason. In this case, I hadn\u0027t put much thought into a \"cancel\" command, but this would be trivial to add. What I had considered (and was unsure about) is that this object could live in the cluster\u0027s state until the cluster naturally removes it (above), or an operator requests a subsequent promotion, in which case an old promote object is ignored/overwritten (maybe tell the operator about it?) so long as it\u0027s still invalid.\n\nI had considered the primary removing this object when it deems it invalid, or even writing another property to it in order to provide feedback to anyone watching. I think if the primary just removed it then it means the operator (i.e. tooling) will have to rely solely on topology layout to determine if the promotion was acknowledged and acted upon or not.\n\nLastly, this has implications on the specific case where we\u0027ve requested a promotion and ignored it because of the lack of asyncs, but an async is subsequently added to the cluster before expireTime has passed. In this case the promotion will take place, but the new async might not be sufficiently caught up, or possibly even rebuilding. I\u0027ve envisioned keeping expireTimes very short (~500ms?) for this reason, but it still feels sketchy."},{"file":"lib/manatee-peer.js","line":733,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"This case really shouldn\u0027t be common, since it requires another bug (i.e., creating an invalid promote object).  In that case, I think it\u0027s reasonable for the primary to remove it and log a very visible error about it.  If {{manatee-adm promote}} is going to wait for the promotion to happen, it could identify that this has happened and report it to the user.  (That\u0027s not to say it has to work that way, but it seems the easiest way to get out of the situation, and I don\u0027t see what benefit we can get from keeping a truly invalid value in there.)\n\nIf it\u0027s just that the expireTime has passed, that might be different.\n\nThe case of a takeover before the async is ready is a problem, though I think it already exists independent of this issue."},{"file":"lib/manatee-peer.js","line":733,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Thanks for the pointers on this one! I\u0027ve made a change to ensure that the promote object is removed from the cluster\u0027s state in the event that it is deemed invalid, whether the object is truly invalid or simply incorrect somehow."},{"file":"lib/manatee-peer.js","line":743,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Would you mind adding braces to this \"if\" and the one at L746?"},{"file":"lib/manatee-peer.js","line":743,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"lib/manatee-peer.js","line":749,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"What do you think about asserting that the \"id\" matches the thing we\u0027re promoting?  I know we validate it in validate.js, but the fact that we rely on it here seems easy to miss for somebody modifying the code there."},{"file":"lib/manatee-peer.js","line":749,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"This has had a little re-work since your suggested change to \"isTakeover\", so let me know if an assertion would still clear things up here!"},{"file":"lib/manatee-peer.js","line":752,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"In the case that we\u0027re promoting the sync, I guess \"asyncIndex\" will be undefined, so \"whichasync\" will be 0, and \"isTakeover\" will be \"true\".  Isn\u0027t that the same as what happens when we\u0027re promoting the first async?  I guess in both cases, we\u0027re just calling startTakeover, and it happens to do the right thing whether we\u0027re promoting the sync or the first async based on whether we ourselves are the primary or the sync?  So I think this works, but it\u0027d be nice to make the code a little more explicit about what\u0027s going on.  Maybe something like:\n\n    isTakeover \u003d promote.role \u003d\u003d \u0027sync\u0027 || promote.asyncIndex \u003d\u003d 0\n\nand/or a comment mentioning that the behavior is the same."},{"file":"lib/manatee-peer.js","line":752,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Yep, that\u0027s the gist of it! \"startTakeover\" handles this case for us in the scenarios you worded out, and this works because we do a different thing depending on whether the primary or the sync has called this function. The mechanism it uses in this case is adding the primary to the deposed list if it finds that the caller is _not_ the primary (see here: https://github.com/joyent/manatee-state-machine/blob/795baa99af4b29087cae00f152d8e121c4c20e3f/lib/manatee-peer.js#L743). On the subsequent \"clusterStateChange\" event, each peer will take whatever action is required to move roles.\n\nYour one-line cleans this up nicely, and I\u0027ve added a comment to indicate why we can do this kind of deduction. Thanks!"},{"file":"lib/manatee-peer.js","line":759,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"This is interesting -- this is a different interpretation of what I would have expected, but I\u0027m not sure either is better than the other.  I was figuring that if you had:\n\n    primary: A\n    sync: B\n    asyncs: C, D, E, F\n\nand you promoted D, then I\u0027d expect the async list to be:\n\n    asyncs: D, C, E, F\n\nbut this would produce:\n\n    asyncs: D, E, F, C\n\nI think it\u0027s slightly surprising that C has its position changed so much when we were only trying to promote D, but I\u0027m not sure it matters.  Is there a reason to prefer one over the other?"},{"file":"lib/manatee-peer.js","line":759,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I have no strong preference on this, other than to not surprise people. I\u0027d also like to clean this line up anyway because it\u0027s difficult to read back.\n\nIt looks like the README attempts to firm this up (here: https://github.com/joyent/manatee-state-machine#async-peer-management), but I don\u0027t think it\u0027s enough to give a solid answer. The rest of the state machine assumes that a peer has gone away completely and may not come back when not moving _up_ the hierarchy, so that\u0027s where my assumption has come from.\n\nIf you think of it from the perspective of another async peer, would it be surprising to find that a different peer has jumped in front of you in the queue/chain? It would work, but is this what the README refers to as \"shuffling\"? Other promotions (e.g promote sync, first async) leading to the sync changing position: would that mean the sync now become the first async?"},{"file":"lib/schemas.js","line":102,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"The README says this is a string, I think.  I do think it makes sense for it to be an ISO 8601 timestamp, since that\u0027s a pretty good way to serialize timestamps for storage and transmission."},{"file":"lib/schemas.js","line":102,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I chose an epoch (from getTime()) initially because of easier comparison, but I almost always struggle with them when reading them myself. I\u0027ve changed this to be an ISO 8601 string representing the expireTime."},{"file":"lib/sim.js","line":731,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I\u0027m surprised jsstyle didn\u0027t complain about not having parentheses around this."},{"file":"lib/sim.js","line":731,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"`make` for this project seems to assume a globally installed jsl/jsstyle command (which I have installed), and perhaps the jsl.node.conf is out of date? In either case, perhaps the project could do with some work, so I\u0027ve filed MANATEE-391."},{"file":"lib/validation.js","line":100,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"maybe add \"expected\" and \"found\" in the error message?"},{"file":"lib/validation.js","line":100,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"lib/validation.js","line":103,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Maybe add the deadline to the error message?"},{"file":"lib/validation.js","line":103,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"lib/validation.js","line":110,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Do we need to check if the asyncIndex is out of range?"},{"file":"lib/validation.js","line":110,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"test/tst.promote.js","line":104,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think this test case isn\u0027t testing what you meant (or maybe I misunderstood what \"invalid asyncIndex\" meant).  asyncIndex is 2, and that refers to a valid async, which is not \"node2\".  That\u0027s a fine test, but it might be nice to add one for the case where the \"promote\" object has a negative \"asyncIndex\" or one larger than the last valid async index."},{"file":"test/tst.promote.js","line":104,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I had conflated \"invalid\" (asyncIndex referring to the wrong peer identifier) and \"out of range\" in this case.\n\nI\u0027ve created a new test for out of range and changed the names of these tests to better reflect their purpose."},{"file":"test/tst.promote.js","line":106,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Is there a missing test case here?"},{"file":"test/tst.promote.js","line":106,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Yes, there is! I\u0027ve filled this out in the test suite now, as well as some additional validation tests."},{"file":"test/tst.promote.js","line":118,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"This seems surprising -- doesn\u0027t it have to be generation 2?"},{"file":"test/tst.promote.js","line":118,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"It is surprising! This has to do with my goofy \"force\" override in the test suite. When the role is sync and force is not set in the test suite, it simply deposes the primary, which is why the following check was correct.\n\nThis doesn\u0027t test what I want it to test (the sync being responsible for a promotion), so I\u0027ve removed that override and split the test suite into two in order to start the cluster up as the primary or the sync: one set of tests for the primary (which includes all validation of the promote object), and one set of tests for the sole test of a sync promoting itself."},{"file":"test/tst.promote.js","line":121,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"How about a test with an invalid value for \"generation\" (e.g., a negative one or a non-number string or something)?"},{"file":"test/tst.promote.js","line":121,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Sure thing. I\u0027ve added some further tests in an attempt to properly flex some of the schema validation errors that could come up, including more out of range checks."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":1,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":50,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":55,"deletions":0},{"file":"lib/schemas.js","type":"MODIFIED","insertions":26,"deletions":0},{"file":"lib/sim.js","type":"MODIFIED","insertions":39,"deletions":0},{"file":"lib/validation.js","type":"MODIFIED","insertions":36,"deletions":0},{"file":"test/tst.promote.js","type":"ADDED","insertions":134,"deletions":0}],"sizeInsertions":341,"sizeDeletions":0},{"number":"3","revision":"c11ee201e70164b20e64b9ca1b31263d697be19e","parents":["795baa99af4b29087cae00f152d8e121c4c20e3f"],"ref":"refs/changes/56/3056/3","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1515166628,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1515166631,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"README.md","line":409,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think it\u0027d be better to just say that this should be an ISO 8601 timestamp."},{"file":"README.md","line":409,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Done"},{"file":"lib/manatee-peer.js","line":776,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think it would still be worthwhile to assert that this index is in range (and/or that the splice returns exactly one element)."},{"file":"lib/manatee-peer.js","line":776,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I\u0027ve added some assertions around asyncIndex being in the range we expect, and also around the \"newasyncs\" variable and its contents. I think it clears up a few things."},{"file":"lib/validation.js","line":100,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Is this output stable, or could this change?  To tell if Date objects are valid, I usually check `isNaN(date.getTime())`."},{"file":"lib/validation.js","line":100,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Thank you! This seems like a much more accurate way to tell if Date has properly parsed a string, so I\u0027ve changed the check to your suggestion."},{"file":"lib/validation.js","line":112,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"These seem like semantic errors more than syntactic.  I tend to distinguish them, though I\u0027m not sure if it\u0027s worthwhile in this case.  (For example, if the object is missing key properties or they have the wrong types, it\u0027s hard to know what to do with it.  We kind of need to remove it or stop processing it or something.  On the other hand, if the time has passed or the generation is different, it\u0027s pretty clear how to handle it.  In practice, though, it may be the same action that we want to take in all cases (namely, remove the object).)\n\nI think this applies to most of the asyncIndex checks below, too."},{"file":"lib/validation.js","line":112,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Yes, I can agree with this. It currently contains a mix of schema-related validations and correctness checks with the caller having no way to determine the difference, but I can see where separating them would be useful.\n\nI think given that the end result is now going to be removing the object, it shouldn\u0027t be too bad to keep them together. The logs will contain the failure so that an operator can see what happened, but the state machine will not perform a different action depending on the type of failure, at least in this change."},{"file":"test/tst.promote_primary.js","line":64,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I still find it a little surprising that \"node2\" winds up at the end of the chain, instead of the first async."},{"file":"test/tst.promote_primary.js","line":64,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I\u0027ve made some modifications based on this and our previous discussion on demoted peers. That is, a peer that is ahead of the promoted peer will not be moved down one position in the chain (to replace the promoted peer), as opposed to re-joining the chain at the end."},{"file":"test/tst.promote_primary.js","line":123,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"While unlikely, could this test fail spuriously if the code runs within the same millisecond?  You could just encode a specific date in the past here."},{"file":"test/tst.promote_primary.js","line":123,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"It probably could! I\u0027ve provided a specific date that\u0027s far enough in the past to be obvious that it\u0027s intentional."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":2,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":71,"deletions":0},{"file":"lib/schemas.js","type":"MODIFIED","insertions":26,"deletions":0},{"file":"lib/sim.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"lib/validation.js","type":"MODIFIED","insertions":49,"deletions":0},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":578,"sizeDeletions":0},{"number":"4","revision":"7810e01054cff6faee03ab9fe6f96e75a76bd6c3","parents":["795baa99af4b29087cae00f152d8e121c4c20e3f"],"ref":"refs/changes/56/3056/4","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1516029744,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1516029747,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/manatee-peer.js","line":790,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"This took me a while to grok, but I do think it\u0027s correct!"},{"file":"lib/manatee-peer.js","line":800,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Should this be \"startDeletePromoteObject\" for consistency with the other functions that write state (e.g., startTakeover*, startUpdateAsyncs)?"},{"file":"lib/manatee-peer.js","line":800,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Good point! Done."},{"file":"lib/manatee-peer.js","line":859,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It took me some time to realize that this is correct because the only reason we would do a promotion as the primary is because we\u0027re promoting the first async, which means the current sync is being swapped with it.  What do you think about adding an assertion here that the promotion id is current sync\u0027s id and the promote role is \"sync\"?"},{"file":"lib/manatee-peer.js","line":859,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I think we would want to assert that the promote object refers to the first async in the event of a promotion, right? If we\u0027re promoting the _sync_ then we don\u0027t hit this condition (because we shouldn\u0027t be the current primary, with the intention there being to depose it as the sync).\n\nIn either case, happy to add more here to help explain. I\u0027ve some assertions and a comment for flavour on this because (as you\u0027ve noticed) it\u0027s not entirely obvious why this works with only this function as context.\n\nLet me know if my latest patch set clears this up."},{"file":"lib/manatee-peer.js","line":859,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Thanks.  That looks right."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":2,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":125,"deletions":-1},{"file":"lib/schemas.js","type":"MODIFIED","insertions":26,"deletions":0},{"file":"lib/sim.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"lib/validation.js","type":"MODIFIED","insertions":49,"deletions":0},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":632,"sizeDeletions":-1},{"number":"5","revision":"b9b0ca3e1e1f8fa9be9e200b05388868bc1f8358","parents":["795baa99af4b29087cae00f152d8e121c4c20e3f"],"ref":"refs/changes/56/3056/5","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1516790232,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1520297499,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1516790235,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"test/tst.promote_sync.js","line":84,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Did this test\u0027s behavior up to this point change?  It doesn\u0027t look like the changes from PS3 -\u003e PS5 would cause this, but maybe I missed something."},{"file":"test/tst.promote_sync.js","line":84,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"This was an original omission on my part. The test passed before and after adding these entries, but is now more complete with the added elements.\n\nI believe this is due to how the test suite checks these objects when \"check\" is passed, where the object I\u0027m passing here is \n\"expected\", but \"actual\" can have more properties, or in this case, more elements in the array. This is considered OK by the test suite, but adding these elements properly tests for an out-of-order array.\n\nHere\u0027s where I\u0027ve got this information from: https://github.com/joyent/manatee-state-machine/blob/795baa99af4b29087cae00f152d8e121c4c20e3f/test/common.js#L112-L126"},{"file":"test/tst.promote_sync.js","line":84,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Ah, that makes sense.  I wonder if we want to make that stricter for arrays, but that\u0027s certainly not necessary in this change."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":2,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":139,"deletions":-1},{"file":"lib/schemas.js","type":"MODIFIED","insertions":26,"deletions":0},{"file":"lib/sim.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"lib/validation.js","type":"MODIFIED","insertions":49,"deletions":0},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":646,"sizeDeletions":-1},{"number":"6","revision":"32c61c37386fac9d599069c1dee994c8c908d18e","parents":["795baa99af4b29087cae00f152d8e121c4c20e3f"],"ref":"refs/changes/56/3056/6","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1521537739,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1521583834,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1521537743,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":2,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":144,"deletions":-1},{"file":"lib/schemas.js","type":"MODIFIED","insertions":26,"deletions":0},{"file":"lib/sim.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"lib/validation.js","type":"MODIFIED","insertions":49,"deletions":0},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":651,"sizeDeletions":-1},{"number":"7","revision":"36599a885db164c6956d538898e794e08dcff3cb","parents":["b03cc5a80e14525306a87233eef7c6cf73184ed9"],"ref":"refs/changes/56/3056/7","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1554799105,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1521583834,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1521537743,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":2,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":144,"deletions":-1},{"file":"lib/schemas.js","type":"MODIFIED","insertions":26,"deletions":0},{"file":"lib/sim.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"lib/validation.js","type":"MODIFIED","insertions":49,"deletions":0},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":651,"sizeDeletions":-1},{"number":"8","revision":"bb1f602c8134d34c321b1f5b4f0788daaa12cf3b","parents":["b03cc5a80e14525306a87233eef7c6cf73184ed9"],"ref":"refs/changes/56/3056/8","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1554815891,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1555019241,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218650,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218635,"by":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1554815895,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218947,"by":{"name":"Isaac Davis","email":"isaac.davis@joyent.com","username":"isaacdavis"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":145,"deletions":-2},{"file":"lib/schemas.js","type":"MODIFIED","insertions":27,"deletions":-1},{"file":"lib/sim.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/validation.js","type":"MODIFIED","insertions":50,"deletions":-1},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":656,"sizeDeletions":-6},{"number":"9","revision":"ff78e7596746ba8ff6b75784270c71ddaac008c9","parents":["b03cc5a80e14525306a87233eef7c6cf73184ed9"],"ref":"refs/changes/56/3056/9","uploader":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"createdOn":1556548257,"author":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1555019241,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218650,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218635,"by":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1554815895,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"SUBM","value":"1","grantedOn":1556549470,"by":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1556218947,"by":{"name":"Isaac Davis","email":"isaac.davis@joyent.com","username":"isaacdavis"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":3,"deletions":-1},{"file":"README.md","type":"MODIFIED","insertions":51,"deletions":0},{"file":"lib/manatee-peer.js","type":"MODIFIED","insertions":145,"deletions":-2},{"file":"lib/schemas.js","type":"MODIFIED","insertions":27,"deletions":-1},{"file":"lib/sim.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/validation.js","type":"MODIFIED","insertions":50,"deletions":-1},{"file":"test/tst.promote_primary.js","type":"ADDED","insertions":234,"deletions":0},{"file":"test/tst.promote_sync.js","type":"ADDED","insertions":114,"deletions":0}],"sizeInsertions":656,"sizeDeletions":-6}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"},{"name":"Isaac Davis","email":"isaac.davis@joyent.com","username":"isaacdavis"},{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"}]}