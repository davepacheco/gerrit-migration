commit 982cf9ac46c25c2ee557cd6007d49cf1f27859f2 (refs/changes/18/718/1)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2016-10-17T16:56:26-07:00 (3 years ago)
    
    DOCKER-948 docker build fails with 'Build failed: problem starting container' error

diff --git a/lib/backends/sdc/build.js b/lib/backends/sdc/build.js
index 2253581..37219e3 100644
--- a/lib/backends/sdc/build.js
+++ b/lib/backends/sdc/build.js
@@ -845,23 +845,50 @@ function runBuildCommand(opts, callback) {
 
     /**
      * This flow is a little strange, so an explanation is warranted:
+     *
      * - attachContainer launches and then it waits for the container to start
      *   before returning via the callback.
-     * - we synchronously call startContainer and thus this will allow
-     *   attachContainer to return, after which we call waitContainer.
+     *
+     * - in parallel, a call to startContainer is made and this allows
+     *   the attachContainer call to return.
+     *
+     * - when both attachContainer and startContainer fire their callbacks,
+     *   waitContainer is then called to get the exit code.
      */
-    req.backend.attachContainer({
-        account: req.account,
-        app: req.app,
-        doNotEncodeData: true,  // Don't encode data when writing to stream.
-        id: opts.dockerId,
-        log: log,
-        payload: payload,
-        req_id: opts.req_id,
-        socket: attachStream,
-        vm: opts.vm
-    }, function (err) {
-        log.debug('runBuildCommand: attachContainer finished, err: %j', err);
+
+    vasync.parallel({ funcs: [
+        function _attach(next) {
+            req.backend.attachContainer({
+                account: req.account,
+                app: req.app,
+                doNotEncodeData: true,  // Don't encode when writing to stream.
+                id: opts.dockerId,
+                log: log,
+                payload: payload,
+                req_id: opts.req_id,
+                socket: attachStream,
+                vm: opts.vm
+            }, function (err) {
+                log.debug('runBuildCommand: attachContainer finished, err: %j',
+                    err);
+                next(err);
+            });
+        },
+
+        function _start(next) {
+            req.backend.startContainer({
+                account: req.account,
+                app: req.app,
+                log: log,
+                req_id: opts.req_id,
+                vm: opts.vm
+            }, function (err) {
+                log.debug('runBuildCommand: startContainer finished, err: %j',
+                    err);
+                next(err);
+            });
+        }
+    ]}, function (err) {
         if (err) {
             callback(err);
             return;
@@ -878,20 +905,6 @@ function runBuildCommand(opts, callback) {
             callback(waitErr, { exitCode: exitCode });
         });
     });
-
-    log.debug('runBuildCommand: startContainer');
-    req.backend.startContainer({
-        account: req.account,
-        app: req.app,
-        log: log,
-        req_id: opts.req_id,
-        vm: opts.vm
-    }, function (err) {
-        log.debug('runBuildCommand: startContainer finished, err: %j', err);
-        if (err) {
-            callback(err);
-        }
-    });
 }
 
 
