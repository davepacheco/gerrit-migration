commit 8d593695131f282f863c2980607d048f709ee1da
Author: Isaac Davis <isaac.davis@joyent.com>
Date:   2019-06-10T22:14:47+00:00 (4 months ago)
    
    TRITON-1694 create Triton Grafana image

diff --git a/.eslintrc b/.eslintrc
new file mode 100644
index 0000000..e287518
--- /dev/null
+++ b/.eslintrc
@@ -0,0 +1,25 @@
+{
+	"plugins": [ "joyent" ],
+	"extends": [
+		"eslint:recommended",
+		"plugin:joyent/style",
+		"plugin:joyent/lint"
+	],
+	"parserOptions": {
+		"ecmaVersion": 6,
+		"sourceType": "script",
+		"ecmaFeatures": {
+		}
+	},
+	"env": {
+		"node": true
+	},
+	"rules": {
+		// Lint:
+		"strict": [ "error", "global" ],
+
+		// Style:
+		"func-style": [ "error", "declaration" ],
+		"multiline-comment-style": [ "error", "starred-block" ]
+	}
+}
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..60c6e5a
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,8 @@
+/bits
+/build
+/cache
+/grafana-pkg-*.tar.gz
+/make_stamps
+/node_modules
+/npm-debug.log
+/tmp
diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..f88a6ff
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,12 @@
+[submodule "deps/sdc-scripts"]
+	path = deps/sdc-scripts
+	url = https://github.com/joyent/sdc-scripts
+[submodule "deps/nginx"]
+	path = deps/nginx
+	url = https://github.com/nginx/nginx
+[submodule "deps/grafana"]
+	path = deps/grafana
+	url = https://github.com/joyent/grafana
+[submodule "deps/eng"]
+	path = deps/eng
+	url = https://github.com/joyent/eng.git
diff --git a/CHANGES.md b/CHANGES.md
new file mode 100644
index 0000000..eaff0d1
--- /dev/null
+++ b/CHANGES.md
@@ -0,0 +1,5 @@
+# triton-grafana changes
+
+## 1.0.0
+
+First version.
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000..dd0c13e
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,73 @@
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright 2019 Joyent, Inc.
+-->
+
+# Triton Contribution Guidelines
+
+Thanks for using Triton and for considering contributing to it!
+
+tl;dr:
+- Triton repos do *not* use GitHub pull requests (PRs)! You'll be asked to
+  re-submit PRs to Gerrit. See below.
+- Triton repos use both GitHub issues and internal-to-Joyent Jira projects for
+  issue tracking.
+
+
+## Code
+
+The Triton project uses Gerrit at [cr.joyent.us](https://cr.joyent.us) for code
+review of all changes. Any registered GitHub user can submit changes through
+this system. If you want to contribute a change, please see the [Joyent Gerrit
+user
+guide](https://github.com/joyent/joyent-gerrit/blob/master/docs/user/README.md).
+If you're making a substantial change, you probably want to contact developers
+[on the mailing list or IRC](README.md#community) first. If you have any trouble
+with the contribution process, please feel free to contact developers [on the
+mailing list or IRC](README.md#community). Note that larger Triton project
+changes are typically designed and discussed via ["Requests for Discussion
+(RFDs)"](https://github.com/joyent/rfd).
+
+Triton repositories use the [Joyent Engineering
+Guidelines](https://github.com/joyent/eng/blob/master/docs/index.md). Notably:
+
+* The #master branch should be first-customer-ship (FCS) quality at all times.
+  Don't push anything until it's tested.
+* All repositories should be "make check" clean at all times.
+* All repositories should have tests that run cleanly at all times.
+
+"make check" checks both JavaScript style and lint.  Style is checked with
+[jsstyle](https://github.com/davepacheco/jsstyle).  The specific style rules are
+somewhat repo-specific.  See the jsstyle configuration file or `JSSTYLE_FLAGS`
+in Makefiles in each repo for exceptions to the default jsstyle rules.
+
+Lint is checked with
+[javascriptlint](https://github.com/davepacheco/javascriptlint). Repos sometimes
+have repo-specific lint rules, but this is less common -- look for
+"tools/jsl.node.conf" for per-repo exceptions to the default rules.
+
+
+## Issues
+
+There are two separate issue trackers that are relevant for Triton code:
+
+- An internal-to-Joyent JIRA instance.
+
+  A JIRA ticket has an ID like `IMGAPI-536`, where "IMGAPI" is the JIRA project
+  name -- in this case used by the
+  [sdc-imgapi](https://github.com/joyent/sdc-imgapi) and related repos. A
+  read-only view of most JIRA tickets is made available at
+  <https://smartos.org/bugview/> (e.g.
+  <https://smartos.org/bugview/IMGAPI-536>).
+
+- GitHub issues for the relevant repo, e.g.
+  <https://github.com/joyent/triton/issues>.
+
+Before Triton was open sourced, Joyent engineering used a private JIRA instance.
+While Joyent continues to use JIRA internally, we also use GitHub issues for
+tracking -- primarily to allow interaction with those without access to JIRA.
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..14e2f77
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,373 @@
+Mozilla Public License Version 2.0
+==================================
+
+1. Definitions
+--------------
+
+1.1. "Contributor"
+    means each individual or legal entity that creates, contributes to
+    the creation of, or owns Covered Software.
+
+1.2. "Contributor Version"
+    means the combination of the Contributions of others (if any) used
+    by a Contributor and that particular Contributor's Contribution.
+
+1.3. "Contribution"
+    means Covered Software of a particular Contributor.
+
+1.4. "Covered Software"
+    means Source Code Form to which the initial Contributor has attached
+    the notice in Exhibit A, the Executable Form of such Source Code
+    Form, and Modifications of such Source Code Form, in each case
+    including portions thereof.
+
+1.5. "Incompatible With Secondary Licenses"
+    means
+
+    (a) that the initial Contributor has attached the notice described
+        in Exhibit B to the Covered Software; or
+
+    (b) that the Covered Software was made available under the terms of
+        version 1.1 or earlier of the License, but not also under the
+        terms of a Secondary License.
+
+1.6. "Executable Form"
+    means any form of the work other than Source Code Form.
+
+1.7. "Larger Work"
+    means a work that combines Covered Software with other material, in 
+    a separate file or files, that is not Covered Software.
+
+1.8. "License"
+    means this document.
+
+1.9. "Licensable"
+    means having the right to grant, to the maximum extent possible,
+    whether at the time of the initial grant or subsequently, any and
+    all of the rights conveyed by this License.
+
+1.10. "Modifications"
+    means any of the following:
+
+    (a) any file in Source Code Form that results from an addition to,
+        deletion from, or modification of the contents of Covered
+        Software; or
+
+    (b) any new file in Source Code Form that contains any Covered
+        Software.
+
+1.11. "Patent Claims" of a Contributor
+    means any patent claim(s), including without limitation, method,
+    process, and apparatus claims, in any patent Licensable by such
+    Contributor that would be infringed, but for the grant of the
+    License, by the making, using, selling, offering for sale, having
+    made, import, or transfer of either its Contributions or its
+    Contributor Version.
+
+1.12. "Secondary License"
+    means either the GNU General Public License, Version 2.0, the GNU
+    Lesser General Public License, Version 2.1, the GNU Affero General
+    Public License, Version 3.0, or any later versions of those
+    licenses.
+
+1.13. "Source Code Form"
+    means the form of the work preferred for making modifications.
+
+1.14. "You" (or "Your")
+    means an individual or a legal entity exercising rights under this
+    License. For legal entities, "You" includes any entity that
+    controls, is controlled by, or is under common control with You. For
+    purposes of this definition, "control" means (a) the power, direct
+    or indirect, to cause the direction or management of such entity,
+    whether by contract or otherwise, or (b) ownership of more than
+    fifty percent (50%) of the outstanding shares or beneficial
+    ownership of such entity.
+
+2. License Grants and Conditions
+--------------------------------
+
+2.1. Grants
+
+Each Contributor hereby grants You a world-wide, royalty-free,
+non-exclusive license:
+
+(a) under intellectual property rights (other than patent or trademark)
+    Licensable by such Contributor to use, reproduce, make available,
+    modify, display, perform, distribute, and otherwise exploit its
+    Contributions, either on an unmodified basis, with Modifications, or
+    as part of a Larger Work; and
+
+(b) under Patent Claims of such Contributor to make, use, sell, offer
+    for sale, have made, import, and otherwise transfer either its
+    Contributions or its Contributor Version.
+
+2.2. Effective Date
+
+The licenses granted in Section 2.1 with respect to any Contribution
+become effective for each Contribution on the date the Contributor first
+distributes such Contribution.
+
+2.3. Limitations on Grant Scope
+
+The licenses granted in this Section 2 are the only rights granted under
+this License. No additional rights or licenses will be implied from the
+distribution or licensing of Covered Software under this License.
+Notwithstanding Section 2.1(b) above, no patent license is granted by a
+Contributor:
+
+(a) for any code that a Contributor has removed from Covered Software;
+    or
+
+(b) for infringements caused by: (i) Your and any other third party's
+    modifications of Covered Software, or (ii) the combination of its
+    Contributions with other software (except as part of its Contributor
+    Version); or
+
+(c) under Patent Claims infringed by Covered Software in the absence of
+    its Contributions.
+
+This License does not grant any rights in the trademarks, service marks,
+or logos of any Contributor (except as may be necessary to comply with
+the notice requirements in Section 3.4).
+
+2.4. Subsequent Licenses
+
+No Contributor makes additional grants as a result of Your choice to
+distribute the Covered Software under a subsequent version of this
+License (see Section 10.2) or under the terms of a Secondary License (if
+permitted under the terms of Section 3.3).
+
+2.5. Representation
+
+Each Contributor represents that the Contributor believes its
+Contributions are its original creation(s) or it has sufficient rights
+to grant the rights to its Contributions conveyed by this License.
+
+2.6. Fair Use
+
+This License is not intended to limit any rights You have under
+applicable copyright doctrines of fair use, fair dealing, or other
+equivalents.
+
+2.7. Conditions
+
+Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted
+in Section 2.1.
+
+3. Responsibilities
+-------------------
+
+3.1. Distribution of Source Form
+
+All distribution of Covered Software in Source Code Form, including any
+Modifications that You create or to which You contribute, must be under
+the terms of this License. You must inform recipients that the Source
+Code Form of the Covered Software is governed by the terms of this
+License, and how they can obtain a copy of this License. You may not
+attempt to alter or restrict the recipients' rights in the Source Code
+Form.
+
+3.2. Distribution of Executable Form
+
+If You distribute Covered Software in Executable Form then:
+
+(a) such Covered Software must also be made available in Source Code
+    Form, as described in Section 3.1, and You must inform recipients of
+    the Executable Form how they can obtain a copy of such Source Code
+    Form by reasonable means in a timely manner, at a charge no more
+    than the cost of distribution to the recipient; and
+
+(b) You may distribute such Executable Form under the terms of this
+    License, or sublicense it under different terms, provided that the
+    license for the Executable Form does not attempt to limit or alter
+    the recipients' rights in the Source Code Form under this License.
+
+3.3. Distribution of a Larger Work
+
+You may create and distribute a Larger Work under terms of Your choice,
+provided that You also comply with the requirements of this License for
+the Covered Software. If the Larger Work is a combination of Covered
+Software with a work governed by one or more Secondary Licenses, and the
+Covered Software is not Incompatible With Secondary Licenses, this
+License permits You to additionally distribute such Covered Software
+under the terms of such Secondary License(s), so that the recipient of
+the Larger Work may, at their option, further distribute the Covered
+Software under the terms of either this License or such Secondary
+License(s).
+
+3.4. Notices
+
+You may not remove or alter the substance of any license notices
+(including copyright notices, patent notices, disclaimers of warranty,
+or limitations of liability) contained within the Source Code Form of
+the Covered Software, except that You may alter any license notices to
+the extent required to remedy known factual inaccuracies.
+
+3.5. Application of Additional Terms
+
+You may choose to offer, and to charge a fee for, warranty, support,
+indemnity or liability obligations to one or more recipients of Covered
+Software. However, You may do so only on Your own behalf, and not on
+behalf of any Contributor. You must make it absolutely clear that any
+such warranty, support, indemnity, or liability obligation is offered by
+You alone, and You hereby agree to indemnify every Contributor for any
+liability incurred by such Contributor as a result of warranty, support,
+indemnity or liability terms You offer. You may include additional
+disclaimers of warranty and limitations of liability specific to any
+jurisdiction.
+
+4. Inability to Comply Due to Statute or Regulation
+---------------------------------------------------
+
+If it is impossible for You to comply with any of the terms of this
+License with respect to some or all of the Covered Software due to
+statute, judicial order, or regulation then You must: (a) comply with
+the terms of this License to the maximum extent possible; and (b)
+describe the limitations and the code they affect. Such description must
+be placed in a text file included with all distributions of the Covered
+Software under this License. Except to the extent prohibited by statute
+or regulation, such description must be sufficiently detailed for a
+recipient of ordinary skill to be able to understand it.
+
+5. Termination
+--------------
+
+5.1. The rights granted under this License will terminate automatically
+if You fail to comply with any of its terms. However, if You become
+compliant, then the rights granted under this License from a particular
+Contributor are reinstated (a) provisionally, unless and until such
+Contributor explicitly and finally terminates Your grants, and (b) on an
+ongoing basis, if such Contributor fails to notify You of the
+non-compliance by some reasonable means prior to 60 days after You have
+come back into compliance. Moreover, Your grants from a particular
+Contributor are reinstated on an ongoing basis if such Contributor
+notifies You of the non-compliance by some reasonable means, this is the
+first time You have received notice of non-compliance with this License
+from such Contributor, and You become compliant prior to 30 days after
+Your receipt of the notice.
+
+5.2. If You initiate litigation against any entity by asserting a patent
+infringement claim (excluding declaratory judgment actions,
+counter-claims, and cross-claims) alleging that a Contributor Version
+directly or indirectly infringes any patent, then the rights granted to
+You by any and all Contributors for the Covered Software under Section
+2.1 of this License shall terminate.
+
+5.3. In the event of termination under Sections 5.1 or 5.2 above, all
+end user license agreements (excluding distributors and resellers) which
+have been validly granted by You or Your distributors under this License
+prior to termination shall survive termination.
+
+************************************************************************
+*                                                                      *
+*  6. Disclaimer of Warranty                                           *
+*  -------------------------                                           *
+*                                                                      *
+*  Covered Software is provided under this License on an "as is"       *
+*  basis, without warranty of any kind, either expressed, implied, or  *
+*  statutory, including, without limitation, warranties that the       *
+*  Covered Software is free of defects, merchantable, fit for a        *
+*  particular purpose or non-infringing. The entire risk as to the     *
+*  quality and performance of the Covered Software is with You.        *
+*  Should any Covered Software prove defective in any respect, You     *
+*  (not any Contributor) assume the cost of any necessary servicing,   *
+*  repair, or correction. This disclaimer of warranty constitutes an   *
+*  essential part of this License. No use of any Covered Software is   *
+*  authorized under this License except under this disclaimer.         *
+*                                                                      *
+************************************************************************
+
+************************************************************************
+*                                                                      *
+*  7. Limitation of Liability                                          *
+*  --------------------------                                          *
+*                                                                      *
+*  Under no circumstances and under no legal theory, whether tort      *
+*  (including negligence), contract, or otherwise, shall any           *
+*  Contributor, or anyone who distributes Covered Software as          *
+*  permitted above, be liable to You for any direct, indirect,         *
+*  special, incidental, or consequential damages of any character      *
+*  including, without limitation, damages for lost profits, loss of    *
+*  goodwill, work stoppage, computer failure or malfunction, or any    *
+*  and all other commercial damages or losses, even if such party      *
+*  shall have been informed of the possibility of such damages. This   *
+*  limitation of liability shall not apply to liability for death or   *
+*  personal injury resulting from such party's negligence to the       *
+*  extent applicable law prohibits such limitation. Some               *
+*  jurisdictions do not allow the exclusion or limitation of           *
+*  incidental or consequential damages, so this exclusion and          *
+*  limitation may not apply to You.                                    *
+*                                                                      *
+************************************************************************
+
+8. Litigation
+-------------
+
+Any litigation relating to this License may be brought only in the
+courts of a jurisdiction where the defendant maintains its principal
+place of business and such litigation shall be governed by laws of that
+jurisdiction, without reference to its conflict-of-law provisions.
+Nothing in this Section shall prevent a party's ability to bring
+cross-claims or counter-claims.
+
+9. Miscellaneous
+----------------
+
+This License represents the complete agreement concerning the subject
+matter hereof. If any provision of this License is held to be
+unenforceable, such provision shall be reformed only to the extent
+necessary to make it enforceable. Any law or regulation which provides
+that the language of a contract shall be construed against the drafter
+shall not be used to construe this License against a Contributor.
+
+10. Versions of the License
+---------------------------
+
+10.1. New Versions
+
+Mozilla Foundation is the license steward. Except as provided in Section
+10.3, no one other than the license steward has the right to modify or
+publish new versions of this License. Each version will be given a
+distinguishing version number.
+
+10.2. Effect of New Versions
+
+You may distribute the Covered Software under the terms of the version
+of the License under which You originally received the Covered Software,
+or under the terms of any subsequent version published by the license
+steward.
+
+10.3. Modified Versions
+
+If you create software not governed by this License, and you want to
+create a new license for such software, you may create and use a
+modified version of this License if you rename the license and remove
+any references to the name of the license steward (except to note that
+such modified license differs from this License).
+
+10.4. Distributing Source Code Form that is Incompatible With Secondary
+Licenses
+
+If You choose to distribute Source Code Form that is Incompatible With
+Secondary Licenses under the terms of this version of the License, the
+notice described in Exhibit B of this License must be attached.
+
+Exhibit A - Source Code Form License Notice
+-------------------------------------------
+
+  This Source Code Form is subject to the terms of the Mozilla Public
+  License, v. 2.0. If a copy of the MPL was not distributed with this
+  file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+If it is not possible or desirable to put the notice in a particular
+file, then You may include the notice in a location (such as a LICENSE
+file in a relevant directory) where a recipient would be likely to look
+for such a notice.
+
+You may add additional accurate notices of copyright ownership.
+
+Exhibit B - "Incompatible With Secondary Licenses" Notice
+---------------------------------------------------------
+
+  This Source Code Form is "Incompatible With Secondary Licenses", as
+  defined by the Mozilla Public License, v. 2.0.
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..328ae32
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,205 @@
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+NAME = grafana
+
+GO_PREBUILT_VERSION = 1.11.1
+NODE_PREBUILT_VERSION = v6.15.1
+ifeq ($(shell uname -s),SunOS)
+    # We use a 64-bit node because grafana will not build with 32-bit node 6
+    NODE_PREBUILT_TAG=zone64
+    # Allow building on other than triton-origin-multiarch-18.1.0
+    NODE_PREBUILT_IMAGE=1ad363ec-3b83-11e8-8521-2f68a4a34d5d
+endif
+
+ENGBLD_USE_BUILDIMAGE = true
+ENGBLD_REQUIRE := $(shell git submodule update --init deps/eng)
+include ./deps/eng/tools/mk/Makefile.defs
+TOP ?= $(error Unable to access eng.git submodule Makefiles.)
+
+include ./deps/eng/tools/mk/Makefile.smf.defs
+# this is NOT A TYPO - the nginx makefiles are local, for now.
+include ./tools/mk/Makefile.nginx.defs
+ifeq ($(shell uname -s),SunOS)
+    include ./deps/eng/tools/mk/Makefile.go_prebuilt.defs
+    include ./deps/eng/tools/mk/Makefile.node_prebuilt.defs
+    include ./deps/eng/tools/mk/Makefile.agent_prebuilt.defs
+endif
+
+# triton-origin-multiarch-18.1.0
+BASE_IMAGE_UUID = b6ea7cb4-6b90-48c0-99e7-1d34c2895248
+BUILDIMAGE_NAME = $(NAME)
+BUILDIMAGE_PKGSRC = pcre-8.42 bind-9.10.7
+BUILDIMAGE_DESC = SDC Grafana
+AGENTS = amon config registrar
+
+RELEASE_TARBALL := $(NAME)-pkg-$(STAMP).tar.gz
+RELSTAGEDIR := /tmp/$(NAME)-$(STAMP)
+
+SMF_MANIFESTS = $(wildcard smf/manifests/*.xml)
+
+JS_FILES := $(wildcard lib/*.js) $(wildcard test/*.js)
+ESLINT_FILES := $(JS_FILES)
+BASH_FILES := $(wildcard boot/*.sh) $(wildcard bin/*.sh) $(TOP)/test/runtests
+
+STAMP_PROXY := $(MAKE_STAMPS_DIR)/graf-proxy
+STAMP_YARN := $(MAKE_STAMPS_DIR)/yarn
+
+GRAFANA_IMPORT = github.com/grafana/grafana
+GRAFANA_GO_DIR = $(GO_GOPATH)/src/$(GRAFANA_IMPORT)
+GRAFANA_EXEC = $(GO_GOPATH)/bin/grafana-server
+
+YARN = PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) $(NODE) \
+    $(TOP)/$(CACHE_DIR)/yarn/node_modules/.bin/yarn
+
+NGINX_CONFIG_FLAGS += \
+	--with-http_auth_request_module \
+	--with-http_ssl_module
+
+#
+# Repo-specific targets
+#
+.PHONY: all
+all: $(GRAFANA_EXEC) $(NGINX_EXEC) $(STAMP_PROXY) sdc-scripts
+
+$(STAMP_YARN): | $(NODE_EXEC) $(NPM_EXEC)
+	$(MAKE_STAMP_REMOVE)
+	rm -rf $(CACHE_DIR)/yarn
+	mkdir -p $(CACHE_DIR)/yarn/node_modules
+	cd $(CACHE_DIR)/yarn && $(NPM) install --global-style yarn
+	$(MAKE_STAMP_CREATE)
+
+#
+# Link the "grafana" submodule into the correct place within our
+# project-local GOPATH, then build the binary.
+#
+$(GRAFANA_EXEC): deps/grafana/.git $(STAMP_GO_TOOLCHAIN) $(STAMP_YARN)
+	$(GO) version
+	mkdir -p $(dir $(GRAFANA_GO_DIR))
+	mkdir -p $(CACHE_DIR)/yarn
+	rm -f $(GRAFANA_GO_DIR)
+	cp -r $(TOP)/deps/grafana $(GRAFANA_GO_DIR)
+	(cd $(GRAFANA_GO_DIR) && \
+	    env -i $(GO_ENV) $(GO) run build.go setup && \
+	    env -i $(GO_ENV) $(GO) run build.go build && \
+	    $(YARN) install --pure-lockfile && \
+	    $(YARN) dev)
+
+$(STAMP_PROXY): | $(NODE_EXEC) $(NPM_EXEC)
+	$(MAKE_STAMP_REMOVE)
+	rm -rf $(TOP)/node_modules && cd $(TOP) && $(NPM) install --production
+	$(MAKE_STAMP_CREATE)
+
+sdc-scripts: deps/sdc-scripts/.git
+
+#
+# Note that the current test suite is designed to run on an installed
+# triton-grafana image, which will not contain this Makefile. Thus, unless this
+# Makefile and its associated dependencies under "tools/mk" are manually copied
+# to an installed image, `make test` will never do anything useful in any place
+# where this Makefile exists. This could change in the future.
+#
+# Instead, it is sufficient to directly run `/opt/triton/grafana/test/runtests`
+# in the installed image.
+#
+.PHONY: test
+test:
+	@#
+	@# We check for the existence of the graf-proxy directory as a way of
+	@# ascertaining whether we are in a dev or installation environment.
+	@#
+	@if [[ -f "$(TOP)/proxy" ]]; then \
+		./test/runtests; \
+	else \
+		echo "Skipping tests: this is not an installation environment."; \
+	fi
+
+#
+# The eng.git makefiles define the clean target using a :: rule. This
+# means that we're allowed to have multiple bodies that define the rule
+# and they should all take effect. We ignore the return value from the
+# recursive make clean because there is no guarantee that there's a
+# generated Makefile or that the nginx submodule has been initialized
+# and checked out.
+#
+clean::
+	@#
+	@# Note: Grafana backend is cleaned when gopath is removed as part of
+	@# general clean target.
+	@# Note: nginx is cleaned as part of the `distclean` target in
+	@# Makefile.nginx.targ
+	@#
+	# Clean Grafana frontend
+	rm -rf $(TOP)/deps/grafana/node_modules
+	rm -rf $(TOP)/deps/grafana/public/build
+	# Clean graf-proxy
+	rm -rf $(TOP)/node_modules
+
+.PHONY: release
+release: all deps docs $(SMF_MANIFESTS)
+	@echo "Building $(RELEASE_TARBALL)"
+	@mkdir -p $(RELSTAGEDIR)/root/opt/triton/$(NAME)
+	cp -r \
+		$(TOP)/bin \
+		$(TOP)/etc \
+		$(TOP)/dashboards \
+		$(TOP)/package.json \
+		$(TOP)/node_modules \
+		$(TOP)/smf \
+		$(TOP)/sapi_manifests \
+		$(TOP)/test \
+		$(RELSTAGEDIR)/root/opt/triton/$(NAME)/
+	# our grafana build
+	@mkdir -p $(RELSTAGEDIR)/root/opt/triton/$(NAME)/grafana
+	cp -r \
+		$(GRAFANA_GO_DIR)/bin \
+		$(GRAFANA_GO_DIR)/conf \
+		$(GRAFANA_GO_DIR)/public \
+		$(GRAFANA_GO_DIR)/scripts \
+		$(RELSTAGEDIR)/root/opt/triton/$(NAME)/grafana/
+	# grafana auth proxy
+	@mkdir -p $(RELSTAGEDIR)/root/opt/triton/$(NAME)/proxy
+	cp -r \
+		$(TOP)/lib \
+		$(RELSTAGEDIR)/root/opt/triton/$(NAME)/proxy
+	# nginx
+	cp -r \
+		$(TOP)/build/nginx \
+		$(RELSTAGEDIR)/root/opt/triton/$(NAME)/
+	# our node version
+	@mkdir -p $(RELSTAGEDIR)/root/opt/triton/$(NAME)/build
+	cp -r \
+		$(TOP)/build/node \
+		$(RELSTAGEDIR)/root/opt/triton/$(NAME)/build/
+	# zone boot
+	mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/boot
+	cp -r $(TOP)/deps/sdc-scripts/{etc,lib,sbin,smf} \
+		$(RELSTAGEDIR)/root/opt/smartdc/boot/
+	cp -r $(TOP)/boot/* \
+		$(RELSTAGEDIR)/root/opt/smartdc/boot/
+	# tar it up
+	(cd $(RELSTAGEDIR) && $(TAR) -I pigz -cf $(TOP)/$(RELEASE_TARBALL) root)
+	@rm -rf $(RELSTAGEDIR)
+
+.PHONY: publish
+publish: release
+	mkdir -p $(ENGBLD_BITS_DIR)/$(NAME)
+	cp $(TOP)/$(RELEASE_TARBALL) $(ENGBLD_BITS_DIR)/$(NAME)/$(RELEASE_TARBALL)
+
+include ./deps/eng/tools/mk/Makefile.deps
+ifeq ($(shell uname -s),SunOS)
+    include ./deps/eng/tools/mk/Makefile.go_prebuilt.targ
+    include ./deps/eng/tools/mk/Makefile.node_prebuilt.targ
+    include ./deps/eng/tools/mk/Makefile.agent_prebuilt.targ
+endif
+include ./deps/eng/tools/mk/Makefile.smf.targ
+# this is NOT A TYPO - the nginx makefiles are local, for now.
+include ./tools/mk/Makefile.nginx.targ
+include ./deps/eng/tools/mk/Makefile.targ
diff --git a/README.md b/README.md
index 8dcb1c2..6b2f00c 100644
--- a/README.md
+++ b/README.md
@@ -1,19 +1,176 @@
-# Triton Metrics Dashboards
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
 
-A repo holding JSON dumps of common Grafana dashboards for monitoring Triton
-Data Center (a.k.a Triton) itself with a prometheus/grafana setup.
+<!--
+    Copyright 2019 Joyent, Inc.
+-->
 
-The current goal is to have a shared place for possibly useful dashboards
-so we can build tooling around preloading a Grafana sourcing from a Prometheus
-setup to gather Triton core metrics from CMON.
+# triton-grafana
 
-## Current Status
+The Triton core grafana service. Triton uses
+[Prometheus](https://github.com/joyent/triton-prometheus) and
+Grafana to track its own metrics and monitor itself, as well as Manta. All
+metrics are gathered via [CMON](https://github.com/joyent/triton-cmon).
 
-This is still a greenfield, i.e. no nitpicking on updates here for now.
+Note: This repository is part of the Joyent Triton project. See the [contribution
+guidelines](https://github.com/joyent/triton/blob/master/CONTRIBUTING.md) --
+*Triton does not use GitHub PRs* -- and general documentation at the main
+[Triton project](https://github.com/joyent/triton) page.
 
-## Links
+## Status
 
-- Triton service-specific metrics typically use
-  [node-triton-metrics](https://github.com/joyent/node-triton-metrics), so look
-  for some commonality there.
+Joyent is actively developing Prometheus and Grafana services for use in Triton
+and Manta. [RFD 150](https://github.com/joyent/rfd/tree/master/rfd/0150)
+describes the current plan and status.
 
+## Setup
+
+Grafana requires either a Triton or Manta Prometheus instance to exist, and will
+also function with both simultaneously. Ensure that
+[Prometheus](https://github.com/joyent/triton-prometheus) is set up in your
+Triton and/or Manta deployment -- see the triton-prometheus README for
+Prometheus deployment instructions.
+
+Then, run the following from your Triton headnode's global zone:
+
+    sdcadm post-setup grafana [OPTIONS]
+
+This command will automatically detect whether Manta is deployed and give
+the Grafana zone the necessary "manta" nic if so. If Manta is deployed after a
+Grafana zone already exists, re-running the above `sdcadm` command will give
+the Grafana zone the "manta" nic in an idempotent fashion.
+
+## Architecture
+
+This image runs four services of note:
+- An Nginx server performs TLS termination. It runs as the "nginx" SMF service.
+
+- A Node.js proxy server sits between Nginx and Grafana and authenticates users
+against the datacenter's UFDS instance. This proxy runs as the "graf-proxy"
+SMF service.
+
+- A Grafana instance runs the "grafana" SMF service.
+
+- A BIND server runs on localhost and forwards DNS lookups to the Triton and
+Manta [binder](https://github.com/joyent/binder) resolvers.
+
+### Nginx
+
+The Nginx instance is compiled to provide support for the
+`ngx_http_auth_request` module, which is necessary to support authentication
+subrequests. Nginx issues authentication subrequests using HTTP basic auth to
+graf-proxy.
+
+The Nginx instance uses a self-signed certificate by default. The certificate
+and key are stored under `/data/grafana/tls`. Operators can manually replace
+the certificate with a properly signed certificate -- the certificate lives
+on a delegated dataset to persist across reprovisions.
+
+The Nginx config file is generate from a template that lives in the `etc`
+directory.
+
+### graf-proxy
+
+The graf-proxy performs authentication against the Triton deployment's
+[UFDS](https://github.com/joyent/sdc-ufds) instance. Upon successful
+authentication via HTTP basic auth, graf-proxy sets triton-grafana-specific HTTP
+headers in its response to Nginx. Nginx then forwards authenticated requests to
+the Grafana instance.
+
+The graf-proxy config file is generated from a SAPI template, because it depends
+on UFDS-related SAPI values.
+
+#### Security
+
+The graf-proxy restricts access to UFDS operators only. It respects UFDS
+lockouts, with the caveat that client-side caching in the `node-ufds` library
+may delay the presentation of lockout status to the user, though the UFDS
+server is returning a lockout response.
+
+### Grafana
+
+The grafana instance is configured to accept proxy authentication via the HTTP
+headers set by graf-proxy -- see the documentation
+[here](http://docs.grafana.org/auth/auth-proxy/). In this way, users are able to
+authenticate to Grafana using their UFDS credentials.
+
+If a user's Grafana account does not yet exist upon receipt of an authenticated
+login request, Grafana will automatically create it. The created Grafana user
+will have full admin privileges by default. If a UFDS account is disabled, the
+associated Grafana account will remain, but the affected user will not be able
+to log in because authentication is always performed against UFDS before
+forwarding requests to Grafana.
+
+Grafana's persistent data is stored on a delegated dataset, to ensure that it
+persists across reprovisions of the zone.
+
+This image comes pre-configured with a set of standard Triton dashboards. These
+dashboards can be edited on the fly, but edits cannot be saved. Users are free
+to create their own dashboards, which are fully editable and will persist
+across reprovisions.
+
+The grafana config files, with the exception of `triton-datasources.yaml`, are
+generated from templates that live in the `etc` directory.
+`triton-datasources.yaml` is generated from a SAPI template, because it depends
+on values from SAPI.
+
+### BIND
+
+Grafana is currently the only Triton service that must perform resolution of
+Manta DNS names -- specifically, the DNS names of the Manta Prometheus
+instances. Thus, Grafana must know the IP addresses of the Manta
+[binder](https://github.com/joyent/binder) resolvers. It is not sufficient to
+place these resolvers in `/etc/resolv.conf`, because there could be an
+arbitrary number of binder instances across Triton and Manta.
+
+Thus, the Grafana zone runs a BIND server that forwards DNS requests to the
+Triton and Manta binder resolvers as appropriate. The BIND server runs on
+localhost, and localhost is the only entry in `/etc/resolv.conf`.
+
+Any changes in the set of Manta resolvers cannot be detected by
+[config-agent](https://github.com/joyent/sdc-config-agent), because Grafana
+is not deployed under the "manta"
+[SAPI](https://github.com/joyent/sdc-sapi) application. However, Grafana can
+still query SAPI for the set of Manta resolvers.
+
+This image thus runs a cron job, `bin/update-named.sh`, that checks for changes
+in the set of Triton and Manta resolvers and updates the BIND configuration if
+changes are found. To avoid the expense of querying SAPI unnecessarily, if the
+zone already knows about at least one Manta resolver, it will query the resolver
+itself for the new set of resolvers before falling back to querying SAPI.
+
+## Troubleshooting
+
+### Grafana doesn't display Prometheus data
+
+- Is Prometheus reachable? Go to https://\<grafana url\>/datasources, select the
+  relevant datasource, and click "Save & Test" at the bottom of the page
+
+- Is BIND running? `svcs bind`
+
+- Are the Prometheus instances healthy and scraping data properly?
+
+- Is `/etc/resolv.conf` correct? It should have `127.0.0.1` as its only
+  nameserver entry.
+
+- Are there visible warnings or errors on the grafana webpage?
+
+- Does the Grafana log show errors? `tail $(svcs -L grafana)`
+
+### Grafana is unreachable
+
+- Is Grafana running? `svcs grafana`
+
+- Is `graf-proxy` running? `svcs graf-proxy`
+
+- Is Nginx running? `svcs nginx`
+
+## Testing
+
+There exists a small system test suite for `graf-proxy`. It is driven by the
+`test/runtests` script. These tests are designed for a fully deployed Grafana
+instance. They are non-destructive, but they create temporary users in UFDS and
+thus should not be run in production.
diff --git a/bin/update-named.sh b/bin/update-named.sh
new file mode 100755
index 0000000..b100d89
--- /dev/null
+++ b/bin/update-named.sh
@@ -0,0 +1,311 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# This script is designed to run from a cron job. It checks for changes in the
+# set of triton and manta DNS resolvers, and updates the grafana zone's BIND
+# server configuration appropriately.
+#
+# Why can't we let SAPI/config-agent handle this? Because grafana is the rare
+# Triton service that depends on the _manta_ application SAPI data. Because
+# grafana isn't a manta service, config-agent won't pick up changes in this
+# data, so we have to do it ourselves.
+#
+
+set -o errexit
+set -o pipefail
+set -o xtrace
+
+function fatal() {
+    printf '%s: ERROR: %s\n' "$(basename $0)" "$*" >&2
+    exit 1
+}
+
+ROOT_DIR=/opt/triton/grafana
+CONF_DIR=${ROOT_DIR}/etc
+CONFIG_JSON=${CONF_DIR}/update-named-config.json
+MANTA_RESOLVERS_MDATA='manta-resolvers'
+
+SAPI_URL=$(mdata-get sapi-url)
+DATACENTER_NAME=$(mdata-get sdc:datacenter_name)
+DNS_DOMAIN=$(mdata-get sdc:dns_domain)
+REGION_NAME=$(json -f "${CONFIG_JSON}" region_name)
+
+UPDATE_MADE=false
+
+#
+# named-related paths. Keep in sync with "boot/setup.sh".
+#
+NAMED_CONF=/opt/local/etc/named.conf
+NAMED_DIR=${ROOT_DIR}/named
+NAMED_LOG_DIR=/var/log/named
+
+[[ -n "${SAPI_URL}" ]] || fatal 'SAPI url not found'
+
+#
+# We use the presence of a manta nic on this zone as a proxy for whether or not
+# manta is deployed.
+#
+function is_manta_deployed() {
+    #
+    # Even with the introduction of RAN, we know that the manta nic tag will
+    # have 'manta' in its name.
+    #
+    if $(mdata-get sdc:nics | json -a nic_tag | grep -q manta); then
+        return 0
+    else
+        return 1
+    fi
+}
+
+# Get the set of manta resolvers from the 'manta' SAPI application.
+function get_manta_resolvers_from_sapi() {
+    local manta_json_array
+    local manta_app
+    local resolvers
+
+    manta_json_array=$(curl -sS "${SAPI_URL}/applications?name=manta")
+    manta_app=$(echo "${manta_json_array}" | json 0)
+    [[ -n "${manta_app}" ]] || fatal 'manta application not found'
+    [[ -z "$(echo "${manta_json_array}" | json 1)" ]] || \
+        fatal 'more than one SAPI application found with name "manta"'
+
+    resolvers=$(echo "${manta_app}" | json metadata.ZK_SERVERS | json -a host)
+    [[ -n "${resolvers}" ]] || fatal 'no manta nameservce IPs found'
+    echo "${resolvers}"
+}
+
+#
+# Get the triton binder IPs from the built-in sdc metadata, filtering for
+# public internet resolvers.
+#
+function get_triton_resolvers() {
+    local resolvers
+
+    resolvers=$(mdata-get sdc:resolvers | json -a | grep -Ev '8.8.8.8|8.8.4.4')
+    [[ -n "${resolvers}" ]] || fatal 'no triton binder IPs found'
+    echo "${resolvers}"
+}
+
+#
+# We have to look up the manta resolvers ourselves. Once we find them, we store
+# them in a $MANTA_RESOLVERS_MDATA mdata variable.
+#
+# If the variable exists, we can query any known resolver for an updated list
+# of all the resolvers.
+#
+# If the variable doesn't exist or none of the resolvers are responsive, we have
+# to reach out to SAPI. This is more expensive, so we try to avoid it.
+#
+function get_manta_resolvers() {
+    local existing_resolvers
+    local updated_resolvers
+
+    existing_resolvers=$(mdata-get "${MANTA_RESOLVERS_MDATA}")
+
+    #
+    # Query the known resolvers for the updated list
+    #
+    for resolver in ${existing_resolvers}; do
+        updated_resolvers=$(dig +short "@${resolver}" \
+            "nameservice.${REGION_NAME}.${DNS_DOMAIN}")
+        if [[ -n "${updated_resolvers}" ]]; then
+            break
+        fi
+    done
+
+    #
+    # If we didn't get the updated list of resolvers, fall back to getting the
+    # resolvers from SAPI. This case will also occur the first time this script
+    # is run.
+    #
+    if [[ -z "${updated_resolvers}" ]]; then
+        updated_resolvers=$(get_manta_resolvers_from_sapi)
+    fi
+
+    [[ -n "${updated_resolvers}" ]] || fatal 'no manta resolvers found'
+
+    if [[ "${existing_resolvers}" != "${updated_resolvers}" ]]; then
+        mdata-put "${MANTA_RESOLVERS_MDATA}" "${updated_resolvers}"
+    fi
+    echo "${updated_resolvers}"
+}
+
+#
+# Break the list of IPs into lines with a semicolon at the end of each line.
+#
+# e.g. (odd whitespace very intentional):
+#
+#       1.1.1.1  2.2.2.2
+#    3.3.3.3
+#     4.4.4.4
+#
+# becomes:
+#
+# 1.1.1.1;
+# 2.2.2.2;
+# 3.3.3.3;
+# 4.4.4.4;
+#
+function format_mdata() {
+    #
+    # We're very careful with whitespace -- `tr` replaces each region of
+    # whitespace (including newlines) with a single space, the first invocation
+    # of sed removes leading whitespace from the resulting string, and the
+    # second invocation of sed breaks the string into IP addresses separated by
+    # semicolon-newline pairs.
+    #
+    echo "$*" | tr -s '[:space:]' ' ' | sed -e 's/^[[:space:]]\+//g' | \
+        sed -e 's/[[:space:]]\+/;\n/g'
+}
+
+function named_refresh() {
+    local svc="bind"
+    local currState
+
+    # Wait for service to come out of transition, if necessary
+    local try=0
+    local tries=6
+    currState=$(svcs -Ho state "${svc}")
+    while [[ "${currState: -1}" == '*' || \
+        "${currState}" == 'uninitialized' ]]; do
+        ((try++)) || true
+        if [[ "${try}" -eq "${tries}" ]]; then
+            fatal "timeout: ${svc} service in transition state"
+        fi
+        sleep 5
+        currState=$(svcs -Ho state "${svc}")
+    done
+
+    if [[ "${currState}" == 'disabled' ]]; then
+        #
+        # Zone setup starts with every service in the disabled state. We enable
+        # the service after the config is generated for the first time.
+        #
+        echo "Enabling ${svc} SMF service"
+        svcadm enable "${svc}"
+    elif [[ "${currState}" == 'maintenance' ]]; then
+        echo "Clearing ${svc} SMF service"
+        svcadm clear "${svc}"
+    elif [[ "${currState}" == 'online' ]]; then
+        echo "Refreshing ${svc} SMF service"
+        svcadm refresh "${svc}"
+    elif [[ "${currState}" != 'offline' ]]; then
+        #
+        # If the service is offline, we can safely do nothing -- it will start
+        # once its dependencies are satisfied. Otherwise, we exit loudly.
+        #
+        fatal "unexpected ${svc} service state: '${currState}'"
+    fi
+}
+
+# ---- mainline
+
+triton_resolvers=$(get_triton_resolvers)
+
+read -rd '' named_conf_contents <<NAMED_CONF_CONTENTS || true
+options {
+    directory "${NAMED_DIR}";
+
+    dnssec-enable yes;
+    dnssec-validation yes;
+
+    auth-nxdomain no;
+
+    allow-transfer {
+            127.0.0.1;
+    };
+
+    listen-on { 127.0.0.1; };
+
+    check-integrity yes;
+
+    recursion yes;
+};
+
+logging {
+    channel default_log {
+        file "${NAMED_LOG_DIR}/bind.log" versions 3 size 5m;
+        severity info;
+        print-time yes;
+        print-severity yes;
+        print-category yes;
+    };
+    category default {
+        default_log;
+    };
+};
+
+zone "." IN {
+    type forward;
+    forward only;
+    forwarders {
+        8.8.8.8;
+        8.8.4.4;
+    };
+};
+
+zone "${DATACENTER_NAME}.${DNS_DOMAIN}" IN {
+    type forward;
+    forward only;
+    forwarders {
+        $(format_mdata "${triton_resolvers}")
+    };
+};
+
+zone "localhost" IN {
+    type master;
+    file "master/localhost";
+};
+
+zone "127.in-addr.arpa" IN {
+    type master;
+    file "master/127.in-addr.arpa";
+};
+
+NAMED_CONF_CONTENTS
+
+named_conf_manta=''
+if $(is_manta_deployed); then
+    manta_resolvers=$(get_manta_resolvers)
+    read -rd '' named_conf_manta <<NAMED_CONF_MANTA || true
+zone "${REGION_NAME}.${DNS_DOMAIN}" IN {
+    type forward;
+    forward only;
+    forwarders {
+        $(format_mdata "${manta_resolvers}")
+    };
+};
+NAMED_CONF_MANTA
+else
+    echo 'Manta is not deployed; skipping adding Manta resolvers to config'
+fi
+
+echo -e "${named_conf_contents}" > "${NAMED_CONF}.new"
+echo -e "${named_conf_manta}" >> "${NAMED_CONF}.new"
+
+# Update the config, if changed.
+if [[ ! -f "${NAMED_CONF}" ]]; then
+    # First time config.
+    echo "Writing first time grafana config (${NAMED_CONF})"
+    mv "${NAMED_CONF}.new" "${NAMED_CONF}"
+    named_refresh
+elif ! diff "${NAMED_CONF}" "${NAMED_CONF}.new" > /dev/null; then
+    # The config differs.
+    echo "Updating grafana config (${NAMED_CONF})"
+    cp "${NAMED_CONF}" "${NAMED_CONF}.bak"
+    mv "${NAMED_CONF}.new" "${NAMED_CONF}"
+    named_refresh
+else
+    # The config does not differ
+    rm "${NAMED_CONF}.new"
+fi
+
+
+exit 0
diff --git a/boot/configure.sh b/boot/configure.sh
new file mode 100755
index 0000000..bb1f385
--- /dev/null
+++ b/boot/configure.sh
@@ -0,0 +1,36 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ' \
+'${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+
+set -o errexit
+set -o pipefail
+set -o xtrace
+
+#
+# /etc/resolv.conf will get overwritten with the zone's "resolvers" vm data on
+# each boot. Thus, we must overwrite /etc/resolv.conf with localhost anew on
+# each boot.
+#
+
+DNS_DOMAIN=$(mdata-get sdc:dns_domain)
+
+echo "search ${DNS_DOMAIN}" > /etc/resolv.conf.new
+echo 'nameserver 127.0.0.1' >> /etc/resolv.conf.new
+
+if ! diff /etc/resolv.conf /etc/resolv.conf.new > /dev/null; then
+    echo 'Updating /etc/resolv.conf'
+    cp /etc/resolv.conf /etc/resolv.conf.bak
+    mv /etc/resolv.conf.new /etc/resolv.conf
+else
+    rm /etc/resolv.conf.new
+fi
+
+exit 0
diff --git a/boot/setup.sh b/boot/setup.sh
new file mode 100755
index 0000000..df848f9
--- /dev/null
+++ b/boot/setup.sh
@@ -0,0 +1,461 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# One-time setup of a Triton grafana core zone.
+#
+# It is expected that this is run via the standard Triton user-script,
+# i.e. as part of the "mdata:execute" SMF service. That user-script ensures
+# this setup.sh is run once for each (re)provision of the image. However, the
+# script should also attempt to be idempotent.
+#
+
+export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ' \
+'${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+set -o errexit
+set -o pipefail
+set -o xtrace
+
+PATH=/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin
+
+ARG0=$(basename "${0}")
+
+DATACENTER_NAME=
+DNS_DOMAIN=
+
+# ---- Stateless paths
+
+ROOT_DIR=/opt/triton/grafana
+BIN_DIR=${ROOT_DIR}/bin
+CONF_DIR=${ROOT_DIR}/etc
+# The static set of dashboards bundled with the zone image
+DASHBOARDS_DIR=${ROOT_DIR}/dashboards
+MANIFESTS_DIR=${ROOT_DIR}/smf/manifests
+NGINX_DIR=${ROOT_DIR}/nginx
+NGINX_CONF=${NGINX_DIR}/conf/nginx.conf
+TEST_DIR=${ROOT_DIR}/test
+
+#
+# named-related paths. Keep in sync with bin/update-named.sh.
+#
+NAMED_DIR=${ROOT_DIR}/named
+NAMED_LOG_DIR=/var/log/named
+
+#
+# Templates:
+#
+# Config files for grafana are written at zone setup time based on
+# templates included in $TEMPLATES_DIR. If a config file is named "foo", its
+# template must be named "foo.in". Template variables are specified by
+# including the delimiter "%%" on either side, and are replaced with the value
+# of the bash variable with the corresponding name. For example, if the bash
+# variable $FOO has the value "bar", all occurrences of "%%FOO%%" in a template
+# file will be replaced with "bar".
+#
+# This functionality is implemented in the grafana_write_config function in
+# this file.
+#
+TEMPLATES_DIR=${ROOT_DIR}/etc
+# This script creates these files from templates
+GRAFANA_CONF=${CONF_DIR}/grafana.ini
+DASHBOARDS_CONF=${CONF_DIR}/provisioning/dashboards/triton-dashboards.yaml
+
+# ---- Persistent paths
+
+#
+# Grafana data is stored on its delegated dataset:
+#   /data/grafana/
+#       data/*                          # grafana database (users, dashboards,
+#                                       # etc.)
+#       tls/*                           # TLS certs for nginx.
+#
+PERSIST_DIR=/data/grafana
+DATA_DIR=${PERSIST_DIR}/data
+#
+# The TLS cert and key are stored on the delegated dataset so, if an operator
+# replaces the default self-signed cert with a properly signed cert, it will
+# persist across reprovisions.
+#
+TLS_DIR=${PERSIST_DIR}/tls
+CERT_FILE=${TLS_DIR}/cert.pem
+KEY_FILE=${TLS_DIR}/key.pem
+
+# ---- Internal routines
+
+function fatal() {
+    printf '%s: ERROR: %s\n' "$(basename $0)" "$*" >&2
+    exit 1
+}
+
+# Add user and corresponding group, if the user/group do not exist
+function grafana_add_user() {
+    local username="${1}"
+    if [[ ! $(getent group "${username}") ]]; then
+        groupadd "${username}"
+    fi
+    if [[ ! $(getent passwd "${username}") ]]; then
+        useradd -g "${username}" "${username}"
+        passwd -N "${username}"
+    fi
+}
+
+# Mount our delegated dataset at /data.
+function grafana_setup_delegated_dataset() {
+    local dataset
+    local mountpoint
+
+    dataset=zones/$(zonename)/data
+    mountpoint=$(zfs get -Ho value mountpoint "${dataset}")
+    if [[ "${mountpoint}" != '/data' ]]; then
+        zfs set mountpoint=/data "${dataset}"
+    fi
+}
+
+function grafana_setup_env() {
+    if [[ ! $(grep grafana /root/.profile) ]]; then
+        echo '' >> /root/.profile
+        echo "export PATH=${ROOT_DIR}/bin:${ROOT_DIR}/grafana:\$PATH" >> \
+            /root/.profile
+    fi
+}
+
+#
+# Write config file based on template.
+# Arguments:
+#     $1: Desired fully qualified path of final config file
+#     $2, $3, ..., $N: string names of template parameters to replace. These
+#         will be replaced with the contents of identically-named bash
+#         variables.
+#
+# Example usage:
+# `grafana_write_config $GRAFANA_CONF CONF_DIR DATA_DIR`
+#
+# This example invocation will look for the template corresponding to
+# $GRAFANA_CONF in $TEMPLATES_DIR, search for instances of CONF_DIR and
+# DATA_DIR in this template file (surrounded by the delimiter "%%"), replace
+# these with the contents of the bash variables $CONF_DIR and $DATA_DIR,
+# respectively, and write this file to $GRAFANA_CONF.
+#
+# If the config file already exists and differs from the new config file, this
+# function will save a backup.
+#
+function grafana_write_config() {
+    local config_file="${1}"
+    local basename
+    local contents
+    local template_file
+    local delim='%%'
+    # semicolon-separated list of sed commands to run
+    local commands=''
+
+    basename=$(basename "${config_file}")
+    local template_file=${TEMPLATES_DIR}/${basename}.in
+    shift
+
+    for var in ${@}; do
+        #
+        # Verify that template parameter exists in template file before adding
+        # to command list
+        #
+        grep "${delim}${var}${delim}" "${template_file}" || \
+            fatal "template parameter ${var} not found in ${template_file}"
+        commands="${commands}s|${delim}${var}${delim}|${!var}|g;"
+    done
+
+    contents=$(sed "${commands}" "${template_file}")
+
+    echo "${contents}" | grep "${delim}" && \
+        fatal "unused substitution delimiter found in ${basename}"
+
+    # Write the config to a temporary file.
+    echo -e "${contents}" > "${config_file}.new"
+
+    # Update the config, if changed.
+    if [[ ! -f "${config_file}" ]]; then
+        # First time config.
+        echo "Writing first time grafana config (${config_file})"
+        mv "${config_file}.new" "${config_file}"
+    elif ! diff "${config_file}" "${config_file}.new" > /dev/null; then
+        # The config differs.
+        echo "Updating grafana config (${config_file})"
+        cp "${config_file}" "${config_file}.bak"
+        mv "${config_file}.new" "${config_file}"
+    else
+        # The config does not differ
+        rm "${config_file}.new"
+    fi
+}
+
+# Set up key and certificate used for nginx
+function grafana_setup_certs() {
+    if [[ -f "${CERT_FILE}" && -f "${KEY_FILE}" ]]; then
+        echo "Key files already exist: ${CERT_FILE}, ${KEY_FILE}"
+    else
+        echo "Generating tls cert and key for CMON auth"
+        mkdir -p "${TLS_DIR}"
+        # Create cert and key
+        openssl req -x509 -nodes -subj '/CN=admin' -newkey rsa:2048 \
+            -keyout "${KEY_FILE}" -out "${CERT_FILE}" -days 3650
+    fi
+
+    return 0
+}
+
+#
+# Preliminary setup work for BIND server. We defer writing the config file and
+# enabling the service to bin/update-named.
+#
+function grafana_setup_named {
+    local localhost_zone
+    local arpa_zone
+    local cron_cmd
+    local cron_job
+    local cron_tmpfile
+
+    svccfg import /opt/local/lib/svc/manifest/bind.xml
+
+    mkdir -p "${NAMED_DIR}"
+    mkdir -p "${NAMED_DIR}/master"
+    mkdir -p "${NAMED_DIR}/slave"
+    mkdir -p "${NAMED_LOG_DIR}"
+
+    read -rd '' localhost_zone <<LOCALHOST_ZONE || true
+\$TTL 3D
+
+\$ORIGIN localhost.
+
+@       1D      IN     SOA     @       root (
+                       0               ; serial
+                       8H              ; refresh
+                       2H              ; retry
+                       4W              ; expiry
+                       1D              ; minimum
+                       )
+
+@       IN      NS      @
+        IN      A       127.0.0.1
+LOCALHOST_ZONE
+
+    read -rd '' arpa_zone <<ARPA_ZONE || true
+\$TTL 3D
+
+@       IN      SOA     localhost. root.localhost. (
+                        0               ; Serial
+                        8H              ; Refresh
+                        2H              ; Retry
+                        4W              ; Expire
+                        1D              ; Minimum TTL
+                        )
+
+       IN      NS      localhost.
+
+1      IN      PTR     localhost.
+ARPA_ZONE
+
+    echo -e "${localhost_zone}" > "${NAMED_DIR}/master/localhost"
+    echo -e "${arpa_zone}" > "${NAMED_DIR}/master/127.in-addr.arpa"
+
+    # Run the updater script once to kick BIND off
+    cron_cmd="${BIN_DIR}/update-named.sh"
+    # Every 5 minutes -- illumos cron does not allow "division" syntax
+    cron_job="0,5,10,15,20,25,30,35,40,45,50,55 * * * * ${cron_cmd}"
+    ${cron_cmd}
+
+    # Then, stick the script in a cron job
+    cron_tmpfile="/var/tmp/${ARG0}.${$}"
+    (crontab -l | grep -Fv "${cron_cmd}" ; echo "${cron_job}") \
+        > "${cron_tmpfile}"
+    crontab "${cron_tmpfile}"
+    rm "${cron_tmpfile}"
+}
+
+function grafana_set_permissions() {
+    grafana_add_user 'grafana'
+    grafana_add_user 'graf-proxy'
+    grafana_add_user 'nginx'
+
+    # Grant full access to files Grafana may write to.
+    chown grafana:grafana \
+        "${GRAFANA_CONF}" \
+        "${DASHBOARDS_CONF}" \
+        "${DATA_DIR}"
+
+    chown -R named:named \
+        "${NAMED_DIR}" \
+        "${NAMED_LOG_DIR}"
+
+    # We explicitly use the chown that has the "-c" option.
+    /opt/local/bin/chown -cR nginx:nginx \
+        "${NGINX_DIR}"
+
+    chmod 700 "${TEST_DIR}/runtests"
+    chmod 700 "${BIN_DIR}/update-named.sh"
+
+    return 0
+}
+
+function grafana_setup_config_files() {
+    mkdir -p "${DATA_DIR}"
+    mkdir -p "${CONF_DIR}/provisioning/dashboards"
+    mkdir -p "${CONF_DIR}/provisioning/datasources"
+    mkdir -p "${CONF_DIR}/plugins"
+
+    DATACENTER_NAME=$(mdata-get sdc:datacenter_name)
+    grafana_write_config "${GRAFANA_CONF}" DATA_DIR CONF_DIR
+    grafana_write_config "${NGINX_CONF}" CERT_FILE KEY_FILE
+    grafana_write_config "${DASHBOARDS_CONF}" DASHBOARDS_DIR
+
+    return 0
+}
+
+# First argument must be name of service to enable
+function grafana_ensure_running() {
+    local svc="${1}"
+    local currState
+    local dashId
+
+    # Wait for service to come out of transition, if necessary
+    local try=0
+    local tries=6
+    currState=$(svcs -Ho state "${svc}")
+    while [[ "${currState: -1}" == '*' || \
+        "${currState}" == 'uninitialized' ]]; do
+        ((try++)) || true
+        if [[ "${try}" -eq "${tries}" ]]; then
+            fatal "timeout: ${svc} service in transition state"
+        fi
+        sleep 5
+        currState=$(svcs -Ho state "${svc}")
+    done
+
+    if [[ "${currState}" == 'disabled' ]]; then
+        #
+        # Zone setup starts with every service in the disabled state. We enable
+        # the service after the config is generated for the first time.
+        #
+        echo "Enabling ${svc} SMF service"
+        svcadm enable "${svc}"
+    elif [[ "${currState}" == 'maintenance' ]]; then
+        echo "Clearing ${svc} SMF service"
+        svcadm clear "${svc}"
+    elif [[ "${currState}" != 'online' && \
+        "${currState}" != 'offline' ]]; then
+        #
+        # If the service is online, we can safely do nothing.
+        #
+        # If the service is offline, we can also safely do nothing -- it will
+        # start once its dependencies are satisfied. Otherwise, we exit loudly.
+        #
+        fatal "unexpected ${svc} service state: '${currState}'"
+    fi
+
+    # Wait for service to come up before we allow the script to continue
+    try=0
+    currState=$(svcs -Ho state "${svc}" )
+    while [[ "${currState}" != 'online' ]]; do
+        ((try++)) || true
+        if [[ "${try}" -eq "${tries}" ]]; then
+            fatal "timeout: ${svc} could not be (re)started"
+        fi
+        sleep 5
+        currState=$(svcs -Ho state "${svc}")
+    done
+}
+
+function grafana_setup_service() {
+    local service=$1
+    /usr/sbin/svccfg import ${MANIFESTS_DIR}/${service}.xml
+    grafana_ensure_running ${service}
+}
+
+# Set defaults after grafana is already running
+function grafana_set_defaults() {
+    local grafana_addr='127.0.0.1'
+    local grafana_port='3000'
+    local search_path='api/search?type=dash-db&query=cnapi'
+    local prefs_path='api/org/preferences'
+    local tries=5
+
+    # Set dashboard default
+    dashId=$(curl -sS --header 'X-Grafana-Username: admin' \
+        "http://${grafana_addr}:${grafana_port}/${search_path}" | json 0.id)
+
+    #
+    # Sometimes, after grafana has just come up, the following request will
+    # fail. We thus try repeatedly.
+    #
+    local try=0
+    local success='false'
+    set +o errexit
+    while [[ "${success}" != 'true' ]]; do
+        ((try++)) || true
+        if [[ "$try" -eq "$tries" ]]; then
+            fatal 'timeout: grafana default dashboard could not be updated'
+        fi
+
+        curl -sS --header 'X-Grafana-Username: admin' \
+            "http://${grafana_addr}:${grafana_port}/${prefs_path}" \
+            -H content-type:application/json \
+            -d '{"theme":"","homeDashboardId":'${dashId}',"timezone":"utc"}' \
+            -X PUT \
+            && success='true'
+
+        sleep 2
+    done
+    set -o errexit
+
+    return 0
+}
+
+# ---- mainline
+
+DATACENTER_NAME=$(mdata-get sdc:datacenter_name)
+DNS_DOMAIN=$(mdata-get sdc:dns_domain)
+if [[ -z "${DNS_DOMAIN}" ]]; then
+    # As of TRITON-92, we expect sdcadm to set this for all core
+    # Triton zones.
+    fatal 'could not determine "DNS_DOMAIN"'
+fi
+
+CONFIG_AGENT_LOCAL_MANIFESTS_DIRS="${ROOT_DIR}"
+source /opt/smartdc/boot/lib/util.sh
+sdc_common_setup
+
+grafana_setup_delegated_dataset
+grafana_setup_certs
+grafana_setup_env
+grafana_setup_config_files
+grafana_setup_named
+grafana_set_permissions
+
+#
+# The order we enable these services matters, because we explicitly wait for
+# them to come up using grafana_ensure_running, and they have service
+# dependencies that must be satisfied before they can run.
+#
+# We build the layers from the inside out: grafana, then graf-proxy, then nginx.
+#
+grafana_setup_service 'grafana'
+grafana_setup_service 'graf-proxy'
+grafana_setup_service 'nginx'
+
+# We can only set the defaults once grafana is running.
+grafana_set_defaults
+
+sdc_log_rotation_add config-agent /var/svc/log/*config-agent*.log 1g
+sdc_log_rotation_add registrar /var/svc/log/*registrar*.log 1g
+sdc_log_rotation_add grafana /var/svc/log/*grafana*.log 1g
+sdc_log_rotation_add nginx /var/svc/log/*nginx*.log 1g
+sdc_log_rotation_add graf-proxy /var/svc/log/*graf-proxy*.log 1g
+
+sdc_log_rotation_setup_end
+
+sdc_setup_complete
+
+exit 0
diff --git a/deps/eng b/deps/eng
new file mode 160000
index 0000000..ed10150
--- /dev/null
+++ b/deps/eng
@@ -0,0 +1 @@
+Subproject commit ed10150657b1f3ae4f061c751daf365ed16ca8d5
diff --git a/deps/grafana b/deps/grafana
new file mode 160000
index 0000000..e045e15
--- /dev/null
+++ b/deps/grafana
@@ -0,0 +1 @@
+Subproject commit e045e15718c007c6f804a4ddcf3c1e2981282772
diff --git a/deps/nginx b/deps/nginx
new file mode 160000
index 0000000..dda58fc
--- /dev/null
+++ b/deps/nginx
@@ -0,0 +1 @@
+Subproject commit dda58fc63b64227a19657ed92168b9f645c0c86e
diff --git a/deps/sdc-scripts b/deps/sdc-scripts
new file mode 160000
index 0000000..935b4d0
--- /dev/null
+++ b/deps/sdc-scripts
@@ -0,0 +1 @@
+Subproject commit 935b4d0d95085aa635a09dc7e923a7e88729a61b
diff --git a/etc/grafana.ini.in b/etc/grafana.ini.in
new file mode 100755
index 0000000..95c1461
--- /dev/null
+++ b/etc/grafana.ini.in
@@ -0,0 +1,33 @@
+#
+# config file version
+#
+apiVersion: 1
+
+[server]
+http_addr=127.0.0.1
+
+#
+# graf-proxy handles auth, so these associated features are disabled in grafana
+# itself.
+#
+[auth]
+disable_login_form=true
+disable_signout_menu=true
+[auth.basic]
+enabled=false
+
+[auth.proxy]
+enabled=true
+header_name=X-Grafana-Username
+header_property=username
+auto_sign_up=true
+whitelist=127.0.0.1
+headers=Email:X-Grafana-Email Name:X-Grafana-Name
+
+[paths]
+data=%%DATA_DIR%%
+provisioning=%%CONF_DIR%%/provisioning
+plugins=%%CONF_DIR%%/plugins
+
+[users]
+auto_assign_org_role=Admin
diff --git a/etc/nginx.conf.in b/etc/nginx.conf.in
new file mode 100755
index 0000000..4b0b73c
--- /dev/null
+++ b/etc/nginx.conf.in
@@ -0,0 +1,106 @@
+user nginx nginx;
+worker_processes 1;
+
+events {
+	worker_connections 1024;
+}
+
+http {
+	include mime.types;
+	default_type application/octet-stream;
+
+	log_format  combined_withlatency '$remote_addr - $remote_user [$time_local]'
+	    '"$request" $status $body_bytes_sent $request_time '
+	    '"$http_referer" "$http_user_agent"';
+	access_log /var/log/nginx-access.log;
+	error_log /var/log/nginx-error.log;
+
+	sendfile on;
+	send_timeout 300s;
+
+	keepalive_timeout 65;
+
+	# The grafana instance itself. Only accessible from inside the zone.
+	upstream grafana {
+		server 127.0.0.1:3000 fail_timeout=0;
+	}
+
+	# The graf-proxy server. Only accessible from inside the zone.
+	upstream auth {
+		# Must keep in sync with lib/proxy.js and test/auth.js
+		server 'unix:/tmp/graf-proxy.sock' fail_timeout=0;
+	}
+
+	# http -> https redirect
+	server {
+		listen 80;
+		server_name localhost;
+		return 301 https://$host$request_uri;
+	}
+
+	# The https endpoint. Publicly accessible.
+	server {
+		listen 443 ssl;
+		server_name localhost;
+
+		add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains' always;
+
+		ssl_certificate %%CERT_FILE%%;
+		ssl_certificate_key %%KEY_FILE%%;
+
+		# Subrequest to graf-proxy
+		location = /auth {
+			internal;
+			proxy_pass http://auth;
+			proxy_pass_request_body off;
+			proxy_set_header Content-Length "";
+			proxy_set_header X-Original-URI $request_uri;
+		}
+
+		# The ping endpoint -- redirects to grafana's internal ping path
+		location = /ping {
+			proxy_set_header Authorization "";
+			proxy_set_header Host $host;
+			proxy_set_header X-Real-IP $remote_addr;
+			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+			proxy_set_header X-Forwarded-Proto $scheme;
+
+			proxy_redirect http:// https://;
+			proxy_pass http://grafana/api/health;
+			# Required for new HTTP-based CLI
+			proxy_http_version 1.1;
+			proxy_request_buffering off;
+			# Required for HTTP-based CLI to work over SSL
+			proxy_buffering off;
+		}
+
+		#
+		# Main endpoint -- issues auth subrequest to graf-proxy, sets
+		# appropriate headers, redirects to grafana instance
+		#
+		location / {
+			auth_request /auth;
+			auth_request_set $auth_username $upstream_http_x_grafana_username;
+			auth_request_set $auth_email $upstream_http_x_grafana_email;
+			auth_request_set $auth_name $upstream_http_x_grafana_name;
+
+			proxy_set_header Authorization "";
+			proxy_set_header Host $host;
+			proxy_set_header X-Real-IP $remote_addr;
+			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+			proxy_set_header X-Forwarded-Proto $scheme;
+
+			proxy_set_header X-Grafana-Username $auth_username;
+			proxy_set_header X-Grafana-Email $auth_email;
+			proxy_set_header X-Grafana-Name $auth_name;
+
+			proxy_redirect http:// https://;
+			proxy_pass http://grafana;
+			# Required for new HTTP-based CLI
+			proxy_http_version 1.1;
+			proxy_request_buffering off;
+			# Required for HTTP-based CLI to work over SSL
+			proxy_buffering off;
+		}
+	}
+}
diff --git a/etc/triton-dashboards.yaml.in b/etc/triton-dashboards.yaml.in
new file mode 100755
index 0000000..e4f8a94
--- /dev/null
+++ b/etc/triton-dashboards.yaml.in
@@ -0,0 +1,10 @@
+# config file version
+apiVersion: 1
+
+providers:
+        - name: Triton
+          orgId: 1
+          folder: ''
+          type: file
+          options:
+                path: %%DASHBOARDS_DIR%%
diff --git a/lib/auth.js b/lib/auth.js
new file mode 100644
index 0000000..3e7d8ef
--- /dev/null
+++ b/lib/auth.js
@@ -0,0 +1,138 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ *
+ * Authentication for grafana proxy server. Sets headers for use with the
+ * auth-proxy authentication mode in Grafana - see
+ * http://docs.grafana.org/auth/auth-proxy/
+ */
+
+'use strict';
+
+const assert = require('assert-plus');
+const basicAuth = require('basic-auth');
+
+const errors = require('./errors');
+
+const AUTH_USERNAME_HEADER = 'X-Grafana-Username';
+const AUTH_EMAIL_HEADER = 'X-Grafana-Email';
+const AUTH_NAME_HEADER = 'X-Grafana-Name';
+
+/**
+ * authenticate
+ *
+ * @requires
+ * - req.ufds
+ */
+function authenticate(req, res, next) {
+    assert.object(req.ufds, 'req.ufds');
+
+    // Retrieve credentials from request
+    const creds = basicAuth(req);
+    // User hasn't submitted credentials yet -- prompt them
+    if (!creds) {
+        next(setAuthHeader());
+        return;
+    }
+    const username = creds.name;
+    const password = creds.pass;
+
+    // Prompt user again if blank username or password
+    if (username === '') {
+        next(setAuthHeader());
+        return;
+    }
+    if (password === '') {
+        next(setAuthHeader());
+        return;
+    }
+
+    // Verify that user exists
+    req.ufds.getUserEx({
+        'searchType': 'login',
+        'value': username
+    }, function getUserExCb(err, user) {
+        if (err) {
+            // Username doesn't exist in UFDS - prompt again
+            if (err.restCode === 'ResourceNotFound') {
+                next(setAuthHeader());
+                return;
+            } else {
+                next(new errors.UfdsError(err));
+                return;
+            }
+        }
+
+        /*
+         * Check for lockout. Note that, because node-ufds caches user objects
+         * on the client side, a user who is locked out on the server may appear
+         * to be unlocked from the client perspective. This means that the user
+         * will receive the authentication prompt instead of a proper 403 until
+         * the cache times out -- the user will still be properly unable to
+         * authenticate to the server regardless.
+         */
+        const lockedTime = user.pwdaccountlockedtime;
+        if (lockedTime && lockedTime > Date.now()) {
+            next(new errors.AccountLockedError());
+            return;
+        }
+
+        // Check for password expiry
+        const pwdEndTime = user.pwdendtime;
+        if (pwdEndTime && pwdEndTime <= Date.now()) {
+            next(new errors.PasswordExpiredError());
+            return;
+        }
+
+        // Authenticate user
+        doAuth();
+        return;
+    });
+
+    function doAuth() {
+        req.ufds.authenticate(username, password,
+            function authenticateCb(err, user) {
+            if (err) {
+                // Invalid password or username - prompt user again
+                if (err.restCode === 'InvalidCredentials' ||
+                    err.restCode === 'ResourceNotFound') {
+                    next(setAuthHeader());
+                    return;
+                }
+
+                next(new errors.UfdsError(err));
+                return;
+            }
+
+            if (!user.isAdmin()) {
+                next(new errors.PermissionError());
+                return;
+            }
+
+            // Set headers needed by grafana
+            res.header('Content-Type', 'application/json');
+            res.header(AUTH_USERNAME_HEADER, user.login);
+            res.header(AUTH_EMAIL_HEADER, user.email);
+            // Given name is optional in UFDS
+            res.header(AUTH_NAME_HEADER, user.givenname || '');
+            res.send(200);
+            next();
+            return;
+        });
+    }
+
+    // Convenience function for prompting user for credentials
+    function setAuthHeader() {
+        res.header('WWW-Authenticate', 'Basic realm="Joyent Grafana"');
+        return (new errors.AuthError());
+    }
+}
+
+module.exports = {
+    authenticate: authenticate
+};
diff --git a/lib/errors.js b/lib/errors.js
new file mode 100644
index 0000000..90cb00f
--- /dev/null
+++ b/lib/errors.js
@@ -0,0 +1,90 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ *
+ * Errors for grafana proxy server.
+ */
+
+'use strict';
+
+const restify_errors = require('restify-errors');
+const util = require('util');
+
+const HttpError = restify_errors.HttpError;
+
+const ACCOUNT_LOCKED_MESSAGE = 'Account is temporarily locked after too many ' +
+    'failed auth attempts';
+const AUTH_ERROR_MESSAGE = 'Credentials Invalid';
+const INSUFFICIENT_PERMISSION_MESSAGE = 'User does not have permission to ' +
+    'access Grafana';
+const PASSWORD_EXPIRED_MESSAGE = 'Your password has expired';
+const UFDS_ERROR_MESSAGE = 'Error while authenticating via UFDS';
+
+function GrafProxyError(obj) {
+    obj.constructorOpt = this.constructor;
+    HttpError.call(this, obj);
+}
+util.inherits(GrafProxyError, HttpError);
+
+function AccountLockedError(err) {
+    GrafProxyError.call(this, {
+        restCode: 'Forbidden',
+        statusCode: 403,
+        cause: err,
+        message: ACCOUNT_LOCKED_MESSAGE
+    });
+}
+util.inherits(AccountLockedError, GrafProxyError);
+
+function AuthError(err) {
+    GrafProxyError.call(this, {
+        restCode: 'Unauthorized',
+        statusCode: 401,
+        cause: err,
+        message: AUTH_ERROR_MESSAGE
+    });
+}
+util.inherits(AuthError, GrafProxyError);
+
+function PermissionError(err) {
+    GrafProxyError.call(this, {
+        restCode: 'Forbidden',
+        statusCode: 403,
+        cause: err,
+        message: INSUFFICIENT_PERMISSION_MESSAGE
+    });
+}
+util.inherits(PermissionError, GrafProxyError);
+
+function PasswordExpiredError(err) {
+    GrafProxyError.call(this, {
+        restCode: 'Forbidden',
+        statusCode: 403,
+        cause: err,
+        message: PASSWORD_EXPIRED_MESSAGE
+    });
+}
+util.inherits(PasswordExpiredError, GrafProxyError);
+
+function UfdsError(err) {
+    GrafProxyError.call(this, {
+        restCode: 'Internal',
+        statusCode: 500,
+        cause: err,
+        message: UFDS_ERROR_MESSAGE
+    });
+}
+util.inherits(UfdsError, GrafProxyError);
+
+module.exports = {
+    AccountLockedError: AccountLockedError,
+    AuthError: AuthError,
+    PermissionError: PermissionError,
+    PasswordExpiredError: PasswordExpiredError,
+    UfdsError: UfdsError
+};
diff --git a/lib/proxy.js b/lib/proxy.js
new file mode 100644
index 0000000..ff05993
--- /dev/null
+++ b/lib/proxy.js
@@ -0,0 +1,105 @@
+#!/opt/triton/grafana/build/node/bin/node
+
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ *
+ * grafana proxy server.
+ *
+ * Usage:
+ *    node proxy.js
+ */
+
+'use strict';
+
+const assert = require('assert-plus');
+const bunyan = require('bunyan');
+const fs = require('fs');
+const restify = require('restify');
+const tritonAuditLogger = require('triton-audit-logger');
+
+const auth = require('./auth');
+const ufds = require('./ufds');
+const util = require('./util');
+
+function createProxyServer(config) {
+    assert.object(config, 'config');
+
+    const ufdsMaster = ufds.createUfdsClient({
+        url: config.ufdsMaster.url,
+        bindDN: config.ufdsMaster.bindDN,
+        bindPassword: config.ufdsMaster.bindPassword,
+        cache: config.ufdsMaster.cache,
+        log: config.log
+    }, true);
+
+    const server = restify.createServer({
+        name: 'graf-proxy',
+        log: config.log
+    });
+
+    server.use(restify.plugins.requestLogger());
+
+    server.on('after', tritonAuditLogger.createAuditLogHandler({
+        log: config.log,
+        reqBody: {},
+        resBody: {},
+        // eslint-disable-next-line no-unused-vars
+        polish: function censorAuth(fields, req, res, route, err) {
+            if (req.headers['authorization'] !== undefined) {
+                req.headers['authorization'] = '***';
+            }
+        }
+    }));
+
+    server.get('/auth', setUfds, auth.authenticate);
+
+    return server;
+
+    function setUfds(req, res, next) {
+        /*
+         * We can only use the master UFDS. If we use the local UFDS, we could
+         * inadvertently write to it (which should not be allowed) in the event
+         * of a lockout. This cannot be accounted for until TRITON-947 is fixed.
+         */
+        req.ufds = ufdsMaster;
+        setImmediate(next);
+    }
+}
+
+// ---- mainline
+
+// Log will be attached to config and to each restify req
+const log = bunyan.createLogger({
+    name: 'graf-proxy',
+    level: 'info',
+    serializers: restify.bunyan.serializers
+});
+
+let config;
+const customConfigPath = process.env.GRAFANA_PROXY_CONFIG;
+try {
+    config = util.loadConfig(log, util.DEFAULT_CFG_PATH, customConfigPath);
+} catch (err) {
+    log.fatal(err);
+    process.exit(1);
+}
+
+const server = createProxyServer(config);
+
+/*
+ * Set up socket to listen on. Must keep path in sync with config/nginx.conf and
+ * test/auth.test.js
+ */
+const proxySock = '/tmp/graf-proxy.sock';
+if (fs.existsSync(proxySock)) {
+    fs.unlinkSync(proxySock);
+}
+server.listen(proxySock, function listenCb() {
+    config.log.info('Server listening at %s', proxySock);
+});
diff --git a/lib/ufds.js b/lib/ufds.js
new file mode 100644
index 0000000..82ae4ca
--- /dev/null
+++ b/lib/ufds.js
@@ -0,0 +1,65 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ *
+ * UFDS client utility functions for grafana proxy server and associated tests.
+ */
+
+'use strict';
+
+const UFDS = require('ufds');
+const assert = require('assert-plus');
+
+const UFDS_DEFAULT_CONNECT_TIMEOUT = 4000;
+const UFDS_DEFAULT_CLIENT_TIMEOUT = 10000;
+const UFDS_DEFAULT_IDLE_TIMEOUT = 10000;
+
+/**
+ * createUfdsClient
+ *
+ * @param
+ * - config: from loadConfig
+ */
+function createUfdsClient(config, isMaster) {
+    assert.object(config, 'config');
+    assert.bool(isMaster, 'isMaster');
+
+    config.connectTimeout = config.connectTimeout ||
+        UFDS_DEFAULT_CONNECT_TIMEOUT;
+    config.clientTimeout = config.clientTimeout || UFDS_DEFAULT_CLIENT_TIMEOUT;
+    config.idleTimeout = config.idleTimeout || UFDS_DEFAULT_IDLE_TIMEOUT;
+
+    const ufds = new UFDS(config);
+
+    const log = config.log.child({
+        isMaster: isMaster
+    });
+    log.info('Connecting to UFDS: ', config.url);
+
+    let count = 0;
+    ufds.on('connect', function onceConnectCb() {
+        count++;
+        log.info({
+            count: count
+        }, 'Connected to UFDS: ', config.url);
+    });
+
+    ufds.on('close', function closeCb() {
+        log.info('UFDS Connection Closed');
+    });
+
+    ufds.on('error', function errorCb(err) {
+        log.warn(err, 'UFDS: unexpected error occurred');
+    });
+
+    return ufds;
+}
+
+module.exports = {
+    createUfdsClient: createUfdsClient
+};
diff --git a/lib/util.js b/lib/util.js
new file mode 100644
index 0000000..e5471f4
--- /dev/null
+++ b/lib/util.js
@@ -0,0 +1,85 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ *
+ * Utility functions for grafana proxy server.
+ */
+
+'use strict';
+
+const fs = require('fs');
+const assert = require('assert-plus');
+
+const DEFAULT_CFG_PATH = __dirname + '/../etc/config.json';
+
+/**
+ * loadConfig - loads config from specified file
+ *
+ * @param
+ * - defaultConfig: path to default config file
+ * - customConfig: path to user-specified config file
+ *
+ * @throws
+ * - Error if defaultConfig is not found or unparseable
+ * - Error if customConfig is specified but not found or unparseable
+ */
+function loadConfig(log, defaultConfig, customConfig) {
+    assert.string(defaultConfig, 'defaultConfig');
+    assert.optionalString(customConfig, 'customConfig');
+
+    // Load default config
+    let config;
+    log.info('Loading default config from "' + DEFAULT_CFG_PATH + '".');
+    if (!fs.existsSync(defaultConfig)) {
+        throw new Error('Config file not found: "' + defaultConfig +
+            '" does not exist.');
+    }
+    try {
+        config = JSON.parse(fs.readFileSync(defaultConfig, 'utf8'));
+    } catch (err) {
+        throw new Error('Unable to parse ' + defaultConfig + ': ' +
+            err.message);
+    }
+
+    // Load custom config, if specified
+    if (customConfig) {
+        log.info('Loading additional config from "' + customConfig + '".');
+
+        if (!fs.existsSync(customConfig)) {
+            throw new Error('Config file not found: "' + customConfig +
+                '" does not exist.');
+        }
+        let extraConfig;
+        try {
+            extraConfig = JSON.parse(fs.readFileSync(customConfig,
+                'utf8'));
+        } catch (err) {
+            throw new Error('Unable to parse ' + extraConfig + ': ' +
+                err.message);
+        }
+        for (let name in extraConfig) {
+            config[name] = extraConfig[name];
+        }
+    }
+
+    log.info('Loaded config: ', JSON.stringify(config, censor));
+    config.log = log;
+    return config;
+
+    function censor(key, value) {
+        if (key === 'bindPassword') {
+            return '***';
+        }
+        return value;
+    }
+}
+
+module.exports = {
+    DEFAULT_CFG_PATH: DEFAULT_CFG_PATH,
+    loadConfig: loadConfig
+};
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..724336f
--- /dev/null
+++ b/package.json
@@ -0,0 +1,32 @@
+{
+	"name": "triton-grafana",
+	"description": "Grafana for TritonDC",
+	"version": "1.0.0",
+	"author": "Joyent (joyent.com)",
+	"private": true,
+	"repository": {
+		"type": "git",
+		"url": "git+https://github.com/joyent/triton-grafana.git"
+	},
+	"license": "MPL-2.0",
+	"engines": {
+		"node" : ">=6.x"
+	},
+	"dependencies": {
+		"assert-plus": "^1.0.0",
+		"basic-auth": "^2.0.1",
+		"bunyan": "^1.8.12",
+		"restify": "^7.2.1",
+		"restify-clients": "^2.6.3",
+		"restify-errors": "^6.1.1",
+		"@smaller/tap": "^11.1.4-1.0.0",
+		"triton-audit-logger": "^1.0.1",
+		"ufds": "^1.4.0",
+		"uuid": "^3.3.2",
+		"vasync": "^2.2.0"
+	},
+	"devDependencies": {
+		"eslint": "^4.13.1",
+		"eslint-plugin-joyent": "~2.1.0"
+	}
+}
diff --git a/sapi_manifests/graf-proxy/manifest.json b/sapi_manifests/graf-proxy/manifest.json
new file mode 100644
index 0000000..290cad3
--- /dev/null
+++ b/sapi_manifests/graf-proxy/manifest.json
@@ -0,0 +1,5 @@
+{
+	"name": "graf-proxy",
+	"path": "/opt/triton/grafana/proxy/etc/config.json",
+	"post_cmd": "/usr/sbin/svcadm restart graf-proxy"
+}
diff --git a/sapi_manifests/graf-proxy/template b/sapi_manifests/graf-proxy/template
new file mode 100644
index 0000000..e93e6e6
--- /dev/null
+++ b/sapi_manifests/graf-proxy/template
@@ -0,0 +1,17 @@
+{
+	"ufdsMaster": {
+		"url": "ldaps://{{^ufds_remote_ip}}{{{ufds_domain}}}{{/ufds_remote_ip}}{{{ufds_remote_ip}}}",
+		"bindDN": "{{{ufds_ldap_root_dn}}}",
+		{{^ufds_remote_ldap_root_pw}}
+		"bindPassword": "{{{ufds_ldap_root_pw}}}",
+		{{/ufds_remote_ldap_root_pw}}
+		{{#ufds_remote_ldap_root_pw}}
+		"bindPassword": "{{{ufds_remote_ldap_root_pw}}}",
+		{{/ufds_remote_ldap_root_pw}}
+		"clientTimeout": 240000,
+		"cache": {
+			"size": 5000,
+			"expiry": 60
+		}
+	}
+}
diff --git a/sapi_manifests/grafana/manifest.json b/sapi_manifests/grafana/manifest.json
new file mode 100644
index 0000000..64bbb61
--- /dev/null
+++ b/sapi_manifests/grafana/manifest.json
@@ -0,0 +1,5 @@
+{
+	"name": "grafana",
+	"path": "/opt/triton/grafana/etc/provisioning/datasources/triton-datasources.yaml",
+	"post_cmd": "/usr/sbin/svcadm restart grafana"
+}
diff --git a/sapi_manifests/grafana/template b/sapi_manifests/grafana/template
new file mode 100644
index 0000000..5968a2f
--- /dev/null
+++ b/sapi_manifests/grafana/template
@@ -0,0 +1,18 @@
+# config file version
+apiVersion: 1
+
+datasources:
+        - name: Triton
+          type: prometheus
+          access: proxy
+          orgId: 1
+          url: http://prometheus.{{datacenter_name}}.{{dns_domain}}:9090
+          isDefault: true
+          editable: true
+        - name: Manta
+          type: prometheus
+          access: proxy
+          orgId: 1
+          url: http://prometheus.{{region_name}}.{{dns_domain}}:9090
+          isDefault: false
+          editable: true
diff --git a/sapi_manifests/update-named/manifest.json b/sapi_manifests/update-named/manifest.json
new file mode 100644
index 0000000..48e02a0
--- /dev/null
+++ b/sapi_manifests/update-named/manifest.json
@@ -0,0 +1,4 @@
+{
+	"name": "update-named",
+	"path": "/opt/triton/grafana/etc/update-named-config.json"
+}
diff --git a/sapi_manifests/update-named/template b/sapi_manifests/update-named/template
new file mode 100644
index 0000000..f0043fd
--- /dev/null
+++ b/sapi_manifests/update-named/template
@@ -0,0 +1,3 @@
+{
+    "region_name": "{{region_name}}"
+}
diff --git a/smf/manifests/graf-proxy.xml b/smf/manifests/graf-proxy.xml
new file mode 100644
index 0000000..20b86be
--- /dev/null
+++ b/smf/manifests/graf-proxy.xml
@@ -0,0 +1,104 @@
+<?xml version="1.0"?>
+<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright 2019 Joyent, Inc.
+-->
+
+<service_bundle type="manifest" name="graf-proxy">
+    <service
+        name="triton/site/graf-proxy"
+        type="service"
+        version="1.0.0">
+
+        <create_default_instance enabled="false"/>
+        <single_instance/>
+
+        <dependency
+            name="network"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/milestone/network:default"/>
+        </dependency>
+
+        <dependency
+            name="filesystem"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/system/filesystem/local"/>
+        </dependency>
+
+        <dependency
+            name="grafana"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/triton/site/grafana"/>
+        </dependency>
+
+        <exec_method
+            type="method"
+            name="start"
+            exec="/opt/triton/grafana/build/node/bin/node --abort_on_uncaught_exception /opt/triton/grafana/proxy/lib/proxy.js &amp;"
+            timeout_seconds="30">
+            <method_context working_directory="/opt/triton/grafana/proxy">
+                <method_credential
+                    user="graf-proxy"
+                    group="graf-proxy"
+                    privileges="basic,net_privaddr"/>
+                <method_environment>
+                    <envvar
+                        name="PATH"
+                        value="/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
+                    <envvar
+                        name="LD_PRELOAD_32"
+                        value="/usr/lib/extendedFILE.so.1"/>
+                </method_environment>
+            </method_context>
+        </exec_method>
+
+        <exec_method
+            type="method"
+            name="restart"
+            exec=":kill"
+            timeout_seconds="60">
+            <method_context working_directory="/opt/triton/grafana/proxy"/>
+        </exec_method>
+
+        <exec_method
+            type="method"
+            name="stop"
+            exec=":kill"
+            timeout_seconds="60">
+            <method_context working_directory="/opt/triton/grafana/proxy"/>
+        </exec_method>
+
+        <property_group
+            name="startd"
+            type="framework">
+            <propval
+                name="ignore_error"
+                type="astring"
+                value="core,signal"/>
+        </property_group>
+
+        <property_group
+            name="application"
+            type="application"/>
+
+        <stability value="Stable"/>
+
+        <template>
+            <common_name>
+                <loctext xml:lang="C">UFDS auth proxy for Triton Grafana</loctext>
+            </common_name>
+        </template>
+    </service>
+</service_bundle>
diff --git a/smf/manifests/grafana.xml b/smf/manifests/grafana.xml
new file mode 100644
index 0000000..c4c8869
--- /dev/null
+++ b/smf/manifests/grafana.xml
@@ -0,0 +1,101 @@
+<?xml version="1.0"?>
+<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright 2019 Joyent, Inc.
+-->
+
+<service_bundle type="manifest" name="grafana">
+    <service
+        name="triton/site/grafana"
+        type="service"
+        version="1.0.0">
+
+        <create_default_instance enabled="false"/>
+        <single_instance/>
+
+        <dependency
+            name="network"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/milestone/network:default"/>
+        </dependency>
+
+        <dependency
+            name="filesystem"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/system/filesystem/local"/>
+        </dependency>
+
+        <exec_method
+            type="method"
+            name="start"
+            exec="/opt/triton/grafana/grafana/bin/solaris-amd64/grafana-server --homepath /opt/triton/grafana/grafana --config /opt/triton/grafana/etc/grafana.ini &amp;"
+            timeout_seconds="30">
+            <method_context working_directory="/opt/triton/grafana/grafana">
+                <method_credential
+                    user="grafana"
+                    group="grafana"
+                    privileges="basic,net_privaddr"/>
+                <method_environment>
+                    <envvar
+                        name="PATH"
+                        value="/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
+                    <envvar
+                        name="LD_PRELOAD_32"
+                        value="/usr/lib/extendedFILE.so.1"/>
+                </method_environment>
+            </method_context>
+        </exec_method>
+
+        <exec_method
+            type="method"
+            name="restart"
+            exec=":kill"
+            timeout_seconds="60">
+            <method_context working_directory="/opt/triton/grafana/grafana"/>
+        </exec_method>
+
+        <exec_method
+            type="method"
+            name="stop"
+            exec=":kill"
+            timeout_seconds="60">
+            <method_context working_directory="/opt/triton/grafana/grafana"/>
+        </exec_method>
+
+        <!--
+            Grafana does not support reloading the config without restarting the
+            entire program. We therefore do not define a refresh method.
+        -->
+
+        <property_group
+            name="startd"
+            type="framework">
+            <propval
+                name="ignore_error"
+                type="astring"
+                value="core,signal"/>
+        </property_group>
+
+        <property_group
+            name="application"
+            type="application"/>
+
+        <stability value="Stable"/>
+
+        <template>
+            <common_name>
+                <loctext xml:lang="C">Triton Grafana</loctext>
+            </common_name>
+        </template>
+    </service>
+</service_bundle>
diff --git a/smf/manifests/nginx.xml b/smf/manifests/nginx.xml
new file mode 100644
index 0000000..9c6c2ee
--- /dev/null
+++ b/smf/manifests/nginx.xml
@@ -0,0 +1,119 @@
+<?xml version="1.0"?>
+<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright 2019 Joyent, Inc.
+-->
+
+<service_bundle type="manifest" name="nginx">
+    <service name="triton/site/nginx" type="service" version="1.0.0">
+
+        <create_default_instance enabled="false"/>
+        <single_instance/>
+
+        <dependency
+            name="network"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/network/physical"/>
+        </dependency>
+
+        <dependency
+            name="filesystem"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/system/filesystem/local"/>
+        </dependency>
+
+        <dependency
+            name="grafana"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/triton/site/grafana"/>
+        </dependency>
+
+        <dependency
+            name="graf-proxy"
+            grouping="require_all"
+            restart_on="error"
+            type="service">
+            <service_fmri value="svc:/triton/site/graf-proxy"/>
+        </dependency>
+
+        <exec_method
+            type="method"
+            name="start"
+            exec="/opt/triton/grafana/nginx/sbin/nginx -p /opt/triton/grafana/nginx/ &amp;" timeout_seconds="15">
+            <method_context>
+                <!--
+                    Note that we leave nginx running as root
+                    here. This is so the master process can
+                    listen on ports 80 and 443. In the nginx
+                    config file, we specify `user nginx` to
+                    have the other processes run as nonroot.
+                -->
+                <method_environment>
+                    <envvar
+                        name="PATH"
+                        value="/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
+                    <envvar
+                        name="LD_PRELOAD_32"
+                        value="/usr/lib/extendedFILE.so.1"/>
+                </method_environment>
+            </method_context>
+        </exec_method>
+
+        <exec_method
+            type="method"
+            name="restart"
+            exec=":kill"
+            timeout_seconds="60">
+            <method_context working_directory="/opt/triton/grafana/nginx" />
+        </exec_method>
+
+        <exec_method
+            type="method"
+            name="stop"
+            exec=":kill"
+            timeout_seconds="30">
+            <method_context working_directory="/opt/triton/grafana/nginx"/>
+        </exec_method>
+
+        <exec_method
+            type="method"
+            name="refresh"
+            exec=":kill -HUP"
+            timeout_seconds="30">
+            <method_context working_directory="/opt/triton/grafana/nginx"/>
+        </exec_method>
+
+        <property_group
+            name="startd"
+            type="framework">
+            <propval
+                name="ignore_error"
+                type="astring"
+                value="core,signal"/>
+        </property_group>
+
+        <property_group
+            name="application"
+            type="application"/>
+
+        <stability value="Stable"/>
+
+        <template>
+            <common_name>
+                <loctext xml:lang="C" >Joyent nginx reverse proxy for Grafana</loctext>
+            </common_name>
+        </template>
+    </service>
+</service_bundle>
diff --git a/test/auth.test.js b/test/auth.test.js
new file mode 100644
index 0000000..e9459e9
--- /dev/null
+++ b/test/auth.test.js
@@ -0,0 +1,252 @@
+#!/opt/triton/grafana/build/node/bin/node
+
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ *
+ * authentication test for grafana proxy server.
+ *
+ * Usage:
+ *    node auth.test.js
+ */
+
+'use strict';
+
+const bunyan = require('bunyan');
+const restify = require('restify-clients');
+const test = require('@smaller/tap').test;
+const uuid = require('uuid');
+const vasync = require('vasync');
+
+const ufds = require('../proxy/lib/ufds');
+const util = require('../proxy/lib/util');
+
+/*
+ * Socket graf-proxy is listening on. Must keep path in sync with
+ * config/nginx.conf and test/auth.test.js
+ */
+const PROXY_SOCK = '/tmp/graf-proxy.sock';
+const AUTH_ENDPOINT = '/auth';
+
+const ADMIN_GROUP = 'operators';
+
+const log = bunyan.createLogger({
+    name: 'graf-proxy',
+    level: 'info',
+    serializers: bunyan.stdSerializers
+});
+
+let config;
+const customConfigPath = process.env.GRAFANA_PROXY_CONFIG;
+try {
+    config = util.loadConfig(log, util.DEFAULT_CFG_PATH, customConfigPath);
+} catch (err) {
+    log.fatal('Could not load config: ' + err.message);
+    process.exit(1);
+}
+
+const client = restify.createJsonClient({
+    socketPath: PROXY_SOCK,
+    connectTimeout: 1000,
+    requestTimeout: 1000,
+    retry: false
+});
+
+const ufdsMaster = ufds.createUfdsClient({
+    url: config.ufdsMaster.url,
+    bindDN: config.ufdsMaster.bindDN,
+    bindPassword: config.ufdsMaster.bindPassword,
+    cache: config.ufdsMaster.cache,
+    log: config.log
+}, true);
+
+// Create a random valid UFDS username from a uuid
+function generateLogin() {
+    return 'a' + uuid().slice(0, -1).split('-').join('');
+}
+
+// Test that a client can ping the graf-proxy server
+function testServerRunning(args, cb) {
+    const t = args.t;
+    client.get(AUTH_ENDPOINT, function getCb(err, req, res, _) {
+        // We expect a 401, with no credentials
+        if (err && (err.statusCode === 401)) {
+            t.pass('server is responsive');
+        } else if (err) {
+            /*
+             * err.statusCode will only exist if we actually reached the server,
+             * so we must account for its absence.
+             */
+            const codeStr = err.statusCode ? err.statusCode.toString() : '';
+            t.fail('unexpected response: ' + codeStr + ': ' + err.message);
+        } else {
+            t.fail('unexpected successful response');
+        }
+        cb();
+        return;
+    });
+}
+
+/*
+ * Test that an authenticated client with the correct permissions can
+ * successfully access the Grafana instance through graf-proxy
+ */
+function testPrivilegedUser(args, cb) {
+    const t = args.t;
+    const ufdsInstance = args.ufdsInstance;
+    /*
+     * After adding the test user to the operators group, we need to wait for
+     * graf-proxy's cached copy of the user to expire so the user's new
+     * privileges are reflected.
+     */
+    const waitPeriod = (ufdsInstance.cacheOptions.expiry + 1) * 1000;
+
+    const login = generateLogin();
+    const password = uuid();
+
+    ufdsInstance.addUser({
+        login: login,
+        email: login + '@example.com',
+        userpassword: password
+    }, function addedUser(err, user) {
+        if (err) {
+            t.fail('unable to create user', err);
+            cb();
+            return;
+        }
+        user.addToGroup(ADMIN_GROUP, function addedToGroup(groupErr) {
+            if (groupErr) {
+                t.fail('error adding user to operators', groupErr);
+                cleanupUser(ufdsInstance, login, cb);
+                return;
+            }
+            log.info('Waiting for ' + (waitPeriod / 1000) + 's');
+            setTimeout(tryAccess, waitPeriod, 200, t, ufdsInstance, login,
+                password, cb);
+        });
+    });
+}
+
+
+/*
+ * Test that an authenticated client without sufficient permissions cannot
+ * access the Grafana instance through graf-proxy
+ */
+function testUnprivilegedUser(args, cb) {
+    const t = args.t;
+    const ufdsInstance = args.ufdsInstance;
+
+    const login = generateLogin();
+    const password = uuid();
+
+    ufdsInstance.addUser({
+        login: login,
+        email: login + '@example.com',
+        userpassword: password
+    }, function addedUser(err, _) {
+        if (err) {
+            t.fail('unable to create user', err);
+            cb();
+            return;
+        } else {
+            tryAccess(403, t, ufdsInstance, login, password, cb);
+            return;
+        }
+    });
+}
+
+/*
+ * Checks whether the provided credentials produce the provided desired response
+ * when sent to the graf-proxy server.
+ */
+function tryAccess(desiredCode, t, ufdsInstance, login, password, cb) {
+    client.basicAuth(login, password);
+    client.get(AUTH_ENDPOINT, function getCb(err, req, res, _) {
+        let successMsg;
+        if (desiredCode < 400) {
+            successMsg = 'privileged access granted';
+        } else {
+            successMsg = 'unprivileged access denied';
+        }
+
+        /*
+         * If the error doesn't have a status code, we didn't even reach
+         * the server, so we fail no matter what.
+         */
+        if (err && !err.statusCode) {
+            t.fail('unexpected response: ' + err.message);
+        } else if (res.statusCode === desiredCode) {
+            /*
+             * If the error does have a status code, we did get a
+             * response, so we can safely check it.
+             */
+            t.pass(successMsg);
+        } else {
+            t.fail('unexpected response: ' + res.statusCode + ': ' +
+                res.statusMessage);
+        }
+
+        cleanupUser(ufdsInstance, login, cb);
+    });
+}
+
+// Removes a test user account from ufds
+function cleanupUser(ufdsInstance, login, cb) {
+    ufdsInstance.getUser(login, function getCb(err, user) {
+        if (err) {
+            handleErr(err, user);
+        } else if (user.dclocalconfig) {
+            ufdsInstance.del(user.dclocalconfig.dn, function delCb(delErr) {
+                if (delErr) {
+                    cb();
+                    return;
+                }
+                ufdsInstance.deleteUser(user, handleErr);
+            });
+        } else {
+            ufdsInstance.deleteUser(user, handleErr);
+        }
+    });
+
+    function handleErr(err, user) {
+        if (err) {
+            log.error('unable to delete user ' + user.login + ': ' +
+                err.message);
+        }
+        cb();
+        return;
+    }
+}
+
+function runTests(ufdsInstance, cb) {
+    test('graf-proxy test', function run(t) {
+        const testFuncs = [
+            testServerRunning,
+            testPrivilegedUser,
+            testUnprivilegedUser
+        ];
+        const args = {
+            t: t,
+            ufdsInstance: ufdsInstance
+        };
+        t.plan(testFuncs.length);
+
+        vasync.pipeline({
+            'arg': args,
+            'funcs': testFuncs
+        }, function pipelineCb(_, results) {
+            t.end();
+            cb();
+        });
+    });
+}
+
+// ---- mainline
+runTests(ufdsMaster, function cleanup() {
+    ufdsMaster.close();
+});
diff --git a/test/runtests b/test/runtests
new file mode 100644
index 0000000..b23c0a3
--- /dev/null
+++ b/test/runtests
@@ -0,0 +1,164 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# Run the triton-grafana tests.
+# Run `./runtests -h` for usage info.
+#
+
+if [[ "$TRACE" != "" ]]; then
+    export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+    set -o xtrace
+fi
+
+set -o errexit
+set -o pipefail
+
+#---- guard
+
+if [[ ! -f '/lib/sdc/.sdc-test-no-production-data' ]]; then
+    cat <<EOF
+To run this test you must create the file:
+
+    /lib/sdc/.sdc-test-no-production-data
+
+after ensuring you have no production data on this SDC.
+EOF
+    exit 2
+fi
+
+#---- config
+
+NAME=triton-grafana
+TOP=$(cd "$(dirname "${0}")/../"; pwd)
+
+#---- support functions
+
+function fatal() {
+    echo "$(basename "${0}"): fatal error: ${*}"
+    exit 1
+}
+
+function usage() {
+    echo 'Usage:'
+    echo '  runtests [OPTIONS...]'
+    echo ''
+    echo 'Options:'
+    echo '  -f FILTER   Filter pattern (substring match) for test files to run.'
+}
+
+#---- mainline
+
+start_time=$(date +%s)
+
+# Options.
+opt_test_pattern=
+while getopts 'hf:' opt
+do
+    case "${opt}" in
+        h)
+            usage
+            exit 0
+            ;;
+        f)
+            opt_test_pattern="${OPTARG}"
+            ;;
+        *)
+            usage
+            exit 1
+            ;;
+    esac
+done
+
+OUTPUT_DIR="/var/tmp/${NAME}test"
+echo "# Create output dir (${OUTPUT_DIR})."
+rm -rf "${OUTPUT_DIR}"
+mkdir -p "${OUTPUT_DIR}"
+
+#---- start tests
+
+NODE="${TOP}/build/node/bin/node"
+
+test_files=$(ls -1 ${TOP}/test/*.test.js)
+if [[ -n "${opt_test_pattern}" ]]; then
+    test_files=$(echo "${test_files}" | grep "${opt_test_pattern}" || true)
+    echo "# Running filtered set of test files: ${test_files}"
+fi
+
+for filename in ${test_files}; do
+    f_no_ext=$(basename "${filename}" '.js')
+    "${NODE}" "${filename}" | tee "${OUTPUT_DIR}/${f_no_ext}.tap" || true
+done
+
+#---- summary
+
+start_time="$(date +%s)"
+end_time="$(date +%s)"
+elapsed="$((${end_time} - ${start_time}))"
+
+# We require leading spaces in our search pattern to ensure that we limit our
+# search to subtest results.
+tests="$(grep -Eh "^ +1\.\.[0-9]" ${OUTPUT_DIR}/*.tap | \
+    sed -E 's/^ +//g' | cut -d '.' -f3 | xargs | tr ' ' '+' | bc)" || true
+failed="$(grep -Eh "^ +# failed [0-9]" ${OUTPUT_DIR}/*.tap | \
+    sed -E 's/^ +//g' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)" || true
+skipped="$(grep -Eh "^ +# skip: [0-9]" ${OUTPUT_DIR}/*.tap | \
+    sed -E 's/^ +//g' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)" || true
+
+# Filter out bunyan output, then grep for "function: " line, then get last
+# word on the line, which is the function name.
+failed_test_names="$(grep -Ehv '\{|\}' ${OUTPUT_DIR}/*.tap | \
+    grep -E '^ +function' | rev | cut -d ' ' -f1 | rev)" || true
+
+[[ -z "${tests}" ]] && tests=0
+[[ -z "${failed}" ]] && failed=0
+[[ -z "${skipped}" ]] && skipped=0
+
+passed="$((${tests} - ${failed} - ${skipped}))"
+
+if [[ -t 1 ]]; then
+    # We're on a terminal, so use color
+    COLOR_GREEN="\033[32m"
+    COLOR_RED="\033[31m"
+    COLOR_ORANGE="\033[33m"
+    COLOR_NORMAL="\033[39m"
+else
+    # no terminal, no color
+    COLOR_GREEN=
+    COLOR_RED=
+    COLOR_ORANGE=
+    COLOR_NORMAL=
+fi
+
+# Output the summary
+echo '#'
+echo "# TESTS COMPLETE IN ${elapsed} SECONDS, SUMMARY:"
+echo '#'
+echo -e "#   ${COLOR_GREEN}PASS: ${passed} / ${tests}${COLOR_NORMAL}"
+if [[ "${skipped}" -gt 0 ]]; then
+    echo -e "#   ${COLOR_ORANGE}SKIP: ${skipped} / ${tests}${COLOR_NORMAL}"
+fi
+if [[ "${failed}" -gt 0 ]]; then
+    echo -e "#   ${COLOR_RED}FAIL: ${failed} / ${tests}${COLOR_NORMAL}"
+    echo '#'
+    echo '# FAILED TESTS:'
+    echo '#'
+    for t in ${failed_test_names}; do
+        echo "#   - ${t}"
+    done
+fi
+echo '#'
+
+if [[ "${failed}" -gt 0 ]]; then
+    exit 1
+fi
+
+exit 0
diff --git a/tools/bashstyle b/tools/bashstyle
new file mode 100644
index 0000000..bb8a86c
--- /dev/null
+++ b/tools/bashstyle
@@ -0,0 +1,180 @@
+#!/usr/bin/env node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ */
+
+/*
+ * bashstyle: check bash scripts for adherence to style guidelines, including:
+ *
+ *    o no lines longer than 80 characters
+ *    o file does not end with a blank line
+ *    o Do not use 'local' and var initialization *using a subshell* in the
+ *      same statement. See
+ *      <http://www.tldp.org/LDP/abs/html/localvar.html#EXITVALANOMALY01>
+ *      for why not. Arguably this belongs in a separate 'bashlint'.
+ *
+ * Future enhancements could include:
+ *    o indents consistent with respect to tabs, spaces
+ *    o indents consistently sized (all are some multiple of the smallest
+ *      indent, which must be a tab or 4 or 8 spaces)
+ */
+
+// jsl: ignore
+'use strict';
+// jsl: end
+
+// eslint-disable-next-line
+var VERSION = '2.0.0';
+
+var mod_assert = require('assert');
+var mod_fs = require('fs');
+
+var nerrors = 0;
+
+main();
+process.exit(0);
+
+function main()
+{
+	var files = process.argv.slice(2);
+
+	if (files.length === 0) {
+		console.error('usage: %s file1 [...]',
+		    process.argv.slice(0, 2).join(' '));
+		process.exit(2);
+	}
+
+	files.forEach(checkFile);
+
+	if (nerrors != 0)
+		process.exit(1);
+}
+
+function checkFile(filename)
+{
+	var text = mod_fs.readFileSync(filename, 'utf-8');
+	var lines = text.split('\n');
+	var i;
+	var styled = false;
+	var styleStart;
+
+	mod_assert.ok(lines.length > 0);
+
+	/*
+	 * Expand tabs in each line and check for long lines.
+	 */
+	for (i = 1; i <= lines.length; i++) {
+		var line = expandTabs(lines[i - 1]);
+
+		if (i > 1 && lines[i-2].match(/# BASHSTYLED/)) {
+			continue;
+		}
+
+		if (line.match(/# BEGIN BASHSTYLED/)) {
+			styleStart = i;
+			styled = true;
+		}
+
+		if (line.match(/# END BASHSTYLED/)) {
+			if (styled != true) {
+				nerrors++;
+				console.log('%s: %d: END BASHSTYLED ' +
+				    'w/o corresponding BEGIN', filename, i);
+			}
+			styled = false;
+		}
+
+		/*JSSTYLED*/
+		if (!styled && line.match(/^\s*local\s+(\w+)\s*=.*\$\(/)) {
+			nerrors++;
+			/*JSSTYLED*/
+			var m = line.match(/^\s*local\s+(\w+)\s*=/);
+			console.log('%s: %d: declaring and setting a "local" ' +
+				'var in the same statement ' +
+				'ignores a subshell return code ' +
+				'<http://www.tldp.org/LDP/abs/html/' +
+				'localvar.html#EXITVALANOMALY01>: ' +
+				'local %s=...',
+				filename, i, m[1]);
+		}
+
+		// Regexplanation: non-[, [, space (contents) space, ], non-]
+		// groups before and after brackets to ease search/replace.
+		if (!styled && line.match(/(^|[^\[])\[(\s.+\s)\]([^\]])/)) {
+			nerrors++;
+			console.log('%s: %d: prefer [[ to [ for tests.',
+			    filename, i);
+		}
+
+		if (!styled && line.length > 80) {
+			nerrors++;
+			console.log('%s: %d: line exceeds 80 columns',
+			    filename, i);
+		}
+
+		if (!styled && line.match(/\s+$/)) {
+			nerrors++;
+			console.log('%s: %d: line ends in whitespace',
+			    filename, i);
+		}
+	}
+
+	if (styled) {
+		nerrors++;
+		console.log('%s: %d: BEGIN BASHSTYLED that does not END',
+		            filename, styleStart);
+	}
+
+
+	/*
+	 * No sane editor lets you save a file without a newline at the
+	 * very end.
+	 */
+	if (lines[lines.length - 1].length !== 0) {
+		nerrors++;
+		console.log('%s: %d: file does not end with newline',
+			filename, lines.length);
+	}
+
+	/*
+	 * Since the file will always end with a newline, the last entry of
+	 * "lines" will actually be blank.
+	 */
+	if (lines.length > 1 && lines[lines.length - 2].length === 0) {
+		nerrors++;
+		console.log('%s: %d: file ends with a blank line',
+		    filename, lines.length - 1);
+	}
+}
+
+function expandTabs(text)
+{
+	var out = '';
+	var col = 0;
+	var j, k;
+
+	for (j = 0; j < text.length; j++) {
+		if (text[j] != '\t') {
+			out += text[j];
+			col++;
+			continue;
+		}
+
+		k = 8 - (col % 8);
+		col += k;
+
+		do {
+			out += ' ';
+		} while (--k > 0);
+
+		col += k;
+	}
+
+	return (out);
+}
diff --git a/tools/mk/Makefile.nginx.defs b/tools/mk/Makefile.nginx.defs
new file mode 100644
index 0000000..3f4d9b6
--- /dev/null
+++ b/tools/mk/Makefile.nginx.defs
@@ -0,0 +1,33 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# Makefile.nginx.defs: Makefile for building nginx
+#
+
+TOP ?= $(error You must include Makefile.defs before this makefile)
+
+BUILD		?= build
+NGINX_INSTALL	?= $(BUILD)/nginx
+NGINX_BUILDDIR	?= $(TOP)/$(BUILD)/nginx-build
+DISTCLEAN_FILES	+= $(NGINX_INSTALL)
+
+NGINX_CONFIG_FLAGS += \
+	--prefix=$(TOP)/$(NGINX_INSTALL) \
+	--builddir=$(NGINX_BUILDDIR) \
+	--with-cc-opt="-m64 -std=gnu99 -I/opt/local/include" \
+	--with-ld-opt="-m64 -L/opt/local/lib -R/opt/local/lib -lumem"
+
+NGINX_EXEC	= $(NGINX_INSTALL)/sbin/nginx
+
+# Ensure these use absolute paths to the executables to allow running
+# from a dir other than the project top.
+NGINX		:= $(TOP)/$(NGINX_EXEC)
diff --git a/tools/mk/Makefile.nginx.targ b/tools/mk/Makefile.nginx.targ
new file mode 100644
index 0000000..acb4201
--- /dev/null
+++ b/tools/mk/Makefile.nginx.targ
@@ -0,0 +1,35 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# Makefile.nginx.targ: See Makefile.nginx.defs.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+deps/nginx/auto/configure: | deps/nginx/.git
+
+deps/nginx/Makefile: deps/nginx/auto/configure
+	cd deps/nginx && ./auto/configure $(NGINX_CONFIG_FLAGS)
+
+.PHONY: $(NGINX_EXEC)
+$(NGINX_EXEC): | deps/nginx/Makefile
+	(cd deps/nginx && $(MAKE) && $(MAKE) install)
+	rm -rf deps/nginx/Makefile
+
+
+DISTCLEAN_FILES += $(NGINX_INSTALL)
+
+distclean::
+	-rm -rf $(NGINX_BUILDDIR)
diff --git a/tools/obliterate-grafana-service.sh b/tools/obliterate-grafana-service.sh
new file mode 100755
index 0000000..7798852
--- /dev/null
+++ b/tools/obliterate-grafana-service.sh
@@ -0,0 +1,66 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# Obliterate a Triton grafana service and instances. This is just for
+# development.
+#
+# Usage:
+#       scp tools/obliterate-grafana-service.sh coal:/var/tmp
+#       ssh coal
+#       /var/tmp/obliterate-grafana-service.sh
+#
+
+if [[ -n "$TRACE" ]]; then
+    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+    set -o xtrace
+fi
+set -o errexit
+set -o pipefail
+
+function fatal() {
+    echo "${0}: fatal: \$*" >&2
+    exit 1
+}
+
+function obliterate_grafana_service {
+    local grafSvc
+
+    grafSvc=$(sdc-sapi /services?name=grafana | json -H 0.uuid)
+    if [[ -z "${grafSvc}" ]]; then
+        return
+    fi
+
+    sdc-sapi "/instances?service_uuid=${grafSvc}" \
+        | json -Ha uuid params.alias \
+        | while read uuid alias; do
+            echo "Delete grafana instance ${uuid} (${alias})"
+            sdc-sapi "/instances/${uuid}" -X DELETE
+        done
+
+    echo "Delete grafana service (${grafSvc})"
+    sdc-sapi "/services/${grafSvc}" -X DELETE
+}
+
+# ---- mainline
+
+# Guard from running this in production. This is the same guard file we use
+# for running many of the Triton test suites.
+if [[ ! -f '/lib/sdc/.sdc-test-no-production-data' ]]; then
+    cat <<EOF
+To run this you must create the following file:
+
+    /lib/sdc/.sdc-test-no-production-data
+
+after ensuring you have no production data in this TritonDC.
+EOF
+    exit 2
+fi
+
+obliterate_grafana_service
diff --git a/tools/service_bundle.dtd.1 b/tools/service_bundle.dtd.1
new file mode 100644
index 0000000..e5c2380
--- /dev/null
+++ b/tools/service_bundle.dtd.1
@@ -0,0 +1,1091 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
+
+ CDDL HEADER START
+
+ The contents of this file are subject to the terms of the
+ Common Development and Distribution License (the "License").
+ You may not use this file except in compliance with the License.
+
+ You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
+ or http://www.opensolaris.org/os/licensing.
+ See the License for the specific language governing permissions
+ and limitations under the License.
+
+ When distributing Covered Code, include this CDDL HEADER in each
+ file and include the License file at usr/src/OPENSOLARIS.LICENSE.
+ If applicable, add the following below this CDDL HEADER, with the
+ fields enclosed by brackets "[]" replaced with your own identifying
+ information: Portions Copyright [yyyy] [name of copyright owner]
+
+ CDDL HEADER END
+-->
+
+<!--
+  Service description DTD
+
+    Most attributes are string values (or an individual string from a
+    restricted set), but attributes with a specific type requirement are
+    noted in the comment describing the element.
+-->
+
+<!--
+  XInclude support
+
+    A series of service bundles may be composed via the xi:include tag.
+    smf(5) tools enforce that all bundles be of the same type.
+-->
+
+<!--
+     These entities are used for the property, propval and property_group
+     elements, that require type attributes for manifest, while for profiles
+     the type attributes are only implied.
+-->
+
+<!ENTITY % profile "IGNORE">
+<!ENTITY % manifest "INCLUDE">
+
+<!ELEMENT xi:include
+  (xi:fallback)
+  >
+<!ATTLIST xi:include
+  href CDATA #REQUIRED
+  parse (xml|text) "xml"
+  encoding CDATA #IMPLIED
+  xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude"
+  >
+
+<!ELEMENT xi:fallback
+  ANY
+  >
+<!ATTLIST xi:fallback
+  xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude"
+  >
+
+<!--
+  stability
+
+    This element associates an SMI stability level with the parent
+    element.  See attributes(5) for an explanation of interface
+    stability levels.
+
+    Its attribute is
+
+	value	The stability level of the parent element.
+-->
+
+<!ELEMENT stability EMPTY>
+
+<!ATTLIST stability
+	value		( Standard | Stable | Evolving | Unstable |
+			External | Obsolete ) #REQUIRED >
+
+<!-- Property value lists -->
+
+<!--
+  value_node
+
+    This element represents a single value within any of the typed
+    property value lists.
+
+    Its attribute is
+
+	value	The value for this node in the list.
+-->
+
+<!ELEMENT value_node EMPTY>
+
+<!ATTLIST value_node
+	value CDATA #REQUIRED>
+
+<!--
+  count_list
+  integer_list
+  opaque_list
+  host_list
+  hostname_list
+  net_address_list
+  net_address_v4_list
+  net_address_v6_list
+  time_list
+  astring_list
+  ustring_list
+  boolean_list
+  fmri_list
+  uri_list
+
+    These elements represent the typed lists of values for a property.
+    Each contains one or more value_node elements representing each
+    value on the list.
+
+    None of these elements has attributes.
+-->
+
+<!ELEMENT count_list
+	( value_node+ )>
+
+<!ATTLIST count_list>
+
+<!ELEMENT integer_list
+	( value_node+ )>
+
+<!ATTLIST integer_list>
+
+<!ELEMENT opaque_list
+	( value_node+ )>
+
+<!ATTLIST opaque_list>
+
+<!ELEMENT host_list
+	( value_node+ )>
+
+<!ATTLIST host_list>
+
+<!ELEMENT hostname_list
+	( value_node+ )>
+
+<!ATTLIST hostname_list>
+
+<!ELEMENT net_address_list
+	( value_node+ )>
+
+<!ATTLIST net_address_list>
+
+<!ELEMENT net_address_v4_list
+	( value_node+ )>
+
+<!ATTLIST net_address_v4_list>
+
+<!ELEMENT net_address_v6_list
+	( value_node+ )>
+
+<!ATTLIST net_address_v6_list>
+
+<!ELEMENT time_list
+	( value_node+ )>
+
+<!ATTLIST time_list>
+
+<!ELEMENT astring_list
+	( value_node+ )>
+
+<!ATTLIST astring_list>
+
+<!ELEMENT ustring_list
+	( value_node+ )>
+
+<!ATTLIST ustring_list>
+
+<!ELEMENT boolean_list
+	( value_node+ )>
+
+<!ATTLIST boolean_list>
+
+<!ELEMENT fmri_list
+	( value_node+ )>
+
+<!ATTLIST fmri_list>
+
+<!ELEMENT uri_list
+	( value_node+ )>
+
+<!ATTLIST uri_list>
+
+<!-- Properties and property groups -->
+
+<!--
+   property
+
+     This element is for a singly or multiply valued property within a
+     property group.  It contains an appropriate value list element,
+     which is expected to be consistent with the type attribute.
+
+     Its attributes are
+
+	name	The name of this property.
+
+	type	The data type for this property.
+
+	override These values should replace values already in the
+		repository.
+-->
+
+<![%profile;[
+<!ELEMENT property
+	( count_list | integer_list | opaque_list | host_list | hostname_list |
+	net_address_list | net_address_v4_list | net_address_v6_list |
+	time_list | astring_list | ustring_list | boolean_list | fmri_list |
+	uri_list )? >
+
+<!ATTLIST property
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #IMPLIED
+	override	( true | false ) "false" >
+]]>
+	
+<![%manifest;[
+<!ELEMENT property
+	( count_list | integer_list | opaque_list | host_list | hostname_list |
+	net_address_list | net_address_v4_list | net_address_v6_list |
+	time_list | astring_list | ustring_list | boolean_list | fmri_list |
+	uri_list )? >
+
+<!ATTLIST property
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #REQUIRED
+	override	( true | false ) "false" >
+]]>
+
+<!--
+   propval
+
+     This element is for a singly valued property within a property
+     group.  List-valued properties must use the property element above.
+
+     Its attributes are
+
+	name	The name of this property.
+
+	type	The data type for this property.
+
+	value	The value for this property.  Must match type
+		restriction of type attribute.
+
+	override This value should replace any values already in the
+		repository.
+-->
+
+<![%profile;[
+<!ELEMENT propval EMPTY>
+
+<!ATTLIST propval
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #IMPLIED
+	value		CDATA #REQUIRED
+	override	( true | false ) "false" >
+]]>
+
+<![%manifest;[
+<!ELEMENT propval EMPTY>
+
+<!ATTLIST propval
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #REQUIRED
+	value		CDATA #REQUIRED
+	override	( true | false ) "false" >
+]]>
+
+<!--
+  property_group
+
+    This element is for a set of related properties on a service or
+    instance.  It contains an optional stability element, as well as
+    zero or more property-containing elements.
+
+    Its attributes are
+
+	name	The name of this property group.
+
+	type	A category for this property group.  Groups of type
+		"framework", "implementation" or "template" are primarily
+		of interest to the service management facility, while
+		groups of type "application" are expected to be only of
+		interest to the service to which this group is attached.
+		Other types may be introduced using the service symbol
+		namespace conventions.
+
+	delete	If in the repository, this property group should be removed.
+-->
+
+<![%profile;[
+<!ELEMENT property_group
+	( stability?, ( propval | property )* )>
+
+<!ATTLIST property_group
+	name		CDATA #REQUIRED
+	type		CDATA #IMPLIED
+	delete		( true | false ) "false" >
+]]>
+
+<![%manifest;[
+<!ELEMENT property_group
+	( stability?, ( propval | property )* )>
+
+<!ATTLIST property_group
+	name		CDATA #REQUIRED
+	type		CDATA #REQUIRED
+	delete		( true | false ) "false" >
+]]>
+
+<!--
+  service_fmri
+
+    This element defines a reference to a service FMRI (for either a
+    service or an instance).
+
+    Its attribute is
+
+	value	The FMRI.
+-->
+
+<!ELEMENT service_fmri EMPTY>
+
+<!ATTLIST service_fmri
+	value		CDATA #REQUIRED>
+
+<!-- Dependencies -->
+
+<!--
+  dependency
+
+    This element identifies a group of FMRIs upon which the service is
+    in some sense dependent.  Its interpretation is left to the
+    restarter to which a particular service instance is delegated.  It
+    contains a group of service FMRIs, as well as a block of properties.
+
+    Its attributes are
+
+	name	The name of this dependency.
+
+	grouping The relationship between the various FMRIs grouped
+		here; "require_all" of the FMRIs to be online, "require_any"
+		of the FMRIs to be online, or "exclude_all" of the FMRIs
+		from being online or in maintenance for the dependency to
+		be satisfied.  "optional_all" dependencies are satisfied
+		when all of the FMRIs are either online or unable to come
+		online (because they are disabled, misconfigured, or one
+		of their dependencies is unable to come online).
+
+	restart_on The type of events from the FMRIs that the service should
+		be restarted for.  "error" restarts the service if the
+		dependency is restarted due to hardware fault.  "restart"
+		restarts the service if the dependency is restarted for
+		any reason, including hardware fault.  "refresh" restarts
+		the service if the dependency is refreshed or restarted for
+		any reason.  "none" will never restart the service due to
+		dependency state changes.
+
+	type	The type of dependency: on another service ('service'), on
+		a filesystem path ('path'), or another dependency type.
+
+	delete	This dependency should be deleted.
+-->
+
+<!ELEMENT dependency
+	( service_fmri*, stability?, ( propval | property )* ) >
+
+<!ATTLIST dependency
+	name		CDATA #REQUIRED
+	grouping	( require_all | require_any | exclude_all |
+			optional_all ) #REQUIRED
+	restart_on	( error | restart | refresh | none ) #REQUIRED
+	type		CDATA #REQUIRED
+	delete		( true | false ) "false" >
+
+<!-- Dependents -->
+
+<!--
+  dependent
+
+    This element identifies a service which should depend on this service.  It
+    corresponds to a dependency in the named service.  The grouping and type
+    attributes of that dependency are implied to be "require_all" and
+    "service", respectively.
+
+    Its attributes are
+
+	name	The name of the dependency property group to create in the
+		dependent entity.
+
+	grouping The grouping relationship of the dependency property
+		group to create in the dependent entity.  See "grouping"
+		attribute on the dependency element.
+
+	restart_on The type of events from this service that the named service
+		should be restarted for.
+
+	delete	True if this dependent should be deleted.
+
+	override Whether to replace an existing dependent of the same name.
+
+-->
+
+<!ELEMENT dependent
+	( service_fmri, stability?, ( propval | property )* ) >
+
+<!ATTLIST dependent
+	name		CDATA #REQUIRED
+	grouping	( require_all | require_any | exclude_all |
+			optional_all) #REQUIRED
+	restart_on	( error | restart | refresh | none) #REQUIRED
+	delete		( true | false ) "false"
+	override	( true | false ) "false" >
+
+<!-- Method execution context, security profile, and credential definitions -->
+
+<!--
+  envvar
+
+    An environment variable. It has two attributes:
+
+	name	The name of the environment variable.
+	value	The value of the environment variable.
+-->
+
+<!ELEMENT envvar EMPTY>
+
+<!ATTLIST envvar
+	name		CDATA #REQUIRED
+	value		CDATA #REQUIRED >
+
+<!--
+  method_environment
+
+    This element defines the environment for a method. It has no
+    attributes, and one or more envvar child elements.
+-->
+
+<!ELEMENT method_environment (envvar+) >
+
+<!ATTLIST method_environment>
+
+<!--
+  method_profile
+
+    This element indicates which exec_attr(5) profile applies to the
+    method context being defined.
+
+    Its attribute is
+
+	name	The name of the profile.
+-->
+
+<!ELEMENT method_profile EMPTY>
+
+<!ATTLIST method_profile
+	name		CDATA #REQUIRED >
+
+<!--
+  method_credential
+
+    This element specifies credential attributes for the execution
+    method to use.
+
+    Its attributes are
+
+	user	The user ID, in numeric or text form.
+
+	group	The group ID, in numeric or text form.  If absent or
+		":default", the group associated with the user in the
+		passwd database.
+
+	supp_groups Supplementary group IDs to be associated with the
+		method, separated by commas or spaces.  If absent or
+		":default", initgroups(3C) will be used.
+
+	privileges An optional string specifying the privilege set.
+
+	limit_privileges An optional string specifying the limit
+		privilege set.
+-->
+
+<!ELEMENT method_credential EMPTY>
+
+<!ATTLIST method_credential
+	user		CDATA #REQUIRED
+	group		CDATA #IMPLIED
+	supp_groups	CDATA #IMPLIED
+	privileges	CDATA #IMPLIED
+	limit_privileges CDATA #IMPLIED >
+
+<!--
+  method_context
+
+    This element combines credential and resource management attributes
+    for execution methods.  It may contain a method_environment, or
+    a method_profile or method_credential element.
+
+    Its attributes are
+
+	working_directory The home directory to launch the method from.
+		":default" can be used as a token to indicate use of the
+		user specified by the credential or profile specified.
+
+	project	The project ID, in numeric or text form.  ":default" can
+		be used as a token to indicate use of the project
+		identified by getdefaultproj(3PROJECT) for the non-root
+		user specified by the credential or profile specified.
+		If the user is root, ":default" designates the project
+		the restarter is running in.
+
+	resource_pool The resource pool name to launch the method on.
+		":default" can be used as a token to indicate use of the
+		pool specified in the project(4) entry given in the
+		"project" attribute above.
+-->
+<!ELEMENT method_context
+	( (method_profile | method_credential)?, method_environment? ) >
+
+<!ATTLIST method_context
+	working_directory	CDATA #IMPLIED
+	project			CDATA #IMPLIED
+	resource_pool		CDATA #IMPLIED >
+
+<!-- Restarter delegation, methods, and monitors -->
+
+<!--
+  exec_method
+
+    This element describes one of the methods used by the designated
+    restarter to act on the service instance.  Its interpretation is
+    left to the restarter to which a particular service instance is
+    delegated.  It contains a set of attributes, an optional method
+    context, and an optional stability element for the optional
+    properties that can be included.
+
+    Its attributes are
+
+	type	The type of method, either "method" or "monitor".
+
+	name	Name of this execution method.  The method names are
+		usually a defined interface of the restarter to which an
+		instance of this service is delegated.
+
+	exec	The string identifying the action to take.  For
+		svc.startd(1M), this is a string suitable to pass to
+		exec(2).
+
+	timeout_seconds [integer] Duration, in seconds, to wait for this
+		method to complete.  A '0' or '-1' denotes an infinite
+		timeout.
+
+	delete	If in the repository, the property group for this method
+		should be removed.
+-->
+
+<!ELEMENT exec_method
+	( method_context?, stability?, ( propval | property )* ) >
+
+<!ATTLIST exec_method
+	type		( method | monitor ) #REQUIRED
+	name		CDATA #REQUIRED
+	exec		CDATA #REQUIRED
+	timeout_seconds	CDATA #REQUIRED
+	delete		( true | false ) "false" >
+
+<!--
+  restarter
+
+    A flag element identifying the restarter to which this service or
+    service instance is delegated.  Contains the FMRI naming the
+    delegated restarter.
+
+    This element has no attributes.
+-->
+
+<!ELEMENT restarter
+	( service_fmri ) >
+
+<!ATTLIST restarter>
+
+<!--
+  Templates
+-->
+
+<!--
+  doc_link
+
+    The doc_link relates a resource described by the given URI to the
+    service described by the containing template.  The resource is
+    expected to be a documentation or elucidatory reference of some
+    kind.
+
+    Its attributes are
+
+      name      A label for this resource.
+
+      uri       A URI to the resource.
+-->
+
+<!ELEMENT doc_link EMPTY>
+
+<!ATTLIST doc_link
+	name		CDATA #REQUIRED
+	uri		CDATA #REQUIRED >
+
+<!--
+  manpage
+
+    The manpage element connects the reference manual page to the
+    template's service.
+
+    Its attributes are
+
+      title     The manual page title.
+
+      section   The manual page's section.
+
+      manpath   The MANPATH environment variable, as described in man(1)
+                that is required to reach the named manual page
+-->
+
+<!ELEMENT manpage EMPTY>
+
+<!ATTLIST manpage
+	title		CDATA #REQUIRED
+	section		CDATA #REQUIRED
+	manpath		CDATA ":default" >
+
+<!--
+  documentation
+
+    The documentation element groups an arbitrary number of doc_link
+    and manpage references.
+
+    It has no attributes.
+-->
+
+<!ELEMENT documentation
+	( doc_link | manpage )* >
+
+<!ATTLIST documentation>
+
+<!--
+  loctext
+
+    The loctext element is a container for localized text.
+
+    Its sole attribute is
+
+	xml:lang The name of the locale, in the form accepted by LC_ALL,
+		etc.  See locale(5).
+-->
+<!ELEMENT loctext
+        (#PCDATA) >
+
+<!ATTLIST loctext
+        xml:lang	CDATA #REQUIRED >
+
+<!--
+  description
+
+    The description holds a set of potentially longer, localized strings that
+    consist of a short description of the service.
+
+    The description has no attributes.
+-->
+<!ELEMENT description
+        ( loctext+ ) >
+
+<!ATTLIST description>
+
+<!--
+  common_name
+
+    The common_name holds a set of short, localized strings that
+    represent a well-known name for the service in the given locale.
+
+    The common_name has no attributes.
+-->
+<!ELEMENT common_name
+        ( loctext+ ) >
+
+<!ATTLIST common_name>
+
+<!--
+  units
+
+    The units a numerical property is expressed in.
+-->
+
+<!ELEMENT units
+	( loctext+ ) >
+
+<!ATTLIST units>
+
+<!--
+  visibility
+
+    Expresses how a property is typically accessed.  This isn't
+    intended as access control, but as an indicator as to how a
+    property is used.
+
+    Its attributes are:
+
+      value     'hidden', 'readonly', or 'readwrite' indicating that
+		the property should be hidden from the user, shown but
+		read-only, or modifiable.
+-->
+
+<!ELEMENT visibility EMPTY>
+
+<!ATTLIST visibility
+	value	( hidden | readonly | readwrite ) #REQUIRED >
+
+<!--
+  value
+
+    Describes a legal value for a property value, and optionally contains a
+    human-readable name and description for the specified property
+    value.
+
+    Its attributes are:
+
+      name	A string representation of the value.
+-->
+
+<!ELEMENT value
+	( common_name?, description? ) >
+
+<!ATTLIST value
+	name	CDATA #REQUIRED >
+
+<!--
+  values
+
+    Human-readable names and descriptions for valid values of a property.
+-->
+
+<!ELEMENT values
+	(value+) >
+
+<!ATTLIST values>
+
+<!--
+  cardinality
+
+    Places a constraint on the number of values the property can take
+    on.
+
+    Its attributes are:
+	min	minimum number of values
+	max	maximum number of values
+
+    Both attributes are optional.  If min is not specified, it defaults to
+    0.  If max is not specified it indicates an unlimited number of values.
+    If neither is specified this indicates 0 or more values.
+-->
+
+<!ELEMENT cardinality EMPTY>
+
+<!ATTLIST cardinality
+	min	CDATA "0"
+	max	CDATA "18446744073709551615">
+
+<!--
+  internal_separators
+
+    Indicates the separators used within a property's value used to
+    separate the actual values.  Used in situations where multiple
+    values are packed into a single property value instead of using a
+    multi-valued property.
+-->
+
+<!ELEMENT internal_separators
+	(#PCDATA) >
+
+<!ATTLIST internal_separators>
+
+<!--
+  range
+
+    Indicates a range of possible integer values.
+
+    Its attributes are:
+
+      min	The minimum value of the range (inclusive).
+      max	The maximum value of the range (inclusive).
+-->
+
+<!ELEMENT range EMPTY>
+
+<!ATTLIST range
+	min	CDATA #REQUIRED
+	max	CDATA #REQUIRED >
+
+<!--
+  constraints
+
+    Provides a set of constraints on the values a property can take on.
+-->
+
+<!ELEMENT constraints
+	( value*, range* ) >
+<!ATTLIST constraints>
+
+<!--
+  include_values
+
+    Includes an entire set of values in the choices block.
+
+    Its attributes are:
+
+	type    Either "constraints" or "values", indicating an
+		inclusion of all values allowed by the property's
+		constraints or all values for which there are
+		human-readable names and descriptions, respectively.
+-->
+
+<!ELEMENT include_values EMPTY>
+
+<!ATTLIST include_values
+	type	( constraints | values ) #REQUIRED >
+
+<!--
+  choices
+
+    Provides a set of common choices for the values a property can take
+    on.  Useful in those cases where the possibilities are unenumerable
+    or merely inconveniently legion, and a manageable subset is desired
+    for presentation in a user interface.
+-->
+
+<!ELEMENT choices
+	( value*, range*, include_values* ) >
+
+<!ATTLIST choices>
+
+<!--
+  prop_pattern
+
+
+    The prop_pattern describes one property of the enclosing property group
+    pattern.
+
+    Its attributes are:
+
+	name    The property's name.
+	type    The property's type.
+	required
+		If the property group is present, this property is required.
+
+	type can be omitted if required is false.
+-->
+
+<!ELEMENT prop_pattern
+	( common_name?, description?, units?, visibility?, cardinality?,
+	  internal_separators?, values?, constraints?, choices? ) >
+
+<!ATTLIST prop_pattern
+	name		CDATA	#REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #IMPLIED
+	required	( true | false )	"false" >
+
+<!--
+  pg_pattern
+
+    The pg_pattern describes one property group.
+    Depending on the element's attributes, these descriptions may apply
+    to just the enclosing service/instance, instances of the enclosing
+    service, delegates of the service (assuming it is a restarter), or
+    all services.
+
+    Its attributes are:
+
+	name    The property group's name.  If not specified, it
+		matches all property groups with the specified type.
+	type    The property group's type.  If not specified, it
+		matches all property groups with the specified name.
+	required
+		If the property group is required.
+	target	The scope of the pattern, which may be all, delegate,
+		instance, or this.  'all' is reserved for framework use
+		and applies the template to all services on the system.
+		'delegate' is reserved for restarters, and means the
+		template applies to all services which use the restarter.
+		'this' would refer to the defining service or instance.
+		'instance' can only be used in a service's template block,
+		and means the definition applies to all instances of this
+		service.
+
+-->
+
+<!ELEMENT pg_pattern
+	( common_name?, description?, prop_pattern* ) >
+
+<!ATTLIST pg_pattern
+	name		CDATA	""
+	type		CDATA	""
+	required	( true | false )	"false"
+	target		( this | instance | delegate | all )	"this" >
+
+<!--
+  template
+
+    The template contains a collection of metadata about the service.
+    It contains a localizable string that serves as a common,
+    human-readable name for the service.  (This name should be less than
+    60 characters in a single byte locale.)  The template may optionally
+    contain a longer localizable description of the service, a
+    collection of links to documentation, either in the form of manual
+    pages or in the form of URI specifications to external documentation
+    sources (such as docs.sun.com).
+
+    The template has no attributes.
+-->
+<!ELEMENT template
+        ( common_name, description?, documentation?, pg_pattern* ) >
+
+<!ATTLIST template>
+
+<!-- Notification Parameters -->
+
+<!ELEMENT paramval EMPTY>
+
+<!ATTLIST paramval
+	name		CDATA #REQUIRED
+	value		CDATA #REQUIRED>
+
+<!ELEMENT parameter
+	( value_node* )>
+
+<!ATTLIST parameter
+	name		CDATA #REQUIRED>
+
+<!ELEMENT event EMPTY>
+
+<!ATTLIST event
+	value		CDATA #REQUIRED>
+
+<!ELEMENT type
+	( ( parameter | paramval )* )>
+
+<!ATTLIST type
+	name		CDATA #REQUIRED
+	active		( true | false ) "true" >
+
+<!--
+  notification parameters
+
+    This element sets the notification parameters for Software Events and
+    Fault Management problem lifecycle events.
+-->
+
+<!ELEMENT notification_parameters
+	( event, type+ )>
+
+<!ATTLIST notification_parameters>
+
+<!-- Services and instances -->
+
+<!--
+  create_default_instance
+
+    A flag element indicating that an otherwise empty default instance
+    of this service (named "default") should be created at install, with
+    its enabled property set as given.
+
+    Its attribute is
+
+	enabled	[boolean] The initial value for the enabled state of
+		this instance.
+-->
+
+<!ELEMENT create_default_instance EMPTY >
+
+<!ATTLIST create_default_instance
+	enabled		( true | false ) #REQUIRED >
+
+<!--
+  single_instance
+
+    A flag element stating that this service can only have a single
+    instance on a particular system.
+-->
+
+<!ELEMENT single_instance EMPTY>
+
+<!ATTLIST single_instance>
+
+<!--
+  instance
+
+    The service instance is the object representing a software component
+    that will run on the system if enabled.  It contains an enabled
+    element, a set of dependencies on other services, potentially
+    customized methods or configuration data, an optional method
+    context, and a pointer to its restarter.  (If no restarter is
+    specified, the master restarter, svc.startd(1M), is assumed to be
+    responsible for the service.)
+
+    Its attributes are
+
+	name	The canonical name for this instance of the service.
+
+	enabled	[boolean] The initial value for the enabled state of
+		this instance.
+-->
+
+<!ELEMENT instance
+	( restarter?, dependency*, dependent*, method_context?,
+	exec_method*, notification_parameters*, property_group*,
+	template? ) >
+
+<!ATTLIST instance
+	name		CDATA #REQUIRED
+	enabled		( true | false ) #REQUIRED >
+
+<!--
+  service
+
+    The service contains the set of instances defined by default for
+    this service, an optional method execution context, any default
+    methods, the template, and various restrictions or advice applicable
+    at installation.  The method execution context and template elements
+    are required for service_bundle documents with type "manifest", but
+    are optional for "profile" or "archive" documents.
+
+    Its attributes are
+
+	name	The canonical name for the service.
+
+	version	[integer] The integer version for this service.
+
+	type	Whether this service is a simple service, a delegated
+		restarter, or a milestone (a synthetic service that
+		collects a group of dependencies).
+-->
+
+<!ELEMENT service
+	( create_default_instance?, single_instance?, restarter?,
+	dependency*, dependent*, method_context?, exec_method*,
+	notification_parameters*, property_group*, instance*,
+	stability?, template? ) >
+
+<!ATTLIST service
+	name		CDATA #REQUIRED
+	version		CDATA #REQUIRED
+	type		( service | restarter | milestone ) #REQUIRED >
+
+<!--
+  service_bundle
+
+    The bundle possesses two attributes:
+
+	type	How this file is to be understood by the framework (or
+		used in a non-framework compliant way). Standard types
+		are 'archive', 'manifest', and 'profile'.
+	
+	name	A name for the bundle.  Manifests should be named after
+		the package which delivered them; profiles should be
+		named after the "feature set nickname" they intend to
+		enable.
+-->
+
+<!ELEMENT service_bundle
+	( service_bundle* | service* | xi:include* )>
+
+<!ATTLIST service_bundle
+	type		CDATA #REQUIRED
+	name		CDATA #REQUIRED>
