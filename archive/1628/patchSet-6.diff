commit 3f6f0f40a234713c02c31ecf2eead5f5d17c109c (refs/changes/28/1628/6)
Author: Marsell Kukuljevic <marsell@joyent.com>
Date:   2017-06-01T09:46:22+00:00 (2 years, 4 months ago)
    
    PUBAPI-1362: When cloudapi can't get network_uuid for a NIC it refuses to return a machine or list of machines

diff --git a/docs/index.md b/docs/index.md
index ed4ce71..0bbc5bf 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -3924,6 +3924,15 @@ credentials | Boolean  | Whether to include the generated credentials for instan
 Note that if the special input `tags=*` is provided, any other input will be
 completely ignored and the response will return all instances with any tag.
 
+Be aware that in the case of instances created with vmadm directly (i.e. not
+through CloudAPI), ips, networks, primaryIp and package may be in a different
+format than expected. The `ips` array can contain the value "dhcp", not just
+IP strings, the `networks` array can contain null values for networks that
+CloudAPI was unable to determine (e.g. as a result of a "dhcp" IP), `primaryIp`
+too can have the value of "dhcp", and the package string can be empty instead of
+a UUID. Unless ops is bypassing CloudAPI and creating instances directly, it is
+unlikely you need concern yourself with this caveat.
+
 ### Returns
 
 An array of instance objects, which contain:
@@ -4104,6 +4113,15 @@ compute_node | String  | UUID of the server on which the instance is located
 package     | String   | The id or name of the package used to create this instance
 dns_names   | Array[String] | DNS names of the instance (if the instance is using [CNS](https://docs.joyent.com/public-cloud/network/cns))
 
+Be aware that in the case of instances created with vmadm directly (i.e. not
+through CloudAPI), ips, networks, primaryIp and package may be in a different
+format than expected. The `ips` array can contain the value "dhcp", not just
+IP strings, the `networks` array can contain null values for networks that
+CloudAPI was unable to determine (e.g. as a result of a "dhcp" IP), `primaryIp`
+too can have the value of "dhcp", and the package string can be empty instead of
+a UUID. Unless ops is bypassing CloudAPI and creating instances directly, it is
+unlikely you need concern yourself with this caveat.
+
 ### Errors
 
 For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
diff --git a/lib/machines.js b/lib/machines.js
index 116c7f4..45a350d 100644
--- a/lib/machines.js
+++ b/lib/machines.js
@@ -876,16 +876,23 @@ function loadMachine(req, res, next) {
                     return cb(null, req.packages);
                 }
 
-                if (!machine.billing_id) {
-                    return cb(new ResourceNotFoundError('Cannot find ' +
-                        'machine package'));
+                var pkgUuid = machine.billing_id;
+
+                if (!pkgUuid) {
+                    req.log.warn('Ignoring missing billing_id');
+                    return cb();
                 }
 
-                return req.sdc.papi.get(machine.billing_id, {},
-                                        function (err, pkg) {
+                return req.sdc.papi.get(pkgUuid, {}, function (err, pkg) {
                     if (err) {
+                        if (err.name === 'ResourceNotFoundError') {
+                            req.log.warn('Ignoring missing package in papi:',
+                                pkgUuid);
+                            return cb();
+                        }
                         return cb(err);
                     }
+
                     req.packages = [pkg];
                     req.log.debug({'package': req.pkg},
                         'selected package loaded');
@@ -962,6 +969,10 @@ function loadNetworkUuids(req, machine, cb) {
 
         return napi.getNic(vmapiNic.mac, options, function (err, napiNic) {
             if (err) {
+                if (err.name === 'ResourceNotFoundError') {
+                    req.log.warn('Ignoring missing nic in napi:', vmapiNic.mac);
+                    return next();
+                }
                 return next(err);
             }
 
