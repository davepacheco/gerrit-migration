commit e97075b0e9ed8842ad043ec3e0471e6c05594a4e (refs/changes/07/507/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2016-09-16T13:33:16-07:00 (3 years, 1 month ago)
    
    joyent/node-cueball#13 Pool can enter "failed" when 1 backend is down out of N and spares = 1
    joyent/node-cueball#18 periodic randomness in preference lists

diff --git a/lib/pool.js b/lib/pool.js
index 9bc34fe..ee8a6bb 100644
--- a/lib/pool.js
+++ b/lib/pool.js
@@ -403,6 +403,10 @@ ConnectionFSM.prototype.state_idle = function (on, once, timeout) {
 		self.gotoState('error');
 		self.cf_pool._incrCounter('end-during-idle');
 	});
+	once(this.cf_conn, 'end', function () {
+		self.cf_lastError = new mod_errors.ConnectionClosedError(self);
+		self.gotoState('error');
+	});
 	once(this, 'closeAsserted', function () {
 		self.gotoState('closed');
 	});
@@ -482,6 +486,10 @@ ConnectionFSM.prototype.state_ping = function (on, once, timeout) {
 		self.gotoState('error');
 		self.cf_pool._incrCounter('end-during-ping');
 	});
+	once(this.cf_conn, 'end', function () {
+		self.cf_lastError = new mod_errors.ConnectionClosedError(self);
+		self.gotoState('error');
+	});
 	once(this, 'closeAsserted', function () {
 		self.cf_lastError = new mod_errors.ConnectionClosedError(self);
 		self.gotoState('error');
@@ -544,6 +552,10 @@ ConnectionFSM.prototype.state_busy = function (on, once, timeout) {
 		self.cf_closeAfter = true;
 		self.cf_pool._incrCounter('end-during-busy');
 	});
+	once(this.cf_conn, 'end', function () {
+		self.cf_lastError = new mod_errors.ConnectionClosedError(self);
+		self.gotoState('error');
+	});
 	once(this.cf_conn, 'close', function () {
 		self.cf_lastError = new mod_errors.ConnectionClosedError(self);
 		self.gotoState('error');
