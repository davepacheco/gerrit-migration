commit 4e611c9c9bc1fe178abd68eadf2186c8870fed56
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2019-06-03T08:59:55-07:00 (4 months ago)
    
    TRITON-1713 docker tests crashing in nightly with a fatal relocation error

diff --git a/test/runtests b/test/runtests
index 4de11a3..ff6d54c 100755
--- a/test/runtests
+++ b/test/runtests
@@ -48,10 +48,29 @@ start_time=$(date +%s)
 API=docker
 TOP=$(cd $(dirname $0)/../; pwd)
 NODE_INSTALL=$TOP/build/node
+NODE_EXECUTABLE=$TOP/build/node/bin/node
 OUTPUT_DIR=/var/tmp/${API}test
 TAPE=$TOP/node_modules/.bin/tape
 FAILING_LIST=$OUTPUT_DIR/failing-tests.txt
 
+# TRITON-1713
+# As the docker test suite is run from the GZ (boo), the gcc libraries are not
+# found/loaded correctly (since the rpath of the node executable is set to the
+# path inside the zone), and the node executable *may* crash, e.g.:
+#   ld.so.1: node: fatal: relocation error: file /zones/${docker}/root/opt/
+#     smartdc/docker/build/node/bin/node: symbol
+#     _ZNSt8__detail15_List_node_base7_M_hookEPS0_: referenced symbol not found
+# To work around this we specifically add the necessary gcc library paths to the
+# node executable, but using the GZ path in addition to the zone path.
+NODE_RPATH=$(elfdump $NODE_EXECUTABLE | grep RPATH | awk '{print $4}')
+if [[ $NODE_RPATH != *"/zones/"* ]]; then
+    # Replace '/opt/local/' with the path from $TOP, so we end up with a GZ
+    # path, then append these GZ library paths to the existing node RPATH.
+    ESCAPED_TOP=$(printf '%s' "$TOP" | sed 's/[[\.*^$/]/\\&/g')
+    NODE_GZ_RPATH=$(printf '%s' "$NODE_RPATH" | sed "s/\/opt\/local\//$ESCAPED_TOP\/..\/..\/local\//g")
+    /usr/bin/elfedit -e "dyn:runpath $NODE_RPATH:$NODE_GZ_RPATH" $NODE_EXECUTABLE
+fi
+
 # Options.
 opt_test_pattern=
 opt_stop_on_failure=
