From fbc791a01eb5a185001771bda0901c7aa5fcf047 Mon Sep 17 00:00:00 2001
From: Dave Eddy <dave@daveeddy.com>
Date: Wed, 27 Feb 2019 14:53:45 -0500
Subject: [PATCH] joyent/node-boray#2 add support for "listobjects"

---
 lib/bucket_client.js  | 37 +++++++++++++++++++-
 lib/bucket_objects.js | 81 ++++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 116 insertions(+), 2 deletions(-)

diff --git a/lib/bucket_client.js b/lib/bucket_client.js
index 2f81d63..05ff4d9 100644
--- a/lib/bucket_client.js
+++ b/lib/bucket_client.js
@@ -792,6 +792,36 @@ MorayClient.prototype.getObjectNoVnode = function getObjectNoVnode(owner, bucket
     }
 };
 
+/**
+ * Lists objects
+ */
+MorayClient.prototype.listObjects = function listObjects(owner, bucket_id, vnode) {
+    var rpcctx = this.ctxCreateForEmitter();
+    var rv;
+
+    if (!rpcctx) {
+        return (emitUnavailable());
+    }
+
+    rv = objects.listObjects(rpcctx, owner, bucket_id, vnode);
+    this.releaseWhenDone(rpcctx, rv);
+
+    return (rv);
+};
+
+MorayClient.prototype.listObjectsNoVnode = function listObjectsNoVnode(owner, bucket_id) {
+    var rpcctx = this.ctxCreateForEmitter();
+    var rv;
+
+    if (!rpcctx) {
+        return (emitUnavailable());
+    }
+
+    rv = objects.listObjectsNoVnode(rpcctx, owner, bucket_id);
+    this.releaseWhenDone(rpcctx, rv);
+
+    return (rv);
+};
 
 /**
  * Deletes an Object
@@ -846,6 +876,9 @@ MorayClient.prototype.findObjects = function findObjects(b, f, opts) {
     assert.string(f, 'filter');
     assert.object(opts, 'options');
     assert.string(opts.hashkey, 'opts.hashkey');
+    assert.optionalObject(opts.bucket_data, 'opts.bucket_data');
+
+    var bucket_data = opts.bucket_data || {};
 
     opts = jsprim.mergeObjects(opts, null, {
         requireIndexes: this.requireIndexes,
@@ -892,7 +925,9 @@ MorayClient.prototype.findObjects = function findObjects(b, f, opts) {
     var rv;
 
     if (bucket) {
-        rv = objects.listObjectsNoVnode(rpcctx, owner, bucket);
+        assert.equal(bucket, bucket_data.name, 'bucket_data.name the same');
+        assert.equal(owner, bucket_data.owner, 'bucket_data.owner the same');
+        rv = objects.listObjectsNoVnode(rpcctx, owner, bucket_data.id);
     } else {
         rv = buckets.listBucketsNoVnode(rpcctx, owner);
     }
diff --git a/lib/bucket_objects.js b/lib/bucket_objects.js
index 82069b8..c26edac 100644
--- a/lib/bucket_objects.js
+++ b/lib/bucket_objects.js
@@ -369,6 +369,83 @@ function createUnhandledOptionsError(unhandledOptions, cause) {
     return (err);
 }
 
+function listObjects(rpcctx, owner, bucket_id, vnode) {
+    var opts, log;
+
+    assert.object(rpcctx, 'rpcctx');
+    assert.string(owner, 'owner');
+    assert.string(bucket_id, 'bucket_id');
+    assert.number(vnode, 'vnode');
+
+    opts = makeOptions({});
+
+    var arg = {
+        owner: owner,
+        bucket_id: bucket_id,
+        vnode: vnode
+    };
+
+    log = rpc.childLogger(rpcctx, opts);
+
+    var res = new EventEmitter();
+
+    rpc.rpcCommonBufferData({
+        rpcctx: rpcctx,
+        rpcmethod: 'listobjects',
+        rpcargs: [arg],
+        log: log
+    }, function (err, objects) {
+        if (err) {
+            res.emit('error', err);
+            return;
+        }
+
+        objects.forEach(function (object) {
+            res.emit('record', object);
+        });
+
+        res.emit('_moray_internal_rpc_done');
+        res.emit('end');
+    });
+
+    return (res);
+}
+
+function listObjectsNoVnode(rpcctx, owner, bucket_id) {
+    var opts, log;
+
+    assert.object(rpcctx, 'rpcctx');
+    assert.string(owner, 'owner');
+    assert.string(bucket_id, 'bucket_id');
+
+    opts = makeOptions({});
+
+    log = rpc.childLogger(rpcctx, opts);
+
+    var res = new EventEmitter();
+
+    rpc.rpcCommonBufferData({
+        rpcctx: rpcctx,
+        rpcmethod: 'listobjects',
+        rpcargs: [owner, bucket_id],
+        log: log
+    }, function (err, objects) {
+        if (err) {
+            res.emit('error', err);
+            return;
+        }
+
+        objects.forEach(function (object) {
+            res.emit('record', object);
+        });
+
+        res.emit('_moray_internal_rpc_done');
+        res.emit('end');
+    });
+
+    return (res);
+}
+
 
 ///--- Helpers
 
@@ -403,5 +480,7 @@ module.exports = {
     deleteObject: deleteObject,
     putObjectNoVnode: putObjectNoVnode,
     getObjectNoVnode: getObjectNoVnode,
-    deleteObjectNoVnode: deleteObjectNoVnode
+    deleteObjectNoVnode: deleteObjectNoVnode,
+    listObjects: listObjects,
+    listObjectsNoVnode: listObjectsNoVnode
 };
-- 
2.21.0

