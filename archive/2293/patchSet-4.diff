From c4e0bbc2a1ef59a0a1f7c9af10b9a78a1eeffad6 Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Mon, 19 Jun 2017 19:02:09 +0000
Subject: [PATCH] NAPI-420 Fix indentation issues and enable more lint options
 Reviewed by: Mike Zeller <mike.zeller@joyent.com> Approved by: Mike Zeller
 <mike.zeller@joyent.com>

---
 tools/eslint.node.conf => .eslintrc  |   9 ++-
 Makefile                             |  13 +---
 deps/jsstyle                         |   2 +-
 lib/endpoints/fabrics/common.js      |   2 +-
 lib/models/aggregation.js            |  15 ++--
 lib/models/network-pool.js           |   4 +-
 lib/models/network.js                |  16 ++--
 lib/models/nic-tag.js                |   5 +-
 lib/util/constants.js                |   2 +-
 lib/util/validate.js                 |  28 ++++---
 package.json                         |   2 +-
 test/integration/ips.test.js         |  20 ++---
 test/integration/nics.test.js        |  44 ++++++-----
 test/lib/common.js                   |  16 ++--
 test/unit/ips.test.js                |  12 +--
 test/unit/network-pools.test.js      |   6 +-
 test/unit/networks.test.js           |   7 +-
 test/unit/nic-tags.test.js           |   5 +-
 test/unit/nics.test.js               | 111 ++++++++++++++-------------
 tools/mk/Makefile.defs               |  58 +++++++++++++-
 tools/mk/Makefile.deps               |  35 ++++++++-
 tools/mk/Makefile.node.defs          |  16 ++--
 tools/mk/Makefile.node.targ          |   2 +-
 tools/mk/Makefile.node_prebuilt.defs |  16 ++--
 tools/mk/Makefile.targ               |  35 ++++++++-
 25 files changed, 309 insertions(+), 172 deletions(-)
 rename tools/eslint.node.conf => .eslintrc (67%)

diff --git a/tools/eslint.node.conf b/.eslintrc
similarity index 67%
rename from tools/eslint.node.conf
rename to .eslintrc
index 7996475..8095c7f 100644
--- a/tools/eslint.node.conf
+++ b/.eslintrc
@@ -15,8 +15,13 @@
         "node": true
     },
     "rules": {
+        // Lint:
         "strict": [ "error", "global" ],
-        "consistent-return": "off",
-        "no-loop-func": "off"
+
+        // Style:
+        "func-style": [ "error", "declaration" ],
+
+        // Checks disabled as things get slowly cleaned up:
+        "consistent-return": "off"
     }
 }
diff --git a/Makefile b/Makefile
index d4c6df5..bacf633 100644
--- a/Makefile
+++ b/Makefile
@@ -31,9 +31,8 @@ JS_FILES	:= $(shell ls *.js) $(shell find lib test -name '*.js') \
 JSL_CONF_NODE	= tools/jsl.node.conf
 JSL_FILES_NODE	= $(JS_FILES)
 JSSTYLE_FILES	= $(JS_FILES)
-JSSTYLE_FLAGS	= -o indent=4,doxygen,unparenthesized-return=0
+JSSTYLE_FLAGS	= -o indent=2,doxygen,unparenthesized-return=0,strict-indent=true
 ESLINT		= ./node_modules/.bin/eslint
-ESLINT_CONF	= tools/eslint.node.conf
 ESLINT_FILES	= $(JS_FILES)
 SMF_MANIFESTS_IN = smf/manifests/napi.xml.in
 BASH_FILES	:= sbin/napid bin/napictl
@@ -50,6 +49,7 @@ include ./tools/mk/Makefile.defs
 ifeq ($(shell uname -s),SunOS)
 	include ./tools/mk/Makefile.node_prebuilt.defs
 else
+	NODE := node
 	NPM_EXEC :=
 	NPM = npm
 endif
@@ -68,11 +68,6 @@ INSTDIR         := $(PKGDIR)/root/opt/smartdc/napi
 all: $(SMF_MANIFESTS) | $(NPM_EXEC) $(REPO_DEPS) sdc-scripts
 	$(NPM) install --production
 
-$(ESLINT): | $(NPM_EXEC)
-	$(NPM) install \
-	    eslint@`json -f package.json devDependencies.eslint` \
-	    eslint-plugin-joyent@`json -f package.json devDependencies.eslint-plugin-joyent`
-
 $(ISTANBUL): | $(NPM_EXEC)
 	$(NPM) install
 
@@ -139,10 +134,6 @@ publish: release
 	mkdir -p $(BITS_DIR)/napi
 	cp $(TOP)/$(RELEASE_TARBALL) $(BITS_DIR)/napi/$(RELEASE_TARBALL)
 
-.PHONY: check
-check:: $(ESLINT)
-	$(ESLINT) -c $(ESLINT_CONF) $(ESLINT_FILES)
-
 #
 # Includes
 #
diff --git a/deps/jsstyle b/deps/jsstyle
index b94eb62..ccb145b 160000
--- a/deps/jsstyle
+++ b/deps/jsstyle
@@ -1 +1 @@
-Subproject commit b94eb629ee524d21b563c8b4461caa2bdf1becc6
+Subproject commit ccb145bab281b81e1fbebd45b5d2c084c454df5d
diff --git a/lib/endpoints/fabrics/common.js b/lib/endpoints/fabrics/common.js
index 3cd9772..43b6e66 100644
--- a/lib/endpoints/fabrics/common.js
+++ b/lib/endpoints/fabrics/common.js
@@ -29,7 +29,7 @@ var mod_restify = require('restify');
 function ensureOverlaysEnabled(req, res, next) {
     if (!constants.FABRICS_ENABLED) {
         return next(new mod_restify.PreconditionRequiredError(
-            constants.msg.OVERLAY_REQIRED));
+            constants.msg.OVERLAY_REQUIRED));
     }
 
     return next();
diff --git a/lib/models/aggregation.js b/lib/models/aggregation.js
index 0b9a7b5..e048fff 100644
--- a/lib/models/aggregation.js
+++ b/lib/models/aggregation.js
@@ -102,16 +102,18 @@ var DELETE_SCHEMA = {
 function validateLACPmode(_, name, mode, callback) {
     validate.string(null, name, mode, function (err) {
         if (err) {
-            return callback(err);
+            callback(err);
+            return;
         }
 
         if (LACP_MODES.indexOf(mode) === -1) {
-            return callback(new errors.invalidParam(name,
+            callback(errors.invalidParam(name,
                 util.format('Invalid LACP mode. Supported modes: %s',
                     LACP_MODES.join(', '))));
+            return;
         }
 
-        return callback(null, mode);
+        callback(null, mode);
     });
 }
 
@@ -127,8 +129,9 @@ function validateMACs(opts, name, list, callback) {
     var macAddrs = [];
 
     if ((typeof (list) !== 'string') && !util.isArray(list)) {
-        return callback(new errors.invalidParam(name,
+        callback(errors.invalidParam(name,
             'must be an array of MAC addresses'));
+        return;
     }
 
     util_common.arrayify(list).forEach(function (m) {
@@ -219,8 +222,8 @@ function validateMACs(opts, name, list, callback) {
 
         for (var i = 0; i < nicObjs.length; i++) {
             // Make sure all NICs have the same belongs_to_uuid
-            if (nicObjs[i].params.belongs_to_uuid
-                !== nicObjs[0].params.belongs_to_uuid) {
+            if (nicObjs[i].params.belongs_to_uuid !==
+                nicObjs[0].params.belongs_to_uuid) {
                 callback(errors.invalidParam(name,
                     constants.msg.AGGR_MATCH));
                 return;
diff --git a/lib/models/network-pool.js b/lib/models/network-pool.js
index 021d4d4..733d30e 100644
--- a/lib/models/network-pool.js
+++ b/lib/models/network-pool.js
@@ -99,7 +99,7 @@ var LIST_SCHEMA = {
          */
         var networks = parsed.networks;
         if (networks && Array.isArray(networks) && networks.length > 1) {
-            cb(new errors.invalidParam('networks',
+            cb(errors.invalidParam('networks',
                 'Only one network UUID allowed'));
             return;
         }
@@ -132,7 +132,7 @@ var UPDATE_SCHEMA = {
             parsed.owner_uuids = opts.oldPool.params.owner_uuids;
         }
 
-       return validateNetworkOwners(opts, original, parsed, cb);
+        return validateNetworkOwners(opts, original, parsed, cb);
     }
 };
 
diff --git a/lib/models/network.js b/lib/models/network.js
index b2fa213..9c267a1 100644
--- a/lib/models/network.js
+++ b/lib/models/network.js
@@ -390,8 +390,8 @@ function provisionRangeUpdates(app, log, network, update, callback) {
     var toMove = [];
 
     if (update.hasOwnProperty('provision_start_ip') &&
-        update.provision_start_ip.compare(network.params.provision_start_ip)
-        !== 0) {
+        update.provision_start_ip.compare(network.params.provision_start_ip) !==
+        0) {
         toMove.push({
             before: util_ip.ipAddrMinus(network.params.provision_start_ip, 1),
             after: util_ip.ipAddrMinus(update.provision_start_ip, 1)
@@ -399,8 +399,8 @@ function provisionRangeUpdates(app, log, network, update, callback) {
     }
 
     if (update.hasOwnProperty('provision_end_ip') &&
-        update.provision_end_ip.compare(network.params.provision_end_ip)
-        !== 0) {
+        update.provision_end_ip.compare(network.params.provision_end_ip) !==
+        0) {
         toMove.push({
             before: util_ip.ipAddrPlus(network.params.provision_end_ip, 1),
             after: util_ip.ipAddrPlus(update.provision_end_ip, 1)
@@ -528,14 +528,16 @@ function validateGateway(_, name, val, cb) {
  */
 function validateGetUUID(_, name, val, cb) {
     if (typeof (val) !== 'string') {
-        return cb(new errors.invalidParam(name, constants.msg.INVALID_UUID));
+        cb(errors.invalidParam(name, constants.msg.INVALID_UUID));
+        return;
     }
 
     if (val === 'admin') {
-        return cb(null, val);
+        cb(null, val);
+        return;
     }
 
-    return validate.UUID(null, name, val, cb);
+    validate.UUID(null, name, val, cb);
 }
 
 
diff --git a/lib/models/nic-tag.js b/lib/models/nic-tag.js
index 7115321..89b2ffc 100644
--- a/lib/models/nic-tag.js
+++ b/lib/models/nic-tag.js
@@ -577,9 +577,10 @@ function nicTagsExist(single, opts, name, tags, callback) {
     }
 
     if (invalid.length !== 0) {
-        var sErr = new errors.invalidParam(name, 'must be a string');
+        var sErr = errors.invalidParam(name, 'must be a string');
         sErr.invalid = invalid;
-        return callback(sErr);
+        callback(sErr);
+        return;
     }
 
     vasync.forEachPipeline({
diff --git a/lib/util/constants.js b/lib/util/constants.js
index 537439e..74aef90 100644
--- a/lib/util/constants.js
+++ b/lib/util/constants.js
@@ -46,7 +46,7 @@ var MESSAGES = {
     OBJ: 'must be an object',
     OFFSET: 'invalid value, offset must be an integer greater than or ' +
         'equal to 0',
-    OVERLAY_REQIRED: 'overlay networking is not enabled',
+    OVERLAY_REQUIRED: 'overlay networking is not enabled',
     PARAMETERS_ARE_OBJECTS: 'Parameters must be objects',
     POOL_OWNER: 'owner cannot provision on network pool',
 
diff --git a/lib/util/validate.js b/lib/util/validate.js
index 1d00a3e..24f8731 100644
--- a/lib/util/validate.js
+++ b/lib/util/validate.js
@@ -43,14 +43,16 @@ var INTERFACE_NUM_RE = /[0-9]+$/;
  */
 function validateBoolean(_, name, val, callback) {
     if (typeof (val) === 'boolean') {
-        return callback(null, val);
+        callback(null, val);
+        return;
     }
 
     if (val === 'true' || val === 'false') {
-        return callback(null, val === 'true');
+        callback(null, val === 'true');
+        return;
     }
 
-    return callback(new errors.invalidParam(name, 'must be a boolean value'));
+    callback(errors.invalidParam(name, 'must be a boolean value'));
 }
 
 
@@ -62,7 +64,7 @@ function validateEnum(values) {
     assert.array(values, 'values');
     return function _validateEnum(_, name, value, callback) {
         if (values.indexOf(value) === -1) {
-            callback(new errors.invalidParam(name,
+            callback(errors.invalidParam(name,
                 'must be one of: ' + values.map(JSON.stringify).join(', ')));
             return;
         }
@@ -114,7 +116,6 @@ function validateNicTagName(_, name, val, callback) {
 }
 
 
-
 /**
  * Validates an array of IP addresses
  */
@@ -123,8 +124,8 @@ function validateIParray(_, name, arr, callback) {
     var ips = [];
 
     if (!util.isArray(arr) && typeof (arr) !== 'string') {
-        return callback(new errors.invalidParam(name,
-            constants.msg.ARRAY_OF_STR));
+        callback(errors.invalidParam(name, constants.msg.ARRAY_OF_STR));
+        return;
     }
 
     // UFDS will return a scalar if there's only one IP. Also allow
@@ -152,10 +153,11 @@ function validateIParray(_, name, arr, callback) {
         var ipErr = errors.invalidParam(name,
             fmt('invalid IP%s', errs.length === 1 ? '' : 's'));
         ipErr.invalid = errs;
-        return callback(ipErr);
+        callback(ipErr);
+        return;
     }
 
-    return callback(null, ips);
+    callback(null, ips);
 }
 
 
@@ -299,14 +301,16 @@ function validateMTU(min, errmsg) {
     var _errmsg = errmsg;
     return function _validateMTU(_, name, val, callback) {
         if (typeof (val) !== 'number') {
-            return callback(new errors.invalidParam(name, _errmsg));
+            callback(errors.invalidParam(name, _errmsg));
+            return;
         }
 
         if (val < _min || val > constants.MTU_MAX) {
-            return callback(new errors.invalidParam(name, _errmsg));
+            callback(errors.invalidParam(name, _errmsg));
+            return;
         }
 
-        return callback(null, val);
+        callback(null, val);
     };
 }
 
diff --git a/package.json b/package.json
index 96fbdeb..3367745 100644
--- a/package.json
+++ b/package.json
@@ -31,7 +31,7 @@
     "faucet": "0.0.1",
     "istanbul": "^0.4.0",
     "eslint": "2.13.1",
-    "eslint-plugin-joyent": "1.0.1"
+    "eslint-plugin-joyent": "~1.3.0"
   },
   "scripts": {
     "start": "./sbin/napid",
diff --git a/test/integration/ips.test.js b/test/integration/ips.test.js
index 27f7d73..ad5bea9 100644
--- a/test/integration/ips.test.js
+++ b/test/integration/ips.test.js
@@ -216,7 +216,7 @@ test('GET /networks/:uuid/ips', function (t) {
 
 
 test('PUT /networks/:uuid/ips/:ip (free an IP)', function (t) {
-    var doUpdate = function (_, cb) {
+    function doUpdate(_, cb) {
         var params = {
             free: true
         };
@@ -224,7 +224,8 @@ test('PUT /networks/:uuid/ips/:ip (free an IP)', function (t) {
         napi.updateIP(state.networks[0].uuid, IPS.zone, params,
             function (err, res) {
             if (err) {
-                return h.doneWithError(t, err, 'freeing IP: ' + IPS.zone);
+                h.doneWithError(t, err, 'freeing IP: ' + IPS.zone);
+                return;
             }
 
             params.ip = IPS.zone;
@@ -233,18 +234,19 @@ test('PUT /networks/:uuid/ips/:ip (free an IP)', function (t) {
             params.network_uuid = state.networks[0].uuid;
             t.deepEqual(res, params, 'freeing an IP');
 
-            return napi.getIP(state.networks[0].uuid, params.ip,
-                    common.reqOpts(t), function (err2, res2) {
-                t.ifError(err2, 'getting free IP: ' + IPS.zone);
-                if (err2) {
-                    return cb(err2);
+            napi.getIP(state.networks[0].uuid, params.ip, common.reqOpts(t),
+                function (err2, res2) {
+                if (h.ifErr(t, err2, 'getting free IP: ' + IPS.zone)) {
+                    cb(err2);
+                    return;
                 }
 
                 t.deepEqual(res2, params, 'GET on a free IP');
-                return cb();
+
+                cb();
             });
         });
-    };
+    }
 
     // Try this twice, to prove that it works for both a free and a non-free IP
     vasync.pipeline({
diff --git a/test/integration/nics.test.js b/test/integration/nics.test.js
index 803b287..d4f6ad1 100644
--- a/test/integration/nics.test.js
+++ b/test/integration/nics.test.js
@@ -785,14 +785,15 @@ test('PUT /nics/:mac', function (t) {
 test('Check IPs are updated along with nics', function (t) {
     var ips = ['b', 'd'];
 
-    var checkIP = function (ipNum, cb) {
+    function checkIP(ipNum, cb) {
         var ip = state.ip[ipNum];
         var desc = util.format(' %s/%s%s',
             state.networks[0].uuid, ip, state.desc[ipNum]);
         napi.getIP(state.networks[0].uuid, ip, function (err, res) {
             t.ifError(err, 'get updated IP' + desc);
             if (err) {
-                return cb();
+                cb();
+                return;
             }
 
             var exp = {
@@ -805,9 +806,10 @@ test('Check IPs are updated along with nics', function (t) {
                 free: false
             };
             t.deepEqual(res, exp, 'Updated IP params correct' + desc);
-            return cb();
+
+            cb();
         });
-    };
+    }
 
     vasync.forEachParallel({
         func: checkIP,
@@ -1304,34 +1306,37 @@ test('GET /nics (filter: nic_tags_provided)', function (t) {
 test('DELETE /nics/:mac', function (t) {
     var nics = Object.keys(state.nic);
 
-    var delNic = function (nicNum, cb) {
+    function delNic(nicNum, cb) {
         var nic = state.nic[nicNum];
         var desc = state.desc[nicNum] || '';
 
-        return napi.deleteNic(nic.mac, function (err, res) {
+        napi.deleteNic(nic.mac, function (err, res) {
             t.ifError(err, 'delete nic ' + nic.mac + desc);
             if (err) {
-                return cb();
+                cb();
+                return;
             }
 
-            return napi.getNic(nic.mac, function (err2, res2) {
+            napi.getNic(nic.mac, function (err2, res2) {
                 t.ok(err2, 'error getting deleted nic' + desc);
                 if (!err) {
-                    return cb();
+                    cb();
+                    return;
                 }
+
                 t.equal(err2.code, 'ResourceNotFound',
                     '404 on deleted nic' + desc);
 
-                return cb();
+                cb();
             });
         });
-    };
+    }
 
     vasync.forEachParallel({
         func: delNic,
         inputs: nics
     }, function (_err) {
-        return t.end();
+        t.end();
     });
 });
 
@@ -1339,7 +1344,7 @@ test('DELETE /nics/:mac', function (t) {
 test('Check IPs are freed along with nics', function (t) {
     var ips = Object.keys(state.ip);
 
-    var checkIP = function (ipDesc, cb) {
+    function checkIP(ipDesc, cb) {
         var ip = state.ip[ipDesc];
         var net = state.networks[0];
 
@@ -1351,7 +1356,8 @@ test('Check IPs are freed along with nics', function (t) {
 
         if (!ip) {
             t.ok(false, 'IP "' + ipDesc + '" does not exist:' + desc);
-            return cb();
+            cb();
+            return;
         }
 
         napi.getIP(net.uuid, ip, function (err, res) {
@@ -1359,7 +1365,8 @@ test('Check IPs are freed along with nics', function (t) {
             if (err) {
                 t.deepEqual(net, {},
                     util.format('network for Failing IP: %s', desc));
-                return cb();
+                cb();
+                return;
             }
 
             var exp = {
@@ -1369,15 +1376,16 @@ test('Check IPs are freed along with nics', function (t) {
                 reserved: false
             };
             t.deepEqual(res, exp, 'Updated IP params correct' + desc);
-            return cb();
+
+            cb();
         });
-    };
+    }
 
     vasync.forEachParallel({
         func: checkIP,
         inputs: ips
     }, function (_err) {
-        return t.end();
+        t.end();
     });
 });
 
diff --git a/test/lib/common.js b/test/lib/common.js
index eedda6e..88d7b18 100644
--- a/test/lib/common.js
+++ b/test/lib/common.js
@@ -18,6 +18,7 @@ var assert = require('assert-plus');
 var fmt = require('util').format;
 var clone = require('clone');
 var constants = require('../../lib/util/constants');
+var jsprim = require('jsprim');
 var mod_err = require('../../lib/util/errors');
 var mod_uuid = require('node-uuid');
 var NAPI = require('sdc-clients').NAPI;
@@ -475,8 +476,7 @@ function afterAPIlist(t, opts, callback, err, obj, _, res) {
         var present = clone(ids);
         var notInPresent = [];
 
-        for (var n in obj) {
-            var resObj = obj[n];
+        jsprim.forEachKey(obj, function (_key, resObj) {
             var idx = ids.indexOf(resObj[id]);
             if (idx !== -1) {
                 var expObj = left[idx];
@@ -528,7 +528,7 @@ function afterAPIlist(t, opts, callback, err, obj, _, res) {
             } else {
                 notInPresent.push(resObj);
             }
-        }
+        });
 
         t.deepEqual(ids, [],
             'found ' + type + 's not specified in opts.present ' + desc);
@@ -728,11 +728,11 @@ function missingParamErr(extra) {
 function randomMAC() {
     var data = [(Math.floor(Math.random() * 15) + 1).toString(16) + 2];
     for (var i = 0; i < 5; i++) {
-         var oct = (Math.floor(Math.random() * 255)).toString(16);
-         if (oct.length === 1) {
-                oct = '0' + oct;
-         }
-         data.push(oct);
+        var oct = (Math.floor(Math.random() * 255)).toString(16);
+        if (oct.length === 1) {
+            oct = '0' + oct;
+        }
+        data.push(oct);
     }
 
     return data.join(':');
diff --git a/test/unit/ips.test.js b/test/unit/ips.test.js
index 7ad2333..26077dd 100644
--- a/test/unit/ips.test.js
+++ b/test/unit/ips.test.js
@@ -895,8 +895,7 @@ function testIPv4List(t, opts, callback) {
 test('Listing IPv4 failures', function (t) {
     t.plan(common.badLimitOffTests.length);
 
-    for (var i = 0; i < common.badLimitOffTests.length; i++) {
-        var blot = common.badLimitOffTests[i];
+    common.badLimitOffTests.forEach(function (blot) {
         t.test(blot.bc_name, function (t2) {
             testIPv4List(t2, {
                 params: blot.bc_params,
@@ -904,8 +903,7 @@ test('Listing IPv4 failures', function (t) {
                 expErr: blot.bc_experr
             });
         });
-    }
-
+    });
 });
 
 function testIPv6List(t, opts, callback) {
@@ -919,8 +917,7 @@ function testIPv6List(t, opts, callback) {
 test('Listing IPv6 failures', function (t) {
     t.plan(common.badLimitOffTests.length);
 
-    for (var i = 0; i < common.badLimitOffTests.length; i++) {
-        var blot = common.badLimitOffTests[i];
+    common.badLimitOffTests.forEach(function (blot) {
         t.test(blot.bc_name, function (t2) {
             testIPv6List(t2, {
                 params: blot.bc_params,
@@ -928,8 +925,7 @@ test('Listing IPv6 failures', function (t) {
                 expErr: blot.bc_experr
             });
         });
-    }
-
+    });
 });
 
 
diff --git a/test/unit/network-pools.test.js b/test/unit/network-pools.test.js
index 9e653f0..822d917 100644
--- a/test/unit/network-pools.test.js
+++ b/test/unit/network-pools.test.js
@@ -990,8 +990,7 @@ test('List pools - filter with three networks', function (t) {
 test('List Network Pool failures', function (t) {
     t.plan(common.badLimitOffTests.length);
 
-     for (var i = 0; i < common.badLimitOffTests.length; i++) {
-        var blot = common.badLimitOffTests[i];
+    common.badLimitOffTests.forEach(function (blot) {
         t.test(blot.bc_name, function (t2) {
             mod_pool.list(t2, {
                 params: blot.bc_params,
@@ -999,8 +998,7 @@ test('List Network Pool failures', function (t) {
                 expErr: blot.bc_experr
             });
         });
-    }
-
+    });
 });
 
 
diff --git a/test/unit/networks.test.js b/test/unit/networks.test.js
index 3869a5f..b21b6fd 100644
--- a/test/unit/networks.test.js
+++ b/test/unit/networks.test.js
@@ -543,7 +543,7 @@ test('Create network - provision start IP after end IP', function (t) {
         t.deepEqual(err.body, h.invalidParamErr({
             errors: [
                 mod_err.invalidParam('provision_end_ip',
-                   constants.PROV_RANGE_ORDER_MSG),
+                    constants.PROV_RANGE_ORDER_MSG),
                 mod_err.invalidParam('provision_start_ip',
                     constants.PROV_RANGE_ORDER_MSG)
             ],
@@ -1621,8 +1621,7 @@ test('Update network - unset owner_uuids', function (t) {
 test('Listing Network failures', function (t) {
     t.plan(common.badLimitOffTests.length);
 
-    for (var i = 0; i < common.badLimitOffTests.length; i++) {
-        var blot = common.badLimitOffTests[i];
+    common.badLimitOffTests.forEach(function (blot) {
         t.test(blot.bc_name, function (t2) {
             mod_net.list(t2, {
                 params: blot.bc_params,
@@ -1630,7 +1629,7 @@ test('Listing Network failures', function (t) {
                 expErr: blot.bc_experr
             });
         });
-    }
+    });
 });
 
 
diff --git a/test/unit/nic-tags.test.js b/test/unit/nic-tags.test.js
index 8b49620..3e74b9a 100644
--- a/test/unit/nic-tags.test.js
+++ b/test/unit/nic-tags.test.js
@@ -801,8 +801,7 @@ function testTagList(t, opts, callback) {
 test('Listing Nic Tag failures', function (t) {
     t.plan(common.badLimitOffTests.length);
 
-    for (var i = 0; i < common.badLimitOffTests.length; i++) {
-        var blot = common.badLimitOffTests[i];
+    common.badLimitOffTests.forEach(function (blot) {
         t.test(blot.bc_name, function (t2) {
             testTagList(t2, {
                 params: blot.bc_params,
@@ -810,7 +809,7 @@ test('Listing Nic Tag failures', function (t) {
                 expErr: blot.bc_experr
             });
         });
-    }
+    });
 });
 
 
diff --git a/test/unit/nics.test.js b/test/unit/nics.test.js
index a28692b..806be27 100644
--- a/test/unit/nics.test.js
+++ b/test/unit/nics.test.js
@@ -105,8 +105,8 @@ test('Initial setup', function (t) {
         num = h.NET_NUM;
         var params = h.validNetworkParams({
             routes: {
-              '10.0.3.4': '10.0.2.2',
-              '10.0.4.0/24': '10.0.2.2'
+                '10.0.3.4': '10.0.2.2',
+                '10.0.4.0/24': '10.0.2.2'
             },
             vlan_id: 46
         });
@@ -2740,76 +2740,80 @@ test('Delete nic - IP ownership changed underneath', function (t) {
     });
 
     t.test('confirm IP ownership', function (t2) {
-       NAPI.getIP(NET2.uuid, nic.ip, function (err, res) {
-           if (h.ifErr(t2, err, 'get IP')) {
-               return t2.end();
-           }
-
-           ip = res;
-           t2.equal(res.ip, nic.ip, 'IP');
-           t2.equal(res.belongs_to_uuid, params.belongs_to_uuid, 'IP');
+        NAPI.getIP(NET2.uuid, nic.ip, function (err, res) {
+            if (h.ifErr(t2, err, 'get IP')) {
+                t2.end();
+                return;
+            }
 
-           return t2.end();
-       });
+            ip = res;
+            t2.equal(res.ip, nic.ip, 'IP');
+            t2.equal(res.belongs_to_uuid, params.belongs_to_uuid, 'IP');
+            t2.end();
+        });
     });
 
     t.test('update IP', function (t2) {
-       NAPI.updateIP(NET2.uuid, nic.ip, { belongs_to_uuid: other },
-           function (err, res) {
-           if (h.ifErr(t2, err, 'update IP')) {
-               return t2.end();
-           }
-
-           ip.belongs_to_uuid = other;
-           t2.deepEqual(res, ip, 'only belongs_to_uuid updated');
+        NAPI.updateIP(NET2.uuid, nic.ip, { belongs_to_uuid: other },
+            function (err, res) {
+            if (h.ifErr(t2, err, 'update IP')) {
+                t2.end();
+                return;
+            }
 
-           return t2.end();
-       });
+            ip.belongs_to_uuid = other;
+            t2.deepEqual(res, ip, 'only belongs_to_uuid updated');
+            t2.end();
+        });
     });
 
     t.test('confirm IP has new belongs_to_uuid', function (t2) {
-       NAPI.getIP(NET2.uuid, nic.ip, function (err, res) {
-           if (h.ifErr(t2, err, 'update IP')) {
-               return t2.end();
-           }
-
-           t2.deepEqual(res, ip, 'IP unchanged');
+        NAPI.getIP(NET2.uuid, nic.ip, function (err, res) {
+            if (h.ifErr(t2, err, 'update IP')) {
+                t2.end();
+                return;
+            }
 
-           return t2.end();
-       });
+            t2.deepEqual(res, ip, 'IP unchanged');
+            t2.end();
+        });
     });
 
     t.test('delete nic', function (t2) {
-       NAPI.deleteNic(nic.mac, function (err, res) {
-           if (h.ifErr(t2, err, 'delete nic')) {
-               return t2.end();
-           }
+        NAPI.deleteNic(nic.mac, function (err, _, req, res) {
+            if (h.ifErr(t2, err, 'delete nic')) {
+                t2.end();
+                return;
+            }
 
-           return t2.end();
-       });
+            t2.equal(res.statusCode, 204, '204 returned');
+            t2.end();
+        });
     });
 
     t.test('confirm nic deleted', function (t2) {
-       NAPI.getNic(nic.mac, function (err, res) {
-           t2.ok(err, 'error expected');
-           if (!err) {
-               return t2.end();
-           }
-           t2.equal(err.statusCode, 404, '404 returned');
+        NAPI.getNic(nic.mac, function (err, res) {
+            t2.ok(err, 'error expected');
+            if (!err) {
+                t2.end();
+                return;
+            }
 
-           return t2.end();
-       });
+            t2.equal(err.statusCode, 404, '404 returned');
+            t2.end();
+        });
     });
 
     t.test('confirm IP has new owner', function (t2) {
-       NAPI.getIP(NET2.uuid, nic.ip, function (err, res) {
-           if (h.ifErr(t2, err, 'get IP')) {
-               return t2.end();
-           }
+        NAPI.getIP(NET2.uuid, nic.ip, function (err, res) {
+            if (h.ifErr(t2, err, 'get IP')) {
+                t2.end();
+                return;
+            }
 
-           t2.deepEqual(res, ip, 'IP unchanged');
-           return t2.end();
-       });
+            t2.deepEqual(res, ip, 'IP unchanged');
+            t2.end();
+        });
     });
 });
 
@@ -3132,8 +3136,7 @@ test('primary uniqueness', function (t) {
 test('Listing Nics failures', function (t) {
     t.plan(common.badLimitOffTests.length);
 
-     for (var i = 0; i < common.badLimitOffTests.length; i++) {
-        var blot = common.badLimitOffTests[i];
+    common.badLimitOffTests.forEach(function (blot) {
         t.test(blot.bc_name, function (t2) {
             mod_nic.list(t2, {
                 params: blot.bc_params,
@@ -3141,7 +3144,7 @@ test('Listing Nics failures', function (t) {
                 expErr: blot.bc_experr
             });
         });
-    }
+    });
 });
 
 test('List all NICs', function (t) {
diff --git a/tools/mk/Makefile.defs b/tools/mk/Makefile.defs
index 85139d7..73dd612 100644
--- a/tools/mk/Makefile.defs
+++ b/tools/mk/Makefile.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2018, Joyent, Inc.
 #
 
 #
@@ -28,6 +27,14 @@
 #			the TIMESTAMP envvar (used by MG-based builds).
 #	STAMP		A build stamp to use in built package names.
 #
+#	MAKE_STAMPS_DIR	The directory in which make stamp files are to be
+#			created.  See comments below on expensive targets.
+#
+#	CACHE_DIR	A directory tree in which temporary files may be
+#			collected by download, tarball extraction, etc.  This
+#			directory is completely removed by "make distclean".
+#			Files in this directory are not intended to be shipped.
+#
 
 TOP := $(shell pwd)
 
@@ -49,3 +56,50 @@ STAMP := $(BRANCH)-$(TIMESTAMP)-$(_GITDESCRIBE)
 
 # node-gyp will print build info useful for debugging with V=1
 export V=1
+
+CACHE_DIR ?=		cache
+DISTCLEAN_FILES +=	$(CACHE_DIR)
+
+#
+# EXPENSIVE TARGETS AND MAKE STAMP FILES
+#
+# Targets which are expensive to run and lack a single file that marks
+# completion are difficult to track with make; e.g., "npm install".  One
+# solution to this problem is to create "stamp" files with symbolic names which
+# are created as the final step in a complex make rule in order to mark
+# completion.
+#
+# In order to make these more uniform, and easier to target with "make clean",
+# we will attempt to store them under a single directory.  Note that these
+# files are never targets for shipping in build artefacts.
+#
+# Stamp-backed targets come in several parts.  First, a macro should be defined
+# which names a file in the MAKE_STAMPS_DIR directory.  Then, a target which
+# creates this stamp file must be provided.  The recipe for this target should
+# use MAKE_STAMP_REMOVE and MAKE_STAMP_CREATE to perform the appropriate stamp
+# management.
+#
+# For example:
+#
+# --- Makefile.*.defs:
+#
+#	$(STAMP_EXPENSIVE_RESULT) := $(MAKE_STAMPS_DIR)/expensive-result
+#
+# --- Makefile.*.targ:
+#
+#	$(STAMP_EXPENSIVE_RESULT): input/file another/input/file
+#		$(MAKE_STAMP_REMOVE)
+#		rm -rf output_tree/  # <--- ensure a clean slate
+#		expensive_program -o output_tree/ $^
+#		$(MAKE_STAMP_CREATE)
+#
+# NOTE: Every stamp file is exposed as an implicit "stamp-$STAMP_NAME" target.
+# The example above could be built manually by invoking:
+#
+#	make stamp-expensive-result
+#
+MAKE_STAMPS_DIR ?=	make_stamps
+CLEAN_FILES +=		$(MAKE_STAMPS_DIR)
+
+MAKE_STAMP_REMOVE =	mkdir -p $(@D); rm -f $(@)
+MAKE_STAMP_CREATE =	mkdir -p $(@D); touch $(@)
diff --git a/tools/mk/Makefile.deps b/tools/mk/Makefile.deps
index 1cffbe7..91f8346 100644
--- a/tools/mk/Makefile.deps
+++ b/tools/mk/Makefile.deps
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -44,6 +44,39 @@ JSSTYLE		?= $(JSSTYLE_EXEC)
 
 $(JSSTYLE_EXEC): | deps/jsstyle/.git
 
+#
+# eslint
+#
+ESLINT_EXEC	?= node_modules/.bin/eslint
+ifdef NODE
+    ESLINT	:= $(NODE) $(ESLINT_EXEC)
+else
+    ESLINT	?= $(ESLINT_EXEC)
+endif
+
+# Install eslint.
+#
+# The install of specific modules is to allow running "make check"
+# without having to do a complete install of all npm dependencies.
+#
+# NPM_EXEC will be defined if either of "Makefile.{node,node_prebuilt}.defs"
+# is included.
+ifdef NPM
+$(ESLINT_EXEC): package.json | $(NPM_EXEC)
+	ESLINT_VER=$$($(NODE) -e 'console.log(require("./package.json").devDependencies["eslint"] || "")') && \
+	    ESLINT_JOY_VER=$$($(NODE) -e 'console.log(require("./package.json").devDependencies["eslint-plugin-joyent"] || "")') && \
+	    [[ -n $$ESLINT_VER && -n $$ESLINT_JOY_VER ]] && \
+	    $(NPM) install --no-save eslint@$$ESLINT_VER eslint-plugin-joyent@$$ESLINT_JOY_VER && \
+	    touch $(ESLINT_EXEC)
+else
+$(ESLINT_EXEC): package.json
+	ESLINT_VER=$$(node -e 'console.log(require("./package.json").devDependencies["eslint"] || "")') && \
+	    ESLINT_JOY_VER=$$(node -e 'console.log(require("./package.json").devDependencies["eslint-plugin-joyent"] || "")') && \
+	    [[ -n $$ESLINT_VER && -n $$ESLINT_JOY_VER ]] && \
+	    npm install --no-save eslint@$$ESLINT_VER eslint-plugin-joyent@$$ESLINT_JOY_VER && \
+	    touch $(ESLINT_EXEC)
+endif
+
 #
 # restdown
 #
diff --git a/tools/mk/Makefile.node.defs b/tools/mk/Makefile.node.defs
index 9376841..487824d 100644
--- a/tools/mk/Makefile.node.defs
+++ b/tools/mk/Makefile.node.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -97,8 +96,15 @@ NODE_EXEC	= $(NODE_INSTALL)/bin/node
 NODE_WAF_EXEC	= $(NODE_INSTALL)/bin/node-waf
 NPM_EXEC	= $(NODE_INSTALL)/bin/npm
 
-# Ensure these use absolute paths to the executables to allow running
-# from a dir other than the project top.
+#
+# These paths should be used during the build process to invoke Node and
+# Node-related build tools like NPM.  All paths are fully qualified so that
+# they work regardless of the current working directory at the point of
+# invocation.
+#
+# Note that where PATH is overridden, the value chosen must cause execution of
+# "node" to find the same binary to which the NODE macro refers.
+#
 NODE		:= $(TOP)/$(NODE_EXEC)
 NODE_WAF	:= $(TOP)/$(NODE_WAF_EXEC)
-NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NPM_EXEC)
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) $(NODE) $(TOP)/$(NPM_EXEC)
diff --git a/tools/mk/Makefile.node.targ b/tools/mk/Makefile.node.targ
index abdc616..bf53f78 100644
--- a/tools/mk/Makefile.node.targ
+++ b/tools/mk/Makefile.node.targ
@@ -29,7 +29,7 @@ else
 $(NODE_EXEC) $(NPM_EXEC) $(NODE_WAF_EXEC):
 	(mkdir -p $(BUILD) \
 		&& cd $(BUILD) \
-		&& [[ -d src-node ]] && (cd src-node && git checkout master && git pull) || git clone git://github.com/joyent/node.git src-node \
+		&& [[ -d src-node ]] && (cd src-node && git checkout master && git pull) || git clone https://github.com/joyent/node.git src-node \
 		&& cd src-node \
 		&& git checkout $(NODE_PREBUILT_VERSION) \
 		&& ./configure $(NODE_CONFIG_FLAGS) \
diff --git a/tools/mk/Makefile.node_prebuilt.defs b/tools/mk/Makefile.node_prebuilt.defs
index 5744489..2129742 100644
--- a/tools/mk/Makefile.node_prebuilt.defs
+++ b/tools/mk/Makefile.node_prebuilt.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -146,8 +145,15 @@ NODE_EXEC	:= $(BUILD)/prebuilt-node-$(NODE_PREBUILT_NAME)
 NODE_WAF_EXEC	:= $(BUILD)/prebuilt-node-waf-$(NODE_PREBUILT_NAME)
 NPM_EXEC	:= $(BUILD)/prebuilt-npm-$(NODE_PREBUILT_NAME)
 
-# Ensure these use absolute paths to the executables to allow running
-# from a dir other than the project top.
+#
+# These paths should be used during the build process to invoke Node and
+# Node-related build tools like NPM.  All paths are fully qualified so that
+# they work regardless of the current working directory at the point of
+# invocation.
+#
+# Note that where PATH is overridden, the value chosen must cause execution of
+# "node" to find the same binary to which the NODE macro refers.
+#
 NODE		:= $(TOP)/$(NODE_INSTALL)/bin/node
 NODE_WAF	:= $(TOP)/$(NODE_INSTALL)/bin/node-waf
-NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NODE_INSTALL)/bin/npm
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) $(NODE) $(TOP)/$(NODE_INSTALL)/bin/npm
diff --git a/tools/mk/Makefile.targ b/tools/mk/Makefile.targ
index 16b15aa..cc5ae95 100644
--- a/tools/mk/Makefile.targ
+++ b/tools/mk/Makefile.targ
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -77,6 +76,10 @@
 #	CSCOPE_DIRS	Directories to search for source files for the cscope
 #			index. (default: ".")
 #
+#	ESLINT		Path to eslint (default: "eslint")
+#
+#	ESLINT_FLAGS	Additional flags to pass through to eslint
+#
 #	JSL		Path to JavaScriptLint (default: "jsl")
 #
 #	JSL_FLAGS_NODE	Additional flags to pass through to JSL
@@ -102,6 +105,7 @@ BASHSTYLE	?= tools/bashstyle
 CP		?= cp
 CSCOPE		?= cscope
 CSCOPE_DIRS	?= .
+ESLINT		?= eslint
 JSL		?= jsl
 JSON		?= json
 JSSTYLE		?= jsstyle
@@ -190,6 +194,12 @@ check-json: $(JSON_FILES:%=%.jsonchk)
 # a variable for the target itself *only if* the list of input files is
 # non-empty.  This avoids invoking the tool if there are no files to check.
 #
+
+ESLINT_TARGET = $(if $(ESLINT_FILES), check-eslint)
+.PHONY: check-eslint
+check-eslint: $(ESLINT_EXEC)
+	$(ESLINT) $(ESLINT_FLAGS) $(ESLINT_FILES)
+
 JSL_NODE_TARGET = $(if $(JSL_FILES_NODE), check-jsl-node)
 .PHONY: check-jsl-node
 check-jsl-node: $(JSL_EXEC)
@@ -209,7 +219,7 @@ check-jsstyle:  $(JSSTYLE_EXEC)
 	$(JSSTYLE) $(JSSTYLE_FLAGS) $(JSSTYLE_FILES)
 
 .PHONY: check
-check:: check-jsl check-json $(JSSTYLE_TARGET) check-bash
+check:: $(ESLINT_TARGET) check-jsl check-json $(JSSTYLE_TARGET) check-bash
 	@echo check ok
 
 .PHONY: clean
@@ -264,7 +274,7 @@ DOC_MEDIA_FILES_BUILD := $(DOC_MEDIA_FILES:%=$(DOC_BUILD)/media/%)
 # to get there.
 #
 .PHONY: docs
-docs:							\
+docs::							\
 	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.html)		\
 	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.json)		\
 	$(DOC_MEDIA_FILES_BUILD)
@@ -294,6 +304,7 @@ CLEAN_FILES +=					\
 $(DOC_MEDIA_FILES_BUILD): | $(DOC_MEDIA_DIRS_BUILD)
 
 $(DOC_BUILD)/%: docs/% | $(DOC_BUILD)
+	$(MKDIR) $(shell dirname $@)
 	$(CP) $< $@
 
 docs/%.json docs/%.html: docs/%$(RESTDOWN_EXT) | $(DOC_BUILD) $(RESTDOWN_EXEC) \
@@ -316,3 +327,19 @@ test:
 
 .PHONY: prepush
 prepush: check test
+
+#
+# This rule automatically exposes every "stamp" file as a target that can be
+# invoked manually as "stamp-$STAMP_NAME".  For example, if a stamp has been
+# defined thus:
+#
+#	STAMP_EXPENSIVE_RESULT := $(MAKE_STAMPS_DIR)/expensive-result
+#
+# ... this can be invoked manually as "make stamp-expensive-result".  Note that
+# these phony targets are essentially just for interactive usage.  Targets
+# should be specified to depend on the macro containing the stamp file name.
+#
+# See also the comments in "Makefile.defs".
+#
+stamp-%: $(MAKE_STAMPS_DIR)/%
+	@:
-- 
2.21.0

