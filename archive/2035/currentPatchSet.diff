From 38ac8ea36cebe4be145724c8d91ec5ff89e6f484 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 2 Jun 2017 15:51:36 -0700
Subject: [PATCH] CNS-203 intermittent redis errors on CNS API calls CNS-204
 turn off restify domains in cns-server so we abort on uncaught Reviewed by:
 Cody Peter Mello <cody.mello@joyent.com>

---
 lib/api-server.js | 11 ++++++-----
 package.json      |  8 ++++----
 server.js         | 15 +++++++++++++++
 3 files changed, 25 insertions(+), 9 deletions(-)

diff --git a/lib/api-server.js b/lib/api-server.js
index 8bed3de..093ae11 100644
--- a/lib/api-server.js
+++ b/lib/api-server.js
@@ -208,7 +208,12 @@ function setupServer(addr) {
 		listen: addr + ':' + self.port
 	});
 	var server = restify.createServer({
-		log: slog
+		log: slog,
+		/*
+		 * Turn off restify's error domain, so uncaught exceptions
+		 * trigger an actual crash.
+		 */
+		handleUncaughtExceptions: false
 	});
 
 	server.pre(function (req, res, next) {
@@ -237,10 +242,6 @@ function setupServer(addr) {
 			delete (req.redis);
 		}
 	});
-	server.on('uncaughtException', function (req, res, route, err) {
-		req.log.error(err);
-		res.send(err);
-	});
 	server.listen(self.port, addr, function () {
 		slog.info('listening on tcp/%s:%d', addr, self.port);
 	});
diff --git a/package.json b/package.json
index 602545a..ec59e35 100644
--- a/package.json
+++ b/package.json
@@ -26,7 +26,7 @@
     "assert-plus": "0.1.5",
     "bunyan": "1.5.1",
     "changefeed": "1.2.0",
-    "cueball": "2.1.1",
+    "cueball": "2.2.6",
     "dashdash": "1.10.1",
     "deep-equal": "1.0.1",
     "ipaddr.js": "1.0.3",
@@ -36,9 +36,9 @@
     "mooremachine": "2.1.0",
     "mname": "1.3.5",
     "redis": "2.1.0",
-    "restify": "4.0.3",
-    "restify-clients": "1.1.1",
-    "restify-errors": "4.2.0",
+    "restify": "4.3.0",
+    "restify-clients": "1.5.0",
+    "restify-errors": "4.3.0",
     "sdc-scripts": "git+https://github.com/joyent/sdc-scripts.git#d01c308",
     "sprintf-js": "^1.0.3",
     "triton-tags": "^1.1.2",
diff --git a/server.js b/server.js
index 13fa491..40d4c07 100644
--- a/server.js
+++ b/server.js
@@ -14,6 +14,7 @@ var APIServer = require('./lib/api-server');
 var restify = require('restify');
 var path = require('path');
 var cueball = require('cueball');
+var EventEmitter = require('events').EventEmitter;
 
 var confPath;
 if (process.argv[2])
@@ -57,6 +58,20 @@ var redisPool = new cueball.ConnectionPool({
 		c.destroy = function () {
 			c.end(false);
 		};
+		c.emit = function () {
+			var args = arguments;
+			/*
+			 * The redis client emits 'ready' when it's actually
+			 * ready for use. It also emits 'connect', before
+			 * it's ready but after the TCP socket connects. We
+			 * don't care about that, so drop it.
+			 */
+			if (args[0] === 'connect')
+				return (this);
+			if (args[0] === 'ready')
+				args[0] = 'connect';
+			return (EventEmitter.prototype.emit.apply(this, args));
+		};
 		c.unref = function () {};
 		c.ref = function () {};
 		return (c);
-- 
2.21.0

