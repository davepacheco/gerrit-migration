commit d6b4be83d18a956f17bbcf4cc7dbf7ac6aa34c91
Author: Josh Wilsdon <jwilsdon@joyent.com>
Date:   2019-03-08T14:19:15-08:00 (7 months ago)
    
    TRITON-1293 CNAPI server.transitional_status being undefined confuses some clients

diff --git a/docs/index.md b/docs/index.md
index ba1c6db..0f273eb 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -72,7 +72,6 @@ found in sapi_manifests/cnapi/template.
 | **dapi.changeDefaults**   | Object | -       | This provides some means to override VM allocation behaviour.       |
 | **dapi.changeDefaults.server_spread**        | String | -            | **DEPRECATED** How VMs are spread across CNs (one of: min-ram, max-ram, min-owner, and random)   |
 | **dapi.changeDefaults.filter_docker_min_platform** | String | -      | If present, minimum platform version useful for Docker instances.        |
-| **dapi.changeDefaults.filter_flexible_disk_min_platform** | String | - | If present, minimum platform version useful for instances with flexible disk sizing. |
 | **dapi.changeDefaults.filter_headnode**      | String | true         | Whether VMs cannot allocate on the headnode.                             |
 | **dapi.changeDefaults.filter_min_resources** | String | true         | Whether CPU/RAM/disk limits are ignored when allocating.                 |
 | **dapi.changeDefaults.filter_large_servers** | String | true         | Whether large servers are reserved for larger allocations.               |
@@ -613,7 +612,7 @@ A CNAPI server record looks like the following
 | **status**                           | *String*         | Either 'running' or 'unknown' based on how recently CNAPI has heard from server |
 | **sysinfo**                          | *Object*         | The last given sysinfo payload for server                                  |
 | **traits**                           | *Object*         |                                                                            |
-| **transitional_status**              | *String*         | Takes precedense over `status` when a server is undergoing a status change |
+| **transitional_status**              | *String*         | This field is an implementation detail and should not be used in any way by CNAPI clients. It is exposed only for debugging. It is optional and may be: a string, an empty string, or undefined |
 | **unreserved_cpu**                   |                  |
 | **unreserved_disk**                  |                  |
 | **unreserved_ram**                   |                  |
diff --git a/docs/static.md b/docs/static.md
index d5c0674..4fb7e84 100644
--- a/docs/static.md
+++ b/docs/static.md
@@ -92,6 +92,7 @@ specialized circumstances in production.
 | **ALLOC_WEIGHT_UNRESERVED_DISK**   | Float | 1.0   | Bias selection towards CNs with more unreserved disk.                        |
 | **ALLOC_WEIGHT_UNRESERVED_RAM**    | Float | 2.0   | Bias selection towards CNs with more unreserved memory.                      |
 | **FEATURE_USE_CNAGENT_COMMAND_EXECUTE** | Boolean | false | Experimental: Use cn-agent's command_execute function instead of Ur when available. |
+| **FEATURE_ENABLE_VIRTUAL_SERVERS_FILTER** | Boolean | false | Whether to enable the virtual server filtering. When enabled, during DAPI allocation, all virtual servers (e.g. mockcloud servers) will be filtered out if the vm is a docker vm, or the vm has the `triton.placement.exclude_virtual_servers` tag set to true. This virtual server filtering is needed for Triton testing, but should not be enabled for production environments. |
 
 If any of the keys above aren't in the `sdc` `metadata` section, it's treated as
 if the default value was specified. Be careful when changing from the default
@@ -580,7 +581,7 @@ A CNAPI server record looks like the following
 | **status**                           | *String*         | Either 'running' or 'unknown' based on how recently CNAPI has heard from server |
 | **sysinfo**                          | *Object*         | The last given sysinfo payload for server                                  |
 | **traits**                           | *Object*         |                                                                            |
-| **transitional_status**              | *String*         | Takes precedense over `status` when a server is undergoing a status change |
+| **transitional_status**              | *String*         | This field is an implementation detail and should not be used in any way by CNAPI clients. It is exposed only for debugging. It is optional and may be: a string, an empty string, or undefined |
 | **unreserved_cpu**                   |                  |
 | **unreserved_disk**                  |                  |
 | **unreserved_ram**                   |                  |
diff --git a/lib/models/server.js b/lib/models/server.js
index 1b43445..abaa743 100644
--- a/lib/models/server.js
+++ b/lib/models/server.js
@@ -86,7 +86,7 @@ var GENERAL_KEYS = [
     'status',                  // special, see below
     'sysinfo',                 // the whole sysinfo object from /usr/bin/sysinfo
     'traits',                  // initially empty, updated manually (POST /servers/:uuid
-    'transitional_status',     // initially empty, updated via ServerUpdate when needed
+    'transitional_status',     // initially undefined, updated via ServerUpdate when needed (currently only for server-reboot)
     'uuid',                    // sysinfo['UUID'] (from SMBIOS)
     'vms'                      // updated via status messages from cn-agent
 ];
@@ -98,7 +98,10 @@ var GENERAL_KEYS = [
 // 'running' if we have seen an ur.sysinfo broadcast message in the last 90
 // seconds. For setup servers, the status is marked running if we have seen
 // heartbeat from cn-agent in the last 11 seconds. Otherwise, the server is
-// marked 'unknown'.
+// marked 'unknown'. When a CN is rebooting we also set transitional_status
+// to 'rebooting' (in the server-reboot job) and replace 'unknown' with
+// 'rebooting' as the status when that is set. So consumers should only look at
+// status for the values: ['running', 'unknown', 'rebooting'].
 //
 // The "bootparams" fields are initially set to the default bootparams and
 // maintained after that through the bootparams endpoints. Most of these can
@@ -1016,6 +1019,15 @@ ModelServer.prototype.getFinal = function (opts, callback) {
             cb();
         },
         function (cb) {
+            //
+            // transitional_status has one use-case, and that's when a server is
+            // being rebooted, we set transitional_status=rebooting (in
+            // the server-reboot job). The status field on the server object
+            // will then show 'rebooting' instead of unknown while it's not
+            // responding due to being rebooted. Consumers of CNAPI should never
+            // look at this field since it is an implementation detail. They
+            // should only look at status.
+            //
             if (server.status === 'unknown' && server.transitional_status) {
                 server.status = server.transitional_status;
                 delete server.transitional_status;
diff --git a/package.json b/package.json
index 92413ab..6684f38 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cnapi",
   "description": "SmartDataCenter Compute Node API",
-  "version": "1.21.1",
+  "version": "1.21.2",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
