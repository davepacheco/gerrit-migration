From b6ba41b2275a7e57e48fc1d6db72483b639c87de Mon Sep 17 00:00:00 2001
From: John Levon <john.levon@joyent.com>
Date: Wed, 21 Aug 2019 17:39:29 +0000
Subject: [PATCH] OS-7960 need fixes for NULL as a pointer

---
 kvm.c     |  8 ++++----
 kvm_mdb.c | 11 +++++------
 2 files changed, 9 insertions(+), 10 deletions(-)

diff --git a/kvm.c b/kvm.c
index 9a729de..30a3f4c 100644
--- a/kvm.c
+++ b/kvm.c
@@ -24,7 +24,7 @@
  *   Yaniv Kamay  <yaniv@qumranet.com>
  *
  * Ported to illumos by Joyent
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  *
  * Authors:
  *   Max Bruning	<max@joyent.com>
@@ -2060,7 +2060,7 @@ kvm_ioctl(dev_t dev, int cmd, intptr_t arg, int md, cred_t *cr, int *rv)
 
 	switch (cmd) {
 	case KVM_GET_API_VERSION:
-		if (arg != NULL) {
+		if (arg != (intptr_t)NULL) {
 			rval = EINVAL;
 			break;
 		}
@@ -2068,7 +2068,7 @@ kvm_ioctl(dev_t dev, int cmd, intptr_t arg, int md, cred_t *cr, int *rv)
 		break;
 
 	case KVM_CREATE_VM:
-		if (arg != NULL) {
+		if (arg != (intptr_t)NULL) {
 			rval = EINVAL;
 			break;
 		}
@@ -2123,7 +2123,7 @@ kvm_ioctl(dev_t dev, int cmd, intptr_t arg, int md, cred_t *cr, int *rv)
 		break;
 
 	case KVM_GET_VCPU_MMAP_SIZE:
-		if (arg != NULL) {
+		if (arg != (intptr_t)NULL) {
 			rval = EINVAL;
 			break;
 		}
diff --git a/kvm_mdb.c b/kvm_mdb.c
index 3b40427..3ab8f7a 100644
--- a/kvm_mdb.c
+++ b/kvm_mdb.c
@@ -19,8 +19,7 @@
  * CDDL HEADER END
  */
 /*
- * Copyright 2012 Joyent Inc.  All rights reserved.
- * Use is subject to license terms.
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <mdb/mdb_param.h>
@@ -57,7 +56,7 @@ kvm_mdb_memory_slot_init(mdb_walk_state_t *wsp)
 	struct kvm kvm;
 	uintptr_t addr;
 
-	if (wsp->walk_addr == NULL) {
+	if (wsp->walk_addr == (uintptr_t)NULL) {
 		mdb_warn("kvm_memory_slot does not support global walks");
 		return (WALK_ERR);
 	}
@@ -105,7 +104,7 @@ kvm_mdb_mem_alias_init(mdb_walk_state_t *wsp)
 	struct kvm kvm;
 	uintptr_t addr;
 
-	if (wsp->walk_addr == NULL) {
+	if (wsp->walk_addr == (uintptr_t)NULL) {
 		mdb_warn("kvm_mem_alias does not support global walks");
 		return (WALK_ERR);
 	}
@@ -282,7 +281,7 @@ kvm_mdb_ringbuf_entry_init(mdb_walk_state_t *wsp)
 	kvm_ringbuf_t *buf;
 	uintptr_t addr;
 
-	if (wsp->walk_addr == NULL) {
+	if (wsp->walk_addr == (uintptr_t)NULL) {
 		mdb_warn("kvm_ringbuf_entry does not support global walks\n");
 		return (WALK_ERR);
 	}
@@ -361,7 +360,7 @@ kvm_mdb_kvm_walk_init(mdb_walk_state_t *wsp)
 {
 	list_t list;
 	GElf_Sym sym;
-	if (wsp->walk_addr != NULL) {
+	if (wsp->walk_addr != (uintptr_t)NULL) {
 		mdb_warn("kvm does not support non-global walks\n");
 		return (WALK_ERR);
 	}
-- 
2.21.0

