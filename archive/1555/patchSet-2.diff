commit 052f87e43c28f3e9b6cda292107f33f2020c3cde (refs/changes/55/1555/2)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2017-02-23T16:15:03-08:00 (2 years, 7 months ago)
    
    DOCKER-893 Improve docker pull reliability

diff --git a/lib/backends/sdc/images.js b/lib/backends/sdc/images.js
index 31ab93b..4c92e9e 100644
--- a/lib/backends/sdc/images.js
+++ b/lib/backends/sdc/images.js
@@ -1392,8 +1392,10 @@ function pullImage(opts, callback) {
      *
      * 1. In some cases the `err.code` is set to a meaningful error code.
      *    This comes via the `JOB.chain_results[-1].error.name`, set by
-     *    pull-image.js error handling.
-     *
+     *    pull-image.js error handling. Note that some older versions of IMGAPI
+     *    can send back docker-registry-client errors (as well as IMGAPI errors)
+     *    that have a different err.code string (drc code will use an extra
+     *    `Error` suffix on the err.code).
      * 2. If there is an error in the Docker Registry v2 API, then `err.message`
      *    equals a JSON string per:
      *        https://docs.docker.com/registry/spec/api/#errors
@@ -1419,7 +1421,14 @@ function pullImage(opts, callback) {
         var recognized = true;
 
         var errmsg;
-        if (err.code === 'ENOTFOUND') {
+        if (
+            /*
+             * `RemoteSourceError` code comes from newer IMGAPI.
+             * `ENOTFOUND` code comes from docker-registry-client - through
+             * old IMGAPI versions.
+             */
+            err.code === 'RemoteSourceError' || err.code === 'ENOTFOUND')
+        {
             /* BEGIN JSSTYLED */
             /*
              * Docker-docker:
@@ -1447,16 +1456,33 @@ function pullImage(opts, callback) {
              *  Pulling repository docker.io/trentm/busybox-i-am-in-you
              *  Error: image trentm/busybox-i-am-in-you:latest not found
              *
-             * --- NotFoundError
+             * --- ResourceNotFoundError
              * E.g.: `docker pull quay.io/no-such-user`
              */
-            err.code === 'UnauthorizedError' || err.code === 'NotFoundError')
+            err.code === 'UnauthorizedError' || /* newer IMGAPI */
+            err.code === 'UNAUTHORIZED' || /* older IMGAPI */
+            err.code === 'ResourceNotFound' || /* newer IMGAPI */
+            err.code === 'NotFoundError')      /* older IMGAPI */
         {
             errmsg = format('Error: image %s not found', imgName);
-        } else if (err.code === 'DownloadError') {
-            // E.g. A `DownloadError` from docker-registry-client.
+        } else if (
+            /*
+             * `Download` code comes from newer IMGAPI.
+             * `DownloadError` code comes from docker-registry-client - through
+             * old IMGAPI versions.
+             */
+            err.code === 'Download' || err.code === 'DownloadError')
+        {
             errmsg = format('Error downloading %s: %s', imgName, err.message);
-        } else if (err.code === 'ConnectTimeoutError') {
+        } else if (
+            /*
+             * `RemoteSourceError` code comes from newer IMGAPI.
+             * `ConnectTimeoutError` code comes from docker-registry-client -
+             * through old IMGAPI versions.
+             */
+            err.code === 'ConnectTimeoutError'
+            || err.code === 'RemoteSourceError')
+        {
             errmsg = format('Timeout connecting to host %s',
                 opts.rat.index.name);
         } else if (err.code === 'NotImplemented') {
diff --git a/test/integration/cli-pull.test.js b/test/integration/cli-pull.test.js
index 0cbb848..97b8171 100644
--- a/test/integration/cli-pull.test.js
+++ b/test/integration/cli-pull.test.js
@@ -105,7 +105,7 @@ test('docker pull', function (tt) {
      * Triton-docker:
      *  $ docker --tls pull nope.example.com/nope
      *  Using default tag: latest
-     *  Error pulling image: (ENOTFOUND) nope.example.com host not found (...)
+     *  Error pulling image: (RemoteSourceError) nope.example.com host not found (...)
      */
     /* END JSSTYLED */
     tt.test('  docker pull nope.example.com/nope', function (t) {
@@ -114,7 +114,7 @@ test('docker pull', function (tt) {
             t.ok(err, 'expect failed pull: ' + err);
 
             /* JSSTYLED */
-            var pat = /Error pulling image: \(ENOTFOUND\) nope.example.com host not found/m;
+            var pat = /Error pulling image: \(RemoteSourceError\) nope.example.com host not found/m;
             t.ok(pat.test(stderr), format('stderr matches %s, stderr=%j',
                 pat, stderr));
 
