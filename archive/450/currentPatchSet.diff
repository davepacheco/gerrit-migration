From 2d982d0be0a4e82df1e4ad13c39efc01772a5e44 Mon Sep 17 00:00:00 2001
From: dboldyrev <Arc3111@gmail.com>
Date: Mon, 22 Aug 2016 19:35:16 +0300
Subject: [PATCH] ADMINUI-2312 IPv6 support evaluation

---
 less/networks.less                            |  74 ++++++--
 www/js/components/alarms-menu.jsx             |  53 +++---
 www/js/components/ip.jsx                      |   5 +-
 www/js/components/multi-nic-config.jsx        |   7 +
 .../pages/network/addresses-list.jsx          |  78 ++++----
 .../pages/networking/fabric-vlan-list.jsx     |  44 +++--
 .../pages/networking/networks-list.jsx        |  93 ++++++----
 www/js/components/pages/signin/index.jsx      |  21 +--
 www/js/lib/utils.js                           | 167 +++++++++++++++---
 www/js/views/provision-vm.js                  |  10 +-
 10 files changed, 382 insertions(+), 170 deletions(-)

diff --git a/less/networks.less b/less/networks.less
index 66a3005b..4269e4e4 100644
--- a/less/networks.less
+++ b/less/networks.less
@@ -40,24 +40,51 @@
   }
 
   .networks-list {
-    li {
-      &.hover { background: @state-warning-bg; }
+    &>div {
+      overflow-x: auto;
+    }
+    tr {
+      &.hover {
+        background: @state-warning-bg;
+      }
       .widget-content;
-      display: block;
       padding: 10px;
       margin-bottom: 1px;
 
-      &>div { vertical-align:top; display: inline-block; }
-      strong { display: block; }
+      &>td {
+        &:last-child {
+          width: 100%
+        }
+        table-layout: fixed;
+        vertical-align: top;
+        padding: 10px;
+      }
+      strong {
+        display: block;
+      }
       .provision-ip-range {
+        min-width: 200px;
+        max-width: 256px;
+      }
+      .resolvers {
+        min-width: 120px;
+        max-width: 250px;
+      }
+      .owners {
         width: 200px;
       }
-      .resolvers { width: 120px; }
-      .owners { width: 245px; }
-      .gateway { width: 100px; }
+      .gateway {
+        min-width: 100px;
+        max-width: 245px;
+      }
       .name {
-        width: 240px;
-        a { display: block; clear: both; font-weight: bold; }
+        min-width: 140px;
+        max-width: 320px;
+        a {
+          display: block;
+          clear: both;
+          font-weight: bold;
+        }
       }
       .subnet {
         color: @gray-dark;
@@ -68,14 +95,29 @@
         width: 60px;
       }
       .mtu {
-        width: 150px;
+        width: 125px;
+      }
+      strong {
+        font-size: 12px;
+        color: @gray-light;
       }
-      strong {font-size: 12px; color: @gray-light;}
       .actions {
-        a.delete {color: @state-danger-text; text-decoration: none; font-weight: bold;}
-        float: right; vertical-align: middle; color: @state-danger-text; visibility: hidden;}
-        a.edit {margin-right: 10px;}
-      &:hover .actions {visibility: visible;}
+        a.delete {
+          color: @state-danger-text;
+          text-decoration: none;
+          font-weight: bold;
+        }
+        float: right;
+        vertical-align: middle;
+        color: @state-danger-text;
+        visibility: hidden;
+      }
+        a.edit {
+          margin-right: 10px;
+        }
+      &:hover .actions {
+        visibility: visible;
+      }
       .value {
         color: @gray-dark;
         font-family: @font-family-monospace;
diff --git a/www/js/components/alarms-menu.jsx b/www/js/components/alarms-menu.jsx
index 79dc1d53..8e2c35a4 100644
--- a/www/js/components/alarms-menu.jsx
+++ b/www/js/components/alarms-menu.jsx
@@ -36,7 +36,7 @@ var AlarmsMenu = React.createClass({
         this.setState({menu: !this.state.menu});
     },
 
-    componentWillMount: function() {
+    componentWillMount: function () {
         this._probeFetches = {};
         this._probeGroupFetches = {};
         this.fetchAlarms();
@@ -44,7 +44,7 @@ var AlarmsMenu = React.createClass({
         this._interval = setInterval(this.fetchAlarms, AMON_POLL_INTERVAL);
     },
 
-    componentWillUnmount: function() {
+    componentWillUnmount: function () {
         adminui.vent.off('alarms:changed', this.fetchAlarms);
         clearInterval(this._interval);
     },
@@ -57,15 +57,16 @@ var AlarmsMenu = React.createClass({
             container: 'body',
             trigger: 'hover'
         }).tooltip('disable');
+        this.alarmsMenuContainer.tooltip(this.state.alarms.length >= 500 ? 'enable' : 'disable');
     },
 
-    fetchProbeGroup: function(id) {
+    fetchProbeGroup: function (id) {
         if (this._probeGroupFetches[id]) {
             return;
         }
         this.setState({loading: true});
-        var p = new Promise(function(resolve, reject) {
-            api.get('/api/amon/probegroups/'+this.props.user + '/' + id).end(function(err, res) {
+        var probeGroupsPromise = new Promise(function (resolve, reject) {
+            api.get('/api/amon/probegroups/' + this.props.user + '/' + id).end(function (err, res) {
                 if (res.ok) {
                     resolve(res.body);
                 } else {
@@ -74,26 +75,23 @@ var AlarmsMenu = React.createClass({
             }.bind(this));
         }.bind(this));
 
-        console.debug('[AlarmsMenu] fetching', id);
-        this._probeGroupFetches[id] = p;
-
-        p.then(function(res) {
+        this._probeGroupFetches[id] = probeGroupsPromise;
+        probeGroupsPromise.then(function (res) {
             var probes = this.state.probes;
             probes[id] = res;
             this.setState({probes: probes});
-            console.debug('[AlarmsMenu] fetch', id, 'done');
         }.bind(this));
     },
 
-    fetchProbe: function(id) {
+    fetchProbe: function (id) {
         if (this._probeFetches[id]) {
             return;
         }
 
         this.setState({loading: true});
 
-        var p = new Promise(function(resolve, reject) {
-            api.get('/api/amon/probes/'+this.props.user + '/' + id).end(function(err, res) {
+        var probesPromise = new Promise(function (resolve, reject) {
+            api.get('/api/amon/probes/' + this.props.user + '/' + id).end(function (err, res) {
                 if (res.ok) {
                     resolve(res.body);
                 } else {
@@ -102,14 +100,11 @@ var AlarmsMenu = React.createClass({
             }.bind(this));
         }.bind(this));
 
-        console.debug('fetching', id);
-        this._probeFetches[id] = p;
-
-        p.then(function(res) {
+        this._probeFetches[id] = probesPromise;
+        probesPromise.then(function (res) {
             var probes = this.state.probes;
             probes[id] = res;
             this.setState({probes: probes});
-            console.debug('fetch', id, 'done');
         }.bind(this));
     },
 
@@ -121,8 +116,7 @@ var AlarmsMenu = React.createClass({
                     message: 'AdminUI: Connected.'
                 });
             }
-            var state = alarms.length >= 500 ? 'enable' : 'disable';
-            this.alarmsMenuContainer.tooltip(state);
+            this.alarmsMenuContainer && this.alarmsMenuContainer.tooltip(alarms.length >= 500 ? 'enable' : 'disable');
             this.setState({alarms: alarms, error: null});
             alarms.map(function (alarm) {
                 if (alarm.probe) {
@@ -193,9 +187,9 @@ var AlarmsMenu = React.createClass({
 
     gotoAlarm: function (alarm) {
         console.log('go to alarm', alarm);
-        adminui.vent.trigger('showcomponent', 'alarm', { user: alarm.user, id: alarm.id.toString() });
+        adminui.vent.trigger('showcomponent', 'alarm', {user: alarm.user, id: alarm.id.toString()});
     },
-    renderMenuItem: function(alarm) {
+    renderMenuItem: function (alarm) {
         var probe = this.state.probes[alarm.probe || alarm.probeGroup];
         console.log('probe', probe);
 
@@ -213,19 +207,19 @@ var AlarmsMenu = React.createClass({
                     <a onClick={this.gotoAlarm.bind(null, alarm)} className="probe"><span className="probe-name">??</span></a>
                 }
                 <div className="alarm-lastevent">
-                <i className="fa fa-clock-o"></i> { moment(alarm.timeLastEvent).fromNow() }
+                <i className="fa fa-clock-o"></i> {moment(alarm.timeLastEvent).fromNow()}
                 </div>
             </div>
             <div className="alarm-menu-item-content">
                 <div className="faults">
-                {alarm.faults.map(function(f) {
+                {alarm.faults.map(function (f) {
                     return <div key={f.event.uuid} className="fault">{f.event.data.message}</div>;
                 })}
                 </div>
             </div>
         </div>);
     },
-    menu: function() {
+    menu: function () {
         if (this.state.menu) {
             if (this.state.error) {
                 return <div className="alarms-menu-wrapper open">
@@ -266,15 +260,15 @@ var AlarmsMenu = React.createClass({
             return '';
         }
     },
-    render: function() {
+    render: function () {
         var toggleMenu = this.state.error ?
             <a onClick={this.toggleMenu} className={
-                ('toggle ' + (this.state.menu ? ' active ' : '' ) + (this.state.error ? ' has-error' : '' ))
+                ('toggle ' + (this.state.menu ? ' active ' : '') + (this.state.error ? ' has-error' : ''))
             }><i className="fa fa-warning"></i> E</a>
             :
             <a onClick={this.toggleMenu} className={
-                ('toggle ' + (this.state.menu ? ' active ' : '' ) + (this.state.alarms.length ? ' has-alarms ' : '' ))
-            }><i className="fa fa-bell"></i> { this.state.alarms.length }</a>;
+                ('toggle ' + (this.state.menu ? ' active ' : '') + (this.state.alarms.length ? ' has-alarms ' : ''))
+            }><i className="fa fa-bell"></i> {this.state.alarms.length}</a>;
 
         return <div className="alarms-menu-container">
             {toggleMenu}
@@ -283,5 +277,4 @@ var AlarmsMenu = React.createClass({
     }
 });
 
-
 module.exports = AlarmsMenu;
diff --git a/www/js/components/ip.jsx b/www/js/components/ip.jsx
index 84db6837..0a7120f5 100644
--- a/www/js/components/ip.jsx
+++ b/www/js/components/ip.jsx
@@ -13,6 +13,7 @@
 'use strict';
 var React = require('react');
 var $ = require('jquery');
+var utils = require('../lib/utils');
 
 var Ip = React.createClass({
     getInitialState: function () {
@@ -33,8 +34,8 @@ var Ip = React.createClass({
                 isLoaded: true,
                 error: error || ''
             });
-        }
-        if (ipParts.length === 4 && ipParts[3].length) {
+        };
+        if (ipParts.length === 4 && ipParts[3].length || utils.isIPv6(ip)) {
             this.setState({
                 isLoaded: false
             });
diff --git a/www/js/components/multi-nic-config.jsx b/www/js/components/multi-nic-config.jsx
index 666a9788..c53040e4 100644
--- a/www/js/components/multi-nic-config.jsx
+++ b/www/js/components/multi-nic-config.jsx
@@ -24,11 +24,18 @@ var MultipleNicConfigComponent = React.createClass({
         onChange: React.PropTypes.func
     },
     getValue: function () {
+        var self = this;
         var nics = this.state.nics;
         var result = [];
         Object.keys(nics).forEach(function (uuid) {
             var nic = nics[uuid];
             if (Object.keys(nic).length) {
+                self.state.networks.find(function (network) {
+                    if (network.uuid === nic.network_uuid) {
+                        nic.subnet = network.subnet;
+                        return true;
+                    }
+                });
                 result.push(nic);
             }
         });
diff --git a/www/js/components/pages/network/addresses-list.jsx b/www/js/components/pages/network/addresses-list.jsx
index da552d99..e3d93000 100644
--- a/www/js/components/pages/network/addresses-list.jsx
+++ b/www/js/components/pages/network/addresses-list.jsx
@@ -27,6 +27,7 @@ var AddressesList = React.createClass({
             networkUuid: this.props.networkUuid,
             selected: [],
             updateCollection: false,
+            count: this.props.count || 10,
             collection: this.props.collection || new Addresses()
         };
     },
@@ -172,49 +173,58 @@ var AddressesList = React.createClass({
         }
     },
 
-    _handleAddRange: function (e) {
-        if (e) {
-            e.preventDefault();
+    _handleAddRange: function (event) {
+        var MAX_IP_COUNT = 100;
+        if (event) {
+            event.preventDefault();
         }
         var self = this;
-        var confirm = window.confirm('Are you sure you want to expose all IP addresses in this range? This action may take a while.');
-        if (confirm) {
-            var range = this.state.range;
-            var collection = this.state.collection;
-            var ipAddresses = utils.getNetworkIpList(collection, this.state.networkUuid, range.startIp, range.endIp, true);
-            var provisionIpRange = function () {
-                var promises = $.map(ipAddresses, function (address) {
-                    var deferred = $.Deferred();
-                    collection.create(address, {patch: true, wait: true, silent: true, success: function () {
-                        deferred.resolve();
-                    }});
-                    return deferred.promise();
-                });
-                $.when.apply(null, promises).done(function () {
-                    collection.fetch().done(function () {
-                        collection.getLastPage();
-                        self.notificationSuccess(ipAddresses.length + ' IP addresses successfully added.');
-                    });
+        var count = this.state.count;
+        if (count > MAX_IP_COUNT) {
+            window.alert('IP Addresses count can\'t be more than' + MAX_IP_COUNT + '.');
+            return;
+        }
+        var range = this.state.range;
+        var collection = this.state.collection;
+        var ipAddresses = utils.getNetworkIpList(collection, this.state.networkUuid, range.startIp, count, true);
+        var provisionIpRange = function () {
+            var promises = $.map(ipAddresses, function (address) {
+                var deferred = $.Deferred();
+                collection.create(address, {patch: true, wait: true, silent: true, success: function () {
+                    deferred.resolve();
+                }});
+                return deferred.promise();
+            });
+            $.when.apply(null, promises).done(function () {
+                collection.fetch().done(function () {
+                    collection.getLastPage();
+                    var plural = ipAddresses.length > 1 ? 'addresses have' : 'address has';
+                    self.notificationSuccess(ipAddresses.length + ' IP ' + plural + ' been successfully added.');
                 });
-            };
+            });
+        };
 
-            if (ipAddresses.length) {
-                provisionIpRange();
-            } else {
-                self.notificationSuccess('All IP addresses in this range have been added.');
-            }
+        if (ipAddresses.length) {
+            provisionIpRange();
+        } else {
+            self.notificationSuccess('All IP addresses in this range have been added.');
         }
     },
 
-    _handleChangeRangeAddress: function (isLast, e) {
-        var value = e.target.value;
+    _handleChangeRangeAddress: function (event) {
+        var value = event.target.value;
         var range = this.state.range;
-        var part = isLast ? 'end' : 'start';
-        range[part] = value;
-        range[part + 'Ip'] = range.commonPart + value;
+        range.start = value;
+        range.startIp = range.commonPart + value;
         this.setState({range: range});
     },
 
+    _handleChangeAddressCount: function (event) {
+        var value = event.target.value;
+        value = value.replace(/\D/g, '');
+        this.setState({count: value});
+    },
+
     renderActionBar: function () {
         var numSelectedServers = this.state.selected.length;
         var hasNotOnlyReservedAddresses = this.state.selected.some(function (item) {return !item.reserved;});
@@ -305,8 +315,8 @@ var AddressesList = React.createClass({
                         <th colSpan="4" className="title">
                             Showing {this.state.collection.length} IP Addresses
                             <div className="range-ips">
-                                {range.commonPart}<input type="text" value={range.start} onChange={self._handleChangeRangeAddress.bind(this, false)} /> -
-                                {range.commonPart}<input type="text" value={range.end} onChange={self._handleChangeRangeAddress.bind(this, true)} />
+                                {range.commonPart}<input type="text" value={range.start} onChange={self._handleChangeRangeAddress} />
+                                <span> Count </span><input type="text" value={this.state.count} onChange={self._handleChangeAddressCount} />
                                 <button type="button" className="btn btn-info" onClick={this._handleSelectRange}>Select Range</button>
                                 <button type="button" className="btn btn-info" onClick={this._handleAddRange}>Add IP Addresses</button>
                             </div>
diff --git a/www/js/components/pages/networking/fabric-vlan-list.jsx b/www/js/components/pages/networking/fabric-vlan-list.jsx
index 95ce5fb0..68587f27 100644
--- a/www/js/components/pages/networking/fabric-vlan-list.jsx
+++ b/www/js/components/pages/networking/fabric-vlan-list.jsx
@@ -63,25 +63,33 @@ var FabricVlansListItem = React.createClass({
     },
     render: function () {
         var data = this.state.model.toJSON();
-        return (<li className='vlan-item'>
-                <div className="name">
-                    <a onClick={this.handleClick}>{data.name}</a>
-                </div>
-                <div className="vlan">
-                    <strong>VLAN ID</strong>
-                    <span className="value">{data.vlan_id}</span>
-                </div>
-                <div className="description">
-                    <strong>Description</strong>
-                    <span className="value">{data.description}</span>
-                </div>
-                {adminui.user.role('operators') || adminui.user.role('readers') ?
-                    <div className="actions">
-                        <a onClick={this.handleEdit} className="edit"><i className="fa fa-pencil"></i> Edit</a>
-                        <a onClick={this.deleteVlan} className="delete"><i className="fa fa-trash-o"></i> Delete</a>
+        return (<tr className='vlan-item'>
+                <td>
+                    <div className="name">
+                        <a onClick={this.handleClick}>{data.name}</a>
                     </div>
+                </td>
+                <td>
+                    <div className="vlan">
+                        <strong>VLAN ID</strong>
+                        <span className="value">{data.vlan_id}</span>
+                    </div>
+                </td>
+                <td>
+                    <div className="description">
+                        <strong>Description</strong>
+                        <span className="value">{data.description}</span>
+                    </div>
+                </td>
+                {adminui.user.role('operators') || adminui.user.role('readers') ?
+                    <td>
+                        <div className="actions">
+                            <a onClick={this.handleEdit} className="edit"><i className="fa fa-pencil"></i> Edit</a>
+                            <a onClick={this.deleteVlan} className="delete"><i className="fa fa-trash-o"></i> Delete</a>
+                        </div>
+                    </td>
                     : null}
-            </li>
+            </tr>
         );
     }
 });
@@ -118,7 +126,7 @@ var FabricVlansList = React.createClass({
                     </div>
                 </div>
                 <div className="vlans-list">
-                    <ul className="list-unstyled fabric-vlans-list">{nodes}</ul>
+                    <table className="list-unstyled fabric-vlans-list">{nodes}</table>
                 </div>
             </div>);
         }
diff --git a/www/js/components/pages/networking/networks-list.jsx b/www/js/components/pages/networking/networks-list.jsx
index fe776cc6..76702a84 100644
--- a/www/js/components/pages/networking/networks-list.jsx
+++ b/www/js/components/pages/networking/networks-list.jsx
@@ -161,42 +161,59 @@ var NetworksList = React.createClass({
                 <i className="fa fa-external-link"> {uuid}</i>
             </a>)
         });
-        return (<li>
-            <div className="name"><a onClick={this.showNetwork.bind(this, model)}>{network.name}</a> <span classNmae="subnet">{network.subnet}</span></div>
-            <div className="vlan">
-                <strong>VLAN ID</strong>
-                <span className="value">{network.vlan_id}</span>
-            </div>
-            <div className="gateway">
-                <strong>Gateway</strong>
-                <span className="value">{network.gateway || '-'}</span>
-            </div>
-            <div className="provision-ip-range">
-                <strong>Range</strong>
-                <span className="value">{network.provision_start_ip} - {network.provision_end_ip}</span>
-            </div>
-            <div className="resolvers">
-                <strong>Resolvers</strong>
-                <span className="value">
-                    {resolvers}
-                </span>
-            </div>
-            <div className="owners">
-                <strong>Owners</strong>
-                <span className="value">
-                    {owners.length ? owners : '-'}
-                </span>
-            </div>
-            <div className="mtu">
-                <strong>MTU / NIC Tag MTU</strong>
-                <span className="value">{network.mtu} / {this.nicTagsMtu[network.nic_tag]}</span>
-            </div>
+        return (<tr>
+            <td>
+                <div className="name">
+                    <a onClick={this.showNetwork.bind(this, model)}>{network.name}</a>
+                    <span classNmae="subnet">{network.subnet}</span>
+                </div>
+            </td>
+            <td>
+                <div className="vlan">
+                    <strong>VLAN ID</strong>
+                    <span className="value">{network.vlan_id}</span>
+                </div>
+            </td>
+            <td>
+                <div className="gateway">
+                    <strong>Gateway</strong>
+                    <span className="value">{network.gateway || '-'}</span>
+                </div>
+            </td>
+            <td>
+                <div className="provision-ip-range">
+                    <strong>Range</strong>
+                    <span className="value">{network.provision_start_ip} - {network.provision_end_ip}</span>
+                </div>
+            </td>
+            <td>
+                <div className="resolvers">
+                    <strong>Resolvers</strong>
+                    <span className="value">{resolvers}</span>
+                </div>
+            </td>
+            <td>
+                <div className="owners">
+                    <strong>Owners</strong>
+                    <span className="value">{owners.length ? owners : '-'}</span>
+                </div>
+            </td>
+            <td>
+                <div className="mtu">
+                    <strong>MTU / NIC Tag MTU</strong>
+                    <span className="value">{network.mtu} / {this.nicTagsMtu[network.nic_tag]}</span>
+                </div>
+            </td>
             {this.props.showActions && adminui.user.role('operators') || adminui.user.role('readers') ?
-                (<div className="actions">
-                    <a onClick={this.deleteNetwork.bind(this, model)} className="delete"><i className="fa fa-trash-o"></i> Delete</a>
-                </div>)
+                (<td>
+                    <div className="actions">
+                        <a onClick={this.deleteNetwork.bind(this, model)} className="delete">
+                            <i className="fa fa-trash-o"></i> Delete
+                        </a>
+                    </div>
+                </td>)
             : null}
-        </li>);
+        </tr>);
     },
 
     render: function () {
@@ -219,9 +236,11 @@ var NetworksList = React.createClass({
                 <div className="title">{title}</div>
             </div>}
             {networksCount > 0 ? (<div className="networks-list">
-                <ul className="list-unstyled networks-list">
-                    {networksCollection.map(this.renderNetwork)}
-                </ul>
+                <div>
+                    <table className="list-unstyled networks-list">
+                        <tbody>{networksCollection.map(this.renderNetwork)}</tbody>
+                    </table>
+                </div>
                 {pagination}
             </div>) : null}
         </div>;
diff --git a/www/js/components/pages/signin/index.jsx b/www/js/components/pages/signin/index.jsx
index 521fb5e5..1814e38e 100644
--- a/www/js/components/pages/signin/index.jsx
+++ b/www/js/components/pages/signin/index.jsx
@@ -62,17 +62,18 @@ var SigninComponent = React.createClass({
         this.pinger.stop();
         this.pinger.removeListener('ping', this.onPing);
         this.props.userModel.off('error', this._onSigninError);
+        $(window).off('resize', this.centerSigninBox);
     },
-    centerSigninBox: function() {
-        var $v = $(this.refs.view.getDOMNode());
-        var w = $(window).width();
-        var h = $(window).height();
-        var x = (w/2)-$v.width()/2;
-        var y = (h/2)-$v.height()/2;
-        if (y < 0) { y = 0; }
-        $v.css({
-            left: x + 'px',
-            top: y + 'px'
+    centerSigninBox: function () {
+        var view = $(this.refs.view.getDOMNode());
+        var windowWidth = $(window).width();
+        var windowHeight = $(window).height();
+        var abscissa = (windowWidth / 2) - view.width() / 2;
+        var ordinate = (windowHeight / 2) - view.height() / 2;
+        ordinate = ordinate < 0 ? 0 : ordinate;
+        view.css({
+            left: abscissa + 'px',
+            top: ordinate + 'px'
         });
     },
     focusFirstInput: function() {
diff --git a/www/js/lib/utils.js b/www/js/lib/utils.js
index 8b164f4a..d01ebbe7 100644
--- a/www/js/lib/utils.js
+++ b/www/js/lib/utils.js
@@ -1,3 +1,48 @@
+function hexCarryOver(value, index, result) {
+    if (value.length === 2) {
+        result[index + 1] = value[0];
+        value = value[1];
+    }
+    if (result[index]) {
+        var sum = (parseInt(result[index] || '0', 16) + parseInt(value, 16)).toString(16);
+        if (sum.length > 1) {
+            hexCarryOver(sum[0], index + 1, result);
+            sum = sum[1];
+        }
+        result[index] = sum;
+    } else {
+        result[index] = value;
+    }
+}
+
+function hexIncrement(value) {
+    var result = ['0'];
+    var singleResult = parseInt(value[value.length - 1], 16) + 1;
+    hexCarryOver(singleResult.toString(16), 0, result);
+    for (var i = value.length - 2; i >= 0; i--) {
+        hexCarryOver(parseInt(value[i], 16).toString(16), value.length - i - 1, result);
+    }
+    return result.reverse().join('');
+}
+
+function hexAddition(firstValue, secondValue) {
+    var result = ['0'];
+    var singleResult = '';
+    if (firstValue.length < secondValue.length) {
+        var value = firstValue;
+        firstValue = secondValue;
+        secondValue = value;
+    }
+
+    for (var i = firstValue.length - 1, j = 1; i >= 0; i--, j++) {
+        singleResult = secondValue[secondValue.length - j] ?
+            parseInt(firstValue[i], 16) + parseInt(secondValue[secondValue.length - j], 16) : firstValue[i];
+        hexCarryOver(singleResult.toString(16), firstValue.length - i - 1, result);
+    }
+
+    return result.reverse().join('');
+}
+
 module.exports = {
     setOwnerData: function (data) {
         if (data.owner_uuids) {
@@ -94,15 +139,52 @@ module.exports = {
         });
         return searchParams;
     },
+    isIPv4: function (ip) {
+        return /^\d{1,3}(\.\d{1,3}){3}$/.test(ip);
+    },
+    isIPv6: function (ip) {
+        var regexp = new RegExp('^(([\\da-f]{1,4}:){7,7}[\\da-f]{1,4}|([\\da-f]{1,4}:){1,7}:|' +
+            '([\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|([\\da-f]{1,4}:){1,5}(:[\\da-f]{1,4}){1,2}|' +
+            '([\\da-f]{1,4}:){1,4}(:[\\da-f]{1,4}){1,3}|([\\da-f]{1,4}:){1,3}(:[\\da-f]{1,4}){1,4}|' +
+            '([\\da-f]{1,4}:){1,2}(:[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:((:[\\da-f]{1,4}){1,6})|' +
+            ':((:[\\da-f]{1,4}){1,7}|:))$', 'i');
+        return regexp.test(ip);
+    },
     ip2long: function (ip) {
         var iplong = 0;
+        var isIPv4 = this.isIPv4(ip);
+        var IPv4ParsingRegex = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;
+        var IPv6ParsingRegex = new RegExp('^([\\da-f]{1,4})(:{1,2}(?!:))([\\da-f]{0,4})(:{0,2}(?!:))([\\da-f]{0,4})' +
+            '(:{0,2}(?!:))([\\da-f]{0,4})(:{0,2}(?!:))([\\da-f]{0,4})(:{0,2}(?!:))([\\da-f]{0,4})' +
+            '(:{0,2}(?!:))([\\da-f]{0,4})(:{0,2}(?!:))([\\da-f]{0,4})$', 'i');
         if (typeof ip === 'string') {
-            var components = ip.match(/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/);
+            var SEGMENT_MULTIPLIER = 256;
+            var components = ip.match(isIPv4 ? IPv4ParsingRegex : IPv6ParsingRegex);
             if (components) {
+                var componentIndex = null;
                 var power = 1;
-                for (var i = 4; i >= 1; i--) {
-                    iplong += power * parseInt(components[i], 10);
-                    power *= 256;
+                if (isIPv4) {
+                    for (componentIndex = 4; componentIndex >= 1; componentIndex--) {
+                        iplong += power * parseInt(components[componentIndex], 10);
+                        power *= SEGMENT_MULTIPLIER;
+                    }
+                } else {
+                    var DEFAULT_SIGMENTS_NUMBER = 8;
+                    iplong = '';
+                    components.filter(function (component) {
+                        return component && /^([\da-fA-F]+|::)$/.test(component);
+                    }).forEach(function (component, index, array) {
+                        if (component !== '::') {
+                            while (component.length < 4) {
+                                component = '0' + component;
+                            }
+                            iplong += component;
+                            return;
+                        }
+                        for (var i = 0; i < DEFAULT_SIGMENTS_NUMBER - array.length + 1; i++) {
+                            iplong += '0000';
+                        }
+                    });
                 }
             }
         }
@@ -111,18 +193,36 @@ module.exports = {
     getRange: function (addresses, provStart, provEnd) {
         var firstAddress = provStart || addresses.first().id;
         var lastAddress = provEnd || addresses.last().id;
-        var firstAddressComponents = firstAddress.split('.');
-        var lastAddressComponents = lastAddress.split('.');
+        var isIPv4 = this.isIPv4(firstAddress);
+        var separator = isIPv4 ? '.' : ':';
+        var startIpLong = this.ip2long(firstAddress);
+        var endIpLong = this.ip2long(lastAddress);
+        var firstAddressComponents = isIPv4 ? firstAddress.split(separator) : this.getNetworkIPv6Components(startIpLong);
+        var lastAddressComponents = isIPv4 ? lastAddress.split(separator) : this.getNetworkIPv6Components(endIpLong);
         var range = {
             start: '',
             end: '',
-            commonPart: firstAddressComponents[0] + '.',
-            startIpLong: this.ip2long(firstAddress),
-            endIpLong: this.ip2long(lastAddress)
+            commonPart: firstAddressComponents[0] + separator,
+            startIpLong: startIpLong,
+            endIpLong: endIpLong
         };
-        for (var i = 1; i < 4; i++) {
-            var first = firstAddressComponents[i] + (i === 3 ? '' : '.');
-            var last = lastAddressComponents[i] + (i === 3 ? '' : '.');
+
+        var maxComponentsCount = firstAddressComponents.length > lastAddressComponents.length ?
+            firstAddressComponents.length : lastAddressComponents.length;
+        for (var i = 1; i < maxComponentsCount; i++) {
+            var first = firstAddressComponents[i] || '';
+            var last = lastAddressComponents[i] || '';
+            if (isIPv4) {
+                first += i === 3 ? '' : '.';
+                last += i === 3 ? '' : '.';
+            } else {
+                if (firstAddressComponents.length > i) {
+                    first += i === firstAddressComponents.length - 1 ? '' : ':';
+                }
+                if (lastAddressComponents.length > i) {
+                    last += i === lastAddressComponents.length - 1 ? '' : ':';
+                }
+            }
             if (first === last && !range.start.length) {
                 range.commonPart += first;
             } else {
@@ -134,19 +234,31 @@ module.exports = {
         range.endIp =  range.commonPart + range.end;
         return range;
     },
-    getNetworkIpList: function (addresses, network_uuid, provision_start_ip, provision_end_ip, notProvisioned) {
+    getNetworkIpList: function (addresses, network_uuid, provision_start_ip, count, notProvisioned) {
         addresses = addresses.fullCollection || addresses;
-        var range = this.getRange(addresses, provision_start_ip, provision_end_ip);
         var ips = {};
+        var self = this;
         var allProvisionIps = [];
+        var range = this.getRange(addresses, provision_start_ip);
+        var isIPv4 = this.isIPv4(provision_start_ip || addresses.first().id);
+        var endIpLong = isIPv4 ? count : hexAddition(range.startIpLong, Number(count).toString(16));
         addresses.toJSON().forEach(function (address) {
-            ips[address.ip] = address;
+            var ip = isIPv4 ? address.ip : self.ip2long(address.ip);
+            ips[ip] = address;
         });
-        var start = '0x' + range.startIpLong.toString(16);
-        var end = '0x' + range.endIpLong.toString(16);
-        for (var i = start; i <= end; i++) {
-            var components = [(i>>24) & 0xff, (i>>16) & 0xff, (i>>8) & 0xff, i & 0xff];
-            var ip = components.join('.');
+        var start = range.startIpLong;
+        var end = endIpLong;
+        var separator = isIPv4 ? '.' : ':';
+        var ip;
+        var components;
+        for (var i = start; i < end;) {
+            if (isIPv4) {
+                components = [(i >> 24) & 0xff, (i >> 16) & 0xff, (i >> 8) & 0xff, i & 0xff];
+                ip = components.join(separator);
+            } else {
+                components = this.getNetworkIPv6Components(i);
+                ip = components.join(separator);
+            }
             if (notProvisioned && ips[ip]) {
                 continue;
             }
@@ -156,7 +268,22 @@ module.exports = {
                 free: true,
                 reserved: false
             });
+            i = isIPv4 ? i + 1 : hexIncrement(i);
         }
         return allProvisionIps;
+    },
+    getNetworkIPv6Components: function (ip) {
+        var componentIndex = 0;
+        var componentsArray = ['', '', '', '', '', '', '', ''];
+        ip.split('').forEach(function (number, index) {
+            if (componentsArray[componentIndex] || number !== '0') {
+                componentsArray[componentIndex] += number;
+            }
+            if (index !== 0 && (index + 1) % 4 === 0) {
+                componentsArray[componentIndex] = componentsArray[componentIndex] || '0';
+                componentIndex++;
+            }
+        });
+        return componentsArray;
     }
 };
diff --git a/www/js/views/provision-vm.js b/www/js/views/provision-vm.js
index b1441953..bd36f1c9 100644
--- a/www/js/views/provision-vm.js
+++ b/www/js/views/provision-vm.js
@@ -16,6 +16,7 @@ var Backbone = require('backbone');
 var $ = require('jquery');
 var _ = require('underscore');
 var React = require('react');
+var utils = require('../lib/utils');
 
 var MultiNicConfigComponent = React.createFactory(require('../components/multi-nic-config'));
 var ServerTypeahead = React.createFactory(require('../components/server-typeahead'));
@@ -397,7 +398,8 @@ var View = Backbone.Marionette.Layout.extend({
         }
 
         _.map(values.networks, function (n) {
-            if (typeof n.ipv4_uuid !== 'string' || n.ipv4_uuid.length === 0) {
+            var ip_uuid = n.ipv4_uuid || n.ipv6_uuid;
+            if (typeof ip_uuid !== 'string' || ip_uuid.length === 0) {
                 valid = false;
             }
         });
@@ -478,12 +480,14 @@ var View = Backbone.Marionette.Layout.extend({
         if (this.multiNicConfigComponent) {
             values.networks = _.map(this.multiNicConfigComponent.getValue(), function (nic) {
                 var net = _.clone(nic);
+                var IpVersion = typeof net.subnet === 'string' && utils.isIPv6(net.subnet.split('/')[0]) ? 'ipv6' : 'ipv4';
                 if (net.ip) {
-                    net.ipv4_ips = [net.ip];
+                    net[IpVersion + '_ips'] = [net.ip];
                     delete net.ip;
                 }
-                net.ipv4_uuid = net.network_uuid;
+                net[IpVersion + '_uuid'] = net.network_uuid;
                 delete net.network_uuid;
+                delete net.subnet;
 
                 return net;
             });
-- 
2.21.0

