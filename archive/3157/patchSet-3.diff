From fff33af5fe453e2da588206c1f9c31fbc56a285c Mon Sep 17 00:00:00 2001
From: Julien Gilli <julien.gilli@joyent.com>
Date: Thu, 4 Jan 2018 12:17:03 -0800
Subject: [PATCH] DOCKER-1136 DOCKER-1135 needs more work Reviewed by: Todd
 Whiteman <todd.whiteman@joyent.com> Approved by: Todd Whiteman
 <todd.whiteman@joyent.com>

---
 lib/backends/sdc/containers.js                |  3 +++
 test/images/test-image-with-volume/Dockerfile |  7 ++++--
 test/images/test-image-with-volume/Makefile   |  2 +-
 .../api-create-with-volume-from-image.test.js | 23 +++++++++++--------
 4 files changed, 23 insertions(+), 12 deletions(-)

diff --git a/lib/backends/sdc/containers.js b/lib/backends/sdc/containers.js
index bcb273b..177631e 100644
--- a/lib/backends/sdc/containers.js
+++ b/lib/backends/sdc/containers.js
@@ -2117,6 +2117,9 @@ function buildVmPayload(opts, container, callback) {
                     });
 
                     if (dockerNfsVolumes && dockerNfsVolumesAutomount) {
+                        assert.optionalArrayOfObject(payload.volumes,
+                            'payload.volumes');
+
                         if (payload.volumes !== undefined) {
                             sharedVols = payload.volumes;
                         }
diff --git a/test/images/test-image-with-volume/Dockerfile b/test/images/test-image-with-volume/Dockerfile
index 6276662..d9fef91 100644
--- a/test/images/test-image-with-volume/Dockerfile
+++ b/test/images/test-image-with-volume/Dockerfile
@@ -1,4 +1,7 @@
 FROM busybox
-ADD bar /foo/bar
 VOLUME /foo
-CMD /bin/sh
+# Create a file within the volume and read from that volume to test both read
+# and write access. If any of these commands fails, the exit code of a container
+# running this image will be non-zero and will be communicated to the test that
+# created it.
+CMD echo "bar" > /foo/bar && ls /foo
diff --git a/test/images/test-image-with-volume/Makefile b/test/images/test-image-with-volume/Makefile
index 51ef777..f48b4df 100644
--- a/test/images/test-image-with-volume/Makefile
+++ b/test/images/test-image-with-volume/Makefile
@@ -9,7 +9,7 @@
 #
 
 NAME=joyentunsupported/test-image-with-volume
-VERSION=1.0.0
+VERSION=1.0.1
 
 all:
 	docker build -t $(NAME):$(VERSION) .
diff --git a/test/integration/api-create-with-volume-from-image.test.js b/test/integration/api-create-with-volume-from-image.test.js
index bcb362e..4f41b01 100644
--- a/test/integration/api-create-with-volume-from-image.test.js
+++ b/test/integration/api-create-with-volume-from-image.test.js
@@ -50,15 +50,6 @@ test('setup', function (tt) {
         });
     });
 
-    tt.test('pull test-image-with-volume image', function (t) {
-        h.ensureImage({
-            name: TEST_IMAGE,
-            user: ALICE
-        }, function (err) {
-            t.error(err, 'should be no error pulling image');
-            t.end();
-        });
-    });
 });
 
 test('api: create', function (tt) {
@@ -67,6 +58,8 @@ test('api: create', function (tt) {
 
     tt.test('docker create', function (t) {
         h.createDockerContainer({
+            start: true,
+            wait: true,
             imageName: TEST_IMAGE,
             vmapiClient: VMAPI,
             dockerClient: DOCKER_ALICE,
@@ -74,7 +67,19 @@ test('api: create', function (tt) {
         }, oncreate);
 
         function oncreate(err, result) {
+            var expectedExitCode = 0;
+
             t.ifErr(err, 'create container');
+            t.ok(result, 'result should not be empty');
+            t.ok(result.inspect, 'inspect info should not be empty');
+            t.ok(result.inspect.State,
+                'inspect info should have a State property');
+            if (result && result.inspect && result.inspect.State) {
+                t.equal(result.inspect.State.ExitCode, expectedExitCode,
+                    'exit code should be ' + expectedExitCode + ', got: '
+                        + result.inspect.State.ExitCode);
+            }
+
             created = result;
             t.end();
         }
-- 
2.21.0

