{"project":"joyent/illumos-joyent","branch":"master","id":"I632f6e9ad4700c24ac31211bdb74c0874d6cc8e1","number":"1193","subject":"OS-5879 lxbrand should expose ASLR via sysctl","owner":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"url":"https://cr.joyent.us/1193","commitMessage":"OS-5879 lxbrand should expose ASLR via sysctl\n","createdOn":1483031191,"lastUpdated":1485099679,"open":true,"status":"NEW","comments":[{"timestamp":1483031191,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 1."},{"timestamp":1483044294,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 1:\n\n(2 comments)"},{"timestamp":1483047561,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 1:\n\n(2 comments)"},{"timestamp":1483048162,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 2."},{"timestamp":1483058161,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1483538569,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\nChanging vmadm to set the secflags is not the right way to go. There are various better options. Patrick and I discussed this and agree that setting the secflags during zone boot, based on the kernel version configured on the zone, makes the most sense. Can you add that to this CR?"},{"timestamp":1483630722,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 2:\n\n(2 comments)"},{"timestamp":1483633290,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1483633824,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1483658953,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 2:\n\n\u003e Changing vmadm to set the secflags is not the right way to go.\n \u003e There are various better options. Patrick and I discussed this and\n \u003e agree that setting the secflags during zone boot, based on the\n \u003e kernel version configured on the zone, makes the most sense. Can\n \u003e you add that to this CR?\n\nYes. I will add this."},{"timestamp":1483659621,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 3."},{"timestamp":1483659712,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1483944161,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1483944169,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 4."},{"timestamp":1484202219,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 5."},{"timestamp":1484202316,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 2:\n\n\u003e Changing vmadm to set the secflags is not the right way to go.\n \u003e There are various better options. Patrick and I discussed this and\n \u003e agree that setting the secflags during zone boot, based on the\n \u003e kernel version configured on the zone, makes the most sense. Can\n \u003e you add that to this CR?\n\nI\u0027ve added this logic to lx_setattr, which I\u0027ve tested to work at boot"},{"timestamp":1484237343,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 5:\n\n(3 comments)\n\nThis looks pretty good.  I have two nits plus one open question."},{"timestamp":1484260949,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 5:\n\n(2 comments)\n\nAgree with Patrick that this looks good and agree with his comments. I just had a few small additional nits."},{"timestamp":1484451800,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 5:\n\n(5 comments)"},{"timestamp":1484584617,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 6."},{"timestamp":1484659377,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 6:\n\nThis looks good. Once you hear back from Rich Lowe on Patrick\u0027s question I am happy. In regards to a debug build. there is no hard rule on doing both or not. Some developers never do a debug build and others only do a debug build. It\u0027s probably good to do both at first, just to see the difference."},{"timestamp":1484708059,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 7."},{"timestamp":1484744952,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7:\n\nIt looks like your latest patch includes some unrelated changes for the tty gid stuff. I am not sure what you did exactly that caused this."},{"timestamp":1484745069,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7:\n\nMaybe you just rebased since it looks like the diffs against the base are fine."},{"timestamp":1484746492,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7:\n\n(1 comment)"},{"timestamp":1484747626,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 7:\n\n\u003e Maybe you just rebased since it looks like the diffs against the\n \u003e base are fine.\n\nI did rebase against the latest master. I apologize for any confusion this caused."},{"timestamp":1484748067,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Uploaded patch set 8."},{"timestamp":1484748076,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 7:\n\n(1 comment)"},{"timestamp":1484785645,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 8:\n\nI\u0027m not really sure that holding the zone mutex across this entire function is the best approach since you\u0027re taking pidlock in the middle. This seems like it could really lock up a lot of the system. Have you considered moving the code at the end of the function up into the zone lock near the beginning, and then taking pidlock after you drop the zone lock?"},{"timestamp":1484943556,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Patch Set 8:\n\n\u003e I\u0027m not really sure that holding the zone mutex across this entire\n \u003e function is the best approach since you\u0027re taking pidlock in the\n \u003e middle. This seems like it could really lock up a lot of the\n \u003e system. Have you considered moving the code at the end of the\n \u003e function up into the zone lock near the beginning, and then taking\n \u003e pidlock after you drop the zone lock?\n\nI think I need some guidance on which races are of concern. If the process secflag operations aren\u0027t completed with the zone lock held, there could be a race leading to the zone secflags showing no ASLR but the processes having it enabled (or vice versa)"},{"timestamp":1485099679,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 8:\n\nHolding the zone mutex across the entire function call doesn\u0027t do anything for you. While you are iterating the processes, some will be in the new state and others will be in the old state. That loop will never appear atomic. You want to hold the zone mutex to ensure that no matter how how you examine the zone\u0027s ASLR value, you get a consistent view, but you don\u0027t want to hold a mutex for longer than necessary, and you don\u0027t want to hold multiple mutexes at the same time if you don\u0027t have to."}],"currentPatchSet":{"number":"8","revision":"632f6e9ad4700c24ac31211bdb74c0874d6cc8e1","parents":["5ddda660b6ddd28eef7e27c16d4a6fed11998f03"],"ref":"refs/changes/93/1193/8","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1484748067,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":78,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":88,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":2,"deletions":0}],"sizeInsertions":169,"sizeDeletions":0},"patchSets":[{"number":"1","revision":"8bd9d3f2392c1e5098e9178afd7585d0c53a655a","parents":["826aed25de4c9b911d0fd07fa6236d199eaff2a6"],"ref":"refs/changes/93/1193/1","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1483031191,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":4479,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"I don\u0027t think this is necessary.  Does lint complain without it?"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":4479,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"You\u0027re correct. This one was unneeded but the one on my other function at 7112 was necessary. I\u0027ve removed this one and will push shortly"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":7144,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Given the expense of switching this value, it would be nice to see some logic here to avoid duplicate writes. (Skip the process walk if we\u0027re already in the desired state)"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":7144,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":138,"deletions":0}],"sizeInsertions":139,"sizeDeletions":0},{"number":"2","revision":"8cb36065c7cfd97d8bdc1a7da5ae92dab75f9589","parents":["826aed25de4c9b911d0fd07fa6236d199eaff2a6"],"ref":"refs/changes/93/1193/2","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1483048162,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","comments":[{"file":"/COMMIT_MSG","line":7,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"It looks like on linux, randomize_vaspace has been default to 2 when building the kernel since commit 32a932332c8bad842804842eaf9651ad6268e637 in 2008. Before that it defaulted to 1 in the same way.\nI checked Alpine Standard 3.5.0, Ubuntu 14.04, Ubuntu 16.04, Centos 6, and Centos 7. They all were set to 2, as far as I can tell due to the kernel default. None had entries in /etc/sysctl.conf (or anywhere else in /etc)\nIn addition I searched the source of systemd for references to randomize_vaspace, which did not turn anything up.\n\nAs a result, I believe this should be safe to integrate. I also believe SmartOS should default LX zones to having security-flags.default\u003daslr (at minimum), which will need to be done in smartos (vmapi?) as opposed to illumos-joyent"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":233,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Please make the naming of this function consistent with its lxpr_write_ counterpart"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":233,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"I very much dislike the way this turned out.\nThe issue is that if I make it lxpr_read_sys_kernel_rand_vaspace (I\u0027m just noticing I typo\u0027d the x to an s), line 847 will be over the 80 character limit.\n\nSo should I change lxpr_write_sys_kernel_rand_vaspace to lxpr_write_sys_kernel_rand_va?"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":233,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"I think the comment notation you used at L988 is a decent way to solve that issue.  Regarding the name choice, I would lean toward lxpr_write_sys_kernel_rand_vaspace, but it\u0027s up to you."},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":233,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":7231,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Rather than have this logic nearly duplicated for the set/clear cases, perhaps consolidate it down to a single block (maybe a separate helper function) which accomplishes the desired task of changing the ASLR secflags state for the zone and its processes."},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":7231,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":151,"deletions":0}],"sizeInsertions":152,"sizeDeletions":0},{"number":"3","revision":"9726bf9c9ed056767b12df73e8aea67bf8308c68","parents":["5799bf1e75edab0945b880f7e6c9542bd5e243f3"],"ref":"refs/changes/93/1193/3","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1483659621,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":151,"deletions":0}],"sizeInsertions":152,"sizeDeletions":0},{"number":"4","revision":"9fcab82765331ae398781c8cb9241cdd8040a211","parents":["5799bf1e75edab0945b880f7e6c9542bd5e243f3"],"ref":"refs/changes/93/1193/4","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1483944169,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":131,"deletions":0}],"sizeInsertions":132,"sizeDeletions":0},{"number":"5","revision":"152f2a0b02905d71b54e7b939c860becdf4645d9","parents":["5799bf1e75edab0945b880f7e6c9542bd5e243f3"],"ref":"refs/changes/93/1193/5","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1484202219,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":395,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"change this to \"is\"?"},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":395,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Done. I went with \"has been\" which seems most natural to me"},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":1805,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"While p_lock synchronizes access to the per-process secflags, we don\u0027t appear to have an analog for those which belong to the zone.  This isn\u0027t a surprise given that they are not expected to change in value after startup.  Regardless, we should probably use some lock to synchronize access.  It might be worth querying richlowe about his thoughts on the matter."},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":1805,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"I will be reaching out to richlowe. I\u0027m going to go ahead and address the other comments so he will be able to evaluate the most complete version of the code."},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":1828,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"This should always be true given the preceding tests will bail out if changes aren\u0027t required."},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":1828,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":4487,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"this assert is unnecessary and also would result in an error if you build this using DEBUG, since lxzd is undefined. You should probably build and test a DEBUG platform"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":4487,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Thanks for bringing this to my attention. I wasn\u0027t aware these were ifdef\u0027d out on release builds. I will make sure to build debug from now on.\n\nIs it useful to build both release and debug, or should I just build debug from now on?"},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":7160,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Real Linux™ appears to accept other values.  Returning EINVAL here is probably fine, but it might be worth noting the discrepancy in a comment."},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","line":7160,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"It looks like Linux specifically accepts any signed 32-bit integer. Most places in the code just check to see that it is non-zero. I\u0027ve added the comment. I think that may be better than actually accepting any value in case the other ones are given special significance later."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":73,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":78,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":2,"deletions":0}],"sizeInsertions":154,"sizeDeletions":0},{"number":"6","revision":"62e6b63ebc1d1b864b92f80a9b6217fd6d309882","parents":["5799bf1e75edab0945b880f7e6c9542bd5e243f3"],"ref":"refs/changes/93/1193/6","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1484584617,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":71,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":82,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":2,"deletions":0}],"sizeInsertions":156,"sizeDeletions":0},{"number":"7","revision":"b9278be0f90aafb7ed31aab21c8dceaa9d51658d","parents":["5ddda660b6ddd28eef7e27c16d4a6fed11998f03"],"ref":"refs/changes/93/1193/7","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1484708059,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":1845,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I don\u0027t think the zone mutex is really doing what you want here since you are dropping that before you use/change the value and then you reacquire it later at the end of the file. It would be better to consolidate all of this logic while you hold the mutex to prevent races, although I am not sure if a race in this case will actually cause a bug."},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","line":1845,"reviewer":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":82,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":88,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":2,"deletions":0}],"sizeInsertions":173,"sizeDeletions":0},{"number":"8","revision":"632f6e9ad4700c24ac31211bdb74c0874d6cc8e1","parents":["5ddda660b6ddd28eef7e27c16d4a6fed11998f03"],"ref":"refs/changes/93/1193/8","uploader":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"createdOn":1484748067,"author":{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":78,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_proc.h","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/procfs/lx_prvnops.c","type":"MODIFIED","insertions":88,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":2,"deletions":0}],"sizeInsertions":169,"sizeDeletions":0}],"allReviewers":[{"name":"Dillon Amburgey","email":"dillona@dillona.com","username":"dillona"}]}