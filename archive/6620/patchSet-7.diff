commit a97333d327d60802c6bab30e604beea2229a5f41
Author: Josh Wilsdon <jwilsdon@joyent.com>
Date:   2019-09-05T16:00:03-07:00 (5 weeks ago)
    
    TRITON-1650 prometheus image should discover global zones

diff --git a/CHANGES.md b/CHANGES.md
index 0c7eeb4..47f2c80 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -1,5 +1,10 @@
 # triton-prometheus changes
 
+## 1.1.0
+
+Add support for global zone discovery on Triton.
+Bumps Go to 1.12.1 required for Prometheus.
+
 ## 1.0.1
 
 TRITON-1834 Set triton-prometheus scrape interval to 10s
diff --git a/Makefile b/Makefile
index 7e74359..e2f531d 100644
--- a/Makefile
+++ b/Makefile
@@ -10,7 +10,7 @@
 
 NAME = prometheus
 
-GO_PREBUILT_VERSION = 1.11.1
+GO_PREBUILT_VERSION = 1.12.1
 NODE_PREBUILT_VERSION = v6.17.0
 ifeq ($(shell uname -s),SunOS)
     NODE_PREBUILT_TAG=zone64
diff --git a/bin/update_global_zones.sh b/bin/update_global_zones.sh
new file mode 100755
index 0000000..5906d3b
--- /dev/null
+++ b/bin/update_global_zones.sh
@@ -0,0 +1,71 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# This generates the global_zones.json file that's used by prometheus with the
+# files_sd service discovery in order that new CNs will automatically be
+# discovered by the config.
+#
+
+set -o errexit
+set -o pipefail
+
+ROOT_DIR=/opt/triton/prometheus
+CMON_AUTH_DIR=${ROOT_DIR}/keys
+CMON_KEY_FILE=${CMON_AUTH_DIR}/prometheus.key.pem
+CMON_CERT_FILE=${CMON_AUTH_DIR}/prometheus.cert.pem
+CONF_DIR=${ROOT_DIR}/etc
+OUTPUT_FILE=${CONF_DIR}/global_zones.json
+OUTPUT_FILE_TMP=${OUTPUT_FILE}.tmp.$$
+CONFIG_JSON=${CONF_DIR}/config.json
+DATACENTER_NAME=$(json -f "${CONFIG_JSON}" datacenter)
+DNS_DOMAIN=$(json -f "${CONFIG_JSON}" dns_domain)
+CMON_HOST="cmon.${DATACENTER_NAME}.cns.${DNS_DOMAIN}"
+
+function cleanup {
+    exit_code=$?
+    if [[ ${exit_code} -ne 0 ]]; then
+        echo "Failed to update global_zones.json: code ${exit_code}" >&2
+    fi
+    rm -f ${OUTPUT_FILE_TMP}
+}
+trap cleanup EXIT
+
+
+echo "[$(date -u)] Updating global_zones.json"
+
+#
+# We have to do the lookup ourselves since we want to use the local resolver,
+# but neither the pkgsrc nor the platform curl supports the --dns-servers
+# option.
+#
+# This command does the lookup and returns the IPs comma separated.
+#
+CMON_HOST_IPS=$(dig +short ${CMON_HOST} @127.0.0.1 | awk '{printf "%s%s",sep,$1; sep=","} END{print ""}')
+if [[ -z ${CMON_HOST_IPS} ]]; then
+    echo "Failed to get IPs for CMON host ${CMON_HOST}" >&2
+    exit 1
+fi
+
+curl -sS -k --max-time 120 \
+    --resolve ${CMON_HOST}:9163:${CMON_HOST_IPS} \
+    -E ${CMON_CERT_FILE} \
+    --key ${CMON_KEY_FILE} \
+    https://${CMON_HOST}:9163/v1/gz/discover \
+    | json cns \
+    | json -e "this.targets=[this.server_uuid+'.${CMON_HOST}:9163']; this.server_uuid=undefined; this.labels={'job': 'global_zones_${DATACENTER_NAME}'}" \
+    > ${OUTPUT_FILE_TMP}
+
+# If there was an error we'll go to cleanup() thanks to errexit & pipefail
+
+chown nobody:nobody ${OUTPUT_FILE_TMP}
+mv ${OUTPUT_FILE_TMP} ${OUTPUT_FILE}
+echo "Found $(json -f ${OUTPUT_FILE} length) GZs"
+
+exit 0
diff --git a/boot/setup.sh b/boot/setup.sh
index 5e259f6..54c1979 100755
--- a/boot/setup.sh
+++ b/boot/setup.sh
@@ -146,7 +146,7 @@ ARPA_ZONE
 function prometheus_setup_prometheus {
     mkdir -p "${DATA_DIR}"
 
-    /usr/sbin/svccfg import /opt/triton/prometheus/smf/manifests/prometheus.xml
+    /usr/sbin/svccfg import ${ROOT_DIR}/smf/manifests/prometheus.xml
 
     #
     # Set up key and client certificate used to auth with this DC's CMON.
@@ -154,7 +154,7 @@ function prometheus_setup_prometheus {
     echo 'Generating key and client cert for CMON auth'
     mkdir -p "${CMON_AUTH_DIR}"
     "${NODE}" '--abort_on_uncaught_exception' \
-        /opt/triton/prometheus/bin/certgen "${FLAVOR}"
+        ${ROOT_DIR}/bin/certgen "${FLAVOR}"
 
     #
     # The prometheus SMF service runs as the 'nobody' user, so the files it
@@ -170,9 +170,30 @@ function prometheus_setup_prometheus {
     # prometheus-configure contains the common setup code that must be run here
     # and also on config-agent updates
     #
-    TRACE=1 /opt/triton/prometheus/bin/prometheus-configure
+    TRACE=1 ${ROOT_DIR}/bin/prometheus-configure
 }
 
+function prometheus_initialize_global_zones_json {
+    # Start with an empty file
+    echo '[]' > ${ROOT_DIR}/etc/global_zones.json
+}
+
+function prometheus_setup_crontab {
+    # Setup crontab
+    tmp_crontab=/tmp/prometheus-$$.cron
+    minute=$((RANDOM % 60))
+    crontab -l > ${tmp_crontab}
+    [[ $? -eq 0 ]] || fatal "Unable to write to ${tmp_crontab}"
+    echo '' >>${tmp_crontab}
+    echo '# update the global_zones.json file' >>${tmp_crontab}
+    # BASHSTYLED
+    echo "${minute} * * * * ${ROOT_DIR}/bin/update_global_zones.sh >>/var/log/update_global_zones.log 2>&1" >>${tmp_crontab}
+    crontab ${tmp_crontab}
+    [[ $? -eq 0 ]] || fatal 'Unable to import crontab'
+    rm -f ${tmp_crontab}
+}
+
+
 # ---- mainline
 
 prometheus_setup_delegate_dataset
@@ -185,7 +206,7 @@ if [[ "${FLAVOR}" == 'manta' ]]; then
     source "${MANTA_SCRIPTS_DIR}/services.sh"
 
     manta_common_presetup
-    manta_add_manifest_dir '/opt/triton/prometheus'
+    manta_add_manifest_dir "${ROOT_DIR}"
     manta_common_setup 'prometheus' 0
 
     prometheus_setup_named
@@ -195,10 +216,12 @@ if [[ "${FLAVOR}" == 'manta' ]]; then
 
 else # "$FLAVOR" == "triton"
 
-    CONFIG_AGENT_LOCAL_MANIFESTS_DIRS=/opt/triton/prometheus
+    CONFIG_AGENT_LOCAL_MANIFESTS_DIRS=${ROOT_DIR}
     source /opt/smartdc/boot/lib/util.sh
     sdc_common_setup
 
+    prometheus_initialize_global_zones_json
+    prometheus_setup_crontab
     prometheus_setup_named
     prometheus_setup_prometheus
 
@@ -208,6 +231,10 @@ else # "$FLAVOR" == "triton"
     sdc_log_rotation_add prometheus /var/svc/log/*prometheus*.log 1g
     sdc_log_rotation_setup_end
 
+    # Update the global_zones.json the first time
+    ${ROOT_DIR}/bin/update_global_zones.sh \
+        >>/var/log/update_global_zones.log 2>&1
+
     sdc_setup_complete
 fi
 
diff --git a/deps/eng b/deps/eng
index 9058562..d25b8fc 160000
--- a/deps/eng
+++ b/deps/eng
@@ -1 +1 @@
-Subproject commit 9058562f2f59892795e470ce25443ff636c90478
+Subproject commit d25b8fc60fb8c649559924870fe3aaf75e7421d5
diff --git a/etc/prometheus.yml.in b/etc/prometheus.yml.in
index 82f270f..0c1d2d1 100644
--- a/etc/prometheus.yml.in
+++ b/etc/prometheus.yml.in
@@ -37,6 +37,16 @@ scrape_configs:
           cert_file: %%CMON_CERT_FILE%%
           key_file: %%CMON_KEY_FILE%%
           insecure_skip_verify: %%CMON_INSECURE%%
+  - job_name: 'global_zones_%%DATACENTER_NAME%%'
+    scheme: https
+    tls_config:
+      cert_file: %%CMON_CERT_FILE%%
+      key_file: %%CMON_KEY_FILE%%
+      insecure_skip_verify: %%CMON_INSECURE%%
+    file_sd_configs:
+      - files:
+        # generated by the update_global_zones.sh cronjob
+        - '/opt/triton/prometheus/etc/global_zones.json'
   - job_name: 'prometheus_%%DATACENTER_NAME%%'
     static_configs:
     - targets:
diff --git a/package.json b/package.json
index c7f09f1..3bd4cea 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "triton-prometheus",
     "description": "Prometheus for TritonDC",
-    "version": "1.0.1",
+    "version": "1.1.0",
     "author": "Joyent (joyent.com)",
     "private": true,
     "repository": {
