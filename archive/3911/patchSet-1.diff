From 88bd11d1538de975e70d95bd4c1331cda709d7fc Mon Sep 17 00:00:00 2001
From: Nick Zivkovic <nick.zivkovic@joyent.com>
Date: Fri, 4 May 2018 20:46:15 +0000
Subject: [PATCH] TRITON-170 napi-ufds-watcher should retry when failing to
 list default VLAN

---
 lib/default-fabric-setup.js | 56 ++++++++++++++++++++++++-------------
 1 file changed, 37 insertions(+), 19 deletions(-)

diff --git a/lib/default-fabric-setup.js b/lib/default-fabric-setup.js
index 8b5e4eb..855b172 100644
--- a/lib/default-fabric-setup.js
+++ b/lib/default-fabric-setup.js
@@ -53,29 +53,47 @@ function DefaultFabricSetupStream(opts) {
 
         var reqOptions = { headers: { 'x-request-id': _opts.requestId }};
 
-        self.napiClient.listFabricVLANs(_opts.uuid,
-            reqOptions,
-            function (err, vlans) {
+        function find() {
+            self.napiClient.listFabricVLANs(_opts.uuid,
+                reqOptions,
+                function (err, vlans) {
+                    var timeout = 10000;
 
-            if (err) {
-                return cb(err);
-            }
+                    if (err && err.statusCode >= 500 && err.statusCode < 600) {
+                        self.log.warn({err: err},
+                            'Server error finding network for user %s. ' +
+                            'Retrying in %sms',
+                            _opts.uuid, timeout);
+                        setTimeout(find, timeout);
+                        return;
+                    } else if (err) {
+                        self.log.error({err: err, user: _opts.uuid},
+                            'Error finding network for user %s',
+                            _opts.uuid);
+                        cb(err);
+                        return;
+                    }
 
-            var defaultVlan = vlans.reduce(function (acc, v) {
-                return acc || (v.name === opts.default_vlan.name ? v : null);
-            }, null);
+                    var defaultVlan = vlans.reduce(function (acc, v) {
+                        return acc || (v.name === opts.default_vlan.name ? v :
+                            null);
+                    }, null);
 
-            if (defaultVlan) {
-                self.log.info({ vlan: defaultVlan, user: _opts.uuid },
-                    'Default vlan exists for user');
-                _opts.defaultVlan = defaultVlan;
-                return cb();
-            }
+                    if (defaultVlan) {
+                        self.log.info({ vlan: defaultVlan, user: _opts.uuid },
+                            'Default vlan exists for user');
+                        _opts.defaultVlan = defaultVlan;
+                        cb();
+                        return;
+                    }
 
-            self.log.info({ user: _opts.uuid },
-                'Default vlan does not exist for user');
-            return cb();
-        });
+                    self.log.info({ user: _opts.uuid },
+                        'Default vlan does not exist for user');
+                    cb();
+                    return;
+                });
+        }
+        find();
     }
 
     function createDefaultVlan(_opts, cb) {
-- 
2.21.0

