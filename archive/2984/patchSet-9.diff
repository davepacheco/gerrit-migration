From 69f6cf0197d3c2ea7ffb70b33c0b89330a3a336c Mon Sep 17 00:00:00 2001
From: Mike Zeller <mike.zeller@joyent.com>
Date: Sun, 17 Dec 2017 21:34:54 -0800
Subject: [PATCH] PUBAPI-1081 Enable requesting IP addresses on networks when
 provisioning or adding nics Reviewed by: Trent Mick <trentm@gmail.com>
 Reviewed by: Dan McDonald <danmcd@joyent.com> Reviewed by: Dave Eddy
 <dave@daveeddy.com> Approved by: Trent Mick <trentm@gmail.com>

---
 lib/machines.js | 67 ++++++++++++++++++++++++++++++++++---------------
 1 file changed, 47 insertions(+), 20 deletions(-)

diff --git a/lib/machines.js b/lib/machines.js
index 9708248..85e87fa 100644
--- a/lib/machines.js
+++ b/lib/machines.js
@@ -443,26 +443,48 @@ function getCreateOptions(req) {
 
             if (objectsAllowed) {
                 switch (netType) {
-                    case 'string':
-                        ifaceObjects++;
-                        break;
-                    case 'object':
-                        ifaceObjects++;
-                        netUuid = netObj.ipv4_uuid;
-
-                        if (typeof (netUuid) !== 'string') {
+                case 'string':
+                    ifaceObjects++;
+                    break;
+                case 'object':
+                    console.log(netObj);
+                    ifaceObjects++;
+                    netUuid = netObj.ipv4_uuid;
+                    var ips = netObj.ipv4_ips;
+
+                    if (typeof (netUuid) !== 'string') {
+                        throw new InvalidArgumentError(sprintf(
+                            'property "networks[%d].ipv4_uuid": ' +
+                            'string expected', idx));
+                    }
+
+                    if (ips) {
+                        if (!Array.isArray(ips)) {
+                            throw new InvalidArgumentError(sprintf(
+                                'property "networks[%d].ipv4_ips": ' +
+                                'array expected', idx));
+                        }
+
+                        if (ips.length > 1) {
                             throw new InvalidArgumentError(sprintf(
-                                'property "networks[%d].ipv4_uuid": ' +
+                                'property "networks[%d].ipv4_ips": ' +
+                                'array should contain single ip', idx));
+                        }
+
+                        if (typeof (ips[0]) !== 'string') {
+                            throw new InvalidArgumentError(sprintf(
+                                'property "networks[%d].ipv4_ips[0]": ' +
                                 'string expected', idx));
                         }
+                    }
 
-                        break;
-                    default:
-                        // the 'property "foo" ...' format intended to match
-                        // the json-schema error format:
-                        throw new InvalidArgumentError(sprintf(
-                            'property "networks[%d]": array of strings or ' +
-                            'objects expected', idx));
+                    break;
+                default:
+                    // the 'property "foo" ...' format intended to match
+                    // the json-schema error format:
+                    throw new InvalidArgumentError(sprintf(
+                        'property "networks[%d]": array of strings or ' +
+                        'objects expected', idx));
                 }
 
             } else {
@@ -529,10 +551,15 @@ function getCreateOptions(req) {
         // We only support ipv4_uuid and ipv4_count for now, so only allow
         // them, just to be safe:
         opts.networks = opts.networks.map(function (n) {
-            return {
-                ipv4_count: n.ipv4_count || 1,
-                ipv4_uuid: n.ipv4_uuid
-            };
+            var netObj = {};
+
+            if (!n.ipv4_ips) {
+                netObj.ipv4_count = n.ipv4_count || 1;
+            }
+
+            netObj.ipv4_uuid = n.ipv4_uuid;
+            netObj.ipv4_ips = n.ipv4_ips;
+            return netObj;
         });
 
     } else {
-- 
2.21.0

