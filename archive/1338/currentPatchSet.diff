commit a43ccf929e06a3e726c12f6289a2a01099512ed8 (refs/changes/38/1338/8)
Author: Orlando Vazquez <ovazquez@gmail.com>
Date:   2017-01-26T19:02:12+00:00 (2 years, 8 months ago)
    
    CNAPI-688 Functions in array returned by CNAPI's endpoint helper function `ensure` should have meaningful names
    Reviewed by: Josh Wilsdon <josh@wilsdon.ca>

diff --git a/lib/endpoints/allocator.js b/lib/endpoints/allocator.js
index c0c286c..3a43b82 100644
--- a/lib/endpoints/allocator.js
+++ b/lib/endpoints/allocator.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -134,7 +134,8 @@ function Allocator(algoDesc, changeDefaults, useVmapi) {
  */
 /* END JSSTYLED */
 
-Allocator.prototype.allocate = function (req, res, next) {
+Allocator.prototype.allocate =
+function handlerAllocatorAllocate(req, res, next) {
     var self = this;
     var err;
 
@@ -378,7 +379,8 @@ Allocator.prototype.allocate = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Allocator.prototype.capacity = function (req, res, next) {
+Allocator.prototype.capacity =
+function handlerAllocatorCapacity(req, res, next) {
     var self = this;
 
     if (validation.ensureParamsValid(req, res, CAPACITY_VALIDATION_RULES)) {
diff --git a/lib/endpoints/boot_params.js b/lib/endpoints/boot_params.js
index 887d9b5..46ac858 100644
--- a/lib/endpoints/boot_params.js
+++ b/lib/endpoints/boot_params.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var restify = require('restify');
@@ -36,7 +36,7 @@ function BootParams() {}
  * @response 404 None No such Server
  */
 
-BootParams.getDefault = function (req, res, next) {
+BootParams.getDefault = function handlerBootParamsGetDefault(req, res, next) {
     ModelServer.getBootParamsDefault(
         function (error, params) {
             if (error) {
@@ -71,7 +71,7 @@ BootParams.getDefault = function (req, res, next) {
  * @response 404 None No such Server
  */
 
-BootParams.setDefault = function (req, res, next) {
+BootParams.setDefault = function handlerBootParamsSetDefault(req, res, next) {
     var rules = {
         'platform': ['optional', 'isStringType', 'isTrim'],
         'kernel_args': ['optional', 'isObjectType']
@@ -147,7 +147,8 @@ BootParams.setDefault = function (req, res, next) {
  * @response 404 None No such Server
  */
 
-BootParams.updateDefault = function (req, res, next) {
+BootParams.updateDefault =
+function handlerBootParamsUpdateDefault(req, res, next) {
     var rules = {
         'platform': ['optional', 'isStringType', 'isTrim'],
         'kernel_args': ['optional', 'isObjectType']
@@ -229,7 +230,7 @@ BootParams.updateDefault = function (req, res, next) {
  * @response 404 None No such Server
  */
 
-BootParams.getByUuid = function (req, res, next) {
+BootParams.getByUuid = function handlerBootParamsGetByUuid(req, res, next) {
     req.stash.server.getBootParams(
         function (error, params) {
             if (error) {
@@ -278,7 +279,7 @@ BootParams.getByUuid = function (req, res, next) {
  * @response 404 None No such Server
  */
 
-BootParams.setByUuid = function (req, res, next) {
+BootParams.setByUuid = function handlerBootParamsSetByUuid(req, res, next) {
     var rules = {
         'platform': ['optional', 'isStringType', 'isTrim'],
         'default_console': ['optional', 'isStringType', 'isTrim'],
@@ -366,7 +367,8 @@ BootParams.setByUuid = function (req, res, next) {
  * @response 202 None No content
  */
 
-BootParams.updateByUuid = function (req, res, next) {
+BootParams.updateByUuid =
+function handlerBootParamsUpdateByUuid(req, res, next) {
     var rules = {
         'platform': ['optional', 'isTrim', 'isStringType'],
         'kernel_args': ['optional', 'isObjectType']
diff --git a/lib/endpoints/images.js b/lib/endpoints/images.js
index 02c4877..537dcec 100644
--- a/lib/endpoints/images.js
+++ b/lib/endpoints/images.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -51,7 +51,7 @@ var imageLoadTimeoutSeconds = 60;
  * @response 404 Object No such server
  */
 
-Image.get = function get(req, res, next) {
+Image.get = function handlerImageGet(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, imageValidationRules)) {
diff --git a/lib/endpoints/index.js b/lib/endpoints/index.js
index 2c37dd7..5cf1f09 100644
--- a/lib/endpoints/index.js
+++ b/lib/endpoints/index.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var fs = require('fs');
@@ -141,7 +141,7 @@ function ensure(opts) {
     opts.connectionTimeoutSeconds = opts.connectionTimeoutSeconds || 60 * 60;
 
     // Override timeout
-    fns.push(function (req, res, next) {
+    fns.push(function handlerEnsureStash(req, res, next) {
         if (!req.stash) {
             req.stash = {};
             req.stash.app = opts.app;
@@ -149,7 +149,7 @@ function ensure(opts) {
         next();
     });
 
-    fns.push(function (req, res, next) {
+    fns.push(function handlerEnsureConnectionTimeout(req, res, next) {
         ensureConnectionTimeout(opts, req, res, next);
     });
 
@@ -159,13 +159,33 @@ function ensure(opts) {
     // If we're checking moray, do it first.
     var idx = connected.indexOf('moray');
     if (idx !== -1) {
-        fns.push(function (req, res, next) {
+        fns.push(function handlerEnsureConnectionMoray(req, res, next) {
             CONNECTION_CHECKS['moray'](opts, req, res, next);
         });
         connected.splice(idx, 1);
     }
 
 
+    /**
+     * The loops below loop over the `prepopulate` and `connected` arrays. Here
+     * we create handlers used for checking connections and prepopulating
+     * certain values (on an endpoint by endpoint basis) prior to the request
+     * being serviced by the main restify handler.
+     *
+     * We use `Object.defineProperty()` to dynamically set the `name` of the
+     * function which will act as the handler. The function name is used during
+     * logging and tracing. If we don't name these functions they get generic
+     * names (handler-0 ... handler-n) which are not very useful.
+     */
+
+    function makeHandler(opts_, name, functions, which) {
+        var f = function (req, res, next) {
+            functions[which](opts_, req, res, next);
+        };
+        Object.defineProperty(f, 'name', { value: name });
+        return f;
+    }
+
     prepopulate.forEach(function (resource) {
         if (!PREPOPULATE_FNS.hasOwnProperty(resource)) {
             throw (
@@ -173,9 +193,10 @@ function ensure(opts) {
                     'unknown resource for prepopulation, %s', resource));
         }
 
-        fns.push(function (req, res, next) {
-            PREPOPULATE_FNS[resource](opts, req, res, next);
-        });
+        // create handler
+        var handlerName = 'handlerEnsure' + (resource.charAt(0).toUpperCase() +
+                                      resource.slice(1)) + 'Prepopulated';
+        fns.push(makeHandler(opts, handlerName, PREPOPULATE_FNS, resource));
     });
 
 
@@ -186,9 +207,10 @@ function ensure(opts) {
                     'unknown service for precondition check, %s', service));
         }
 
-        fns.push(function (req, res, next) {
-            CONNECTION_CHECKS[service](opts, req, res, next);
-        });
+        // create handler
+        var handlerName = 'handlerEnsure' + (service.charAt(0).toUpperCase() +
+                                      service.slice(1)) + 'Connected';
+        fns.push(makeHandler(opts, handlerName, CONNECTION_CHECKS, service));
     });
 
     return fns;
diff --git a/lib/endpoints/nics.js b/lib/endpoints/nics.js
index cd94327..df671fb 100644
--- a/lib/endpoints/nics.js
+++ b/lib/endpoints/nics.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -51,7 +51,7 @@ function Nic() {}
  * @resposne 500 Error Error occured with request: invalid parameters, server
  *     not setup, or error instantiating workflow
  */
-Nic.update = function (req, res, next) {
+Nic.update = function handlerNicUpdate(req, res, next) {
     var rules = {
         'action': ['isStringType'],
         'nics': ['isArrayType']
@@ -109,7 +109,7 @@ Nic.update = function (req, res, next) {
         });
 };
 
-Nic.updateTask = function (req, res, next) {
+Nic.updateTask = function handlerNicUpdateTask(req, res, next) {
     var self = this;
     var server = req.stash.server;
 
diff --git a/lib/endpoints/platforms.js b/lib/endpoints/platforms.js
index 903ed14..3438933 100644
--- a/lib/endpoints/platforms.js
+++ b/lib/endpoints/platforms.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var async = require('async');
@@ -33,7 +33,7 @@ Platform.init = function () {
  * @response 200 Array The returned servers
  */
 
-Platform.list = function (req, res, next) {
+Platform.list = function handlerPlatformList(req, res, next) {
     ModelPlatform.list({}, function (error, platforms) {
         if (error) {
             next(
diff --git a/lib/endpoints/servers.js b/lib/endpoints/servers.js
index 5cf3033..f936916 100644
--- a/lib/endpoints/servers.js
+++ b/lib/endpoints/servers.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -69,7 +69,7 @@ Server.init = function () {
  */
 /* END JSSTYLED */
 
-Server.list = function (req, res, next) {
+Server.list = function handlerSeverList(req, res, next) {
     var result;
 
     var rules = {
@@ -241,7 +241,7 @@ Server.list = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.get = function (req, res, next) {
+Server.get = function handlerServerGet(req, res, next) {
     var rules = {
         'server_uuid': ['isStringType']
     };
@@ -316,7 +316,7 @@ Server.get = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.update = function (req, res, next) {
+Server.update = function handlerServerUpdate(req, res, next) {
     var rules = {
         'agents': ['optional', 'isArrayType'],
         'boot_params': ['optional', 'isObjectType'],
@@ -535,7 +535,7 @@ Server.update = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.reboot = function (req, res, next) {
+Server.reboot = function handlerServerReboot(req, res, next) {
     var rules = {
         'server_uuid': ['isStringType'],
         'creator_uuid': ['optional', 'isStringType'],
@@ -579,7 +579,7 @@ Server.reboot = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.factoryReset = function (req, res, next) {
+Server.factoryReset = function handlerServerFactoryReset(req, res, next) {
     var server = req.stash.server.getValue();
     var vms = server.vms;
 
@@ -642,7 +642,7 @@ Server.factoryReset = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.setup = function (req, res, next) {
+Server.setup = function handlerServerSetup(req, res, next) {
     var rules = {
         'hostname': ['optional', 'isStringType'],
         'nics': ['optional', 'isArrayType'],
@@ -730,7 +730,7 @@ Server.setup = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.sysinfoRefresh = function (req, res, next) {
+Server.sysinfoRefresh = function handlerServerSysinfoRefresh(req, res, next) {
     var rules = {
         'server_uuid': ['isStringType']
     };
@@ -815,7 +815,7 @@ Server.sysinfoRefresh = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.del = function (req, res, next) {
+Server.del = function handlerServerDelete(req, res, next) {
     var rules = {
         'server_uuid': ['isStringType']
     };
@@ -851,7 +851,7 @@ Server.del = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.taskHistory = function (req, res, next) {
+Server.taskHistory = function handlerServerTaskHistory(req, res, next) {
     var server = req.stash.server;
 
     var rules = {
@@ -888,7 +888,7 @@ Server.taskHistory = function (req, res, next) {
  * @response 500 Error Could not process request
  */
 /* END JSSTYLED */
-Server.pauseCnAgent = function (req, res, next) {
+Server.pauseCnAgent = function handlerServerPauseCnAgent(req, res, next) {
     var server = req.stash.server;
     server.sendRequest({
         method: 'post',
@@ -918,7 +918,7 @@ Server.pauseCnAgent = function (req, res, next) {
  * @response 500 Error Could not process request
  */
 /* END JSSTYLED */
-Server.resumeCnAgent = function (req, res, next) {
+Server.resumeCnAgent = function handlerResumeCnAgent(req, res, next) {
     var server = req.stash.server;
     server.sendRequest({
         method: 'post',
@@ -933,7 +933,7 @@ Server.resumeCnAgent = function (req, res, next) {
     });
 };
 
-Server.eventHeartbeat = function (req, res, next) {
+Server.eventHeartbeat = function handlerServerEventHeartbeat(req, res, next) {
     var rules = {
         'server_uuid': ['isStringType']
     };
@@ -948,7 +948,7 @@ Server.eventHeartbeat = function (req, res, next) {
     next();
 };
 
-Server.eventVmsUpdate = function (req, res, next) {
+Server.eventVmsUpdate = function handlerServerEventVmsUpdate(req, res, next) {
     ModelServer.getApp().onVmsUpdate(
         req.params.server_uuid, req.params,
         function (err) {
@@ -978,7 +978,7 @@ Server.eventVmsUpdate = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.ensureImage = function (req, res, next) {
+Server.ensureImage = function handlerServerEnsureImage(req, res, next) {
     var self = this;
 
     var rules = {
@@ -1023,7 +1023,7 @@ Server.ensureImage = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-Server.installAgent = function (req, res, next) {
+Server.installAgent = function handlerServerInstallAgent(req, res, next) {
     var self = this;
 
     req.stash.server.sendTaskRequest({
@@ -1039,7 +1039,7 @@ Server.installAgent = function (req, res, next) {
 };
 
 
-Server.nop = function Server$nop(req, res, next) {
+Server.nop = function handlerServerNop(req, res, next) {
     req.params.sleep = parseInt(req.params.sleep, 10) || 0;
     req.stash.server.sendTaskRequest({
         task: 'nop',
diff --git a/lib/endpoints/tasks.js b/lib/endpoints/tasks.js
index 0349f89..8e25fae 100644
--- a/lib/endpoints/tasks.js
+++ b/lib/endpoints/tasks.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var restify = require('restify');
@@ -29,7 +29,7 @@ function Task() {}
  * @response 404 None No such task found
  */
 
-Task.get = function (req, res, next) {
+Task.get = function handlerTaskGet(req, res, next) {
     ModelServer.getMoray().getObject(
         buckets.tasks.name,
         req.params.taskid,
@@ -66,7 +66,7 @@ Task.get = function (req, res, next) {
  * @response 404 None No such task found
  */
 
-Task.wait = function (req, res, next) {
+Task.wait = function handlerTaskWait(req, res, next) {
     var task;
 
     get(function (val) {
diff --git a/lib/endpoints/ur.js b/lib/endpoints/ur.js
index a2841b5..667eace 100644
--- a/lib/endpoints/ur.js
+++ b/lib/endpoints/ur.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -39,7 +39,7 @@ function Ur() {}
  * @resposne 500 None Error occurred executing script
  */
 
-Ur.execute = function (req, res, next) {
+Ur.execute = function handlerUrExecute(req, res, next) {
     var rules = {
         'args': ['optional', 'isArrayType'],
         'env': ['optional', 'isObjectType'],
diff --git a/lib/endpoints/vms.js b/lib/endpoints/vms.js
index ab94e9e..00dfab3 100644
--- a/lib/endpoints/vms.js
+++ b/lib/endpoints/vms.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -67,7 +67,7 @@ function errDetails(error) {
  * @response 404 Object No such server
  */
 
-VM.list = function list(req, res, next) {
+VM.list = function handlerVmList(req, res, next) {
     ModelVM.listVmsViaVmapi({
         server_uuid: req.params.server_uuid
     }, function (err, vms) {
@@ -96,7 +96,7 @@ VM.list = function list(req, res, next) {
  */
 
 var vmLoadTimeoutSeconds = 60;
-VM.load = function load(req, res, next) {
+VM.load = function handlerVmLoad(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
@@ -145,7 +145,7 @@ VM.load = function load(req, res, next) {
  * NOT DOCUMENTED because not yet supported.
  */
 var vmProcTimeoutSeconds = 20;
-VM.proc = function proc(req, res, next) {
+VM.proc = function handlerVmProc(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
@@ -206,7 +206,7 @@ VM.proc = function proc(req, res, next) {
  */
 
 var vmInfoTimeoutSeconds = 10;
-VM.info = function info(req, res, next) {
+VM.info = function handlerVmInfo(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
@@ -272,7 +272,7 @@ VM.info = function info(req, res, next) {
  */
 
 var vmVNCTimeoutSeconds = 10;
-VM.vnc = function vnc(req, res, next) {
+VM.vnc = function handlerVmVnc(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
@@ -352,7 +352,7 @@ VM.vnc = function vnc(req, res, next) {
  *          -d '{ "ram": 512 }'
  */
 
-VM.update = function update(req, res, next) {
+VM.update = function handlerVmUpdate(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -376,7 +376,7 @@ VM.update = function update(req, res, next) {
  *
  */
 
-VM.nicsUpdate = function nicsUpdate(req, res, next) {
+VM.nicsUpdate = function handlerVmNicsUpdate(req, res, next) {
     var self = this;
     var sysinfo = req.stash.server.value.sysinfo;
 
@@ -417,7 +417,7 @@ VM.nicsUpdate = function nicsUpdate(req, res, next) {
  * @example POST /servers/<server-uuid>/vms/<vm-uuid>/start
  */
 
-VM.start = function start(req, res, next) {
+VM.start = function handlerVmStart(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -447,7 +447,7 @@ VM.start = function start(req, res, next) {
  * @example POST /servers/<server-uuid>/vms/<vm-uuid>/stop
  */
 
-VM.stop = function stop(req, res, next) {
+VM.stop = function handlerVmStop(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -473,7 +473,7 @@ VM.stop = function stop(req, res, next) {
  * @example POST /servers/<server-uuid>/vms/:uuid/kill
  */
 
-VM.kill = function kill(req, res, next) {
+VM.kill = function handlerVmKill(req, res, next) {
     var killValidationRules = {
         'jobid': ['optional', 'isStringType'],
         'uuid': ['isStringType', 'isTrim'],
@@ -505,7 +505,7 @@ VM.kill = function kill(req, res, next) {
  * @example POST /servers/<server-uuid>/vms/<vm-uuid>/reboot
  */
 
-VM.reboot = function reboot(req, res, next) {
+VM.reboot = function handlerVmReboot(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -534,7 +534,7 @@ VM.reboot = function reboot(req, res, next) {
  * @example POST /servers/<server-uuid>/vms
  */
 
-VM.create = function create(req, res, next) {
+VM.create = function handlerVmCreate(req, res, next) {
     var sysinfo;
     var sdc_version;
 
@@ -715,7 +715,7 @@ VM.create = function create(req, res, next) {
  * @example POST /servers/<server-uuid>/vms/reprovision
  */
 
-VM.reprovision = function reprovision(req, res, next) {
+VM.reprovision = function handlerVmReprovision(req, res, next) {
     var reprovisionValidationRules = {
         'jobid': ['optional', 'isStringType'],
         'uuid': ['isStringType', 'isTrim'],
@@ -744,7 +744,7 @@ VM.reprovision = function reprovision(req, res, next) {
  * @example DELETE /servers/<server-uuid>/vms/<vm-uuid>
  */
 
-VM.destroy = function destroy(req, res, next) {
+VM.destroy = function handlerVmDestroy(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -776,7 +776,7 @@ VmSnapshots.init = function () {
  * @example PUT /servers/<server-uuid>/vms/:uuid/snapshots
  */
 
-VmSnapshots.create = function (req, res, next) {
+VmSnapshots.create = function handlerVmSnapshotsCreate(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -801,7 +801,7 @@ VmSnapshots.create = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-VmSnapshots.rollback = function (req, res, next) {
+VmSnapshots.rollback = function handlerVmSnapshotsRollback(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -823,7 +823,7 @@ VmSnapshots.rollback = function (req, res, next) {
  *
  * @example DELETE /servers/<server-uuid>/vms/:uuid/snapshots/:snapshot_name
  */
-VmSnapshots.destroy = function (req, res, next) {
+VmSnapshots.destroy = function handlerVmSnapshotsDestroy(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -857,7 +857,7 @@ function VmImages() {}
  * @response 500 Error Error encountered while attempting to fulfill request
  */
 
-VmImages.create = function (req, res, next) {
+VmImages.create = function handlerVmImagesCreate(req, res, next) {
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
         next();
         return;
@@ -903,7 +903,7 @@ VmImages.create = function (req, res, next) {
  */
 
 var vmDockerExecTimeoutSeconds = 60;
-VM.dockerExec = function dockerExec(req, res, next) {
+VM.dockerExec = function handlerVmDockerExec(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
@@ -977,7 +977,7 @@ VM.dockerExec = function dockerExec(req, res, next) {
  */
 
 var vmDockerCopyTimeoutSeconds = 10;
-VM.dockerCopy = function dockerCopy(req, res, next) {
+VM.dockerCopy = function handlerVmDockerCopy(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
@@ -1086,7 +1086,7 @@ VM.dockerCopy = function dockerCopy(req, res, next) {
 
 var vmDockerStatsTimeoutSeconds = 30;
 
-VM.dockerStats = function dockerStats(req, res, next) {
+VM.dockerStats = function handlerVmDockerStats(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
@@ -1155,7 +1155,7 @@ VM.dockerStats = function dockerStats(req, res, next) {
 
 var vmDockerBuildTimeoutSeconds = 30;
 
-VM.dockerBuild = function dockerBuild(req, res, next) {
+VM.dockerBuild = function handlerVmDockerBuild(req, res, next) {
     var responded;
 
     if (validation.ensureParamsValid(req, res, vmValidationRules)) {
diff --git a/lib/endpoints/waitlist.js b/lib/endpoints/waitlist.js
index c034881..d0087e1 100644
--- a/lib/endpoints/waitlist.js
+++ b/lib/endpoints/waitlist.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -60,7 +60,8 @@ ControllerWaitlist.init = function () {
  */
 /* END JSSTYLED */
 
-ControllerWaitlist.list = function (req, res, next) {
+ControllerWaitlist.list =
+function handlerControllerWaitlistList(req, res, next) {
     var rules = {
         'limit': [
             'optional',
@@ -142,7 +143,8 @@ ControllerWaitlist.list = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-ControllerWaitlist.createTicket = function (req, res, next) {
+ControllerWaitlist.createTicket =
+function handlerControllerWaitlistCreateTicket(req, res, next) {
     var waitlist = req.stash.server.getWaitlist();
     req.params.reqid = req.getId();
     waitlist.createTicket(req.params, function (error, uuid, tickets) {
@@ -171,7 +173,8 @@ ControllerWaitlist.createTicket = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-ControllerWaitlist.getTicket = function (req, res, next) {
+ControllerWaitlist.getTicket =
+function handlerControllerWaitlistGetTicket(req, res, next) {
     ModelWaitlist.getTicket(req.params.ticket_uuid, function (error, ticket) {
         if (ticket) {
             res.send(200, ticket);
@@ -199,7 +202,8 @@ ControllerWaitlist.getTicket = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-ControllerWaitlist.deleteTicket = function (req, res, next) {
+ControllerWaitlist.deleteTicket =
+function handlerControllerWaitlistDeleteTicket(req, res, next) {
     var ticket_uuid = req.params.ticket_uuid;
 
     // XXX proper 404 with prepopulate "before"
@@ -231,7 +235,8 @@ ControllerWaitlist.deleteTicket = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-ControllerWaitlist.deleteAllTickets = function (req, res, next) {
+ControllerWaitlist.deleteAllTickets =
+function handlerControllerWaitlistDeleteAllTickets(req, res, next) {
     var waitlist = req.stash.server.getWaitlist();
 
     if (req.params.force !== 'true') {
@@ -267,7 +272,8 @@ ControllerWaitlist.deleteAllTickets = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-ControllerWaitlist.waitTicket = function (req, res, next) {
+ControllerWaitlist.waitTicket =
+function handlerControllerWaitlistWaitTicket(req, res, next) {
     var ticketuuid = req.params.ticket_uuid;
 
     req.stash.app.waitlistDirector.waitForTicketByUuid(
@@ -301,7 +307,8 @@ ControllerWaitlist.waitTicket = function (req, res, next) {
  */
 /* END JSSTYLED */
 
-ControllerWaitlist.releaseTicket = function (req, res, next) {
+ControllerWaitlist.releaseTicket =
+function handlerControllerWaitlistReleaseTicket(req, res, next) {
     var ticket_uuid = req.params.ticket_uuid;
 
     ModelWaitlist.getTicket(ticket_uuid, function (error, ticket) {
diff --git a/lib/endpoints/zfs.js b/lib/endpoints/zfs.js
index a18258d..69a0ac7 100644
--- a/lib/endpoints/zfs.js
+++ b/lib/endpoints/zfs.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -32,7 +32,7 @@ function ZFS() {}
  * @response 200 Array Array of objects, one per dataset on server
  */
 
-ZFS.listDatasets = function (req, res, next) {
+ZFS.listDatasets = function handlerZfsListDatasets(req, res, next) {
     var server = req.stash.server;
     var opts = {
         params: req.params,
@@ -64,7 +64,7 @@ ZFS.listDatasets = function (req, res, next) {
  * @response 204 None Dataset successfully created
  */
 
-ZFS.createDataset = function (req, res, next) {
+ZFS.createDataset = function handlerZfsCreateDataset(req, res, next) {
     var server = req.stash.server;
     var opts = {
         params: req.params,
@@ -98,7 +98,7 @@ ZFS.createDataset = function (req, res, next) {
  * @response 204 None Snapshot successfully created
  */
 
-ZFS.createSnapshot = function (req, res, next) {
+ZFS.createSnapshot = function handlerZfsCreateSnapshot(req, res, next) {
     var server = req.stash.server;
     var name = req.params.name;
     var snapshot = req.params.dataset + '@' + name;
@@ -138,7 +138,7 @@ ZFS.createSnapshot = function (req, res, next) {
  * @response 204 None Snapshot successfully rolled back
  */
 
-ZFS.rollbackSnapshot = function (req, res, next) {
+ZFS.rollbackSnapshot = function handlerZfsRollbackSnapshot(req, res, next) {
     var server = req.stash.server;
 
     var name = req.params.name;
@@ -177,7 +177,7 @@ ZFS.rollbackSnapshot = function (req, res, next) {
  * @response 200 Array Array of snapshot objects
  */
 
-ZFS.listSnapshots = function (req, res, next) {
+ZFS.listSnapshots = function handlerZfsListSnapshots(req, res, next) {
     var server = req.stash.server;
 
     var opts = {
@@ -227,7 +227,7 @@ function findProps(params) {
  * @response 200 Object list of property details
  */
 
-ZFS.getAllProperties = function (req, res, next) {
+ZFS.getAllProperties = function handlerZfsGetAllProperties(req, res, next) {
     var server = req.stash.server;
 
     var params = {};
@@ -276,7 +276,7 @@ ZFS.getAllProperties = function (req, res, next) {
  * @response 200 Array List of dataset property details
  */
 
-ZFS.getProperties = function (req, res, next) {
+ZFS.getProperties = function handlerZfsGetProperties(req, res, next) {
     var server = req.stash.server;
     var dataset = req.params.dataset;
 
@@ -326,7 +326,7 @@ ZFS.getProperties = function (req, res, next) {
  * @response 204 None Properties were set successfully
  */
 
-ZFS.setProperties = function (req, res, next) {
+ZFS.setProperties = function handlerZfsSetProperties(req, res, next) {
     var server = req.stash.server;
 
     var opts = {
@@ -359,7 +359,7 @@ ZFS.setProperties = function (req, res, next) {
  * @response 204 None Dataset successfully deleted
  */
 
-ZFS.destroyDataset = function (req, res, next) {
+ZFS.destroyDataset = function handlerZfsDestroyDataset(req, res, next) {
     var server = req.stash.server;
 
     var opts = {
@@ -392,7 +392,7 @@ ZFS.destroyDataset = function (req, res, next) {
  * @response 200 Array List of zpool detail objects
  */
 
-ZFS.listZpools = function (req, res, next) {
+ZFS.listZpools = function handlerZfsListZpools(req, res, next) {
     var server = req.stash.server;
 
     var opts = {
diff --git a/lib/server.js b/lib/server.js
index 2d33424..7276d2c 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var os = require('os');
@@ -32,7 +32,7 @@ function createServer(options) {
         'servereventheartbeat': true,
         'servereventvmsupdate': true
     };
-    cnapi.use(function (req, res, next) {
+    cnapi.use(function setTracing(req, res, next) {
         req.trace = trace_event.createBunyanTracer({
             log: req.log
         });
@@ -43,7 +43,7 @@ function createServer(options) {
         }
         next();
     });
-    cnapi.on('after', function (req, res, route, err) {
+    cnapi.on('after', function skipRoutes(req, res, route, err) {
         if (route && !EVT_SKIP_ROUTES[route.name]) {
             req.trace.end({name: route.name, req_seq: req.trace.seq_id});
         }
@@ -61,7 +61,7 @@ function createServer(options) {
 
 
     // Add a default timeout of one hour
-    cnapi.use(function (req, res, next) {
+    cnapi.use(function setDefaultTimeouts(req, res, next) {
         req.connection.setTimeout(3600 * 1000);
         res.connection.setTimeout(3600 * 1000);
         next();
@@ -87,7 +87,7 @@ function createServer(options) {
         })(req, res, route, err);
     });
 
-    cnapi.use(function (req, res, next) {
+    cnapi.use(function setHeaders(req, res, next) {
         res.on('header', function onHeader() {
             var now = Date.now();
             res.header('Date', new Date());
