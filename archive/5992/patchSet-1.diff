commit f911a2fd1658f1b47c2ba6b160248aefbb351ea7
Author: Ryan Zezeski <rpz@joyent.com>
Date:   2019-03-20T15:13:32-06:00 (7 months ago)
    
    OS-7674 i40e LSO panic when sending from bhyve

diff --git a/usr/src/uts/common/io/i40e/i40e_transceiver.c b/usr/src/uts/common/io/i40e/i40e_transceiver.c
index dbb8ae2f67..1da45537d3 100644
--- a/usr/src/uts/common/io/i40e/i40e_transceiver.c
+++ b/usr/src/uts/common/io/i40e/i40e_transceiver.c
@@ -2565,6 +2565,7 @@ i40e_lso_chain(i40e_trqpair_t *itrq, const mblk_t *mp,
 	size_t segsz = 0;
 	uint_t segdesc = 0;
 	uint_t needed_desc = 0;
+	size_t hdrcopied = 0;
 	const size_t hdrlen =
 	    meo->meoi_l2hlen + meo->meoi_l3hlen + meo->meoi_l4hlen;
 	const size_t mss = tctx->itc_ctx_mss;
@@ -2577,35 +2578,39 @@ i40e_lso_chain(i40e_trqpair_t *itrq, const mblk_t *mp,
 	 * We always copy the header in order to avoid more
 	 * complicated code dealing with various edge cases.
 	 */
-	ASSERT3U(MBLKL(mp), >=, hdrlen);
 	if ((tcb = i40e_tcb_alloc(itrq)) == NULL) {
 		txs->itxs_err_notcb.value.ui64++;
 		goto fail;
 	}
-	needed_desc++;
 
+	needed_desc++;
 	tcb_list_append(&tcbhead, &tcbtail, tcb);
-	i40e_tx_copy_fragment(tcb, mp, 0, hdrlen);
-	cpoff += hdrlen;
+
+	while (hdrcopied < hdrlen) {
+		size_t tocopy = MIN(hdrlen - hdrcopied, mp_len);
+		i40e_tx_copy_fragment(tcb, mp, 0, tocopy);
+		hdrcopied += tocopy;
+		cpoff += tocopy;
+		if (tocopy == mp_len) {
+			mp = mp->b_cont;
+			while ((mp_len = MBLKL(mp)) == 0) {
+				mp = mp->b_cont;
+			}
+			cpoff = 0;
+		}
+	}
+	ASSERT3U(hdrcopied, ==, hdrlen);
 
 	/*
 	 * A single descriptor containing both header and data is
 	 * counted twice by the controller.
 	 */
-	if ((mp_len > hdrlen && mp_len < i40e->i40e_tx_dma_min) ||
-	    (mp->b_cont != NULL &&
-	    MBLKL(mp->b_cont) < i40e->i40e_tx_dma_min)) {
+	if (mp_len < i40e->i40e_tx_dma_min) {
 		segdesc = 2;
 	} else {
 		segdesc = 1;
 	}
 
-	/* If this fragment was pure header, then move to the next one. */
-	if (cpoff == mp_len) {
-		mp = mp->b_cont;
-		cpoff = 0;
-	}
-
 	while (mp != NULL) {
 		mp_len = MBLKL(mp);
 force_copy:
