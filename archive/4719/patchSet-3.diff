commit 10209ae803b831694042921896a96e98ece8b11a (refs/changes/19/4719/3)
Author: Dave Eddy <dave@daveeddy.com>
Date:   2018-08-27T14:30:38-04:00 (1 year, 1 month ago)
    
    joyent/node-manta#350 readme should have alternate install instructions to avoid root privileges
    Reviewed by: Kody A Kantor <kody@kkantor.com>

diff --git a/README.md b/README.md
index b2dc1d0..eabef03 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-# Manta client tools
+# Manta Client Tools and SDK
 
 [manta](http://apidocs.joyent.com/manta/nodesdk.html) is a Node.js SDK for
 interacting with Joyent's Manta system.
@@ -8,20 +8,61 @@ project.  See [CONTRIBUTING.md](CONTRIBUTING.md) for contribution guidelines.
 
 # Installation
 
+[Node.js](https://nodejs.org/) must be installed.
+
+## Command line utilities
+
+### Install Globally
+
+To install globally (to use the CLI tools) you can try running:
+
     $ npm install manta -g
 
+Note that this might require `sudo` or escalated privileges to install
+properly.  This can often result in permissions errors or other failures - in
+that case try the below method.
+
+### Install Locally as a Global Style Module
+
+To install locally to a hidden directory in your home directory as a
+"global-style" package, and add the bin directory to your `PATH`, try running:
+
+    mkdir -p ~/.node
+    cd ~/.node
+    npm install --global-style manta
+    PATH=$PATH:~/.node/node_modules/.bin
+
+You can persist this path by adding the following line to your `~/.bashrc` file
+or similar:
+
+``` bash
+PATH=$PATH:~/.node/node_modules/.bin
+```
+
+## Node.js module
+
+To install locally as a module (to use the SDK).
+
+    $ npm install manta
 
 ### Bash completion
 
 Optionally install Bash completion. This is done by `source`ing the
-"share/manta.completion" file that is installed with the tools. If you
-installed with `npm install manta -g` as above, then that is:
+`share/manta.completion` file that is installed with the tools.
 
-```bash
-source $(npm prefix -g)/lib/node_modules/manta/share/manta.completion
+If you installed with `npm install manta -g` you can use this:
+
+``` bash
+source "$(npm prefix -g)/lib/node_modules/manta/share/manta.completion"
+```
+
+If you installed in `~/.node` as a global-style package you can use this:
+
+``` bash
+source ~/.node/node_modules/manta/share/manta.completion
 ```
 
-Put that (or the equivalent) in your "~/.bashrc" file to make it permanent.
+Put that (or the equivalent) in your `~/.bashrc` file to make it permanent.
 
 You can verify that completions are working by typing the `TAB` key with
 the following:
@@ -31,56 +72,68 @@ the following:
     --fulljson  --json      --marker    --subuser   --url       --version
     --help      --keyId     --reverse   --time      --user
 
-
 # Usage
 
 First setup your environment to match your Joyent Manta account:
 
-    $ export MANTA_KEY_ID=`ssh-keygen -l -f ~/.ssh/id_rsa.pub | awk '{print $2}' | tr -d '\n'`
+    $ export MANTA_KEY_ID=$(ssh-keygen -l -f ~/.ssh/id_rsa.pub | awk '{print $2}')
     $ export MANTA_URL=https://us-east.manta.joyent.com
     $ export MANTA_USER=mark
 
-Then a code snippet:
+Alternatively, you can pull your ssh key out of your `ssh-agent` if you are
+using one (this snippet takes the first key in the agent).
 
-    var assert = require('assert');
-    var fs = require('fs');
-    var manta = require('manta');
-
-    var client = manta.createClient({
-        sign: manta.privateKeySigner({
-            key: fs.readFileSync(process.env.HOME + '/.ssh/id_rsa', 'utf8'),
-            keyId: process.env.MANTA_KEY_ID,
-            user: process.env.MANTA_USER
-        }),
-        user: process.env.MANTA_USER,
-        url: process.env.MANTA_URL
-    });
-    console.log('manta ready: %s', client.toString());
+    $ export MANTA_KEY_ID=$(ssh-add -l | awk '{print $2}' | head -1)
 
-    client.get('/mark/stor/foo', function (err, stream) {
-        assert.ifError(err);
+## SDK
 
-        stream.setEncoding('utf8');
-        stream.on('data', function (chunk) {
-            console.log(chunk);
-        });
+Then a code snippet:
+
+``` js
+var assert = require('assert');
+var fs = require('fs');
+var manta = require('manta');
+
+var client = manta.createClient({
+    sign: manta.privateKeySigner({
+        key: fs.readFileSync(process.env.HOME + '/.ssh/id_rsa', 'utf8'),
+        keyId: process.env.MANTA_KEY_ID,
+        user: process.env.MANTA_USER
+    }),
+    user: process.env.MANTA_USER,
+    url: process.env.MANTA_URL
+});
+console.log('manta ready: %s', client.toString());
+
+client.get('/mark/stor/foo', function (err, stream) {
+    assert.ifError(err);
+
+    stream.setEncoding('utf8');
+    stream.on('data', function (chunk) {
+        console.log(chunk);
     });
+});
+```
 
-If your paths begin with `'~~/'` then manta will automatically fill in the current manta user, which helps
-you write more generic code since you get rid of the hardcoded user name. The following two rows are identical:
+If your paths begin with `'~~/'` then manta will automatically fill in the
+current manta user, which helps you write more generic code since you get rid
+of the hardcoded user name. The following two rows are identical:
 
-    client.get('/mark/stor/foo', function (err, stream) {});
-    client.get('~~/stor/foo', function (err, stream) {});
+``` js
+client.get('/mark/stor/foo', function (err, stream) {});
+client.get('~~/stor/foo', function (err, stream) {});
+```
 
-# CLI
+## CLI
 
 Basic commands include:
 
-1. mls - lists directory contents, default /:user/stor
-2. mput - uploads data to a Manta object
-3. mget - downloads an object from Manta
-4. mjob - creates and runs a computational job on Manta
-5. mfind - walks a Manta hierarchy to find names of objects by name, size, or type
+1. `mls` - lists directory contents, default /:user/stor
+2. `mmkdir` - create a directory
+3. `mput` - uploads data to a Manta object
+4. `mget` - downloads an object from Manta
+5. `mjob` - creates and runs a computational job on Manta
+6. `mfind` - walks a Manta hierarchy to find names of objects by name, size, or type
 
 A full set of commands for interacting with Manta is in `bin`.
 
@@ -117,9 +170,10 @@ versions. First you must create "test/node.paths" (based on
 
 # License
 
+```
 The MIT License (MIT)
 
-Copyright (c) 2017, Joyent, Inc.
+Copyright (c) 2018, Joyent, Inc.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
@@ -138,10 +192,11 @@ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
+```
 
 # Bugs
 
-See <https://github.com/joyent/node-manta/issues>.
+See https://github.com/joyent/node-manta/issues.
 
 # Release process
 
