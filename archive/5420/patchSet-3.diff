commit 40261875586ae16d4e5ed209d6ee402dabeb9ae2 (refs/changes/20/5420/3)
Author: Jerry Jelinek <jerry.jelinek@joyent.com>
Date:   2019-01-31T10:43:29-07:00 (8 months ago)
    
    TRITON-1102 cnapi support for large storage servers
    Reviewed by: Pedro Palazón Candel <pedro@joyent.com>
    Approved by: Pedro Palazón Candel <pedro@joyent.com>

diff --git a/docs/index.md b/docs/index.md
index 93d607d..59b6f70 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -10,7 +10,7 @@ markdown2extras: tables, code-friendly
 -->
 
 <!--
-    Copyright (c) 2018, Joyent, Inc.
+    Copyright (c) 2019, Joyent, Inc.
 -->
 
 <!--
@@ -1285,6 +1285,7 @@ Initiate the server setup process for a newly started server.
 | postsetup_script | String | Script to run after setup has completed                      |
 | hostname         | String | Hostname to set for the specified server                     |
 | disk_spares      | String | See `man disklayout` spares                                  |
+| disk_width       | String | See `man disklayout` width                                   |
 | disk_cache       | String | See `man disklayout` cache                                   |
 | disk_layout      | String | See `man disklayout` type      (single, mirror, raidz1, ...) |
 
diff --git a/lib/endpoints/servers.js b/lib/endpoints/servers.js
index 44ec8d0..7169e9d 100644
--- a/lib/endpoints/servers.js
+++ b/lib/endpoints/servers.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -652,6 +652,7 @@ Server.factoryReset = function handlerServerFactoryReset(req, res, next) {
  * @param {String} postsetup_script Script to run after setup has completed
  * @param {String} hostname Hostname to set for the specified server
  * @param {String} disk_spares See `man disklayout` spares
+ * @param {String} disk_width See `man disklayout` width
  * @param {String} disk_cache See `man disklayout` cache
  * @param {String} disk_layout See `man disklayout` type
  *      (single, mirror, raidz1, ...)
@@ -667,6 +668,7 @@ Server.setup = function handlerServerSetup(req, res, next) {
         'postsetup_script': ['optional', 'isStringType'],
         'server_uuid': ['isStringType'],
         'disk_spares': ['optional', 'isNumberGreaterThanEqualZeroType'],
+        'disk_width': ['optional', 'isNumberGreaterThanEqualZeroType'],
         'disk_cache': ['optional', 'isBooleanString'],
         'disk_layout': ['optional', 'isStringType']
     };
@@ -696,6 +698,9 @@ Server.setup = function handlerServerSetup(req, res, next) {
     if (typeof (req.params.disk_spares) !== 'undefined') {
         params.disk_spares = req.params.disk_spares;
     }
+    if (typeof (req.params.disk_width) !== 'undefined') {
+        params.disk_width = req.params.disk_width;
+    }
     if (typeof (req.params.disk_cache) !== 'undefined') {
         params.disk_cache = (req.params.disk_cache === 'true');
     }
diff --git a/lib/models/server.js b/lib/models/server.js
index 8ac9892..971bb03 100644
--- a/lib/models/server.js
+++ b/lib/models/server.js
@@ -1309,6 +1309,10 @@ ModelServer.prototype.setup = function (params, callback) {
             wfParams.disk_spares = params.disk_spares;
         }
 
+        if (params.hasOwnProperty('disk_width')) {
+            wfParams.disk_width = params.disk_width;
+        }
+
         // Caching is the default, we only need to pass in disk cache
         // when it's false:
         if (params.hasOwnProperty('disk_cache') &&
diff --git a/lib/workflows/server-setup.js b/lib/workflows/server-setup.js
index e6b0ca6..3327b33 100644
--- a/lib/workflows/server-setup.js
+++ b/lib/workflows/server-setup.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -24,7 +24,7 @@
  * - Set server setup => true
  */
 
-var VERSION = '1.0.3';
+var VERSION = '1.0.4';
 
 var cnapiCommon = require('wf-shared').cnapi;
 var napiCommon = require('wf-shared').napi;
@@ -92,6 +92,9 @@ function fetchSetupFiles(job, callback) {
     if (job.params.hasOwnProperty('disk_spares')) {
         diskCfg += 'echo "spares=' + job.params.disk_spares + '"; ';
     }
+    if (job.params.hasOwnProperty('disk_width')) {
+        diskCfg += 'echo "width=' + job.params.disk_width + '"; ';
+    }
 
     var script = [
         '#!/bin/bash',
