From 1e5ab756ab82c029acd3daf124ffcb1bf705440f Mon Sep 17 00:00:00 2001
From: Patrick Mooney <pmooney@pfmooney.com>
Date: Thu, 3 Nov 2016 19:40:11 +0000
Subject: [PATCH] OS-5768 lxbrand sched_getaffinity enforces wrong size on
 32-bit

---
 usr/src/uts/common/brand/lx/syscall/lx_sched.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/usr/src/uts/common/brand/lx/syscall/lx_sched.c b/usr/src/uts/common/brand/lx/syscall/lx_sched.c
index 6544763093..9e313406c0 100644
--- a/usr/src/uts/common/brand/lx/syscall/lx_sched.c
+++ b/usr/src/uts/common/brand/lx/syscall/lx_sched.c
@@ -238,14 +238,22 @@ lx_sched_getaffinity(l_pid_t pid, unsigned int len, void *maskp)
 	kthread_t	*tp = NULL;
 	lx_lwp_data_t	*lwpd;
 	int		err;
-	unsigned int	pmin, pmax;
+	unsigned int	pmin, pmax, compare_size;
 	lx_affmask_t	lmask;
 	cpuset_t	*smask;
 
 	/*
-	 * The ulong_t boundary requirement is to match Linux's behavior.
+	 * The length boundary requirement is to match Linux's behavior.
 	 */
-	if ((len & (sizeof (ulong_t) - 1)) != 0) {
+	switch (get_udatamodel()) {
+	case DATAMODEL_ILP32:
+		compare_size = sizeof (uint32_t);
+		break;
+	default:
+		compare_size = sizeof (ulong_t);
+		break;
+	}
+	if ((len & (compare_size - 1)) != 0) {
 		return (set_errno(EINVAL));
 	}
 
-- 
2.21.0

