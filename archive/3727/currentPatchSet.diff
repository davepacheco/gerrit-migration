commit 856a14abbce934015e8ca31d9d3b7147a472489d (refs/changes/27/3727/4)
Author: dyep49 <dyep49@gmail.com>
Date:   2018-03-27T13:47:52-07:00 (1 year, 6 months ago)
    
    TRITON-264 Add triton-metrics collection to CloudAPI

diff --git a/README.md b/README.md
index 1c4f1f2..2d3fc7f 100644
--- a/README.md
+++ b/README.md
@@ -33,7 +33,7 @@ A CloudAPI server should be running in a cloudapi zone after running the
 sdcadm command above. Alternatively, a more manual approach is:
 
     git clone git@github.com:joyent/sdc-cloudapi.git
-    cd cloudapi
+    cd sdc-cloudapi
     git submodule update --init
     make all
     node main.js -f ./etc/cloudapi.config.json
diff --git a/docs/admin.md b/docs/admin.md
index 05b2315..c25009f 100644
--- a/docs/admin.md
+++ b/docs/admin.md
@@ -606,6 +606,11 @@ Log messages can be traced using `bunyan -p cloudapi` as explained in
 [Bunyan DTrace Examples](https://github.com/trentm/node-bunyan#dtrace-examples)
 
 
+# Metrics
+
+CloudAPI exposes metrics via [node-triton-metrics](https://github.com/joyent/node-triton-metrics) on `http://<ADMIN_IP>:<config.port + 800>/metrics`. For example, if the CloudAPI servers are running on port 8081 and 8082, then a metrics server would be exposed on `http://<ADMIN_IP>:8881/metrics` and `http://<ADMIN_IP>:8882/metrics`.
+
+
 # Appendix A: Provision Limits Plugin
 
 CloudAPI comes with a **Provisioning Limits** plugin, which provides several
diff --git a/lib/app.js b/lib/app.js
index 0b3600b..cbad86b 100644
--- a/lib/app.js
+++ b/lib/app.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -23,6 +23,7 @@ var https = require('https');
 var util = require('util');
 var path = require('path');
 
+var createMetricsManager = require('triton-metrics').createMetricsManager;
 var cueball = require('cueball');
 var jsprim = require('jsprim');
 var kang = require('kang');
@@ -296,6 +297,23 @@ module.exports = {
             log.info('cueball kang monitor started on port %d', kangOpts.port);
         });
 
+        var metricsManager = createMetricsManager({
+            address: config.adminIp,
+            log: log.child({ component: 'metrics' }),
+            port: config.port + 800,
+            restify: restify,
+            staticLabels: {
+                datacenter: config.datacenter_name,
+                instance: config.instanceUuid,
+                port: config.port,
+                server: config.serverUuid,
+                service: config.serviceName
+            }
+        });
+
+        metricsManager.createRestifyMetrics();
+        metricsManager.listen(function () {});
+
         return createClients(config, function (error, clients) {
             if (error) {
                 log.error({err: error}, 'Create clients error');
@@ -554,6 +572,9 @@ module.exports = {
                 log: log.child({component: 'audit'})
             }));
 
+            server.on('after', metricsManager.collectRestifyMetrics
+                .bind(metricsManager));
+
             // Closure to wrap up the port setting
             server.start = function start(cb) {
                 if (config.read_only === true) {
@@ -586,6 +607,7 @@ module.exports = {
                 clearInterval(globalAgentInterval);
 
                 kangServer.close();
+                metricsManager.close(function () {});
 
                 clients.vmapi.close();
                 clients.napi.close();
diff --git a/package.json b/package.json
index c7fb22a..bdeaf88 100644
--- a/package.json
+++ b/package.json
@@ -37,6 +37,7 @@
         "sdc-clients": "10.4.0",
         "semver": "5.4.1",
         "strsplit": "1.0.0",
+        "triton-metrics": "0.1.0",
         "ufds": "1.3.0",
         "vasync": "2.2.0",
         "verror": "1.10.0",
diff --git a/sapi_manifests/cloudapi/template b/sapi_manifests/cloudapi/template
index db5f4fb..fc09b6d 100644
--- a/sapi_manifests/cloudapi/template
+++ b/sapi_manifests/cloudapi/template
@@ -4,6 +4,10 @@
         "level": "info"
     },
     "datacenter_name": "{{{datacenter_name}}}",
+    "serviceName": "{{SERVICE_NAME}}",
+    "instanceUuid": "{{auto.ZONENAME}}",
+    "serverUuid": "{{auto.SERVER_UUID}}",
+    "adminIp": "{{auto.ADMIN_IP}}",
     "read_only": {{{CLOUDAPI_READONLY}}},
     {{#DC_MAINT_MESSAGE}}
     "dc_maint_message": "{{{DC_MAINT_MESSAGE}}}",
