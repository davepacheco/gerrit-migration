commit 768e2f12b3a5afafa4b7874e0c8305e70155f242 (refs/changes/92/1592/1)
Author: Nick Zivkovic <nick.zivkovic@joyent.com>
Date:   2017-02-28T23:57:39+00:00 (2 years, 7 months ago)
    
    TOOLS-1710 node-restify-warden should validate booleans

diff --git a/lib/validate.js b/lib/validate.js
index 1f8963e..af51327 100644
--- a/lib/validate.js
+++ b/lib/validate.js
@@ -246,5 +246,6 @@ module.exports = {
     UUIDarray: validators.UUIDarray,
     isNotInteger: validators.isNotInteger,
     offset: validators.offset,
-    limit: validators.limit
+    limit: validators.limit,
+    boolean: validators.boolean
 };
diff --git a/lib/validators.js b/lib/validators.js
index 958333a..31de1d4 100644
--- a/lib/validators.js
+++ b/lib/validators.js
@@ -377,6 +377,18 @@ function validateFieldsArray(fields) {
     };
 }
 
+function validateBoolean(_, name, val, callback) {
+    if (typeof (val) === 'boolean') {
+        return callback(null, val);
+    }
+
+    if (val === 'true' || val === 'false') {
+        return callback(null, val === 'true');
+    }
+
+    return callback(new errors.invalidParam(name, 'must be a boolean value'));
+}
+
 
 module.exports = {
     fieldsArray: validateFieldsArray,
@@ -389,5 +401,6 @@ module.exports = {
     UUIDarray: validateUUIDarray,
     isNotInteger: isNotInteger,
     offset: validateOffset,
-    limit: validateLimit
+    limit: validateLimit,
+    boolean: validateBoolean
 };
diff --git a/package.json b/package.json
index 68dfa09..3c44616 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "restify-warden",
-  "version": "0.1.1",
+  "version": "0.1.2",
   "description": "Yet another parameter validator",
   "author": "Joyent, Inc",
   "main": "./lib/validate.js",
diff --git a/tests/run.js b/tests/run.js
index 4e21fa1..649025a 100644
--- a/tests/run.js
+++ b/tests/run.js
@@ -321,7 +321,6 @@ test('IP-S-U', function (t) {
     validate.params(opts, null, params, function (err, res) {
         t.ok(err, 'Expecting error');
         var msg = util_const.msg.INVALID_PARAMS;
-        /* TODO Unknown params instead of invalid param */
         var errors = [ util_err.unknownParams(['hal']),
             util_err.missingParam('ip') ];
         expErr(msg, errors, err, t);
@@ -1235,6 +1234,59 @@ test('offset-S-KI-U', function (t) {
     });
 });
 
+test('boolean-S-KV', function (t) {
+    var opts = {
+        strict: true,
+        required: {
+            bool: validate.boolean
+        }
+    };
+    var params = { bool: 'true' };
+    validate.params(opts, null, params, function (err, res) {
+        t.ifErr(err, 'Expecting success');
+        t.end();
+    });
+});
+
+test('boolean-S-KI', function (t) {
+    var opts = {
+        strict: true,
+        required: {
+            bool: validate.boolean
+        }
+    };
+
+    var params = { bool: 'total-nonsense' };
+
+    validate.params(opts, null, params, function (err, res) {
+        t.ok(err, 'Expecting error');
+        var msg = util_const.msg.INVALID_PARAMS;
+        var errors = [
+            util_err.invalidParam('bool', 'must be a boolean value')
+        ];
+        expErr(msg, errors, err, t);
+        t.end();
+    });
+});
+
+test('boolean-S-U', function (t) {
+    var opts = {
+        strict: true,
+        required: {
+            bool: validate.boolean
+        }
+    };
+    var params = { qwerty: 'total-nonsense' };
+    validate.params(opts, null, params, function (err, res) {
+        t.ok(err, 'Expecting error');
+        var msg = util_const.msg.INVALID_PARAMS;
+        var errors = [ util_err.unknownParams(['qwerty']),
+                       util_err.missingParam('bool') ];
+        expErr(msg, errors, err, t);
+        t.end();
+    });
+});
+
 test('isUUID', function (t) {
     var uuid = '4aafe9a6-ab7d-11e6-93bb-c315b954888f';
     var T = validate.isUUID(uuid);
