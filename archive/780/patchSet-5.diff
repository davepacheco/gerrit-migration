From 55c6235892a4da9656694b3ecf4b9c3e41f017b4 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Tue, 25 Oct 2016 14:41:25 -0700
Subject: [PATCH] joyent/node-cueball#44 Give up on SRV and AAAA lookups that
 return NOTIMP or NODATA Reviewed by: Robert Mustacchi <rm@joyent.com>

---
 lib/resolver.js  | 93 +++++++++++++++++++++++++++++++++++++++++++-----
 package.json     |  2 +-
 test/dns.test.js | 15 ++++----
 3 files changed, 92 insertions(+), 18 deletions(-)

diff --git a/lib/resolver.js b/lib/resolver.js
index 3ce30ac..a5e6562 100644
--- a/lib/resolver.js
+++ b/lib/resolver.js
@@ -395,11 +395,13 @@ CueBallDNSResolver.prototype.state_srv_try = function (S) {
 	S.on(req, 'error', function (err) {
 		self.r_lastError = err;
 
-		if (NoRecordsError.isInstance(err)) {
+		if (NoRecordsError.isInstance(err) ||
+		    NoNameError.isInstance(err) || err.code === 'NOTIMP') {
 			/*
-			 * If we didn't get an error, but found no records for
-			 * SRV, then just proceed to do our AAAA/A lookups
-			 * directly on the base domain.
+			 * If we found no records for SRV, either because we
+			 * received NXDOMAIN, NODATA, or NOTIMP, then just
+			 * proceed to do our AAAA/A lookups directly on the
+			 * base domain.
 			 */
 			self.r_srvs = [ {
 				name: self.r_domain,
@@ -509,6 +511,19 @@ CueBallDNSResolver.prototype.state_aaaa_try = function (S) {
 		S.gotoState('aaaa_next');
 	});
 	S.on(req, 'error', function (err) {
+		if (NoRecordsError.isInstance(err) ||
+		    err.code === 'NOTIMP') {
+			/*
+			 * If we got NoRecordsError (NODATA), we probably have
+			 * a name that has no AAAA but has A records, so we
+			 * want to move on straight away (no retries). Going
+			 * to aaaa_next will skip over this name.
+			 *
+			 * Same goes for NOTIMP responses (from old binder).
+			 */
+			S.gotoState('aaaa_next');
+			return;
+		}
 		self.r_lastError = err;
 		S.gotoState('aaaa_error');
 	});
@@ -589,6 +604,28 @@ CueBallDNSResolver.prototype.state_a_try = function (S) {
 		S.gotoState('a_next');
 	});
 	S.on(req, 'error', function (err) {
+		if (NoRecordsError.isInstance(err)) {
+			/*
+			 * The server responded, and said there were no records
+			 * of this type (A). If we got AAAA records earlier,
+			 * though, that's fine, just move on (go to a_next and
+			 * skip this name). Otherwise, treat as a non-retryable
+			 * error.
+			 */
+			if (srv.addresses_v6 && srv.addresses_v6.length > 0) {
+				S.gotoState('a_next');
+				return;
+			} else {
+				/* Error is not retryable. */
+				self.r_retry.count = 0;
+			}
+		} else if (NoNameError.isInstance(err)) {
+			/*
+			 * Nameserver said this entire name doesn't exist, for
+			 * any record type. This isn't a retryable error.
+			 */
+			self.r_retry.count = 0;
+		}
 		self.r_lastError = err;
 		S.gotoState('a_error');
 	});
@@ -732,12 +769,26 @@ function srvKey(srv) {
 	return (hash.digest('base64'));
 }
 
-function NoRecordsError(name) {
+function NoNameError(name) {
+	if (Error.captureStackTrace)
+		Error.captureStackTrace(this, NoNameError);
+	this.name = 'NoNameError';
+	this.message = 'No records returned for name ' + name;
+	this.dnsName = name;
+}
+mod_util.inherits(NoNameError, Error);
+NoNameError.isInstance = function (i) {
+	return (i instanceof NoNameError);
+};
+
+function NoRecordsError(name, type) {
 	if (Error.captureStackTrace)
 		Error.captureStackTrace(this, NoRecordsError);
 	this.name = 'NoRecordsError';
-	this.message = 'No records returned for name ' + name;
+	this.message = 'No records returned for name ' + name + ' of type ' +
+	    type;
 	this.dnsName = name;
+	this.dnsType = type;
 }
 mod_util.inherits(NoRecordsError, Error);
 NoRecordsError.isInstance = function (i) {
@@ -747,7 +798,7 @@ NoRecordsError.isInstance = function (i) {
 function TimeoutError(name) {
 	if (Error.captureStackTrace)
 		Error.captureStackTrace(this, TimeoutError);
-	this.name = 'NoRecordsError';
+	this.name = 'TimeoutError';
 	this.message = 'Timeout while contacting resolvers for name ' + name;
 	this.dnsName = name;
 }
@@ -770,8 +821,34 @@ CueBallDNSResolver.prototype.resolve = function (domain, type, timeout) {
 	return (em);
 
 	function onLookup(err, msg) {
+		/*
+		 * If we get back a multi-error, make the resolvers that
+		 * responded vote for the most appropriate error code.
+		 */
+		if (err && err.name === 'MultiError') {
+			var errs = err.errors();
+			var codes = {};
+			errs.forEach(function (e) {
+				if (e.code === undefined)
+					return;
+				if (codes[e.code] === undefined)
+					codes[e.code] = 0;
+				++codes[e.code];
+			});
+			var sorted = Object.keys(codes).sort(function (a, b) {
+				if (codes[a] > codes[b])
+					return (-1);
+				if (codes[a] < codes[b])
+					return (1);
+				return (0);
+			});
+			err.code = sorted[0];
+		}
 		if (err && err.code === 'NXDOMAIN')
-			err = new NoRecordsError(domain);
+			err = new NoNameError(domain);
+		if (!err && msg && msg.getAnswers().length === 0)
+			err = new NoRecordsError(domain, type);
+
 		if (err) {
 			em.emit('error', err);
 			return;
diff --git a/package.json b/package.json
index f93ec47..5430225 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "cueball",
-  "version": "1.1.3",
+  "version": "1.1.4",
   "description": "",
   "main": "lib/index.js",
   "dependencies": {
diff --git a/test/dns.test.js b/test/dns.test.js
index 13f90d9..e98b746 100644
--- a/test/dns.test.js
+++ b/test/dns.test.js
@@ -128,6 +128,9 @@ DummyDnsClient.prototype.lookup = function (options, cb) {
 				rdata: { target: '1234:abcd::1' }
 			});
 			reply.header.anCount++;
+		} else if (parts[1] === 'a' || parts[1] === 'aaaa') {
+			reply.header.flags.rcode = mod_proto.rCodes.NOERROR;
+			/* send a NODATA response. */
 		}
 		break;
 	case 'notfound':
@@ -216,14 +219,10 @@ mod_tape.test('SRV lookup', function (t) {
 			});
 			t.deepEqual(history, [
 				'_foo._tcp.srv.ok/SRV',
-				'a.ok/AAAA',
-				'a.ok/AAAA',
-				'a.ok/AAAA', /* 3 retries, not found */
+				'a.ok/AAAA', /* 1 try, got NODATA */
 				'aaaa.ok/AAAA',
 				'a.ok/A',
-				'aaaa.ok/A',
-				'aaaa.ok/A',
-				'aaaa.ok/A'  /* 3 retries */
+				'aaaa.ok/A'  /* 1 try, got NODATA */
 			]);
 
 			nsclients[0].history = [];
@@ -263,9 +262,7 @@ mod_tape.test('plain A lookup', function (t) {
 			});
 			t.deepEqual(history, [
 				'_foo._tcp.a.ok/SRV', /* no retries, SRV */
-				'a.ok/AAAA',
-				'a.ok/AAAA',
-				'a.ok/AAAA', /* 3 retries, not found */
+				'a.ok/AAAA', /* 1 try, got NODATA */
 				'a.ok/A'
 			]);
 
-- 
2.21.0

