From 9fe9f4cb837b09d88005c8395f4e3897497be6d1 Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Thu, 13 Jul 2017 10:13:53 +0000
Subject: [PATCH] MANTA-2866 electric-moray setup failed: name service lookup
 timeout

---
 boot/setup.sh | 37 ++++++++++++++++++++++++++++++++-----
 1 file changed, 32 insertions(+), 5 deletions(-)

diff --git a/boot/setup.sh b/boot/setup.sh
index b48f280..03ac1b4 100755
--- a/boot/setup.sh
+++ b/boot/setup.sh
@@ -36,13 +36,40 @@ LEVELDB_DIR=$LEVELDB_DIR_PARENT/leveldb-
 SAPI_URL=$(mdata-get SAPI_URL)
 [[ -n $SAPI_URL ]] || fatal "no SAPI_URL found"
 sleep 10 # wait 10 seconds for dns to setup, this is so lame but otherwise will resolve in dns resolution errors.
-MANTA_APPLICATION=$(curl --connect-timeout 10 -sS -i -H accept:application/json \
-    -H content-type:application/json --url "$SAPI_URL/applications?name=manta&include_master=true" | json -Ha)
-[[ -n $MANTA_APPLICATION ]] || fatal "no MANTA_APPLICATION found"
-HASH_RING_IMAGE=$(echo $MANTA_APPLICATION | json metadata.HASH_RING_IMAGE)
+
+#
+# Load the Manta Application object from SAPI.  If this request fails, it will
+# be retried until the smf(5) method timeout expires for the "mdata:execute"
+# service.
+#
+while :; do
+    if ! sapi_res=$(curl --max-time 60 --ipv4 -sSf \
+      -H 'Accept: application/json' -H 'Content-Type: application/json' \
+      "$SAPI_URL/applications?name=manta&include_master=true"); then
+        printf 'WARNING: could not download SAPI application (retrying)\n' >&2
+        sleep 2
+        continue
+    fi
+
+    if ! napps=$(json length <<< "$sapi_res") || [[ $napps != '1' ]]; then
+        printf 'WARNING: found "%s" SAPI applications (retry)\n' "$napps" >&2
+        sleep 2
+        continue
+    fi
+
+    if ! manta_app=$(json 0 <<< "$sapi_res") || [[ -z $manta_app ]]; then
+        printf 'WARNING: failed to parse "manta" SAPI application (retry)\n' >&2
+        sleep 2
+        continue
+    fi
+
+    break
+done
+
+HASH_RING_IMAGE=$(json metadata.HASH_RING_IMAGE <<< "$manta_app")
 [[ -n $HASH_RING_IMAGE ]] || fatal "no HASH_RING_IMAGE found"
 HASH_RING_FILE=/var/tmp/$(uuid -v4).tar.gz
-export SDC_IMGADM_URL=$(echo $MANTA_APPLICATION | json metadata.HASH_RING_IMGAPI_SERVICE)
+export SDC_IMGADM_URL=$(json metadata.HASH_RING_IMGAPI_SERVICE <<< "$manta_app")
 [[ -n $SDC_IMGADM_URL ]] || fatal "no SDC_IMGADM_URL found"
 ZONE_UUID=$(/usr/bin/zonename)
 ZFS_PARENT_DATASET=zones/$ZONE_UUID/data
-- 
2.21.0

