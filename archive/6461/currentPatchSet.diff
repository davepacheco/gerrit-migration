From a45e51bc18ebe0a2b75c851a4b4bb7b3e62fb80c Mon Sep 17 00:00:00 2001
From: Jason King <jason.king@joyent.com>
Date: Mon, 17 Jun 2019 20:45:45 +0000
Subject: [PATCH] TRITON-1756 kbmapi: Key Backup and Management API Portions
 contributed by: Chris Burroughs <chris.burroughs@joyent.com>

---
 .eslintrc                              |   27 +
 .gitignore                             |   12 +
 .gitmodules                            |   15 +
 LICENSE                                |  373 ++++++++
 Makefile                               |  154 ++++
 README.md                              |   82 ++
 README.txt                             |    1 -
 boot/configure.sh                      |   22 +
 boot/setup.sh                          |   47 +
 deps/eng                               |    1 +
 deps/javascriptlint                    |    1 +
 deps/jsstyle                           |    1 +
 deps/restdown                          |    1 +
 deps/sdc-scripts                       |    1 +
 docs/index.md                          |   51 ++
 lib/apis/moray.js                      |  453 ++++++++++
 lib/app.js                             |  324 +++++++
 lib/config.js                          |   42 +
 lib/endpoints.js                       |  136 +++
 lib/models/index.js                    |   44 +
 lib/models/token.js                    |  358 ++++++++
 lib/util/constants.js                  |   20 +
 lib/util/errors.js                     |  262 ++++++
 lib/util/validate.js                   |   58 ++
 package.json                           |   31 +
 sapi_manifests/kbmapi/manifest.json    |    5 +
 sapi_manifests/kbmapi/template         |   12 +
 sapi_manifests/registrar/manifest.json |    5 +
 sapi_manifests/registrar/template      |   30 +
 sbin/kbmapid                           |   28 +
 server.js                              |   57 ++
 smf/manifests/kbmapi.xml.in            |   39 +
 test/lib/client.js                     |   52 ++
 test/lib/common.js                     |  445 ++++++++++
 test/lib/config.js                     |   29 +
 test/lib/log.js                        |   28 +
 test/lib/server.js                     |  178 ++++
 test/lib/token.js                      |  130 +++
 test/runtest                           |   32 +
 test/runtests                          |  176 ++++
 test/unit/helpers.js                   |   48 ++
 test/unit/run.js                       |   31 +
 test/unit/token.test.js                |  135 +++
 tools/bashstyle                        |  176 ++++
 tools/download_ctftools                |   90 ++
 tools/download_go                      |  126 +++
 tools/jsl.node.conf                    |  139 +++
 tools/jsl.web.conf                     |  137 +++
 tools/jsstyle.conf                     |   14 +
 tools/mkrepo                           |  121 +++
 tools/obliterate-kbmapi-service.sh     |   68 ++
 tools/rsync-to                         |   54 ++
 tools/runtests.in                      |  136 +++
 tools/service_bundle.dtd.1             | 1091 ++++++++++++++++++++++++
 54 files changed, 6128 insertions(+), 1 deletion(-)
 create mode 100644 .eslintrc
 create mode 100644 .gitignore
 create mode 100644 .gitmodules
 create mode 100644 LICENSE
 create mode 100644 Makefile
 create mode 100644 README.md
 delete mode 100644 README.txt
 create mode 100755 boot/configure.sh
 create mode 100755 boot/setup.sh
 create mode 160000 deps/eng
 create mode 160000 deps/javascriptlint
 create mode 160000 deps/jsstyle
 create mode 160000 deps/restdown
 create mode 160000 deps/sdc-scripts
 create mode 100644 docs/index.md
 create mode 100644 lib/apis/moray.js
 create mode 100644 lib/app.js
 create mode 100644 lib/config.js
 create mode 100644 lib/endpoints.js
 create mode 100644 lib/models/index.js
 create mode 100644 lib/models/token.js
 create mode 100644 lib/util/constants.js
 create mode 100644 lib/util/errors.js
 create mode 100644 lib/util/validate.js
 create mode 100644 package.json
 create mode 100644 sapi_manifests/kbmapi/manifest.json
 create mode 100644 sapi_manifests/kbmapi/template
 create mode 100644 sapi_manifests/registrar/manifest.json
 create mode 100644 sapi_manifests/registrar/template
 create mode 100755 sbin/kbmapid
 create mode 100644 server.js
 create mode 100644 smf/manifests/kbmapi.xml.in
 create mode 100644 test/lib/client.js
 create mode 100644 test/lib/common.js
 create mode 100644 test/lib/config.js
 create mode 100644 test/lib/log.js
 create mode 100644 test/lib/server.js
 create mode 100644 test/lib/token.js
 create mode 100755 test/runtest
 create mode 100755 test/runtests
 create mode 100644 test/unit/helpers.js
 create mode 100644 test/unit/run.js
 create mode 100644 test/unit/token.test.js
 create mode 100644 tools/bashstyle
 create mode 100644 tools/download_ctftools
 create mode 100644 tools/download_go
 create mode 100644 tools/jsl.node.conf
 create mode 100644 tools/jsl.web.conf
 create mode 100644 tools/jsstyle.conf
 create mode 100644 tools/mkrepo
 create mode 100755 tools/obliterate-kbmapi-service.sh
 create mode 100755 tools/rsync-to
 create mode 100644 tools/runtests.in
 create mode 100644 tools/service_bundle.dtd.1

diff --git a/.eslintrc b/.eslintrc
new file mode 100644
index 0000000..8095c7f
--- /dev/null
+++ b/.eslintrc
@@ -0,0 +1,27 @@
+{
+    "plugins": [ "joyent" ],
+    "extends": [
+        "eslint:recommended",
+        "plugin:joyent/style",
+        "plugin:joyent/lint"
+    ],
+    "parserOptions": {
+        "ecmaVersion": 5,
+        "sourceType": "script",
+        "ecmaFeatures": {
+        }
+    },
+    "env": {
+        "node": true
+    },
+    "rules": {
+        // Lint:
+        "strict": [ "error", "global" ],
+
+        // Style:
+        "func-style": [ "error", "declaration" ],
+
+        // Checks disabled as things get slowly cleaned up:
+        "consistent-return": "off"
+    }
+}
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..01d5490
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,12 @@
+/node_modules
+/tmp
+/cache/
+build
+/make_stamps
+docs/*.json
+docs/*.html
+cscope.in.out
+cscope.po.out
+cscope.out
+man
+smf/manifests/kbmapi.xml
diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..b02caf6
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,15 @@
+[submodule "deps/javascriptlint"]
+	path = deps/javascriptlint
+	url = https://github.com/davepacheco/javascriptlint.git
+[submodule "deps/restdown"]
+	path = deps/restdown
+	url = https://github.com/trentm/restdown.git
+[submodule "deps/sdc-scripts"]
+	path = deps/sdc-scripts
+	url = https://github.com/joyent/sdc-scripts.git
+[submodule "deps/jsstyle"]
+	path = deps/jsstyle
+	url = https://github.com/davepacheco/jsstyle.git
+[submodule "deps/eng"]
+	path = deps/eng
+	url = https://github.com/joyent/eng.git
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..14e2f77
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,373 @@
+Mozilla Public License Version 2.0
+==================================
+
+1. Definitions
+--------------
+
+1.1. "Contributor"
+    means each individual or legal entity that creates, contributes to
+    the creation of, or owns Covered Software.
+
+1.2. "Contributor Version"
+    means the combination of the Contributions of others (if any) used
+    by a Contributor and that particular Contributor's Contribution.
+
+1.3. "Contribution"
+    means Covered Software of a particular Contributor.
+
+1.4. "Covered Software"
+    means Source Code Form to which the initial Contributor has attached
+    the notice in Exhibit A, the Executable Form of such Source Code
+    Form, and Modifications of such Source Code Form, in each case
+    including portions thereof.
+
+1.5. "Incompatible With Secondary Licenses"
+    means
+
+    (a) that the initial Contributor has attached the notice described
+        in Exhibit B to the Covered Software; or
+
+    (b) that the Covered Software was made available under the terms of
+        version 1.1 or earlier of the License, but not also under the
+        terms of a Secondary License.
+
+1.6. "Executable Form"
+    means any form of the work other than Source Code Form.
+
+1.7. "Larger Work"
+    means a work that combines Covered Software with other material, in 
+    a separate file or files, that is not Covered Software.
+
+1.8. "License"
+    means this document.
+
+1.9. "Licensable"
+    means having the right to grant, to the maximum extent possible,
+    whether at the time of the initial grant or subsequently, any and
+    all of the rights conveyed by this License.
+
+1.10. "Modifications"
+    means any of the following:
+
+    (a) any file in Source Code Form that results from an addition to,
+        deletion from, or modification of the contents of Covered
+        Software; or
+
+    (b) any new file in Source Code Form that contains any Covered
+        Software.
+
+1.11. "Patent Claims" of a Contributor
+    means any patent claim(s), including without limitation, method,
+    process, and apparatus claims, in any patent Licensable by such
+    Contributor that would be infringed, but for the grant of the
+    License, by the making, using, selling, offering for sale, having
+    made, import, or transfer of either its Contributions or its
+    Contributor Version.
+
+1.12. "Secondary License"
+    means either the GNU General Public License, Version 2.0, the GNU
+    Lesser General Public License, Version 2.1, the GNU Affero General
+    Public License, Version 3.0, or any later versions of those
+    licenses.
+
+1.13. "Source Code Form"
+    means the form of the work preferred for making modifications.
+
+1.14. "You" (or "Your")
+    means an individual or a legal entity exercising rights under this
+    License. For legal entities, "You" includes any entity that
+    controls, is controlled by, or is under common control with You. For
+    purposes of this definition, "control" means (a) the power, direct
+    or indirect, to cause the direction or management of such entity,
+    whether by contract or otherwise, or (b) ownership of more than
+    fifty percent (50%) of the outstanding shares or beneficial
+    ownership of such entity.
+
+2. License Grants and Conditions
+--------------------------------
+
+2.1. Grants
+
+Each Contributor hereby grants You a world-wide, royalty-free,
+non-exclusive license:
+
+(a) under intellectual property rights (other than patent or trademark)
+    Licensable by such Contributor to use, reproduce, make available,
+    modify, display, perform, distribute, and otherwise exploit its
+    Contributions, either on an unmodified basis, with Modifications, or
+    as part of a Larger Work; and
+
+(b) under Patent Claims of such Contributor to make, use, sell, offer
+    for sale, have made, import, and otherwise transfer either its
+    Contributions or its Contributor Version.
+
+2.2. Effective Date
+
+The licenses granted in Section 2.1 with respect to any Contribution
+become effective for each Contribution on the date the Contributor first
+distributes such Contribution.
+
+2.3. Limitations on Grant Scope
+
+The licenses granted in this Section 2 are the only rights granted under
+this License. No additional rights or licenses will be implied from the
+distribution or licensing of Covered Software under this License.
+Notwithstanding Section 2.1(b) above, no patent license is granted by a
+Contributor:
+
+(a) for any code that a Contributor has removed from Covered Software;
+    or
+
+(b) for infringements caused by: (i) Your and any other third party's
+    modifications of Covered Software, or (ii) the combination of its
+    Contributions with other software (except as part of its Contributor
+    Version); or
+
+(c) under Patent Claims infringed by Covered Software in the absence of
+    its Contributions.
+
+This License does not grant any rights in the trademarks, service marks,
+or logos of any Contributor (except as may be necessary to comply with
+the notice requirements in Section 3.4).
+
+2.4. Subsequent Licenses
+
+No Contributor makes additional grants as a result of Your choice to
+distribute the Covered Software under a subsequent version of this
+License (see Section 10.2) or under the terms of a Secondary License (if
+permitted under the terms of Section 3.3).
+
+2.5. Representation
+
+Each Contributor represents that the Contributor believes its
+Contributions are its original creation(s) or it has sufficient rights
+to grant the rights to its Contributions conveyed by this License.
+
+2.6. Fair Use
+
+This License is not intended to limit any rights You have under
+applicable copyright doctrines of fair use, fair dealing, or other
+equivalents.
+
+2.7. Conditions
+
+Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted
+in Section 2.1.
+
+3. Responsibilities
+-------------------
+
+3.1. Distribution of Source Form
+
+All distribution of Covered Software in Source Code Form, including any
+Modifications that You create or to which You contribute, must be under
+the terms of this License. You must inform recipients that the Source
+Code Form of the Covered Software is governed by the terms of this
+License, and how they can obtain a copy of this License. You may not
+attempt to alter or restrict the recipients' rights in the Source Code
+Form.
+
+3.2. Distribution of Executable Form
+
+If You distribute Covered Software in Executable Form then:
+
+(a) such Covered Software must also be made available in Source Code
+    Form, as described in Section 3.1, and You must inform recipients of
+    the Executable Form how they can obtain a copy of such Source Code
+    Form by reasonable means in a timely manner, at a charge no more
+    than the cost of distribution to the recipient; and
+
+(b) You may distribute such Executable Form under the terms of this
+    License, or sublicense it under different terms, provided that the
+    license for the Executable Form does not attempt to limit or alter
+    the recipients' rights in the Source Code Form under this License.
+
+3.3. Distribution of a Larger Work
+
+You may create and distribute a Larger Work under terms of Your choice,
+provided that You also comply with the requirements of this License for
+the Covered Software. If the Larger Work is a combination of Covered
+Software with a work governed by one or more Secondary Licenses, and the
+Covered Software is not Incompatible With Secondary Licenses, this
+License permits You to additionally distribute such Covered Software
+under the terms of such Secondary License(s), so that the recipient of
+the Larger Work may, at their option, further distribute the Covered
+Software under the terms of either this License or such Secondary
+License(s).
+
+3.4. Notices
+
+You may not remove or alter the substance of any license notices
+(including copyright notices, patent notices, disclaimers of warranty,
+or limitations of liability) contained within the Source Code Form of
+the Covered Software, except that You may alter any license notices to
+the extent required to remedy known factual inaccuracies.
+
+3.5. Application of Additional Terms
+
+You may choose to offer, and to charge a fee for, warranty, support,
+indemnity or liability obligations to one or more recipients of Covered
+Software. However, You may do so only on Your own behalf, and not on
+behalf of any Contributor. You must make it absolutely clear that any
+such warranty, support, indemnity, or liability obligation is offered by
+You alone, and You hereby agree to indemnify every Contributor for any
+liability incurred by such Contributor as a result of warranty, support,
+indemnity or liability terms You offer. You may include additional
+disclaimers of warranty and limitations of liability specific to any
+jurisdiction.
+
+4. Inability to Comply Due to Statute or Regulation
+---------------------------------------------------
+
+If it is impossible for You to comply with any of the terms of this
+License with respect to some or all of the Covered Software due to
+statute, judicial order, or regulation then You must: (a) comply with
+the terms of this License to the maximum extent possible; and (b)
+describe the limitations and the code they affect. Such description must
+be placed in a text file included with all distributions of the Covered
+Software under this License. Except to the extent prohibited by statute
+or regulation, such description must be sufficiently detailed for a
+recipient of ordinary skill to be able to understand it.
+
+5. Termination
+--------------
+
+5.1. The rights granted under this License will terminate automatically
+if You fail to comply with any of its terms. However, if You become
+compliant, then the rights granted under this License from a particular
+Contributor are reinstated (a) provisionally, unless and until such
+Contributor explicitly and finally terminates Your grants, and (b) on an
+ongoing basis, if such Contributor fails to notify You of the
+non-compliance by some reasonable means prior to 60 days after You have
+come back into compliance. Moreover, Your grants from a particular
+Contributor are reinstated on an ongoing basis if such Contributor
+notifies You of the non-compliance by some reasonable means, this is the
+first time You have received notice of non-compliance with this License
+from such Contributor, and You become compliant prior to 30 days after
+Your receipt of the notice.
+
+5.2. If You initiate litigation against any entity by asserting a patent
+infringement claim (excluding declaratory judgment actions,
+counter-claims, and cross-claims) alleging that a Contributor Version
+directly or indirectly infringes any patent, then the rights granted to
+You by any and all Contributors for the Covered Software under Section
+2.1 of this License shall terminate.
+
+5.3. In the event of termination under Sections 5.1 or 5.2 above, all
+end user license agreements (excluding distributors and resellers) which
+have been validly granted by You or Your distributors under this License
+prior to termination shall survive termination.
+
+************************************************************************
+*                                                                      *
+*  6. Disclaimer of Warranty                                           *
+*  -------------------------                                           *
+*                                                                      *
+*  Covered Software is provided under this License on an "as is"       *
+*  basis, without warranty of any kind, either expressed, implied, or  *
+*  statutory, including, without limitation, warranties that the       *
+*  Covered Software is free of defects, merchantable, fit for a        *
+*  particular purpose or non-infringing. The entire risk as to the     *
+*  quality and performance of the Covered Software is with You.        *
+*  Should any Covered Software prove defective in any respect, You     *
+*  (not any Contributor) assume the cost of any necessary servicing,   *
+*  repair, or correction. This disclaimer of warranty constitutes an   *
+*  essential part of this License. No use of any Covered Software is   *
+*  authorized under this License except under this disclaimer.         *
+*                                                                      *
+************************************************************************
+
+************************************************************************
+*                                                                      *
+*  7. Limitation of Liability                                          *
+*  --------------------------                                          *
+*                                                                      *
+*  Under no circumstances and under no legal theory, whether tort      *
+*  (including negligence), contract, or otherwise, shall any           *
+*  Contributor, or anyone who distributes Covered Software as          *
+*  permitted above, be liable to You for any direct, indirect,         *
+*  special, incidental, or consequential damages of any character      *
+*  including, without limitation, damages for lost profits, loss of    *
+*  goodwill, work stoppage, computer failure or malfunction, or any    *
+*  and all other commercial damages or losses, even if such party      *
+*  shall have been informed of the possibility of such damages. This   *
+*  limitation of liability shall not apply to liability for death or   *
+*  personal injury resulting from such party's negligence to the       *
+*  extent applicable law prohibits such limitation. Some               *
+*  jurisdictions do not allow the exclusion or limitation of           *
+*  incidental or consequential damages, so this exclusion and          *
+*  limitation may not apply to You.                                    *
+*                                                                      *
+************************************************************************
+
+8. Litigation
+-------------
+
+Any litigation relating to this License may be brought only in the
+courts of a jurisdiction where the defendant maintains its principal
+place of business and such litigation shall be governed by laws of that
+jurisdiction, without reference to its conflict-of-law provisions.
+Nothing in this Section shall prevent a party's ability to bring
+cross-claims or counter-claims.
+
+9. Miscellaneous
+----------------
+
+This License represents the complete agreement concerning the subject
+matter hereof. If any provision of this License is held to be
+unenforceable, such provision shall be reformed only to the extent
+necessary to make it enforceable. Any law or regulation which provides
+that the language of a contract shall be construed against the drafter
+shall not be used to construe this License against a Contributor.
+
+10. Versions of the License
+---------------------------
+
+10.1. New Versions
+
+Mozilla Foundation is the license steward. Except as provided in Section
+10.3, no one other than the license steward has the right to modify or
+publish new versions of this License. Each version will be given a
+distinguishing version number.
+
+10.2. Effect of New Versions
+
+You may distribute the Covered Software under the terms of the version
+of the License under which You originally received the Covered Software,
+or under the terms of any subsequent version published by the license
+steward.
+
+10.3. Modified Versions
+
+If you create software not governed by this License, and you want to
+create a new license for such software, you may create and use a
+modified version of this License if you rename the license and remove
+any references to the name of the license steward (except to note that
+such modified license differs from this License).
+
+10.4. Distributing Source Code Form that is Incompatible With Secondary
+Licenses
+
+If You choose to distribute Source Code Form that is Incompatible With
+Secondary Licenses under the terms of this version of the License, the
+notice described in Exhibit B of this License must be attached.
+
+Exhibit A - Source Code Form License Notice
+-------------------------------------------
+
+  This Source Code Form is subject to the terms of the Mozilla Public
+  License, v. 2.0. If a copy of the MPL was not distributed with this
+  file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+If it is not possible or desirable to put the notice in a particular
+file, then You may include the notice in a location (such as a LICENSE
+file in a relevant directory) where a recipient would be likely to look
+for such a notice.
+
+You may add additional accurate notices of copyright ownership.
+
+Exhibit B - "Incompatible With Secondary Licenses" Notice
+---------------------------------------------------------
+
+  This Source Code Form is "Incompatible With Secondary Licenses", as
+  defined by the Mozilla Public License, v. 2.0.
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..9f882d0
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,154 @@
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019, Joyent, Inc.
+#
+
+#
+# KBMAPI Makefile
+#
+
+NAME		:= kbmapi
+
+#
+# Tools
+#
+
+ISTANBUL	:= node_modules/.bin/istanbul
+FAUCET		:= node_modules/.bin/faucet
+
+#
+# Configuration used by Makefile.defs and Makefile.targ to generate
+# "check" and "docs" targets.
+#
+DOC_FILES	= index.md
+JSON_FILES	= package.json
+JS_FILES	:= $(shell find lib test -name '*.js') tools/bashstyle
+JSL_CONF_NODE	= tools/jsl.node.conf
+JSL_FILES_NODE	= $(JS_FILES)
+JSSTYLE_FILES	= $(JS_FILES)
+JSSTYLE_FLAGS	= -o indent=2,doxygen,unparenthesized-return=0,strict-indent=true
+ESLINT		= ./node_modules/.bin/eslint
+ESLINT_FILES	= $(JS_FILES)
+
+# Not yet
+#BASH_FILES		:= sbin/kbmapid bin/kbmctl
+
+#
+# Configuration used by Makefile.smf.defs to generate "check" and "all" targets
+# for SMF manifest files.
+#
+SMF_MANIFESTS_IN	= smf/manifests/kbmapi.xml.in
+
+#
+# Makefile.defs defines variables used as part of the build process.
+#
+
+ifeq ($(shell uname -s),SunOS)
+	NODE_PREBUILT_VERSION =	v6.17.0
+	NODE_PREBUILT_IMAGE = c2c31b00-1d60-11e9-9a77-ff9f06554b0f
+	NODE_PREBUILT_TAG := zone64
+else
+	NPM=npm
+	NODE=node
+	NPM_EXEC=$(shell which npm)
+	NODE_EXEC=$(shell which node)
+endif
+
+ENGBLD_USE_BUILDIMAGE	= true
+ENGBLD_REQUIRE		:= $(shell git submodule update --init deps/eng)
+include ./deps/eng/tools/mk/Makefile.defs
+TOP ?= $(error Unable to access eng.git submodule Makefiles.)
+
+ifeq ($(shell uname -s),SunOS)
+	include ./deps/eng/tools/mk/Makefile.node_prebuilt.defs
+	include ./deps/eng/tools/mk/Makefile.agent_prebuilt.defs
+endif
+include ./deps/eng/tools/mk/Makefile.smf.defs
+
+ROOT		:= $(shell pwd)
+RELEASE_TARBALL	:= $(NAME)-pkg-$(STAMP).tar.gz
+RELSTAGEDIR	:= /tmp/$(NAME)-$(STAMP)
+
+# triton-origin-x86_64-18.4.0
+BASE_IMAGE_UUID = a9368831-958e-432d-a031-f8ce6768d190
+BUILDIMAGE_NAME = $(NAME)
+BUILDIMAGE_DESC = Triton Key Backup and Management
+AGENTS		= config registrar
+
+PATH		:= $(NODE_INSTALL)/bin:/opt/local/bin:${PATH}
+
+#
+# Repo-specific targets
+#
+.PHONY: all
+all: $(SMF_MANIFESTS) | $(NPM_EXEC) sdc-scripts
+	$(NPM) install
+
+$(ISTANBUL): | $(NPM_EXEC)
+	$(NPM) install
+
+$(FAUCET): | $(NPM_EXEC)
+	$(NPM) install
+
+CLEAN_FILES += ./node_modules/tape
+
+.PHONY: test
+test: $(ISTANBUL) $(FAUCET)
+	$(NODE) $(ISTANBUL) cover --print none test/unit/run.js | $(FAUCET)
+
+#
+# Packaging targets
+#
+
+# XXX: Add bash scripts to this once they're written
+.PHONY: release
+release: check all $(SMF_MANIFESTS)
+	@echo "Building $(RELEASE_TARBALL)"
+	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/kbmapi
+	@mkdir -p $(RELSTAGEDIR)/site
+	@touch $(RELSTAGEDIR)/site/.do-not-delete-me
+	cp -r $(ROOT)/server.js \
+		$(ROOT)/lib \
+		$(ROOT)/node_modules \
+		$(ROOT)/package.json \
+		$(ROOT)/sapi_manifests \
+		$(ROOT)/sbin \
+		$(ROOT)/smf \
+		$(ROOT)/test \
+		$(ROOT)/build \
+		$(RELSTAGEDIR)/root/opt/smartdc/kbmapi/
+	mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/boot
+	cp -R $(ROOT)/deps/sdc-scripts/* $(RELSTAGEDIR)/root/opt/smartdc/boot
+	cp -R $(ROOT)/boot/* $(RELSTAGEDIR)/root/opt/smartdc/boot
+	(cd $(RELSTAGEDIR) && $(TAR) -I pigz -cf $(ROOT)/$(RELEASE_TARBALL) root site)
+	@rm -rf $(RELSTAGEDIR)
+
+.PHONY: publish
+publish: release
+	@if [[ -z "$(ENGBLD_BITS_DIR)" ]]; then \
+	  echo "error: 'ENGBLD_BITS_DIR' must be set for 'publish' target"; \
+	  exit 1; \
+	fi
+	mkdir -p $(ENGBLD_BITS_DIR)/$(NAME)
+	cp $(ROOT)/$(RELEASE_TARBALL) $(ENGBLD_BITS_DIR)/$(NAME)/$(RELEASE_TARBALL)
+
+#
+# Target definitions.  This is where we include the target Makefiles for
+# the "defs" Makefiles we included above.
+#
+
+include ./deps/eng/tools/mk/Makefile.deps
+
+ifeq ($(shell uname -s),SunOS)
+	include ./deps/eng/tools/mk/Makefile.node_prebuilt.targ
+	include ./deps/eng/tools/mk/Makefile.agent_prebuilt.targ
+endif
+include ./deps/eng/tools/mk/Makefile.smf.targ
+include ./deps/eng/tools/mk/Makefile.targ
+
+sdc-scripts: deps/sdc-scripts/.git
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..2db790f
--- /dev/null
+++ b/README.md
@@ -0,0 +1,82 @@
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright (c) 2018, Joyent, Inc.
+-->
+
+# triton-kbmapi: An Earth-shattering key backup and management service
+
+    This repository is part of the Joyent Triton project. See the [contribution
+    guidelines](https://github.com/joyent/triton/blob/master/CONTRIBUTING.md) --
+    *Triton does not use GitHub PRs* -- and general documentation at the main
+    [Triton project](https://github.com/joyent/triton) page.
+
+## Development
+
+This is an incomplete work in progress of a proof of concept.  You have
+been warned.
+
+    make all
+
+## Test
+
+    make test
+
+## Installation
+
+To warn again, this is a work in progress prototype.  You should **not** attempt
+to install this on any Triton installation that you are not prepared to wipe
+(including all instances) and reinstall from scratch.  Nor should you use it
+to protect any data you care about at this time (it's still in development).
+You have been warned twice now!
+
+The easiest way is to upgrade sdcadm to an experimental image containing the
+KBMAPI install code:
+
+    sdcadm self-update -C experimental 4f792e1c-cd8f-11e8-b270-abdc411647b9
+
+NOTE: The sdcadm image UUID may change as updates are made to the KBMAPI update
+code, or as the KBMAPI branch is rebased from master.  I'll try to keep this
+updated with the last built image during the initial development.  Once we
+release this for real, it is expected the normal Triton update procedures
+should be all that's necessary.
+
+Then run the KBMAPI post-setup:
+
+    sdcadm post-setup kbmapi -C experimental
+
+That should grab that most recently built KBMAPI image.  Once that completes,
+you should have a kbmapi0 zone on your HN.
+
+## Updates
+
+You should be able to update using sdcadm:
+
+    sdcadm update -C experimental kbmapi
+
+## Uninstall
+
+Use this at your own risk!
+
+    scp tools/obliterate-kbmapi-service.sh headnode:/var/tmp
+    ssh headnode touch /lib/sdc/.sdc-test-no-production-data
+    ssh headnode /var/tmp/obliterate-kbmapi-service.sh
+
+## Documentation
+
+Docs would be nice... There's a basic description of the current API in docs/.
+That is _all_ subject to change, and should not be considered final at this time.
+
+To update the guidelines, edit "docs/index.md" and run `make docs`
+to update "docs/index.html". Works on either SmartOS or Mac OS X.
+
+
+## License
+
+"triton-kbmapi" is licensed under the
+[Mozilla Public License version 2.0](http://mozilla.org/MPL/2.0/).
+See the file LICENSE.
diff --git a/README.txt b/README.txt
deleted file mode 100644
index 20b84f8..0000000
--- a/README.txt
+++ /dev/null
@@ -1 +0,0 @@
-find earlier (not reviewed) history in orig-master branch
diff --git a/boot/configure.sh b/boot/configure.sh
new file mode 100755
index 0000000..085e193
--- /dev/null
+++ b/boot/configure.sh
@@ -0,0 +1,22 @@
+#!/bin/bash
+# -*- mode: shell-script; fill-column: 80; -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2018, Joyent, Inc.
+#
+
+export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+set -o xtrace
+
+echo "Importing kbmapi SMF manifest"
+/usr/sbin/svccfg import /opt/smartdc/kbmapi/smf/manifests/kbmapi.xml
+
+echo "Enabling kbmapi service"
+/usr/sbin/svcadm enable smartdc/application/kbmapi
+
+exit 0
diff --git a/boot/setup.sh b/boot/setup.sh
new file mode 100755
index 0000000..7fc186d
--- /dev/null
+++ b/boot/setup.sh
@@ -0,0 +1,47 @@
+#!/usr/bin/bash
+# -*- mode: shell-script; fill-column: 80; -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2018, Joyent, Inc.
+#
+
+export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+set -o xtrace
+
+PATH=/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin
+
+role=kbmapi
+CONFIG_AGENT_LOCAL_MANIFESTS_DIRS=/opt/smartdc/$role
+
+echo "Finishing setup of $role zone"
+
+# Include common utility functions (then run the boilerplate)
+source /opt/smartdc/boot/lib/util.sh
+sdc_common_setup
+
+# Cookie to identify this as a SmartDC zone and its role
+mkdir -p /var/smartdc/kbmapi
+
+# Add build/node/bin and node_modules/.bin to PATH
+echo "" >>/root/.profile
+echo "export PATH=\$PATH:/opt/smartdc/$role/node/bin:/opt/smartdc/$role/node_modules/.bin:/opt/smartdc/$role/bin" >>/root/.profile
+
+echo "Adding log rotation"
+#sdc_log_rotation_add amon-agent /var/svc/log/*amon-agent*.log 1g
+sdc_log_rotation_add config-agent /var/svc/log/*config-agent*.log 1g
+sdc_log_rotation_add registrar /var/svc/log/*registrar*.log 1g
+sdc_log_rotation_add $role /var/svc/log/*$role*.log 1g
+sdc_log_rotation_setup_end
+
+# Add metricsPorts metadata for cmon-agent discovery
+#mdata-put metricPorts 8881
+
+# All done, run boilerplate end-of-setup
+sdc_setup_complete
+
+exit 0
diff --git a/deps/eng b/deps/eng
new file mode 160000
index 0000000..d25b8fc
--- /dev/null
+++ b/deps/eng
@@ -0,0 +1 @@
+Subproject commit d25b8fc60fb8c649559924870fe3aaf75e7421d5
diff --git a/deps/javascriptlint b/deps/javascriptlint
new file mode 160000
index 0000000..ad52812
--- /dev/null
+++ b/deps/javascriptlint
@@ -0,0 +1 @@
+Subproject commit ad52812e77bdfb1e90fb71a1201adb2b665a27e6
diff --git a/deps/jsstyle b/deps/jsstyle
new file mode 160000
index 0000000..52dc973
--- /dev/null
+++ b/deps/jsstyle
@@ -0,0 +1 @@
+Subproject commit 52dc973cf64da11834eca7cf46ebce8518e3ee88
diff --git a/deps/restdown b/deps/restdown
new file mode 160000
index 0000000..1b833da
--- /dev/null
+++ b/deps/restdown
@@ -0,0 +1 @@
+Subproject commit 1b833da2199b08c3bc92ef16cf52b0b0d6e4c189
diff --git a/deps/sdc-scripts b/deps/sdc-scripts
new file mode 160000
index 0000000..deefaef
--- /dev/null
+++ b/deps/sdc-scripts
@@ -0,0 +1 @@
+Subproject commit deefaef587ed3bee2706cb6e53ee3468e682932e
diff --git a/docs/index.md b/docs/index.md
new file mode 100644
index 0000000..1d901f1
--- /dev/null
+++ b/docs/index.md
@@ -0,0 +1,51 @@
+title: Key Backup and Management API (KBMAPI)
+apisections: Usage
+markdown2extras: code-friendly
+---
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright 2018, Joyent, Inc.
+-->
+
+# Key Backup and Management API (KBMAPI)
+
+* The goal of this is to provide an API that will be used to manage the pivtokens on Triton compute nodes containing encrypted zpools.  The details are largely in RFD77 still.  This will be expanded more as time goes on (and flushed out more prior to this 'going live').
+
+The tl;dr is that when a CN boots, it will authenticate itself to KBMAPI, and then request the pin to unlock its local pivtoken.  Once unlocked, it can supply the zpool encryption key to allow it to be imported.  It should also at some point allow for recovery (i.e. replaced pivtoken).
+
+# Usage
+
+As this is still a work in progress, this is all subject to change with no notice.  Once 'live' changes will be treated like other Triton APIs in terms of backwards compatibility, breaking changes, etc.
+
+XXX Probably should include some sample JSON of what the token output looks like
+.
+
+## CreateToken (POST /pivtokens)
+
+Add a new PIV token.  Must include the `cn_uuid` field and likely some other fields.
+
+## ListTokens (GET /pivtokens)
+
+Gets all the known pivtokens.  The fields included in the response will only include the *public* fields (i.e. no pins).  Things like limit and offset
+for windowing will be supported, as well as filtering on things like `cn_uuid`.
+
+## GetToken (GET /pivtokens/:guid)
+
+Gets the public info for a given token.
+
+## GetTokenPin (GET /pivtokens/:guid/pin)
+
+Like GetToken, except it also includes the private fields (e.g. the pin).  This will require authentication using the 9e public key of the token.  Probably something similar to other APIs where it will sign something we provide with it's 93 key.
+
+## DeleteToken (DELETE /pivtokens/:guid)
+
+Deletes information about a pivtoken -- will probably need more thought as to when this can happen and what sort of auth is required (if we even keep this).
+
+## More stuff..
+
+Probably some endpoints around key recovery...
diff --git a/lib/apis/moray.js b/lib/apis/moray.js
new file mode 100644
index 0000000..e22dcf8
--- /dev/null
+++ b/lib/apis/moray.js
@@ -0,0 +1,453 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
+/*
+ * Moray API convenience wrappers
+ */
+
+'use strict';
+
+var assert = require('assert-plus');
+var constants = require('../util/constants');
+var clone = require('clone');
+var jsprim = require('jsprim');
+var restify = require('restify');
+var util = require('util');
+var VError = require('verror');
+
+
+
+// --- Globals
+
+
+
+// Allow setting this to prefix all created buckets (generally used for
+// testing):
+var BUCKET_PFX = '';
+
+
+
+// --- Exports
+
+
+
+/**
+ * Return a bucket name based on BUCKET_PFX
+ */
+function bucketName(name) {
+    return BUCKET_PFX + name;
+}
+
+
+/**
+ * Creates an LDAP filter based on the parmeters in inObj, only allowing
+ * searching by indexes in bucket.schema.index
+ *
+ * @param inObj {Object}
+ * @param bucket {Bucket schema object}
+ */
+function ldapFilter(inObj, bucket) {
+    if (!inObj) {
+        return '';
+    }
+
+    if (typeof (inObj) === 'string') {
+        return inObj;
+    }
+
+    if (jsprim.isEmpty(inObj)) {
+        return '';
+    }
+
+    if (inObj.hasOwnProperty('filter') && typeof (inObj.filter === 'string')) {
+        return inObj.filter;
+    }
+
+    var filterBy = Object.keys(inObj).reduce(function (arr, i) {
+        if (bucket && !bucket.schema.index.hasOwnProperty(i)) {
+            // XXX: should error out here if trying to search by a non-indexed
+            // property
+            return arr;
+        }
+
+        // Comma-separated values: turn them into a list
+        if (typeof (inObj[i]) === 'string' &&
+            inObj[i].indexOf(',') !== -1) {
+            /* JSSTYLED */
+            inObj[i] = inObj[i].split(/\s*,\s*/);
+        }
+
+        if (typeof (inObj[i]) === 'object') {
+            arr.push('(|');
+            for (var j in inObj[i]) {
+                if (typeof (inObj[i][j]) === 'number') {
+                    arr.push(util.format('(%s=%d)', i, inObj[i][j]));
+                } else {
+                    // XXX: allow this outside of arrays?
+                    if (inObj[i][j].substr(0, 1) === '!') {
+                        arr.push(util.format('(!(%s=%s))', i,
+                            inObj[i][j].substr(1)));
+                    } else {
+                        arr.push(util.format('(%s=%s)', i, inObj[i][j]));
+                    }
+                }
+            }
+            arr.push(')');
+        } else if (typeof (inObj[i]) === 'boolean') {
+            if (inObj[i]) {
+                arr.push(util.format('(%s=true)', i));
+            } else {
+                arr.push(util.format('(!(%s=true))', i));
+            }
+        } else {
+            arr.push(util.format('(%s=%s)', i, inObj[i]));
+        }
+
+        return arr;
+    }, []);
+
+    if (filterBy.length > 1) {
+        filterBy.unshift('(&');
+        filterBy.push(')');
+    }
+
+    return filterBy.join('');
+}
+
+
+/**
+ * Initializes a bucket in moray
+ *
+ * @param moray {MorayClient}
+ * @param bucket {Bucket schema object}
+ * @param callback {Function} `function (err, netObj)`
+ */
+function initBucket(moray, bucket, callback) {
+    assert.object(moray, 'moray');
+    assert.object(bucket, 'bucket');
+    assert.string(bucket.desc, 'bucket.desc');
+    assert.string(bucket.name, 'bucket.name');
+    assert.object(bucket.schema, 'bucket.schema');
+
+    var name = bucket.name;
+    var schema = clone(bucket.schema);
+
+    /*
+     * If we have a bucket prefix set and this is the first time looking at this
+     * bucket config, then update it to use the prefixed version so that any
+     * consumers in its model will use the correct prefixed name.
+     */
+    if (BUCKET_PFX !== '' && !bucket.name_prefixed) {
+        name = bucketName(bucket.name);
+
+        moray.log.warn({ oldBucketName: bucket.name, newBucketName: name },
+            'initBucket: bucket prefix set: overriding name');
+
+        bucket.name = name;
+        bucket.name_prefixed = true;
+    }
+
+    moray.getBucket(name, function (err, prevBucket) {
+        if (err) {
+            if (VError.hasCauseWithName(err, 'BucketNotFoundError')) {
+                // If this is a new creation and we have a bucket
+                // version, use it, since we don't need to migrate.
+                if (bucket.hasOwnProperty('version')) {
+                    schema.options = { version: bucket.version };
+                }
+
+                moray.log.info({ schema: schema, bucketName: name },
+                    'initBucket: creating bucket');
+
+                return moray.createBucket(name, schema,
+                    function (err2, res) {
+                        if (err2) {
+                            moray.log.error(err2,
+                                'initBucket: error creating bucket %s',
+                                name);
+                        } else {
+                            moray.log.info({ schema: schema },
+                                'initBucket: successfully created bucket %s',
+                                name);
+                        }
+
+                        return callback(err2, res);
+                });
+            }
+
+            moray.log.error(err, 'initBucket: error getting bucket %s',
+                name);
+            return callback(err);
+        }
+
+        moray.log.debug({ bucket: prevBucket }, 'bucket exists');
+
+        return callback();
+    });
+}
+
+
+/**
+ * Deletes an object from moray
+ *
+ * @param moray {MorayClient}
+ * @param bucket {Bucket schema object}
+ * @param key {String}
+ * @param callback {Function} `function (err, netObj)`
+ */
+function delObj(moray, bucket, key, callback) {
+    moray.delObject(bucket.name, key, function (err) {
+        if (err && VError.hasCauseWithName(err, 'ObjectNotFoundError')) {
+            return callback(new restify.ResourceNotFoundError(err,
+                '%s not found', bucket.desc));
+        }
+
+        return callback(err);
+    });
+}
+
+
+/**
+ * Gets an object from moray
+ *
+ * @param moray {MorayClient}
+ * @param bucket {Bucket schema object}
+ * @param key {String}
+ * @param callback {Function} `function (err, netObj)`
+ */
+function getObj(moray, bucket, key, callback) {
+    moray.getObject(bucket.name, key, function (err, res) {
+        if (err) {
+            if (VError.hasCauseWithName(err, 'ObjectNotFoundError')) {
+                return callback(new restify.ResourceNotFoundError(err,
+                    '%s not found', bucket.desc));
+            }
+
+            return callback(err);
+        }
+
+        return callback(null, res);
+    });
+}
+
+
+/**
+ * Puts an object into Moray, using its current etag, and updating it with
+ * the new one afterwards.
+ *
+ * @param moray {MorayClient}
+ * @param bucket {Bucket schema object}
+ * @param obj {Object}
+ * @param callback {Function} `function (err, obj)`
+ */
+function putObj(moray, bucket, obj, callback) {
+    assert.object(moray, 'moray');
+    assert.object(bucket, 'bucket');
+    assert.object(obj, 'obj');
+    assert.func(callback, 'callback');
+
+    moray.putObject(bucket.name, obj.key(), obj.raw(), {
+        etag: obj.etag
+    }, function (err, res) {
+        if (err) {
+            callback(err);
+            return;
+        }
+
+        obj.etag = res.etag;
+
+        callback(null, obj);
+    });
+}
+
+
+/**
+ * Lists objects in moray
+ *
+ * @param opts {Object}
+ * - `bucket` {Bucket schema object}
+ * - `filter` {String}
+ * - `limit` {Integer}
+ * - `log` {Bunyan Logger}
+ * - `offset` {Integer}
+ * - `moray` {MorayClient}
+ * - `sort` {Object} (optional)
+ * - `model` {Object} (optional)
+ * - `noBucketCache` {Boolean} (optional)
+ * - `extra` {Object} (optional) extra params to pass to constructor
+ * @param callback {Function} `function (err, netObj)`
+ */
+function listObjs(opts, callback) {
+    var listOpts = {};
+    var results = [];
+
+    if (opts.sort) {
+        listOpts.sort = opts.sort;
+    }
+
+    assert.optionalNumber(opts.limit);
+    if (opts.limit) {
+        listOpts.limit = opts.limit;
+    } else {
+        listOpts.limit = constants.DEFAULT_LIMIT;
+    }
+
+    assert.optionalNumber(opts.offset);
+    if (opts.offset) {
+        listOpts.offset = opts.offset;
+    } else {
+        listOpts.offset = constants.DEFAULT_OFFSET;
+    }
+
+    if (opts.noBucketCache) {
+        listOpts.noBucketCache = true;
+    }
+
+    var filter = ldapFilter(opts.filter, opts.bucket) || opts.defaultFilter;
+    opts.log.debug({ params: opts.filter }, 'LDAP filter: "%s"', filter);
+
+    var req = opts.moray.findObjects(opts.bucket.name,
+        filter, listOpts);
+
+    req.on('error', function _onListErr(err) {
+        return callback(err);
+    });
+
+    req.on('record', function _onListRec(rec) {
+        opts.log.debug({ record: rec }, 'record from moray');
+        rec.value.etag = rec._etag;
+        if (opts.model) {
+            if (opts.extra) {
+                Object.keys(opts.extra).forEach(function (k) {
+                    rec.value[k] = opts.extra[k];
+                });
+            }
+            results.push(new opts.model(rec.value));
+        } else {
+            results.push(rec);
+        }
+    });
+
+    req.on('end', function _endList() {
+        return callback(null, results);
+    });
+}
+
+
+/**
+ * Set the bucket prefix to point at the test versions of the buckets
+ */
+function setTestPrefix(pfx) {
+    BUCKET_PFX = pfx;
+}
+
+
+/**
+ * Updates an object in moray
+ *
+ * @param opts {Object}
+ * - `moray` {MorayClient}
+ * - `bucket` {Bucket schema object}
+ * - `key` {String} : bucket key to update
+ * - `original` {Object}: The original value stored in Moray
+ * - `etag` {String}: The etag for the original Moray object
+ * - `remove` {Boolean} : remove all keys in val from the object (optional)
+ * - `val` {Object} : keys to update in the object
+ * @param callback {Function} `function (err, netObj)`
+ */
+function updateObj(opts, callback) {
+    assert.object(opts, 'opts');
+    assert.object(opts.original, 'opts.original');
+    assert.string(opts.etag, 'opts.etag');
+    assert.object(opts.val, 'opts.val');
+    assert.func(callback, 'callback');
+
+    var value = jsprim.deepCopy(opts.original);
+    for (var k in opts.val) {
+        if (opts.remove) {
+            delete value[k];
+        } else {
+            value[k] = opts.val[k];
+        }
+    }
+
+    opts.moray.putObject(opts.bucket.name, opts.key, value, {
+        etag: opts.etag
+    }, function (pErr, info) {
+        if (pErr) {
+            callback(pErr);
+            return;
+        }
+
+        value.etag = info.etag;
+
+        callback(null, { value: value });
+    });
+}
+
+
+/**
+ * Converts an array to a scalar value suitable for indexed fields in
+ * moray, since array types can't be indexed on properly.
+ */
+function arrayToVal(arr) {
+    return ',' + arr.join(',') + ',';
+}
+
+
+function arrayify(obj) {
+    if (typeof (obj) === 'object') {
+        return obj;
+    }
+
+    if (obj === '') {
+        return [];
+    }
+
+    return obj.split(',');
+}
+
+/**
+ * Converts an moray indexed array value as returned by arraytoVal() to a
+ * real array object.
+ */
+function valToArray(params, key) {
+    if (!params.hasOwnProperty(key)) {
+        return;
+    }
+
+    if (typeof (params[key]) === 'object') {
+        return;
+    }
+
+    if (params[key] === ',,') {
+        delete params[key];
+        return;
+    }
+    params[key] =
+        /* JSSTYLED */
+        arrayify(params[key].replace(/^,/, '').replace(/,$/, ''));
+}
+
+
+
+module.exports = {
+    arrayToVal: arrayToVal,
+    bucketName: bucketName,
+    delObj: delObj,
+    filter: ldapFilter,
+    getObj: getObj,
+    putObj: putObj,
+    initBucket: initBucket,
+    listObjs: listObjs,
+    setTestPrefix: setTestPrefix,
+    updateObj: updateObj,
+    valToArray: valToArray
+};
diff --git a/lib/app.js b/lib/app.js
new file mode 100644
index 0000000..3dc34bd
--- /dev/null
+++ b/lib/app.js
@@ -0,0 +1,324 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2017, Joyent, Inc.
+ */
+
+'use strict';
+
+var assert = require('assert-plus');
+var endpoints = require('./endpoints');
+var http = require('http');
+var https = require('https');
+var models = require('./models');
+var mod_apis_moray = require('./apis/moray');
+var mod_config = require('./config');
+var mod_jsprim = require('jsprim');
+var mod_mooremachine = require('mooremachine');
+var moray = require('moray');
+var os = require('os');
+var restify = require('restify');
+var trace_event = require('trace-event');
+var util = require('util');
+var VError = require('verror');
+
+// Globals
+var USAGE_PERIOD = 8 * 60 * 60 * 1000; // 8 hours
+var PKG = require('../package.json');
+var request_seq_id = 0;
+
+
+// --- Internal functions
+
+
+function periodicUsageLog(log) {
+    log.info({ memory: process.memoryUsage() },
+        'Current memory usage');
+}
+
+
+// --- KBMAPI object and methods
+
+
+
+/**
+ * KBMAPI constructor
+ */
+function KBMAPI(opts) {
+    var self = this;
+    this.log = opts.log;
+    this.config = opts.config;
+
+    if (opts.config.bucketPrefix) {
+        mod_apis_moray.setTestPrefix(
+            opts.config.bucketPrefix.replace(/-/g, '_'));
+    }
+
+    var maxSockets = opts.config.maxHttpSockets || 100;
+    opts.log.debug('Setting maxSockets to %d', maxSockets);
+    http.globalAgent.maxSockets = maxSockets;
+    https.globalAgent.maxSockets = maxSockets;
+
+    function populateReq(req, res, next) {
+        req.config = opts.config;
+        req.app = self;
+        next();
+    }
+
+    function checkServices(req, res, next) {
+        if (!req.app.isInState('running')) {
+            next(new restify.ServiceUnavailableError(
+                'Server is still initializing'));
+            return;
+        }
+
+        next();
+    }
+
+    var before = [ populateReq, checkServices ];
+    var server = this.server = restify.createServer({
+        log: opts.log,
+        name: PKG.description,
+        handleUncaughtExceptions: false,
+        version: PKG.version
+    });
+
+    server.use(restify.requestLogger());
+    var EVT_SKIP_ROUTES = {
+        'getping': true,
+        'headping': true
+    };
+    server.use(function initTrace(req, res, next) {
+        req.trace = trace_event.createBunyanTracer({
+            log: req.log
+        });
+        if (req.route && !EVT_SKIP_ROUTES[req.route.name]) {
+            request_seq_id = (request_seq_id + 1) % 1000;
+            req.trace.seq_id = (req.time() * 1000) + request_seq_id;
+            req.trace.begin({
+                name: req.route.name,
+                req_seq: req.trace.seq_id
+            });
+        }
+        next();
+    });
+
+    server.use(function addTrace(req, res, next) {
+        res.on('header', function onHeader() {
+            var now = Date.now();
+            req.header('Date', new Date());
+            req.header('Server', server.name);
+            req.header('x-request-id', req.getId());
+            var t = now - req.time();
+            res.header('x-response-time', t);
+            res.header('x-server-name', os.hostname());
+        });
+        next();
+    });
+
+    server.use(restify.acceptParser(server.acceptable));
+    server.use(restify.queryParser());
+    server.use(restify.bodyParser());
+
+    server.on('after', function (req, res, route, _err) {
+        if (route && !EVT_SKIP_ROUTES[route.name]) {
+            req.trace.end({ name: route.name, req_seq: req.trace.seq_id });
+        }
+    });
+
+    endpoints.registerEndpoints(server, before);
+    mod_mooremachine.FSM.call(this, 'waiting');
+}
+
+util.inherits(KBMAPI, mod_mooremachine.FSM);
+
+/**
+ * Starts the server
+ */
+KBMAPI.prototype.start = function start(callback) {
+    this.server.on('error', callback);
+    this.server.listen(this.config.port, callback);
+
+    this.emit('startAsserted');
+};
+
+/**
+ * Stops the server
+ */
+KBMAPI.prototype.stop = function stop(callback) {
+    assert.ok(this.isInState('running'));
+    this.emit('stopAsserted', callback);
+};
+
+/**
+ * Returns conneciton info for the server
+ */
+KBMAPI.prototype.info = function info() {
+    if (!this.server) {
+        return {};
+    }
+
+    return {
+        name: this.server.name,
+        port: this.config.port,
+        url: this.server.url
+    };
+};
+
+KBMAPI.prototype.state_waiting = function (S) {
+    S.validTransitions(['init']);
+
+    S.on(this, 'startAsserted', function () {
+        S.gotoState('init');
+    });
+};
+
+KBMAPI.prototype.state_init = function (S) {
+    S.gotoState('init.memlogger');
+};
+
+KBMAPI.prototype.state_init.memlogger = function (S) {
+    this.log.info({ period: USAGE_PERIOD },
+        'Starting periodic logging of memory usage');
+    this.usageTimer = setInterval(periodicUsageLog, USAGE_PERIOD, this.log);
+    S.gotoState('init.moray');
+};
+
+KBMAPI.prototype.state_init.moray = function (S) {
+    var self = this;
+
+    S.validTransitions([ 'init.buckets', 'failed' ]);
+
+    if (self.moray) {
+        S.gotoState('init.buckets');
+        return;
+    }
+
+    var conf = mod_jsprim.deepCopy(self.config.moray);
+
+    self.log.debug(conf, 'Creating moray client');
+
+    conf.log = self.log.child({
+        component: 'moray',
+        level: self.config.moray.logLevel || 'info'
+    });
+
+    self.moray = moray.createClient(conf);
+
+    S.on(self.moray, 'connect', function onMorayConnect() {
+        self.log.info('moray: connected');
+        S.gotoState('init.buckets');
+    });
+
+    S.on(self.moray, 'error', function onMorayError(err) {
+        self.initErr = new VError(err, 'moray: connection failed');
+        S.gotoState('failed');
+    });
+};
+
+KBMAPI.prototype.state_init.buckets = function (S) {
+    var self = this;
+
+    S.validTransitions([ 'init.buckets', 'running' ]);
+
+    self.morayVersion = 2;
+
+    models.init(self, function (err) {
+        if (err) {
+            self.log.error(err, 'Error initializing models; retrying in 10s');
+            S.timeout(10000, function () {
+                S.gotoState('init.buckets');
+            });
+            return;
+        }
+
+        S.gotoState('running');
+    });
+};
+
+KBMAPI.prototype.state_running = function (S) {
+    var self = this;
+
+    S.validTransitions([ 'stopping' ]);
+
+    S.on(self, 'stopAsserted', function (callback) {
+        self.stopcb = callback;
+        S.gotoState('stopping');
+    });
+
+    S.immediate(function () {
+        self.emit('initialized');
+    });
+};
+
+KBMAPI.prototype.state_failed = function (S) {
+    var self = this;
+
+    S.validTransitions([]);
+
+    self._cleanup(function () {
+        self.emit('error', self.initErr);
+    });
+};
+
+KBMAPI.prototype.state_stopping = function (S) {
+    var self = this;
+
+    S.validTransitions([ 'stopped' ]);
+
+    self._cleanup(function cleanupCb(err) {
+        self.stoperr = err;
+        S.gotoState('stopped');
+    });
+};
+
+KBMAPI.prototype.state_stopped = function (S) {
+    S.validTransitions([]);
+    setImmediate(this.stopcb, this.stoperr);
+};
+
+KBMAPI.prototype._cleanup = function (callback) {
+    var self = this;
+
+    if (self.moray) {
+        self.moray.close();
+    }
+
+    if (self.usageTimer) {
+        clearInterval(self.usageTimer);
+        self.usageTimer = null;
+    }
+
+    if (callback) {
+        callback();
+        return;
+    }
+};
+
+function createServer(opts) {
+    assert.object(opts, 'opts');
+    assert.object(opts.log, 'opts.log');
+    assert.string(opts.configFile, 'opts.configFile');
+
+    opts.log.info('Loading config from "%s"', opts.configFile);
+    var config = mod_config.load(opts.configFile);
+
+    if (config.hasOwnProperty('loglevel')) {
+        opts.log.info('Setting log level to "%s"', config.logLevel);
+        opts.log.level(config.logLevel);
+    }
+
+    return new KBMAPI({
+        log: opts.log,
+        config: config
+    });
+}
+
+module.exports = {
+    createServer: createServer,
+    KBMAPI: KBMAPI
+};
diff --git a/lib/config.js b/lib/config.js
new file mode 100644
index 0000000..ad34a56
--- /dev/null
+++ b/lib/config.js
@@ -0,0 +1,42 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+'use strict';
+
+var assert = require('assert-plus');
+var fs = require('fs');
+
+function validateConfig(config) {
+    assert.optionalNumber(config.maxHttpSockets,
+        'maxHttpSockets (maximum open connections)');
+    assert.number(config.port, 'port (port number)');
+
+    assert.object(config.moray, 'moray (moray config section)');
+    if (config.moray.host) {
+        assert.string(config.moray.host, 'moray.host');
+        assert.number(config.moray.port, 'moray.port');
+    } else {
+        assert.string(config.moray.srvDomain, 'moray.srvDomain');
+        assert.object(config.moray.cueballOptions, 'moray.cueballOptions');
+    }
+}
+
+function loadConfig(configFile) {
+    assert.string(configFile, 'configFile');
+    var config = JSON.parse(fs.readFileSync(configFile, 'utf-8'));
+    validateConfig(config);
+
+    return config;
+}
+
+module.exports = {
+    load: loadConfig,
+    validate: validateConfig
+};
diff --git a/lib/endpoints.js b/lib/endpoints.js
new file mode 100644
index 0000000..510c2e9
--- /dev/null
+++ b/lib/endpoints.js
@@ -0,0 +1,136 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * The kbmapi endpoints
+ */
+
+'use strict';
+
+var mod_token = require('./models/token');
+var restify = require('restify');
+
+/**
+ * GET /pivtokens: List all tokens
+ */
+function listTokens(req, res, next) {
+    mod_token.list(req.app, req.log, req.params,
+        function listTokenCb(err, tokens) {
+        if (err) {
+            next(err);
+            return;
+        }
+
+        var serialized = [];
+        for (var t in tokens) {
+            serialized.push(tokens[t].serialize());
+        }
+
+        res.send(200, serialized);
+        next();
+        return;
+    });
+}
+
+/**
+ * GET /pivtokens/:guid: get a specific token
+ */
+function getToken(req, res, next) {
+    mod_token.get(req.app, req.log, req.params,
+        function getTokenCb(err, token) {
+        if (err) {
+            next(err);
+            return;
+        }
+
+        if (!token) {
+            next(new restify.ResourceNotFoundError('token not found'));
+            return;
+        }
+
+        res.send(200, token.serialize());
+        next();
+        return;
+    });
+}
+
+/**
+ * GET /pivtokens/:guid/pin: get the pin for a specific token
+ */
+function getTokenPin(req, res, next) {
+    mod_token.getPin(req.app, req.log, req.params,
+        function getTokenPinCb(err, token) {
+        if (err) {
+            next(err);
+            return;
+        }
+
+        if (!token) {
+            next(new restify.ResourceNotFoundError('token not found'));
+            return;
+        }
+
+        res.send(200, token.serialize());
+        next();
+        return;
+    });
+}
+
+/**
+ * POST /pivtokens: Add a new token
+ */
+function createToken(req, res, next) {
+    mod_token.create(req.app, req.log, req.params, function (err, token) {
+        if (err) {
+            next(err);
+            return;
+        }
+
+        res.send(200, token.serialize());
+        next();
+        return;
+    });
+}
+
+/**
+ * DELETE /pivtokens/:guid: delete a token
+ * XXX: Might not be needed, but for POC at least it's there
+ */
+function deleteToken(req, res, next) {
+    mod_token.del(req.app, req.log, req.params, function delTokenCb(err) {
+        if (err) {
+            next(err);
+            return;
+        }
+
+        res.send(204);
+        next();
+        return;
+    });
+}
+
+// XXX: Should we also have a PUT /pivtokens for updates (additional keys?)
+
+function register(http, before) {
+    http.get({ path: '/pivtokens', name: 'listtokens' },
+        before, listTokens);
+    http.post({ path: '/pivtokens', name: 'createtoken' },
+        before, createToken);
+    http.get({ path: '/pivtokens/:guid', name: 'gettoken' },
+        before, getToken);
+    http.del({ path: '/pivtokens/:guid', name: 'deltoken' },
+        before, deleteToken);
+    http.get({ path: '/pivtokens/:guid/pin', name: 'gettokenpin' },
+        before, getTokenPin);
+}
+
+module.exports = {
+    registerEndpoints: register
+};
diff --git a/lib/models/index.js b/lib/models/index.js
new file mode 100644
index 0000000..0413023
--- /dev/null
+++ b/lib/models/index.js
@@ -0,0 +1,44 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * Handles initializing all models
+ */
+
+'use strict';
+
+var mod_token = require('./token');
+var vasync = require('vasync');
+
+function initializeModels(app, callback) {
+    // Probably a bit overkill, but hopefully makes it a bit easier to
+    // add additional models as necessary
+    vasync.forEachParallel({
+        inputs: [
+            mod_token
+        ],
+        func: function _initModel(mod, cb) {
+            mod.init(app, cb);
+        }
+    }, callback);
+}
+
+module.exports = {
+    init: initializeModels,
+
+    token: mod_token,
+
+    models: [
+        {
+            constructor: mod_token.Token,
+            bucket: mod_token.bucket()
+        }
+    ]
+};
diff --git a/lib/models/token.js b/lib/models/token.js
new file mode 100644
index 0000000..42abb38
--- /dev/null
+++ b/lib/models/token.js
@@ -0,0 +1,358 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+'use strict';
+
+var mod_moray = require('../apis/moray');
+var validate = require('../util/validate');
+// Punt on updating for the moment
+// var vasync = require('vasync');
+
+// The assumption is that a token can only be associated with a single server
+// however it seems possible (at least for now) that there might be multiple
+// tokens on a given server.
+var BUCKET = {
+    desc: 'piv tokens',
+    name: 'kbmapi_piv_token',
+    schema: {
+        index: {
+            guid: { type: 'string', unique: true },
+            cn_uuid: { type: 'uuid' },
+            serial: { type: 'string', unique: true }
+        }
+    },
+    version: 0
+};
+
+// Names that are allowed to be used in the fields filter
+var VALID_FIELDS = [
+    'guid',
+    'cn_uuid',
+    'serial',
+    'model',
+    'attestation'
+];
+
+// Fields that are removed from GET /pivtoken/:guid requests (but left
+// in in GET /pivtoken/:guid/pin
+// XXX Might it be better to instead explicitly list the public fields
+// and assume everything else is private?
+var SENSITIVE_FIELDS = [
+    'pin'
+];
+
+var CREATE_SCHEMA = {
+    required: {
+        guid: validate.GUID,
+        cn_uuid: validate.UUID,
+        serial: validate.string, // XXX Or are these guaranteed to be a number?
+        model: validate.string // XXX Could this be optional?
+    }
+};
+
+var GET_SCHEMA = {
+    required: {
+        guid: validate.GUID
+    }
+};
+
+var DELETE_SCHEMA = {
+    required: {
+        guid: validate.GUID
+    }
+};
+
+var LIST_SCHEMA = {
+    optional: {
+        fields: validate.fieldsArray(VALID_FIELDS),
+        offset: validate.offset,
+        limit: validate.limit
+    }
+};
+
+// var UPDATE_SCHEMA = {
+//     required: {
+//         guid: validate.GUID
+//     },
+// };
+
+function stripSensitiveFields(token) {
+    SENSITIVE_FIELDS.forEach(function stripField(f) {
+        delete token.params[f];
+    });
+}
+
+/**
+ * Token model constructor
+ */
+function Token(params) {
+    this.params = {
+        guid: params.guid,
+        cn_uuid: params.cn_uuid,
+        pubkeys: params.pubkeys,
+        recovery_token: params.recovery_token,
+        model: params.model,
+        serial: params.serial,
+        attestation: params.attestation,
+        pin: params.pin
+    };
+}
+
+// XXX I'm assuming both of these should be read-only after creation
+Object.defineProperty(Token.prototype, 'guid', {
+    get: function getGuid() { return this.params.guid; }
+});
+
+Object.defineProperty(Token.prototype, 'serial', {
+    get: function getSerial() { return this.params.serial; }
+});
+
+/**
+ * Returns the moray key for storing this Token object
+ */
+Token.prototype.key = function tokenKey() {
+    return this.params.guid;
+};
+
+Token.prototype.batch = function tokenBatch() {
+    return {
+        bucket: BUCKET.name,
+        key: this.params.guid,
+        operation: 'put',
+        value: this.raw(),
+        options: {
+            etag: this.etag
+        }
+    };
+};
+
+Token.prototype.delBatch = function tokenDelBatch() {
+    var batchObj = {
+        bucket: BUCKET.name,
+        key: this.guid,
+        operation: 'delete'
+    };
+
+    if (this.params.oldguid) {
+        batchObj.key = this.params.oldguid;
+    }
+
+    return batchObj;
+};
+
+Token.prototype.raw = function tokenRaw() {
+    return {
+        guid: this.params.guid,
+        cn_uuid: this.params.cn_uuid,
+        pubkeys: this.params.pubkeys,
+        recovery_token: this.params.recovery_token,
+        model: this.params.model,
+        serial: this.params.serial,
+        attestation: this.params.attestation,
+        pin: this.params.pin,
+        v: BUCKET.version
+    };
+};
+
+Token.prototype.serialize = function tokenSerialize() {
+    return {
+        guid: this.params.guid,
+        cn_uuid: this.params.cn_uuid,
+        pubkeys: this.params.pubkeys,
+        recovery_token: this.params.recovery_token,
+        model: this.params.model,
+        serial: this.params.serial,
+        attestation: this.params.attestation,
+        pin: this.params.pin
+    };
+};
+
+function createToken(app, log, params, callback) {
+    log.debug({ params: params }, 'createToken: entry');
+
+    var copts = {
+        app: app,
+        log: log
+    };
+
+    validate.params(CREATE_SCHEMA, copts, params,
+        function validateCreateTokenCb(err) {
+        if (err) {
+            callback(err);
+            return;
+        }
+
+        var token = new Token(params);
+        mod_moray.putObj(app.moray, BUCKET, token,
+            function morayPutTokenCb(pErr) {
+            if (pErr) {
+                callback(pErr);
+                return;
+            }
+
+            callback(null, token);
+        });
+    });
+}
+
+function deleteToken(app, log, params, callback) {
+    log.debug(params, 'deleteToken: entry');
+
+    var dopts = {
+        app: app,
+        log: log
+    };
+
+    validate.params(DELETE_SCHEMA, dopts, params, function deleteTokenCb(err) {
+        if (err) {
+            callback(err);
+            return;
+        }
+
+        app.moray.delObject(BUCKET.name, params.guid, callback);
+    });
+}
+
+function listTokens(app, log, oparams, callback) {
+    log.debug({ params: oparams }, 'listTokens: entry');
+
+    validate.params(LIST_SCHEMA, null, oparams,
+        function listTokensValidateCb(err, validated) {
+            if (err) {
+                callback(err);
+                return;
+            }
+
+            var lim, off;
+
+            if (validated.hasOwnProperty('limit')) {
+                lim = validated.limit;
+                delete validated.limit;
+            }
+
+            if (validated.hasOwnProperty('offset')) {
+                off = validated.offset;
+                delete validated.offset;
+            }
+
+            mod_moray.listObjs({
+                defaultFilter: '(guid=*)',
+                filter: validated,
+                limit: lim,
+                log: log,
+                offset: off,
+                bucket: BUCKET,
+                model: Token,
+                moray: app.moray,
+                sort: {
+                    attribute: 'guid',
+                    order: 'ASC'
+                }
+            }, function listTokensMorayCb(mErr, tokens) {
+                if (mErr) {
+                    callback(mErr);
+                    return;
+                }
+
+                tokens.forEach(function stripPin(token) {
+                    stripSensitiveFields(token);
+                });
+
+                callback(null, tokens);
+            });
+        });
+}
+
+function _getTokenImpl(app, params, removeFields, callback) {
+    validate.params(GET_SCHEMA, null, params, function getTokenValidateCb(err) {
+        if (err) {
+            callback(err);
+            return;
+        }
+
+        mod_moray.getObj(app.moray, BUCKET, params.guid,
+            function getTokenMorayCb(mErr, token) {
+                if (mErr) {
+                    callback(mErr);
+                    return;
+                }
+
+                // Cheesy, but for the prototype just delete the pin unless
+                // GET /pivtoken/:guid/pin has been called
+                var tokenObj = new Token(token.value);
+
+                if (removeFields) {
+                    stripSensitiveFields(tokenObj);
+                }
+
+                callback(null, tokenObj);
+                return;
+            });
+    });
+}
+
+function getToken(app, log, params, callback) {
+    log.debug(params, 'getToken: entry');
+    _getTokenImpl(app, params, true, callback);
+}
+
+function getTokenPin(app, log, params, callback) {
+    log.debug(params, 'getTokenPin: entry');
+    _getTokenImpl(app, params, false, callback);
+}
+
+function initTokenBucket(app, cb) {
+    mod_moray.initBucket(app.moray, BUCKET, cb);
+}
+
+// XXX I really don't know if it does make sense to allow for the updating
+// of public keys on a token after addition.  Presumably this would be
+// an authenticated operation once that piece is in place.
+
+// function updateToken(app, log, params, callback) {
+//     log.debug(params, 'updateToken: entry');
+//     var validatedParams;
+//
+//     var opts = {
+//         app: app,
+//         log: log
+//     };
+//
+//     vasync.pipeline({
+//         funcs: [
+//             function _validateUpdate(_, cb) {
+//                 validate.params(UPDATE_SCHEMA, opts, params,
+//                     function updateTokenValidateCb(err, parsed) {
+//                         if (err) {
+//                             cb(err);
+//                             return;
+//                         }
+//                         validatedParams = parsed;
+//                         cb();
+//                         return;
+//                     });
+//             },
+//             function _getOldToken(_, cb) {
+//
+//             }
+//         }]
+//     })
+// }
+
+module.exports = {
+    bucket: function () { return BUCKET; },
+    create: createToken,
+    del: deleteToken,
+    Token: Token,
+    get: getToken,
+    getPin: getTokenPin,
+    init: initTokenBucket,
+    list: listTokens
+};
diff --git a/lib/util/constants.js b/lib/util/constants.js
new file mode 100644
index 0000000..3511d05
--- /dev/null
+++ b/lib/util/constants.js
@@ -0,0 +1,20 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
+/*
+ * Shared constants
+ */
+
+'use strict';
+
+module.exports = {
+    DEFAULT_LIMIT: 1000,
+    DEFAULT_OFFSET: 0
+};
diff --git a/lib/util/errors.js b/lib/util/errors.js
new file mode 100644
index 0000000..39d947d
--- /dev/null
+++ b/lib/util/errors.js
@@ -0,0 +1,262 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * Error classes and helpers
+ */
+
+'use strict';
+
+var assert = require('assert-plus');
+var constants = require('./constants');
+var restify = require('restify');
+var util = require('util');
+
+
+
+// --- Globals
+
+
+
+var MSG = {
+    duplicate: 'Already exists',
+    internal: 'Internal error',
+    missingParam: 'Missing parameter',
+    missingParams: 'Missing parameters'
+};
+
+
+
+// --- Error classes
+
+
+
+/**
+ * Base class for an internal server error
+ */
+function InternalError(cause, message) {
+    assert.object(cause, 'cause');
+    assert.optionalString(message, 'message');
+
+    if (!message) {
+        message = MSG.internal;
+    }
+
+    restify.InternalServerError.call(this, {
+        cause: cause,
+        message: message,
+        restCode: 'InternalError',
+        body: {
+            code: 'InternalError',
+            message: message
+        }
+    });
+}
+
+util.inherits(InternalError, restify.InternalServerError);
+
+
+/**
+ * Base class for invalid / missing parameters
+ */
+function InvalidParamsError(message, errors) {
+    assert.string(message, 'message');
+    assert.arrayOfObject(errors, 'errors');
+
+    restify.RestError.call(this, {
+        restCode: 'InvalidParameters',
+        statusCode: 422,
+        message: message,
+        body: {
+            code: 'InvalidParameters',
+            message: message,
+            errors: errors
+        }
+    });
+
+    this.name = 'InvalidParamsError';
+}
+
+util.inherits(InvalidParamsError, restify.RestError);
+
+
+/**
+ * Base class for errors due to resources in use
+ */
+function InUseError(message, errors) {
+    assert.string(message, 'message');
+    assert.arrayOfObject(errors, 'errors');
+
+    restify.InvalidArgumentError.call(this, {
+        restCode: 'InUse',
+        statusCode: 422,
+        message: message,
+        body: {
+            code: 'InUse',
+            message: message,
+            errors: errors
+        }
+    });
+
+    this.name = 'InUseError';
+}
+
+util.inherits(InUseError, restify.InvalidArgumentError);
+
+
+/*
+ * Helper for sorting an array of objects by their "id" field.
+ */
+function sortById(a, b) {
+    if (a.id < b.id) {
+        return -1;
+    } else if (a.id > b.id) {
+        return 1;
+    } else {
+        return 0;
+    }
+}
+
+
+/*
+ * Error response for duplicate parameters
+ */
+function duplicateParam(field, message) {
+    assert.string(field, 'field');
+
+    return {
+        field: field,
+        code: 'Duplicate',
+        message: message || MSG.duplicate
+    };
+}
+
+
+/**
+ * Error response for invalid parameters
+ */
+function invalidParam(field, message, extra) {
+    assert.string(field, 'field');
+
+    var param = {
+        field: field,
+        code: 'InvalidParameter',
+        message: message || constants.msg.INVALID_PARAMS
+    };
+
+    if (extra) {
+        for (var e in extra) {
+            param[e] = extra[e];
+        }
+    }
+
+    return param;
+}
+
+/**
+ * Error response for unknown parameters
+ */
+function unknownParams(params, message, extra) {
+    var msg;
+
+    assert.arrayOfString(params, 'params');
+    assert.optionalString(message, 'message');
+    assert.optionalObject(extra, 'extra');
+
+    msg = message || constants.msg.UNKNOWN_PARAMS;
+    msg += ': ' + params.join(', ');
+
+    var param = {
+        field: params,
+        code: 'UnknownParameters',
+        message: msg
+    };
+
+    if (extra) {
+        for (var e in extra) {
+            if (!extra.hasOwnProperty(e)) {
+                continue;
+            }
+            param[e] = extra[e];
+        }
+    }
+
+    return param;
+}
+
+
+/**
+ * Error response for missing parameters
+ */
+function missingParam(field, message) {
+    assert.string(field, 'field');
+
+    return {
+        field: field,
+        code: 'MissingParameter',
+        message: message || MSG.missingParam
+    };
+}
+
+
+/**
+ * Error response for an item in use
+ */
+function usedBy(type, id, message) {
+    assert.string(type, 'type');
+    assert.string(id, 'id');
+
+    return {
+        type: type,
+        id: id,
+        code: 'UsedBy',
+        message: message || util.format('In use by %s "%s"', type, id)
+    };
+}
+
+
+/**
+ * Error response for a parameter in use
+ */
+function usedByParam(field, type, id, message) {
+    assert.string(field, 'field');
+    var paramErr = usedBy(type, id, message);
+    paramErr.field = field;
+    return paramErr;
+}
+
+function sortErrsByField(errs) {
+    assert.arrayOfObject(errs, 'errs');
+    errs.sort(function (a, b) {
+        if (a.field < b.field) {
+            return -1;
+        }
+        if (a.field > b.field) {
+            return 1;
+        }
+        return 0;
+    });
+}
+
+
+module.exports = {
+    duplicateParam: duplicateParam,
+    InternalError: InternalError,
+    invalidParam: invalidParam,
+    InvalidParamsError: InvalidParamsError,
+    InUseError: InUseError,
+    sortById: sortById,
+    missingParam: missingParam,
+    msg: MSG,
+    unknownParams: unknownParams,
+    usedBy: usedBy,
+    usedByParam: usedByParam,
+    sortErrsByField: sortErrsByField
+};
diff --git a/lib/util/validate.js b/lib/util/validate.js
new file mode 100644
index 0000000..f307113
--- /dev/null
+++ b/lib/util/validate.js
@@ -0,0 +1,58 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+'use strict';
+
+var errors = require('./errors');
+var warden = require('restify-warden');
+
+var GUID_RE = /[A-Z0-9]{32}/;
+
+function validateBoolean(_, name, val, callback) {
+    if (typeof (val) === 'boolean') {
+        callback(null, val);
+        return;
+    }
+
+    if (val === 'true' || val === 'false') {
+        callback(null, val === 'true');
+        return;
+    }
+
+    callback(errors.invalidParam(name, 'must be a boolean value'));
+}
+
+function validateGUID(_, name, val, callback) {
+    warden.string(null, name, val, function (err) {
+        if (err) {
+            return callback(err);
+        }
+
+        if (val && val.replace(GUID_RE, '') !== '') {
+            return callback(errors.invalidParam(name,
+                'must be a 32-character hex GUID'));
+        }
+
+        callback(null, val);
+        return;
+    });
+}
+
+module.exports = {
+    bool: validateBoolean,
+    fieldsArray: warden.arrayOfFields,
+    GUID: validateGUID,
+    limit: warden.limit,
+    offset: warden.offset,
+    params: warden.params,
+    string: warden.string,
+    stringArray: warden.arrayOfString,
+    UUID: warden.uuid
+};
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..20f9126
--- /dev/null
+++ b/package.json
@@ -0,0 +1,31 @@
+{
+  "name": "kbmapi",
+  "description": "Triton Key Backup and Management API",
+  "version": "1.0.0",
+  "author": "Joyent (joyent.com)",
+  "private": true,
+  "dependencies": {
+    "assert-plus": "^1.0.0",
+    "bunyan": "^1.8.12",
+    "clone": "1.0.3",
+    "jsprim": "^1.4.0",
+    "mooremachine": "^2.2.1",
+    "moray": "^3.5.0",
+    "node-uuid": "1.4.8",
+    "restify": "^4.3.0",
+    "restify-warden": "^1.1.0",
+    "sdc-clients": "git+https://github.com/joyent/node-sdc-clients.git#e3e4caca0f19781521c6fa500f8afbaf392d26ef",
+    "trace-event": "^1.3.0",
+    "vasync": "1.6.4",
+    "verror": "1.10.0"
+  },
+  "devDependencies": {
+    "eslint": "^4.19.1",
+    "eslint-plugin-joyent": "^2.1.0",
+    "faucet": "0.0.1",
+    "istanbul": "^0.4.5",
+    "moray-sandbox": "^0.2.1",
+    "tape": "^4.6.0"
+  },
+  "license": "MPL-2.0"
+}
diff --git a/sapi_manifests/kbmapi/manifest.json b/sapi_manifests/kbmapi/manifest.json
new file mode 100644
index 0000000..daa53e7
--- /dev/null
+++ b/sapi_manifests/kbmapi/manifest.json
@@ -0,0 +1,5 @@
+{
+	"name": "kbmapi",
+	"path": "/opt/smartdc/kbmapi/config.json",
+	"post_cmd": "svcadm restart kbmapi"
+}
diff --git a/sapi_manifests/kbmapi/template b/sapi_manifests/kbmapi/template
new file mode 100644
index 0000000..e4b6391
--- /dev/null
+++ b/sapi_manifests/kbmapi/template
@@ -0,0 +1,12 @@
+{
+    "port": 80,
+    "serviceName": "{{SERVICE_NAME}}",
+    "logLevel": "{{{KBMAPI_LOG_LEVEL}}}",
+    "moray": {
+        "srvDomain": "{{{MORAY_SERVICE}}}",
+        "logLevel": "info",
+        "cueballOptions": {
+            "resolvers": [ "{{{BINDER_SERVICE}}}" ]
+        }
+    }
+}
diff --git a/sapi_manifests/registrar/manifest.json b/sapi_manifests/registrar/manifest.json
new file mode 100644
index 0000000..98cd3bb
--- /dev/null
+++ b/sapi_manifests/registrar/manifest.json
@@ -0,0 +1,5 @@
+{
+    "name": "registrar",
+    "path": "/opt/smartdc/registrar/etc/config.json",
+    "master": true
+}
diff --git a/sapi_manifests/registrar/template b/sapi_manifests/registrar/template
new file mode 100644
index 0000000..8236209
--- /dev/null
+++ b/sapi_manifests/registrar/template
@@ -0,0 +1,30 @@
+{
+  "registration": {
+    "domain": "{{SERVICE_DOMAIN}}",
+    "type": "rr_host",
+    "service": {
+      "type": "service",
+      "service": {
+        "srvce": "_http",
+        "proto": "_tcp",
+        "port": 80
+      },
+      "ttl": 60
+    },
+    "ttl": 60
+  },
+
+  "zookeeper": {
+    "servers": [
+      {{#ZK_SERVERS}}
+        {
+          "host": "{{host}}",
+          "port": {{port}}
+        }{{^last}}, {{/last}}
+      {{/ZK_SERVERS}}
+    ],
+    "timeout": 60000
+  },
+
+  "adminIp": "{{auto.ADMIN_IP}}"
+}
diff --git a/sbin/kbmapid b/sbin/kbmapid
new file mode 100755
index 0000000..5409c0b
--- /dev/null
+++ b/sbin/kbmapid
@@ -0,0 +1,28 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2018 Joyent, Inc.
+#
+
+TOP=$(unset CDPATH; cd $(dirname $0)/../; pwd)
+NODE_INSTALL=${TOP}/node
+
+if [[ ! -d "${NODE_INSTALL}" && -d "${TOP}/build/node" ]]; then
+        # Dev/repo layout.
+        NODE_INSTALL=${TOP}/build/node
+fi
+
+NODE=${NODE_INSTALL}/bin/node
+NODE_FLAGS=(--expose-gc --abort-on-uncaught-exception)
+
+if [[ -z "${SMF_FMRI}" ]]; then
+        ${NODE} ${NODE_FLAGS[@]} ${TOP}/server.js "$@" \
+            | ${NODE} ${TOP}/node_modules/.bin/bunyan
+else
+        ${NODE} ${NODE_FLAGS[@]} ${TOP}/server.js "$@"
+fi
diff --git a/server.js b/server.js
new file mode 100644
index 0000000..34d3a11
--- /dev/null
+++ b/server.js
@@ -0,0 +1,57 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * Main entry-point for KBMAPI.
+ */
+
+'use strict';
+
+var bunyan = require('bunyan');
+var kbmapi = require('./lib/app');
+var restify = require('restify');
+
+
+var log = bunyan.createLogger({
+    name: 'kbmapi',
+    level: 'debug',
+    serializers: restify.bunyan.serializers
+});
+
+
+function exitOnError(err) {
+    if (err) {
+        var errs = err.hasOwnProperty('ase_errors') ? err.ase_errors : [err];
+        for (var e in errs) {
+            log.error(errs[e]);
+        }
+        process.exit(1);
+    }
+}
+
+
+var server;
+try {
+    server = kbmapi.createServer({
+        configFile: __dirname + '/config.json',
+        log: log
+    });
+} catch (err) {
+    exitOnError(err);
+}
+
+server.on('initialized', function _afterConnect() {
+    log.info('Server init complete');
+});
+
+server.start(function _afterStart() {
+    var serverInfo = server.info();
+    log.info('%s listening at %s', serverInfo.name, serverInfo.url);
+});
diff --git a/smf/manifests/kbmapi.xml.in b/smf/manifests/kbmapi.xml.in
new file mode 100644
index 0000000..f234477
--- /dev/null
+++ b/smf/manifests/kbmapi.xml.in
@@ -0,0 +1,39 @@
+<?xml version="1.0"?>
+<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright 2018, Joyent, Inc.
+-->
+
+<!--
+    Key Backup and Management API SMF manifest
+ -->
+
+<service_bundle type="manifest" name="kbmapi">
+<service name="smartdc/application/kbmapi" type="service" version="1">
+
+<dependency name="network" grouping="require_all" restart_on="error" type="service">
+	<service_fmri value="svc:/network/physical" />
+</dependency>
+<dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
+	<service_fmri value="svc:/system/filesystem/local" />
+</dependency>
+
+<exec_method type="method" name="start" exec="/opt/smartdc/kbmapi/sbin/kbmapid &amp;" timeout_seconds="30" />
+<exec_method type="method" name="stop" exec=":kill" timeout_seconds="30" />
+
+<instance name="default" enabled="true" />
+
+<stability value='Unstable' />
+
+<template>
+	<common_name><loctext xml:lang="C">Joyent Key Backup and Management API</loctext></common_name>
+</template>
+
+</service>
+</service_bundle>
diff --git a/test/lib/client.js b/test/lib/client.js
new file mode 100644
index 0000000..ff21d64
--- /dev/null
+++ b/test/lib/client.js
@@ -0,0 +1,52 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * Test helpers for dealing with the KBMAPI client
+ */
+
+'use strict';
+
+
+// --- Globals
+
+
+
+var CLIENT;
+
+
+
+// --- Exports
+
+
+
+function getClient() {
+    if (!CLIENT) {
+        throw new Error('KBMAPI client not initialized!');
+    }
+
+    return CLIENT;
+}
+
+
+function initialized() {
+    return (CLIENT !== undefined && CLIENT !== null);
+}
+
+
+function setClient(client) {
+    CLIENT = client;
+}
+
+module.exports = {
+    initialized: initialized,
+    get: getClient,
+    set: setClient
+};
diff --git a/test/lib/common.js b/test/lib/common.js
new file mode 100644
index 0000000..9a0f634
--- /dev/null
+++ b/test/lib/common.js
@@ -0,0 +1,445 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * Common test helpers shared between (future) integration and unit tests
+ */
+
+'use strict';
+
+var KBMAPI = require('sdc-clients').KBMAPI;
+
+var assert = require('assert-plus');
+var clone = require('clone');
+var fmt = require('util').format;
+var jsprim = require('jsprim');
+var mod_uuid = require('node-uuid');
+var util = require('util');
+
+var CREATED = {};
+
+function requestHeaders(opts) {
+    var headers = opts.headers || {};
+
+    headers['x-request-id'] = mod_uuid.v4();
+
+    if (opts.etag) {
+        headers['If-Match'] = opts.etag;
+    }
+
+    return headers;
+}
+
+/**
+ * Adds the given object to:
+ * - CREATED[type]
+ * - opts.state (if opts and opts.state are present)
+ */
+function addToState(opts, type, obj) {
+    if (!CREATED.hasOwnProperty(type)) {
+        CREATED[type] = [];
+    }
+
+    CREATED[type].push(obj);
+
+    if (!opts.state || !obj) {
+        return;
+    }
+
+    if (!opts.state.hasOwnProperty(type)) {
+        opts.state[type] = [];
+    }
+
+    var newObj = clone(obj);
+    if (opts.hasOwnProperty('stateProp')) {
+        if (!opts.state.hasOwnProperty(opts.stateProp)) {
+            opts.state[opts.stateProp] = [];
+        }
+
+        opts.state[opts.stateProp].push(newObj);
+    }
+
+    opts.state[type].push(newObj);
+}
+
+/**
+ * Shared test code for after API methods are called
+ */
+function afterAPIcall(t, opts, callback, err, obj, req, res) {
+    var desc = opts.desc ? (' ' + opts.desc) : '';
+    assert.string(opts.reqType, 'opts.reqType');
+    assert.string(opts.type, 'opts.type');
+    var type = opts.reqType + ' ' + opts.type + ': ';
+
+    if (opts.expErr) {
+        t.ok(err, type + 'expected error' + desc);
+        if (err) {
+            var code = opts.expCode || 422;
+            t.equal(err.statusCode, code, type + 'status code' + desc);
+            t.deepEqual(err.body, opts.expErr, type + 'error body' + desc);
+        }
+
+        if (obj) {
+            t.deepEqual(obj, {}, 'body (error expected)' + desc);
+        }
+
+        done(err, null, req, res, opts, t, callback);
+        return;
+    }
+
+    if (ifErr(t, err, type + desc)) {
+        done(err, null, req, res, opts, t, callback);
+        return;
+    }
+
+    t.equal(res.statusCode, 200, 'status code' + desc);
+
+    if (opts.hasOwnProperty('idKey')) {
+        t.ok(true, fmt('created %s "%s"', opts.type, obj[opts.idKey]));
+    }
+
+    if (opts.exp) {
+        // For creates, the server will generate an ID (usually a UUID) if
+        // it's not set in the request.  Copy this over to the expected
+        // object so that we don't have to set it manually:
+        if (opts.hasOwnProperty('idKey') &&
+                !opts.exp.hasOwnProperty(opts.idKey)) {
+            opts.exp[opts.idKey] = obj[opts.idKey];
+        }
+
+        // Allow filling in values that might be generated before doing the
+        // deepEqual below:
+        if (opts.hasOwnProperty('fillIn')) {
+            opts.fillIn.forEach(function (prop) {
+                if (!opts.exp.hasOwnProperty(prop) &&
+                    obj.hasOwnProperty(prop)) {
+                    opts.exp[prop] = obj[prop];
+                }
+            });
+        }
+
+        var actual = obj;
+        var expected = opts.exp;
+
+        if (opts.hasOwnProperty('ignore')) {
+            var objClone = clone(obj);
+            var expClone = clone(opts.exp);
+
+            opts.ignore.forEach(function (ign) {
+                delete objClone[ign];
+                delete expClone[ign];
+            });
+
+            actual = objClone;
+            expected = expClone;
+        }
+
+        t.deepEqual(actual, expected, type + 'full result' + desc);
+    }
+
+    if (opts.partialExp) {
+        var partialRes = {};
+        for (var p in opts.partialExp) {
+            partialRes[p] = obj[p];
+        }
+
+        t.deepEqual(partialRes, opts.partialExp,
+            type + 'partial result' + desc);
+    }
+
+    if (opts.reqType === 'create') {
+        // We take plural names elsewhere, but expect the singular here:
+        assert.notEqual('s', opts.type.slice(-1));
+        addToState(opts, opts.type + 's', obj);
+    }
+
+    done(null, obj, req, res, opts, t, callback);
+}
+
+/**
+ * Shared test code for after API delete methods are called
+ */
+function afterAPIdelete(t, opts, callback, err, obj, req, res) {
+    var desc = opts.desc ? (' ' + opts.desc) : '';
+    assert.string(opts.type, 'opts.type');
+    assert.string(opts.id, 'opts.id');
+    var type = util.format('delete %s %s: ', opts.type, opts.id);
+
+    if (opts.expErr) {
+        t.ok(err, 'expected error');
+        if (err) {
+            var code = opts.expCode || 422;
+            t.equal(err.statusCode, code, 'status code');
+            t.deepEqual(err.body, opts.expErr, 'error body');
+        }
+
+        done(err, null, req, res, opts, t, callback);
+        return;
+    }
+
+    // mightNotExist allows for calling mod_whatever.dellAllCreated() when
+    // some of the created objects were actually deleted during the test:
+    if (opts.mightNotExist && err && err.restCode === 'ResourceNotFound') {
+        done(null, obj, req, res, opts, t, callback);
+        return;
+    }
+
+    if (ifErr(t, err, type + desc)) {
+        done(err, null, req, res, opts, t, callback);
+        return;
+    }
+
+    t.equal(res.statusCode, 204, type + 'status code' + desc);
+
+    done(null, obj, req, res, opts, t, callback);
+}
+
+/**
+ * Shared test code for after API list methods are called
+ */
+function afterAPIlist(t, opts, callback, err, obj, req, res) {
+    assert.string(opts.type, 'opts.type');
+    assert.string(opts.id, 'opts.id');
+    assert.optionalArray(opts.present, 'opts.present');
+
+    var desc = opts.desc ? (' ' + opts.desc) : '';
+    var id = opts.id;
+    var type = opts.type;
+
+    if (opts.expErr) {
+        t.ok(err, type + 'expected error' + desc);
+        if (err) {
+            var code = opts.expCode || 422;
+            t.equal(err.statusCode, code, type + 'status code' + desc);
+            t.deepEqual(err.body, opts.expErr, type + 'error body' + desc);
+        }
+
+        done(err, null, req, res, opts, t, callback);
+        return;
+    }
+
+    if (ifErr(t, err, type + desc)) {
+        done(err, null, req, res, opts, t, callback);
+        return;
+    }
+
+    t.equal(res.statusCode, 200, 'status code' + desc);
+    t.ok(true, obj.length + ' results returned' + desc);
+
+    if (opts.present) {
+        var left = clone(opts.present);
+        var ids = left.map(function (o) { return o[id]; });
+        var present = clone(ids);
+        var notInPresent = [];
+
+        jsprim.forEachKey(obj, function (_key, resObj) {
+            var idx = ids.indexOf(resObj[id]);
+            if (idx !== -1) {
+                var expObj = left[idx];
+                var partialRes = {};
+                for (var p in expObj) {
+                    partialRes[p] = resObj[p];
+                }
+
+                var tsOpts = {
+                    id: opts.id,
+                    type: opts.type,
+                    reqType: opts.reqType,
+                    exp: expObj,
+                    ignore: clone(opts.ignore)
+                };
+
+                if (opts.ts && opts.ts[idx]) {
+                    tsOpts.ts = opts.ts[idx];
+                }
+
+                if (opts.deepEqual) {
+                    // ignore doesn't really make sense in the context of a
+                    // partial response
+                    if (tsOpts.ignore) {
+                        var resClone = clone(resObj);
+                        var expClone = clone(expObj);
+
+                        tsOpts.ignore.forEach(function (ign) {
+                            delete resClone[ign];
+                            delete expClone[ign];
+                        });
+
+                        resObj = resClone;
+                        expObj = expClone;
+                    }
+
+                    t.deepEqual(resObj, expObj,
+                        'full result for ' + resObj[id] + desc);
+                } else {
+                    t.deepEqual(partialRes, expObj,
+                        'partial result for ' + resObj[id] + desc);
+                }
+
+                ids.splice(idx, 1);
+                left.splice(idx, 1);
+            } else {
+                notInPresent.push(resObj);
+            }
+        });
+
+        t.deepEqual(ids, [],
+            'found ' + type + 's not specified in opts.present ' + desc);
+
+        if (ids.length !== 0) {
+            t.deepEqual(present, [], 'IDs in present list');
+        }
+
+        if (opts.deepEqual) {
+            t.deepEqual(notInPresent, [], 'IDs not in present list');
+        }
+    }
+
+    done(null, obj, req, res, opts, t, callback);
+}
+
+/**
+ * Assert the arguments to one of the helper functions are correct
+ */
+function assertArgs(t, opts, callback) {
+    assert.object(t, 't');
+    assert.object(opts, 'opts');
+    assert.optionalObject(opts.exp, 'opts.exp');
+    assert.optionalObject(opts.expErr, 'opts.expErr');
+    assert.optionalObject(opts.partialExp, 'opts.partialExp');
+    assert.ok(opts.exp || opts.partialExp || opts.expErr,
+        'one of exp, expErr, partialExp required');
+    assert.optionalString(opts.etag, 'opts.etag');
+    assert.optionalObject(opts.params, 'opts.params');
+    assert.optionalObject(opts.state, 'opts.state');
+    assert.optionalFunc(callback, 'callback');
+}
+
+
+/**
+ * Assert the arguments to one of the list helper functions are correct
+ */
+function assertArgsList(t, opts, callback) {
+    assert.object(t, 't');
+    assert.object(opts, 'opts');
+    assert.optionalObject(opts.params, 'opts.params');
+    assert.optionalObject(opts.expErr, 'opts.expErr');
+    assert.optionalBool(opts.deepEqual, 'opts.deepEqual');
+    assert.optionalArrayOfObject(opts.present, 'opts.present');
+    assert.optionalFunc(callback, 'callback');
+}
+
+/**
+ * Finish a test
+ */
+function done(err, obj, req, res, opts, t, callback) {
+    if (callback) {
+        callback(opts.continueOnErr ? null : err, obj, req, res);
+        return;
+    }
+
+    t.end();
+}
+
+
+/**
+ * Finish a test with an error
+ */
+function doneErr(err, t, callback) {
+    if (callback) {
+        return callback(err);
+    }
+
+    return t.end();
+}
+
+
+/**
+ * Finish a test with a result
+ */
+function doneRes(res, t, callback) {
+    if (callback) {
+        return callback(null, res);
+    }
+
+    return t.end();
+}
+
+/**
+ * Calls t.ifError, outputs the error body for diagnostic purposes, and
+ * returns true if there was an error
+ */
+function ifErr(t, err, desc) {
+    t.ifError(err, desc);
+    if (err) {
+        t.deepEqual(err.body, {}, desc + ': error body');
+        return true;
+    }
+
+    return false;
+}
+
+function requestOpts(t, opts) {
+    assert.object(t, 't');
+
+    var desc;
+    if (typeof (opts) === 'undefined') {
+        desc = '';
+        opts = {};
+    } else if (typeof (opts) === 'string') {
+        desc = ': ' + opts;
+        opts = {};
+    } else {
+        assert.object(opts, 'opts');
+        desc = opts.desc ? ': ' + opts.desc : '';
+    }
+
+    var headers = requestHeaders(opts);
+    var reqId = headers['x-request-id'];
+
+    t.ok(reqId, fmt('req ID: %s%s', reqId, desc));
+}
+
+function resetCreated() {
+    CREATED = {};
+}
+
+function createClient(url, t) {
+    var reqID = mod_uuid.v4();
+    var opts = {
+        agent: false,
+        headers: { 'x-request-id': reqID },
+        url: url
+    };
+
+    var client = new KBMAPI(opts);
+    client.req_id = reqID;
+
+    if (t) {
+        t.ok(client, 'created client with req_id=' + client.req_id);
+    }
+
+    return client;
+}
+
+module.exports = {
+    addToState: addToState,
+    afterAPIcall: afterAPIcall,
+    afterAPIdelete: afterAPIdelete,
+    afterAPIlist: afterAPIlist,
+    assertArgs: assertArgs,
+    assertArgsList: assertArgsList,
+    createClient: createClient,
+    doneErr: doneErr,
+    doneRes: doneRes,
+    ifErr: ifErr,
+    resetCreated: resetCreated,
+    reqOpts: requestOpts
+};
diff --git a/test/lib/config.js b/test/lib/config.js
new file mode 100644
index 0000000..ebe4930
--- /dev/null
+++ b/test/lib/config.js
@@ -0,0 +1,29 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * Test configuration
+ */
+
+'use strict';
+
+var fmt = require('util').format;
+
+var KBMAPI_HOST = process.env.KBMAPI_HOST || 'localhost';
+var KBMAPI_PORT = process.env.KBMAPI_PORT || 80;
+
+// XXX More to come
+var CONFIG = {
+    kbmapi: {
+        host: fmt('http://%s:$d', KBMAPI_HOST, KBMAPI_PORT)
+    }
+};
+
+module.exports = CONFIG;
diff --git a/test/lib/log.js b/test/lib/log.js
new file mode 100644
index 0000000..2002b0a
--- /dev/null
+++ b/test/lib/log.js
@@ -0,0 +1,28 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * bunyan logger for tests
+ */
+
+'use strict';
+
+var bunyan = require('bunyan');
+
+module.exports = bunyan.createLogger({
+    name: 'kbmapi-test',
+    serializers: bunyan.stdSerializers,
+    streams: [
+        {
+            level: process.env.LOG_LEVEL || 'fatal',
+            stream: process.stderr
+        }
+    ]
+});
diff --git a/test/lib/server.js b/test/lib/server.js
new file mode 100644
index 0000000..fa14eb1
--- /dev/null
+++ b/test/lib/server.js
@@ -0,0 +1,178 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
+'use strict';
+
+var config = require('./config');
+var common = require('./common');
+var mod_client = require('./client');
+var mod_log = require('./log');
+var mod_jsprim = require('jsprim');
+var moray_sandbox = require('moray-sandbox');
+var KBMAPI = require('../../lib/app').KBMAPI;
+
+// --- Globals
+
+var MULTI_SUITE_RUN = false;
+var PGHANDLE = null;
+var SERVER = null;
+
+function getPG(log, callback) {
+    if (PGHANDLE !== null) {
+        callback(null, PGHANDLE);
+        return;
+    } else {
+        moray_sandbox.createPG(log, function setHandle(err, pg) {
+            if (pg) {
+                PGHANDLE = pg;
+            }
+            callback(err, pg);
+        });
+    }
+}
+
+/**
+ * Close the server
+ */
+function closeServer(t) {
+    function done() {
+        if (!MULTI_SUITE_RUN) {
+            stopPG();
+        }
+
+        t.end();
+    }
+
+    if (!SERVER) {
+        t.pass('no server to close');
+        done();
+        return;
+    }
+
+    SERVER.stop(function (err) {
+        SERVER = null;
+        t.ifErr(err, 'stopping server');
+        done();
+    });
+}
+
+/**
+ * Create the server then end the test
+ */
+function createServer(t) {
+    createTestServer({}, function (err, res) {
+        t.ifErr(err, 'creating server');
+        if (err) {
+            t.end();
+            return;
+        }
+
+        t.ok(res.server, 'server created');
+        t.ok(res.client, 'client created');
+        t.end();
+    });
+}
+
+/**
+ * Stops the Postgres server so that it can be cleaned up
+ */
+function stopPG() {
+    if (PGHANDLE !== null) {
+        PGHANDLE.stop();
+        PGHANDLE = null;
+    }
+}
+
+/**
+ * Create a new Moray instance, spinning up a new Postgres instance if needed.
+ */
+function setupMoray(log, callback) {
+    getPG(log, function spawn(pgErr, pg) {
+        if (pgErr) {
+            callback(pgErr);
+            return;
+        }
+
+        pg.spawnMoray(function (err, moray) {
+            if (err) {
+                callback(err);
+                return;
+            }
+
+            moray.on('connect', function afterConnect() {
+                callback(null, moray);
+            });
+        });
+    });
+}
+
+/**
+ * Create a test server
+ */
+function createTestServer(opts, callback) {
+    if (SERVER !== null) {
+        throw new Error('Cannot run multiple KBMAPI servers at once!');
+    }
+
+    var log_child = mod_log.child({
+        component: 'test-server'
+    });
+
+    var kbmapi_config =
+        mod_jsprim.mergeObjects(config.server, opts.config || {});
+
+    function startWithMoray(err, moray) {
+        if (err) {
+            callback(err);
+            return;
+        }
+
+        var server = new KBMAPI({
+            config: kbmapi_config,
+            log: log_child
+        });
+        SERVER = server;
+
+        server.moray = moray;
+
+        server.on('initialized', function _afterConnect() {
+            log_child.debug('server running');
+
+            var client = common.createClient(SERVER.info().url);
+            mod_client.set(client);
+            callback(null, { server: SERVER, client: client, moray: moray });
+        });
+
+        server.start(function _afterStart() {
+            log_child.debug('server started');
+        });
+    }
+
+    if (opts.moray) {
+        startWithMoray(null, opts.moray);
+    } else {
+        setupMoray(log_child, startWithMoray);
+    }
+}
+
+module.exports = {
+    set MULTI_SUITE_RUN(val) {
+        MULTI_SUITE_RUN = val;
+    },
+    get MULTI_SUITE_RUN() {
+        return MULTI_SUITE_RUN;
+    },
+    _create: createTestServer,
+    close: closeServer,
+    create: createServer,
+    setupMoray: setupMoray,
+    stopPG: stopPG,
+    get: function () { return SERVER; }
+};
diff --git a/test/lib/token.js b/test/lib/token.js
new file mode 100644
index 0000000..fc62de7
--- /dev/null
+++ b/test/lib/token.js
@@ -0,0 +1,130 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+/*
+ * Test helpers for dealing with tokens
+ */
+
+'use strict';
+
+var clone = require('clone');
+var common = require('./common');
+var doneErr = common.doneErr;
+var mod_client = require('./client');
+var log = require('./log');
+
+var TYPE = 'pivtoken';
+
+function createToken(t, opts, callback) {
+    common.assertArgs(t, opts, callback);
+    var client = opts.client || mod_client.get();
+
+    log.debug({ params: opts.params }, 'creating pivtoken');
+    opts.fillIn = [ 'guid' ];
+    opts.type = TYPE;
+    opts.reqType = 'create';
+
+    var guid = opts.params.guid;
+    var params = clone(opts.params);
+    delete params.guid;
+
+    if (!opts.desc && opts.expErr) {
+        opts.desc = JSON.stringify(opts.params);
+    }
+
+    client.createToken(guid, params, common.reqOpts(t, opts),
+        common.afterAPIcall.bind(null, t, opts, callback));
+}
+
+function createAndGetToken(t, opts, callback) {
+    opts.reqType = 'create';
+    createToken(t, opts, function (err, res) {
+        if (err) {
+            doneErr(err, t, callback);
+            return;
+        }
+        opts.reqtype = 'get';
+
+        getToken(t, opts, callback);
+    });
+}
+
+function getToken(t, opts, callback) {
+    common.assertArgs(t, opts, callback);
+    var client = opts.client || mod_client.get();
+    var guid = opts.params.guid;
+
+    log.debug({ params: opts.params }, 'getting pivtoken');
+    opts.type = TYPE;
+    opts.reqType = 'get';
+
+    client.getToken(guid, common.reqOpts(t, opts),
+        common.afterAPIcall.bind(null, t, opts, callback));
+}
+
+function getTokenPin(t, opts, callback) {
+    common.assertArgs(t, opts, callback);
+    var client = opts.client || mod_client.get();
+    var guid = opts.params.guid;
+
+    log.debug({ params: opts.params }, 'getting pivtoken pin');
+    opts.type = TYPE;
+    opts.reqType = 'get';
+
+    client.getTokenPin(guid, common.reqOpts(t, opts),
+        common.afterAPIcall.bind(null, t, opts, callback));
+}
+
+function listTokens(t, opts, callback) {
+    common.assertArgsList(t, opts, callback);
+
+    var client = opts.client || mod_client.get();
+    var params = opts.params || {};
+    var desc = ' ' + JSON.stringify(params)
+        + (opts.desc ? (' ' + opts.desc) : '');
+
+    if (!opts.desc) {
+        opts.desc = desc;
+    }
+    opts.id = 'token';
+    opts.type = TYPE;
+    opts.reqType = 'list';
+
+    log.debug({ params: params }, 'list tokens');
+
+    client.getTokens(params, common.reqOpts(t, opts),
+        common.afterAPIlist.bind(null, t, opts, callback));
+}
+
+function deleteToken(t, opts, callback) {
+    common.assertArgs(t, opts, callback);
+    var client = opts.client || mod_client.get();
+    var guid = opts.params.guid;
+    var params = clone(opts.params);
+
+    log.debug({ params: opts.params }, 'deleting pivtoken');
+    opts.id = guid;
+    opts.type = TYPE;
+    opts.reqType = 'del';
+
+    delete params.guid;
+
+    client.deleteToken(guid, params, common.reqOpts(t, opts),
+        common.afterAPIdelete.bind(null, t, opts, callback));
+}
+
+module.exports = {
+    create: createToken,
+    createAndGet: createAndGetToken,
+    delete: deleteToken,
+    get: getToken,
+    getPin: getTokenPin,
+    list: listTokens
+};
diff --git a/test/runtest b/test/runtest
new file mode 100755
index 0000000..1423f34
--- /dev/null
+++ b/test/runtest
@@ -0,0 +1,32 @@
+#!/usr/bin/env bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Run a single test of any type.
+
+TOP=$(cd $(dirname $0)/../; pwd)
+NODE_INSTALL=$TOP/node
+TAPE=$TOP/node_modules/.bin/tape
+UNAME=$(uname -s)
+
+guard_file=/lib/sdc/.sdc-test-no-production-data
+if [[ $UNAME == "SunOS" ]] && [[ ! -f "$guard_file" ]]; then
+    cat <<EOF
+To run this test you must create the file:
+
+    $guard_file
+
+after ensuring you have no production data on this SDC.
+EOF
+    exit 2
+fi
+
+PATH=$NODE_INSTALL/bin:$PATH $TAPE $1
diff --git a/test/runtests b/test/runtests
new file mode 100755
index 0000000..7993927
--- /dev/null
+++ b/test/runtests
@@ -0,0 +1,176 @@
+#!/usr/bin/env bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2015, Joyent, Inc.
+#
+
+#
+# Run API tests. This is expected to be run from the API
+# install dir: /opt/smartdc/{napi,fwapi,etc}
+#
+# This creates .tap files in OUTPUT_DIR that can be processed by a TAP reader.
+# Testing config and log files are also placed in this dir.
+#
+# Run `./runtests -h` for usage info.
+#
+
+if [ "$TRACE" != "" ]; then
+    export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+    set -o xtrace
+fi
+set -o errexit
+set -o pipefail
+
+
+
+#---- guard
+
+uname=$(uname)
+guard_file=/lib/sdc/.sdc-test-no-production-data
+if [[ $uname == "SunOS" && ! -f "$guard_file" ]]; then
+    cat <<EOF
+To run this test you must create the file:
+
+    $guard_file
+
+after ensuring you have no production data on this SDC.
+EOF
+    exit 2
+fi
+
+
+
+#---- support functions
+
+function fatal
+{
+    echo "$(basename $0): fatal error: $*"
+    exit 1
+}
+
+function usage
+{
+    echo "Usage:"
+    echo "  runtests [OPTIONS...]"
+    echo ""
+    echo "Options:"
+    echo "  -f FILTER   Filter pattern (substring match) for test files to run."
+    echo "  -s          Stop on first error."
+}
+
+
+
+#---- mainline
+
+start_time=$(date +%s)
+
+API=napi
+TOP=$(cd $(dirname $0)/../; pwd)
+NODE_INSTALL=$TOP/node
+OUTPUT_DIR=/var/tmp/${API}test
+TAPE=$TOP/node_modules/.bin/tape
+FAILING_LIST=$OUTPUT_DIR/failing-tests.txt
+
+
+# Options.
+opt_test_pattern=
+opt_stop_on_failure=
+while getopts "hf:s" opt
+do
+    case "$opt" in
+        h)
+            usage
+            exit 0
+            ;;
+        f)
+            opt_test_pattern=$OPTARG
+            ;;
+        s)
+            opt_stop_on_failure="true"
+            ;;
+        *)
+            usage
+            exit 1
+            ;;
+    esac
+done
+
+
+# Setup a clean output dir.
+echo "# Setup a clean output dir ($OUTPUT_DIR)."
+rm -rf $OUTPUT_DIR
+mkdir -p /$OUTPUT_DIR
+touch $FAILING_LIST
+
+cd $TOP
+
+# Run the integration tests
+echo ""
+test_files=$(ls -1 test/integration/*.test.js)
+if [[ -n "$opt_test_pattern" ]]; then
+    test_files=$(echo "$test_files" | grep "$opt_test_pattern" || true)
+    echo "# Running filtered set of test files: $test_files"
+else
+    # Otherwise the default set we want to skip know *hanging*
+    # test cases.
+    hangers=""
+    for hanger in $hangers; do
+        echo "# Excluding hanger test file: $hanger"
+        test_files=$(echo "$test_files" | grep -v $hanger)
+    done
+fi
+
+set +o errexit
+
+for file in $test_files; do
+    test_file=$(basename $file)
+    echo "# $test_file"
+    PATH=$NODE_INSTALL/bin:$PATH $TAPE $file \
+        | tee $OUTPUT_DIR/$test_file.tap
+    if [[ "$?" != "0" ]]; then
+        echo $file >> $OUTPUT_DIR/failing-tests.txt
+        [[ -n "$opt_stop_on_failure" ]] && break
+    fi
+done
+
+set -o errexit
+
+echo ""
+echo "# test output in $OUTPUT_DIR:"
+cd $OUTPUT_DIR
+ls *.tap
+
+
+# Colored summary of results (borrowed from smartos-live.git/src/vm/run-tests).
+echo ""
+echo "# test results:"
+
+end_time=$(date +%s)
+elapsed=$((${end_time} - ${start_time}))
+
+tests=$(grep "^# tests [0-9]" $OUTPUT_DIR/*.tap | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
+passed=$(grep "^# pass  [0-9]" $OUTPUT_DIR/*.tap | tr -s ' ' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
+[[ -z ${tests} ]] && tests=0
+[[ -z ${passed} ]] && passed=0
+fail=$((${tests} - ${passed}))
+failing_tests=$(cat ${FAILING_LIST} | wc -l)
+
+echo "# Completed in ${elapsed} seconds."
+echo -e "# \033[32mPASS: ${passed} / ${tests}\033[39m"
+if [[ ${fail} -gt 0 ]]; then
+    echo -e "# \033[31mFAIL: ${fail} / ${tests}\033[39m"
+fi
+
+if [[ ${failing_tests} -gt 0 ]]; then
+    echo ""
+    echo -e "# \033[31mFAILING TESTS:\033[39m"
+    cat $FAILING_LIST | sed -e 's,^,#   ,'
+fi
+echo ""
+
+exit $failing_tests
diff --git a/test/unit/helpers.js b/test/unit/helpers.js
new file mode 100644
index 0000000..a9b9c6c
--- /dev/null
+++ b/test/unit/helpers.js
@@ -0,0 +1,48 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+'use strict';
+
+var assert = require('assert-plus');
+var common = require('../lib/common');
+var mod_server = require('../lib/server');
+
+function reset() {
+    common.resetCreated();
+}
+
+function createClient(t) {
+    return common.createClient(mod_server.get().info().url, t);
+}
+
+function createClientAndServer(opts, callback) {
+    if (callback === undefined) {
+        callback = opts;
+        opts = {};
+    }
+
+    assert.object(opts, 'opts');
+    assert.func(callback, 'callback');
+
+    mod_server._create(opts, function (err, res) {
+        if (err) {
+            callback(err);
+            return;
+        }
+
+        callback(null, res.client, res.moray);
+    });
+}
+
+module.exports = {
+    createClient: createClient,
+    createClientAndServer: createClientAndServer,
+    reset: reset
+};
diff --git a/test/unit/run.js b/test/unit/run.js
new file mode 100644
index 0000000..09e3016
--- /dev/null
+++ b/test/unit/run.js
@@ -0,0 +1,31 @@
+/*
+ * Copyright 2018, Joyent, Inc.
+ */
+
+'use strict';
+
+var assert = require('assert-plus');
+var fs = require('fs');
+var mod_server = require('../lib/server');
+var path = require('path');
+var test = require('tape');
+
+function runTests(directory) {
+    fs.readdir(directory, function dirCb(err, files) {
+        assert.ifError(err);
+        files.filter(function fileFilter(f) {
+            return (/\.test\.js$/.test(f));
+        }).map(function fileMap(f) {
+            return (path.join(directory, f));
+        }).forEach(require);
+
+        test('Shutdown Postgres', function stopPg(t) {
+            mod_server.stopPG();
+            t.end();
+        });
+    });
+}
+
+(function main() {
+    runTests(__dirname);
+})();
diff --git a/test/unit/token.test.js b/test/unit/token.test.js
new file mode 100644
index 0000000..06334aa
--- /dev/null
+++ b/test/unit/token.test.js
@@ -0,0 +1,135 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2017, Joyent, Inc.
+ */
+
+/*
+ * Unit tests for token endpoints
+ */
+
+'use strict';
+
+var h = require('./helpers');
+var mod_jsprim = require('jsprim');
+var mod_token = require('../lib/token');
+var mod_server = require('../lib/server');
+var test = require('tape');
+
+var KBMAPI;
+var MORAY;
+
+// Values here were generated by reading /dev/random. Any resemblance to
+// actual tokens, living or dead, is purely coincidential.  Sorted by GUID
+var TOKENS = [
+    {
+        guid: '75CA077A14C5E45037D7A0740D5602A5',
+        pin: '12345',
+        serial: 'abcd12345',
+        model: 'ACME insta-token model 1',
+        cn_uuid: '00000000-0000-0000-0000-000000000001'
+    },
+    {
+        guid: 'DDA81AA0DB3528479AB6D2AC75624E5E',
+        pin: '54321',
+        serial: 'deadbeef123',
+        model: 'ACME insta-token model 1',
+        cn_uuid: '00000000-0000-0000-0000-000000000002'
+    }
+];
+
+test('Initial setup', function tInitialSetup(t) {
+    h.reset();
+
+    t.test('Create client and server', function tCreateClientServer(t2) {
+        h.createClientAndServer(function (err, res, moray) {
+            KBMAPI = res;
+            MORAY = moray;
+            t2.ifError(err, 'server creation');
+            t2.ok(KBMAPI, 'client');
+            t2.ok(MORAY, 'moray');
+            t2.end();
+        });
+    });
+
+    t.test('Create tokens', function tCreateTokens(t2) {
+        TOKENS.forEach(function eachToken(token) {
+            t2.test('Create token GUID ' + token.guid, function doCreate(t3) {
+                mod_token.create(t3, {
+                    params: token,
+                    exp: token
+                });
+            });
+        });
+        t2.end();
+    });
+
+    t.test('Get token', function tGetToken(t2) {
+        var tok = TOKENS[0];
+
+        mod_token.get(t2, {
+            params: {
+                guid: tok.guid
+            },
+            exp: {
+                guid: tok.guid,
+                serial: tok.serial,
+                cn_uuid: tok.cn_uuid,
+                model: tok.model
+            }
+        });
+    });
+
+    t.test('Get token with pin', function tGetTokenPin(t2) {
+        var tok = TOKENS[0];
+
+        mod_token.getPin(t2, {
+            params: {
+                guid: tok.guid
+            },
+            exp: tok
+        });
+    });
+
+    t.test('List tokens', function tListTokens(t2) {
+        var tokens = mod_jsprim.deepCopy(TOKENS);
+
+        tokens.forEach(function stripPin(tok) {
+            delete tok.pin;
+        });
+
+        mod_token.list(t2, {
+            params: {},
+            deepEqual: true,
+            present: tokens
+            });
+    });
+
+    t.test('Delete token', function tDeleteToken(t2) {
+        mod_token.delete(t2, {
+            params: {
+                guid: TOKENS[0].guid
+            },
+            exp: {}
+        });
+    });
+
+    t.test('Lookup deleted token', function tGetDeletedToken(t2) {
+        mod_token.get(t2, {
+            params: {
+                guid: TOKENS[0].guid
+            },
+            expCode: 404,
+            expErr: {
+                code: 'ResourceNotFound',
+                message: 'piv tokens not found'
+            }
+        });
+    });
+});
+
+test('Stop server', mod_server.close);
diff --git a/tools/bashstyle b/tools/bashstyle
new file mode 100644
index 0000000..31d5d7a
--- /dev/null
+++ b/tools/bashstyle
@@ -0,0 +1,176 @@
+#!/usr/bin/env node
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2014, Joyent, Inc.
+ */
+
+/*
+ * bashstyle: check bash scripts for adherence to style guidelines, including:
+ *
+ *    o no lines longer than 80 characters
+ *    o file does not end with a blank line
+ *    o Do not use 'local' and var initialization *using a subshell* in the
+ *      same statement. See
+ *      <http://www.tldp.org/LDP/abs/html/localvar.html#EXITVALANOMALY01>
+ *      for why not. Arguably this belongs in a separate 'bashlint'.
+ *
+ * Future enhancements could include:
+ *    o indents consistent with respect to tabs, spaces
+ *    o indents consistently sized (all are some multiple of the smallest
+ *      indent, which must be a tab or 4 or 8 spaces)
+ */
+
+'use strict';
+
+// eslint-disable-next-line
+var VERSION = '2.0.0';
+
+var mod_assert = require('assert');
+var mod_fs = require('fs');
+
+var nerrors = 0;
+
+main();
+process.exit(0);
+
+function main() {
+    var files = process.argv.slice(2);
+
+    if (files.length === 0) {
+        console.error('usage: %s file1 [...]',
+            process.argv.slice(0, 2).join(' '));
+        process.exit(2);
+    }
+
+    files.forEach(checkFile);
+
+    if (nerrors !== 0) {
+        process.exit(1);
+    }
+}
+
+function checkFile(filename) {
+    var text = mod_fs.readFileSync(filename, 'utf-8');
+    var lines = text.split('\n');
+    var i;
+    var styled = false;
+    var styleStart;
+
+    mod_assert.ok(lines.length > 0);
+
+    /*
+     * Expand tabs in each line and check for long lines.
+     */
+    for (i = 1; i <= lines.length; i++) {
+        var line = expandTabs(lines[i - 1]);
+
+        if (i > 1 && lines[i - 2].match(/# BASHSTYLED/)) {
+            continue;
+        }
+
+        if (line.match(/# BEGIN BASHSTYLED/)) {
+            styleStart = i;
+            styled = true;
+        }
+
+        if (line.match(/# END BASHSTYLED/)) {
+            if (styled !== true) {
+                nerrors++;
+                console.log('%s: %d: END BASHSTYLED ' +
+                    'w/o corresponding BEGIN', filename, i);
+            }
+            styled = false;
+        }
+
+        /* JSSTYLED */
+        if (!styled && line.match(/^\s*local\s+(\w+)\s*=.*\$\(/)) {
+            nerrors++;
+            /* JSSTYLED */
+            var m = line.match(/^\s*local\s+(\w+)\s*=/);
+            console.log('%s: %d: declaring and setting a "local" ' +
+                'var in the same statement ' +
+                'ignores a subshell return code ' +
+                '<http://www.tldp.org/LDP/abs/html/' +
+                'localvar.html#EXITVALANOMALY01>: ' +
+                'local %s=...',
+                filename, i, m[1]);
+        }
+
+        // Regexplanation: non-[, [, space (contents) space, ], non-]
+        // groups before and after brackets to ease search/replace.
+        if (!styled && line.match(/(^|[^[])\[(\s.+\s)\]([^\]])/)) {
+            nerrors++;
+            console.log('%s: %d: prefer [[ to [ for tests.',
+                filename, i);
+        }
+
+        if (!styled && line.length > 80) {
+            nerrors++;
+            console.log('%s: %d: line exceeds 80 columns',
+                filename, i);
+        }
+
+        if (!styled && line.match(/\s+$/)) {
+            nerrors++;
+            console.log('%s: %d: line ends in whitespace',
+                filename, i);
+        }
+    }
+
+    if (styled) {
+        nerrors++;
+        console.log('%s: %d: BEGIN BASHSTYLED that does not END',
+                    filename, styleStart);
+    }
+
+
+    /*
+     * No sane editor lets you save a file without a newline at the
+     * very end.
+     */
+    if (lines[lines.length - 1].length !== 0) {
+        nerrors++;
+        console.log('%s: %d: file does not end with newline',
+            filename, lines.length);
+    }
+
+    /*
+     * Since the file will always end with a newline, the last entry of
+     * "lines" will actually be blank.
+     */
+    if (lines.length > 1 && lines[lines.length - 2].length === 0) {
+        nerrors++;
+        console.log('%s: %d: file ends with a blank line',
+            filename, lines.length - 1);
+    }
+}
+
+function expandTabs(text) {
+    var out = '';
+    var col = 0;
+    var j, k;
+
+    for (j = 0; j < text.length; j++) {
+        if (text[j] !== '\t') {
+            out += text[j];
+            col++;
+            continue;
+        }
+
+        k = 8 - (col % 8);
+        col += k;
+
+        do {
+            out += ' ';
+        } while (--k > 0);
+
+        col += k;
+    }
+
+    return (out);
+}
diff --git a/tools/download_ctftools b/tools/download_ctftools
new file mode 100644
index 0000000..3f6b633
--- /dev/null
+++ b/tools/download_ctftools
@@ -0,0 +1,90 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
+
+#
+# This program will download a prebuilt copy of the CTF tools from Manta.
+# These tools have been built using a technique to ensure they can be run on a
+# sufficiently old platform.  More details are available at:
+#
+#	https://github.com/jclulow/ctftools
+#
+
+MANTA_URL='https://us-east.manta.joyent.com'
+BASE_PATH='/Joyent_Dev/public/ctftools'
+TARBALL='ctftools.20141030T081701Z.9543159.tar.gz'
+
+if [[ -z $1 ]]; then
+	printf 'ERROR: usage: download_ctftools <destination dir>\n' 2>&1
+	exit 1
+fi
+
+TOP=$(cd "$(dirname "$0")/.." && pwd)
+CACHE_DIR=$1
+TMPDIR="$TOP/$CACHE_DIR"
+CTFDIR="$TOP/$CACHE_DIR/ctftools"
+
+if ! /usr/bin/mkdir -p "$TMPDIR"; then
+	printf 'ERROR: could not mkdir "%s"\n' "$TMPDIR" >&2
+	exit 1
+fi
+
+if [[ ! -f "$TMPDIR/$TARBALL" ]]; then
+	#
+	# Try to download the tarball from Manta.
+	#
+	start_time=$SECONDS
+	rm -f "$TMPDIR/$TARBALL.tmp"
+	while :; do
+		if (( $SECONDS > start_time + 120 )); then
+			printf 'ERROR: timed out trying to download tools\n' >&2
+			exit 1
+		fi
+
+		if ! curl -sSf -o "$TMPDIR/$TARBALL.tmp" \
+		    "$MANTA_URL/$BASE_PATH/$TARBALL"; then
+			printf 'WARNING: download failure (retrying)\n' >&2
+			sleep 5
+			continue
+		fi
+
+		if ! /usr/bin/gzip -t "$TMPDIR/$TARBALL.tmp"; then
+			printf 'WARNING: download gzip invalid (retrying)\n' >&2
+			sleep 5
+			continue
+		fi
+
+		if ! /usr/bin/mv "$TMPDIR/$TARBALL.tmp" "$TMPDIR/$TARBALL"; then
+			printf 'ERROR: could not move tarball into place\n' >&2
+			exit 1
+		fi
+
+		break
+	done
+fi
+
+#
+# Extract the tarball
+#
+if ! /usr/bin/mkdir -p "$CTFDIR"; then
+	printf 'ERROR: could not mkdir "%s"\n' "$CTFDIR" >&2
+	exit 1
+fi
+
+if ! cd "$CTFDIR"; then
+	exit 1
+fi
+
+if ! /usr/bin/tar xfz "$TMPDIR/$TARBALL"; then
+	printf 'ERROR: could not extract tarball\n' >&2
+	exit 1
+fi
+
+exit 0
diff --git a/tools/download_go b/tools/download_go
new file mode 100644
index 0000000..69e9a3e
--- /dev/null
+++ b/tools/download_go
@@ -0,0 +1,126 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
+
+#
+# This program will download a Go toolchain for a particular system.  It
+# currently expects to find illumos builds of the toolchain on the Joyent
+# download server, where we will be placing them alongside sdcnode, etc.
+# The program is designed specifically to be used as part of a make target.
+#
+# We may revisit this once the Go project makes official builds for illumos
+# systems available in the future.
+#
+# NOTE: This program comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+#
+# This program accepts four arguments, in the following order:
+#
+#	GOVERSION	The version of the Go toolchain to use; e.g., "1.9.2"
+#	GOOS		The build machine operating system; e.g., "solaris"
+#	GOARCH		The build machine CPU architecture; e.g., "amd64"
+#	OUTDIR		The local directory into which the downloaded tar
+#			file will be placed.
+#
+# The program will use the provided arguments to find and download an archive
+# of the Go toolchain for use on the build machine.  The archive will be named
+# for a combination of the provided arguments; e.g.,
+# "go1.9.2.solaris-amd64.tar.bz2".  A target symbolic link will also be
+# created, with just the version number in the name; e.g., "go-1.9.2.tar.bz2".
+# If the archive could not be downloaded, an error message will be printed and
+# the output file and target link will be unaffected.
+#
+
+BASEURL='https://download.joyent.com/pub/build/go/adhoc/'
+GOVERSION=$1
+GOOS=$2
+GOARCH=$3
+OUTDIR=$4
+
+if [[ -z $GOVERSION || -z $GOOS || -z $GOARCH || -z $OUTDIR ]]; then
+	printf 'ERROR: usage: download_go GOVERSION GOOS GOARCH OUTDIR\n' 2>&1
+	exit 1
+fi
+
+if [[ ! -d $OUTDIR ]]; then
+	printf 'ERROR: output directory "%s" does not exist\n' "$OUTDIR" 2>&1
+	exit 1
+fi
+
+TARGET="go-$GOVERSION.tar.bz2"
+
+#
+# Download the index page which lists the current set of available go
+# builds:
+#
+if ! list=$(curl -sSfL "$BASEURL") || [[ -z "$list" ]]; then
+	printf 'ERROR: could not download index page\n' >&2
+	exit 1
+fi
+
+#
+# Using only commonly found household items, extract the full name of the
+# go tar archive we need.  This program needs to be able to operate in a
+# minimally populated build zone, so we avoid using anything beyond basic
+# UNIX tools like "awk".
+#
+# One word to describe this process might be "brittle".
+#
+if ! name=$(/usr/bin/awk -v "v=$GOVERSION" -v "o=$GOOS" -v "a=$GOARCH" -F\" '
+    BEGIN { pattern = "^go"v"."o"-"a".tar.bz2$"; }
+    $1 == "<a href=" && $2 ~ pattern { print $2 }' <<< "$list") ||
+    [[ -z "$name" ]]; then
+	printf 'ERROR: could not locate file name in index page\n' >&2
+	printf '\t(Does Go version %s (%s-%s) exist?)\n' \
+	    "$GOVERSION" "$GOOS" "$GOARCH" >&2
+	exit 1
+fi
+
+
+#
+# If the full file name of the latest go build does not exist, download it now
+# to a temporary file.  If it succeeds, move it into place.
+#
+output_file="$OUTDIR/$name"
+if [[ ! -f $output_file ]]; then
+	printf 'Downloading Go: %s\n' "$BASEURL$name"
+
+	temp_file="$OUTDIR/.tmp.$name.$$"
+	rm -f "$temp_file"
+
+	if ! curl -sSf -o "$temp_file" "$BASEURL$name"; then
+		printf 'ERROR: could not download go\n' >&2
+		rm -f "$temp_file"
+		exit 1
+	fi
+
+	if ! mv "$temp_file" "$output_file"; then
+		printf 'ERROR: could not move tar file into place\n' >&2
+		rm -f "$temp_file"
+		exit 1
+	fi
+fi
+
+#
+# Make sure the target link points at the correct file:
+#
+rm -f "$OUTDIR/$TARGET"
+if ! ln -s "$name" "$OUTDIR/$TARGET"; then
+	printf 'ERROR: could not create target link\n' >&2
+	exit 1
+fi
+
+exit 0
+
+# vim: set ts=8 sts=8 sw=8 noet:
diff --git a/tools/jsl.node.conf b/tools/jsl.node.conf
new file mode 100644
index 0000000..ca9c670
--- /dev/null
+++ b/tools/jsl.node.conf
@@ -0,0 +1,139 @@
+#
+# Configuration File for JavaScript Lint 
+#
+# This configuration file can be used to lint a collection of scripts, or to enable
+# or disable warnings for scripts that are linted via the command line.
+#
+
+### Warnings
+# Enable or disable warnings based on requirements.
+# Use "+WarningName" to display or "-WarningName" to suppress.
+#
++ambiguous_else_stmt          # the else statement could be matched with one of multiple if statements (use curly braces to indicate intent
++ambiguous_nested_stmt        # block statements containing block statements should use curly braces to resolve ambiguity
++ambiguous_newline            # unexpected end of line; it is ambiguous whether these lines are part of the same statement
+-anon_no_return_value         # anonymous function does not always return value
++assign_to_function_call      # assignment to a function call
+-block_without_braces         # block statement without curly braces
++comma_separated_stmts        # multiple statements separated by commas (use semicolons?)
++comparison_type_conv         # comparisons against null, 0, true, false, or an empty string allowing implicit type conversion (use === or !==)
++default_not_at_end           # the default case is not at the end of the switch statement
++dup_option_explicit          # duplicate "option explicit" control comment
++duplicate_case_in_switch     # duplicate case in switch statement
++duplicate_formal             # duplicate formal argument {name}
++empty_statement              # empty statement or extra semicolon
++identifier_hides_another     # identifer {name} hides an identifier in a parent scope
+-inc_dec_within_stmt          # increment (++) and decrement (--) operators used as part of greater statement
++incorrect_version            # Expected /*jsl:content-type*/ control comment. The script was parsed with the wrong version.
++invalid_fallthru             # unexpected "fallthru" control comment
++invalid_pass                 # unexpected "pass" control comment
++jsl_cc_not_understood        # couldn't understand control comment using /*jsl:keyword*/ syntax
++leading_decimal_point        # leading decimal point may indicate a number or an object member
++legacy_cc_not_understood     # couldn't understand control comment using /*@keyword@*/ syntax
++meaningless_block            # meaningless block; curly braces have no impact
++mismatch_ctrl_comments       # mismatched control comment; "ignore" and "end" control comments must have a one-to-one correspondence
+-misplaced_regex              # regular expressions should be preceded by a left parenthesis, assignment, colon, or comma
++missing_break                # missing break statement
++missing_break_for_last_case  # missing break statement for last case in switch
++missing_default_case         # missing default case in switch statement
++missing_option_explicit      # the "option explicit" control comment is missing
++missing_semicolon            # missing semicolon
++missing_semicolon_for_lambda # missing semicolon for lambda assignment
++multiple_plus_minus          # unknown order of operations for successive plus (e.g. x+++y) or minus (e.g. x---y) signs
++nested_comment               # nested comment
+-no_return_value              # function {name} does not always return a value
++octal_number                 # leading zeros make an octal number
++parseint_missing_radix       # parseInt missing radix parameter
++partial_option_explicit      # the "option explicit" control comment, if used, must be in the first script tag
++redeclared_var               # redeclaration of {name}
++trailing_comma_in_array      # extra comma is not recommended in array initializers
++trailing_decimal_point       # trailing decimal point may indicate a number or an object member
++undeclared_identifier        # undeclared identifier: {name}
++unreachable_code             # unreachable code
+-unreferenced_argument        # argument declared but never referenced: {name}
+-unreferenced_function        # function is declared but never referenced: {name}
++unreferenced_variable        # variable is declared but never referenced: {name}
++unsupported_version          # JavaScript {version} is not supported
++use_of_label                 # use of label
++useless_assign               # useless assignment
++useless_comparison           # useless comparison; comparing identical expressions
+-useless_quotes               # the quotation marks are unnecessary
++useless_void                 # use of the void type may be unnecessary (void is always undefined)
++var_hides_arg                # variable {name} hides argument
+-want_assign_or_call          # expected an assignment or function call
++with_statement               # with statement hides undeclared variables; use temporary variable instead
+
+
+### Output format
+# Customize the format of the error message.
+#    __FILE__ indicates current file path
+#    __FILENAME__ indicates current file name
+#    __LINE__ indicates current line
+#    __COL__ indicates current column
+#    __ERROR__ indicates error message (__ERROR_PREFIX__: __ERROR_MSG__)
+#    __ERROR_NAME__ indicates error name (used in configuration file)
+#    __ERROR_PREFIX__ indicates error prefix
+#    __ERROR_MSG__ indicates error message
+#
+# For machine-friendly output, the output format can be prefixed with
+# "encode:". If specified, all items will be encoded with C-slashes.
+#
+# Visual Studio syntax (default):
++output-format __FILE__(__LINE__): __ERROR__
+# Alternative syntax:
+#+output-format __FILE__:__LINE__: __ERROR__
+
+
+### Context
+# Show the in-line position of the error.
+# Use "+context" to display or "-context" to suppress.
+#
++context
+
+
+### Control Comments
+# Both JavaScript Lint and the JScript interpreter confuse each other with the syntax for
+# the /*@keyword@*/ control comments and JScript conditional comments. (The latter is
+# enabled in JScript with @cc_on@). The /*jsl:keyword*/ syntax is preferred for this reason,
+# although legacy control comments are enabled by default for backward compatibility.
+#
+-legacy_control_comments
+
+
+### Defining identifiers
+# By default, "option explicit" is enabled on a per-file basis.
+# To enable this for all files, use "+always_use_option_explicit"
+-always_use_option_explicit
+
+# Define certain identifiers of which the lint is not aware.
+# (Use this in conjunction with the "undeclared identifier" warning.)
+#
+# Common uses for webpages might be:
++define __dirname
++define clearInterval
++define clearTimeout
++define console
++define exports
++define global
++define module
++define process
++define require
++define setImmediate
++define setInterval
++define setTimeout
++define Buffer
++define JSON
++define Math
+
+### JavaScript Version
+# To change the default JavaScript version:
+#+default-type text/javascript;version=1.5
+#+default-type text/javascript;e4x=1
+
+### Files
+# Specify which files to lint
+# Use "+recurse" to enable recursion (disabled by default).
+# To add a set of files, use "+process FileName", "+process Folder\Path\*.js",
+# or "+process Folder\Path\*.htm".
+#
+
diff --git a/tools/jsl.web.conf b/tools/jsl.web.conf
new file mode 100644
index 0000000..b135000
--- /dev/null
+++ b/tools/jsl.web.conf
@@ -0,0 +1,137 @@
+#
+# Configuration File for JavaScript Lint 
+# Developed by Matthias Miller (http://www.JavaScriptLint.com)
+#
+# This configuration file can be used to lint a collection of scripts, or to enable
+# or disable warnings for scripts that are linted via the command line.
+#
+
+### Warnings
+# Enable or disable warnings based on requirements.
+# Use "+WarningName" to display or "-WarningName" to suppress.
+#
++ambiguous_else_stmt          # the else statement could be matched with one of multiple if statements (use curly braces to indicate intent
++ambiguous_nested_stmt        # block statements containing block statements should use curly braces to resolve ambiguity
++ambiguous_newline            # unexpected end of line; it is ambiguous whether these lines are part of the same statement
++anon_no_return_value         # anonymous function does not always return value
++assign_to_function_call      # assignment to a function call
+-block_without_braces         # block statement without curly braces
++comma_separated_stmts        # multiple statements separated by commas (use semicolons?)
++comparison_type_conv         # comparisons against null, 0, true, false, or an empty string allowing implicit type conversion (use === or !==)
++default_not_at_end           # the default case is not at the end of the switch statement
++dup_option_explicit          # duplicate "option explicit" control comment
++duplicate_case_in_switch     # duplicate case in switch statement
++duplicate_formal             # duplicate formal argument {name}
++empty_statement              # empty statement or extra semicolon
++identifier_hides_another     # identifer {name} hides an identifier in a parent scope
++inc_dec_within_stmt          # increment (++) and decrement (--) operators used as part of greater statement
++incorrect_version            # Expected /*jsl:content-type*/ control comment. The script was parsed with the wrong version.
++invalid_fallthru             # unexpected "fallthru" control comment
++invalid_pass                 # unexpected "pass" control comment
++jsl_cc_not_understood        # couldn't understand control comment using /*jsl:keyword*/ syntax
++leading_decimal_point        # leading decimal point may indicate a number or an object member
++legacy_cc_not_understood     # couldn't understand control comment using /*@keyword@*/ syntax
++meaningless_block            # meaningless block; curly braces have no impact
++mismatch_ctrl_comments       # mismatched control comment; "ignore" and "end" control comments must have a one-to-one correspondence
++misplaced_regex              # regular expressions should be preceded by a left parenthesis, assignment, colon, or comma
++missing_break                # missing break statement
++missing_break_for_last_case  # missing break statement for last case in switch
++missing_default_case         # missing default case in switch statement
++missing_option_explicit      # the "option explicit" control comment is missing
++missing_semicolon            # missing semicolon
++missing_semicolon_for_lambda # missing semicolon for lambda assignment
++multiple_plus_minus          # unknown order of operations for successive plus (e.g. x+++y) or minus (e.g. x---y) signs
++nested_comment               # nested comment
++no_return_value              # function {name} does not always return a value
++octal_number                 # leading zeros make an octal number
++parseint_missing_radix       # parseInt missing radix parameter
++partial_option_explicit      # the "option explicit" control comment, if used, must be in the first script tag
++redeclared_var               # redeclaration of {name}
++trailing_comma_in_array      # extra comma is not recommended in array initializers
++trailing_decimal_point       # trailing decimal point may indicate a number or an object member
++undeclared_identifier        # undeclared identifier: {name}
++unreachable_code             # unreachable code
++unreferenced_argument        # argument declared but never referenced: {name}
++unreferenced_function        # function is declared but never referenced: {name}
++unreferenced_variable        # variable is declared but never referenced: {name}
++unsupported_version          # JavaScript {version} is not supported
++use_of_label                 # use of label
++useless_assign               # useless assignment
++useless_comparison           # useless comparison; comparing identical expressions
++useless_quotes               # the quotation marks are unnecessary
++useless_void                 # use of the void type may be unnecessary (void is always undefined)
++var_hides_arg                # variable {name} hides argument
++want_assign_or_call          # expected an assignment or function call
++with_statement               # with statement hides undeclared variables; use temporary variable instead
+
+
+### Output format
+# Customize the format of the error message.
+#    __FILE__ indicates current file path
+#    __FILENAME__ indicates current file name
+#    __LINE__ indicates current line
+#    __COL__ indicates current column
+#    __ERROR__ indicates error message (__ERROR_PREFIX__: __ERROR_MSG__)
+#    __ERROR_NAME__ indicates error name (used in configuration file)
+#    __ERROR_PREFIX__ indicates error prefix
+#    __ERROR_MSG__ indicates error message
+#
+# For machine-friendly output, the output format can be prefixed with
+# "encode:". If specified, all items will be encoded with C-slashes.
+#
+# Visual Studio syntax (default):
++output-format __FILE__(__LINE__): __ERROR__
+# Alternative syntax:
+#+output-format __FILE__:__LINE__: __ERROR__
+
+
+### Context
+# Show the in-line position of the error.
+# Use "+context" to display or "-context" to suppress.
+#
++context
+
+
+### Control Comments
+# Both JavaScript Lint and the JScript interpreter confuse each other with the syntax for
+# the /*@keyword@*/ control comments and JScript conditional comments. (The latter is
+# enabled in JScript with @cc_on@). The /*jsl:keyword*/ syntax is preferred for this reason,
+# although legacy control comments are enabled by default for backward compatibility.
+#
+-legacy_control_comments
+
+
+### Defining identifiers
+# By default, "option explicit" is enabled on a per-file basis.
+# To enable this for all files, use "+always_use_option_explicit"
++always_use_option_explicit
+
+# Define certain identifiers of which the lint is not aware.
+# (Use this in conjunction with the "undeclared identifier" warning.)
+#
+# Common uses for webpages might be:
++define	JSON
++define Math
++define $
++define XMLHttpRequest
++define alert
++define clearInterval
++define clearTimeout
++define confirm
++define document
++define setInterval
++define setTimeout
++define window
+
+### JavaScript Version
+# To change the default JavaScript version:
+#+default-type text/javascript;version=1.5
+#+default-type text/javascript;e4x=1
+
+### Files
+# Specify which files to lint
+# Use "+recurse" to enable recursion (disabled by default).
+# To add a set of files, use "+process FileName", "+process Folder\Path\*.js",
+# or "+process Folder\Path\*.htm".
+#
+
diff --git a/tools/jsstyle.conf b/tools/jsstyle.conf
new file mode 100644
index 0000000..2d13d5d
--- /dev/null
+++ b/tools/jsstyle.conf
@@ -0,0 +1,14 @@
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2017, Joyent, Inc.
+#
+
+unparenthesized-return=1
+indent=tab
+line-length=80
+literal-string-quote=single
diff --git a/tools/mkrepo b/tools/mkrepo
new file mode 100644
index 0000000..3b0d624
--- /dev/null
+++ b/tools/mkrepo
@@ -0,0 +1,121 @@
+#!/usr/bin/env node
+// -*- mode: js -*-
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2014, Joyent, Inc.
+ */
+
+var child_process = require('child_process');
+var fs = require('fs');
+var path = require('path');
+
+
+
+///--- Globals
+
+var DIRS = [
+    'deps',
+    'docs',
+    'docs/media',
+    'lib',
+    'smf',
+    'smf/manifests',
+    'test',
+    'tools',
+    'tools/mk'
+];
+
+var SUBMODULES = {
+    'javascriptlint': 'https://github.com/davepacheco/javascriptlint.git',
+    'jsstyle': 'https://github.com/davepacheco/jsstyle.git',
+    'restdown': 'https://github.com/trentm/restdown.git'
+};
+
+
+
+///--- Internal Functions
+
+function usage(code, message) {
+    if (message)
+        console.error(message);
+
+    console.error('usage: %s [repo ...]', path.basename(process.argv[1]));
+    process.exit(code);
+}
+
+
+function ensureDirectoryNotExists(dir) {
+    try {
+        var stats = fs.statSync(dir);
+        usage(1, dir + ' already exists');
+    } catch (e) {
+        return false;
+    }
+}
+
+
+function cp(src, dest) {
+    fs.createReadStream(src).pipe(fs.createWriteStream(dest));
+}
+
+
+function exec(cmd, dir, cb) {
+    child_process.exec(cmd, {cwd: dir}, function (err, stdout, stderr) {
+        if (err)
+            process.exit(err.code || 1);
+
+        if (typeof (cb) === 'function')
+            return cb(null);
+    });
+}
+
+
+function mkdir(d) {
+    fs.mkdirSync(d, '0750');
+}
+
+function gitify(dir, repo) {
+    exec('git init', dir, function () {
+        exec('git remote add origin git@github.com:joyent/' + repo + '.git',
+	    dir);
+
+        Object.keys(SUBMODULES).forEach(function (k) {
+            // stub out the git submodule call
+            console.error('Cloning into deps/' + k + '...');
+            exec('git submodule add ' + SUBMODULES[k] + ' ./deps/' + k, dir);
+        });
+    });
+}
+
+
+
+///--- Mainline
+
+if (process.argv.length < 3)
+    usage(1, 'repo required');
+
+process.argv.slice(2).forEach(function (arg) {
+    var repo = path.resolve(arg);
+    ensureDirectoryNotExists(repo);
+    mkdir(repo);
+    DIRS.concat('.').forEach(function (d) {
+        var dir = repo + '/' + d;
+        if (d != '.')
+            mkdir(dir);
+
+        fs.readdirSync('./' + d).forEach(function (f) {
+            var src = './' + d + '/' + f;
+            var dest = dir + '/' + f;
+            if (fs.statSync(src).isFile() && !/^\..*/.test(f))
+                cp(src, dest);
+        });
+    });
+
+    cp('./.gitignore', repo + '/.gitignore');
+    gitify(repo, arg);
+});
diff --git a/tools/obliterate-kbmapi-service.sh b/tools/obliterate-kbmapi-service.sh
new file mode 100755
index 0000000..0a5b59e
--- /dev/null
+++ b/tools/obliterate-kbmapi-service.sh
@@ -0,0 +1,68 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+# Copyright (c) 2018 Joyent, Inc.
+#
+
+#
+# Obliterate a Triton KBMAPI service and instances. This is just for
+# development.
+#
+# Usage:
+#       scp tools/obliterate-kbmapi-service.sh coal:/var/tmp
+#       ssh coal
+#       /var/tmp/obliterate-kbmapi-service.sh
+#
+
+if [[ -n "$TRACE" ]]; then
+    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+    set -o xtrace
+fi
+set -o errexit
+set -o pipefail
+
+function fatal() {
+    echo "$0: fatal: \$*" >&2
+    exit 1
+}
+
+function obliterate_kbmapi_service {
+    local promSvc
+
+    promSvc=$(sdc-sapi /services?name=kbmapi | json -H 0.uuid)
+    if [[ -z $promSvc ]]; then
+        return
+    fi
+
+    sdc-sapi /instances?service_uuid=$promSvc \
+        | json -Ha uuid params.alias \
+        | while read uuid alias; do
+            echo "Delete KBMAPI instance $uuid ($alias)"
+            sdc-sapi /instances/$uuid -X DELETE
+        done
+
+    echo "Delete KBMAPI service ($promSvc)"
+    sdc-sapi /services/$promSvc -X DELETE
+}
+
+
+# ---- mainline
+
+# Guard from running this in production. This is the same guard file we use
+# for running many of the Triton test suites.
+if [[ ! -f "/lib/sdc/.sdc-test-no-production-data" ]]; then
+    cat <<EOF
+To run this you must create the following file:
+
+    /lib/sdc/.sdc-test-no-production-data
+
+after ensuring you have no production data in this TritonDC.
+EOF
+    exit 2
+fi
+
+
+obliterate_kbmapi_service
\ No newline at end of file
diff --git a/tools/rsync-to b/tools/rsync-to
new file mode 100755
index 0000000..8b273b6
--- /dev/null
+++ b/tools/rsync-to
@@ -0,0 +1,54 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2018, Joyent, Inc.
+#
+
+#
+# Rsync the master in this working copy to the install on the given HN.
+#
+
+#set -o xtrace
+set -o errexit
+
+TOP=$(cd $(dirname $0)/../; pwd)
+NODE=root@$1
+
+while [[ -z "$KBMAPI_ZONE" ]]; do
+    echo "Trying to get KBMAPI zone"
+    KBMAPI_ZONE=$(ssh $NODE "/opt/smartdc/bin/sdc-vmapi /vms?alias=kbmapi0" 2>/dev/null \
+        | json -H -c 'this.tags && this.tags.smartdc_role === "kbmapi"' \
+            -c 'this.state === "running"' 0.uuid)
+done
+echo "KBMAPI_ZONE: $KBMAPI_ZONE"
+
+extraOpts=
+if [[ $(uname -s) != "SunOS" ]]; then
+    extraOpts="--exclude *.node --exclude build"
+else
+    # Clean node_modules everytime.
+    ssh $NODE rm -rf /zones/$KBMAPI_ZONE/root/opt/smartdc/kbmapi/node_modules
+fi
+
+rsync -av ${TOP}/ \
+    $NODE:/zones/$KBMAPI_ZONE/root/opt/smartdc/kbmapi/ \
+    $extraOpts \
+    --exclude .git/ \
+    --exclude /etc/config.json \
+    --exclude /deps/ \
+    --exclude /docs/ \
+    --exclude /tools/ \
+    --exclude /tmp/
+
+state=$(ssh ${NODE} svcs -z ${KBMAPI_ZONE} -H -o state kbmapi)
+if [[ "$state" == "maintenance" ]]; then
+    ssh ${NODE} svcadm -z ${KBMAPI_ZONE} clear kbmapi
+else
+    ssh ${NODE} svcadm -z ${KBMAPI_ZONE} restart kbmapi
+fi
+ssh ${NODE} svcadm -z ${KBMAPI_ZONE} restart config-agent
diff --git a/tools/runtests.in b/tools/runtests.in
new file mode 100644
index 0000000..2d72b6f
--- /dev/null
+++ b/tools/runtests.in
@@ -0,0 +1,136 @@
+#!/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Run the TODONAME tests.
+# Run `./runtests -h` for usage info.
+#
+
+if [ "$TRACE" != "" ]; then
+    export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+    set -o xtrace
+fi
+set -o errexit
+set -o pipefail
+
+
+
+#---- guard
+
+if [[ ! -f "/lib/sdc/.sdc-test-no-production-data" ]]; then
+    cat <<EOF
+To run this test you must create the file:
+
+    /lib/sdc/.sdc-test-no-production-data
+
+after ensuring you have no production data on this SDC.
+EOF
+    exit 2
+fi
+
+
+
+#---- config
+
+NAME=TODONAME
+TOP=$(cd $(dirname $0)/../; pwd)
+
+
+
+#---- support functions
+
+function fatal
+{
+    echo "$(basename $0): fatal error: $*"
+    exit 1
+}
+
+function usage
+{
+    echo "Usage:"
+    echo "  runtests [OPTIONS...]"
+    echo ""
+    echo "Options:"
+    echo "  -f FILTER   Filter pattern (substring match) for test files to run."
+}
+
+
+
+#---- mainline
+
+start_time=$(date +%s)
+
+# Options.
+opt_test_pattern=
+while getopts "hf:" opt
+do
+    case "$opt" in
+        h)
+            usage
+            exit 0
+            ;;
+        f)
+            opt_test_pattern=$OPTARG
+            ;;
+        *)
+            usage
+            exit 1
+            ;;
+    esac
+done
+
+OUTPUT_DIR=/var/tmp/${NAME}test
+echo "# Create output dir ($OUTPUT_DIR)."
+rm -rf $OUTPUT_DIR
+mkdir -p $OUTPUT_DIR
+
+
+
+#---- start tests
+
+# TODO
+# Project specific setup and test running goes here.
+# - TAP output should be redirected or tee'd to $OUTPUT_DIR/*.tap
+#   This is used (a) to summarize below and (b) for the Jenkins Job TAP
+#   parsing/reporting.
+# - If reasonable, use $opt_test_pattern to filter the set of test files run.
+#
+# Some examples:
+# - https://mo.joyent.com/amon/blob/master/test/runtests
+# - https://mo.joyent.com/smartos-live/blob/master/src/vm/runtests
+# TODO
+
+
+
+#---- summary
+
+echo ""
+echo "# test results:"
+
+end_time=$(date +%s)
+elapsed=$((${end_time} - ${start_time}))
+
+tests=$(grep "^# tests [0-9]" $OUTPUT_DIR/*.tap | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
+passed=$(grep "^# pass  [0-9]" $OUTPUT_DIR/*.tap | tr -s ' ' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
+[[ -z ${tests} ]] && tests=0
+[[ -z ${passed} ]] && passed=0
+fail=$((${tests} - ${passed}))
+
+echo "# Completed in ${elapsed} seconds."
+echo -e "# \033[32mPASS: ${passed} / ${tests}\033[39m"
+if [[ ${fail} -gt 0 ]]; then
+    echo -e "# \033[31mFAIL: ${fail} / ${tests}\033[39m"
+fi
+echo ""
+
+if [[ ${tests} != ${passed} ]]; then
+    exit 1
+fi
diff --git a/tools/service_bundle.dtd.1 b/tools/service_bundle.dtd.1
new file mode 100644
index 0000000..e5c2380
--- /dev/null
+++ b/tools/service_bundle.dtd.1
@@ -0,0 +1,1091 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
+
+ CDDL HEADER START
+
+ The contents of this file are subject to the terms of the
+ Common Development and Distribution License (the "License").
+ You may not use this file except in compliance with the License.
+
+ You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
+ or http://www.opensolaris.org/os/licensing.
+ See the License for the specific language governing permissions
+ and limitations under the License.
+
+ When distributing Covered Code, include this CDDL HEADER in each
+ file and include the License file at usr/src/OPENSOLARIS.LICENSE.
+ If applicable, add the following below this CDDL HEADER, with the
+ fields enclosed by brackets "[]" replaced with your own identifying
+ information: Portions Copyright [yyyy] [name of copyright owner]
+
+ CDDL HEADER END
+-->
+
+<!--
+  Service description DTD
+
+    Most attributes are string values (or an individual string from a
+    restricted set), but attributes with a specific type requirement are
+    noted in the comment describing the element.
+-->
+
+<!--
+  XInclude support
+
+    A series of service bundles may be composed via the xi:include tag.
+    smf(5) tools enforce that all bundles be of the same type.
+-->
+
+<!--
+     These entities are used for the property, propval and property_group
+     elements, that require type attributes for manifest, while for profiles
+     the type attributes are only implied.
+-->
+
+<!ENTITY % profile "IGNORE">
+<!ENTITY % manifest "INCLUDE">
+
+<!ELEMENT xi:include
+  (xi:fallback)
+  >
+<!ATTLIST xi:include
+  href CDATA #REQUIRED
+  parse (xml|text) "xml"
+  encoding CDATA #IMPLIED
+  xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude"
+  >
+
+<!ELEMENT xi:fallback
+  ANY
+  >
+<!ATTLIST xi:fallback
+  xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude"
+  >
+
+<!--
+  stability
+
+    This element associates an SMI stability level with the parent
+    element.  See attributes(5) for an explanation of interface
+    stability levels.
+
+    Its attribute is
+
+	value	The stability level of the parent element.
+-->
+
+<!ELEMENT stability EMPTY>
+
+<!ATTLIST stability
+	value		( Standard | Stable | Evolving | Unstable |
+			External | Obsolete ) #REQUIRED >
+
+<!-- Property value lists -->
+
+<!--
+  value_node
+
+    This element represents a single value within any of the typed
+    property value lists.
+
+    Its attribute is
+
+	value	The value for this node in the list.
+-->
+
+<!ELEMENT value_node EMPTY>
+
+<!ATTLIST value_node
+	value CDATA #REQUIRED>
+
+<!--
+  count_list
+  integer_list
+  opaque_list
+  host_list
+  hostname_list
+  net_address_list
+  net_address_v4_list
+  net_address_v6_list
+  time_list
+  astring_list
+  ustring_list
+  boolean_list
+  fmri_list
+  uri_list
+
+    These elements represent the typed lists of values for a property.
+    Each contains one or more value_node elements representing each
+    value on the list.
+
+    None of these elements has attributes.
+-->
+
+<!ELEMENT count_list
+	( value_node+ )>
+
+<!ATTLIST count_list>
+
+<!ELEMENT integer_list
+	( value_node+ )>
+
+<!ATTLIST integer_list>
+
+<!ELEMENT opaque_list
+	( value_node+ )>
+
+<!ATTLIST opaque_list>
+
+<!ELEMENT host_list
+	( value_node+ )>
+
+<!ATTLIST host_list>
+
+<!ELEMENT hostname_list
+	( value_node+ )>
+
+<!ATTLIST hostname_list>
+
+<!ELEMENT net_address_list
+	( value_node+ )>
+
+<!ATTLIST net_address_list>
+
+<!ELEMENT net_address_v4_list
+	( value_node+ )>
+
+<!ATTLIST net_address_v4_list>
+
+<!ELEMENT net_address_v6_list
+	( value_node+ )>
+
+<!ATTLIST net_address_v6_list>
+
+<!ELEMENT time_list
+	( value_node+ )>
+
+<!ATTLIST time_list>
+
+<!ELEMENT astring_list
+	( value_node+ )>
+
+<!ATTLIST astring_list>
+
+<!ELEMENT ustring_list
+	( value_node+ )>
+
+<!ATTLIST ustring_list>
+
+<!ELEMENT boolean_list
+	( value_node+ )>
+
+<!ATTLIST boolean_list>
+
+<!ELEMENT fmri_list
+	( value_node+ )>
+
+<!ATTLIST fmri_list>
+
+<!ELEMENT uri_list
+	( value_node+ )>
+
+<!ATTLIST uri_list>
+
+<!-- Properties and property groups -->
+
+<!--
+   property
+
+     This element is for a singly or multiply valued property within a
+     property group.  It contains an appropriate value list element,
+     which is expected to be consistent with the type attribute.
+
+     Its attributes are
+
+	name	The name of this property.
+
+	type	The data type for this property.
+
+	override These values should replace values already in the
+		repository.
+-->
+
+<![%profile;[
+<!ELEMENT property
+	( count_list | integer_list | opaque_list | host_list | hostname_list |
+	net_address_list | net_address_v4_list | net_address_v6_list |
+	time_list | astring_list | ustring_list | boolean_list | fmri_list |
+	uri_list )? >
+
+<!ATTLIST property
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #IMPLIED
+	override	( true | false ) "false" >
+]]>
+	
+<![%manifest;[
+<!ELEMENT property
+	( count_list | integer_list | opaque_list | host_list | hostname_list |
+	net_address_list | net_address_v4_list | net_address_v6_list |
+	time_list | astring_list | ustring_list | boolean_list | fmri_list |
+	uri_list )? >
+
+<!ATTLIST property
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #REQUIRED
+	override	( true | false ) "false" >
+]]>
+
+<!--
+   propval
+
+     This element is for a singly valued property within a property
+     group.  List-valued properties must use the property element above.
+
+     Its attributes are
+
+	name	The name of this property.
+
+	type	The data type for this property.
+
+	value	The value for this property.  Must match type
+		restriction of type attribute.
+
+	override This value should replace any values already in the
+		repository.
+-->
+
+<![%profile;[
+<!ELEMENT propval EMPTY>
+
+<!ATTLIST propval
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #IMPLIED
+	value		CDATA #REQUIRED
+	override	( true | false ) "false" >
+]]>
+
+<![%manifest;[
+<!ELEMENT propval EMPTY>
+
+<!ATTLIST propval
+	name		CDATA #REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #REQUIRED
+	value		CDATA #REQUIRED
+	override	( true | false ) "false" >
+]]>
+
+<!--
+  property_group
+
+    This element is for a set of related properties on a service or
+    instance.  It contains an optional stability element, as well as
+    zero or more property-containing elements.
+
+    Its attributes are
+
+	name	The name of this property group.
+
+	type	A category for this property group.  Groups of type
+		"framework", "implementation" or "template" are primarily
+		of interest to the service management facility, while
+		groups of type "application" are expected to be only of
+		interest to the service to which this group is attached.
+		Other types may be introduced using the service symbol
+		namespace conventions.
+
+	delete	If in the repository, this property group should be removed.
+-->
+
+<![%profile;[
+<!ELEMENT property_group
+	( stability?, ( propval | property )* )>
+
+<!ATTLIST property_group
+	name		CDATA #REQUIRED
+	type		CDATA #IMPLIED
+	delete		( true | false ) "false" >
+]]>
+
+<![%manifest;[
+<!ELEMENT property_group
+	( stability?, ( propval | property )* )>
+
+<!ATTLIST property_group
+	name		CDATA #REQUIRED
+	type		CDATA #REQUIRED
+	delete		( true | false ) "false" >
+]]>
+
+<!--
+  service_fmri
+
+    This element defines a reference to a service FMRI (for either a
+    service or an instance).
+
+    Its attribute is
+
+	value	The FMRI.
+-->
+
+<!ELEMENT service_fmri EMPTY>
+
+<!ATTLIST service_fmri
+	value		CDATA #REQUIRED>
+
+<!-- Dependencies -->
+
+<!--
+  dependency
+
+    This element identifies a group of FMRIs upon which the service is
+    in some sense dependent.  Its interpretation is left to the
+    restarter to which a particular service instance is delegated.  It
+    contains a group of service FMRIs, as well as a block of properties.
+
+    Its attributes are
+
+	name	The name of this dependency.
+
+	grouping The relationship between the various FMRIs grouped
+		here; "require_all" of the FMRIs to be online, "require_any"
+		of the FMRIs to be online, or "exclude_all" of the FMRIs
+		from being online or in maintenance for the dependency to
+		be satisfied.  "optional_all" dependencies are satisfied
+		when all of the FMRIs are either online or unable to come
+		online (because they are disabled, misconfigured, or one
+		of their dependencies is unable to come online).
+
+	restart_on The type of events from the FMRIs that the service should
+		be restarted for.  "error" restarts the service if the
+		dependency is restarted due to hardware fault.  "restart"
+		restarts the service if the dependency is restarted for
+		any reason, including hardware fault.  "refresh" restarts
+		the service if the dependency is refreshed or restarted for
+		any reason.  "none" will never restart the service due to
+		dependency state changes.
+
+	type	The type of dependency: on another service ('service'), on
+		a filesystem path ('path'), or another dependency type.
+
+	delete	This dependency should be deleted.
+-->
+
+<!ELEMENT dependency
+	( service_fmri*, stability?, ( propval | property )* ) >
+
+<!ATTLIST dependency
+	name		CDATA #REQUIRED
+	grouping	( require_all | require_any | exclude_all |
+			optional_all ) #REQUIRED
+	restart_on	( error | restart | refresh | none ) #REQUIRED
+	type		CDATA #REQUIRED
+	delete		( true | false ) "false" >
+
+<!-- Dependents -->
+
+<!--
+  dependent
+
+    This element identifies a service which should depend on this service.  It
+    corresponds to a dependency in the named service.  The grouping and type
+    attributes of that dependency are implied to be "require_all" and
+    "service", respectively.
+
+    Its attributes are
+
+	name	The name of the dependency property group to create in the
+		dependent entity.
+
+	grouping The grouping relationship of the dependency property
+		group to create in the dependent entity.  See "grouping"
+		attribute on the dependency element.
+
+	restart_on The type of events from this service that the named service
+		should be restarted for.
+
+	delete	True if this dependent should be deleted.
+
+	override Whether to replace an existing dependent of the same name.
+
+-->
+
+<!ELEMENT dependent
+	( service_fmri, stability?, ( propval | property )* ) >
+
+<!ATTLIST dependent
+	name		CDATA #REQUIRED
+	grouping	( require_all | require_any | exclude_all |
+			optional_all) #REQUIRED
+	restart_on	( error | restart | refresh | none) #REQUIRED
+	delete		( true | false ) "false"
+	override	( true | false ) "false" >
+
+<!-- Method execution context, security profile, and credential definitions -->
+
+<!--
+  envvar
+
+    An environment variable. It has two attributes:
+
+	name	The name of the environment variable.
+	value	The value of the environment variable.
+-->
+
+<!ELEMENT envvar EMPTY>
+
+<!ATTLIST envvar
+	name		CDATA #REQUIRED
+	value		CDATA #REQUIRED >
+
+<!--
+  method_environment
+
+    This element defines the environment for a method. It has no
+    attributes, and one or more envvar child elements.
+-->
+
+<!ELEMENT method_environment (envvar+) >
+
+<!ATTLIST method_environment>
+
+<!--
+  method_profile
+
+    This element indicates which exec_attr(5) profile applies to the
+    method context being defined.
+
+    Its attribute is
+
+	name	The name of the profile.
+-->
+
+<!ELEMENT method_profile EMPTY>
+
+<!ATTLIST method_profile
+	name		CDATA #REQUIRED >
+
+<!--
+  method_credential
+
+    This element specifies credential attributes for the execution
+    method to use.
+
+    Its attributes are
+
+	user	The user ID, in numeric or text form.
+
+	group	The group ID, in numeric or text form.  If absent or
+		":default", the group associated with the user in the
+		passwd database.
+
+	supp_groups Supplementary group IDs to be associated with the
+		method, separated by commas or spaces.  If absent or
+		":default", initgroups(3C) will be used.
+
+	privileges An optional string specifying the privilege set.
+
+	limit_privileges An optional string specifying the limit
+		privilege set.
+-->
+
+<!ELEMENT method_credential EMPTY>
+
+<!ATTLIST method_credential
+	user		CDATA #REQUIRED
+	group		CDATA #IMPLIED
+	supp_groups	CDATA #IMPLIED
+	privileges	CDATA #IMPLIED
+	limit_privileges CDATA #IMPLIED >
+
+<!--
+  method_context
+
+    This element combines credential and resource management attributes
+    for execution methods.  It may contain a method_environment, or
+    a method_profile or method_credential element.
+
+    Its attributes are
+
+	working_directory The home directory to launch the method from.
+		":default" can be used as a token to indicate use of the
+		user specified by the credential or profile specified.
+
+	project	The project ID, in numeric or text form.  ":default" can
+		be used as a token to indicate use of the project
+		identified by getdefaultproj(3PROJECT) for the non-root
+		user specified by the credential or profile specified.
+		If the user is root, ":default" designates the project
+		the restarter is running in.
+
+	resource_pool The resource pool name to launch the method on.
+		":default" can be used as a token to indicate use of the
+		pool specified in the project(4) entry given in the
+		"project" attribute above.
+-->
+<!ELEMENT method_context
+	( (method_profile | method_credential)?, method_environment? ) >
+
+<!ATTLIST method_context
+	working_directory	CDATA #IMPLIED
+	project			CDATA #IMPLIED
+	resource_pool		CDATA #IMPLIED >
+
+<!-- Restarter delegation, methods, and monitors -->
+
+<!--
+  exec_method
+
+    This element describes one of the methods used by the designated
+    restarter to act on the service instance.  Its interpretation is
+    left to the restarter to which a particular service instance is
+    delegated.  It contains a set of attributes, an optional method
+    context, and an optional stability element for the optional
+    properties that can be included.
+
+    Its attributes are
+
+	type	The type of method, either "method" or "monitor".
+
+	name	Name of this execution method.  The method names are
+		usually a defined interface of the restarter to which an
+		instance of this service is delegated.
+
+	exec	The string identifying the action to take.  For
+		svc.startd(1M), this is a string suitable to pass to
+		exec(2).
+
+	timeout_seconds [integer] Duration, in seconds, to wait for this
+		method to complete.  A '0' or '-1' denotes an infinite
+		timeout.
+
+	delete	If in the repository, the property group for this method
+		should be removed.
+-->
+
+<!ELEMENT exec_method
+	( method_context?, stability?, ( propval | property )* ) >
+
+<!ATTLIST exec_method
+	type		( method | monitor ) #REQUIRED
+	name		CDATA #REQUIRED
+	exec		CDATA #REQUIRED
+	timeout_seconds	CDATA #REQUIRED
+	delete		( true | false ) "false" >
+
+<!--
+  restarter
+
+    A flag element identifying the restarter to which this service or
+    service instance is delegated.  Contains the FMRI naming the
+    delegated restarter.
+
+    This element has no attributes.
+-->
+
+<!ELEMENT restarter
+	( service_fmri ) >
+
+<!ATTLIST restarter>
+
+<!--
+  Templates
+-->
+
+<!--
+  doc_link
+
+    The doc_link relates a resource described by the given URI to the
+    service described by the containing template.  The resource is
+    expected to be a documentation or elucidatory reference of some
+    kind.
+
+    Its attributes are
+
+      name      A label for this resource.
+
+      uri       A URI to the resource.
+-->
+
+<!ELEMENT doc_link EMPTY>
+
+<!ATTLIST doc_link
+	name		CDATA #REQUIRED
+	uri		CDATA #REQUIRED >
+
+<!--
+  manpage
+
+    The manpage element connects the reference manual page to the
+    template's service.
+
+    Its attributes are
+
+      title     The manual page title.
+
+      section   The manual page's section.
+
+      manpath   The MANPATH environment variable, as described in man(1)
+                that is required to reach the named manual page
+-->
+
+<!ELEMENT manpage EMPTY>
+
+<!ATTLIST manpage
+	title		CDATA #REQUIRED
+	section		CDATA #REQUIRED
+	manpath		CDATA ":default" >
+
+<!--
+  documentation
+
+    The documentation element groups an arbitrary number of doc_link
+    and manpage references.
+
+    It has no attributes.
+-->
+
+<!ELEMENT documentation
+	( doc_link | manpage )* >
+
+<!ATTLIST documentation>
+
+<!--
+  loctext
+
+    The loctext element is a container for localized text.
+
+    Its sole attribute is
+
+	xml:lang The name of the locale, in the form accepted by LC_ALL,
+		etc.  See locale(5).
+-->
+<!ELEMENT loctext
+        (#PCDATA) >
+
+<!ATTLIST loctext
+        xml:lang	CDATA #REQUIRED >
+
+<!--
+  description
+
+    The description holds a set of potentially longer, localized strings that
+    consist of a short description of the service.
+
+    The description has no attributes.
+-->
+<!ELEMENT description
+        ( loctext+ ) >
+
+<!ATTLIST description>
+
+<!--
+  common_name
+
+    The common_name holds a set of short, localized strings that
+    represent a well-known name for the service in the given locale.
+
+    The common_name has no attributes.
+-->
+<!ELEMENT common_name
+        ( loctext+ ) >
+
+<!ATTLIST common_name>
+
+<!--
+  units
+
+    The units a numerical property is expressed in.
+-->
+
+<!ELEMENT units
+	( loctext+ ) >
+
+<!ATTLIST units>
+
+<!--
+  visibility
+
+    Expresses how a property is typically accessed.  This isn't
+    intended as access control, but as an indicator as to how a
+    property is used.
+
+    Its attributes are:
+
+      value     'hidden', 'readonly', or 'readwrite' indicating that
+		the property should be hidden from the user, shown but
+		read-only, or modifiable.
+-->
+
+<!ELEMENT visibility EMPTY>
+
+<!ATTLIST visibility
+	value	( hidden | readonly | readwrite ) #REQUIRED >
+
+<!--
+  value
+
+    Describes a legal value for a property value, and optionally contains a
+    human-readable name and description for the specified property
+    value.
+
+    Its attributes are:
+
+      name	A string representation of the value.
+-->
+
+<!ELEMENT value
+	( common_name?, description? ) >
+
+<!ATTLIST value
+	name	CDATA #REQUIRED >
+
+<!--
+  values
+
+    Human-readable names and descriptions for valid values of a property.
+-->
+
+<!ELEMENT values
+	(value+) >
+
+<!ATTLIST values>
+
+<!--
+  cardinality
+
+    Places a constraint on the number of values the property can take
+    on.
+
+    Its attributes are:
+	min	minimum number of values
+	max	maximum number of values
+
+    Both attributes are optional.  If min is not specified, it defaults to
+    0.  If max is not specified it indicates an unlimited number of values.
+    If neither is specified this indicates 0 or more values.
+-->
+
+<!ELEMENT cardinality EMPTY>
+
+<!ATTLIST cardinality
+	min	CDATA "0"
+	max	CDATA "18446744073709551615">
+
+<!--
+  internal_separators
+
+    Indicates the separators used within a property's value used to
+    separate the actual values.  Used in situations where multiple
+    values are packed into a single property value instead of using a
+    multi-valued property.
+-->
+
+<!ELEMENT internal_separators
+	(#PCDATA) >
+
+<!ATTLIST internal_separators>
+
+<!--
+  range
+
+    Indicates a range of possible integer values.
+
+    Its attributes are:
+
+      min	The minimum value of the range (inclusive).
+      max	The maximum value of the range (inclusive).
+-->
+
+<!ELEMENT range EMPTY>
+
+<!ATTLIST range
+	min	CDATA #REQUIRED
+	max	CDATA #REQUIRED >
+
+<!--
+  constraints
+
+    Provides a set of constraints on the values a property can take on.
+-->
+
+<!ELEMENT constraints
+	( value*, range* ) >
+<!ATTLIST constraints>
+
+<!--
+  include_values
+
+    Includes an entire set of values in the choices block.
+
+    Its attributes are:
+
+	type    Either "constraints" or "values", indicating an
+		inclusion of all values allowed by the property's
+		constraints or all values for which there are
+		human-readable names and descriptions, respectively.
+-->
+
+<!ELEMENT include_values EMPTY>
+
+<!ATTLIST include_values
+	type	( constraints | values ) #REQUIRED >
+
+<!--
+  choices
+
+    Provides a set of common choices for the values a property can take
+    on.  Useful in those cases where the possibilities are unenumerable
+    or merely inconveniently legion, and a manageable subset is desired
+    for presentation in a user interface.
+-->
+
+<!ELEMENT choices
+	( value*, range*, include_values* ) >
+
+<!ATTLIST choices>
+
+<!--
+  prop_pattern
+
+
+    The prop_pattern describes one property of the enclosing property group
+    pattern.
+
+    Its attributes are:
+
+	name    The property's name.
+	type    The property's type.
+	required
+		If the property group is present, this property is required.
+
+	type can be omitted if required is false.
+-->
+
+<!ELEMENT prop_pattern
+	( common_name?, description?, units?, visibility?, cardinality?,
+	  internal_separators?, values?, constraints?, choices? ) >
+
+<!ATTLIST prop_pattern
+	name		CDATA	#REQUIRED
+	type		( count | integer | opaque | host | hostname |
+			net_address | net_address_v4 | net_address_v6 | time |
+			astring | ustring | boolean | fmri | uri ) #IMPLIED
+	required	( true | false )	"false" >
+
+<!--
+  pg_pattern
+
+    The pg_pattern describes one property group.
+    Depending on the element's attributes, these descriptions may apply
+    to just the enclosing service/instance, instances of the enclosing
+    service, delegates of the service (assuming it is a restarter), or
+    all services.
+
+    Its attributes are:
+
+	name    The property group's name.  If not specified, it
+		matches all property groups with the specified type.
+	type    The property group's type.  If not specified, it
+		matches all property groups with the specified name.
+	required
+		If the property group is required.
+	target	The scope of the pattern, which may be all, delegate,
+		instance, or this.  'all' is reserved for framework use
+		and applies the template to all services on the system.
+		'delegate' is reserved for restarters, and means the
+		template applies to all services which use the restarter.
+		'this' would refer to the defining service or instance.
+		'instance' can only be used in a service's template block,
+		and means the definition applies to all instances of this
+		service.
+
+-->
+
+<!ELEMENT pg_pattern
+	( common_name?, description?, prop_pattern* ) >
+
+<!ATTLIST pg_pattern
+	name		CDATA	""
+	type		CDATA	""
+	required	( true | false )	"false"
+	target		( this | instance | delegate | all )	"this" >
+
+<!--
+  template
+
+    The template contains a collection of metadata about the service.
+    It contains a localizable string that serves as a common,
+    human-readable name for the service.  (This name should be less than
+    60 characters in a single byte locale.)  The template may optionally
+    contain a longer localizable description of the service, a
+    collection of links to documentation, either in the form of manual
+    pages or in the form of URI specifications to external documentation
+    sources (such as docs.sun.com).
+
+    The template has no attributes.
+-->
+<!ELEMENT template
+        ( common_name, description?, documentation?, pg_pattern* ) >
+
+<!ATTLIST template>
+
+<!-- Notification Parameters -->
+
+<!ELEMENT paramval EMPTY>
+
+<!ATTLIST paramval
+	name		CDATA #REQUIRED
+	value		CDATA #REQUIRED>
+
+<!ELEMENT parameter
+	( value_node* )>
+
+<!ATTLIST parameter
+	name		CDATA #REQUIRED>
+
+<!ELEMENT event EMPTY>
+
+<!ATTLIST event
+	value		CDATA #REQUIRED>
+
+<!ELEMENT type
+	( ( parameter | paramval )* )>
+
+<!ATTLIST type
+	name		CDATA #REQUIRED
+	active		( true | false ) "true" >
+
+<!--
+  notification parameters
+
+    This element sets the notification parameters for Software Events and
+    Fault Management problem lifecycle events.
+-->
+
+<!ELEMENT notification_parameters
+	( event, type+ )>
+
+<!ATTLIST notification_parameters>
+
+<!-- Services and instances -->
+
+<!--
+  create_default_instance
+
+    A flag element indicating that an otherwise empty default instance
+    of this service (named "default") should be created at install, with
+    its enabled property set as given.
+
+    Its attribute is
+
+	enabled	[boolean] The initial value for the enabled state of
+		this instance.
+-->
+
+<!ELEMENT create_default_instance EMPTY >
+
+<!ATTLIST create_default_instance
+	enabled		( true | false ) #REQUIRED >
+
+<!--
+  single_instance
+
+    A flag element stating that this service can only have a single
+    instance on a particular system.
+-->
+
+<!ELEMENT single_instance EMPTY>
+
+<!ATTLIST single_instance>
+
+<!--
+  instance
+
+    The service instance is the object representing a software component
+    that will run on the system if enabled.  It contains an enabled
+    element, a set of dependencies on other services, potentially
+    customized methods or configuration data, an optional method
+    context, and a pointer to its restarter.  (If no restarter is
+    specified, the master restarter, svc.startd(1M), is assumed to be
+    responsible for the service.)
+
+    Its attributes are
+
+	name	The canonical name for this instance of the service.
+
+	enabled	[boolean] The initial value for the enabled state of
+		this instance.
+-->
+
+<!ELEMENT instance
+	( restarter?, dependency*, dependent*, method_context?,
+	exec_method*, notification_parameters*, property_group*,
+	template? ) >
+
+<!ATTLIST instance
+	name		CDATA #REQUIRED
+	enabled		( true | false ) #REQUIRED >
+
+<!--
+  service
+
+    The service contains the set of instances defined by default for
+    this service, an optional method execution context, any default
+    methods, the template, and various restrictions or advice applicable
+    at installation.  The method execution context and template elements
+    are required for service_bundle documents with type "manifest", but
+    are optional for "profile" or "archive" documents.
+
+    Its attributes are
+
+	name	The canonical name for the service.
+
+	version	[integer] The integer version for this service.
+
+	type	Whether this service is a simple service, a delegated
+		restarter, or a milestone (a synthetic service that
+		collects a group of dependencies).
+-->
+
+<!ELEMENT service
+	( create_default_instance?, single_instance?, restarter?,
+	dependency*, dependent*, method_context?, exec_method*,
+	notification_parameters*, property_group*, instance*,
+	stability?, template? ) >
+
+<!ATTLIST service
+	name		CDATA #REQUIRED
+	version		CDATA #REQUIRED
+	type		( service | restarter | milestone ) #REQUIRED >
+
+<!--
+  service_bundle
+
+    The bundle possesses two attributes:
+
+	type	How this file is to be understood by the framework (or
+		used in a non-framework compliant way). Standard types
+		are 'archive', 'manifest', and 'profile'.
+	
+	name	A name for the bundle.  Manifests should be named after
+		the package which delivered them; profiles should be
+		named after the "feature set nickname" they intend to
+		enable.
+-->
+
+<!ELEMENT service_bundle
+	( service_bundle* | service* | xi:include* )>
+
+<!ATTLIST service_bundle
+	type		CDATA #REQUIRED
+	name		CDATA #REQUIRED>
-- 
2.21.0

