commit 941da956f06fb892b9e9872239b9a0caa22cb74b (refs/changes/13/2913/2)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2017-11-07T16:14:30+01:00 (1 year, 11 months ago)
    
    HEAD-2372 sapi-url in SAPI service metadata should use sapi_domain, not sapi_admin_ips

diff --git a/scripts/build-payload.js b/scripts/build-payload.js
index bb94a0d7..bd49f910 100755
--- a/scripts/build-payload.js
+++ b/scripts/build-payload.js
@@ -283,8 +283,16 @@ async.series([
         if (process.env.ASSETS_IP) {
             obj.customer_metadata['assets-ip'] = process.env.ASSETS_IP;
         }
-        obj.customer_metadata['sapi-url'] =
-            'http://' + config['sapi_admin_ips'];
+        // We'll use IP at first pass, since sapi service is either not
+        // running when we create these zones or not yet registered into
+        // binder. Then, we'll update at the end of the setup process.
+        if (zone === 'sapi' || zone === 'assets' || zone === 'binder') {
+            obj.customer_metadata['sapi-url'] =
+                'http://' + config['sapi_admin_ips'];
+        } else {
+            obj.customer_metadata['sapi-url'] =
+                'http://' + config['sapi_domain'];
+        }
         obj.customer_metadata['ufds_ldap_root_dn'] =
             config['ufds_ldap_root_dn'];
         obj.customer_metadata['ufds_ldap_root_pw'] =
diff --git a/scripts/headnode.sh b/scripts/headnode.sh
index 196860f0..62589f7d 100755
--- a/scripts/headnode.sh
+++ b/scripts/headnode.sh
@@ -500,7 +500,16 @@ function create_zone {
     local payload_file=/var/tmp/${zone}_payload.json
     if [[ ${USE_SAPI} && -f ${USB_COPY}/services/${zone}/service.json ]]; then
         echo "Deploy zone ${zone} (payload via SAPI)"
-        local sapi_url=http://${CONFIG_sapi_admin_ips}
+        # We'll use IP at first pass, since sapi service is either not
+        # running when we create these zones or not yet registered into
+        # binder. Then, we'll update at the end of the setup process.
+        if [[ "${zone}" == "sapi" || \
+              "${zone}" == "binder" || \
+              "${zone}" == "assets" ]]; then
+          local sapi_url=http://${CONFIG_sapi_admin_ips}
+        else
+          local sapi_url=http://${CONFIG_sapi_domain}
+        fi
 
         # HEAD-1327 for the first manatee, we want ONE_NODE_WRITE_MODE turned on
         if [[ ${zone} == "manatee" ]]; then
@@ -629,6 +638,7 @@ upload_values
 download_metadata
 write_initial_config
 registrar_setup
+mdata-put sapi-url http://${CONFIG_sapi_domain}
 HERE
         setup_state_add "sapi_bootstrapped"
     fi
@@ -676,7 +686,11 @@ function sapi_adopt()
     local service_name=$2
     local uuid=$3
 
-    local sapi_url=http://${CONFIG_sapi_admin_ips}
+    if [[ "${service_name}" == "sapi" ]]; then
+      local sapi_url=http://${CONFIG_sapi_admin_ips}
+    else
+      local sapi_url=http://${CONFIG_sapi_domain}
+    fi
 
     local service_uuid=""
     local sapi_instance=""
@@ -831,6 +845,21 @@ EOF
     # END BASHSTYLED
     chmod +x ${to_dir}/sapiadm
 
+    # Update assets0 zone sapi-url
+    vmadm update $(vmadm lookup -1 tags.smartdc_role=assets) <<EOF
+{"set_customer_metadata": {"sapi-url": "http://${CONFIG_sapi_domain}"}}
+EOF
+
+    # Update binder0 zone sapi-url
+    vmadm update $(vmadm lookup -1 tags.smartdc_role=binder) <<EOF
+{"set_customer_metadata": {"sapi-url": "http://${CONFIG_sapi_domain}"}}
+EOF
+    # Update binder service metadata.sapi-url
+    binder_svc_uuid=$(/opt/smartdc/bin/sdc-sapi \
+                      /services?name=binder|json -H 0.uuid)
+    /opt/smartdc/bin/sapiadm update ${binder_svc_uuid} \
+      metadata.sapi-url=http://${CONFIG_sapi_domain}
+
     setup_state_add "sdczones_created"
 fi
 
diff --git a/scripts/sdc-init.js b/scripts/sdc-init.js
index aea897d8..8cec9db5 100755
--- a/scripts/sdc-init.js
+++ b/scripts/sdc-init.js
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -110,7 +110,7 @@ function translateConfig(cb) {
 
     // sapi-url and assets-ip required in customer_metadata, are pushed
     // there from standard metadata by SAPI's payload creation.
-    sdcExtras.metadata['sapi-url'] = 'http://' + self.config.sapi_admin_ips;
+    sdcExtras.metadata['sapi-url'] = 'http://' + self.config.sapi_domain;
     sdcExtras.metadata['assets-ip'] = self.config.assets_admin_ip;
 
     return cb(null);
@@ -459,8 +459,18 @@ function filterServices(serviceList, cb) {
                 extras.params['customer_metadata'] = {};
             }
 
-            extras.metadata['sapi-url'] =
-                'http://' + self.config.sapi_admin_ips;
+            // We'll use IP at first pass, since sapi service is either not
+            // running when we create these zones or not yet registered into
+            // binder. Then, we'll update at the end of the setup process.
+            if (service === 'binder' ||
+                service === 'assets' ||
+                service === 'binder') {
+                extras.metadata['sapi-url'] =
+                    'http://' + self.config.sapi_admin_ips;
+            } else {
+                extras.metadata['sapi-url'] =
+                    'http://' + self.config.sapi_domain;
+            }
             extras.metadata['assets-ip'] = self.config.assets_admin_ip;
             extras.metadata['user-script'] = data.toString();
 
