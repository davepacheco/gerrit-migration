From 41240fe462e413f9cbc0d8df8fa1a4f783dc1e8b Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Fri, 15 Dec 2017 23:37:16 +0000
Subject: [PATCH] joyent/node-zkstream#27 attachAndSendCR crashes in state
 "attaching"

---
 lib/connection-fsm.js |  5 ++++
 lib/zk-session.js     |  4 +++
 test/nasty.test.js    | 60 +++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 69 insertions(+)

diff --git a/lib/connection-fsm.js b/lib/connection-fsm.js
index c4c1488..968e968 100644
--- a/lib/connection-fsm.js
+++ b/lib/connection-fsm.js
@@ -162,6 +162,11 @@ ZKConnectionFSM.prototype.state_handshaking = function (S) {
 		return;
 	}
 
+	if (this.zcf_session.isAttaching()) {
+		S.gotoState('error');
+		return;
+	}
+
 	S.on(this.zcf_session, 'stateChanged', function (st) {
 		if (st === 'attached') {
 			S.gotoState('connected');
diff --git a/lib/zk-session.js b/lib/zk-session.js
index 66da2b7..a3489d5 100644
--- a/lib/zk-session.js
+++ b/lib/zk-session.js
@@ -46,6 +46,10 @@ function ZKSession(opts) {
 }
 mod_util.inherits(ZKSession, mod_fsm.FSM);
 
+ZKSession.prototype.isAttaching = function () {
+	return (this.isInState('attaching') || this.isInState('reattaching'));
+};
+
 ZKSession.prototype.isAlive = function () {
 	if (this.zs_sessionId === undefined)
 		return (false);
diff --git a/test/nasty.test.js b/test/nasty.test.js
index cc90535..2eb458e 100644
--- a/test/nasty.test.js
+++ b/test/nasty.test.js
@@ -25,6 +25,66 @@ var pkt, pkt2;
 var connCount = 0;
 var connCb;
 
+/*
+ * Create a dummy TCP listener and close the listening socket after a short
+ * timeout. Allow time for this change to be noticed by the node-zkstream
+ * CueballConnectionSet. This should result in the corresponding
+ * ConnectionSlotFSM being marked dead and a monitor mode ConnectionSlotFSM
+ * being created. When the dummy TCP listener comes back online, this change
+ * should be noticed by the ZKClient StaticIpResolver which will result in the
+ * monitor mode connection and the connection marked dead to race to attach to a
+ * session. This can result in one of the ConnectionSlotFSMs seeing the session
+ * state 'attaching' or 'reattaching'. This test verifies that the client
+ * doesn't crash in this case.
+ */
+mod_tape.test('attachAndSendCR race', function (t) {
+	var WAIT_BEFORE_CLOSE = 10000;
+	var WAIT_BEFORE_RELISTEN = 13000;
+	var TEST_TIMEOUT = 25000;
+
+	var zk1 = mod_net.createServer();
+	var zk2 = mod_net.createServer();
+
+	zk1.listen(2181, function () {
+		log.trace('zk server 1 - listening');
+		setTimeout(function () {
+			log.trace('zk server 1 - closing');
+			zk1.close(function () {
+				setTimeout(function () {
+					zk1.listen(2181, function () {
+						log.trace('zk server 1 - listening');
+					});
+				}, WAIT_BEFORE_RELISTEN);
+			});
+		}, WAIT_BEFORE_CLOSE);
+	});
+	zk2.listen(2182, function () {
+		log.trace('zk server 2 - listening');
+	});
+
+	var zkc = new mod_zkc.Client({
+		log: log,
+		servers: [ {
+			address: '127.0.0.1',
+			port: 2181
+		}, {
+			address: '127.0.0.1',
+			port: 2182
+		} ]
+	});
+
+	zkc.on('failed', function () {
+		log.trace('received failed event');
+	});
+
+	setTimeout(function () {
+		zk1.close();
+		zk2.close();
+		zkc.close();
+		t.end();
+	}, TEST_TIMEOUT);
+});
+
 mod_tape.test('start awful zk server', function (t) {
 	zk = mod_net.createServer();
 	zk.on('connection', function (sock) {
-- 
2.21.0

