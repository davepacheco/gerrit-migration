From 17ebb83bea45eb854e1aac794fca484999ed9758 Mon Sep 17 00:00:00 2001
From: Julien Gilli <julien.gilli@joyent.com>
Date: Fri, 21 Oct 2016 19:02:31 -0700
Subject: [PATCH] IMGAPI-599 IMGAPI client broken since 10.0.0

---
 CHANGES.md          |  4 ++++
 lib/imgapi.js       | 10 +++++-----
 package.json        |  4 ++--
 test/imgapi.test.js | 42 ++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 53 insertions(+), 7 deletions(-)
 create mode 100644 test/imgapi.test.js

diff --git a/CHANGES.md b/CHANGES.md
index 216ec15..4ea0b31 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -12,6 +12,10 @@
 
 ## not yet released
 
+## 10.0.3
+
+- IMGAPI-599 IMGAPI client broken since 10.0.0.
+
 ## 10.0.2
 
 - TOOLS-1584 Ensure 'filters.channel' passed to IMGAPI.listImages wins over a
diff --git a/lib/imgapi.js b/lib/imgapi.js
index 4dbfdd7..eef28e7 100644
--- a/lib/imgapi.js
+++ b/lib/imgapi.js
@@ -65,7 +65,7 @@ var async = require('async');
 var once = require('once');
 var WError = require('verror').WError;
 var assert = require('assert-plus');
-var restify = require('restify');
+var restifyClients = require('restify-clients');
 var mod_url = require('url');
 var backoff = require('backoff');
 var auth = require('smartdc-auth');
@@ -294,17 +294,17 @@ function IMGAPI(options) {
     if (options.log && options.log.serializers &&
         !options.log.serializers.client_req) {
         options.log = options.log.child({
-            serializers: restify.bunyan.serializers
+            serializers: restifyClients.bunyan.serializers
         });
     }
     if (options.version === undefined) {
         options.version = '*';
     }
-    this.client = restify.createJsonClient(options);
+    this.client = restifyClients.createJsonClient(options);
     // Work around <https://github.com/mcavage/node-restify/pull/291>.
     // Switch to `restify.createHttpClient` when that pull is in.
     options.type = 'http';
-    this.rawClient = restify.createClient(options);
+    this.rawClient = restifyClients.createClient(options);
     if (options.password) {
         assert.string(options.user, 'options.password, but no options.user');
         this.client.basicAuth(options.user, options.password);
@@ -1197,7 +1197,7 @@ function waitForJob(url, job_uuid, cb) {
     assert.string(job_uuid, 'job_uuid');
     assert.func(cb, 'cb');
 
-    var client = restify.createJsonClient({url: url, agent: false});
+    var client = restifyClients.createJsonClient({url: url, agent: false});
     pollJob(client, job_uuid, function (err, job) {
         if (err)
             return cb(err);
diff --git a/package.json b/package.json
index f93cf6d..2e118ae 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdc-clients",
   "description": "node.js client libraries for Triton core REST APIs.",
-  "version": "10.0.2",
+  "version": "10.0.3",
   "homepage": "http://www.joyent.com",
   "repository": {
     "type": "git",
@@ -17,7 +17,7 @@
     "lru-cache": "2.3.0",
     "libuuid": "0.2.1",
     "once": "^1.3.1",
-    "restify-clients": "^1.4.0",
+    "restify-clients": "^1.4.1",
     "restify-errors": "^3.0.0",
     "vasync": "^1.6.2",
     "verror": "^1.6.0",
diff --git a/test/imgapi.test.js b/test/imgapi.test.js
new file mode 100644
index 0000000..2db88ad
--- /dev/null
+++ b/test/imgapi.test.js
@@ -0,0 +1,42 @@
+var bunyan = require('bunyan');
+var test = require('tape');
+
+var IMGAPI = require('../lib/index').IMGAPI;
+
+var IMGAPI_URL = 'http://' + (process.env.IMGAPI_IP || '10.99.99.21');
+
+var imgapi;
+
+test('imgapi', function (tt) {
+    tt.test(' setup', function (t) {
+        var log = bunyan.createLogger({
+            name: 'imgapi_unit_test',
+            stream: process.stderr,
+            level: (process.env.LOG_LEVEL || 'info'),
+            serializers: bunyan.stdSerializers
+        });
+
+        imgapi = new IMGAPI({
+            url: IMGAPI_URL,
+            retry: {
+                retries: 1,
+                minTimeout: 1000
+            },
+            log: log
+        });
+
+        t.end();
+    });
+
+    tt.test('ping', function (t) {
+        imgapi.ping(function onPing(pingErr) {
+            t.ifError(pingErr, 'pinging IMGAPI should be successful');
+            t.end();
+        });
+    });
+
+    tt.test('teardown', function (t) {
+        imgapi.close();
+        t.end();
+    });
+});
-- 
2.21.0

