commit 94ed5f18b75eff274b0de77af81082622e74af99 (refs/changes/32/5432/1)
Author: Rui Loura <rui@joyent.com>
Date:   2019-01-25T15:33:52-05:00 (9 months ago)
    
    TRITON-1160 node-triton-netconfig adminIpFromSysinfo should account for "dhcp" value

diff --git a/CHANGES.md b/CHANGES.md
index e710887..ad51f1e 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -4,6 +4,10 @@
 
 (nothing yet)
 
+## 1.2.0
+
+* TRITON-1160 node-triton-netconfig adminIpFromSysinfo should account for "dhcp" value
+
 ## 1.1.0
 
 * TRITON-1073 adminIpFromNicsArray in node-triton-netconfig
diff --git a/lib/index.js b/lib/index.js
index 3fbc6ce..cc29974 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -8,6 +8,8 @@
  * Copyright (c) 2019, Joyent, Inc.
  */
 
+var ip6addr = require('ip6addr');
+
 // ---- Internal
 
 var RACK_RE = '(_rack_[A-Z0-9_-]+)?$';
@@ -46,6 +48,15 @@ function _isNetNicCommon(nic, network) {
     return re.test(nic.nic_tag);
 }
 
+function _isValidIpAddress(ip) {
+    try {
+        ip6addr.parse(ip);
+        return true;
+    } catch (e) { // eslint-disable-line no-unused-vars
+        return false;
+    }
+}
+
 // ---- Exports
 
 /*
@@ -79,10 +90,15 @@ function adminNicFromSysinfo(sysinfo) {
 
 /*
  * Given a CN's sysinfo in JSON format return the admin IP.
+ *
+ * The "Admin IP" value can be set to "dhcp", so this first checks if it is a
+ * valid IP address, and if not it tries to dig it out of sysinfo.
  */
 function adminIpFromSysinfo(sysinfo) {
-    if (sysinfo['Admin IP']) {
-        return sysinfo['Admin IP'];
+    var sys_admin_ip = sysinfo['Admin IP'];
+
+    if (sys_admin_ip && _isValidIpAddress(sys_admin_ip)) {
+        return sys_admin_ip;
     }
 
     var nic = adminNicFromSysinfo(sysinfo);
diff --git a/package.json b/package.json
index 17e6138..8ce53f6 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "triton-netconfig",
-  "version": "1.1.0",
+  "version": "1.2.0",
   "description": "Common methods for managing Triton network configuration",
   "repository": {
     "type": "git",
@@ -20,6 +20,9 @@
   "files": [
     "lib"
   ],
+  "dependencies": {
+    "ip6addr": "0.2.0"
+  },
   "devDependencies": {
     "eslint": "4.13.1",
     "eslint-config-prettier": "^2.9.0",
diff --git a/test/unit/main.test.js b/test/unit/main.test.js
index 115d57b..82b214c 100644
--- a/test/unit/main.test.js
+++ b/test/unit/main.test.js
@@ -121,11 +121,15 @@ tap.test('sysinfo', function (tt) {
         var no_admin_tag = jsprim.deepCopy(sysinfo);
         delete no_admin_tag['Admin NIC Tag'];
 
+        var dhcp_admin_ip = jsprim.deepCopy(sysinfo) 
+        dhcp_admin_ip['Admin IP'] = 'dhcp';
+
         t.equal(sysinfo['Admin IP'], admin_ip);
         t.ok(admin_tags.indexOf(sysinfo['Admin NIC Tag']) !== -1);
 
         t.equal(netconf.adminIpFromSysinfo(sysinfo), admin_ip);
         t.equal(netconf.adminIpFromSysinfo(no_admin_ip), admin_ip);
+        t.equal(netconf.adminIpFromSysinfo(dhcp_admin_ip), admin_ip);
         t.equal(netconf.adminIpFromSysinfo(no_admin_tag), admin_ip);
 
         t.end();
@@ -143,11 +147,15 @@ tap.test('sysinfo', function (tt) {
         var no_admin_tag = jsprim.deepCopy(sysinfo);
         delete no_admin_tag['Admin NIC Tag'];
 
+        var dhcp_admin_ip = jsprim.deepCopy(sysinfo) 
+        dhcp_admin_ip['Admin IP'] = 'dhcp';
+
         t.equal(sysinfo['Admin IP'], admin_ip);
         t.ok(admin_tags.indexOf(sysinfo['Admin NIC Tag']) !== -1);
 
         t.equal(netconf.adminIpFromSysinfo(sysinfo), admin_ip);
         t.equal(netconf.adminIpFromSysinfo(no_admin_ip), admin_ip);
+        t.equal(netconf.adminIpFromSysinfo(dhcp_admin_ip), admin_ip);
         t.equal(netconf.adminIpFromSysinfo(no_admin_tag), admin_ip);
 
         t.end();
