From 63664348c64badf25d24d5d193d2eb14ca332106 Mon Sep 17 00:00:00 2001
From: Patrick Mooney <pmooney@pfmooney.com>
Date: Tue, 19 Feb 2019 22:05:03 +0000
Subject: [PATCH] OS-7591 viona should be strict about cksum offsets

---
 usr/src/uts/i86pc/io/viona/viona.c | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/usr/src/uts/i86pc/io/viona/viona.c b/usr/src/uts/i86pc/io/viona/viona.c
index 5fd5ddb5ea..e49bcc1561 100644
--- a/usr/src/uts/i86pc/io/viona/viona.c
+++ b/usr/src/uts/i86pc/io/viona/viona.c
@@ -2634,17 +2634,27 @@ viona_tx_csum(viona_vring_t *ring, const struct virtio_net_hdr *hdr,
 	 */
 	if ((link->l_cap_csum & HCKSUM_INET_PARTIAL) != 0 &&
 	    (ipproto == IPPROTO_TCP || ipproto == IPPROTO_UDP)) {
-		uint_t start, stuff, end;
+		const uint_t start = hdr->vrh_csum_start;
+		const uint_t stuff = hdr->vrh_csum_offset + start;
+
+		/*
+		 * Validate that the offsets provided by the guest are within
+		 * the bounds of their packet.
+		 */
+		if (start >= len || start < eth_len || stuff >= len) {
+			VIONA_PROBE2(fail_hcksum, viona_link_t *, link,
+			    mblk_t *, mp);
+			VIONA_RING_STAT_INCR(ring, fail_hcksum);
+			return (B_FALSE);
+		}
 
 		/*
 		 * MAC expects these offsets to be relative to the
 		 * start of the L3 header rather than the L2 frame.
 		 */
-		start = hdr->vrh_csum_start - eth_len;
-		stuff = start + hdr->vrh_csum_offset;
-		end = len - eth_len;
 		flags |= HCK_PARTIALCKSUM;
-		mac_hcksum_set(mp, start, stuff, end, 0, flags);
+		mac_hcksum_set(mp, start - eth_len, stuff - eth_len,
+		    len - eth_len, 0, flags);
 		return (B_TRUE);
 	}
 
-- 
2.21.0

