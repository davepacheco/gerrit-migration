From 0a1b6b60499d01b400239d2f8a9a4f603c9c9d9f Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Fri, 7 Apr 2017 16:31:20 +0200
Subject: [PATCH] TOOLS-1731 sdcadm post-setup common-external-nics should set
 external network as primary Reviewed by: Trent Mick <trentm@gmail.com>

---
 lib/cli/do_update_other.js | 73 ++++++++++++++++++++++++++++++++++++++
 lib/procedures/shared.js   |  2 +-
 lib/sdcadm.js              |  5 ++-
 lib/ur.js                  |  2 +-
 4 files changed, 79 insertions(+), 3 deletions(-)

diff --git a/lib/cli/do_update_other.js b/lib/cli/do_update_other.js
index f019750..5a471ce 100644
--- a/lib/cli/do_update_other.js
+++ b/lib/cli/do_update_other.js
@@ -755,6 +755,79 @@ function do_update_other(subcmd, opts, args, cb) {
             }, next);
         },
 
+        /*
+         * Clean up after older vers of 'sdcadm post-setup common-external-nics'
+         * that did not set the "external" NIC to be the primary.
+         */
+        function updateCommonExternalNics(ctx, next) {
+            var initialNetworks = ['admin'];
+            var oldNetworks = ['admin', 'external'];
+            var newNetworks = [
+                { name: 'admin' },
+                { name: 'external', primary: true}
+            ];
+            var toUpdateItems = [];
+
+            var svcs = ctx.svcs.filter(function (svc) {
+                return (svc.name === 'adminui' || svc.name === 'imgapi');
+            });
+
+            self.sdcadm.checkMissingExternalNics({
+                progress: progress
+            }, function (sdcadmErr, vmsNics) {
+                if (sdcadmErr) {
+                    next(sdcadmErr);
+                    return;
+                }
+
+                /*
+                 * vmsNics has two members: doimgapi and doadminui which
+                 * will be true if adding the nics to imgapi0 or adminui0 is
+                 * still pending and, on that case, we can safely skip the
+                 * service here, otherwise, we need to update params.
+                 */
+                svcs.forEach(function (svc) {
+                    if (!vmsNics['do' + svc.name] &&
+                        svc.params &&
+                        (jsprim.deepEqual(svc.params.networks, oldNetworks) ||
+                        jsprim.deepEqual(svc.params.networks, initialNetworks))
+                    ) {
+                        toUpdateItems.push({
+                            svcName: svc.name,
+                            svcUuid: svc.uuid,
+                            paramsNetworks: newNetworks
+                        });
+                    }
+
+                    if (toUpdateItems.length === 0) {
+                        next();
+                        return;
+                    }
+                });
+
+                vasync.forEachPipeline({
+                    inputs: toUpdateItems,
+                    func: function handleOneUpdateItem(item, nextItem) {
+                        progress('Update "%s" service params.networks to ' +
+                            'ensure the external NIC is primary',
+                            item.svcName);
+                        updateService(item.svcUuid, {
+                            params: {
+                                networks: item.paramsNetworks
+                            }
+                        }, function (updateErr) {
+                            if (updateErr) {
+                                nextItem(new errors.SDCClientError(
+                                    updateErr, 'sapi'));
+                            } else {
+                                nextItem();
+                            }
+                        });
+                    }
+                }, next);
+            });
+        },
+
         steps.agentServicesEnsureCreated
 
     ]}, function (err) {
diff --git a/lib/procedures/shared.js b/lib/procedures/shared.js
index f0632a4..bc4f2a7 100644
--- a/lib/procedures/shared.js
+++ b/lib/procedures/shared.js
@@ -820,7 +820,7 @@ function reprovisionRemote(opts, callback) {
     ur.exec({
         sdcadm: sdcadm,
         server: opts.server,
-        execTimeout: 300,
+        execTimeout: 300 * 1000,
         cmd: format('/usr/sbin/vmadm reprovision %s <<< \'%s\'',
                 opts.zonename, reproJSON)
     }, function (execErr, result) {
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 3b99fbd..6577211 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -6212,7 +6212,10 @@ setupCommonExternalNics(opts, cb) {
 
             self.sapi.updateService(svcArr[0].uuid, {
                 params: {
-                    networks: ['admin', 'external']
+                    networks: [
+                        { name: 'admin' },
+                        { name: 'external', primary: true}
+                    ]
                 }
             }, function (err) {
                 if (err) {
diff --git a/lib/ur.js b/lib/ur.js
index 281985e..3165a12 100644
--- a/lib/ur.js
+++ b/lib/ur.js
@@ -66,7 +66,7 @@ function execOnAllNodes(opts, cb) {
  *      - cmd {String} The command/script to run.
  *      - server {UUID} The UUID of the server on which to run.
  *      - log {Bunyan Logger} Optional.
- *      - execTimeout {Number} Optional. Default 30s.
+ *      - execTimeout {Number} in milliseconds. Optional. Default 30s.
  *      - env {Object} Optional. Default '{}'.
  * @param cb {Function} `function (err, result)`
  */
-- 
2.21.0

