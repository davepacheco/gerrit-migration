From ed746ba045fa03d861d644c61bce66b86a734b5f Mon Sep 17 00:00:00 2001
From: Hans Rosenfeld <hans.rosenfeld@joyent.com>
Date: Thu, 13 Jul 2017 17:40:13 +0200
Subject: [PATCH] OS-6233 want ddi_ffsll, ddi_flsll Reviewed by: Jerry Jelinek
 <jerry.jelinek@joyent.com> Reviewed by: Patrick Mooney
 <patrick.mooney@joyent.com> Approved by: Jerry Jelinek
 <jerry.jelinek@joyent.com>

---
 manifest                                      |   2 +
 usr/src/man/man9f/Makefile                    |   4 +
 usr/src/man/man9f/ddi_ffs.9f                  | 157 ++++++++++--------
 usr/src/pkg/manifests/system-kernel.man9f.inc |   2 +
 usr/src/uts/common/os/sunddi.c                |  14 +-
 usr/src/uts/common/sys/sunddi.h               |   6 +
 6 files changed, 116 insertions(+), 69 deletions(-)

diff --git a/manifest b/manifest
index 092bd29db6..0fa226d31c 100644
--- a/manifest
+++ b/manifest
@@ -19429,7 +19429,9 @@ f usr/share/man/man9f/ddi_driver_name.9f 0444 root bin
 f usr/share/man/man9f/ddi_enter_critical.9f 0444 root bin
 s usr/share/man/man9f/ddi_exit_critical.9f=ddi_enter_critical.9f
 f usr/share/man/man9f/ddi_ffs.9f 0444 root bin
+s usr/share/man/man9f/ddi_ffsll.9f=ddi_ffs.9f
 s usr/share/man/man9f/ddi_fls.9f=ddi_ffs.9f
+s usr/share/man/man9f/ddi_flsll.9f=ddi_ffs.9f
 f usr/share/man/man9f/ddi_fm_acc_err_clear.9f 0444 root bin
 f usr/share/man/man9f/ddi_fm_acc_err_get.9f 0444 root bin
 s usr/share/man/man9f/ddi_fm_capable.9f=ddi_fm_init.9f
diff --git a/usr/src/man/man9f/Makefile b/usr/src/man/man9f/Makefile
index b2f4b32fac..3d02d6e075 100644
--- a/usr/src/man/man9f/Makefile
+++ b/usr/src/man/man9f/Makefile
@@ -755,7 +755,9 @@ MANLINKS=	AVL_NEXT.9f					\
 		ddi_dmae_release.9f				\
 		ddi_dmae_stop.9f				\
 		ddi_exit_critical.9f				\
+		ddi_ffsll.9f					\
 		ddi_fls.9f					\
+		ddi_flsll.9f					\
 		ddi_fm_capable.9f				\
 		ddi_fm_dma_err_clear.9f				\
 		ddi_fm_dma_err_get.9f				\
@@ -1556,7 +1558,9 @@ ddi_dmae_stop.9f			:= LINKSRC = ddi_dmae.9f
 
 ddi_exit_critical.9f			:= LINKSRC = ddi_enter_critical.9f
 
+ddi_ffsll.9f				:= LINKSRC = ddi_ffs.9f
 ddi_fls.9f				:= LINKSRC = ddi_ffs.9f
+ddi_flsll.9f				:= LINKSRC = ddi_ffs.9f
 
 ddi_fm_dma_err_clear.9f			:= LINKSRC = ddi_fm_acc_err_clear.9f
 
diff --git a/usr/src/man/man9f/ddi_ffs.9f b/usr/src/man/man9f/ddi_ffs.9f
index afd1e13dbd..e6d5c1dfe2 100644
--- a/usr/src/man/man9f/ddi_ffs.9f
+++ b/usr/src/man/man9f/ddi_ffs.9f
@@ -3,74 +3,95 @@
 .\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
 .\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
 .\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
-.TH DDI_FFS 9F "Jun 5, 2013"
-.SH NAME
-ddi_ffs, ddi_fls \- find first (last) bit set in a long integer
-.SH SYNOPSIS
-.LP
-.nf
-#include <sys/conf.h>
-#include <sys/ddi.h>
-#include <sys/sunddi.h>
-
-
-
-\fBint\fR \fBddi_ffs\fR(\fBlong\fR \fImask\fR);
-.fi
-
-.LP
-.nf
-\fBint\fR \fBddi_fls\fR(\fBlong\fR \fImask\fR);
-.fi
-
-.SH INTERFACE LEVEL
-.sp
-.LP
+.Dd July 14, 2017
+.Dt DDI_FFS 9F
+.Os
+.Sh NAME
+.Nm ddi_ffs, ddi_ffsll, ddi_fls, ddi_flsll
+.Nd find first (last) bit set in a long (long) integer
+.Sh SYNOPSIS
+.In sys/conf.h
+.In sys/ddi.h
+.In sys/sunddi.h
+.Ft int
+.Fo "ddi_ffs"
+.Fa "long mask"
+.Fc
+.Ft int
+.Fo "ddi_fls"
+.Fa "long mask"
+.Fc
+.Ft int
+.Fo "ddi_ffs"
+.Fa "long long mask"
+.Fc
+.Ft int
+.Fo "ddi_fls"
+.Fa "long long mask"
+.Fc
+.Sh INTERFACE LEVEL
 Solaris DDI specific (Solaris DDI).
-.SH PARAMETERS
-.sp
-.ne 2
-.na
-\fB\fImask\fR\fR
-.ad
-.RS 8n
-A 32-bit argument value to search through.
-.RE
-
-.SH DESCRIPTION
-.sp
-.LP
-The function \fBddi_ffs()\fR takes its argument and returns the shift count
-that the first (least significant) bit set in the argument corresponds to. The
-function \fBddi_fls()\fR does the same, only it returns the shift count for the
-last (most significant) bit set in the argument.
-.SH RETURN VALUES
-.sp
-.ne 2
-.na
-\fB\fB0\fR\fR
-.ad
-.RS 5n
+.Sh PARAMETERS
+.Bl -tag -width Va
+.It Fa mask
+A 32-bit or 64-bit argument value to search through.
+.El
+.Sh DESCRIPTION
+The functions
+.Fn ddi_ffs
+and
+.Fn ddi_ffsll
+take their argument and return the shift count that the first (least
+significant) bit set in the argument corresponds to.
+The functions
+.Fn ddi_fls
+and
+.Fn ddi_flsll
+do the same, only they returns the shift count for the last (most
+significant) bit set in the argument.
+.Fn ddi_ffs
+and
+.Fn ddi_fls
+operate on 32-bit values, while
+.Fn ddi_ffsll
+and
+.Fn ddi_flsll
+operate on 64-bit values.
+.Sh CONTEXT
+These functions can be called from user, interrupt, or kernel context.
+.Sh RETURN VALUES
+.Bl -tag -width Va
+.It 0
 No bits are set in mask.
-.RE
-
-.sp
-.ne 2
-.na
-\fB\fIN\fR\fR
-.ad
-.RS 5n
-Bit  \fIN\fR is the least significant (\fBddi_ffs\fR) or most significant
-(\fBddi_fls\fR) bit set in mask. Bits are numbered from  \fB1\fR to  \fB32\fR,
-with bit \fB1\fR being the least significant bit position and bit \fB32\fR the
-most significant position.
-.RE
-
-.SH CONTEXT
-.sp
-.LP
-This function can be called from user, interrupt, or kernel context.
-.SH SEE ALSO
-.sp
-.LP
+.It N
+Bit
+.Em N
+is the least significant
+.Po
+.Fn ddi_ffs ,
+.Fn ddi_ffsll
+.Pc
+or most significant
+.Po
+.Fn ddi_fls ,
+.Fn ddi_flsll
+.Pc
+bit set in
+.Fa mask .
+Bits are numbered from
+.Em 1
+to
+.Em 32
+or
+.Em 64 ,
+with bit
+.Em 1
+being the least significant bit position and bit
+.Em 32
+or
+.Em 64
+the most significant position, depending on the variant of the
+functions used.
+.El
+.Sh SEE ALSO
 \fIWriting Device Drivers\fR
diff --git a/usr/src/pkg/manifests/system-kernel.man9f.inc b/usr/src/pkg/manifests/system-kernel.man9f.inc
index 8f82c38cec..f613ee4800 100644
--- a/usr/src/pkg/manifests/system-kernel.man9f.inc
+++ b/usr/src/pkg/manifests/system-kernel.man9f.inc
@@ -716,7 +716,9 @@ link path=usr/share/man/man9f/ddi_dmae_release.9f target=ddi_dmae.9f
 link path=usr/share/man/man9f/ddi_dmae_stop.9f target=ddi_dmae.9f
 link path=usr/share/man/man9f/ddi_exit_critical.9f \
     target=ddi_enter_critical.9f
+link path=usr/share/man/man9f/ddi_ffsll.9f target=ddi_ffs.9f
 link path=usr/share/man/man9f/ddi_fls.9f target=ddi_ffs.9f
+link path=usr/share/man/man9f/ddi_flsll.9f target=ddi_ffs.9f
 link path=usr/share/man/man9f/ddi_fm_capable.9f target=ddi_fm_init.9f
 link path=usr/share/man/man9f/ddi_fm_dma_err_clear.9f \
     target=ddi_fm_acc_err_clear.9f
diff --git a/usr/src/uts/common/os/sunddi.c b/usr/src/uts/common/os/sunddi.c
index ede7da413b..b1727729de 100644
--- a/usr/src/uts/common/os/sunddi.c
+++ b/usr/src/uts/common/os/sunddi.c
@@ -5903,6 +5903,12 @@ ddi_ffs(long mask)
 	return (ffs(mask));
 }
 
+int
+ddi_ffsll(long long mask)
+{
+	return (ffs(mask));
+}
+
 /*
  * Find last bit set. Take mask and clear
  * all but the most significant bit, and
@@ -5913,9 +5919,15 @@ ddi_ffs(long mask)
 
 int
 ddi_fls(long mask)
+{
+	return (ddi_flsll(mask));
+}
+
+int
+ddi_flsll(long long mask)
 {
 	while (mask) {
-		long nx;
+		long long nx;
 
 		if ((nx = (mask & (mask - 1))) == 0)
 			break;
diff --git a/usr/src/uts/common/sys/sunddi.h b/usr/src/uts/common/sys/sunddi.h
index 1d94c8fd2c..b260971a89 100644
--- a/usr/src/uts/common/sys/sunddi.h
+++ b/usr/src/uts/common/sys/sunddi.h
@@ -1584,9 +1584,15 @@ ddi_streams_driver(dev_info_t *dip);
 int
 ddi_ffs(long mask);
 
+int
+ddi_ffsll(long long mask);
+
 int
 ddi_fls(long mask);
 
+int
+ddi_flsll(long long mask);
+
 /*
  * The ddi_soft_state* routines comprise generic storage management utilities
  * for driver soft state structures.  Two types of soft_state indexes are
-- 
2.21.0

