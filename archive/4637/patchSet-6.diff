From 103b229de957139cb321fefcbee9fa8ae3b0fbba Mon Sep 17 00:00:00 2001
From: Patrick Mooney <pmooney@pfmooney.com>
Date: Thu, 2 Aug 2018 18:52:49 +0000
Subject: [PATCH] OS-7104 export hrtime params for pvclock impls Reviewed by:
 John Levon <john.levon@joyent.com> Reviewed by: Robert Mustacchi
 <rm@joyent.com> Reviewed by: Mike Gerdts <mike.gerdts@joyent.com> Approved
 by: Mike Gerdts <mike.gerdts@joyent.com>

---
 usr/src/uts/i86pc/os/timestamp.c  | 62 +++++++++++++++++++++++++++++--
 usr/src/uts/i86pc/sys/machsystm.h |  2 +
 2 files changed, 60 insertions(+), 4 deletions(-)

diff --git a/usr/src/uts/i86pc/os/timestamp.c b/usr/src/uts/i86pc/os/timestamp.c
index 7344e1a492..bce08717dc 100644
--- a/usr/src/uts/i86pc/os/timestamp.c
+++ b/usr/src/uts/i86pc/os/timestamp.c
@@ -25,7 +25,7 @@
  *
  * Copyright 2012 Nexenta Systems, Inc. All rights reserved.
  * Copyright (c) 2014, 2016 by Delphix. All rights reserved.
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -280,10 +280,64 @@ tsc_gethrtime_tick_delta(void)
 	return (hrt);
 }
 
+/* Calculate the hrtime while exposing the parameters of that calculation. */
+hrtime_t
+tsc_gethrtime_params(uint64_t *tscp, uint32_t *scalep, uint8_t *shiftp)
+{
+	uint32_t old_hres_lock, scale;
+	hrtime_t tsc, last, base;
+
+	do {
+		old_hres_lock = hres_lock;
+
+		if (gethrtimef == tsc_gethrtime_delta) {
+			ulong_t flags;
+
+			flags = clear_int_flag();
+			tsc = tsc_read() + tsc_sync_tick_delta[CPU->cpu_id];
+			restore_int_flag(flags);
+		} else {
+			tsc = tsc_read();
+		}
+
+		last = tsc_last;
+		base = tsc_hrtime_base;
+		scale = nsec_scale;
+
+	} while ((old_hres_lock & ~1) != hres_lock);
+
+	/* See comments in tsc_gethrtime() above */
+	if (tsc >= last) {
+		tsc -= last;
+	} else if (tsc >= last - 2 * tsc_max_delta) {
+		tsc = 0;
+	} else {
+		tsc = tsc_protect(tsc);
+	}
+
+	TSC_CONVERT_AND_ADD(tsc, base, nsec_scale);
+
+	if (tscp != NULL) {
+		/*
+		 * Do not simply communicate the delta applied to the hrtime
+		 * base, but rather the effective TSC measurement.
+		 */
+		*tscp = tsc + last;
+	}
+	if (scalep != NULL) {
+		*scalep = scale;
+	}
+	if (shiftp != NULL) {
+		*shiftp = NSEC_SHIFT;
+	}
+
+	return (base);
+}
+
 /*
- * This is similar to the above, but it cannot actually spin on hres_lock.
- * As a result, it caches all of the variables it needs; if the variables
- * don't change, it's done.
+ * This is similar to tsc_gethrtime_delta, but it cannot actually spin on
+ * hres_lock.  As a result, it caches all of the variables it needs; if the
+ * variables don't change, it's done.
  */
 hrtime_t
 dtrace_gethrtime(void)
diff --git a/usr/src/uts/i86pc/sys/machsystm.h b/usr/src/uts/i86pc/sys/machsystm.h
index 10553f9eda..7f9559a7da 100644
--- a/usr/src/uts/i86pc/sys/machsystm.h
+++ b/usr/src/uts/i86pc/sys/machsystm.h
@@ -25,6 +25,7 @@
 /*
  * Copyright (c) 2010, Intel Corporation.
  * All rights reserved.
+ * Copyright 2018 Joyent, Inc.
  */
 
 #ifndef _SYS_MACHSYSTM_H
@@ -231,6 +232,7 @@ extern page_t *page_get_high_mfn(mfn_t);
 #endif
 
 extern hrtime_t tsc_gethrtime_tick_delta(void);
+extern hrtime_t tsc_gethrtime_params(uint64_t *, uint32_t *, uint8_t *);
 
 #endif /* _KERNEL */
 
-- 
2.21.0

