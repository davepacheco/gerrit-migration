commit d706d1a2456af0730ba910fd215df34db4041151 (refs/changes/90/1690/2)
Author: Marsell Kukuljevic <marsell@joyent.com>
Date:   2017-03-21T21:25:22+13:00 (2 years, 7 months ago)
    
    PAPI-135: Encode ListPackages args to prevent any LDIF injections, while still allowing wildcards

diff --git a/docs/index.md b/docs/index.md
index 446572a..d4f57c5 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -384,25 +384,11 @@ Returns a list of Packages matching the specified search filter.
 
 ### Security Warning
 
-Since PAPI exposes several features of LDIF search filters, this entails that it
-does not escape any values (most importantly: strings). If you're not using
-features like '*' when querying, and you're searching for literal strings, then
-make sure to encode those strings. Here's Javascript that can do that for you:
+Since PAPI allows wildcard searches, if you want your queries to only search for
+literal strings, make sure to escape the '*' character with '{\\2a}'.
+E.g. in Javascript:
 
-    return val.replace('(',  '{\\28}').
-               replace(')',  '{\\29}').
-               replace('\\', '{\\5c}').
-               replace('*',  '{\\2a}').
-               replace('/',  '{\\2f}');
-
-If you're using values that could have potentially come from adversaries, even
-indirectly, always encode all strings (including strings in arrays). If you do
-not, an attacker could potentially sneak something like this past:
-
-    GET /packages?owner_uuids=*
-
-It's highly unlikely you want anybody other than operators to have that power.
-When in doubt, encode.
+    val = val.replace(/\*/g,  '{\\2a}');
 
 
 ### Inputs
diff --git a/lib/papi.js b/lib/papi.js
index 54aac21..f31458c 100644
--- a/lib/papi.js
+++ b/lib/papi.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -842,10 +842,8 @@ function searchFilter(params, schema) {
 
 
 /*
- * This function escapes text for LDIF search filters.
- *
- * It's currently disabled. If you want to reenable escaping, remove the
- * relevant return below.
+ * This function escapes text for LDIF search filters, with the exception of
+ * '*', since it's useful in many queries.
  */
 
 function esc(val, type) {
@@ -855,14 +853,14 @@ function esc(val, type) {
     if (typeof (val) !== 'string')
         return val;
 
-    // disabled
-    return val;
-
-//    return val.replace('(',  '{\\28}').
-//               replace(')',  '{\\29}').
-//               replace('\\', '{\\5c}').
-//               replace('*',  '{\\2a}').
-//               replace('/',  '{\\2f}');
+    return val.replace(/\\/g, '{\\5c}').
+               replace(/\//g, '{\\2f}').
+               replace(/\(/g, '{\\28}').
+               replace(/\)/g, '{\\29}').
+               /* BEGIN JSSTYLED */
+               replace(/\=/g, '{\\3d}').
+               replace(/,/g,  '{\\2c}');
+               /* END JSSTYLED */
 }
 
 
diff --git a/test/api.test.js b/test/api.test.js
index 27ef1a5..bb62c95 100644
--- a/test/api.test.js
+++ b/test/api.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -596,6 +596,24 @@ test('GET /packages (Search by multiple fields)', function (t) {
 
 
 
+test('GET /packages (Search with LDIF injection attempt)', function (t) {
+    var query = '/packages?name=api_test_*&networks=*)(owner_uuids=*';
+
+    client.get(query, function (err, req, res, body) {
+        t.equal(res.statusCode, 500);
+
+        t.deepEqual(body, {
+            code: 'InternalError',
+            message: 'sdc_packages does not have indexes that support ' +
+                     '(networks=*{\\)}{\\(}owner_uuids{\\=}*)'
+        });
+
+        t.end();
+    });
+});
+
+
+
 test('GET /packages (Custom filter)', function (t) {
     var filter = '(&(name=api_test*)(max_physical_memory>=64)' +
                  '(zfs_io_priority=1))';
