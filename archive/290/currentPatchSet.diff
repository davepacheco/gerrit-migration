From 66e216c143cfaea8bda7fb7742d9019fe1f8efdd Mon Sep 17 00:00:00 2001
From: Patrick Mooney <pmooney@pfmooney.com>
Date: Mon, 15 Aug 2016 18:11:31 +0000
Subject: [PATCH] OS-5593 lxbrand fix lingering lint errors Reviewed by: Dan
 McDonald <danmcd@omniti.com> Reviewed by: Jerry Jelinek
 <jerry.jelinek@joyent.com> Approved by: Jerry Jelinek
 <jerry.jelinek@joyent.com>

---
 usr/src/uts/common/brand/lx/dtrace/lx_systrace.c | 12 +++++++-----
 usr/src/uts/common/brand/lx/os/lx_brand.c        |  2 +-
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/usr/src/uts/common/brand/lx/dtrace/lx_systrace.c b/usr/src/uts/common/brand/lx/dtrace/lx_systrace.c
index 510626d220..de5a16c414 100644
--- a/usr/src/uts/common/brand/lx/dtrace/lx_systrace.c
+++ b/usr/src/uts/common/brand/lx/dtrace/lx_systrace.c
@@ -22,7 +22,7 @@
 /*
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright 2015 Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
 
@@ -190,8 +190,8 @@ lx_systrace_enable(void *arg, dtrace_id_t id, void *parg)
 		lx_brand_systrace_enable();
 	mutex_exit(&lx_systrace_lock);
 
-	if (LX_SYSTRACE_IS64BIT((uintptr_t)parg)) {
 #if defined(_LP64)
+	if (LX_SYSTRACE_IS64BIT((uintptr_t)parg)) {
 		ASSERT(sysnum < lx_systrace_nsysent64);
 
 		if (LX_SYSTRACE_ISENTRY((uintptr_t)parg)) {
@@ -199,8 +199,9 @@ lx_systrace_enable(void *arg, dtrace_id_t id, void *parg)
 		} else {
 			lx_systrace_sysent64[sysnum].lss_return = id;
 		}
+	} else
 #endif
-	} else {
+	{
 		ASSERT(sysnum < lx_systrace_nsysent32);
 
 		if (LX_SYSTRACE_ISENTRY((uintptr_t)parg)) {
@@ -218,8 +219,8 @@ lx_systrace_disable(void *arg, dtrace_id_t id, void *parg)
 {
 	int sysnum = LX_SYSTRACE_SYSNUM((uintptr_t)parg);
 
-	if (LX_SYSTRACE_IS64BIT((uintptr_t)parg)) {
 #if defined(_LP64)
+	if (LX_SYSTRACE_IS64BIT((uintptr_t)parg)) {
 		ASSERT(sysnum < lx_systrace_nsysent64);
 
 		if (LX_SYSTRACE_ISENTRY((uintptr_t)parg)) {
@@ -227,8 +228,9 @@ lx_systrace_disable(void *arg, dtrace_id_t id, void *parg)
 		} else {
 			lx_systrace_sysent64[sysnum].lss_return = DTRACE_IDNONE;
 		}
+	} else
 #endif
-	} else {
+	{
 		ASSERT(sysnum < lx_systrace_nsysent32);
 
 		if (LX_SYSTRACE_ISENTRY((uintptr_t)parg)) {
diff --git a/usr/src/uts/common/brand/lx/os/lx_brand.c b/usr/src/uts/common/brand/lx/os/lx_brand.c
index c4e068be86..08d504f31d 100644
--- a/usr/src/uts/common/brand/lx/os/lx_brand.c
+++ b/usr/src/uts/common/brand/lx/os/lx_brand.c
@@ -1554,7 +1554,7 @@ lx_brandsys(int cmd, int64_t *rval, uintptr_t arg1, uintptr_t arg2,
 		struct regs *rp = lwptoregs(lwp);
 
 		rp->r_r0 = 0;
-		lx_ptrace_stop(LX_PR_SYSEXIT);
+		(void) lx_ptrace_stop(LX_PR_SYSEXIT);
 		return (0);
 	}
 
-- 
2.21.0

