From fd90e0d3bef4f5fa40d89efbd8d9ab550adf957f Mon Sep 17 00:00:00 2001
From: Jason King <jason.king@joyent.com>
Date: Tue, 26 Jun 2018 16:26:49 -0500
Subject: [PATCH] fix prefix len in snoop

---
 .../cmd/cmd-inet/usr.sbin/snoop/snoop_svp.c   | 58 ++++++++++++-------
 1 file changed, 36 insertions(+), 22 deletions(-)

diff --git a/usr/src/cmd/cmd-inet/usr.sbin/snoop/snoop_svp.c b/usr/src/cmd/cmd-inet/usr.sbin/snoop/snoop_svp.c
index 627156fc3c..956d762821 100644
--- a/usr/src/cmd/cmd-inet/usr.sbin/snoop/snoop_svp.c
+++ b/usr/src/cmd/cmd-inet/usr.sbin/snoop/snoop_svp.c
@@ -122,9 +122,10 @@ svp_log_type_str(uint32_t type)
 #undef STR
 
 static const char *
-svp_addr_str(void *addrp)
+svp_addr_str(void *addrp, uint8_t *prefixp)
 {
-	static char buf[INET6_ADDRSTRLEN];
+	/* Include space for optional /ddd prefix length */
+	static char buf[INET6_ADDRSTRLEN + 5];
 	struct in_addr v4;
 	int af = AF_INET6;
 
@@ -145,6 +146,16 @@ svp_addr_str(void *addrp)
 		}
 	}
 
+	if (prefixp != NULL && *prefixp != 128) {
+		char buf2[5]; /* / + 3 digits + NUL */
+
+		if (af == AF_INET)
+			*prefixp -= 96;
+
+		(void) snprintf(buf2, sizeof (buf2), "/%hhu", *prefixp);
+		(void) strlcat(buf, buf2, sizeof (buf));
+	}
+
 	return (buf);
 }
 
@@ -200,7 +211,7 @@ do_svp_vl2_ack(void *data, int len)
 	svp_vl2_ack_t *vl2a = data;
 
 	show_printf("Status = %s", svp_status_str(ntohs(vl2a->sl2a_status)));
-	show_printf("UL3 Address = %s", svp_addr_str(vl2a->sl2a_addr));
+	show_printf("UL3 Address = %s", svp_addr_str(vl2a->sl2a_addr, NULL));
 	show_printf("UL3 Port = %hu", ntohs(vl2a->sl2a_port));
 }
 
@@ -211,7 +222,7 @@ do_svp_vl3_req(void *data, int len)
 
 	show_printf("Vnet = %u", ntohl(req->sl3r_vnetid));
 	show_printf("Type = %s", svp_vl3_type_str(ntohl(req->sl3r_type)));
-	show_printf("VL3 Address = %s", svp_addr_str(req->sl3r_ip));
+	show_printf("VL3 Address = %s", svp_addr_str(req->sl3r_ip, NULL));
 }
 
 static void
@@ -222,7 +233,7 @@ do_svp_vl3_ack(void *data, int len)
 	show_printf("Status = %s", svp_status_str(ntohl(vl3a->sl3a_status)));
 	show_printf("MAC = %s",
 	    ether_ntoa((struct ether_addr *)vl3a->sl3a_mac));
-	show_printf("UL3 Address = %s", svp_addr_str(vl3a->sl3a_uip));
+	show_printf("UL3 Address = %s", svp_addr_str(vl3a->sl3a_uip, NULL));
 	show_printf("UL3 Port = %hu", ntohs(vl3a->sl3a_uport));
 }
 
@@ -257,7 +268,7 @@ do_svp_log_req(void *data, int len)
 	svp_log_req_t *svlr = data;
 
 	show_printf("Count = %u", ntohl(svlr->svlr_count));
-	show_printf("Address = %s", svp_addr_str(svlr->svlr_ip));
+	show_printf("Address = %s", svp_addr_str(svlr->svlr_ip, NULL));
 }
 
 static void
@@ -273,6 +284,8 @@ do_svp_log_ack(void *data, int len)
 	} u = { .vd = (ack + 1) };
 	uint32_t type;
 	size_t total = 0, rlen = 0;
+	uint8_t prefixlen;
+	boolean_t is_host;
 
 	show_printf("Status = %s", svp_status_str(ntohl(ack->svla_status)));
 	len -= sizeof (*ack);
@@ -329,7 +342,7 @@ do_svp_log_ack(void *data, int len)
 			show_printf("%8s VLAN = %hu", "",
 			    ntohs(u.vl3->svl3_vlan));
 			show_printf("%8s Address = %s", "",
-			    svp_addr_str(u.vl3->svl3_ip));
+			    svp_addr_str(u.vl3->svl3_ip, NULL));
 			show_printf("%8s Vnet = %u", "",
 			    ntohl(u.vl3->svl3_vnetid));
 			u.vl3++;
@@ -339,24 +352,24 @@ do_svp_log_ack(void *data, int len)
 			    ntohl(u.vr->svlr_src_vnetid));
 			show_printf("%8s Source VLAN = %hu", "",
 			    ntohs(u.vr->svlr_src_vlan));
-			show_printf("%8s Source %s = %s%s", "",
-			    u.vr->svlr_src_prefixlen == 128 ?
-			    "address" : "subnet",
-			    svp_addr_str(u.vr->svlr_srcip),
-			    u.vr->svlr_src_prefixlen == 128 ?
-			    "" : buf_printf("/%hhd", u.vr->svlr_src_prefixlen));
+
+			prefixlen = u.vr->svlr_src_prefixlen;
+			is_host = prefixlen == 128 ? B_TRUE : B_FALSE;
+			show_printf("%8s Source %s = %s", "",
+			    is_host ? "address" : "subnet",
+			    svp_addr_str(u.vr->svlr_srcip, &prefixlen));
 			show_printf("%8s Destination DC id = %u", "",
 			    ntohl(u.vr->svlr_dcid));
 			show_printf("%8s Destination Vnet = %u", "",
 			    ntohl(u.vr->svlr_dst_vnetid));
 			show_printf("%8s Destination VLAN = %hu", "",
 			    ntohs(u.vr->svlr_dst_vlan));
-			show_printf("%8s Destination %s = %s%s", "",
-			    u.vr->svlr_dst_prefixlen == 128 ?
-			    "address" : "subnet",
-			    svp_addr_str(u.vr->svlr_dstip),
-			    u.vr->svlr_dst_prefixlen == 128 ?
-			    "" : buf_printf("/%hhd", u.vr->svlr_dst_prefixlen));
+
+			prefixlen = u.vr->svlr_dst_prefixlen;
+			is_host = prefixlen == 128 ? B_TRUE : B_FALSE;
+			show_printf("%8s Destination %s = %s", "",
+			    is_host ? "address" : "subnet",
+			    svp_addr_str(u.vr->svlr_dstip, &prefixlen));
 			u.vr++;
 			break;
 		}
@@ -414,8 +427,9 @@ do_svp_route_req(void *data, int len)
 
 	show_printf("Vnet = %u", ntohl(req->srr_vnetid));
 	show_printf("VLAN = %hu", ntohs(req->srr_vlan));
-	show_printf("Source Address = %s", svp_addr_str(req->srr_srcip));
-	show_printf("Destination Address = %s", svp_addr_str(req->srr_dstip));
+	show_printf("Source Address = %s", svp_addr_str(req->srr_srcip, NULL));
+	show_printf("Destination Address = %s", svp_addr_str(req->srr_dstip,
+	    NULL));
 }
 
 static void
@@ -427,7 +441,7 @@ do_svp_route_ack(void *data, int len)
 	show_printf("Remote DC Id = %u", ntohl(ack->sra_dcid));
 	show_printf("Remote Vnet = %u", ntohl(ack->sra_vnetid));
 	show_printf("Remote VLAN = %hu", ntohs(ack->sra_vlan));
-	show_printf("Remote UL3 Address = %s", svp_addr_str(ack->sra_ip));
+	show_printf("Remote UL3 Address = %s", svp_addr_str(ack->sra_ip, NULL));
 	show_printf("Remote UL3 Port = %hu", ntohs(ack->sra_port));
 	show_printf("Source MAC Address = %s",
 	    ether_ntoa((struct ether_addr *)ack->sra_srcmac));
-- 
2.21.0

