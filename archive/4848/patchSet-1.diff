commit b5ba1d97d3fc1a0e05eec1ea4eee327142864ead (refs/changes/48/4848/1)
Author: Rui Loura <rui@joyent.com>
Date:   2018-09-18T18:21:56+00:00 (1 year, 1 month ago)
    
    TRITON-465 RAN: Network interface order swapped for docker causing docker workflows to fail
    TRITON-648 vmapi should report version number in response header

diff --git a/lib/vmapi.js b/lib/vmapi.js
index 3bea4e2..8ff57fc 100644
--- a/lib/vmapi.js
+++ b/lib/vmapi.js
@@ -16,6 +16,7 @@ var assert = require('assert-plus');
 var async = require('async');
 var bunyan = require('bunyan');
 var EffluentLogger = require('effluent-logger');
+var fs = require('fs');
 var once = require('once');
 var restify = require('restify');
 var trace_event = require('trace-event');
@@ -181,7 +182,7 @@ VmapiApp.prototype._initApis = function _initApis(options) {
 
     // Init VmapiApp server
     this.server = restify.createServer({
-        name: 'VMAPI',
+        name: 'VMAPI/' + getVersion(),
         log: log.child({ component: 'api' }, true),
         version: apiVersion,
         serverName: 'SmartDataCenter',
@@ -460,5 +461,12 @@ function formatJSON(req, res, body, callback) {
     callback(null, formattedJson);
 }
 
+function getVersion() {
+    var pkg = fs.readFileSync(__dirname + '/../package.json', 'utf8');
+    var ver = JSON.parse(pkg).version;
+    assert.string(ver, 'version');
+    return ver;
+}
+
 
 module.exports = VmapiApp;
diff --git a/lib/workflows/job-common.js b/lib/workflows/job-common.js
index 0a91129..f5bdb20 100644
--- a/lib/workflows/job-common.js
+++ b/lib/workflows/job-common.js
@@ -752,6 +752,7 @@ function checkServerNicTags(job, cb) {
  */
 function provisionNics(job, cb) {
     var macs = job.params.macs;
+    var admin_pool_uuid;
 
     if (macs) {
         cb(null, 'AddNics called with macs -- skipping');
@@ -827,7 +828,31 @@ function provisionNics(job, cb) {
      * are provisioned in createVm()->preProvisionNics().
      */
     async.series([
-        function provisionPoolNicss(callback) {
+        function getAdminPoolNetworkUuids(callback) {
+            napi.listNetworkPools({name: 'admin'},
+                function onAdminPool(err, pools) {
+
+                if (err) {
+                    callback(err);
+                    return;
+                }
+
+                if (pools.length === 0) {
+                    callback();
+                    return;
+                }
+
+                if (pools.length > 1) {
+                    job.log.warn({pools: pools},
+                        'More than 1 admin network pool found, using first.');
+                }
+
+                admin_pool_uuid = pools[0].uuid;
+                callback();
+                return;
+            });
+        },
+        function provisionPoolNics(callback) {
             async.mapSeries(poolNetworks, function (network, next) {
                 var params = nicParams();
                 if (network.ipv4_ips !== undefined)
@@ -846,7 +871,21 @@ function provisionNics(job, cb) {
                     if (suberr) {
                         next(suberr);
                     } else {
-                        nics.push(nic);
+                        /*
+                         * If the network pool name is 'admin' we want the nic
+                         * to be the first in the list so that it's resolvers
+                         * are listed first in /etc/resolv.conf and the VM will
+                         * use the binder zone as it's first nameserver.
+                         *
+                         * In the future we could instead use network traits in
+                         * the nic as part of RFD 117, or move this out of the
+                         * workflow completely (TRITON-764).
+                         */
+                        if (network.ipv4_uuid === admin_pool_uuid) {
+                            nics.unshift(nic);
+                        } else {
+                            nics.push(nic);
+                        }
                         // pools may contain fabric networks someday
                         addFabricNatNic(nic);
                         next();
