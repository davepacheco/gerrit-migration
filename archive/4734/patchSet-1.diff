From 99ac28bba119dbae590d130e67ed1d9391d58b3b Mon Sep 17 00:00:00 2001
From: Kody A Kantor <kody@kkantor.com>
Date: Wed, 22 Aug 2018 20:01:40 +0000
Subject: [PATCH] joyent/pgstatsmon#17 pgstatsmon should support discovering
 backend IPs via nic_tag regex joyent/pgstatsmon#18 pgstatsmon shouldn't try
 to create functions that depend on missing functions

---
 lib/dbinit.js | 40 +++++++++++++++++++++++++++++++++++++++-
 package.json  |  3 ++-
 2 files changed, 41 insertions(+), 2 deletions(-)

diff --git a/lib/dbinit.js b/lib/dbinit.js
index ded6064..9f32d40 100644
--- a/lib/dbinit.js
+++ b/lib/dbinit.js
@@ -2,6 +2,7 @@ var mod_assert = require('assert-plus');
 var mod_bunyan = require('bunyan');
 var mod_pg = require('pg');
 var mod_vasync = require('vasync');
+var mod_semver = require('semver');
 var mod_util = require('util');
 var mod_verror = require('verror');
 
@@ -109,6 +110,31 @@ function stop_if_standby(args, callback) {
 	});
 }
 
+/*
+ * Get the version number of the Postgres server. This is used later to
+ * determine whether or not we should set up some of the stat collection
+ * functions (replication stats, vacuum progress stats).
+ */
+function get_db_version(args, callback) {
+	var query;
+	var res;
+
+	query = 'SHOW server_version';
+
+	res = args.client.query(query);
+	res.once('row', function (row) {
+		args.pg_version = row['server_version'];
+	});
+
+	res.on('error', function (err) {
+		callback(err);
+	});
+
+	res.on('end', function () {
+		callback();
+	});
+}
+
 /*
  * create a restricted Postgres user for pgstatsmon
  */
@@ -166,6 +192,11 @@ function create_activity_function(args, callback) {
  * create a function for pgstatsmon to view unfiltered pg_stat_replication stats
  */
 function create_replication_function(args, callback) {
+	if (mod_semver.lt(args.pg_version, '9.4.0')) {
+		/* not supported */
+		callback();
+		return;
+	}
 	var query;
 	query = 'CREATE OR REPLACE FUNCTION public.get_stat_replication()'
 	    + ' RETURNS SETOF pg_stat_replication AS \'SELECT * FROM'
@@ -179,6 +210,11 @@ function create_replication_function(args, callback) {
  * create a function for pgstatsmon to gather vacuum progress
  */
 function create_progress_vacuum_function(args, callback) {
+	if (mod_semver.lt(args.pg_version, '9.6.0')) {
+		/* not supported */
+		callback();
+		return;
+	}
 	var query;
 	query = 'CREATE OR REPLACE FUNCTION public.get_stat_progress_vacuum('
 	+ 'out relname name, '
@@ -255,12 +291,14 @@ function setup_monitoring_user(args, callback) {
 	var log = args.log;
 	var arg = {
 		'conf': args,
-		'client': null
+		'client': null,
+		'pg_version': null
 	};
 	mod_vasync.pipeline({
 		'funcs': [
 			connect_to_database,
 			stop_if_standby,
+			get_db_version,
 			create_user,
 			create_activity_function,
 		        create_replication_function,
diff --git a/package.json b/package.json
index fadf786..4818de8 100644
--- a/package.json
+++ b/package.json
@@ -16,9 +16,10 @@
 		"jsprim": "2.0.0",
 		"pg": "7.4.1",
 		"restify": "6.3.4",
+		"semver": "5.5.1",
 		"vasync": "2.2.0",
 		"verror": "1.10.0",
-		"vmapi-resolver": "1.0.0"
+		"vmapi-resolver": "2.0.0"
 	},
 	"author": "Joyent, Inc",
 	"license": "MPL-2.0"
-- 
2.21.0

