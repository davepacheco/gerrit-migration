commit 796e985ed8990d4108949c7562d60a6009423ea1 (refs/changes/51/1751/2)
Author: Jason King <jason.king@joyent.com>
Date:   2017-04-05T16:27:12-05:00 (2 years, 6 months ago)
    
    TOOLS-1652 mg README should point to triton building instructions
    TOOLS-1656 mg completely ignores SDC_IMAGE_PACKAGE when 'local build' isn't set
    TOOLS-1746 tools/setup-build-zone.sh in MG should support newer images

diff --git a/README.md b/README.md
index 3898e32..2ddf5d3 100644
--- a/README.md
+++ b/README.md
@@ -17,7 +17,9 @@ guidelines](https://github.com/joyent/triton/blob/master/CONTRIBUTING.md) --
 
 A single repo to build all the parts of Triton. This is just a *build driver*
 repo, all the components are still in their respective repos.
-See <https://mo.joyent.com/docs/mg> for a more complete introduction.
+See <https://mo.joyent.com/docs/mg> and
+<https://github.com/joyent/triton/blob/master/docs/developer-guide/building.md>
+for a more complete introduction.
 
 
 # Quick start
@@ -70,14 +72,9 @@ used only when building Joyent products.
 
 # Prerequisites
 
-The "tools/mk-jenkins-slave/mk-jenkins-slave.sh" script is used to build
-new Jenkins (CI system) slaves and set them up for building Triton. Basically
-it creates a new zone (current using the smartos-1.6.3 image) passing in
-"tools/mk-jenkins-slave/jenkins-slave-setup.user-script". See
-"tools/mk-jenkins-slave/README.md" for how to create a new build zone
-for yourself, but basically it means running this from the GZ:
-
-    ./tools/mk-jenkins-slave/mk-jenkins-slave.sh BUILD-ZONE-ALIAS
+Building Triton requires making a number of decisions as to which pieces and
+where those pieces will be built.  The Triton Developer Guide has detailed
+instructions for this process available at <https://github.com/joyent/triton/blob/master/docs/developer-guide/building.md>.
 
 If you already have a zone that you want to setup, you *should* be able to just
 manually run that user script (though that hasn't been tested).
@@ -170,7 +167,7 @@ Your Makefile target will look as above, with the addition of the xxx\_dataset t
 
     $(MYNEWREPO_DATASET): $(MYNEWREPO_BITS)
             @echo "# Build mynewrepo dataset: branch $(MYNEWREPO_BRANCH), sha $(MYNEWREPO_SHA), time `date -u +%Y%m%dT%H%M%SZ`"
-            ./tools/prep_dataset.sh -t $(MYNEWREPO_BITS) -o $(MYNEWREPO_DATASET) -p $(MYNEWREPO_PKGSRC)
+            ./tools/prep_dataset_in_jpc.sh -t $(MYNEWREPO_BITS) -o $(MYNEWREPO_DATASET) -p $(MYNEWREPO_PKGSRC)
             @echo "# Created mynewrepo dataset (time `date -u +%Y%m%dT%H%M%SZ`):"
             @ls -1 $(MYNEWREPO_DATASET)
             @echo ""
diff --git a/tools/prep_dataset_in_jpc.sh b/tools/prep_dataset_in_jpc.sh
index c8252bc..9304455 100755
--- a/tools/prep_dataset_in_jpc.sh
+++ b/tools/prep_dataset_in_jpc.sh
@@ -37,6 +37,10 @@ JSON=${TOP}/tools/json
 export PATH="${TOP}/node_modules/manta/bin:${TOP}/node_modules/smartdc/bin:${PATH}"
 image_package="g4-highcpu-4G"
 
+if [[ -n ${SDC_IMAGE_PACKAGE} ]]; then
+  image_package="${SDC_IMAGE_PACKAGE}"
+fi
+
 if [[ -z ${SDC_ACCOUNT} ]]; then
   export SDC_ACCOUNT="Joyent_Dev"
 fi
@@ -141,8 +145,6 @@ if [[ -n ${SDC_LOCAL_BUILD} ]]; then
   if [[ -z ${SDC_IMAGE_PACKAGE} ]]; then
     fatal "When building without JPC, you need to set \${SDC_IMAGE_PACKAGE}"
   fi
-
-  image_package=${SDC_IMAGE_PACKAGE}
 fi
 
 while getopts ht:p:P:i:o:O:n:v:d:b: opt; do
diff --git a/tools/setup-remote-build-zone.sh b/tools/setup-remote-build-zone.sh
index 5680f98..69c8da1 100755
--- a/tools/setup-remote-build-zone.sh
+++ b/tools/setup-remote-build-zone.sh
@@ -26,6 +26,7 @@
 #
 #   sdc-smartos 1.6.3
 #   sdc-multiarch 13.3.1
+#   sdc-minimal-multiarch-lts 15.4.1
 #
 # IMPORTANT:
 #
@@ -66,12 +67,39 @@ if [[ -n "${TRACE}" ]]; then
     set -o xtrace
 fi
 
+declare -A VERSIONS
+declare -A PACKAGES
+declare -A PACKAGES2
+declare -A SDCNODE_BUILDS
+
+VERSIONS[fd2cc906-8938-11e3-beab-4359c665ac99]="1.6.3"
+VERSIONS[b4bdc598-8939-11e3-bea4-8341f6861379]="13.3.1"
+VERSIONS[18b094b0-eb01-11e5-80c1-175dac7ddf02]="15.4.1"
+# Public version of sdc-minimal-multiarch-lts
+VERSIONS[ede31770-e19c-11e5-bb6e-3b7de3cca9ce]="15.4.1"
+
+SDCNODE_BUILDS[1.6.3]="https://download.joyent.com/pub/build/sdcnode/fd2cc906-8938-11e3-beab-4359c665ac99/master-20140830T012655Z/sdcnode/sdcnode-v0.10.26-zone-fd2cc906-8938-11e3-beab-4359c665ac99-master-20140829T232408Z-g649a9b0.tgz"
+SDCNODE_BUILDS[13.3.1]="https://download.joyent.com/pub/build/sdcnode/b4bdc598-8939-11e3-bea4-8341f6861379/master-20140830T005350Z/sdcnode/sdcnode-v0.10.26-zone-b4bdc598-8939-11e3-bea4-8341f6861379-master-20140829T232139Z-g649a9b0.tgz"
+SDCNODE_BUILDS[15.4.1]="https://download.joyent.com/pub/build/sdcnode/18b094b0-eb01-11e5-80c1-175dac7ddf02/master-20170322T072108Z/sdcnode/sdcnode-v0.10.43-zone-18b094b0-eb01-11e5-80c1-175dac7ddf02-master-20170322T002033Z-gd8006ba.tgz"
+
+PACKAGES[1.6.3]="binutils"
+PACKAGES2[1.6.3]="scmgit gcc-compiler gmake python26 \
+        gcc-runtime gcc-tools png GeoIP GeoLiteCity ghostscript \
+        zookeeper-client postgresql91-client-9.1.2 gsharutils"
+
+PACKAGES[13.3.1]="binutils"
+PACKAGES2[13.3.1]="gcc47 gmake \
+        scmgit python26 png GeoIP GeoLiteCity ghostscript zookeeper-client \
+        gsharutils build-essential postgresql91-client"
+
+PACKAGES[15.4.1]="binutils"
+PACKAGES2[15.4.1]="gcc47 gmake \
+        scmgit python27 png GeoIP GeoLiteCity ghostscript zookeeper-client \
+        gsharutils build-essential postgresql91-client"
+
 IMAGE=\$(mdata-get sdc:image_uuid || true)
-if [[ \${IMAGE} == "fd2cc906-8938-11e3-beab-4359c665ac99" ]]; then
-    VERSION="1.6.3"
-elif [[ \${IMAGE} == "b4bdc598-8939-11e3-bea4-8341f6861379" ]]; then
-    VERSION="13.3.1"
-else
+VERSION="\${VERSIONS[\$IMAGE]}"
+if [[ -z "\$VERSION" ]]; then
     echo "Unknown image. Try again with a zone running a known image." >&2
     exit 1
 fi
@@ -80,21 +108,18 @@ echo "Found image version \${VERSION}"
 
 echo "Installing packages..."
 
-if [[ \${VERSION} == "1.6.3" ]]; then
-    SDCNODE_BUILD="https://download.joyent.com/pub/build/sdcnode/fd2cc906-8938-11e3-beab-4359c665ac99/master-20140830T012655Z/sdcnode/sdcnode-v0.10.26-zone-fd2cc906-8938-11e3-beab-4359c665ac99-master-20140829T232408Z-g649a9b0.tgz"
-    pkgin -y install binutils
-    pkgin -y install scmgit gcc-compiler gmake python26 \
-        gcc-runtime gcc-tools png GeoIP GeoLiteCity ghostscript \
-        zookeeper-client postgresql91-client-9.1.2 gsharutils
-    [[ ! -e /opt/local/bin/gld ]] && (cd /opt/local/bin && ln -s ld gld)
+if [[ -z "$SDCNODE_BUILD" ]]; then
+    SDCNODE_BUILD="\${SDCNODE_BUILDS[\$VERSION]}"
 else
-    SDCNODE_BUILD="https://download.joyent.com/pub/build/sdcnode/b4bdc598-8939-11e3-bea4-8341f6861379/master-20140830T005350Z/sdcnode/sdcnode-v0.10.26-zone-b4bdc598-8939-11e3-bea4-8341f6861379-master-20140829T232139Z-g649a9b0.tgz"
-    pkgin -y install binutils
-    pkgin -y install gcc47 gmake \
-        scmgit python26 png GeoIP GeoLiteCity ghostscript zookeeper-client \
-        gsharutils build-essential postgresql91-client
+    SDCNODE_BUILD="$SDCNODE_BUILD"
 fi
 
+pkgin -y install \${PACKAGES[\$VERSION]}
+pkgin -y install \${PACKAGES2[\$VERSION]} || echo
+
+[[ ! -e /opt/local/bin/gld ]] && (cd /opt/local/bin && ln -s ld gld)
+[[ ! -e /opt/local/bin/grm ]] && (cd /opt/local/bin && ln -s /bin/rm grm)
+
 echo "Fixing ~/.bashrc..."
 
 grep "^MANTA_USER=" ~/.bashrc \
@@ -115,7 +140,9 @@ grep "^PATH=.*/root/opt/node/bin" ~/.bashrc \
 echo "Ensuring we have ~/opt/node..."
 
 if [[ ! -f /root/opt/node/bin/node ]]; then
-   mkdir -p ~/opt && (cd ~/opt && curl \${SDCNODE_BUILD} | tar -zxvf -)
+   # Work around OS-1825
+   mkdir -p ~/opt && (cd ~/opt && \
+    curl -s \${SDCNODE_BUILD} | gzcat -c | tar xvf - )
    /root/opt/node/bin/node /root/opt/node/lib/node_modules/npm/cli.js install -gf npm
 fi
 
diff --git a/tools/targets-15.4.1.sh b/tools/targets-15.4.1.sh
new file mode 100755
index 0000000..19b74d2
--- /dev/null
+++ b/tools/targets-15.4.1.sh
@@ -0,0 +1,27 @@
+#/bin/bash
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2017, Joyent, Inc.
+#
+
+#
+# This script outputs a list of targets that can be built with MG in a
+# sdc-minimal-multiarch-lts 15.4.1 build zone, in the order the should be built.
+#
+
+BASE=$(cd $(dirname $0) && pwd)/../
+
+cd ${BASE}
+if [[ ! -f "targets.json" ]]; then
+    bash < targets.json.in | json > targets.json
+fi
+
+# Anything with the image_uuid set to the 15.4.1 image should be included.
+node -e "var targets = require('./targets.json'); Object.keys(targets).forEach(function (t) { if (targets[t].image_uuid === '18b094b0-eb01-11e5-80c1-175dac7ddf02') { console.log(t); } });" | sort
+
+exit 0
