From 914801f1a7a0f771ed4fb594344cf78e6a5d2314 Mon Sep 17 00:00:00 2001
From: Trent Mick <trent.mick@joyent.com>
Date: Fri, 2 Dec 2016 15:27:11 -0800
Subject: [PATCH] joyent/node-manta#214 basic bash tab completion

---
 .gitignore              |  1 +
 CHANGES.md              |  3 ++
 Makefile                | 27 +++++++++++++++--
 README.md               | 22 ++++++++++++++
 bin/mchattr             |  1 +
 bin/mchmod              |  1 +
 bin/mfind               |  5 ++--
 bin/mget                |  1 +
 bin/minfo               |  1 +
 bin/mjob                | 26 +++++++++++++++++
 bin/mln                 |  2 ++
 bin/mlogin              |  1 +
 bin/mls                 |  1 +
 bin/mmd5                |  1 +
 bin/mmkdir              |  1 +
 bin/mput                |  2 ++
 bin/mrm                 |  1 +
 bin/mrmdir              |  1 +
 bin/msign               |  1 +
 bin/muntar              |  2 ++
 lib/create_client.js    | 65 ++++++++++++++++++++++++++++++++++++++++-
 lib/index.js            |  1 +
 package.json            |  4 +--
 test/completion.test.js | 47 +++++++++++++++++++++++++++++
 24 files changed, 210 insertions(+), 8 deletions(-)
 create mode 100644 test/completion.test.js

diff --git a/.gitignore b/.gitignore
index 919bac2..fc23e5a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -10,3 +10,4 @@ smf/manifests/bapi.xml
 /manta-*.tgz
 /test/node.paths
 /npm-debug.log
+/share/manta.completion
diff --git a/CHANGES.md b/CHANGES.md
index 7ad48c6..40b8c91 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -2,6 +2,9 @@
 
 ## not yet released
 
+- joyent/node-manta#214 Add basic Bash completion for the `m*` tools.
+  "Basic" here means options and mjob subcommands are completed, not
+  yet support for completing manta paths.
 - joyent/node-manta#288 mfind of file blows assertion: "ent (object) is required"
 
 ## 4.0.0
diff --git a/Makefile b/Makefile
index bad9da0..5516ece 100644
--- a/Makefile
+++ b/Makefile
@@ -1,5 +1,5 @@
 #
-# Copyright 2015 Joyent, Inc.
+# Copyright 2016 Joyent, Inc.
 #
 
 #
@@ -34,11 +34,14 @@ MAN_OUTDIR      := man/man1
 MAN_OUTPAGES=$(MAN_PAGES:%.md=$(MAN_OUTDIR)/%.1)
 MAN_ROOT        := docs/man
 
+COMPLETION_CMDS := $(shell find bin -type f)
+COMPLETION_FILE=share/manta.completion
+
 #
 # Repo-specific targets
 #
 .PHONY: all
-all: $(SMF_MANIFESTS) deps
+all: $(SMF_MANIFESTS) deps completion
 
 .PHONY: deps
 deps: | $(REPO_DEPS) $(NPM_EXEC)
@@ -116,6 +119,24 @@ $(MAN_OUTDIR)/%.1: $(MAN_ROOT)/%.md | $(MAN_OUTDIR)
 manpages: $(MAN_OUTPAGES)
 
 
+#
+# Each m* tool has a '--completion' option to emit Bash completion code. We
+# gather all those to a share/manta.completion file for users to source.
+#
+
+.PHONY: completion
+completion: $(COMPLETION_FILE)
+
+$(COMPLETION_FILE): $(COMPLETION_CMDS) lib/create_client.js
+	echo "# node-manta tools v$(shell cat package.json | json version) completion" >$@
+	echo $(COMPLETION_CMDS) | xargs -n1 basename | sed -E 's/(.*)/#   \1(1)/' >>$@
+	echo "" >>$@
+	for cmd in $(COMPLETION_CMDS); do \
+		$$cmd --completion | grep -v '^#' >>$@; \
+	done
+
+CLEAN_FILES += $(COMPLETION_FILE)
+
 # Ensure CHANGES.md and package.json have the same version.
 .PHONY: versioncheck
 versioncheck:
@@ -125,7 +146,7 @@ versioncheck:
 check:: versioncheck
 
 .PHONY: cutarelease
-cutarelease: versioncheck
+cutarelease: $(COMPLETION_FILE) versioncheck
 	[[ -z `git status --short` ]]  # If this fails, the working dir is dirty.
 	@which json 2>/dev/null 1>/dev/null && \
 	    ver=$(shell json -f package.json version) && \
diff --git a/README.md b/README.md
index 9a1af4d..e581700 100644
--- a/README.md
+++ b/README.md
@@ -10,6 +10,28 @@ project.  See [CONTRIBUTING.md](CONTRIBUTING.md) for contribution guidelines.
 
     $ npm install manta -g
 
+
+### Bash completion
+
+Optionally install Bash completion. This is done by `source`ing the
+"share/manta.completion" file that is installed with the tools. If you
+installed with `npm install manta -g` as above, then that is:
+
+```bash
+source $(npm prefix -g)/lib/node_modules/manta/share/manta.completion
+```
+
+Put that (or the equivalent) in your "~/.bashrc" file to make it permanent.
+
+You can verify that completions are working by typing the `TAB` key with
+the following:
+
+    $ mls --<TAB>
+    --account   --insecure  --long      --role      --type      --verbose
+    --fulljson  --json      --marker    --subuser   --url       --version
+    --help      --keyId     --reverse   --time      --user
+
+
 # Usage
 
 First setup your environment to match your Joyent Manta account:
diff --git a/bin/mchattr b/bin/mchattr
index 016bee6..32899c4 100755
--- a/bin/mchattr
+++ b/bin/mchattr
@@ -66,6 +66,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     if (opts._args.length < 1)
         manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');
diff --git a/bin/mchmod b/bin/mchmod
index 3269d7f..b3986ab 100755
--- a/bin/mchmod
+++ b/bin/mchmod
@@ -79,6 +79,7 @@ function parseOptions() {
     }
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     var mchmodOpts = parseMchmodOptions(opts._args);
     opts.mchmodOperation = mchmodOpts.operation;
diff --git a/bin/mfind b/bin/mfind
index b562743..3a9b602 100755
--- a/bin/mfind
+++ b/bin/mfind
@@ -104,15 +104,16 @@ function parseOptions() {
         opts = OPTIONS_PARSER.parse(process.argv);
         manta.checkBinEnv(opts);
     } catch (e) {
-        manta.cli_usage(OPTIONS_PARSER, e.message, '[PATH]');
+        manta.cli_usage(OPTIONS_PARSER, e.message, '[PATH...]');
     }
 
     manta.cli_logger(opts, LOG);
 
     if (opts.help)
-        manta.cli_usage(OPTIONS_PARSER, false, '[PATH]');
+        manta.cli_usage(OPTIONS_PARSER, false, '[PATH...]');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     if (opts.name)
         opts.name = new RegExp(opts.name);
diff --git a/bin/mget b/bin/mget
index 5075e56..2a7b979 100755
--- a/bin/mget
+++ b/bin/mget
@@ -87,6 +87,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     if (opts._args.length < 1)
         manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');
diff --git a/bin/minfo b/bin/minfo
index ba6383a..f85917d 100755
--- a/bin/minfo
+++ b/bin/minfo
@@ -54,6 +54,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     if (opts._args.length < 1)
         manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');
diff --git a/bin/mjob b/bin/mjob
index da37d0c..b8196de 100755
--- a/bin/mjob
+++ b/bin/mjob
@@ -443,6 +443,12 @@ function MJob() {
                 names: ['version'],
                 type: 'bool',
                 help: 'Print version and exit.'
+            },
+            {
+                names: ['completion'],
+                type: 'bool',
+                help: 'Print bash completion code for this command and exit.',
+                hidden: true
             }
         ],
         helpOpts: {
@@ -454,6 +460,26 @@ util.inherits(MJob, cmdln.Cmdln);
 
 MJob.prototype.init = function (opts, args, callback) {
     manta.cliVersionCheckPrintAndExit(opts);
+
+    if (opts.completion) {
+        /*
+         * To ensure that all our stdout is written before 'process.exit()'
+         * terminates, we set stdout to blocking. This is an issue when
+         * (a) node v4 or later is used and (b) at least when exec'd by node
+         * as in test/completion.test.js. See
+         * https://gist.github.com/misterdjules/3aa4c77d8f881ffccba3b6e6f0050d03
+         * for some discussion. An alternative would be to exit the the node
+         * process without 'process.exit'.
+         */
+        if (process.stdout._handle &&
+            typeof (process.stdout._handle.setBlocking) === 'function')
+        {
+            process.stdout._handle.setBlocking(true);
+        }
+        console.log(this.bashCompletion());
+        process.exit(0);
+    }
+
     cmdln.Cmdln.prototype.init.apply(this, arguments);
 };
 
diff --git a/bin/mln b/bin/mln
index 14f0f77..eebab6e 100755
--- a/bin/mln
+++ b/bin/mln
@@ -66,6 +66,8 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'source dest');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME,
+        ['mpath', 'mpath', 'none']);
 
     if (opts._args.length < 1)
         manta.cli_usage(OPTIONS_PARSER, 'source required', 'source dest');
diff --git a/bin/mlogin b/bin/mlogin
index 6c30b0d..0ef4b70 100755
--- a/bin/mlogin
+++ b/bin/mlogin
@@ -130,6 +130,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     if (opts._args.length > 1)
         manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');
diff --git a/bin/mls b/bin/mls
index 4e1a0ce..b84568d 100755
--- a/bin/mls
+++ b/bin/mls
@@ -99,6 +99,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, '[PATH]...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     opts.paths = [];
     if (opts._args.length < 1) {
diff --git a/bin/mmd5 b/bin/mmd5
index b13f527..182b154 100755
--- a/bin/mmd5
+++ b/bin/mmd5
@@ -58,6 +58,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     if (opts._args.length < 1)
         manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');
diff --git a/bin/mmkdir b/bin/mmkdir
index 8110b0c..c376c60 100755
--- a/bin/mmkdir
+++ b/bin/mmkdir
@@ -76,6 +76,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mdir']);
 
     opts.headers = {};
     (opts.header || []).forEach(function (h) {
diff --git a/bin/mput b/bin/mput
index bd2a772..36fd08c 100755
--- a/bin/mput
+++ b/bin/mput
@@ -118,6 +118,8 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME,
+        ['mpath', 'none']);
 
     if (opts.md5 && !opts.file)
         manta.cli_usage(OPTIONS_PARSER, '--md5 requires --file', 'path...');
diff --git a/bin/mrm b/bin/mrm
index fc358fe..6753d60 100755
--- a/bin/mrm
+++ b/bin/mrm
@@ -71,6 +71,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     if (opts._args.length < 1)
         manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');
diff --git a/bin/mrmdir b/bin/mrmdir
index eff79a7..997e29b 100755
--- a/bin/mrmdir
+++ b/bin/mrmdir
@@ -53,6 +53,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mdir']);
 
     if (opts._args.length < 1)
         manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');
diff --git a/bin/msign b/bin/msign
index 0789b55..b0467cc 100755
--- a/bin/msign
+++ b/bin/msign
@@ -94,6 +94,7 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path...');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME, ['mpath']);
 
     opts.method = opts.method.map(function (m) {
         m = m.toUpperCase();
diff --git a/bin/muntar b/bin/muntar
index 613ceee..f50e3db 100755
--- a/bin/muntar
+++ b/bin/muntar
@@ -105,6 +105,8 @@ function parseOptions() {
         manta.cli_usage(OPTIONS_PARSER, false, 'path');
 
     manta.cliVersionCheckPrintAndExit(opts);
+    manta.cliCompletionCheckPrintAndExit(opts, OPTIONS_PARSER, NAME,
+        ['mpath', 'none']);
 
     if (!opts.file)
         manta.cli_usage(OPTIONS_PARSER, 'file is a required argument', 'path');
diff --git a/lib/create_client.js b/lib/create_client.js
index e2db797..65efe8d 100644
--- a/lib/create_client.js
+++ b/lib/create_client.js
@@ -32,6 +32,21 @@ var DEFAULT_OPTIONS = [
         type: 'arrayOfBool',
         help: 'Verbose trace logging.'
     },
+    /*
+     * There is one minor issue with having `--completion` on DEFAULT_OPTIONS:
+     * `mjob` uses DEFAULT_OPTIONS on all its *subcommands* instead of just
+     * having those options at the top-level. I.e. `mjob create -a ACCOUNT ...`
+     * rather than `mjob -a ACCOUNT create ...`.
+     *
+     * This means that there will be a hidden `mjob create --completion`
+     * option that isn't handled. That shouldn't cause any harm.
+     */
+    {
+        names: ['completion'],
+        type: 'bool',
+        help: 'Print bash completion code for this command and exit.',
+        hidden: true
+    },
     {
         group: 'Manta connection options'
     },
@@ -290,6 +305,53 @@ function versionCheckPrintAndExit(opts) {
     }
 }
 
+
+/**
+ * Check the parsed `opts` for usage of the '--completion' option. If used,
+ * then print Bash completion code for this command.
+ *
+ * @param {Object} opts: Required. A dashdash parsed options object.
+ * @param {Object} parser: Required. A dashdash option parser.
+ * @param {String} name: Required. The command name.
+ * @param {Array of String} argtypes: Optional. An array of types for positional
+ *      arguments to this command. See 'argtypes' docs here:
+ *      // JSSTYLED
+ *      <https://github.com/trentm/node-dashdash/blob/1dd7379640462a21ca6d92502803de830b4acfa2/lib/dashdash.js#L753-L760>
+ *      Manta defines the following meaningful types:
+ *          (none yet)
+ */
+function completionCheckPrintAndExit(opts, parser, name, argtypes) {
+    assert.object(opts, 'opts');
+    assert.object(parser, 'parser');
+    assert.string(name, 'name');
+    assert.optionalArrayOfString(argtypes, 'argtypes');
+
+    if (opts.completion) {
+        /*
+         * To ensure that all our stdout is written before 'process.exit()'
+         * terminates, we set stdout to blocking. This is an issue when
+         * (a) node v4 or later is used and (b) at least when exec'd by node
+         * as in test/completion.test.js. See
+         * https://gist.github.com/misterdjules/3aa4c77d8f881ffccba3b6e6f0050d03
+         * for some discussion. An alternative would be to exit the the node
+         * process without 'process.exit'.
+         */
+        if (process.stdout._handle &&
+            typeof (process.stdout._handle.setBlocking) === 'function')
+        {
+            process.stdout._handle.setBlocking(true);
+        }
+
+        console.log(parser.bashCompletion({
+            name: name,
+            argtypes: argtypes
+        }));
+
+        process.exit(0);
+    }
+}
+
+
 ///--- Exports
 
 module.exports = {
@@ -301,7 +363,8 @@ module.exports = {
     DEFAULT_OPTIONS: DEFAULT_OPTIONS,
     usage: usage,
     setupLogger: setupLogger,
-    versionCheckPrintAndExit: versionCheckPrintAndExit
+    versionCheckPrintAndExit: versionCheckPrintAndExit,
+    completionCheckPrintAndExit: completionCheckPrintAndExit
 };
 
 
diff --git a/lib/index.js b/lib/index.js
index 8fb1acd..54d278a 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -44,6 +44,7 @@ module.exports = {
     cli_usage: cc.usage,
     cli_logger: cc.setupLogger,
     cliVersionCheckPrintAndExit: cc.versionCheckPrintAndExit,
+    cliCompletionCheckPrintAndExit: cc.completionCheckPrintAndExit,
     StringStream: StringStream,
     path: manta.path,
     jobPath: manta.jobPath,
diff --git a/package.json b/package.json
index 69e24e4..7135346 100644
--- a/package.json
+++ b/package.json
@@ -14,8 +14,8 @@
         "backoff": "~2.3.0",
         "bunyan": "^1.8.1",
         "clone": "~0.1.11",
-        "cmdln": "4.1.1",
-        "dashdash": "1.14.0",
+        "cmdln": "4.1.2",
+        "dashdash": "1.14.1",
         "extsprintf": "^1.3.0",
         "hogan.js": "~2.0.0",
         "jsprim": "^1.3.0",
diff --git a/test/completion.test.js b/test/completion.test.js
new file mode 100644
index 0000000..09a8745
--- /dev/null
+++ b/test/completion.test.js
@@ -0,0 +1,47 @@
+/*
+ * Copyright 2016 Joyent, Inc.
+ */
+
+/*
+ * Test that the bash completion generation exits zero and emits output
+ * that looks somewhat like Bash completion code.
+ */
+
+var exec = require('child_process').exec;
+var fs = require('fs');
+var path = require('path');
+
+/*
+ * Globals
+ */
+
+var binDir = path.resolve(__dirname, '..', 'bin');
+
+
+/*
+ * Helper functions
+ */
+
+function test(name, testfunc) {
+    module.exports[name] = testfunc;
+}
+
+
+/*
+ * Tests
+ */
+
+fs.readdirSync(binDir).forEach(function (name) {
+    var cmd = path.join(binDir, name);
+
+    test(name + ' --completion', function (t) {
+        exec(cmd + ' --completion', function (err, stdout, stderr) {
+            t.ifError(err);
+            t.equal(stderr, '',
+                'no stderr output from "' + name + ' --completion"');
+            t.ok(/COMPREPLY/.test(stdout), 'stdout from "' + name +
+                ' --completion" looks like Bash completion code');
+            t.done();
+        });
+    });
+});
-- 
2.21.0

