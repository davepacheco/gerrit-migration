commit c0569d84bd643c4159abc6b6b69d597fca4fd738 (refs/changes/91/2491/1)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2017-09-01T16:39:49-07:00 (2 years, 1 month ago)
    
    joyent/sdc-imgapi#13 imgapi crash when pulling from docker.io with invalid credentials

diff --git a/lib/errors.js b/lib/errors.js
index 96cd376..f5b45f9 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -553,31 +553,37 @@ function wrapErrorFromDrc(err) {
     if (!err) {
         return err;
     }
+
+    var errMsg = err.message || err.toString();
+
+    // Issue #13 convert all '%' characters, to avoid sprintf formatting errors.
+    errMsg = errMsg.replace(/%/g, '%%');
+
     if (err.name === 'BadDigestError') {
         // Docker registry client digest error.
         return new ValidationFailedError(err,
-            (err.message || err.toString()),
+            errMsg,
             [ {field: 'digest', code: 'Invalid'} ]);
     } else if (err.name === 'ConnectTimeoutError') {
         // Restify connection timeout.
-        return new RemoteSourceError(err, err.message);
+        return new RemoteSourceError(err, errMsg);
     } else if (err.code === 'ECONNREFUSED' || err.code === 'ECONNRESET' ||
         err.code === 'ENOTFOUND')
     {
         // Node.js connection error.
-        return new RemoteSourceError(err, err.message);
+        return new RemoteSourceError(err, errMsg);
     } else if (err.name === 'DownloadError') {
         // Docker registry client download error.
-        return new DownloadError(err, err.message);
+        return new DownloadError(err, errMsg);
     } else if (err.name === 'NotFoundError') {
         // Docker registry client image not found error.
-        return new restify.ResourceNotFoundError(err, err.message);
+        return new restify.ResourceNotFoundError(err, errMsg);
     } else if (err.name === 'UnauthorizedError') {
         // Docker registry client unauthorized error.
-        return new restify.UnauthorizedError(err, err.message);
+        return new restify.UnauthorizedError(err, errMsg);
     } else {
         // Unexpected error - wrap it into an internal error.
-        return new restify.InternalError(err, err.message);
+        return new restify.InternalError(err, errMsg);
     }
 }
 
