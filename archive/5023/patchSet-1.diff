From a174485025ffd7782f77e81348be4c6b62e589b8 Mon Sep 17 00:00:00 2001
From: John Levon <john.levon@joyent.com>
Date: Fri, 2 Nov 2018 11:22:09 +0000
Subject: [PATCH] OS-7341 remove gcc6 OS-7342 sync with illumos/gcc

---
 .gitignore                                    |   1 +
 gcc6/Makefile                                 | 173 ----
 gcc6/Patches/001-illumos-gcc.patch            | 695 ---------------
 gcc6/Patches/002-ld-flags.patch               |  24 -
 gcc6/Patches/003-cilk-sparc.patch             | 327 -------
 gcc6/Patches/004-alignment.patch              | 111 ---
 gcc6/Patches/fixinc.in.patch                  |  21 -
 gcc6/Patches/libgo_runtime_proc.c.patch       |  17 -
 gcc6/Patches/libstdc++-no-rt.patch            |  22 -
 gcc6/Patches/use-cxa_atexit.patch             |  11 -
 gcc6/gcc-6.4.0.tar.gz.sha1                    |   1 -
 gcc6/gmp-6.1.2.tar.bz2.sha1                   |   1 -
 gcc6/mpc-1.0.3.tar.gz.sha1                    |   1 -
 gcc6/mpfr-3.1.6.tar.bz2.sha1                  |   1 -
 gcc7/Makefile                                 |   9 +-
 ...-a-simple-description-of-what-s-what.patch |  58 --
 ...se-nawk-on-Solaris-since-awk-is-crap.patch |  34 -
 ...-enable-the-.eh_frame-based-unwinder.patch |  55 --
 ...04-intl-Don-t-use-UTF-8-quotes.-Ever.patch |  45 -
 ...mplement-fstrict-calling-conventions.patch | 614 -------------
 ...global-disabling-of-function-cloning.patch | 117 ---
 ...-that-disabling-function-cloning-pre.patch |  47 -
 ...ol2-enable-full-__cxa_atexit-support.patch |  70 --
 ...on-interposable-alias-generation-if-.patch |  28 -
 ...iate-values-objects-for-the-various-.patch |  48 --
 ...r-passed-arguments-to-the-stack-to-a.patch | 812 ------------------
 ...2-16-update-cmn_err-format-specifier.patch |  67 --
 ...rr-b-conversion-should-accept-0-flag.patch |  27 -
 gcc7/Patches/1001-new-opa-ifdef.patch         |  14 -
 gcc7/Patches/1002-fixinc.in.patch             |  21 -
 gcc7/Patches/1003-libgo_runtime_proc.c.patch  |  17 -
 gcc7/Patches/1004-libstdc++-no-rt.patch       |  22 -
 gcc7/gcc-7.3.0-il-1.tar.gz.sha1               |   1 +
 gcc7/gcc-7.3.0.tar.gz.sha1                    |   1 -
 34 files changed, 10 insertions(+), 3503 deletions(-)
 delete mode 100644 gcc6/Makefile
 delete mode 100644 gcc6/Patches/001-illumos-gcc.patch
 delete mode 100644 gcc6/Patches/002-ld-flags.patch
 delete mode 100644 gcc6/Patches/003-cilk-sparc.patch
 delete mode 100644 gcc6/Patches/004-alignment.patch
 delete mode 100644 gcc6/Patches/fixinc.in.patch
 delete mode 100644 gcc6/Patches/libgo_runtime_proc.c.patch
 delete mode 100644 gcc6/Patches/libstdc++-no-rt.patch
 delete mode 100644 gcc6/Patches/use-cxa_atexit.patch
 delete mode 100644 gcc6/gcc-6.4.0.tar.gz.sha1
 delete mode 100644 gcc6/gmp-6.1.2.tar.bz2.sha1
 delete mode 100644 gcc6/mpc-1.0.3.tar.gz.sha1
 delete mode 100644 gcc6/mpfr-3.1.6.tar.bz2.sha1
 delete mode 100644 gcc7/Patches/0001-README.md-Add-a-simple-description-of-what-s-what.patch
 delete mode 100644 gcc7/Patches/0002-compare_tests-Use-nawk-on-Solaris-since-awk-is-crap.patch
 delete mode 100644 gcc7/Patches/0003-gcc-enable-the-.eh_frame-based-unwinder.patch
 delete mode 100644 gcc7/Patches/0004-intl-Don-t-use-UTF-8-quotes.-Ever.patch
 delete mode 100644 gcc7/Patches/0005-Implement-fstrict-calling-conventions.patch
 delete mode 100644 gcc7/Patches/0006-allow-the-global-disabling-of-function-cloning.patch
 delete mode 100644 gcc7/Patches/0007-strict-cc2-check-that-disabling-function-cloning-pre.patch
 delete mode 100644 gcc7/Patches/0008-sol2-enable-full-__cxa_atexit-support.patch
 delete mode 100644 gcc7/Patches/0009-symtab-disable-non-interposable-alias-generation-if-.patch
 delete mode 100644 gcc7/Patches/0010-sol2-Use-appropriate-values-objects-for-the-various-.patch
 delete mode 100644 gcc7/Patches/0011-i386-Save-integer-passed-arguments-to-the-stack-to-a.patch
 delete mode 100644 gcc7/Patches/0012-16-update-cmn_err-format-specifier.patch
 delete mode 100644 gcc7/Patches/0013-19-cmn_err-b-conversion-should-accept-0-flag.patch
 delete mode 100644 gcc7/Patches/1001-new-opa-ifdef.patch
 delete mode 100644 gcc7/Patches/1002-fixinc.in.patch
 delete mode 100644 gcc7/Patches/1003-libgo_runtime_proc.c.patch
 delete mode 100644 gcc7/Patches/1004-libstdc++-no-rt.patch
 create mode 100644 gcc7/gcc-7.3.0-il-1.tar.gz.sha1
 delete mode 100644 gcc7/gcc-7.3.0.tar.gz.sha1

diff --git a/.gitignore b/.gitignore
index ff0bc82..062936c 100644
--- a/.gitignore
+++ b/.gitignore
@@ -24,6 +24,7 @@
 /g11n/src/lib/iconv/utf-8/*.o
 /g11n/src/lib/iconv/utf-8/*.so
 /gcc4/gcc-4.4.4-32*
+/gcc7/gcc-7.3.0-*
 /gnupg/gnupg-1.4.11-32
 /gtar/tar-1.23-32
 /gzip/gzip-1.3.5-32
diff --git a/gcc6/Makefile b/gcc6/Makefile
deleted file mode 100644
index f543a40..0000000
--- a/gcc6/Makefile
+++ /dev/null
@@ -1,173 +0,0 @@
-#
-# This file and its contents are supplied under the terms of the
-# Common Development and Distribution License ("CDDL"), version 1.0.
-# You may only use this file in accordance with the terms of version
-# 1.0 of the CDDL.
-#
-# A full copy of the text of the CDDL should have accompanied this
-# source.  A copy of the CDDL is also available via the Internet at
-# http://www.illumos.org/license/CDDL.
-#
-
-#
-# Copyright (c) 2018, Joyent, Inc.
-#
-
-VER =		gcc-6.4.0
-MPFR_VER =	mpfr-3.1.6
-GMP_VER =	gmp-6.1.2
-MPC_VER =	mpc-1.0.3
-PREFIX =	/usr/gcc/6
-
-include ../Makefile.defs
-
-SEPARATE_BUILD =	yes
-
-GCC =	/opt/local/bin/gcc
-GXX =	/opt/local/bin/g++
-CFLAGS = -g -O2
-
-AUTOCONF_OPTS += \
-	--with-ld=/usr/bin/ld \
-	--without-gnu-ld \
-	--with-gnu-as \
-	--with-as=$(DESTDIR)/usr/gnu/bin/gas \
-	--enable-languages="c,c++" \
-	--enable-shared \
-	--disable-nls
-
-AUTOCONF_ENV += \
-	DESTDIR=$(DESTDIR) \
-	MAKE=$(MAKE)
-
-OVERRIDES += \
-	$(AUTOCONF_CFLAGS) \
-	STAGE1_CFLAGS="$(CFLAGS)" \
-	CFLAGS_FOR_TARGET="$(CFLAGS)"
-
-#
-# Because we use a different build directory, we need to make sure we
-# catch that when cleaning.
-#
-CLEANFILES += $(VER)-32.build $(VER)-32strap.build
-
-#
-# When building the strap code, it needs to exist in a different prefix.
-#
-ifeq ($(STRAP),strap)
-AUTOCONF_PREFIX = $(PREFIX)
-endif
-
-#
-# The runtime libraries that we build into proto.strap should be made to search
-# for their dependencies there as well, so that programs built to run on the
-# build machine (from proto.strap) find the correct copies of these libraries.
-#
-ifeq ($(STRAP),strap)
-	STRAPFIX_LINKS= \
-		$(DESTDIR)/$(PREFIX)/lib/64
-	STRAPFIX_FILES_32 = \
-		$(DESTDIR)/$(PREFIX)/lib/libgcc_s.so.1 \
-		$(DESTDIR)/$(PREFIX)/lib/libstdc++.so.6
-	STRAPFIX_FILES_64 = \
-		$(DESTDIR)/$(PREFIX)/lib/64/libgcc_s.so.1 \
-		$(DESTDIR)/$(PREFIX)/lib/64/libstdc++.so.6
-	STRAPFIX_FILES = $(STRAPFIX_FILES_32) $(STRAPFIX_FILES_64)
-endif
-
-#
-# Unlike everything else, gcc is built to be a cross-compiler, really.  It
-# never runs on the target system, only the build system.  So it should not
-# be using the proto area's headers or libraries.  Its own libraries will be
-# built by the new compiler, and generally aren't using system headers anyway.
-# This is not really completely true; for example, libstdc++.  This will
-# need more work to be really right.  We only deliver the libraries.
-#
-AUTOCONF_CPPFLAGS =
-AUTOCONF_LIBS =
-GENLDFLAGS =
-
-PATCHES =	Patches/*
-ALL_TGT =	bootstrap
-
-include ../Makefile.targ
-include ../Makefile.targ.autoconf
-
-#
-# To reduce repository size, the source files are stored in Manta and
-# need to be downloaded.
-#
-$(TARBALL) $(MPFR_VER).tar.bz2 $(GMP_VER).tar.bz2 $(MPC_VER).tar.gz:
-	if [[ ! -f $@.sha1 ]]; then \
-		echo "Missing required digest file!"; \
-		exit 1; \
-	fi; \
-	curl -o $@.tmp $(FETCH_BASE)/$@
-	digest -a sha1 $@.tmp > $@.tmp.sha1
-	cmp -s $@.sha1 $@.tmp.sha1
-	rm -f $@.tmp.sha1
-	mv $@.tmp $@
-
-#
-# We could use the mpfr and gmp from the build system (since the compiler will
-# be run here), but there's no good way to make gcc build itself correctly if
-# we do.  There are two main problems:
-#
-# 1. Stage2 and later cc1 and company don't honour any combination of LDFLAGS,
-# LDFLAGS_FOR_TARGET, BOOT_LDFLAGS, STAGE2_LDFLAGS, etc.  The only ways to
-# get these things built with -R/opt/local/lib are to use LD_OPTIONS, which will
-# yield the wrong results for libraries, or to hack configure.
-#
-# 2. Even if we could get -R/opt/local/lib into these programs without building
-# the libraries incorrectly, it would still be wrong.  The pkgsrc lib directory
-# on many systems contains libgcc_s.so.1; however, cc1 was built by the stage2
-# compiler and should find the libgcc that matches that compiler.  That happens
-# to be the one we just built, not the pkgsrc one.
-#
-# Instead we have mpfr and gmp built as part of the gcc build itself.
-#
-$(AUTOCONF_OUT.32): | $(VER.32)/mpfr $(VER.32)/gmp $(VER.32)/mpc
-
-$(VER.32)/mpfr: $(MPFR_VER).tar.bz2 | $(VER.32)
-	-rm -rf $@
-	mkdir -p .unpack32
-	gtar x -C .unpack32 -j --no-same-owner -f $(MPFR_VER).tar.bz2
-	mv -f .unpack32/$(MPFR_VER) ./$@
-	-rmdir .unpack32
-	chmod 755 $@/configure
-	touch $@/configure
-
-$(VER.32)/gmp: $(GMP_VER).tar.bz2 | $(VER.32)
-	-rm -rf $@
-	mkdir -p .unpack32
-	gtar x -C .unpack32 -j --no-same-owner -f $(GMP_VER).tar.bz2
-	mv -f .unpack32/$(GMP_VER) ./$@
-	-rmdir .unpack32
-	chmod 755 $@/configure
-	touch $@/configure
-
-$(VER.32)/mpc: $(MPC_VER).tar.gz | $(VER.32)
-	-rm -rf $@
-	mkdir -p .unpack32
-	gtar x -C .unpack32 -z --no-same-owner -f $(MPC_VER).tar.gz
-	mv -f .unpack32/$(MPC_VER) ./$@
-	-rmdir .unpack32
-	chmod 755 $@/configure
-	touch $@/configure
-
-.PHONY: strapfix
-strapfix: $(STRAPFIX_LINKS) $(STRAPFIX_FILES) | install
-	for f in $(STRAPFIX_FILES_32); do \
-		/usr/bin/elfedit -e \
-		    'dyn:runpath $(DESTDIR)/$(PREFIX)/lib' \
-		    $$f; \
-	done
-	for f in $(STRAPFIX_FILES_64); do \
-		/usr/bin/elfedit -e \
-		    'dyn:runpath $(DESTDIR)/$(PREFIX)/lib/64' \
-		    $$f; \
-	done
-
-$(STRAPFIX_LINKS):
-	mkdir -p `dirname $@`
-	[[ -h $@ ]] || ln -s amd64 $@
diff --git a/gcc6/Patches/001-illumos-gcc.patch b/gcc6/Patches/001-illumos-gcc.patch
deleted file mode 100644
index d2549e7..0000000
--- a/gcc6/Patches/001-illumos-gcc.patch
+++ /dev/null
@@ -1,695 +0,0 @@
-diff -ru --ignore-all-space gcc-6.3.0/contrib/compare_tests gcc-6.3.0-il/contrib/compare_tests
---- gcc-6.3.0/contrib/compare_tests	2013-05-13 19:52:42.000000000 +0200
-+++ gcc-6.3.0-il/contrib/compare_tests	2017-01-31 01:07:31.354756677 +0100
-@@ -107,8 +107,15 @@
- 	usage "Must specify either two directories or two files"
- fi
- 
--sed 's/^XFAIL/FAIL/; s/^XPASS/PASS/' < "$1" | awk '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp1
--sed 's/^XFAIL/FAIL/; s/^XPASS/PASS/' < "$2" | awk '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp2
-+osrev=`uname -sr`
-+if [ `expr "$osrev" : "SunOS 5."` -eq "8" ]; then
-+   AWK=/usr/bin/nawk
-+else
-+    AWK=awk
-+fi
-+
-+sed 's/^XFAIL/FAIL/; s/^XPASS/PASS/' < "$1" | $AWK '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp1
-+sed 's/^XFAIL/FAIL/; s/^XPASS/PASS/' < "$2" | $AWK '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp2
- 
- before=$tmp1
- now=$tmp2
-diff -ru --ignore-all-space gcc-6.3.0/gcc/common.opt gcc-6.3.0-il/gcc/common.opt
---- gcc-6.3.0/gcc/common.opt	2016-03-17 16:11:35.000000000 +0100
-+++ gcc-6.3.0-il/gcc/common.opt	2017-01-31 01:07:35.418911240 +0100
-@@ -1029,6 +1029,11 @@
- Common Var(flag_checking) Init(CHECKING_P)
- Perform internal consistency checkings.
- 
-+fclone-functions
-+Common Report Var(flag_clone_functions) Init(1)
-+Allow the compiler to clone functions to facilitate certain optimizations.
-+Enabled by default.
-+
- fcombine-stack-adjustments
- Common Report Var(flag_combine_stack_adjustments) Optimization
- Looks for opportunities to reduce stack adjustments and stack references.
-@@ -2231,6 +2236,10 @@
- Common Report Var(flag_strict_aliasing) Optimization
- Assume strict aliasing rules apply.
- 
-+fstrict-calling-conventions
-+Common Report Var(flag_strict_calling_conventions) Init(1)
-+Use strict ABI calling conventions even for static functions
-+
- fstrict-overflow
- Common Report Var(flag_strict_overflow) Optimization
- Treat signed overflow as undefined.
-diff -ru --ignore-all-space gcc-6.3.0/gcc/config/i386/i386.c gcc-6.3.0-il/gcc/config/i386/i386.c
---- gcc-6.3.0/gcc/config/i386/i386.c	2016-12-14 16:44:07.000000000 +0100
-+++ gcc-6.3.0-il/gcc/config/i386/i386.c	2017-01-31 01:07:31.550765552 +0100
-@@ -2445,6 +2445,10 @@
- 
-    saved frame pointer			if frame_pointer_needed
- 					<- HARD_FRAME_POINTER
-+   [-msave-args]			<- arg_save_offset
-+
-+   [saveargs padding]
-+
-    [saved regs]
- 					<- regs_save_offset
-    [padding0]
-@@ -2462,6 +2466,7 @@
-   */
- struct ix86_frame
- {
-+  int nmsave_args;
-   int nsseregs;
-   int nregs;
-   int va_arg_size;
-@@ -2473,6 +2478,7 @@
-   HOST_WIDE_INT hard_frame_pointer_offset;
-   HOST_WIDE_INT stack_pointer_offset;
-   HOST_WIDE_INT hfp_save_offset;
-+  HOST_WIDE_INT arg_save_offset;
-   HOST_WIDE_INT reg_save_offset;
-   HOST_WIDE_INT sse_reg_save_offset;
- 
-@@ -2608,6 +2614,8 @@
- 
- static enum calling_abi ix86_function_abi (const_tree);
- 
-+static int ix86_nsaved_args (void);
-+static void pro_epilogue_adjust_stack (rtx, rtx, rtx, int, bool);
- 
- #ifndef SUBTARGET32_DEFAULT_CPU
- #define SUBTARGET32_DEFAULT_CPU "i386"
-@@ -5196,6 +5204,9 @@
-     opts->x_ix86_isa_flags
-       |= OPTION_MASK_ISA_LZCNT & ~opts->x_ix86_isa_flags_explicit;
- 
-+  if (!TARGET_64BIT_P (opts->x_ix86_isa_flags) && TARGET_SAVE_ARGS)
-+    error ("-msave-args makes no sense in the 32-bit mode");
-+
-   /* Validate -mpreferred-stack-boundary= value or default it to
-      PREFERRED_STACK_BOUNDARY_DEFAULT.  */
-   ix86_preferred_stack_boundary = PREFERRED_STACK_BOUNDARY_DEFAULT;
-@@ -7088,6 +7099,7 @@
- 	 and callee not, or vice versa.  Instead look at whether the callee
- 	 is optimized or not.  */
-       if (target && opt_for_fn (target->decl, optimize)
-+	  && !flag_strict_calling_conventions
- 	  && !(profile_flag && !flag_fentry))
- 	{
- 	  cgraph_local_info *i = &target->local;
-@@ -7179,6 +7191,7 @@
-       /* TARGET_SSE_MATH */
-       && (target_opts_for_fn (target->decl)->x_ix86_fpmath & FPMATH_SSE)
-       && opt_for_fn (target->decl, optimize)
-+      && !flag_strict_calling_conventions
-       && !(profile_flag && !flag_fentry))
-     {
-       cgraph_local_info *i = &target->local;
-@@ -10939,7 +10952,7 @@
- 
-   ix86_compute_frame_layout (&frame);
-   return (frame.stack_pointer_offset == UNITS_PER_WORD
--	  && (frame.nregs + frame.nsseregs) == 0);
-+	  && (frame.nmsave_args + frame.nregs + frame.nsseregs) == 0);
- }
- 
- /* Value should be nonzero if functions must have frame pointers.
-@@ -10963,6 +10976,9 @@
-   if (TARGET_32BIT_MS_ABI && cfun->calls_setjmp)
-     return true;
- 
-+  if (TARGET_SAVE_ARGS)
-+    return true;
-+
-   /* Win64 SEH, very large frames need a frame-pointer as maximum stack
-      allocation is 4GB.  */
-   if (TARGET_64BIT_MS_ABI && get_frame_size () > SEH_MAX_FRAME_SIZE)
-@@ -11398,6 +11414,7 @@
- 
-   frame->nregs = ix86_nsaved_regs ();
-   frame->nsseregs = ix86_nsaved_sseregs ();
-+  frame->nmsave_args = ix86_nsaved_args ();
- 
-   /* 64-bit MS ABI seem to require stack alignment to be always 16,
-      except for function prologues, leaf functions and when the defult
-@@ -11460,7 +11477,8 @@
-     }
- 
-   frame->save_regs_using_mov
--    = (TARGET_PROLOGUE_USING_MOVE && cfun->machine->use_fast_prologue_epilogue
-+    = ((TARGET_FORCE_SAVE_REGS_USING_MOV ||
-+	(TARGET_PROLOGUE_USING_MOVE && cfun->machine->use_fast_prologue_epilogue))
-        /* If static stack checking is enabled and done with probes,
- 	  the registers need to be saved before allocating the frame.  */
-        && flag_stack_check != STATIC_BUILTIN_STACK_CHECK);
-@@ -11480,6 +11498,13 @@
-   /* The traditional frame pointer location is at the top of the frame.  */
-   frame->hard_frame_pointer_offset = offset;
- 
-+  if (TARGET_SAVE_ARGS)
-+    {
-+      offset += frame->nmsave_args * UNITS_PER_WORD;
-+      offset += (frame->nmsave_args % 2) * UNITS_PER_WORD;
-+    }
-+  frame->arg_save_offset = offset;
-+
-   /* Register save area */
-   offset += frame->nregs * UNITS_PER_WORD;
-   frame->reg_save_offset = offset;
-@@ -11557,8 +11582,9 @@
-   /* Size prologue needs to allocate.  */
-   to_allocate = offset - frame->sse_reg_save_offset;
- 
--  if ((!to_allocate && frame->nregs <= 1)
--      || (TARGET_64BIT && to_allocate >= (HOST_WIDE_INT) 0x80000000))
-+  if (!TARGET_SAVE_ARGS &&
-+      ((!to_allocate && frame->nregs <= 1)
-+       || (TARGET_64BIT && to_allocate >= (HOST_WIDE_INT) 0x80000000)))
-     frame->save_regs_using_mov = false;
- 
-   if (ix86_using_red_zone ()
-@@ -11569,7 +11595,11 @@
-     {
-       frame->red_zone_size = to_allocate;
-       if (frame->save_regs_using_mov)
-+	{
- 	frame->red_zone_size += frame->nregs * UNITS_PER_WORD;
-+	  frame->red_zone_size += frame->nmsave_args * UNITS_PER_WORD;
-+	  frame->red_zone_size += (frame->nmsave_args % 2) * UNITS_PER_WORD;
-+	}
-       if (frame->red_zone_size > RED_ZONE_SIZE - RED_ZONE_RESERVE)
- 	frame->red_zone_size = RED_ZONE_SIZE - RED_ZONE_RESERVE;
-     }
-@@ -11600,6 +11630,23 @@
- 	  frame->hard_frame_pointer_offset = frame->stack_pointer_offset - 128;
- 	}
-     }
-+
-+
-+  if (getenv("DEBUG_FRAME_STUFF") != NULL)
-+    {
-+      printf("nmsave_args: %d\n", frame->nmsave_args);
-+      printf("nsseregs: %d\n", frame->nsseregs);
-+      printf("nregs: %d\n", frame->nregs);
-+
-+      printf("frame_pointer_offset: %llx\n", frame->frame_pointer_offset);
-+      printf("hard_frame_pointer_offset: %llx\n", frame->hard_frame_pointer_offset);
-+      printf("stack_pointer_offset: %llx\n", frame->stack_pointer_offset);
-+      printf("hfp_save_offset: %llx\n", frame->hfp_save_offset);
-+      printf("arg_save_offset: %llx\n", frame->arg_save_offset);
-+      printf("reg_save_offset: %llx\n", frame->reg_save_offset);
-+      printf("sse_reg_save_offset: %llx\n", frame->sse_reg_save_offset);
-+
-+    }
- }
- 
- /* This is semi-inlined memory_address_length, but simplified
-@@ -11708,6 +11755,24 @@
-   unsigned int regno;
-   rtx_insn *insn;
- 
-+  if (TARGET_SAVE_ARGS)
-+    {
-+      int i;
-+      int nsaved = ix86_nsaved_args ();
-+      int start = cfun->returns_struct;
-+
-+      for (i = start; i < start + nsaved; i++)
-+	{
-+	  regno = x86_64_int_parameter_registers[i];
-+	  insn = emit_insn (gen_push (gen_rtx_REG (word_mode, regno)));
-+	  RTX_FRAME_RELATED_P (insn) = 1;
-+	}
-+      if (nsaved % 2 != 0)
-+	pro_epilogue_adjust_stack (stack_pointer_rtx, stack_pointer_rtx,
-+				   GEN_INT (-UNITS_PER_WORD), -1, false);
-+    }
-+
-+
-   for (regno = FIRST_PSEUDO_REGISTER - 1; regno-- > 0; )
-     if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, true))
-       {
-@@ -11795,9 +11860,30 @@
- /* Emit code to save registers using MOV insns.
-    First register is stored at CFA - CFA_OFFSET.  */
- static void
--ix86_emit_save_regs_using_mov (HOST_WIDE_INT cfa_offset)
-+ix86_emit_save_regs_using_mov (struct ix86_frame *frame)
- {
-   unsigned int regno;
-+  HOST_WIDE_INT cfa_offset = frame->arg_save_offset;
-+
-+  if (TARGET_SAVE_ARGS)
-+    {
-+      int i;
-+      int nsaved = ix86_nsaved_args ();
-+      int start = cfun->returns_struct;
-+
-+      /* We deal with this twice? */
-+      if (nsaved % 2 != 0)
-+	cfa_offset -= UNITS_PER_WORD;
-+
-+      for (i = start + nsaved - 1; i >= start; i--)
-+	{
-+	  regno = x86_64_int_parameter_registers[i];
-+	  ix86_emit_save_reg_using_mov(word_mode, regno, cfa_offset);
-+	  cfa_offset -= UNITS_PER_WORD;
-+	}
-+    }
-+
-+  cfa_offset = frame->reg_save_offset;
- 
-   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)
-     if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, true))
-@@ -12839,7 +12925,7 @@
- 	}
-     }
- 
--  int_registers_saved = (frame.nregs == 0);
-+  int_registers_saved = (frame.nregs == 0 && frame.nmsave_args == 0);
-   sse_registers_saved = (frame.nsseregs == 0);
- 
-   if (frame_pointer_needed && !m->fs.fp_valid)
-@@ -12879,6 +12965,7 @@
- 	{
- 	  ix86_emit_save_regs ();
- 	  int_registers_saved = true;
-+
- 	  gcc_assert (m->fs.sp_offset == frame.reg_save_offset);
- 	}
- 
-@@ -12890,7 +12977,7 @@
- 	       && (! TARGET_STACK_PROBE
- 		   || frame.stack_pointer_offset < CHECK_STACK_LIMIT))
- 	{
--	  ix86_emit_save_regs_using_mov (frame.reg_save_offset);
-+	  ix86_emit_save_regs_using_mov (&frame);
- 	  int_registers_saved = true;
- 	}
-     }
-@@ -13133,7 +13220,7 @@
-     }
- 
-   if (!int_registers_saved)
--    ix86_emit_save_regs_using_mov (frame.reg_save_offset);
-+    ix86_emit_save_regs_using_mov (&frame);
-   if (!sse_registers_saved)
-     ix86_emit_save_sse_regs_using_mov (frame.sse_reg_save_offset);
- 
-@@ -13166,6 +13253,7 @@
-      relative to the value of the stack pointer at the end of the function
-      prologue, and moving instructions that access redzone area via frame
-      pointer inside push sequence violates this assumption.  */
-+  /* XXX: We may wish to do this when SAVE_ARGS in general */
-   if (frame_pointer_needed && frame.red_zone_size)
-     emit_insn (gen_memory_blockage ());
- 
-@@ -13393,6 +13481,7 @@
- 
-   /* See the comment about red zone and frame
-      pointer usage in ix86_expand_prologue.  */
-+  /* XXX: We may want to do this when SAVE_ARGS in general */
-   if (frame_pointer_needed && frame.red_zone_size)
-     emit_insn (gen_memory_blockage ());
- 
-@@ -13586,6 +13675,36 @@
-       ix86_emit_restore_regs_using_pop ();
-     }
- 
-+  if (TARGET_SAVE_ARGS) {
-+    /*
-+     * For each saved argument, emit a restore note, to make sure it happens
-+     * correctly within the shrink wrapping (I think).
-+     *
-+     * Note that 'restore' in this case merely means the rule is the same as
-+     * it was on function entry, not that we have actually done a register
-+     * restore (which of course, we haven't).
-+     *
-+     * If we do not do this, the DWARF code will emit sufficient restores to
-+     * provide balance on its own initiative, which in the presence of
-+     * -fshrink-wrap may actually _introduce_ unbalance (whereby we only
-+     * .cfi_offset a register sometimes, but will always .cfi_restore it.
-+     * This will trip an assert.)
-+     */
-+    int start = cfun->returns_struct;
-+    int nsaved = ix86_nsaved_args();
-+    int i;
-+
-+    for (i = start + nsaved - 1; i >= start; i--)
-+      queued_cfa_restores
-+	= alloc_reg_note (REG_CFA_RESTORE,
-+			  gen_rtx_REG(Pmode,
-+				      x86_64_int_parameter_registers[i]),
-+			  queued_cfa_restores);
-+
-+    gcc_assert(m->fs.fp_valid);
-+  }
-+
-+
-   /* If we used a stack pointer and haven't already got rid of it,
-      then do so now.  */
-   if (m->fs.fp_valid)
-@@ -14547,6 +14666,19 @@
-   return !ix86_legitimate_constant_p (mode, x);
- }
- 
-+/* Return number of arguments to be saved on the stack with
-+   -msave-args.  */
-+
-+static int
-+ix86_nsaved_args (void)
-+{
-+  if (TARGET_SAVE_ARGS)
-+    return crtl->args.info.regno - cfun->returns_struct;
-+  else
-+    return 0;
-+}
-+
-+
- /*  Nonzero if the symbol is marked as dllimport, or as stub-variable,
-     otherwise zero.  */
- 
-diff -ru --ignore-all-space gcc-6.3.0/gcc/config/i386/i386.opt gcc-6.3.0-il/gcc/config/i386/i386.opt
---- gcc-6.3.0/gcc/config/i386/i386.opt	2016-10-13 23:15:45.000000000 +0200
-+++ gcc-6.3.0-il/gcc/config/i386/i386.opt	2017-01-31 01:07:31.550854008 +0100
-@@ -499,6 +499,16 @@
- Target Report Mask(TLS_DIRECT_SEG_REFS)
- Use direct references against %gs when accessing tls data.
- 
-+msave-args
-+Target Report Var(TARGET_SAVE_ARGS)
-+Save integer arguments on the stack at function entry
-+
-+mforce-save-regs-using-mov
-+Target Report Var(TARGET_FORCE_SAVE_REGS_USING_MOV)
-+Save registers using push in function prologues.  This is intentionally
-+undocumented and used for msave-args testing.
-+
-+
- mtune=
- Target RejectNegative Joined Var(ix86_tune_string)
- Schedule code for given CPU.
-diff -ru --ignore-all-space gcc-6.3.0/gcc/config/sol2.h gcc-6.3.0-il/gcc/config/sol2.h
---- gcc-6.3.0/gcc/config/sol2.h	2016-01-04 15:30:50.000000000 +0100
-+++ gcc-6.3.0-il/gcc/config/sol2.h	2017-01-31 01:07:31.613504607 +0100
-@@ -155,15 +155,22 @@
- #define SUPPORTS_INIT_PRIORITY HAVE_INITFINI_ARRAY_SUPPORT
- 
- #undef STARTFILE_ARCH_SPEC
--#define STARTFILE_ARCH_SPEC "%{ansi:values-Xc.o%s} \
--			    %{!ansi:values-Xa.o%s}"
-+#define STARTFILE_ARCH_SPEC "%{std=c1x|std=gnu1x:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c11|std=gnu11:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c99|std=gnu99:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c9x|std=gnu9x:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c++0x|std=gnu++0x:values-Xc.o%s; \
-+			       std=c++11|std=gnu++11:values-Xc.o%s; \
-+			       std=c++03|std=gnu++03:values-Xc.o%s; \
-+			       :values-Xa.o%s}"
-+
- 
- #if defined(HAVE_LD_PIE) && defined(HAVE_SOLARIS_CRTS)
- #define STARTFILE_CRTBEGIN_SPEC "%{shared:crtbeginS.o%s} \
- 				 %{" PIE_SPEC ":crtbeginS.o%s} \
- 				 %{" NO_PIE_SPEC ":crtbegin.o%s}"
- #else
--#define STARTFILE_CRTBEGIN_SPEC	"crtbegin.o%s"
-+#define STARTFILE_CRTBEGIN_SPEC	"%{shared:crtbeginS.o%s;:crtbegin.o%s}"
- #endif
- 
- #if SUPPORTS_INIT_PRIORITY
-@@ -208,7 +215,7 @@
- 			       %{" PIE_SPEC ":crtendS.o%s} \
- 			       %{" NO_PIE_SPEC ":crtend.o%s}}"
- #else
--#define ENDFILE_CRTEND_SPEC "crtend.o%s"
-+#define ENDFILE_CRTEND_SPEC "%{shared:crtendS.o%s;:crtend.o%s}"
- #endif
- 
- #undef  ENDFILE_SPEC
-diff -ru --ignore-all-space gcc-6.3.0/gcc/configure gcc-6.3.0-il/gcc/configure
---- gcc-6.3.0/gcc/configure	2016-12-11 17:23:04.000000000 +0100
-+++ gcc-6.3.0-il/gcc/configure	2017-01-31 01:07:35.420151795 +0100
-@@ -22798,6 +22798,7 @@
- 	    -e 's,^.*: 5\.[0-9][0-9]*-\([0-9]\.[0-9][0-9]*\).*$,\1,p'`
- 	  ld_vers_major=`expr "$ld_vers" : '\([0-9]*\)'`
- 	  ld_vers_minor=`expr "$ld_vers" : '[0-9]*\.\([0-9]*\)'`
-+          ld_vers_isillumos=`echo "$ld_ver" | grep '(illumos)'`
- 	fi
- 	;;
-     esac
-@@ -27775,6 +27776,8 @@
-         # Sun ld has various bugs in .eh_frame_hdr support before version 1.2251.
-         if test "$ld_vers_major" -gt 1 || test "$ld_vers_minor" -ge 2251; then
-           gcc_cv_ld_eh_frame_hdr=yes
-+        elif test "$ld_vers_minor" -ge 1735 && test -n "$ld_vers_isillumos"; then
-+          gcc_cv_ld_eh_frame_hdr=yes
-         fi
-         ;;
-     esac
-diff -ru --ignore-all-space gcc-6.3.0/gcc/configure.ac gcc-6.3.0-il/gcc/configure.ac
---- gcc-6.3.0/gcc/configure.ac	2016-12-11 17:23:04.000000000 +0100
-+++ gcc-6.3.0-il/gcc/configure.ac	2017-01-31 01:07:35.420576310 +0100
-@@ -2592,6 +2592,7 @@
- 	    -e 's,^.*: 5\.[0-9][0-9]*-\([0-9]\.[0-9][0-9]*\).*$,\1,p'`
- 	  ld_vers_major=`expr "$ld_vers" : '\([0-9]*\)'`
- 	  ld_vers_minor=`expr "$ld_vers" : '[0-9]*\.\([0-9]*\)'`
-+          ld_vers_isillumos=`echo "$ld_ver" | grep '(illumos)'`
- 	fi
- 	;;
-     esac
-@@ -4852,6 +4853,8 @@
-         # Sun ld has various bugs in .eh_frame_hdr support before version 1.2251.
-         if test "$ld_vers_major" -gt 1 || test "$ld_vers_minor" -ge 2251; then
-           gcc_cv_ld_eh_frame_hdr=yes
-+        elif test "$ld_vers_minor" -ge 1735 && test -n "$ld_vers_isillumos"; then
-+          gcc_cv_ld_eh_frame_hdr=yes
-         fi
-         ;;
-     esac
-diff -ru --ignore-all-space gcc-6.3.0/gcc/doc/invoke.texi gcc-6.3.0-il/gcc/doc/invoke.texi
---- gcc-6.3.0/gcc/doc/invoke.texi	2016-07-08 16:51:44.000000000 +0200
-+++ gcc-6.3.0-il/gcc/doc/invoke.texi	2017-01-31 01:07:35.356443734 +0100
-@@ -339,7 +339,7 @@
- -fauto-inc-dec -fbranch-probabilities @gol
- -fbranch-target-load-optimize -fbranch-target-load-optimize2 @gol
- -fbtr-bb-exclusive -fcaller-saves @gol
---fcombine-stack-adjustments -fconserve-stack @gol
-+-fclone-functions -fcombine-stack-adjustments -fconserve-stack @gol
- -fcompare-elim -fcprop-registers -fcrossjumping @gol
- -fcse-follow-jumps -fcse-skip-blocks -fcx-fortran-rules @gol
- -fcx-limited-range @gol
-@@ -7766,6 +7766,12 @@
- The @option{-fstrict-aliasing} option is enabled at levels
- @option{-O2}, @option{-O3}, @option{-Os}.
- 
-+@item -fstrict-calling-conventions
-+@opindex fstrict-calling-conventions
-+Use strict ABI calling conventions even with local functions.
-+This disable certain optimizations that may cause GCC to call local
-+functions in a manner other than that described by the ABI.
-+
- @item -fstrict-overflow
- @opindex fstrict-overflow
- Allow the compiler to assume strict signed overflow rules, depending
-@@ -8184,6 +8190,15 @@
- The default is @option{-fno-fat-lto-objects} on targets with linker plugin
- support.
- 
-+@item -fno-clone-functions
-+@opindex fno-clone-functions
-+Forbid the implicit cloning of functions implicit in certain
-+optimizations.  This also effectively will disable any optimization
-+which wishes to clone functions, equivalent to each function having
-+the ``noclone'' attribute.  This allows the prevention of the
-+dissociation of a piece of text from an intelligible and expected
-+symbol name, which may hamper debugging and tracing.
-+
- @item -fcompare-elim
- @opindex fcompare-elim
- After register allocation and post-register allocation instruction splitting,
-@@ -12871,6 +12886,10 @@
- addresses and sizes of sections.  Pointers are 64 bits.  Programs can be
- statically linked only.
- 
-+@item -msave-args
-+@opindex msave-args
-+Save integer-sized arguments on the stack on function entry.
-+
- @item -mstrict-align
- @opindex mstrict-align
- Do not assume that unaligned memory references are handled by the system.
-diff -ru --ignore-all-space gcc-6.3.0/gcc/dwarf2out.c gcc-6.3.0-il/gcc/dwarf2out.c
---- gcc-6.3.0/gcc/dwarf2out.c	2016-09-01 13:43:15.000000000 +0200
-+++ gcc-6.3.0-il/gcc/dwarf2out.c	2017-01-31 01:07:35.421861016 +0100
-@@ -20842,6 +20842,11 @@
-     /* Add the calling convention attribute if requested.  */
-     add_calling_convention_attribute (subr_die, decl);
- 
-+#ifdef TARGET_SAVE_ARGS
-+  if (TARGET_SAVE_ARGS)
-+    add_AT_flag (subr_die, DW_AT_SUN_amd64_parmdump, 1);
-+#endif
-+
-   /* Output Dwarf info for all of the stuff within the body of the function
-      (if it has one - it may be just a declaration).
- 
-diff -ru --ignore-all-space gcc-6.3.0/gcc/intl.c gcc-6.3.0-il/gcc/intl.c
---- gcc-6.3.0/gcc/intl.c	2016-01-04 15:30:50.000000000 +0100
-+++ gcc-6.3.0-il/gcc/intl.c	2017-01-31 01:07:35.421930308 +0100
-@@ -74,17 +74,11 @@
- 
-   if (!strcmp (open_quote, "`") && !strcmp (close_quote, "'"))
-     {
--      /* Untranslated quotes that it may be possible to replace with
--	 U+2018 and U+2019; but otherwise use "'" instead of "`" as
--	 opening quote.  */
-+      /*
-+       * open_quote is ` purely for ease of translation.  If they aren't
-+       * translated, use ' for both
-+       */
-       open_quote = "'";
--#if defined HAVE_LANGINFO_CODESET
--      if (locale_utf8)
--	{
--	  open_quote = "\xe2\x80\x98";
--	  close_quote = "\xe2\x80\x99";
--	}
--#endif
-     }
- }
- 
-@@ -145,6 +139,3 @@
-    spaces[len] = '\0';
-    return spaces;
- }
--
--
--
-diff -ru --ignore-all-space gcc-6.3.0/gcc/symtab.c gcc-6.3.0-il/gcc/symtab.c
---- gcc-6.3.0/gcc/symtab.c	2016-04-04 11:26:29.000000000 +0200
-+++ gcc-6.3.0-il/gcc/symtab.c	2017-01-31 01:07:35.422076751 +0100
-@@ -1728,6 +1728,10 @@
-   tree new_decl;
-   symtab_node *new_node = NULL;
- 
-+  /* Do not allow a clone to be created if function-cloning is disabled */
-+  if (!flag_clone_functions)
-+	  return NULL;
-+
-   /* First try to look up existing alias or base object
-      (if that is already non-overwritable).  */
-   symtab_node *node = ultimate_alias_target ();
-diff -ru --ignore-all-space gcc-6.3.0/gcc/testsuite/gcc.target/i386/local.c gcc-6.3.0-il/gcc/testsuite/gcc.target/i386/local.c
---- gcc-6.3.0/gcc/testsuite/gcc.target/i386/local.c	2015-12-29 11:32:21.000000000 +0100
-+++ gcc-6.3.0-il/gcc/testsuite/gcc.target/i386/local.c	2017-01-31 01:07:32.695587218 +0100
-@@ -1,5 +1,6 @@
- /* { dg-do compile } */
--/* { dg-options "-O2 -funit-at-a-time" } */
-+/* { dg-options "-O2 -funit-at-a-time -fno-strict-calling-conventions" { target ia32 } } */
-+/* { dg-options "-O2 -funit-at-a-time" { target lp64 } } */
- /* { dg-final { scan-assembler "magic\[^\\n\]*eax" { target ia32 } } } */
- /* { dg-final { scan-assembler "magic\[^\\n\]*(edi|ecx)" { target { ! ia32 } } } } */
- 
-diff -ru --ignore-all-space gcc-6.3.0/gcc/tree-inline.c gcc-6.3.0-il/gcc/tree-inline.c
---- gcc-6.3.0/gcc/tree-inline.c	2016-12-07 23:32:34.000000000 +0100
-+++ gcc-6.3.0-il/gcc/tree-inline.c	2017-01-31 01:07:35.422488542 +0100
-@@ -5534,7 +5534,8 @@
- tree_versionable_function_p (tree fndecl)
- {
-   return (!lookup_attribute ("noclone", DECL_ATTRIBUTES (fndecl))
--	  && copy_forbidden (DECL_STRUCT_FUNCTION (fndecl)) == NULL);
-+	  && (copy_forbidden (DECL_STRUCT_FUNCTION (fndecl)) == NULL)
-+	  && flag_clone_functions);
- }
- 
- /* Delete all unreachable basic blocks and update callgraph.
-diff -ru --ignore-all-space gcc-6.3.0/include/dwarf2.def gcc-6.3.0-il/include/dwarf2.def
---- gcc-6.3.0/include/dwarf2.def	2015-08-14 11:48:13.000000000 +0200
-+++ gcc-6.3.0-il/include/dwarf2.def	2017-01-31 01:07:31.389764268 +0100
-@@ -399,6 +399,8 @@
- DW_AT (DW_AT_GNU_discriminator, 0x2136)
- /* VMS extensions.  */
- DW_AT (DW_AT_VMS_rtnbeg_pd_address, 0x2201)
-+/* Sun extension. */
-+DW_AT (DW_AT_SUN_amd64_parmdump, 0x2224)
- /* GNAT extensions.  */
- /* GNAT descriptive type.
-    See http://gcc.gnu.org/wiki/DW_AT_GNAT_descriptive_type .  */
-diff -ru --ignore-all-space gcc-6.3.0/libgcc/config.host gcc-6.3.0-il/libgcc/config.host
---- gcc-6.3.0/libgcc/config.host	2016-11-19 04:03:55.000000000 +0100
-+++ gcc-6.3.0-il/libgcc/config.host	2017-01-31 01:07:30.277906831 +0100
-@@ -267,7 +267,7 @@
- *-*-solaris2*)
-   # Unless linker support and dl_iterate_phdr are present,
-   # unwind-dw2-fde-dip.c automatically falls back to unwind-dw2-fde.c.
--  tmake_file="$tmake_file sol2/t-sol2 t-eh-dw2-dip t-crtstuff-pic t-libgcc-pic t-slibgcc t-slibgcc-elf-ver"
-+  tmake_file="$tmake_file sol2/t-sol2 t-eh-dw2-dip t-crtstuff-pic t-libgcc-pic t-slibgcc t-slibgcc-elf-ver t-crtstuff-pic"
-   if test $with_gnu_ld = yes; then
-     tmake_file="$tmake_file t-slibgcc-gld"
-   else
-@@ -287,6 +287,7 @@
-       i?86-*-solaris2.1[0-9]* | x86_64-*-solaris2.1[0-9]*)
-         # Solaris 10+/x86 provides crt1.o, crti.o, crtn.o, and gcrt1.o as
-         # part of the base system.
-+        extra_parts="$extra_parts crtbeginS.o crtendS.o"
-         ;;
-       sparc*-*-solaris2.1[0-9]*)
-         # Solaris 10+/SPARC lacks crt1.o and gcrt1.o.
---- gcc-6.3.0/gcc/config/sol2-c.c.orig	2016-01-04 15:30:50.000000000 +0100
-+++ gcc-6.3.0/gcc/config/sol2-c.c	2017-02-07 23:32:09.669084357 +0100
-@@ -40,7 +40,10 @@
- 
- static const format_flag_spec cmn_err_flag_specs[] =
- {
-+  { '0',  0, 0, N_("'0' flag"),        N_("the '0' flag"),                     STD_C89 },
-+  { '-',  0, 0, N_("'-' flag"),        N_("the '-' flag"),                     STD_C89 },
-   { 'w',  0, 0, N_("field width"),     N_("field width in printf format"),     STD_C89 },
-+  { 'p',  0, 0, N_("precision"),       N_("precision in printf format"),       STD_C89 },
-   { 'L',  0, 0, N_("length modifier"), N_("length modifier in printf format"), STD_C89 },
-   { 0, 0, 0, NULL, NULL, STD_C89 }
- };
-@@ -48,6 +51,7 @@
- 
- static const format_flag_pair cmn_err_flag_pairs[] =
- {
-+  { '0', '-', 1, 0 },
-   { 0, 0, 0, 0 }
- };
- 
-@@ -57,21 +61,21 @@
- static const format_char_info cmn_err_char_table[] =
- {
-   /* C89 conversion specifiers.  */
--  { "dD",  0, STD_C89, { T89_I,   BADLEN,  BADLEN,  T89_L,   T9L_LL,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "oOxX",0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "u",   0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "c",   0, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "p",   1, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w", "c",  NULL },
--  { "s",   1, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "cR", NULL },
--  { "b",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",   "",   &bitfield_string_type },
-+  { "dD",  0, STD_C89, { T89_I,   BADLEN,  BADLEN,  T89_L,   T9L_LL,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp0", "",   NULL },
-+  { "oOxX",0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp0", "",   NULL },
-+  { "u",   0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp0", "",   NULL },
-+  { "c",   0, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "",   NULL },
-+  { "p",   1, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "c",  NULL },
-+  { "s",   1, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp",  "cR", NULL },
-+  { "b",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "",   &bitfield_string_type },
-   { NULL,  0, STD_C89, NOLENGTHS, NULL, NULL, NULL }
- };
- 
- EXPORTED_CONST format_kind_info solaris_format_types[] = {
--  { "cmn_err",  cmn_err_length_specs,  cmn_err_char_table, "", NULL,
-+  { "cmn_err",  cmn_err_length_specs,  cmn_err_char_table, "0-", NULL,
-     cmn_err_flag_specs, cmn_err_flag_pairs,
-     FMT_FLAG_ARG_CONVERT|FMT_FLAG_EMPTY_PREC_OK,
--    'w', 0, 0, 0, 'L', 0,
-+    'w', 0, 'p', 0, 'L', 0,
-     &integer_type_node, &integer_type_node
-   }
- };
diff --git a/gcc6/Patches/002-ld-flags.patch b/gcc6/Patches/002-ld-flags.patch
deleted file mode 100644
index 55eb5e4..0000000
--- a/gcc6/Patches/002-ld-flags.patch
+++ /dev/null
@@ -1,24 +0,0 @@
---- ./gcc/config/sol2.h.orig	2016-05-08 21:13:10.810423614 +0200
-+++ ./gcc/config/sol2.h	2016-05-08 21:16:55.681535743 +0200
-@@ -195,8 +195,8 @@
-   "%{G:-G} \
-    %{YP,*} \
-    %{R*} \
--   %{!YP,*:%{p|pg:-Y P,%R/usr/lib/libp%R/lib:%R/usr/lib} \
--	   %{!p:%{!pg:-Y P,%R/lib:%R/usr/lib}}}"
-+   %{!YP,*:%{p|pg:-Y P,%R/usr/gcc/6/lib:%R/lib:%R/usr/lib -R %R/usr/gcc/6/lib -L %R/usr/gcc/6/lib} \
-+	   %{!p:%{!pg:-Y P,%R/usr/gcc/6/lib:%R/lib:%R/usr/lib -R %R/usr/gcc/6/lib -L %R/usr/gcc/6/lib}}}"
- 
- #undef LINK_ARCH32_SPEC
- #define LINK_ARCH32_SPEC LINK_ARCH32_SPEC_BASE
-@@ -208,8 +208,8 @@
-   "%{G:-G} \
-    %{YP,*} \
-    %{R*} \
--   %{!YP,*:%{p|pg:-Y P,%R/usr/lib/libp/" ARCH64_SUBDIR ":%R/lib/" ARCH64_SUBDIR ":%R/usr/lib/" ARCH64_SUBDIR "}	\
--	   %{!p:%{!pg:-Y P,%R/lib/" ARCH64_SUBDIR ":%R/usr/lib/" ARCH64_SUBDIR "}}}"
-+   %{!YP,*:%{p|pg:-Y P,%R/usr/gcc/6/lib/" ARCH64_SUBDIR ":%R/lib/" ARCH64_SUBDIR ":%R/usr/lib/" ARCH64_SUBDIR " -R %R/usr/gcc/6/lib/" ARCH64_SUBDIR " -L %R/usr/gcc/6/lib/" ARCH64_SUBDIR "}	\
-+	   %{!p:%{!pg:-Y P,%R/usr/gcc/6/lib/" ARCH64_SUBDIR ":%R/lib/" ARCH64_SUBDIR ":%R/usr/lib/" ARCH64_SUBDIR " -R %R/usr/gcc/6/lib/" ARCH64_SUBDIR " -L %R/usr/gcc/6/lib/" ARCH64_SUBDIR "}}}"
- 
- #undef LINK_ARCH64_SPEC
- #ifndef USE_GLD
diff --git a/gcc6/Patches/003-cilk-sparc.patch b/gcc6/Patches/003-cilk-sparc.patch
deleted file mode 100644
index c64e8d8..0000000
--- a/gcc6/Patches/003-cilk-sparc.patch
+++ /dev/null
@@ -1,327 +0,0 @@
-#
-# Enable cilk support for Sparc
-# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=68945
-#
---- gcc-5.3.0/libcilkrts/runtime/sysdep-unix.c	2013-10-30 15:51:29.000000000 -0700
-+++ gcc-5.3.0/libcilkrts/runtime/sysdep-unix.c	2015-08-05 11:51:37.086142492 -0700
-@@ -81,6 +81,10 @@
- #include <pthread.h>
- #include <unistd.h>
- 
-+#if defined(sun) || defined(__sun) || defined(__sun__)
-+#include <strings.h>
-+#endif
-+
- #if defined HAVE_ALLOCA_H
- # include <alloca.h>
- #elif defined __GNUC__
-@@ -110,6 +114,14 @@
- #   define MAP_ANONYMOUS MAP_ANON
- #endif
- 
-+#if defined(sun) || defined(__sun) || defined(__sun__)
-+#include <sys/resource.h>
-+#include <dlfcn.h>
-+#ifndef MAP_ANONYMOUS
-+#define MAP_ANONYMOUS MAP_ANON
-+#endif
-+#endif
-+
- #ifdef  __VXWORKS__
- #   include <vxWorks.h>   
- #   include <vxCpuLib.h>  
---- gcc-5.3.0/libcilkrts/configure.tgt	2014-11-13 06:03:17.000000000 -0800
-+++ gcc-5.3.0/libcilkrts/configure.tgt	2015-08-03 20:58:07.888515211 -0700
-@@ -37,6 +37,12 @@
-     ;;
-   i?86-*-*)
-     ;;
-+  sparc-*-*)
-+    ;;
-+  sparc*-*-*)
-+    ;;
-+  __sparc*-*-*)
-+    ;;
-   *-*-*)
-     UNSUPPORTED=1
-     ;;
---- gcc-5.3.0/libcilkrts/runtime/config/generic/cilk-abi-vla.c	2013-10-29 11:37:47.000000000 -0700
-+++ gcc-5.3.0/libcilkrts/runtime/config/generic/cilk-abi-vla.c	2015-08-05 18:16:04.959499239 -0700
-@@ -103,5 +103,5 @@
- 
-     // Just free the allocated memory to the heap since we don't know
-     // how to expand/contract the calling frame
--    vla_internal_heap_free(t, full_size);
-+    vla_internal_heap_free(sf, full_size);
- }
---- gcc-5.3.0/libcilkrts/runtime/config/generic/os-unix-sysdep.c	2013-10-29 11:37:47.000000000 -0700
-+++ gcc-5.3.0/libcilkrts/runtime/config/generic/os-unix-sysdep.c	2015-08-06 10:27:40.088975924 -0700
-@@ -43,22 +43,55 @@
- #include "os.h"
- #include "sysdep.h"
- 
-+#if defined(__sparc) || defined(__sparc__)
-+# include <sys/times.h>
-+# include <limits.h>
-+#endif
-+
- /*
-  * The cycle counter is used for debugging.  This funciton is only called if
-  * CILK_PROFILE is defined when the runtime is built.
-  */
- COMMON_SYSDEP unsigned long long __cilkrts_getticks(void)
- {
-+#if defined(__sparc) || defined(__sparc__)
-+  struct tms t;
-+
-+  if (times(&t) != (clock_t) -1)
-+    return (unsigned long long) (t.tms_utime + t.tms_stime);
-+
-+  return 0ULL;
-+#else
- #   warning "unimplemented cycle counter"
-     return 0;
-+#endif
-+}
-+
-+#if defined(__sparc) || defined(__sparc__)
-+#include "os-fence.h"
-+/*
-+ * SPARC V9 __cilkrts_fence implementation
-+ */
-+COMMON_SYSDEP void __cilkrts_fence(void)
-+{
-+  __asm__ __volatile__ ("membar #LoadLoad | #LoadStore | #StoreStore | #StoreLoad" ::: "memory");
- }
-+#endif
- 
- /*
-  * A "short pause" - called from the Cilk runtime's spinloops.
-  */
- COMMON_SYSDEP void __cilkrts_short_pause(void)
- {
-+#if defined(__sparc) || defined(__sparc__)
-+  /* spin around for 8 cycles */
-+  __asm__ __volatile__("rd %ccr, %g0");
-+  __asm__ __volatile__("rd %ccr, %g0");
-+  __asm__ __volatile__("rd %ccr, %g0");
-+  __asm__ __volatile__("rd %ccr, %g0");
-+#else
- #   warning __cilkrts_short_pause empty
-+#endif
- }
- 
- /*
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib.c	2013-11-06 06:55:46.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib.c	2015-08-06 19:09:24.207776401 -0700
-@@ -1,6 +1,6 @@
- /* { dg-options "-fcilkplus" } */
--/* { dg-do run { target i?86-*-* x86_64-*-* } } */
--/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } */
-+/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #if HAVE_IO
- #include <stdio.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/steal_check.c	2014-01-09 05:37:41.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/steal_check.c	2015-08-06 19:09:24.563452389 -0700
-@@ -1,6 +1,6 @@
--/* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run  { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- // #include <cilk/cilk_api.h>
- extern void __cilkrts_set_param (char *, char *);
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/spawnee_inline.c	2014-01-09 05:37:41.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/spawnee_inline.c	2015-08-06 19:09:24.472161093 -0700
-@@ -1,6 +1,6 @@
--/* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run  { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus -w" } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #include <stdio.h>
- #include <stdlib.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk_for_grain.c	2014-09-02 05:52:29.000000000 -0700
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk_for_grain.c	2015-08-06 19:09:24.050896837 -0700
-@@ -1,7 +1,7 @@
--/* { dg-do run { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
- /* { dg-additional-options "-std=gnu99" { target c } } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- 
- int grain_value = 2;
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/nested_cilk_for.c	2014-09-02 05:52:29.000000000 -0700
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/nested_cilk_for.c	2015-08-06 19:09:24.328343364 -0700
-@@ -1,7 +1,7 @@
--/* { dg-do run { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
- /* { dg-additional-options "-std=gnu99" { target c } } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #if HAVE_IO
- #include <stdio.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/spawning_arg.c	2014-01-09 05:37:41.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/spawning_arg.c	2015-08-06 19:09:24.519701327 -0700
-@@ -1,6 +1,6 @@
--/* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run  { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- void f0(volatile int *steal_flag)
- { 
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib_no_sync.c	2013-11-06 06:55:46.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib_no_sync.c	2015-08-06 19:09:24.279017911 -0700
-@@ -1,6 +1,6 @@
- /* { dg-options "-fcilkplus" } */
--/* { dg-do run { target i?86-*-* x86_64-*-* } } */
--/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } */
-+/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #if HAVE_IO
- #include <stdio.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk_for_ptr_iter.c	2014-09-02 05:52:29.000000000 -0700
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk_for_ptr_iter.c	2015-08-06 19:09:24.101455854 -0700
-@@ -1,7 +1,7 @@
--/* { dg-do run { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
- /* { dg-additional-options "-std=gnu99" { target c } } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- 
- 
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib_no_return.c	2013-11-06 06:55:46.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib_no_return.c	2015-08-06 19:09:24.254308740 -0700
-@@ -1,6 +1,6 @@
- /* { dg-options "-fcilkplus" } */
--/* { dg-do run { target i?86-*-* x86_64-*-* } } */
--/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } */
-+/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #if HAVE_IO
- #include <stdio.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/test__cilk.c	2013-10-29 11:36:31.000000000 -0700
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/test__cilk.c	2015-08-06 19:09:24.600718008 -0700
-@@ -1,5 +1,5 @@
- /* { dg-do compile } */
--/* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run  { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
- 
- int main (void)
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/varargs_test.c	2014-01-09 05:37:41.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/varargs_test.c	2015-08-06 19:09:24.621315395 -0700
-@@ -1,6 +1,6 @@
--/* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run  { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #include <stdarg.h>
- #include <stdlib.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/pr63307.c	2015-01-21 13:23:04.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/pr63307.c	2015-08-06 19:09:24.447390446 -0700
-@@ -1,4 +1,4 @@
- /* { dg-options "-fcilkplus -fcompare-debug" } */
--/* { dg-do compile { target i?86-*-* x86_64-*-* } } */
-+/* { dg-do compile { target i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } */
- 
- #include "fib_no_return.c"
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk-for-2.c	2014-09-02 05:52:29.000000000 -0700
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk-for-2.c	2015-08-06 19:09:23.984625444 -0700
-@@ -1,7 +1,7 @@
--/* { dg-do run { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
- /* { dg-additional-options "-std=gnu99" { target c } } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- int msk;
- 
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/spawner_inline.c	2014-02-07 02:49:08.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/spawner_inline.c	2015-08-06 19:09:24.494961112 -0700
-@@ -1,6 +1,6 @@
--/* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run  { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #include <stdlib.h>
- #define DEFAULT_VALUE 30
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib_init_expr_xy.c	2013-11-06 06:55:46.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/fib_init_expr_xy.c	2015-08-06 19:09:24.230686024 -0700
-@@ -1,6 +1,6 @@
- /* { dg-options "-fcilkplus" } */
--/* { dg-do run { target i?86-*-* x86_64-*-* } } */
--/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } */
-+/* { dg-options "-fcilkplus -lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #if HAVE_IO
- #include <stdio.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk-fors.c	2014-09-02 05:52:29.000000000 -0700
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/CK/cilk-fors.c	2015-08-06 19:09:24.126426402 -0700
-@@ -1,7 +1,7 @@
--/* { dg-do run { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do run { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus" } */
- /* { dg-additional-options "-std=gnu99" { target c } } */
--/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-additional-options "-lcilkrts" { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- 
- #if HAVE_IO
- #include <stdio.h>
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/SE/ef_error2.c	2013-12-18 11:00:21.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/SE/ef_error2.c	2015-08-06 19:11:44.336403626 -0700
-@@ -1,4 +1,4 @@
--/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do compile { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus -Wall" } */
- 
- __attribute__((vector (vectorlength(32)))) 
---- gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/SE/ef_error3.c	2014-01-23 07:21:42.000000000 -0800
-+++ gcc-5.3.0/gcc/testsuite/c-c++-common/cilk-plus/SE/ef_error3.c	2015-08-06 19:12:08.083690541 -0700
-@@ -1,4 +1,4 @@
--/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */
-+/* { dg-do compile { target { i?86-*-* x86_64-*-* sparc-*-* sparcv9-*-* __sparc*-*-* } } } */
- /* { dg-options "-fcilkplus -Wall" } */
- 
- __attribute__((vector (linear (x:y)))) /* { dg-message "parameter" "" { target c++ } } */
-
---- gcc-5.3.0/libcilkrts/Makefile.in      2014-03-26 12:16:35.000000000 -0700
-+++ gcc-5.3.0/libcilkrts/Makefile.in      2015-08-05 11:48:37.075834789 -0700
-@@ -215,13 +215,13 @@
- AWK = @AWK@
- CC = @CC@
- CCDEPMODE = @CCDEPMODE@
--CFLAGS = @CFLAGS@
-+CFLAGS = @CFLAGS@ -D__EXTENSIONS__=1
- CPP = @CPP@
--CPPFLAGS = @CPPFLAGS@
-+CPPFLAGS = @CPPFLAGS@ -D__EXTENSIONS__=1
- CXX = @CXX@
- CXXCPP = @CXXCPP@
- CXXDEPMODE = @CXXDEPMODE@
--CXXFLAGS = @CXXFLAGS@
-+CXXFLAGS = @CXXFLAGS@ -D__EXTENSIONS__=1
- CYGPATH_W = @CYGPATH_W@
- DEFS = @DEFS@
- DEPDIR = @DEPDIR@
-
diff --git a/gcc6/Patches/004-alignment.patch b/gcc6/Patches/004-alignment.patch
deleted file mode 100644
index e50cfc0..0000000
--- a/gcc6/Patches/004-alignment.patch
+++ /dev/null
@@ -1,111 +0,0 @@
-#
-# Make a few alignment adjustments for sparc.  This has not been
-# submitted upstream yet.
-#
---- gcc-5.3.0/libgomp/config/posix/omp-lock.h	2008-06-06 09:01:54.000000000 -0400
-+++ gcc-5.3.0/libgomp/config/posix/omp-lock.h	2014-11-19 08:34:08.522303786 -0500
-@@ -11,13 +11,28 @@
- #include <semaphore.h>
- 
- typedef pthread_mutex_t omp_lock_25_t;
--typedef struct { pthread_mutex_t lock; int count; } omp_nest_lock_25_t;
-+
-+typedef struct {
-+  pthread_mutex_t lock;
-+  int count;
-+} omp_nest_lock_25_t __attribute__((__aligned__(8)));
-+
- #ifdef HAVE_BROKEN_POSIX_SEMAPHORES
- /* If we don't have working semaphores, we'll make all explicit tasks
-    tied to the creating thread.  */
- typedef pthread_mutex_t omp_lock_t;
--typedef struct { pthread_mutex_t lock; int count; void *owner; } omp_nest_lock_t;
-+
-+typedef struct {
-+  pthread_mutex_t lock;
-+  int count;
-+  void *owner;
-+} omp_nest_lock_t __attribute__((__aligned__(8)));
- #else
- typedef sem_t omp_lock_t;
--typedef struct { sem_t lock; int count; void *owner; } omp_nest_lock_t;
-+typedef struct {
-+  sem_t lock;
-+  int count;
-+  void *owner;
-+} omp_nest_lock_t __attribute__((__aligned__(8)));
- #endif
-+
---- gcc-5.3.0/libgomp/omp.h.in	2014-01-02 17:25:54.000000000 -0500
-+++ gcc-5.3.0/libgomp/omp.h.in	2014-11-19 08:31:53.354302270 -0500
-@@ -32,16 +32,24 @@
-    reflect the shape of the two types.  Their internals are private
-    to the library.  */
- 
-+#if defined(__x86_64__) || defined(__amd64) || defined(__sparc)
-+#define OMP_LOCK_ALIGN 8
-+#define OMP_NEST_LOCK_ALIGN 8
-+#else
-+#define OMP_LOCK_ALIGN 4
-+#define OMP_NEST_LOCK_ALIGN 4
-+#endif
-+
- typedef struct
- {
-   unsigned char _x[@OMP_LOCK_SIZE@] 
--    __attribute__((__aligned__(@OMP_LOCK_ALIGN@)));
-+    __attribute__((__aligned__(OMP_LOCK_ALIGN)));
- } omp_lock_t;
- 
- typedef struct
- {
-   unsigned char _x[@OMP_NEST_LOCK_SIZE@] 
--    __attribute__((__aligned__(@OMP_NEST_LOCK_ALIGN@)));
-+    __attribute__((__aligned__(OMP_NEST_LOCK_ALIGN)));
- } omp_nest_lock_t;
- #endif
- 
---- gcc-5.3.0/libgomp/config/posix/ptrlock.h	2014-01-02 17:25:54.000000000 -0500
-+++ gcc-5.3.0/libgomp/config/posix/ptrlock.h	2014-11-19 08:35:00.554310487 -0500
-@@ -29,7 +29,10 @@
- #ifndef GOMP_PTRLOCK_H
- #define GOMP_PTRLOCK_H 1
- 
--typedef struct { void *ptr; gomp_mutex_t lock; } gomp_ptrlock_t;
-+typedef struct {
-+  void *ptr;
-+  gomp_mutex_t lock;
-+} gomp_ptrlock_t __attribute__((__aligned__(8)));
- 
- static inline void gomp_ptrlock_init (gomp_ptrlock_t *ptrlock, void *ptr)
- {
---- gcc-5.3.0/libgomp/config/posix/sem.h	2014-01-02 17:25:54.000000000 -0500
-+++ gcc-5.3.0/libgomp/config/posix/sem.h	2014-11-19 08:35:29.670306230 -0500
-@@ -49,8 +49,8 @@
- 
- struct gomp_sem
- {
--  pthread_mutex_t	mutex;
--  pthread_cond_t	cond;
-+  pthread_mutex_t	mutex __attribute__((__aligned__(8)));
-+  pthread_cond_t	cond __attribute__((__aligned__(8)));
-   int			value;
- };
- 
-#--- gcc-5.3.0/libgomp/config/posix/lock.c       2015-01-10 11:10:37.000000000 -0800
-#+++ gcc-5.3.0/libgomp/config/posix/lock.c       2015-08-02 20:30:05.513685199 -0700
-#@@ -33,7 +33,14 @@
-#
-# /* We need UNIX98/XPG5 extensions to get recursive locks.  Request XPG6 since
-#    Solaris requires this for C99 and later.  */
-#+#ifndef _XOPEN_SOURCE
-# #define _XOPEN_SOURCE 600
-#+#endif
-#+
-#+#if defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE < 600)
-#+#undef _XOPEN_SOURCE
-#+#define _XOPEN_SOURCE 600
-#+#endif
-#
-# #include "libgomp.h"
-#
diff --git a/gcc6/Patches/fixinc.in.patch b/gcc6/Patches/fixinc.in.patch
deleted file mode 100644
index d808876..0000000
--- a/gcc6/Patches/fixinc.in.patch
+++ /dev/null
@@ -1,21 +0,0 @@
-diff -ruN gcc-4.7.3.orig/fixincludes/fixinc.in gcc-4.7.3/fixincludes/fixinc.in
---- gcc-4.7.3.orig/fixincludes/fixinc.in	2013-05-16 01:21:03.102224280 +0000
-+++ gcc-4.7.3/fixincludes/fixinc.in	2013-05-16 01:20:54.675745658 +0000
-@@ -196,7 +196,7 @@
- 
- while [ -n "$dirs" ] && [ $levels -gt 0 ]
- do
--  levels=`expr $levels - 1`
-+  levels=`expr $levels - 1; true`
-   newdirs=
-   for d in $dirs
-   do
-@@ -325,7 +325,7 @@
-           cd $LIB
-           while [ x$dirname != x ]; do
-             component=`echo $dirname | sed -e 's|/.*$||'`
--            mkdir $component >/dev/null 2>&1
-+            mkdir -p $component >/dev/null 2>&1
-             cd $component
-             dirmade=$dirmade/$component
-             dirname=`echo $dirname | sed -e 's|[^/]*/||'`
diff --git a/gcc6/Patches/libgo_runtime_proc.c.patch b/gcc6/Patches/libgo_runtime_proc.c.patch
deleted file mode 100644
index 9c3ec24..0000000
--- a/gcc6/Patches/libgo_runtime_proc.c.patch
+++ /dev/null
@@ -1,17 +0,0 @@
-$NetBSD: patch-libgo_runtime_proc.c,v 1.1 2014/09/04 18:43:11 jperkin Exp $
-
-SunOS libelf does not support largefile.
-
---- a/libgo/runtime/proc.c.orig	2014-05-27 22:01:08.000000000 +0000
-+++ b/libgo/runtime/proc.c
-@@ -11,6 +11,10 @@
- #include "config.h"
- 
- #ifdef HAVE_DL_ITERATE_PHDR
-+#ifdef __sun
-+#undef _FILE_OFFSET_BITS
-+#define _FILE_OFFSET_BITS 32
-+#endif
- #include <link.h>
- #endif
- 
diff --git a/gcc6/Patches/libstdc++-no-rt.patch b/gcc6/Patches/libstdc++-no-rt.patch
deleted file mode 100644
index 196b7f6..0000000
--- a/gcc6/Patches/libstdc++-no-rt.patch
+++ /dev/null
@@ -1,22 +0,0 @@
---- gcc-4.9.3/libstdc++-v3/acinclude.m4.1	2015-11-10 23:02:48.144804023 +0300
-+++ gcc-4.9.3/libstdc++-v3/acinclude.m4	2015-11-10 23:02:57.650586415 +0300
-@@ -1233,7 +1233,7 @@
-         ac_has_nanosleep=yes
-         ;;
-       solaris*)
--        GLIBCXX_LIBS="$GLIBCXX_LIBS -lrt"
-+        GLIBCXX_LIBS="$GLIBCXX_LIBS"
-         ac_has_clock_monotonic=yes
-         ac_has_clock_realtime=yes
-         ac_has_nanosleep=yes
---- gcc-4.9.3/libstdc++-v3/configure.1	2015-11-10 23:01:27.375669063 +0300
-+++ gcc-4.9.3/libstdc++-v3/configure	2015-11-10 23:02:02.171610827 +0300
-@@ -19507,7 +19507,7 @@
-         ac_has_nanosleep=yes
-         ;;
-       solaris*)
--        GLIBCXX_LIBS="$GLIBCXX_LIBS -lrt"
-+        GLIBCXX_LIBS="$GLIBCXX_LIBS"
-         ac_has_clock_monotonic=yes
-         ac_has_clock_realtime=yes
-         ac_has_nanosleep=yes
diff --git a/gcc6/Patches/use-cxa_atexit.patch b/gcc6/Patches/use-cxa_atexit.patch
deleted file mode 100644
index 03d8571..0000000
--- a/gcc6/Patches/use-cxa_atexit.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- gcc-6.4.0/gcc/config.gcc.~1~	2017-01-10 00:01:26.582656000 +0000
-+++ gcc-6.4.0/gcc/config.gcc	2017-08-31 00:15:59.617620815 +0000
-@@ -850,7 +850,7 @@
-   sol2_tm_file_tail="${cpu_type}/sol2.h sol2.h"
-   sol2_tm_file="${sol2_tm_file_head} ${sol2_tm_file_tail}"
-   case ${target} in
--    *-*-solaris2.1[2-9]*)
-+    *-*-solaris2.1[1-9]*)
-       # __cxa_atexit was introduced in Solaris 12.
-       default_use_cxa_atexit=yes
-       ;;
diff --git a/gcc6/gcc-6.4.0.tar.gz.sha1 b/gcc6/gcc-6.4.0.tar.gz.sha1
deleted file mode 100644
index 669814b..0000000
--- a/gcc6/gcc-6.4.0.tar.gz.sha1
+++ /dev/null
@@ -1 +0,0 @@
-b22ff1effc370c55e389438561f44c88f7cd047d
diff --git a/gcc6/gmp-6.1.2.tar.bz2.sha1 b/gcc6/gmp-6.1.2.tar.bz2.sha1
deleted file mode 100644
index a160433..0000000
--- a/gcc6/gmp-6.1.2.tar.bz2.sha1
+++ /dev/null
@@ -1 +0,0 @@
-366ded6a44cd108ba6b3f5b9a252eab3f3a95cdf
diff --git a/gcc6/mpc-1.0.3.tar.gz.sha1 b/gcc6/mpc-1.0.3.tar.gz.sha1
deleted file mode 100644
index 0bf49fc..0000000
--- a/gcc6/mpc-1.0.3.tar.gz.sha1
+++ /dev/null
@@ -1 +0,0 @@
-b8be66396c726fdc36ebb0f692ed8a8cca3bcc66
diff --git a/gcc6/mpfr-3.1.6.tar.bz2.sha1 b/gcc6/mpfr-3.1.6.tar.bz2.sha1
deleted file mode 100644
index 8dd263d..0000000
--- a/gcc6/mpfr-3.1.6.tar.bz2.sha1
+++ /dev/null
@@ -1 +0,0 @@
-c207aada1c0af969d800c16f25e0a78e15b9c9cc
diff --git a/gcc7/Makefile b/gcc7/Makefile
index 5cd6032..fffe5a5 100644
--- a/gcc7/Makefile
+++ b/gcc7/Makefile
@@ -13,7 +13,14 @@
 # Copyright (c) 2018, Joyent, Inc.
 #
 
-VER =		gcc-7.3.0
+#
+# The GCC tarball is a copy of the https://github.com/illumos/gcc repository,
+# gcc-7.3.0-il-1 branch.  This includes all of the Illumos-specific
+# modifications we need.  We could probably do a git clone instead, but the
+# tarball method is easier given these Makefiles.
+#
+
+VER =		gcc-7.3.0-il-1
 MPFR_VER =	mpfr-3.1.6
 GMP_VER =	gmp-6.1.2
 MPC_VER =	mpc-1.0.3
diff --git a/gcc7/Patches/0001-README.md-Add-a-simple-description-of-what-s-what.patch b/gcc7/Patches/0001-README.md-Add-a-simple-description-of-what-s-what.patch
deleted file mode 100644
index af3b684..0000000
--- a/gcc7/Patches/0001-README.md-Add-a-simple-description-of-what-s-what.patch
+++ /dev/null
@@ -1,58 +0,0 @@
-From cfbc767c3e880dfc9cddb500901874e04774af69 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Sat, 16 Apr 2011 23:25:51 -0400
-Subject: [PATCH 01/11] README.md: Add a simple description of what's what
-
----
- README.md | 39 +++++++++++++++++++++++++++++++++++++++
- 1 file changed, 39 insertions(+)
- create mode 100644 README.md
-
-diff --git a/README.md b/README.md
-new file mode 100644
-index 00000000000..fcb3d7f9570
---- /dev/null
-+++ b/README.md
-@@ -0,0 +1,39 @@
-+This is the GCC used for compiling illumos.
-+
-+The `il-*` branches contain the the patches used for building illumos, which
-+are rebased versions of those used for Solaris/OpenSolaris, and then
-+additional changes.  The versions actually in use are tagged with
-+`il-VERSION-ilN` where _N_ version the illumos changes over the GCC version in
-+question.
-+
-+The `wip/*` branches are works in progress and _should never be used_
-+
-+The `codesourcery/*` and `sun/*` branches contain the original GCCs as patched by
-+CodeSourcery and Sun Microsystems for use compiling Solaris and OpenSolaris as
-+was, and the GCCFSS patches of Sun's
-+
-+When building the compilers for illumos use the flags generally used are:
-+
-+i386
-+~~~sh
-+../../configure --prefix=/opt/gcc/$VER --with-as=/usr/bin/gas --with-gnu-as \
-+   --with-ld=/usr/bin/ld --without-gnu-ld --enable-languages="c,c++,objc" \
-+   --enable-shared  --with-mpfr-include=/usr/include/mpfr \
-+   --with-gmp-include=/usr/include/gmp \
-+   --with-pkgversion="Illumos $(git describe --all)" \
-+   --with-bugurl="http://github.com/richlowe/gcc/issues"
-+~~~
-+
-+sparc
-+~~~sh
-+../../configure --prefix=/opt/gcc/$VER --without-gnu-as --with-as=/usr/ccs/bin/as" \
-+   --with-ld=/usr/bin/ld --without-gnu-ld --enable-languages="c,c++,objc" \
-+   --enable-shared  --with-mpfr-include=/usr/include/mpfr \
-+   --with-gmp-include=/usr/include/gmp \
-+   --with-pkgversion="Illumos $(git describe --all)" \
-+   --with-bugurl="http://github.com/richlowe/gcc/issues"
-+~~~
-+
-+Please use the correct `--with-bugurl` and `--with-pkgversion` flags as
-+appropriate for any modifications you make, but please also be sure that they
-+accurately describe what is in use (ie, are not left at the defaults) either.
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0002-compare_tests-Use-nawk-on-Solaris-since-awk-is-crap.patch b/gcc7/Patches/0002-compare_tests-Use-nawk-on-Solaris-since-awk-is-crap.patch
deleted file mode 100644
index 879c76a..0000000
--- a/gcc7/Patches/0002-compare_tests-Use-nawk-on-Solaris-since-awk-is-crap.patch
+++ /dev/null
@@ -1,34 +0,0 @@
-From fec0b212a284965982bb1f2796a1c962cc7d1539 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Tue, 26 Jan 2016 14:24:11 -0500
-Subject: [PATCH 02/11] compare_tests: Use nawk on Solaris, since awk is crap
-
----
- contrib/compare_tests | 11 +++++++++--
- 1 file changed, 9 insertions(+), 2 deletions(-)
-
-diff --git a/contrib/compare_tests b/contrib/compare_tests
-index d16e7e9737e..94183568fac 100755
---- a/contrib/compare_tests
-+++ b/contrib/compare_tests
-@@ -107,8 +107,15 @@ elif [ -d "$1" -o -d "$2" ] ; then
- 	usage "Must specify either two directories or two files"
- fi
- 
--sed 's/^XFAIL/FAIL/; s/^ERROR/FAIL/; s/^XPASS/PASS/' < "$1" | awk '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp1
--sed 's/^XFAIL/FAIL/; s/^ERROR/FAIL/; s/^XPASS/PASS/' < "$2" | awk '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp2
-+osrev=`uname -sr`
-+if [ `expr "$osrev" : "SunOS 5."` -eq "8" ]; then
-+   AWK=/usr/bin/nawk
-+else
-+    AWK=awk
-+fi
-+
-+sed 's/^XFAIL/FAIL/; s/^ERROR/FAIL/; s/^XPASS/PASS/' < "$1" | $AWK '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp1
-+sed 's/^XFAIL/FAIL/; s/^ERROR/FAIL/; s/^XPASS/PASS/' < "$2" | $AWK '/^Running target / {target = $3} { if (target != "unix") { sub(/: /, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp2
- 
- before=$tmp1
- now=$tmp2
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0003-gcc-enable-the-.eh_frame-based-unwinder.patch b/gcc7/Patches/0003-gcc-enable-the-.eh_frame-based-unwinder.patch
deleted file mode 100644
index a8208bb..0000000
--- a/gcc7/Patches/0003-gcc-enable-the-.eh_frame-based-unwinder.patch
+++ /dev/null
@@ -1,55 +0,0 @@
-From 158f0333dc2c0afed6606a4edec8d9b8465cc352 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Wed, 5 Mar 2014 04:12:52 +0000
-Subject: [PATCH 03/11] gcc: enable the .eh_frame based unwinder
-
----
- gcc/configure    | 3 +++
- gcc/configure.ac | 3 +++
- 2 files changed, 6 insertions(+)
-
-diff --git a/gcc/configure b/gcc/configure
-index 043a62b0de9..f8f09a9dc2b 100755
---- a/gcc/configure
-+++ b/gcc/configure
-@@ -22787,6 +22787,7 @@ if test $in_tree_ld != yes ; then
- 	    -e 's,^.*: 5\.[0-9][0-9]*-\([0-9]\.[0-9][0-9]*\).*$,\1,p'`
- 	  ld_vers_major=`expr "$ld_vers" : '\([0-9]*\)'`
- 	  ld_vers_minor=`expr "$ld_vers" : '[0-9]*\.\([0-9]*\)'`
-+          ld_vers_isillumos=`echo "$ld_ver" | grep '(illumos)'`
- 	fi
- 	;;
-     esac
-@@ -28072,6 +28073,8 @@ elif test x$gcc_cv_ld != x; then
-         # Sun ld has various bugs in .eh_frame_hdr support before version 1.2251.
-         if test "$ld_vers_major" -gt 1 || test "$ld_vers_minor" -ge 2251; then
-           gcc_cv_ld_eh_frame_hdr=yes
-+        elif test "$ld_vers_minor" -ge 1735 && test -n "$ld_vers_isillumos"; then
-+          gcc_cv_ld_eh_frame_hdr=yes
-         fi
-         ;;
-     esac
-diff --git a/gcc/configure.ac b/gcc/configure.ac
-index 2b52da3bbcc..7d8444bb735 100644
---- a/gcc/configure.ac
-+++ b/gcc/configure.ac
-@@ -2600,6 +2600,7 @@ if test $in_tree_ld != yes ; then
- 	    -e 's,^.*: 5\.[0-9][0-9]*-\([0-9]\.[0-9][0-9]*\).*$,\1,p'`
- 	  ld_vers_major=`expr "$ld_vers" : '\([0-9]*\)'`
- 	  ld_vers_minor=`expr "$ld_vers" : '[0-9]*\.\([0-9]*\)'`
-+          ld_vers_isillumos=`echo "$ld_ver" | grep '(illumos)'`
- 	fi
- 	;;
-     esac
-@@ -4977,6 +4978,8 @@ elif test x$gcc_cv_ld != x; then
-         # Sun ld has various bugs in .eh_frame_hdr support before version 1.2251.
-         if test "$ld_vers_major" -gt 1 || test "$ld_vers_minor" -ge 2251; then
-           gcc_cv_ld_eh_frame_hdr=yes
-+        elif test "$ld_vers_minor" -ge 1735 && test -n "$ld_vers_isillumos"; then
-+          gcc_cv_ld_eh_frame_hdr=yes
-         fi
-         ;;
-     esac
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0004-intl-Don-t-use-UTF-8-quotes.-Ever.patch b/gcc7/Patches/0004-intl-Don-t-use-UTF-8-quotes.-Ever.patch
deleted file mode 100644
index 0db3362..0000000
--- a/gcc7/Patches/0004-intl-Don-t-use-UTF-8-quotes.-Ever.patch
+++ /dev/null
@@ -1,45 +0,0 @@
-From 9ab34d7a97651ed33cd95d03e46a767769bafa12 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Tue, 11 Mar 2014 21:50:30 +0000
-Subject: [PATCH 04/11] intl: Don't use UTF-8 quotes.  Ever.
-
----
- gcc/intl.c | 17 ++++-------------
- 1 file changed, 4 insertions(+), 13 deletions(-)
-
-diff --git a/gcc/intl.c b/gcc/intl.c
-index c9090e06dd3..b7688848fd8 100644
---- a/gcc/intl.c
-+++ b/gcc/intl.c
-@@ -74,17 +74,11 @@ gcc_init_libintl (void)
- 
-   if (!strcmp (open_quote, "`") && !strcmp (close_quote, "'"))
-     {
--      /* Untranslated quotes that it may be possible to replace with
--	 U+2018 and U+2019; but otherwise use "'" instead of "`" as
--	 opening quote.  */
-+      /*
-+       * open_quote is ` purely for ease of translation.  If they aren't
-+       * translated, use ' for both
-+       */
-       open_quote = "'";
--#if defined HAVE_LANGINFO_CODESET
--      if (locale_utf8)
--	{
--	  open_quote = "\xe2\x80\x98";
--	  close_quote = "\xe2\x80\x99";
--	}
--#endif
-     }
- }
- 
-@@ -145,6 +139,3 @@ get_spaces (const char *str)
-    spaces[len] = '\0';
-    return spaces;
- }
--
--
--
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0005-Implement-fstrict-calling-conventions.patch b/gcc7/Patches/0005-Implement-fstrict-calling-conventions.patch
deleted file mode 100644
index 9a9b097..0000000
--- a/gcc7/Patches/0005-Implement-fstrict-calling-conventions.patch
+++ /dev/null
@@ -1,614 +0,0 @@
-From 2170230e196ecd0052c840136a4902295349b3e7 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Sat, 27 Oct 2012 02:44:09 +0100
-Subject: [PATCH 05/11] Implement -fstrict-calling-conventions
-
-Stock GCC is overly willing to violate the ABI when calling local functions,
-such that it passes arguments in registers on i386.  This hampers debugging
-with anything other than a fully-aware DWARF debugger, and is generally not
-something we desire.
-
-Implement a flag which disables this behaviour, enabled by default.  The flag is
-global, though only effective on i386, to more easily allow its globalization
-later which, given the odds, is likely to be necessary.
----
- gcc/common.opt                            |   4 +
- gcc/config/i386/i386.c                    | 122 +++++++++++++++---------------
- gcc/doc/invoke.texi                       |   6 ++
- gcc/testsuite/gcc.target/i386/local.c     |   3 +-
- gcc/testsuite/gcc.target/i386/strict-cc.c |  24 ++++++
- 5 files changed, 98 insertions(+), 61 deletions(-)
- create mode 100644 gcc/testsuite/gcc.target/i386/strict-cc.c
-
-diff --git a/gcc/common.opt b/gcc/common.opt
-index 437db8e8615..978fbc83b89 100644
---- a/gcc/common.opt
-+++ b/gcc/common.opt
-@@ -2341,6 +2341,10 @@ fstrict-aliasing
- Common Report Var(flag_strict_aliasing) Optimization
- Assume strict aliasing rules apply.
- 
-+fstrict-calling-conventions
-+Common Report Var(flag_strict_calling_conventions) Init(1)
-+Use strict ABI calling conventions even for static functions
-+
- fstrict-overflow
- Common Report Var(flag_strict_overflow) Optimization
- Treat signed overflow as undefined.
-diff --git a/gcc/config/i386/i386.c b/gcc/config/i386/i386.c
-index ba2abc53ed1..3651b995ea0 100644
---- a/gcc/config/i386/i386.c
-+++ b/gcc/config/i386/i386.c
-@@ -2599,7 +2599,7 @@ struct ptt
-   const int align_func;
- };
- 
--/* This table must be in sync with enum processor_type in i386.h.  */ 
-+/* This table must be in sync with enum processor_type in i386.h.  */
- static const struct ptt processor_target_table[PROCESSOR_max] =
- {
-   {"generic", &generic_cost, 16, 10, 16, 10, 16},
-@@ -5107,14 +5107,14 @@ ix86_option_override_internal (bool main_args_p,
- 	| PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_SSSE3 | PTA_SSE4_1
- 	| PTA_SSE4_2 | PTA_AES | PTA_PCLMUL | PTA_AVX | PTA_FMA4
- 	| PTA_XOP | PTA_LWP | PTA_BMI | PTA_TBM | PTA_F16C
--	| PTA_FMA | PTA_PRFCHW | PTA_FXSR | PTA_XSAVE 
-+	| PTA_FMA | PTA_PRFCHW | PTA_FXSR | PTA_XSAVE
- 	| PTA_XSAVEOPT | PTA_FSGSBASE},
-       {"bdver4", PROCESSOR_BDVER4, CPU_BDVER4,
- 	PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3
- 	| PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_SSSE3 | PTA_SSE4_1
--	| PTA_SSE4_2 | PTA_AES | PTA_PCLMUL | PTA_AVX | PTA_AVX2 
--	| PTA_FMA4 | PTA_XOP | PTA_LWP | PTA_BMI | PTA_BMI2 
--	| PTA_TBM | PTA_F16C | PTA_FMA | PTA_PRFCHW | PTA_FXSR 
-+	| PTA_SSE4_2 | PTA_AES | PTA_PCLMUL | PTA_AVX | PTA_AVX2
-+	| PTA_FMA4 | PTA_XOP | PTA_LWP | PTA_BMI | PTA_BMI2
-+	| PTA_TBM | PTA_F16C | PTA_FMA | PTA_PRFCHW | PTA_FXSR
- 	| PTA_XSAVE | PTA_XSAVEOPT | PTA_FSGSBASE | PTA_RDRND
- 	| PTA_MOVBE | PTA_MWAITX},
-       {"znver1", PROCESSOR_ZNVER1, CPU_ZNVER1,
-@@ -5982,7 +5982,7 @@ ix86_option_override_internal (bool main_args_p,
-   /* For all chips supporting SSE2, -mfpmath=sse performs better than
-      fpmath=387.  The second is however default at many targets since the
-      extra 80bit precision of temporaries is considered to be part of ABI.
--     Overwrite the default at least for -ffast-math. 
-+     Overwrite the default at least for -ffast-math.
-      TODO: -mfpmath=both seems to produce same performing code with bit
-      smaller binaries.  It is however not clear if register allocation is
-      ready for this setting.
-@@ -6331,7 +6331,7 @@ ix86_conditional_register_usage (void)
- 
-   /*  See the definition of CALL_USED_REGISTERS in i386.h.  */
-   c_mask = CALL_USED_REGISTERS_MASK (TARGET_64BIT_MS_ABI);
--  
-+
-   CLEAR_HARD_REG_SET (reg_class_contents[(int)CLOBBERED_REGS]);
- 
-   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)
-@@ -6998,9 +6998,9 @@ ix86_valid_target_attribute_p (tree fndecl,
- 
-   tree old_optimize = build_optimization_node (&global_options);
- 
--  /* Get the optimization options of the current function.  */  
-+  /* Get the optimization options of the current function.  */
-   tree func_optimize = DECL_FUNCTION_SPECIFIC_OPTIMIZATION (fndecl);
-- 
-+
-   if (!func_optimize)
-     func_optimize = old_optimize;
- 
-@@ -7008,7 +7008,7 @@ ix86_valid_target_attribute_p (tree fndecl,
-   memset (&func_options, 0, sizeof (func_options));
-   init_options_struct (&func_options, NULL);
-   lang_hooks.init_options_struct (&func_options);
-- 
-+
-   cl_optimization_restore (&func_options,
- 			   TREE_OPTIMIZATION (func_optimize));
- 
-@@ -8015,6 +8015,7 @@ ix86_function_regparm (const_tree type, const_tree decl)
- 	 and callee not, or vice versa.  Instead look at whether the callee
- 	 is optimized or not.  */
-       if (target && opt_for_fn (target->decl, optimize)
-+	  && !flag_strict_calling_conventions
- 	  && !(profile_flag && !flag_fentry))
- 	{
- 	  cgraph_local_info *i = &target->local;
-@@ -8112,6 +8113,7 @@ ix86_function_sseregparm (const_tree type, const_tree decl, bool warn)
-       /* TARGET_SSE_MATH */
-       && (target_opts_for_fn (target->decl)->x_ix86_fpmath & FPMATH_SSE)
-       && opt_for_fn (target->decl, optimize)
-+      && !flag_strict_calling_conventions
-       && !(profile_flag && !flag_fentry))
-     {
-       cgraph_local_info *i = &target->local;
-@@ -8710,7 +8712,7 @@ init_cumulative_args (CUMULATIVE_ARGS *cum,  /* Argument info to initialize */
- 
-    The midde-end can't deal with the vector types > 16 bytes.  In this
-    case, we return the original mode and warn ABI change if CUM isn't
--   NULL. 
-+   NULL.
- 
-    If INT_RETURN is true, warn ABI change if the vector mode isn't
-    available for function return value.  */
-@@ -10808,7 +10810,7 @@ ix86_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)
- 
- 	  /* Unless ABI prescibes otherwise,
- 	     MMX/3dNow values are returned in MM0 if available.  */
--	     
-+
- 	  if (size == 8)
- 	    return TARGET_VECT8_RETURNS || !TARGET_MMX;
- 
-@@ -10916,7 +10918,7 @@ ix86_build_builtin_va_list (void)
- 
-       /* For SYSV_ABI we use an array of one record.  */
-       sysv_va_list_type_node = ix86_build_builtin_va_list_64 ();
--	
-+
-       /* For MS_ABI we use plain pointer to argument area.  */
-       tree char_ptr_type = build_pointer_type (char_type_node);
-       tree attr = tree_cons (get_identifier ("ms_abi va_list"), NULL_TREE,
-@@ -11861,7 +11863,7 @@ standard_sse_constant_opcode (rtx_insn *insn, rtx x)
-   else if (x == constm1_rtx || vector_all_ones_operand (x, mode))
-     {
-       enum attr_mode insn_mode = get_attr_mode (insn);
--      
-+
-       switch (insn_mode)
- 	{
- 	case MODE_XI:
-@@ -11996,7 +11998,7 @@ ix86_frame_pointer_required (void)
-   /* SSE saves require frame-pointer when stack is misaligned.  */
-   if (TARGET_64BIT_MS_ABI && ix86_incoming_stack_boundary < 128)
-     return true;
--  
-+
-   /* In ix86_option_override_internal, TARGET_OMIT_LEAF_FRAME_POINTER
-      turns off the frame pointer by default.  Turn it back on now if
-      we've not got a leaf function.  */
-@@ -15549,7 +15551,7 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)
- 	  addr = XEXP (addr, 0);
- 	  if (CONST_INT_P (addr))
- 	    return 0;
--	}	      
-+	}
-       else if (GET_CODE (addr) == AND
- 	       && const_32bit_mask (XEXP (addr, 1), DImode))
- 	{
-@@ -17062,7 +17064,7 @@ get_dllimport_decl (tree decl, bool beimport)
- #ifdef SUB_TARGET_RECORD_STUB
-       SUB_TARGET_RECORD_STUB (name);
- #endif
--    }      
-+    }
- 
-   rtl = gen_const_mem (Pmode, rtl);
-   set_mem_alias_set (rtl, ix86_GOT_alias_set ());
-@@ -17109,7 +17111,7 @@ legitimize_dllimport_symbol (rtx symbol, bool want_reg)
-   return x;
- }
- 
--/* Expand SYMBOL into its corresponding dllimport or refptr symbol.  WANT_REG 
-+/* Expand SYMBOL into its corresponding dllimport or refptr symbol.  WANT_REG
-    is true if we require the result be a register.  */
- 
- static rtx
-@@ -18245,7 +18247,7 @@ ix86_print_operand (FILE *file, rtx x, int code)
- 	    case 2:
- 	      putc ('w', file);
- 	      break;
--  
-+
- 	    case 4:
- 	      putc ('l', file);
- 	      break;
-@@ -19637,7 +19639,7 @@ ix86_mode_needed (int entity, rtx_insn *insn)
- }
- 
- /* Check if a 256bit or 512bit AVX register is referenced in stores.   */
-- 
-+
- static void
- ix86_check_avx_upper_stores (rtx dest, const_rtx, void *data)
-  {
-@@ -19646,7 +19648,7 @@ ix86_check_avx_upper_stores (rtx dest, const_rtx, void *data)
-       bool *used = (bool *) data;
-       *used = true;
-     }
-- } 
-+ }
- 
- /* Calculate mode of upper 128bit AVX registers after the insn.  */
- 
-@@ -20647,7 +20649,7 @@ ix86_expand_vector_move_misalign (machine_mode mode, rtx operands[])
- 	    t = gen_reg_rtx (V4SFmode);
- 	  else
- 	    t = op0;
--	    
-+
- 	  if (TARGET_SSE_PARTIAL_REG_DEPENDENCY)
- 	    emit_move_insn (t, CONST0_RTX (V4SFmode));
- 	  else
-@@ -21657,7 +21659,7 @@ ix86_emit_binop (enum rtx_code code, machine_mode mode,
- 
-   op = gen_rtx_SET (dst, gen_rtx_fmt_ee (code, mode, dst, src));
-   clob = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (CCmode, FLAGS_REG));
--  
-+
-   emit_insn (gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2, op, clob)));
- }
- 
-@@ -25325,7 +25327,7 @@ ix86_expand_vec_perm (rtx operands[])
- 
-   if (TARGET_XOP)
-     {
--      /* The XOP VPPERM insn supports three inputs.  By ignoring the 
-+      /* The XOP VPPERM insn supports three inputs.  By ignoring the
- 	 one_operand_shuffle special case, we avoid creating another
- 	 set of constant vectors in memory.  */
-       one_operand_shuffle = false;
-@@ -27224,7 +27226,7 @@ expand_small_movmem_or_setmem (rtx destmem, rtx srcmem,
-    DONE_LABEL is a label after the whole copying sequence. The label is created
-    on demand if *DONE_LABEL is NULL.
-    MIN_SIZE is minimal size of block copied.  This value gets adjusted for new
--   bounds after the initial copies. 
-+   bounds after the initial copies.
- 
-    DESTMEM/SRCMEM are memory expressions pointing to the copies block,
-    DESTPTR/SRCPTR are pointers to the block. DYNAMIC_CHECK indicate whether
-@@ -27533,7 +27535,7 @@ expand_set_or_movmem_constant_prologue (rtx dst, rtx *srcp, rtx destreg,
-   return dst;
- }
- 
--/* Return true if ALG can be used in current context.  
-+/* Return true if ALG can be used in current context.
-    Assume we expand memset if MEMSET is true.  */
- static bool
- alg_usable_p (enum stringop_alg alg, bool memset, bool have_as)
-@@ -27866,7 +27868,7 @@ promote_duplicated_reg_to_size (rtx val, int size_needed, int desired_align,
- 	with specified algorithm.
- 
-      4) Epilogue: code copying tail of the block that is too small to be
--	handled by main body (or up to size guarded by prologue guard). 
-+	handled by main body (or up to size guarded by prologue guard).
- 
-   Misaligned move sequence
- 
-@@ -28073,7 +28075,7 @@ ix86_expand_set_or_movmem (rtx dst, rtx src, rtx count_exp, rtx val_exp,
- 
-   /* Do the cheap promotion to allow better CSE across the
-      main loop and epilogue (ie one load of the big constant in the
--     front of all code.  
-+     front of all code.
-      For now the misaligned move sequences do not have fast path
-      without broadcasting.  */
-   if (issetmem && ((CONST_INT_P (val_exp) || misaligned_prologue_used)))
-@@ -30685,7 +30687,7 @@ ix86_dependencies_evaluation_hook (rtx_insn *head, rtx_insn *tail)
- 		       using topological ordering in the region.  */
- 		    if (rgn == CONTAINING_RGN (e->src->index)
- 			&& BLOCK_TO_BB (bb->index) > BLOCK_TO_BB (e->src->index))
--		      add_dependee_for_func_arg (first_arg, e->src); 
-+		      add_dependee_for_func_arg (first_arg, e->src);
- 		  }
- 	      }
- 	    insn = first_arg;
-@@ -31192,7 +31194,7 @@ ix86_local_alignment (tree exp, machine_mode mode,
-      other unit can not rely on the alignment.
- 
-      Exclude va_list type.  It is the common case of local array where
--     we can not benefit from the alignment.  
-+     we can not benefit from the alignment.
- 
-      TODO: Probably one should optimize for size only when var is not escaping.  */
-   if (TARGET_64BIT && optimize_function_for_speed_p (cfun)
-@@ -33010,7 +33012,7 @@ add_condition_to_bb (tree function_decl, tree version_decl,
-   convert_expr = build1 (CONVERT_EXPR, ptr_type_node,
- 	     		 build_fold_addr_expr (version_decl));
-   result_var = create_tmp_var (ptr_type_node);
--  convert_stmt = gimple_build_assign (result_var, convert_expr); 
-+  convert_stmt = gimple_build_assign (result_var, convert_expr);
-   return_stmt = gimple_build_return (result_var);
- 
-   if (predicate_chain == NULL_TREE)
-@@ -33037,7 +33039,7 @@ add_condition_to_bb (tree function_decl, tree version_decl,
-       gimple_seq_add_stmt (&gseq, call_cond_stmt);
- 
-       predicate_chain = TREE_CHAIN (predicate_chain);
--      
-+
-       if (and_expr_var == NULL)
-         and_expr_var = cond_var;
-       else
-@@ -33078,7 +33080,7 @@ add_condition_to_bb (tree function_decl, tree version_decl,
-   gimple_set_bb (return_stmt, bb2);
- 
-   bb3 = e23->dest;
--  make_edge (bb1, bb3, EDGE_FALSE_VALUE); 
-+  make_edge (bb1, bb3, EDGE_FALSE_VALUE);
- 
-   remove_edge (e23);
-   make_edge (bb2, EXIT_BLOCK_PTR_FOR_FN (cfun), 0);
-@@ -33134,7 +33136,7 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)
-     P_FMA4,
-     P_XOP,
-     P_PROC_XOP,
--    P_FMA,    
-+    P_FMA,
-     P_PROC_FMA,
-     P_BMI2,
-     P_AVX2,
-@@ -33207,11 +33209,11 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)
-       cl_target_option_save (&cur_target, &global_options);
-       target_node = ix86_valid_target_attribute_tree (attrs, &global_options,
- 						      &global_options_set);
--    
-+
-       gcc_assert (target_node);
-       new_target = TREE_TARGET_OPTION (target_node);
-       gcc_assert (new_target);
--      
-+
-       if (new_target->arch_specified && new_target->arch > 0)
- 	{
- 	  switch (new_target->arch)
-@@ -33296,14 +33298,14 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)
- 	}
- 
-       cl_target_option_restore (&global_options, &cur_target);
--	
-+
-       if (predicate_list && arg_str == NULL)
- 	{
- 	  error_at (DECL_SOURCE_LOCATION (decl),
- 	    	"No dispatcher found for the versioning attributes");
- 	  return 0;
- 	}
--    
-+
-       if (predicate_list)
- 	{
-           predicate_decl = ix86_builtins [(int) IX86_BUILTIN_CPU_IS];
-@@ -33370,7 +33372,7 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)
-       *predicate_list = predicate_chain;
-     }
- 
--  return priority; 
-+  return priority;
- }
- 
- /* This compares the priority of target features in function DECL1
-@@ -33389,7 +33391,7 @@ ix86_compare_version_priority (tree decl1, tree decl2)
- 
- /* V1 and V2 point to function versions with different priorities
-    based on the target ISA.  This function compares their priorities.  */
-- 
-+
- static int
- feature_compare (const void *v1, const void *v2)
- {
-@@ -33713,12 +33715,12 @@ ix86_function_versions (tree fn1, tree fn2)
-     result = true;
- 
-   XDELETEVEC (target1);
--  XDELETEVEC (target2); 
--  
-+  XDELETEVEC (target2);
-+
-   return result;
- }
- 
--static tree 
-+static tree
- ix86_mangle_decl_assembler_name (tree decl, tree id)
- {
-   /* For function version, add the target suffix to the assembler name.  */
-@@ -33788,7 +33790,7 @@ make_dispatcher_decl (const tree decl)
-   fn_type = TREE_TYPE (decl);
-   func_type = build_function_type (TREE_TYPE (fn_type),
- 				   TYPE_ARG_TYPES (fn_type));
--  
-+
-   func_decl = build_fn_decl (func_name, func_type);
-   XDELETEVEC (func_name);
-   TREE_USED (func_decl) = 1;
-@@ -33801,7 +33803,7 @@ make_dispatcher_decl (const tree decl)
-   /* This will be of type IFUNCs have to be externally visible.  */
-   TREE_PUBLIC (func_decl) = 1;
- 
--  return func_decl;  
-+  return func_decl;
- }
- 
- #endif
-@@ -33838,7 +33840,7 @@ ix86_get_function_versions_dispatcher (void *decl)
-   tree dispatch_decl = NULL;
- 
-   struct cgraph_function_version_info *default_version_info = NULL;
-- 
-+
-   gcc_assert (fn != NULL && DECL_FUNCTION_VERSIONED (fn));
- 
-   node = cgraph_node::get (fn);
-@@ -33846,7 +33848,7 @@ ix86_get_function_versions_dispatcher (void *decl)
- 
-   node_v = node->function_version ();
-   gcc_assert (node_v != NULL);
-- 
-+
-   if (node_v->dispatcher_resolver != NULL)
-     return node_v->dispatcher_resolver;
- 
-@@ -33993,7 +33995,7 @@ make_resolver_func (const tree default_decl,
- 
-   gcc_assert (dispatch_decl != NULL);
-   /* Mark dispatch_decl as "ifunc" with resolver as resolver_name.  */
--  DECL_ATTRIBUTES (dispatch_decl) 
-+  DECL_ATTRIBUTES (dispatch_decl)
-     = make_attribute ("ifunc", resolver_name, DECL_ATTRIBUTES (dispatch_decl));
- 
-   /* Create the alias for dispatch to resolver here.  */
-@@ -34008,7 +34010,7 @@ make_resolver_func (const tree default_decl,
-    provide the code to dispatch the right function at run-time.  NODE points
-    to the dispatcher decl whose body will be created.  */
- 
--static tree 
-+static tree
- ix86_generate_version_dispatcher_body (void *node_p)
- {
-   tree resolver_decl;
-@@ -34188,7 +34190,7 @@ fold_builtin_cpu (tree fndecl, tree *args)
-     M_INTEL_SILVERMONT,
-     M_INTEL_KNL,
-     M_AMD_BTVER1,
--    M_AMD_BTVER2,    
-+    M_AMD_BTVER2,
-     M_AMDFAM17H,
-     M_CPU_SUBTYPE_START,
-     M_INTEL_COREI7_NEHALEM,
-@@ -34237,7 +34239,7 @@ fold_builtin_cpu (tree fndecl, tree *args)
-       {"barcelona", M_AMDFAM10H_BARCELONA},
-       {"shanghai", M_AMDFAM10H_SHANGHAI},
-       {"istanbul", M_AMDFAM10H_ISTANBUL},
--      {"btver1", M_AMD_BTVER1},      
-+      {"btver1", M_AMD_BTVER1},
-       {"amdfam15h", M_AMDFAM15H},
-       {"bdver1", M_AMDFAM15H_BDVER1},
-       {"bdver2", M_AMDFAM15H_BDVER2},
-@@ -37540,9 +37542,9 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,
-       {
- 	/* Make it call __cpu_indicator_init in libgcc. */
- 	tree call_expr, fndecl, type;
--        type = build_function_type_list (integer_type_node, NULL_TREE); 
-+        type = build_function_type_list (integer_type_node, NULL_TREE);
- 	fndecl = build_fn_decl ("__cpu_indicator_init", type);
--	call_expr = build_call_expr (fndecl, 0); 
-+	call_expr = build_call_expr (fndecl, 0);
- 	return expand_expr (call_expr, target, mode, EXPAND_NORMAL);
-       }
-     case IX86_BUILTIN_CPU_IS:
-@@ -38016,7 +38018,7 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,
-       if (!REG_P (op2))
- 	op2 = copy_to_mode_reg (SImode, op2);
- 
--      emit_insn (fcode == IX86_BUILTIN_MONITOR 
-+      emit_insn (fcode == IX86_BUILTIN_MONITOR
- 		 ? ix86_gen_monitor (op0, op1, op2)
- 		 : ix86_gen_monitorx (op0, op1, op2));
-       return 0;
-@@ -43100,7 +43102,7 @@ ix86_mitigate_rop (void)
-   regrename_analyze (NULL);
- 
-   auto_vec<du_head_p> cands;
--  
-+
-   for (rtx_insn *insn = get_insns (); insn; insn = NEXT_INSN (insn))
-     {
-       if (!NONDEBUG_INSN_P (insn))
-@@ -43176,7 +43178,7 @@ ix86_mitigate_rop (void)
- 		 reg_names[best_reg], reg_class_names[superclass]);
- 
-     }
--  
-+
-   regrename_finish ();
- 
-   df_analyze ();
-@@ -43274,7 +43276,7 @@ ix86_reorg (void)
- 
-   if (flag_mitigate_rop)
-     ix86_mitigate_rop ();
--  
-+
-   if (TARGET_SEH && current_function_has_exception_handlers ())
-     ix86_seh_fixup_eh_fallthru ();
- 
-@@ -50097,7 +50099,7 @@ ix86_expand_sse2_mulvxdi3 (rtx op0, rtx op1, rtx op2)
- 
-       /* Multiply lower parts and add all */
-       t5 = gen_reg_rtx (V2DImode);
--      emit_insn (gen_vec_widen_umult_even_v4si (t5, 
-+      emit_insn (gen_vec_widen_umult_even_v4si (t5,
- 					gen_lowpart (V4SImode, op1),
- 					gen_lowpart (V4SImode, op2)));
-       op0 = expand_binop (mode, add_optab, t5, t4, op0, 1, OPTAB_DIRECT);
-@@ -50243,7 +50245,7 @@ ix86_expand_pextr (rtx *operands)
- 	return false;
-       dst = SUBREG_REG (dst);
-     }
--	
-+
-   if (SUBREG_P (src))
-     {
-       pos += SUBREG_BYTE (src) * BITS_PER_UNIT;
-@@ -52079,7 +52081,7 @@ extract_base_offset_in_addr (rtx mem, rtx *base, rtx *offset)
-   gcc_assert (MEM_P (mem));
- 
-   addr = XEXP (mem, 0);
--  
-+
-   if (GET_CODE (addr) == CONST)
-     addr = XEXP (addr, 0);
- 
-diff --git a/gcc/doc/invoke.texi b/gcc/doc/invoke.texi
-index 6f3c344476c..68127bbf6ef 100644
---- a/gcc/doc/invoke.texi
-+++ b/gcc/doc/invoke.texi
-@@ -8639,6 +8639,12 @@ int f() @{
- The @option{-fstrict-aliasing} option is enabled at levels
- @option{-O2}, @option{-O3}, @option{-Os}.
- 
-+@item -fstrict-calling-conventions
-+@opindex fstrict-calling-conventions
-+Use strict ABI calling conventions even with local functions.
-+This disable certain optimizations that may cause GCC to call local
-+functions in a manner other than that described by the ABI.
-+
- @item -fstrict-overflow
- @opindex fstrict-overflow
- Allow the compiler to assume strict signed overflow rules, depending
-diff --git a/gcc/testsuite/gcc.target/i386/local.c b/gcc/testsuite/gcc.target/i386/local.c
-index f4444951e12..3a487583d81 100644
---- a/gcc/testsuite/gcc.target/i386/local.c
-+++ b/gcc/testsuite/gcc.target/i386/local.c
-@@ -1,5 +1,6 @@
- /* { dg-do compile } */
--/* { dg-options "-O2 -funit-at-a-time" } */
-+/* { dg-options "-O2 -funit-at-a-time -fno-strict-calling-conventions" { target ia32 } } */
-+/* { dg-options "-O2 -funit-at-a-time" { target lp64 } } */
- /* { dg-final { scan-assembler "magic\[^\\n\]*eax" { target ia32 } } } */
- /* { dg-final { scan-assembler "magic\[^\\n\]*(edi|ecx)" { target { ! ia32 } } } } */
- 
-diff --git a/gcc/testsuite/gcc.target/i386/strict-cc.c b/gcc/testsuite/gcc.target/i386/strict-cc.c
-new file mode 100644
-index 00000000000..fa0543e52ff
---- /dev/null
-+++ b/gcc/testsuite/gcc.target/i386/strict-cc.c
-@@ -0,0 +1,24 @@
-+/* { dg-do compile { target { ilp32 } } } */
-+/* { dg-options "-O2 -funit-at-a-time -fstrict-calling-conventions"  } */
-+/* { dg-final { scan-assembler "pushl.*\\\$1" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$2" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$3" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$4" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$5" } } */
-+
-+#include <stdio.h>
-+
-+/* Verify that local calling convention is not used if strict conventions.  */
-+static int t(int, int, int, int, int) __attribute__ ((noinline));
-+
-+int
-+m()
-+{
-+    t(1, 2, 3, 4, 5);
-+}
-+
-+static int
-+t(int a, int b, int c, int d, int e)
-+{
-+    printf("%d\n", a, b, c, d, e);
-+}
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0006-allow-the-global-disabling-of-function-cloning.patch b/gcc7/Patches/0006-allow-the-global-disabling-of-function-cloning.patch
deleted file mode 100644
index e98ccce..0000000
--- a/gcc7/Patches/0006-allow-the-global-disabling-of-function-cloning.patch
+++ /dev/null
@@ -1,117 +0,0 @@
-From 74e4c60103b72f1e4714db11a6d83b60feb85c4f Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Sun, 30 Sep 2012 16:44:14 -0400
-Subject: [PATCH 06/11] allow the global disabling of function cloning
-
-Optimizations which clone functions to create call-specific implementations
-which may be better optimized also dissociate these functions from their
-symbol names in ways harmful to tracing and debugging (since there are now
-several implementations of a single source symbol, quite possibly none of them
-having the actual source symbol name).
-
-This allows any function cloning to be disabled, and makes any such
-optimization ineffective, and our source safe for debuggers everywhere.
----
- gcc/common.opt      |  5 +++++
- gcc/doc/invoke.texi | 11 ++++++++++-
- gcc/tree-inline.c   | 11 ++++++-----
- 3 files changed, 21 insertions(+), 6 deletions(-)
-
-diff --git a/gcc/common.opt b/gcc/common.opt
-index 978fbc83b89..e38dc343afd 100644
---- a/gcc/common.opt
-+++ b/gcc/common.opt
-@@ -1076,6 +1076,11 @@ fcode-hoisting
- Common Report Var(flag_code_hoisting) Optimization
- Enable code hoisting.
- 
-+fclone-functions
-+Common Report Var(flag_clone_functions) Init(1)
-+Allow the compiler to clone functions to facilitate certain optimizations.
-+Enabled by default.
-+
- fcombine-stack-adjustments
- Common Report Var(flag_combine_stack_adjustments) Optimization
- Looks for opportunities to reduce stack adjustments and stack references.
-diff --git a/gcc/doc/invoke.texi b/gcc/doc/invoke.texi
-index 68127bbf6ef..4024dd8af67 100644
---- a/gcc/doc/invoke.texi
-+++ b/gcc/doc/invoke.texi
-@@ -359,7 +359,7 @@ Objective-C and Objective-C++ Dialects}.
- -fauto-inc-dec  -fbranch-probabilities @gol
- -fbranch-target-load-optimize  -fbranch-target-load-optimize2 @gol
- -fbtr-bb-exclusive  -fcaller-saves @gol
---fcombine-stack-adjustments  -fconserve-stack @gol
-+-fclone-functions -fcombine-stack-adjustments  -fconserve-stack @gol
- -fcompare-elim  -fcprop-registers  -fcrossjumping @gol
- -fcse-follow-jumps  -fcse-skip-blocks  -fcx-fortran-rules @gol
- -fcx-limited-range @gol
-@@ -7977,6 +7977,15 @@ and then tries to find ways to combine them.
- 
- Enabled by default at @option{-O1} and higher.
- 
-+@item -fno-clone-functions
-+@opindex fno-clone-functions
-+Forbid the implicit cloning of functions implicit in certain
-+optimizations.  This also effectively will disable any optimization
-+which wishes to clone functions, equivalent to each function having
-+the ``noclone'' attribute.  This allows the prevention of the
-+dissociation of a piece of text from an intelligible and expected
-+symbol name, which may hamper debugging and tracing.
-+
- @item -fipa-ra
- @opindex fipa-ra
- Use caller save registers for allocation if those registers are not used by
-diff --git a/gcc/tree-inline.c b/gcc/tree-inline.c
-index f56d09e1bdb..5278ece9c74 100644
---- a/gcc/tree-inline.c
-+++ b/gcc/tree-inline.c
-@@ -659,7 +659,7 @@ remap_decls (tree decls, vec<tree, va_gc> **nonlocalized_list,
- 	  gcc_assert (DECL_P (new_var));
- 	  DECL_CHAIN (new_var) = new_decls;
- 	  new_decls = new_var;
-- 
-+
- 	  /* Also copy value-expressions.  */
- 	  if (VAR_P (new_var) && DECL_HAS_VALUE_EXPR_P (new_var))
- 	    {
-@@ -3489,7 +3489,7 @@ declare_return_variable (copy_body_data *id, tree return_slot, tree modify_dest,
-  done:
-   /* Register the VAR_DECL as the equivalent for the RESULT_DECL; that
-      way, when the RESULT_DECL is encountered, it will be
--     automatically replaced by the VAR_DECL.  
-+     automatically replaced by the VAR_DECL.
- 
-      When returning by reference, ensure that RESULT_DECL remaps to
-      gimple_val.  */
-@@ -4586,7 +4586,7 @@ expand_call_inline (basic_block bb, gimple *stmt, copy_body_data *id)
-     {
-       id->block = make_node (BLOCK);
-       BLOCK_ABSTRACT_ORIGIN (id->block) = fn;
--      BLOCK_SOURCE_LOCATION (id->block) 
-+      BLOCK_SOURCE_LOCATION (id->block)
- 	= LOCATION_LOCUS (gimple_location (stmt));
-       prepend_lexical_block (gimple_block (stmt), id->block);
-     }
-@@ -5714,7 +5714,8 @@ bool
- tree_versionable_function_p (tree fndecl)
- {
-   return (!lookup_attribute ("noclone", DECL_ATTRIBUTES (fndecl))
--	  && copy_forbidden (DECL_STRUCT_FUNCTION (fndecl)) == NULL);
-+      && (copy_forbidden (DECL_STRUCT_FUNCTION (fndecl)) == NULL)
-+	  && flag_clone_functions);
- }
- 
- /* Delete all unreachable basic blocks and update callgraph.
-@@ -5833,7 +5834,7 @@ update_clone_info (copy_body_data * id)
-    tree with another tree while duplicating the function's
-    body, TREE_MAP represents the mapping between these
-    trees. If UPDATE_CLONES is set, the call_stmt fields
--   of edges of clones of the function will be updated.  
-+   of edges of clones of the function will be updated.
- 
-    If non-NULL ARGS_TO_SKIP determine function parameters to remove
-    from new version.
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0007-strict-cc2-check-that-disabling-function-cloning-pre.patch b/gcc7/Patches/0007-strict-cc2-check-that-disabling-function-cloning-pre.patch
deleted file mode 100644
index 2c435ad..0000000
--- a/gcc7/Patches/0007-strict-cc2-check-that-disabling-function-cloning-pre.patch
+++ /dev/null
@@ -1,47 +0,0 @@
-From 7f8470aae88ff9b4371295ad83399e6d29c61c6d Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Tue, 4 Mar 2014 02:58:33 +0000
-Subject: [PATCH 07/11] strict-cc2: check that disabling function cloning
- prevents constant propagation eliding or changing arguments
-
----
- .../gcc.dg/fno-clone-preserves-unused-args.c       | 27 ++++++++++++++++++++++
- 1 file changed, 27 insertions(+)
- create mode 100644 gcc/testsuite/gcc.dg/fno-clone-preserves-unused-args.c
-
-diff --git a/gcc/testsuite/gcc.dg/fno-clone-preserves-unused-args.c b/gcc/testsuite/gcc.dg/fno-clone-preserves-unused-args.c
-new file mode 100644
-index 00000000000..770bdafe51b
---- /dev/null
-+++ b/gcc/testsuite/gcc.dg/fno-clone-preserves-unused-args.c
-@@ -0,0 +1,27 @@
-+/* { dg-do compile { target { ilp32 } } } */
-+/* { dg-options "-O2 -funit-at-a-time -fipa-sra -fno-clone-functions"  } */
-+/* { dg-final { scan-assembler "pushl.*\\\$1" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$2" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$3" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$4" } } */
-+/* { dg-final { scan-assembler "pushl.*\\\$5" } } */
-+
-+#include <stdio.h>
-+
-+/*
-+ * Verify that preventing function cloning prevents constant prop/scalar
-+ * reduction removing parameters
-+ */
-+static void
-+t(int, int, int, int, int) __attribute__ ((noinline));
-+
-+int void()
-+{
-+    t(1, 2, 3, 4, 5);
-+}
-+
-+/* Only use 3 params, bait constprop/sra into deleting the other two */
-+static void(int a, int b, int c, int d, int e)
-+{
-+    printf("%d %d\n", a, b, c);
-+}
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0008-sol2-enable-full-__cxa_atexit-support.patch b/gcc7/Patches/0008-sol2-enable-full-__cxa_atexit-support.patch
deleted file mode 100644
index 5037b14..0000000
--- a/gcc7/Patches/0008-sol2-enable-full-__cxa_atexit-support.patch
+++ /dev/null
@@ -1,70 +0,0 @@
-From 56d22cc2f87c8d64b5bd4460374728e0c84c0f7c Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Tue, 4 Mar 2014 22:11:03 +0000
-Subject: [PATCH 08/11] sol2: enable full __cxa_atexit support
-
----
- gcc/config/i386/sol2.h | 2 +-
- gcc/config/sol2.h      | 4 ++--
- libgcc/config.host     | 3 ++-
- 3 files changed, 5 insertions(+), 4 deletions(-)
-
-diff --git a/gcc/config/i386/sol2.h b/gcc/config/i386/sol2.h
-index 05e5e1a4949..8bece5b7e09 100644
---- a/gcc/config/i386/sol2.h
-+++ b/gcc/config/i386/sol2.h
-@@ -77,7 +77,7 @@ along with GCC; see the file COPYING3.  If not see
- #define ASM_CPU_SPEC "%(asm_cpu_default) " ASM_XBRACE_COMMENT_SPEC
- 
- /* Don't include ASM_PIC_SPEC.  While the Solaris 10+ assembler accepts -K PIC,
--   it gives many warnings: 
-+   it gives many warnings:
- 	Absolute relocation is used for symbol "<symbol>"
-    GNU as doesn't recognize -K at all.  */
- #undef ASM_SPEC
-diff --git a/gcc/config/sol2.h b/gcc/config/sol2.h
-index d522de03f4a..e2f7d2429a9 100644
---- a/gcc/config/sol2.h
-+++ b/gcc/config/sol2.h
-@@ -178,7 +178,7 @@ along with GCC; see the file COPYING3.  If not see
- 				   shared|" PIE_SPEC ":crtbeginS.o%s; \
- 				   :crtbegin.o%s}"
- #else
--#define STARTFILE_CRTBEGIN_SPEC	"crtbegin.o%s"
-+#define STARTFILE_CRTBEGIN_SPEC	"%{shared:crtbeginS.o%s;:crtbegin.o%s}"
- #endif
- 
- #if ENABLE_VTABLE_VERIFY
-@@ -228,7 +228,7 @@ along with GCC; see the file COPYING3.  If not see
- 			       shared|" PIE_SPEC ":crtendS.o%s; \
- 			       :crtend.o%s}"
- #else
--#define ENDFILE_CRTEND_SPEC "crtend.o%s"
-+#define ENDFILE_CRTEND_SPEC "%{shared:crtendS.o%s;:crtend.o%s}"
- #endif
- 
- #undef  ENDFILE_SPEC
-diff --git a/libgcc/config.host b/libgcc/config.host
-index 8beb492b5fa..0238efb9a62 100644
---- a/libgcc/config.host
-+++ b/libgcc/config.host
-@@ -270,7 +270,7 @@ case ${host} in
- *-*-solaris2*)
-   # Unless linker support and dl_iterate_phdr are present,
-   # unwind-dw2-fde-dip.c automatically falls back to unwind-dw2-fde.c.
--  tmake_file="$tmake_file sol2/t-sol2 t-eh-dw2-dip t-crtstuff-pic t-libgcc-pic t-slibgcc t-slibgcc-elf-ver"
-+  tmake_file="$tmake_file sol2/t-sol2 t-eh-dw2-dip t-crtstuff-pic t-libgcc-pic t-slibgcc t-slibgcc-elf-ver t-crtstuff-pic"
-   if test $with_gnu_ld = yes; then
-     tmake_file="$tmake_file t-slibgcc-gld"
-   else
-@@ -290,6 +290,7 @@ case ${host} in
-       i?86-*-solaris2.1[0-9]* | x86_64-*-solaris2.1[0-9]*)
-         # Solaris 10+/x86 provides crt1.o, crti.o, crtn.o, and gcrt1.o as
-         # part of the base system.
-+        extra_parts="$extra_parts crtbeginS.o crtendS.o"
-         ;;
-       sparc*-*-solaris2.1[0-9]*)
-         # Solaris 10+/SPARC lacks crt1.o and gcrt1.o.
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0009-symtab-disable-non-interposable-alias-generation-if-.patch b/gcc7/Patches/0009-symtab-disable-non-interposable-alias-generation-if-.patch
deleted file mode 100644
index be90c53..0000000
--- a/gcc7/Patches/0009-symtab-disable-non-interposable-alias-generation-if-.patch
+++ /dev/null
@@ -1,28 +0,0 @@
-From d8ad254b359691a8d7d85637530549de232aa921 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Sun, 24 Jan 2016 18:30:00 +0000
-Subject: [PATCH 09/11] symtab: disable non-interposable alias generation if
- function cloning is disabled
-
----
- gcc/symtab.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-diff --git a/gcc/symtab.c b/gcc/symtab.c
-index 342cc36f3af..7f7f5788a5f 100644
---- a/gcc/symtab.c
-+++ b/gcc/symtab.c
-@@ -1744,6 +1744,10 @@ symtab_node::noninterposable_alias (void)
-   tree new_decl;
-   symtab_node *new_node = NULL;
- 
-+  /* Do not allow a clone to be created if function-cloning is disabled */
-+  if (!flag_clone_functions)
-+	  return NULL;
-+
-   /* First try to look up existing alias or base object
-      (if that is already non-overwritable).  */
-   symtab_node *node = ultimate_alias_target ();
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0010-sol2-Use-appropriate-values-objects-for-the-various-.patch b/gcc7/Patches/0010-sol2-Use-appropriate-values-objects-for-the-various-.patch
deleted file mode 100644
index eb90d8b..0000000
--- a/gcc7/Patches/0010-sol2-Use-appropriate-values-objects-for-the-various-.patch
+++ /dev/null
@@ -1,48 +0,0 @@
-From d7c3a78c83a83678a0c442bc01d6224695c9abf0 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Wed, 27 Jan 2016 16:49:07 -0500
-Subject: [PATCH 10/11] sol2: Use appropriate values objects for the various C
- and C++ standards
-
-I'm reasonable confident of the C cases, less confident of the C++
-cases.
-
-This is on the basis that c99 and greater implies XPG6 (and vice versa), as the
-manual pages and headers say/enforce.  It is possible that C11 should
-imply xpg7 if and when we support that.
-
-C99 and greater get strict ansi.
-
-C otherwise gets transitional ansi (and no UNIX standard)
-
-C++ gets strict ansi, other than in C++98.  And gets no UNIX standards
-objects at all.
----
- gcc/config/sol2.h | 11 +++++++++--
- 1 file changed, 9 insertions(+), 2 deletions(-)
-
-diff --git a/gcc/config/sol2.h b/gcc/config/sol2.h
-index e2f7d2429a9..f3e6140d9a0 100644
---- a/gcc/config/sol2.h
-+++ b/gcc/config/sol2.h
-@@ -170,8 +170,15 @@ along with GCC; see the file COPYING3.  If not see
- #define SUPPORTS_INIT_PRIORITY HAVE_INITFINI_ARRAY_SUPPORT
- 
- #undef STARTFILE_ARCH_SPEC
--#define STARTFILE_ARCH_SPEC "%{ansi:values-Xc.o%s} \
--			    %{!ansi:values-Xa.o%s}"
-+#define STARTFILE_ARCH_SPEC "%{std=c1x|std=gnu1x:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c11|std=gnu11:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c99|std=gnu99:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c9x|std=gnu9x:values-Xc.o%s values-xpg6.o%s; \
-+			       std=c++0x|std=gnu++0x:values-Xc.o%s; \
-+			       std=c++11|std=gnu++11:values-Xc.o%s; \
-+			       std=c++03|std=gnu++03:values-Xc.o%s; \
-+			       :values-Xa.o%s}"
-+
- 
- #if defined(HAVE_LD_PIE) && defined(HAVE_SOLARIS_CRTS)
- #define STARTFILE_CRTBEGIN_SPEC "%{static:crtbegin.o%s; \
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0011-i386-Save-integer-passed-arguments-to-the-stack-to-a.patch b/gcc7/Patches/0011-i386-Save-integer-passed-arguments-to-the-stack-to-a.patch
deleted file mode 100644
index 80edce0..0000000
--- a/gcc7/Patches/0011-i386-Save-integer-passed-arguments-to-the-stack-to-a.patch
+++ /dev/null
@@ -1,812 +0,0 @@
-From 13728359e5b7fbbbe1c51f48f18cadfcf19914d5 Mon Sep 17 00:00:00 2001
-From: Richard Lowe <richlowe@richlowe.net>
-Date: Sat, 23 Jan 2016 22:14:56 -0500
-Subject: [PATCH 11/11] i386: Save integer-passed arguments to the stack, to
- aid debuggers.
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-
-Merged from 5.3 to 7.2 by: Aurélien Larcher
-
-Originally implemented in:
-    commit 023cc9a4c9c698bed1f51d38eac850d327fc1146
-    Author: jsm28 <jsm28@138bc75d-0d04-0410-961f-82ee72b054a4>
-    Date:   Wed Jun 29 23:51:34 2005 +0000
-
-        	* gcc/dwarf2.h (DW_AT_SUN_amd64_parmdump): New.
-        	* gcc/dwarf2out.c (gen_subprogram_die): Add this attribute.
-        	* gcc/doc/invoke.texi (-msave-args): New x86-64 option.
-        	* gcc/config/i386/i386.h (MASK_SAVE_ARGS, TARGET_SAVE_ARGS): New.
-        	(TARGET_SWITCHES): Add -msave-args.
-        	* gcc/config/i386/i386.c (struct ix86_frame): Add nmsave_args and
-        	padding0.
-        	(pro_epilogue_adjust_stack): Declare.
-        	(ix86_nsaved_args): New.
-        	(override_options, ix86_can_use_return_insn_p,
-        	ix86_frame_pointer_required, ix86_compute_frame_layout,
-        	ix86_emit_save_regs, ix86_emit_save_regs_using_mov,
-        	ix86_expand_prologue, ix86_expand_epilogue): Handle -msave-args.
-
-        git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/branches/csl-sol210-3_4-branch@101443 138bc75d-0d04-0410-961f-82ee72b054a4
----
- gcc/config/i386/i386.c                          | 139 ++++++++++++++++++++++--
- gcc/config/i386/i386.h                          |  15 ++-
- gcc/config/i386/i386.opt                        |  10 ++
- gcc/doc/invoke.texi                             |   4 +
- gcc/dwarf2out.c                                 |  67 ++++++------
- gcc/testsuite/gcc.target/i386/msave-args-mov.c  |  26 +++++
- gcc/testsuite/gcc.target/i386/msave-args-push.c |  26 +++++
- include/dwarf2.def                              |  16 +--
- 8 files changed, 253 insertions(+), 50 deletions(-)
- create mode 100644 gcc/testsuite/gcc.target/i386/msave-args-mov.c
- create mode 100644 gcc/testsuite/gcc.target/i386/msave-args-push.c
-
-diff --git a/gcc/config/i386/i386.c b/gcc/config/i386/i386.c
-index 3651b995ea0..07be2d96b90 100644
---- a/gcc/config/i386/i386.c
-+++ b/gcc/config/i386/i386.c
-@@ -2572,6 +2572,8 @@ static unsigned int ix86_minimum_incoming_stack_boundary (bool);
- 
- static enum calling_abi ix86_function_abi (const_tree);
- 
-+static int ix86_nsaved_args (void);
-+static void pro_epilogue_adjust_stack (rtx, rtx, rtx, int, bool);
- 
- #ifndef SUBTARGET32_DEFAULT_CPU
- #define SUBTARGET32_DEFAULT_CPU "i386"
-@@ -5896,6 +5898,9 @@ ix86_option_override_internal (bool main_args_p,
-       &= ~((OPTION_MASK_ISA_BMI | OPTION_MASK_ISA_BMI2 | OPTION_MASK_ISA_TBM)
- 	   & ~opts->x_ix86_isa_flags_explicit);
- 
-+  if (!TARGET_64BIT_P (opts->x_ix86_isa_flags) && TARGET_SAVE_ARGS)
-+    error ("-msave-args makes no sense in the 32-bit mode");
-+
-   /* Validate -mpreferred-stack-boundary= value or default it to
-      PREFERRED_STACK_BOUNDARY_DEFAULT.  */
-   ix86_preferred_stack_boundary = PREFERRED_STACK_BOUNDARY_DEFAULT;
-@@ -11966,7 +11971,7 @@ ix86_can_use_return_insn_p (void)
-   ix86_compute_frame_layout ();
-   struct ix86_frame &frame = cfun->machine->frame;
-   return (frame.stack_pointer_offset == UNITS_PER_WORD
--	  && (frame.nregs + frame.nsseregs) == 0);
-+	  && (frame.nmsave_args + frame.nregs + frame.nsseregs) == 0);
- }
- 
- /* Value should be nonzero if functions must have frame pointers.
-@@ -11990,6 +11995,9 @@ ix86_frame_pointer_required (void)
-   if (TARGET_32BIT_MS_ABI && cfun->calls_setjmp)
-     return true;
- 
-+  if (TARGET_SAVE_ARGS)
-+    return true;
-+
-   /* Win64 SEH, very large frames need a frame-pointer as maximum stack
-      allocation is 4GB.  */
-   if (TARGET_64BIT_MS_ABI && get_frame_size () > SEH_MAX_FRAME_SIZE)
-@@ -12783,6 +12791,7 @@ ix86_compute_frame_layout (void)
- 
-   frame->nregs = ix86_nsaved_regs ();
-   frame->nsseregs = ix86_nsaved_sseregs ();
-+  frame->nmsave_args = ix86_nsaved_args ();
- 
-   /* 64-bit MS ABI seem to require stack alignment to be always 16,
-      except for function prologues, leaf functions and when the defult
-@@ -12845,7 +12854,8 @@ ix86_compute_frame_layout (void)
-     }
- 
-   frame->save_regs_using_mov
--    = (TARGET_PROLOGUE_USING_MOVE && cfun->machine->use_fast_prologue_epilogue
-+    = ((TARGET_FORCE_SAVE_REGS_USING_MOV ||
-+	(TARGET_PROLOGUE_USING_MOVE && cfun->machine->use_fast_prologue_epilogue))
-        /* If static stack checking is enabled and done with probes,
- 	  the registers need to be saved before allocating the frame.  */
-        && flag_stack_check != STATIC_BUILTIN_STACK_CHECK);
-@@ -12865,6 +12875,13 @@ ix86_compute_frame_layout (void)
-   /* The traditional frame pointer location is at the top of the frame.  */
-   frame->hard_frame_pointer_offset = offset;
- 
-+  if (TARGET_SAVE_ARGS)
-+    {
-+      offset += frame->nmsave_args * UNITS_PER_WORD;
-+      offset += (frame->nmsave_args % 2) * UNITS_PER_WORD;
-+    }
-+  frame->arg_save_offset = offset;
-+
-   /* Register save area */
-   offset += frame->nregs * UNITS_PER_WORD;
-   frame->reg_save_offset = offset;
-@@ -12947,7 +12964,7 @@ ix86_compute_frame_layout (void)
-   /* Size prologue needs to allocate.  */
-   to_allocate = offset - frame->sse_reg_save_offset;
- 
--  if ((!to_allocate && frame->nregs <= 1)
-+  if ((!TARGET_SAVE_ARGS && !to_allocate && frame->nregs <= 1)
-       || (TARGET_64BIT && to_allocate >= HOST_WIDE_INT_C (0x80000000)))
-     frame->save_regs_using_mov = false;
- 
-@@ -12959,7 +12976,11 @@ ix86_compute_frame_layout (void)
-     {
-       frame->red_zone_size = to_allocate;
-       if (frame->save_regs_using_mov)
--	frame->red_zone_size += frame->nregs * UNITS_PER_WORD;
-+	{
-+	  frame->red_zone_size += frame->nregs * UNITS_PER_WORD;
-+	  frame->red_zone_size += frame->nmsave_args * UNITS_PER_WORD;
-+	  frame->red_zone_size += (frame->nmsave_args % 2) * UNITS_PER_WORD;
-+	}
-       if (frame->red_zone_size > RED_ZONE_SIZE - RED_ZONE_RESERVE)
- 	frame->red_zone_size = RED_ZONE_SIZE - RED_ZONE_RESERVE;
-     }
-@@ -12990,6 +13011,23 @@ ix86_compute_frame_layout (void)
- 	  frame->hard_frame_pointer_offset = frame->stack_pointer_offset - 128;
- 	}
-     }
-+
-+
-+  if (getenv("DEBUG_FRAME_STUFF") != NULL)
-+    {
-+      printf("nmsave_args: %d\n", frame->nmsave_args);
-+      printf("nsseregs: %d\n", frame->nsseregs);
-+      printf("nregs: %d\n", frame->nregs);
-+
-+      printf("frame_pointer_offset: %llx\n", frame->frame_pointer_offset);
-+      printf("hard_frame_pointer_offset: %llx\n", frame->hard_frame_pointer_offset);
-+      printf("stack_pointer_offset: %llx\n", frame->stack_pointer_offset);
-+      printf("hfp_save_offset: %llx\n", frame->hfp_save_offset);
-+      printf("arg_save_offset: %llx\n", frame->arg_save_offset);
-+      printf("reg_save_offset: %llx\n", frame->reg_save_offset);
-+      printf("sse_reg_save_offset: %llx\n", frame->sse_reg_save_offset);
-+
-+    }
- }
- 
- /* This is semi-inlined memory_address_length, but simplified
-@@ -13098,6 +13136,24 @@ ix86_emit_save_regs (void)
-   unsigned int regno;
-   rtx_insn *insn;
- 
-+  if (TARGET_SAVE_ARGS)
-+    {
-+      int i;
-+      int nsaved = ix86_nsaved_args ();
-+      int start = cfun->returns_struct;
-+
-+      for (i = start; i < start + nsaved; i++)
-+	{
-+	  regno = x86_64_int_parameter_registers[i];
-+	  insn = emit_insn (gen_push (gen_rtx_REG (word_mode, regno)));
-+	  RTX_FRAME_RELATED_P (insn) = 1;
-+	}
-+      if (nsaved % 2 != 0)
-+	pro_epilogue_adjust_stack (stack_pointer_rtx, stack_pointer_rtx,
-+				   GEN_INT (-UNITS_PER_WORD), -1, false);
-+    }
-+
-+
-   for (regno = FIRST_PSEUDO_REGISTER - 1; regno-- > 0; )
-     if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, true))
-       {
-@@ -13176,9 +13232,30 @@ ix86_emit_save_reg_using_mov (machine_mode mode, unsigned int regno,
- /* Emit code to save registers using MOV insns.
-    First register is stored at CFA - CFA_OFFSET.  */
- static void
--ix86_emit_save_regs_using_mov (HOST_WIDE_INT cfa_offset)
-+ix86_emit_save_regs_using_mov (struct ix86_frame *frame)
- {
-   unsigned int regno;
-+  HOST_WIDE_INT cfa_offset = frame->arg_save_offset;
-+
-+  if (TARGET_SAVE_ARGS)
-+    {
-+      int i;
-+      int nsaved = ix86_nsaved_args ();
-+      int start = cfun->returns_struct;
-+
-+      /* We deal with this twice? */
-+      if (nsaved % 2 != 0)
-+	cfa_offset -= UNITS_PER_WORD;
-+
-+      for (i = start + nsaved - 1; i >= start; i--)
-+	{
-+	  regno = x86_64_int_parameter_registers[i];
-+	  ix86_emit_save_reg_using_mov(word_mode, regno, cfa_offset);
-+	  cfa_offset -= UNITS_PER_WORD;
-+	}
-+    }
-+
-+  cfa_offset = frame->reg_save_offset;
- 
-   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)
-     if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, true))
-@@ -14237,7 +14314,7 @@ ix86_expand_prologue (void)
- 	}
-     }
- 
--  int_registers_saved = (frame.nregs == 0);
-+  int_registers_saved = (frame.nregs == 0 && frame.nmsave_args == 0);
-   sse_registers_saved = (frame.nsseregs == 0);
- 
-   if (frame_pointer_needed && !m->fs.fp_valid)
-@@ -14277,6 +14354,7 @@ ix86_expand_prologue (void)
- 	{
- 	  ix86_emit_save_regs ();
- 	  int_registers_saved = true;
-+
- 	  gcc_assert (m->fs.sp_offset == frame.reg_save_offset);
- 	}
- 
-@@ -14288,7 +14366,7 @@ ix86_expand_prologue (void)
- 	       && (! TARGET_STACK_PROBE
- 		   || frame.stack_pointer_offset < CHECK_STACK_LIMIT))
- 	{
--	  ix86_emit_save_regs_using_mov (frame.reg_save_offset);
-+	  ix86_emit_save_regs_using_mov (&frame);
- 	  int_registers_saved = true;
- 	}
-     }
-@@ -14531,7 +14609,7 @@ ix86_expand_prologue (void)
-     }
- 
-   if (!int_registers_saved)
--    ix86_emit_save_regs_using_mov (frame.reg_save_offset);
-+    ix86_emit_save_regs_using_mov (&frame);
-   if (!sse_registers_saved)
-     ix86_emit_save_sse_regs_using_mov (frame.sse_reg_save_offset);
- 
-@@ -14564,6 +14642,7 @@ ix86_expand_prologue (void)
-      relative to the value of the stack pointer at the end of the function
-      prologue, and moving instructions that access redzone area via frame
-      pointer inside push sequence violates this assumption.  */
-+  /* XXX: We may wish to do this when SAVE_ARGS in general */
-   if (frame_pointer_needed && frame.red_zone_size)
-     emit_insn (gen_memory_blockage ());
- 
-@@ -14777,6 +14856,7 @@ ix86_expand_epilogue (int style)
- 
-   /* See the comment about red zone and frame
-      pointer usage in ix86_expand_prologue.  */
-+  /* XXX: We may want to do this when SAVE_ARGS in general */
-   if (frame_pointer_needed && frame.red_zone_size)
-     emit_insn (gen_memory_blockage ());
- 
-@@ -14970,6 +15050,36 @@ ix86_expand_epilogue (int style)
-       ix86_emit_restore_regs_using_pop ();
-     }
- 
-+  if (TARGET_SAVE_ARGS) {
-+    /*
-+     * For each saved argument, emit a restore note, to make sure it happens
-+     * correctly within the shrink wrapping (I think).
-+     *
-+     * Note that 'restore' in this case merely means the rule is the same as
-+     * it was on function entry, not that we have actually done a register
-+     * restore (which of course, we haven't).
-+     *
-+     * If we do not do this, the DWARF code will emit sufficient restores to
-+     * provide balance on its own initiative, which in the presence of
-+     * -fshrink-wrap may actually _introduce_ unbalance (whereby we only
-+     * .cfi_offset a register sometimes, but will always .cfi_restore it.
-+     * This will trip an assert.)
-+     */
-+    int start = cfun->returns_struct;
-+    int nsaved = ix86_nsaved_args();
-+    int i;
-+
-+    for (i = start + nsaved - 1; i >= start; i--)
-+      queued_cfa_restores
-+	= alloc_reg_note (REG_CFA_RESTORE,
-+			  gen_rtx_REG(Pmode,
-+				      x86_64_int_parameter_registers[i]),
-+			  queued_cfa_restores);
-+
-+    gcc_assert(m->fs.fp_valid);
-+  }
-+
-+
-   /* If we used a stack pointer and haven't already got rid of it,
-      then do so now.  */
-   if (m->fs.fp_valid)
-@@ -15981,6 +16091,19 @@ ix86_cannot_force_const_mem (machine_mode mode, rtx x)
-   return !ix86_legitimate_constant_p (mode, x);
- }
- 
-+/* Return number of arguments to be saved on the stack with
-+   -msave-args.  */
-+
-+static int
-+ix86_nsaved_args (void)
-+{
-+  if (TARGET_SAVE_ARGS)
-+    return crtl->args.info.regno - cfun->returns_struct;
-+  else
-+    return 0;
-+}
-+
-+
- /*  Nonzero if the symbol is marked as dllimport, or as stub-variable,
-     otherwise zero.  */
- 
-diff --git a/gcc/config/i386/i386.h b/gcc/config/i386/i386.h
-index e7da790f1b1..c4a8dc828cd 100644
---- a/gcc/config/i386/i386.h
-+++ b/gcc/config/i386/i386.h
-@@ -587,7 +587,7 @@ extern tree x86_mfence;
- #define TARGET_SUBTARGET64_DEFAULT 0
- #define TARGET_SUBTARGET64_ISA_DEFAULT 0
- 
--/* Replace MACH-O, ifdefs by in-line tests, where possible. 
-+/* Replace MACH-O, ifdefs by in-line tests, where possible.
-    (a) Macros defined in config/i386/darwin.h  */
- #define TARGET_MACHO 0
- #define TARGET_MACHO_BRANCH_ISLANDS 0
-@@ -1616,11 +1616,11 @@ enum reg_class
- /* If defined, the maximum amount of space required for outgoing arguments
-    will be computed and placed into the variable `crtl->outgoing_args_size'.
-    No space will be pushed onto the stack for each call; instead, the
--   function prologue should increase the stack frame size by this amount.  
-+   function prologue should increase the stack frame size by this amount.
- 
-    In 32bit mode enabling argument accumulation results in about 5% code size
-    growth because move instructions are less compact than push.  In 64bit
--   mode the difference is less drastic but visible.  
-+   mode the difference is less drastic but visible.
- 
-    FIXME: Unlike earlier implementations, the size of unwind info seems to
-    actually grow with accumulation.  Is that because accumulated args
-@@ -2310,7 +2310,7 @@ do {							\
- } while (0)
- 
- /* Which processor to tune code generation for.  These must be in sync
--   with processor_target_table in i386.c.  */ 
-+   with processor_target_table in i386.c.  */
- 
- enum processor_type
- {
-@@ -2463,6 +2463,11 @@ enum avx_u128_state
- 
-    saved frame pointer			if frame_pointer_needed
- 					<- HARD_FRAME_POINTER
-+
-+   [-msave-args]			<- arg_save_offset
-+
-+   [saveargs padding]
-+
-    [saved regs]
- 					<- regs_save_offset
-    [padding0]
-@@ -2480,6 +2485,7 @@ enum avx_u128_state
-   */
- struct GTY(()) ix86_frame
- {
-+  int nmsave_args;
-   int nsseregs;
-   int nregs;
-   int va_arg_size;
-@@ -2491,6 +2497,7 @@ struct GTY(()) ix86_frame
-   HOST_WIDE_INT hard_frame_pointer_offset;
-   HOST_WIDE_INT stack_pointer_offset;
-   HOST_WIDE_INT hfp_save_offset;
-+  HOST_WIDE_INT arg_save_offset;
-   HOST_WIDE_INT reg_save_offset;
-   HOST_WIDE_INT sse_reg_save_offset;
- 
-diff --git a/gcc/config/i386/i386.opt b/gcc/config/i386/i386.opt
-index b90da9f89ec..d53f69c18be 100644
---- a/gcc/config/i386/i386.opt
-+++ b/gcc/config/i386/i386.opt
-@@ -505,6 +505,16 @@ mtls-direct-seg-refs
- Target Report Mask(TLS_DIRECT_SEG_REFS)
- Use direct references against %gs when accessing tls data.
- 
-+msave-args
-+Target Report Mask(SAVE_ARGS)
-+Save integer arguments on the stack at function entry
-+
-+mforce-save-regs-using-mov
-+Target Report Mask(FORCE_SAVE_REGS_USING_MOV)
-+Save registers using push in function prologues.  This is intentionally
-+undocumented and used for msave-args testing.
-+
-+
- mtune=
- Target RejectNegative Joined Var(ix86_tune_string)
- Schedule code for given CPU.
-diff --git a/gcc/doc/invoke.texi b/gcc/doc/invoke.texi
-index 4024dd8af67..43cc148fe3e 100644
---- a/gcc/doc/invoke.texi
-+++ b/gcc/doc/invoke.texi
-@@ -13887,6 +13887,10 @@ dynamically linked.  This is the default code model.
- Generate code for the large code model.  This makes no assumptions about
- addresses and sizes of sections.  Programs can be statically linked only.
- 
-+@item -msave-args
-+@opindex msave-args
-+Save integer-sized arguments on the stack on function entry.
-+
- @item -mstrict-align
- @opindex mstrict-align
- Avoid generating memory accesses that may not be aligned on a natural object
-diff --git a/gcc/dwarf2out.c b/gcc/dwarf2out.c
-index 43bb121fb21..583c4a94f5e 100644
---- a/gcc/dwarf2out.c
-+++ b/gcc/dwarf2out.c
-@@ -1414,7 +1414,7 @@ dw_val_equal_p (dw_val_node *a, dw_val_node *b)
-       return a->v.val_file == b->v.val_file;
-     case dw_val_class_decl_ref:
-       return a->v.val_decl_ref == b->v.val_decl_ref;
--    
-+
-     case dw_val_class_const_double:
-       return (a->v.val_double.high == b->v.val_double.high
- 	      && a->v.val_double.low == b->v.val_double.low);
-@@ -2144,9 +2144,9 @@ output_loc_operands (dw_loc_descr_ref loc, int for_eh_or_skip)
- 	unsigned r = val1->v.val_unsigned;
- 	if (for_eh_or_skip >= 0)
- 	  r = DWARF2_FRAME_REG_OUT (r, for_eh_or_skip);
--	gcc_assert (size_of_uleb128 (r) 
-+	gcc_assert (size_of_uleb128 (r)
- 		    == size_of_uleb128 (val1->v.val_unsigned));
--	dw2_asm_output_data_uleb128 (r, NULL);	
-+	dw2_asm_output_data_uleb128 (r, NULL);
-       }
-       break;
-     case DW_OP_fbreg:
-@@ -2157,9 +2157,9 @@ output_loc_operands (dw_loc_descr_ref loc, int for_eh_or_skip)
- 	unsigned r = val1->v.val_unsigned;
- 	if (for_eh_or_skip >= 0)
- 	  r = DWARF2_FRAME_REG_OUT (r, for_eh_or_skip);
--	gcc_assert (size_of_uleb128 (r) 
-+	gcc_assert (size_of_uleb128 (r)
- 		    == size_of_uleb128 (val1->v.val_unsigned));
--	dw2_asm_output_data_uleb128 (r, NULL);	
-+	dw2_asm_output_data_uleb128 (r, NULL);
- 	dw2_asm_output_data_sleb128 (val2->v.val_int, NULL);
-       }
-       break;
-@@ -2378,7 +2378,7 @@ output_loc_operands (dw_loc_descr_ref loc, int for_eh_or_skip)
-     }
- }
- 
--/* Output a sequence of location operations.  
-+/* Output a sequence of location operations.
-    The for_eh_or_skip parameter controls whether register numbers are
-    converted using DWARF2_FRAME_REG_OUT, which is needed in the case that
-    hard reg numbers have been processed via DWARF_FRAME_REGNUM (i.e. for unwind
-@@ -2392,7 +2392,7 @@ output_loc_sequence (dw_loc_descr_ref loc, int for_eh_or_skip)
-     {
-       enum dwarf_location_atom opc = loc->dw_loc_opc;
-       /* Output the opcode.  */
--      if (for_eh_or_skip >= 0 
-+      if (for_eh_or_skip >= 0
-           && opc >= DW_OP_breg0 && opc <= DW_OP_breg31)
- 	{
- 	  unsigned r = (opc - DW_OP_breg0);
-@@ -2400,7 +2400,7 @@ output_loc_sequence (dw_loc_descr_ref loc, int for_eh_or_skip)
- 	  gcc_assert (r <= 31);
- 	  opc = (enum dwarf_location_atom) (DW_OP_breg0 + r);
- 	}
--      else if (for_eh_or_skip >= 0 
-+      else if (for_eh_or_skip >= 0
- 	       && opc >= DW_OP_reg0 && opc <= DW_OP_reg31)
- 	{
- 	  unsigned r = (opc - DW_OP_reg0);
-@@ -2479,13 +2479,13 @@ output_loc_operands_raw (dw_loc_descr_ref loc)
-     case DW_OP_regx:
-       {
- 	unsigned r = DWARF2_FRAME_REG_OUT (val1->v.val_unsigned, 1);
--	gcc_assert (size_of_uleb128 (r) 
-+	gcc_assert (size_of_uleb128 (r)
- 		    == size_of_uleb128 (val1->v.val_unsigned));
- 	fputc (',', asm_out_file);
- 	dw2_asm_output_data_uleb128_raw (r);
-       }
-       break;
--      
-+
-     case DW_OP_constu:
-     case DW_OP_plus_uconst:
-     case DW_OP_piece:
-@@ -2540,7 +2540,7 @@ output_loc_operands_raw (dw_loc_descr_ref loc)
-     case DW_OP_bregx:
-       {
- 	unsigned r = DWARF2_FRAME_REG_OUT (val1->v.val_unsigned, 1);
--	gcc_assert (size_of_uleb128 (r) 
-+	gcc_assert (size_of_uleb128 (r)
- 		    == size_of_uleb128 (val1->v.val_unsigned));
- 	fputc (',', asm_out_file);
- 	dw2_asm_output_data_uleb128_raw (r);
-@@ -3230,7 +3230,7 @@ struct dw_loc_list_hasher : ggc_ptr_hash<cached_dw_loc_list>
- {
- 
-   typedef const_tree compare_type;
--  
-+
-   static hashval_t hash (cached_dw_loc_list *);
-   static bool equal (cached_dw_loc_list *, const_tree);
- };
-@@ -10891,7 +10891,7 @@ output_aranges (void)
- {
-   unsigned i;
-   unsigned long aranges_length = size_of_aranges ();
--  
-+
-   if (!XCOFF_DEBUGGING_INFO)
-     {
-       if (DWARF_INITIAL_LENGTH_SIZE - DWARF_OFFSET_SIZE == 4)
-@@ -11874,7 +11874,7 @@ output_one_line_info_table (dw_line_info_table *table)
- 	  dw2_asm_output_data (1, DW_LNS_set_prologue_end,
- 			       "set prologue end");
- 	  break;
--	  
-+
- 	case LI_set_epilogue_begin:
- 	  dw2_asm_output_data (1, DW_LNS_set_epilogue_begin,
- 			       "set epilogue begin");
-@@ -16158,7 +16158,7 @@ dw_sra_loc_expr (tree decl, rtx loc)
- 	      if (GET_CODE (varloc) == EXPR_LIST)
- 		varloc = XEXP (varloc, 0);
- 	    }
--	  do 
-+	  do
- 	    {
- 	      if (GET_CODE (varloc) == CONST
- 		  || GET_CODE (varloc) == SIGN_EXTEND
-@@ -19566,7 +19566,7 @@ compute_frame_pointer_to_fb_displacement (HOST_WIDE_INT offset)
-   frame_pointer_fb_offset = -offset;
- 
-   /* ??? AVR doesn't set up valid eliminations when there is no stack frame
--     in which to eliminate.  This is because it's stack pointer isn't 
-+     in which to eliminate.  This is because it's stack pointer isn't
-      directly accessible as a register within the ISA.  To work around
-      this, assume that while we cannot provide a proper value for
-      frame_pointer_fb_offset, we won't need one either.  */
-@@ -19601,7 +19601,7 @@ add_name_attribute (dw_die_ref die, const char *name_string)
-    ??? This is a temporary measure until after we're able to generate
-    regular DWARF for the complex Ada type system.  */
- 
--static void 
-+static void
- add_gnat_descriptive_type_attribute (dw_die_ref die, tree type,
- 				     dw_die_ref context_die)
- {
-@@ -20638,8 +20638,8 @@ add_calling_convention_attribute (dw_die_ref subr_die, tree decl)
-       /* DWARF 2 doesn't provide a way to identify a program's source-level
- 	entry point.  DW_AT_calling_convention attributes are only meant
- 	to describe functions' calling conventions.  However, lacking a
--	better way to signal the Fortran main program, we used this for 
--	a long time, following existing custom.  Now, DWARF 4 has 
-+	better way to signal the Fortran main program, we used this for
-+	a long time, following existing custom.  Now, DWARF 4 has
- 	DW_AT_main_subprogram, which we add below, but some tools still
- 	rely on the old way, which we thus keep.  */
-       value = DW_CC_program;
-@@ -21191,7 +21191,7 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,
-   tree node_or_origin = node ? node : origin;
-   tree ultimate_origin;
-   dw_die_ref parm_die = NULL;
--  
-+
-   if (TREE_CODE_CLASS (TREE_CODE (node_or_origin)) == tcc_declaration)
-     {
-       parm_die = lookup_decl_die (node);
-@@ -22216,9 +22216,9 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)
- 	    {
- 	      if (dwarf_version >= 3 || !dwarf_strict)
- 		{
--		  /* We should use ranges for non-contiguous code section 
-+		  /* We should use ranges for non-contiguous code section
- 		     addresses.  Use the actual code range for the initial
--		     section, since the HOT/COLD labels might precede an 
-+		     section, since the HOT/COLD labels might precede an
- 		     alignment offset.  */
- 		  bool range_list_added = false;
- 		  add_ranges_by_labels (subr_die, fde->dw_fde_begin,
-@@ -22254,7 +22254,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)
- 		  if (TREE_PUBLIC (decl))
- 		    add_AT_flag (seg_die, DW_AT_external, 1);
- 
--		  if (decl_name != NULL 
-+		  if (decl_name != NULL
- 		      && IDENTIFIER_POINTER (decl_name) != NULL)
- 		    {
- 		      name = dwarf2_name (decl, 1);
-@@ -22268,7 +22268,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)
- 		  if (DECL_ARTIFICIAL (decl))
- 		    add_AT_flag (seg_die, DW_AT_artificial, 1);
- 
--		  name = concat ("__second_sect_of_", name, NULL); 
-+		  name = concat ("__second_sect_of_", name, NULL);
- 		  add_AT_low_high_pc (seg_die, fde->dw_fde_second_begin,
-                                       fde->dw_fde_second_end, false);
- 		  add_name_attribute (seg_die, name);
-@@ -22432,6 +22432,11 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)
-     /* Add the calling convention attribute if requested.  */
-     add_calling_convention_attribute (subr_die, decl);
- 
-+#ifdef TARGET_SAVE_ARGS
-+  if (TARGET_SAVE_ARGS)
-+    add_AT_flag (subr_die, DW_AT_SUN_amd64_parmdump, 1);
-+#endif
-+
-   /* Output Dwarf info for all of the stuff within the body of the function
-      (if it has one - it may be just a declaration).
- 
-@@ -24124,7 +24129,7 @@ gen_member_die (tree type, dw_die_ref context_die)
- 	{
- 	  /* Handle inline static data members, which only have in-class
- 	     declarations.  */
--	  dw_die_ref ref = NULL; 
-+	  dw_die_ref ref = NULL;
- 	  if (child->die_tag == DW_TAG_variable
- 	      && child->die_parent == comp_unit_die ())
- 	    {
-@@ -26123,7 +26128,7 @@ gen_scheduled_generic_parms_dies (void)
- 
-   if (!generic_type_instances)
-     return;
--  
-+
-   FOR_EACH_VEC_ELT (*generic_type_instances, i, t)
-     if (COMPLETE_TYPE_P (t))
-       gen_generic_params_dies (t);
-@@ -26663,7 +26668,7 @@ dwarf2out_source_line (unsigned int line, unsigned int column,
-      that second line number entry.  */
-   /* Recall that this end-of-prologue indication is *not* the same thing
-      as the end_prologue debug hook.  The NOTE_INSN_PROLOGUE_END note,
--     to which the hook corresponds, follows the last insn that was 
-+     to which the hook corresponds, follows the last insn that was
-      emitted by gen_prologue.  What we need is to precede the first insn
-      that had been emitted after NOTE_INSN_FUNCTION_BEG, i.e. the first
-      insn that corresponds to something the user wrote.  These may be
-@@ -26881,7 +26886,7 @@ output_macinfo_op (macinfo_entry *ref)
-       file_num = maybe_emit_file (fd);
-       dw2_asm_output_data (1, DW_MACINFO_start_file, "Start new file");
-       dw2_asm_output_data_uleb128 (ref->lineno,
--				   "Included from line number %lu", 
-+				   "Included from line number %lu",
- 				   (unsigned long) ref->lineno);
-       dw2_asm_output_data_uleb128 (file_num, "file %s", ref->info);
-       break;
-@@ -26904,7 +26909,7 @@ output_macinfo_op (macinfo_entry *ref)
-       dw2_asm_output_data (1, ref->code,
- 			   ref->code == DW_MACINFO_define
- 			   ? "Define macro" : "Undefine macro");
--      dw2_asm_output_data_uleb128 (ref->lineno, "At line number %lu", 
-+      dw2_asm_output_data_uleb128 (ref->lineno, "At line number %lu",
- 				   (unsigned long) ref->lineno);
-       dw2_asm_output_nstring (ref->info, -1, "The macro");
-       break;
-@@ -29183,7 +29188,7 @@ hash_loc_operands (dw_loc_descr_ref loc, inchash::hash &hstate)
- 		      get_full_len (*val2->v.val_wide)
- 		      * HOST_BITS_PER_WIDE_INT / HOST_BITS_PER_CHAR);
- 	  break;
--	case dw_val_class_addr:	
-+	case dw_val_class_addr:
- 	  inchash::add_rtx (val2->v.val_addr, hstate);
- 	  break;
- 	default:
-@@ -29764,7 +29769,7 @@ dwarf2out_finish (const char *)
- 
-   /* We can only use the low/high_pc attributes if all of the code was
-      in .text.  */
--  if (!have_multiple_function_sections 
-+  if (!have_multiple_function_sections
-       || (dwarf_version < 3 && dwarf_strict))
-     {
-       /* Don't add if the CU has no associated code.  */
-diff --git a/gcc/testsuite/gcc.target/i386/msave-args-mov.c b/gcc/testsuite/gcc.target/i386/msave-args-mov.c
-new file mode 100644
-index 00000000000..a2ca76752a9
---- /dev/null
-+++ b/gcc/testsuite/gcc.target/i386/msave-args-mov.c
-@@ -0,0 +1,26 @@
-+/* { dg-do run { target { { i?86-*-solaris2.* } && lp64 } } } */
-+/* { dg-options "-msave-args -mforce-save-regs-using-mov -save-temps" } */
-+
-+#include <stdio.h>
-+
-+void t(int, int, int, int, int) __attribute__ ((noinline));
-+
-+int
-+main(int argc, char **argv)
-+{
-+	t(1, 2, 3, 4, 5);
-+	return (0);
-+}
-+
-+void
-+t(int a, int b, int c, int d, int e)
-+{
-+	printf("%d %d %d %d %d", a, b, c, d, e);
-+}
-+
-+/* { dg-final { scan-assembler "movq\t%rdi, -8\\(%rbp\\)" } } */
-+/* { dg-final { scan-assembler "movq\t%rsi, -16\\(%rbp\\)" } } */
-+/* { dg-final { scan-assembler "movq\t%rdx, -24\\(%rbp\\)" } } */
-+/* { dg-final { scan-assembler "movq\t%rcx, -32\\(%rbp\\)" } } */
-+/* { dg-final { scan-assembler "movq\t%r8, -40\\(%rbp\\)" } } */
-+/* { dg-final { cleanup-saved-temps } } */
-diff --git a/gcc/testsuite/gcc.target/i386/msave-args-push.c b/gcc/testsuite/gcc.target/i386/msave-args-push.c
-new file mode 100644
-index 00000000000..fbe053dadc8
---- /dev/null
-+++ b/gcc/testsuite/gcc.target/i386/msave-args-push.c
-@@ -0,0 +1,26 @@
-+/* { dg-do run { target { { i?86-*-solaris2.* } && lp64 } } } */
-+/* { dg-options "-msave-args -save-temps " } */
-+
-+#include <stdio.h>
-+
-+void t(int, int, int, int, int) __attribute__ ((noinline));
-+
-+int
-+main(int argc, char **argv)
-+{
-+	t(1, 2, 3, 4, 5);
-+	return (0);
-+}
-+
-+void
-+t(int a, int b, int c, int d, int e)
-+{
-+	printf("%d %d %d %d %d", a, b, c, d, e);
-+}
-+
-+/* { dg-final { scan-assembler "pushq\t%rdi" } } */
-+/* { dg-final { scan-assembler "pushq\t%rsi" } } */
-+/* { dg-final { scan-assembler "pushq\t%rdx" } } */
-+/* { dg-final { scan-assembler "pushq\t%rcx" } } */
-+/* { dg-final { scan-assembler "pushq\t%r8" } } */
-+/* { dg-final { cleanup-saved-temps } } */
-diff --git a/include/dwarf2.def b/include/dwarf2.def
-index ea6194ef33e..8ef3f006846 100644
---- a/include/dwarf2.def
-+++ b/include/dwarf2.def
-@@ -45,27 +45,27 @@
- 
- /* This file declares various DWARF-related constants using a set of
-    macros which can be redefined by the including file.
--   
-+
-    The macros are in sections.  Each section corresponds to a single
-    set of DWARF constants and has a corresponding key.  The key is
-    used in all the macro names.
--   
-+
-    The sections are TAG (for DW_TAG_ constants), FORM (DW_FORM_), AT
-    (DW_AT_), OP (DW_OP_), ATE (DW_ATE_), and CFA (DW_CFA_).
--   
-+
-    Using TAG as an example, the following macros may be used for each
-    key:
--   
-+
-    DW_FIRST_TAG(name, value) - Introduce the first DW_TAG constant.
--   
-+
-    DW_TAG(name, value) - Define a subsequent constant.
--   
-+
-    DW_TAG_DUP(name, value) - Define a subsequent constant whose value
-    is a duplicate of some other constant.  Not all keys use the _DUP
-    macro form.  If more than one name shares a value, then the base
-    (DW_TAG) form will be the preferred name and DW_TAG_DUP will hold
-    any alternate names.
--   
-+
-    DW_END_TAG - Invoked at the end of the DW_TAG constants.  */
- 
- DW_FIRST_TAG (DW_TAG_padding, 0x00)
-@@ -457,6 +457,8 @@ DW_TAG (DW_AT_GNU_denominator, 0x2304)
- /* Biased integer extension.
-    See https://gcc.gnu.org/wiki/DW_AT_GNU_bias .  */
- DW_TAG (DW_AT_GNU_bias, 0x2305)
-+/* Sun extension. */
-+DW_AT (DW_AT_SUN_amd64_parmdump, 0x2224)
- /* UPC extension.  */
- DW_AT (DW_AT_upc_threads_scaled, 0x3210)
- /* PGI (STMicroelectronics) extensions.  */
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0012-16-update-cmn_err-format-specifier.patch b/gcc7/Patches/0012-16-update-cmn_err-format-specifier.patch
deleted file mode 100644
index 2764d69..0000000
--- a/gcc7/Patches/0012-16-update-cmn_err-format-specifier.patch
+++ /dev/null
@@ -1,67 +0,0 @@
-From 3d5d076b647145d3782b9d2d13fda3fcf60f2463 Mon Sep 17 00:00:00 2001
-From: Yuri Pankov <yuri.pankov@nexenta.com>
-Date: Sat, 5 Nov 2016 05:26:47 +0300
-Subject: [PATCH 1/2] 16 update cmn_err format specifier Reviewed by: Richard
- Lowe <richlowe@richlowe.net> Reviewed by: Robert Mustacchi <rm@joyent.com>
-
----
- gcc/config/sol2-c.c | 22 +++++++++++++---------
- 1 file changed, 13 insertions(+), 9 deletions(-)
-
-diff --git a/gcc/config/sol2-c.c b/gcc/config/sol2-c.c
-index 5a44a88d1ac..ebd7449b368 100644
---- a/gcc/config/sol2-c.c
-+++ b/gcc/config/sol2-c.c
-@@ -40,7 +40,10 @@ static const format_length_info cmn_err_length_specs[] =
- 
- static const format_flag_spec cmn_err_flag_specs[] =
- {
-+  { '0',  0, 0, N_("'0' flag"),        N_("the '0' flag"),                     STD_C89 },
-+  { '-',  0, 0, N_("'-' flag"),        N_("the '-' flag"),                     STD_C89 },
-   { 'w',  0, 0, N_("field width"),     N_("field width in printf format"),     STD_C89 },
-+  { 'p',  0, 0, N_("precision"),       N_("precision in printf format"),       STD_C89 },
-   { 'L',  0, 0, N_("length modifier"), N_("length modifier in printf format"), STD_C89 },
-   { 0, 0, 0, NULL, NULL, STD_C89 }
- };
-@@ -48,6 +51,7 @@ static const format_flag_spec cmn_err_flag_specs[] =
- 
- static const format_flag_pair cmn_err_flag_pairs[] =
- {
-+  { '0', '-', 1, 0 },
-   { 0, 0, 0, 0 }
- };
- 
-@@ -57,21 +61,21 @@ static const format_char_info bitfield_string_type =
- static const format_char_info cmn_err_char_table[] =
- {
-   /* C89 conversion specifiers.  */
--  { "dD",  0, STD_C89, { T89_I,   BADLEN,  BADLEN,  T89_L,   T9L_LL,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "oOxX",0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "u",   0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "c",   0, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "",   NULL },
--  { "p",   1, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w", "c",  NULL },
--  { "s",   1, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",  "cR", NULL },
--  { "b",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "w",   "",   &bitfield_string_type },
-+  { "dD",  0, STD_C89, { T89_I,   BADLEN,  BADLEN,  T89_L,   T9L_LL,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp0", "",   NULL },
-+  { "oOxX",0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp0", "",   NULL },
-+  { "u",   0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  T9L_ULL, BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp0", "",   NULL },
-+  { "c",   0, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "",   NULL },
-+  { "p",   1, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "c",  NULL },
-+  { "s",   1, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp",  "cR", NULL },
-+  { "b",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "",   &bitfield_string_type },
-   { NULL,  0, STD_C89, NOLENGTHS, NULL, NULL, NULL }
- };
- 
- EXPORTED_CONST format_kind_info solaris_format_types[] = {
--  { "cmn_err",  cmn_err_length_specs,  cmn_err_char_table, "", NULL,
-+  { "cmn_err",  cmn_err_length_specs,  cmn_err_char_table, "0-", NULL,
-     cmn_err_flag_specs, cmn_err_flag_pairs,
-     FMT_FLAG_ARG_CONVERT|FMT_FLAG_EMPTY_PREC_OK,
--    'w', 0, 0, 0, 'L', 0,
-+    'w', 0, 'p', 0, 'L', 0,
-     &integer_type_node, &integer_type_node
-   }
- };
--- 
-2.15.0
-
diff --git a/gcc7/Patches/0013-19-cmn_err-b-conversion-should-accept-0-flag.patch b/gcc7/Patches/0013-19-cmn_err-b-conversion-should-accept-0-flag.patch
deleted file mode 100644
index 564fd01..0000000
--- a/gcc7/Patches/0013-19-cmn_err-b-conversion-should-accept-0-flag.patch
+++ /dev/null
@@ -1,27 +0,0 @@
-From 77a689c230bac5fbcdefc09f3be2e2e647553f49 Mon Sep 17 00:00:00 2001
-From: Yuri Pankov <yuri.pankov@nexenta.com>
-Date: Mon, 13 Feb 2017 18:14:45 +0300
-Subject: [PATCH 2/2] 19 cmn_err %b conversion should accept 0 flag Reviewed
- by: Robert Mustacchi <rm@joyent.com> Reviewed by: Richard Lowe
- <richlowe@richlowe.net>
-
----
- gcc/config/sol2-c.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-diff --git a/gcc/config/sol2-c.c b/gcc/config/sol2-c.c
-index ebd7449b368..3519818d792 100644
---- a/gcc/config/sol2-c.c
-+++ b/gcc/config/sol2-c.c
-@@ -67,7 +67,7 @@ static const format_char_info cmn_err_char_table[] =
-   { "c",   0, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "",   NULL },
-   { "p",   1, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "c",  NULL },
-   { "s",   1, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-wp",  "cR", NULL },
--  { "b",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w",   "",   &bitfield_string_type },
-+  { "b",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, "-w0",  "",   &bitfield_string_type },
-   { NULL,  0, STD_C89, NOLENGTHS, NULL, NULL, NULL }
- };
- 
--- 
-2.15.0
-
diff --git a/gcc7/Patches/1001-new-opa-ifdef.patch b/gcc7/Patches/1001-new-opa-ifdef.patch
deleted file mode 100644
index 19036b9..0000000
--- a/gcc7/Patches/1001-new-opa-ifdef.patch
+++ /dev/null
@@ -1,14 +0,0 @@
---- gcc-7.3.0/libstdc++-v3/libsupc++/new_opa.cc.orig	2018-05-29 08:41:13.791974891 +0000
-+++ gcc-7.3.0/libstdc++-v3/libsupc++/new_opa.cc	2018-05-29 08:42:31.369329492 +0000
-@@ -31,6 +31,11 @@
- using std::new_handler;
- using std::bad_alloc;
- 
-+// Workaround issue in illumos headers
-+#if defined(__sun) && defined(__SVR4)
-+using std::aligned_alloc;
-+#endif
-+
- #if !_GLIBCXX_HAVE_ALIGNED_ALLOC
- #if _GLIBCXX_HAVE__ALIGNED_MALLOC
- #define aligned_alloc(al,sz) _aligned_malloc(sz,al)
diff --git a/gcc7/Patches/1002-fixinc.in.patch b/gcc7/Patches/1002-fixinc.in.patch
deleted file mode 100644
index d808876..0000000
--- a/gcc7/Patches/1002-fixinc.in.patch
+++ /dev/null
@@ -1,21 +0,0 @@
-diff -ruN gcc-4.7.3.orig/fixincludes/fixinc.in gcc-4.7.3/fixincludes/fixinc.in
---- gcc-4.7.3.orig/fixincludes/fixinc.in	2013-05-16 01:21:03.102224280 +0000
-+++ gcc-4.7.3/fixincludes/fixinc.in	2013-05-16 01:20:54.675745658 +0000
-@@ -196,7 +196,7 @@
- 
- while [ -n "$dirs" ] && [ $levels -gt 0 ]
- do
--  levels=`expr $levels - 1`
-+  levels=`expr $levels - 1; true`
-   newdirs=
-   for d in $dirs
-   do
-@@ -325,7 +325,7 @@
-           cd $LIB
-           while [ x$dirname != x ]; do
-             component=`echo $dirname | sed -e 's|/.*$||'`
--            mkdir $component >/dev/null 2>&1
-+            mkdir -p $component >/dev/null 2>&1
-             cd $component
-             dirmade=$dirmade/$component
-             dirname=`echo $dirname | sed -e 's|[^/]*/||'`
diff --git a/gcc7/Patches/1003-libgo_runtime_proc.c.patch b/gcc7/Patches/1003-libgo_runtime_proc.c.patch
deleted file mode 100644
index 9c3ec24..0000000
--- a/gcc7/Patches/1003-libgo_runtime_proc.c.patch
+++ /dev/null
@@ -1,17 +0,0 @@
-$NetBSD: patch-libgo_runtime_proc.c,v 1.1 2014/09/04 18:43:11 jperkin Exp $
-
-SunOS libelf does not support largefile.
-
---- a/libgo/runtime/proc.c.orig	2014-05-27 22:01:08.000000000 +0000
-+++ b/libgo/runtime/proc.c
-@@ -11,6 +11,10 @@
- #include "config.h"
- 
- #ifdef HAVE_DL_ITERATE_PHDR
-+#ifdef __sun
-+#undef _FILE_OFFSET_BITS
-+#define _FILE_OFFSET_BITS 32
-+#endif
- #include <link.h>
- #endif
- 
diff --git a/gcc7/Patches/1004-libstdc++-no-rt.patch b/gcc7/Patches/1004-libstdc++-no-rt.patch
deleted file mode 100644
index 196b7f6..0000000
--- a/gcc7/Patches/1004-libstdc++-no-rt.patch
+++ /dev/null
@@ -1,22 +0,0 @@
---- gcc-4.9.3/libstdc++-v3/acinclude.m4.1	2015-11-10 23:02:48.144804023 +0300
-+++ gcc-4.9.3/libstdc++-v3/acinclude.m4	2015-11-10 23:02:57.650586415 +0300
-@@ -1233,7 +1233,7 @@
-         ac_has_nanosleep=yes
-         ;;
-       solaris*)
--        GLIBCXX_LIBS="$GLIBCXX_LIBS -lrt"
-+        GLIBCXX_LIBS="$GLIBCXX_LIBS"
-         ac_has_clock_monotonic=yes
-         ac_has_clock_realtime=yes
-         ac_has_nanosleep=yes
---- gcc-4.9.3/libstdc++-v3/configure.1	2015-11-10 23:01:27.375669063 +0300
-+++ gcc-4.9.3/libstdc++-v3/configure	2015-11-10 23:02:02.171610827 +0300
-@@ -19507,7 +19507,7 @@
-         ac_has_nanosleep=yes
-         ;;
-       solaris*)
--        GLIBCXX_LIBS="$GLIBCXX_LIBS -lrt"
-+        GLIBCXX_LIBS="$GLIBCXX_LIBS"
-         ac_has_clock_monotonic=yes
-         ac_has_clock_realtime=yes
-         ac_has_nanosleep=yes
diff --git a/gcc7/gcc-7.3.0-il-1.tar.gz.sha1 b/gcc7/gcc-7.3.0-il-1.tar.gz.sha1
new file mode 100644
index 0000000..ff52e2e
--- /dev/null
+++ b/gcc7/gcc-7.3.0-il-1.tar.gz.sha1
@@ -0,0 +1 @@
+3627ce752b9be1f0a1a86488cca6905ae942be1e
diff --git a/gcc7/gcc-7.3.0.tar.gz.sha1 b/gcc7/gcc-7.3.0.tar.gz.sha1
deleted file mode 100644
index 18ce026..0000000
--- a/gcc7/gcc-7.3.0.tar.gz.sha1
+++ /dev/null
@@ -1 +0,0 @@
-8f11c52db81c30a1780c590bb7ab9a6e326ccea4
-- 
2.21.0

