From cc0ff3e96e6013558686e4f503d54b2dc7881def Mon Sep 17 00:00:00 2001
From: Russell Brown <russell.brown@joyent.com>
Date: Thu, 21 Mar 2019 08:35:15 +0000
Subject: [PATCH] MANTA-3959 muskie should spread GET load to sharks evenly

---
 lib/obj.js    |  4 +++-
 lib/picker.js | 16 ++--------------
 lib/utils.js  | 23 ++++++++---------------
 3 files changed, 13 insertions(+), 30 deletions(-)

diff --git a/lib/obj.js b/lib/obj.js
index 7d82bb9..f32b1f7 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -896,7 +896,9 @@ function streamFromSharks(req, res, next) {
         }
     });
 
-    req.metadata.sharks.forEach(function (s) {
+    var shuffledSharks = utils.shuffle(req.metadata.sharks);
+
+    shuffledSharks.forEach(function (s) {
         queue.push(sharkClient.getClient({
             connectTimeout: req.sharkConfig.connectTimeout,
             log: req.log,
diff --git a/lib/picker.js b/lib/picker.js
index 30db397..20359fb 100644
--- a/lib/picker.js
+++ b/lib/picker.js
@@ -49,6 +49,7 @@
 
 var EventEmitter = require('events').EventEmitter;
 var util = require('util');
+var utils = require('./utils');
 
 var assert = require('assert-plus');
 var jsprim = require('jsprim');
@@ -324,19 +325,6 @@ function random(min, max, skip) {
 }
 
 
-// Fisher-Yates shuffle - courtesy of http://bost.ocks.org/mike/shuffle/
-function shuffle(array) {
-    var m = array.length, t, i;
-    while (m) {
-        i = Math.floor(Math.random() * m--);
-        t = array[m];
-        array[m] = array[i];
-        array[i] = t;
-    }
-    return (array);
-}
-
-
 /**
  * Modified binary-search. We're looking for the point in the set at which all
  * servers have at least the requested amount of space.  Logically you would
@@ -528,7 +516,7 @@ Picker.prototype.choose = function choose(opts, cb) {
         return;
     }
 
-    dcs = shuffle(dcs);
+    dcs = utils.shuffle(dcs);
 
     /*
      * Pick a random shark from the next DC in the round robin ordering.  If it
diff --git a/lib/utils.js b/lib/utils.js
index 434ac7e..7802230 100644
--- a/lib/utils.js
+++ b/lib/utils.js
@@ -53,30 +53,23 @@ function shallowCopy(obj) {
     return (copy);
 }
 
-
+// Fisher-Yates shuffle - courtesy of http://bost.ocks.org/mike/shuffle/
 function shuffle(array) {
-    var current;
-    var tmp;
-    var top = array.length;
-
-    if (top) {
-        while (--top) {
-            current = Math.floor(Math.random() * (top + 1));
-            tmp = array[current];
-            array[current] = array[top];
-            array[top] = tmp;
-        }
+    var m = array.length, t, i;
+    while (m) {
+        i = Math.floor(Math.random() * m--);
+        t = array[m];
+        array[m] = array[i];
+        array[i] = t;
     }
-
     return (array);
 }
 
 
-
 ///--- Exports
 
 module.exports = {
     interleave: interleave,
     shallowCopy: shallowCopy,
     shuffle: shuffle
-};
\ No newline at end of file
+};
-- 
2.21.0

