From f7a101159b2329bd8db085f45efe8b2b379c038f Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Mon, 23 Oct 2017 23:52:34 +0000
Subject: [PATCH] MANTA-3232 Undeploy without disruption - electric-moray

---
 main.js                        | 36 ++++++++++++++++++++++++++++++++++
 smf/manifests/registrar.xml.in |  2 +-
 2 files changed, 37 insertions(+), 1 deletion(-)

diff --git a/main.js b/main.js
index 3f9b4b3..b3e33eb 100644
--- a/main.js
+++ b/main.js
@@ -14,6 +14,7 @@ var assert = require('assert-plus');
 var bunyan = require('bunyan');
 var clone = require('clone');
 var dashdash = require('dashdash');
+var register = require('./lib/register');
 
 var app = require('./lib');
 
@@ -171,6 +172,41 @@ function usage(help, msg) {
             LOG.error(err, 'registrar: unexpected error');
         });
 
+        // Once the register event is triggered, we know that the
+        // service will appear in binder. The SIGTERM signal is
+        // sent from the smf stop method of registrar to trigger
+        // an immediate removal from DNS. This is useful for
+        // undeploying services without disruption. If the stop
+        // method is executed before registrar can register,
+        // the process will just terminate. This is fine because
+        // the corresponding service hasn't been added to zookeeper
+        // yet.
+        eventStream.once('register', function (nodes) {
+            process.on('SIGTERM', function () {
+                opts.log.info({
+                    znodes: nodes
+                }, 'unregistering nodes upon SIGTERM receipt');
+                var unopts = {
+                    log: opts.log,
+                    zk: opts.zk,
+                    znodes: nodes
+                };
+                // This is not perfect because it's possible that
+                // the smf stop method is invoked right after
+                // registrar failed a health check, in which case
+                // we would unregister nodes that are already gone.
+                register.unregister(unopts, function (err) {
+                    if (err) {
+                        opts.log.debug(err, 'unregister failure on sigterm');
+                    } else {
+                        opts.log.debug('unregistered nodes on sigterm, ' +
+                            'terminating');
+                    }
+                    process.exit(0);
+                });
+            });
+        });
+
         eventStream.on('register', function (nodes) {
             LOG.info({
                 znodes: nodes
diff --git a/smf/manifests/registrar.xml.in b/smf/manifests/registrar.xml.in
index f1b76f5..ff9638b 100644
--- a/smf/manifests/registrar.xml.in
+++ b/smf/manifests/registrar.xml.in
@@ -66,7 +66,7 @@
 
 	<exec_method type="method"
 		     name="stop"
-		     exec=":kill"
+		     exec=":kill -TERM"
 		     timeout_seconds="30" />
 
 
-- 
2.21.0

