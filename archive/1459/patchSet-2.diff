commit 8e848da1edc55e764fac86fb2ed77424d4a5d099 (refs/changes/59/1459/2)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-02-07T14:57:36-08:00 (2 years, 8 months ago)
    
    MANTA-3146 binder needs to update mname dep
    Reviewed by: Dave Pacheco <dap@joyent.com>

diff --git a/lib/recursion.js b/lib/recursion.js
index 13d4148..48a6e67 100644
--- a/lib/recursion.js
+++ b/lib/recursion.js
@@ -23,7 +23,7 @@
 
 var assert = require('assert-plus');
 var dns = require('native-dns');
-var named = require('named');
+var mname = require('mname');
 var events = require('events');
 var sdc = require('sdc-clients');
 var url = require('url');
@@ -37,7 +37,7 @@ var zk = require('./zk');
 ///--- Globals
 
 var REFRESH_INTERVAL = 5 * 60 * 1000; // 5 minutes
-var ARecord = named.ARecord;
+var ARecord = mname.ARecord;
 
 
 
diff --git a/lib/server.js b/lib/server.js
index 26ac1be..2d214e8 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -12,7 +12,7 @@ var assert = require('assert-plus');
 var dns = require('dns');
 var url = require('url');
 
-var named = require('named');
+var mname = require('mname');
 var nzk = require('node-zookeeper-client');
 
 var zk = require('./zk');
@@ -20,8 +20,8 @@ var zk = require('./zk');
 
 ///--- Globals
 
-var ARecord = named.ARecord;
-var SRVRecord = named.SRVRecord;
+var ARecord = mname.ARecord;
+var SRVRecord = mname.SRVRecord;
 
 
 ///--- Helpers
@@ -349,7 +349,7 @@ function createServer(options) {
         assert.object(options.log, 'options.log');
         assert.optionalObject(options.recursion, 'options.recursion');
 
-        var server = named.createServer({
+        var server = mname.createServer({
                 name: options.name || 'binder',
                 log: options.log
         });
@@ -421,9 +421,9 @@ function createServer(options) {
                         additional: query.response.additional.filter(
                             function (r) {
                                 return (r.rtype !==
-                                    named.Protocol.queryTypes.OPT);
+                                    mname.Protocol.queryTypes.OPT);
                         }).map(function (r) {
-                                var ret = named.Protocol.queryTypes[r.rtype];
+                                var ret = mname.Protocol.queryTypes[r.rtype];
                                 if (ret === 'A' || ret === 'AAAA') {
                                         var n = r.name;
                                         if (options.dnsDomain) {
diff --git a/main.js b/main.js
index 0f00077..022b1da 100644
--- a/main.js
+++ b/main.js
@@ -17,7 +17,7 @@ var repl = require('repl');
 var bunyan = require('bunyan');
 var clone = require('clone');
 var LRU = require('lru-cache');
-var named = require('named');
+var mname = require('mname');
 var getopt = require('posix-getopt');
 var vasync = require('vasync');
 var xtend = require('xtend');
@@ -29,7 +29,7 @@ var core = require('./lib');
 
 ///--- Globals
 
-var ARecord = named.ARecord;
+var ARecord = mname.ARecord;
 
 var CACHE;
 var DEFAULTS = {
diff --git a/package.json b/package.json
index b92ceb4..1ef5479 100644
--- a/package.json
+++ b/package.json
@@ -10,7 +10,7 @@
                 "bunyan": "1.5.1",
                 "clone": "0.1.1",
                 "lru-cache": "2.7.0",
-                "named": "git+https://github.com/arekinath/node-named#v1.0.6",
+                "mname": "1.3.3",
                 "native-dns": "0.7.0",
                 "posix-getopt": "1.0.0",
                 "sdc-clients": "9.0.3",
diff --git a/test/helper.js b/test/helper.js
index 881a6a7..a5d11aa 100644
--- a/test/helper.js
+++ b/test/helper.js
@@ -13,7 +13,7 @@
 
 var bunyan = require('bunyan');
 var Cache = require('expiring-lru-cache');
-var named = require('named');
+var mname = require('mname');
 var vasync = require('vasync');
 var nzk = require('node-zookeeper-client');
 var path = require('path');
@@ -40,7 +40,7 @@ function createLogger(name, stream) {
                 name: name || process.argv[1],
                 stream: stream || process.stdout,
                 src: true,
-                serializers: named.bunyan.serializers
+                serializers: mname.bunyan.serializers
         });
         return (log);
 }
