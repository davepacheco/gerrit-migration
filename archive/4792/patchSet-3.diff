From eddaaddcfe625272a5c266aa5531bcdcf3445cf6 Mon Sep 17 00:00:00 2001
From: Kelly McLaughlin <kelly.mclaughlin@joyent.com>
Date: Thu, 6 Sep 2018 10:24:42 -0600
Subject: [PATCH] MANTA-3937 mpicker no longer works

---
 bin/mpicker          | 22 ++++++++++-----------
 package.json         |  3 ++-
 test/mpicker.test.js | 46 ++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 58 insertions(+), 13 deletions(-)
 create mode 100644 test/mpicker.test.js

diff --git a/bin/mpicker b/bin/mpicker
index 8f5234f..ca93e09 100755
--- a/bin/mpicker
+++ b/bin/mpicker
@@ -30,8 +30,6 @@ var sprintf = mod_util.format;
 var VError = mod_verror.VError;
 var muskie_errors = require('../lib/errors');
 
-var consts = require('../lib/constants');
-
 ///-- Globals
 
 var NAME = 'mpicker';
@@ -43,9 +41,9 @@ var LOG = mod_bunyan.createLogger({
 
 ///--- Constants
 
-const DEF_MAX_STREAMING_SIZE_MB = 5120;
-const DEF_MAX_PERCENT_UTIL = 90;
-const DEF_MAX_OPERATOR_PERCENT_UTIL = 92;
+var DEF_MAX_STREAMING_SIZE_MB = 5120;
+var DEF_MAX_PERCENT_UTIL = 90;
+var DEF_MAX_OPERATOR_PERCENT_UTIL = 92;
 
 /*
  * Common options for all submcommands.
@@ -179,11 +177,11 @@ MPicker.prototype.do_poll = function do_poll(subcmd, opts, args, cb) {
     p_opts = {
         log: LOG,
         defaultMaxStreamingSizeMB: cfg.defaultMaxStreamingSizeMB ||
-            consts.DEF_MAX_STREAMING_SIZE_MB,
+            DEF_MAX_STREAMING_SIZE_MB,
         maxUtilizationPct: cfg.storage.maxUtilizationPct ||
-            consts.DEF_MAX_PERCENT_UTIL,
+            DEF_MAX_PERCENT_UTIL,
         maxOperatorUtilizationPct: cfg.storage.maxOperatorUtilizationPct ||
-            consts.DEF_MAX_PERCENT_UTIL,
+            DEF_MAX_PERCENT_UTIL,
         multiDC: cfg.storage.multiDC,
         moray: cfg.storage.moray,
         lag: cfg.storage.lag
@@ -356,7 +354,7 @@ MPicker.prototype.do_poll.help = [
     'as input to the `choose` subcommand.  For example, to simulate choosing',
     '3 replicas for an object of size 150 MB from a given Moray\'s storage',
     'records, you could run:',
-    '   mpicker poll | mpicker choose -r 3 -s 150',
+    '   mpicker poll -j | mpicker choose -r 3 -s 150',
     ''
 ].join('\n');
 
@@ -508,9 +506,9 @@ MPicker.prototype.do_choose = function do_choose(subcmd, opts, args, cb) {
         function runChoose(_, vcb) {
             p_opts = {
                 log: LOG,
-                defaultMaxStreamingSizeMB: consts.DEF_MAX_STREAMING_SIZE_MB,
-                maxUtilizationPct: consts.DEF_MAX_PERCENT_UTIL,
-                maxOperatorUtilizationPct: consts.DEF_MAX_OPERATOR_PERCENT_UTIL,
+                defaultMaxStreamingSizeMB: DEF_MAX_STREAMING_SIZE_MB,
+                maxUtilizationPct: DEF_MAX_PERCENT_UTIL,
+                maxOperatorUtilizationPct: DEF_MAX_OPERATOR_PERCENT_UTIL,
                 multiDC: user_dcs.length > 1,
                 standalone: true
             };
diff --git a/package.json b/package.json
index ec2a59a..59136e1 100644
--- a/package.json
+++ b/package.json
@@ -50,7 +50,8 @@
         "strsplit": "1.0.0",
         "manta": "5.1.0",
         "nodeunit": "0.9.1",
-        "node-uuid": "1.4.1"
+        "node-uuid": "1.4.1",
+        "forkexec": "^1.0.0"
     },
     "scripts": {
         "start": "./build/node/bin/node ./main.js",
diff --git a/test/mpicker.test.js b/test/mpicker.test.js
new file mode 100644
index 0000000..875208d
--- /dev/null
+++ b/test/mpicker.test.js
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2018 Joyent, Inc.
+ */
+
+/*
+ * Test the "mpicker" command.
+ */
+
+var forkExecWait = require('forkexec').forkExecWait;
+var path = require('path');
+
+var BINDIR = path.resolve(__dirname, '../bin');
+var MPICKER = path.resolve(BINDIR, 'mpicker');
+
+
+// ---- helper functions
+
+function test(name, testfunc) {
+    module.exports[name] = testfunc;
+}
+
+// ---- tests
+
+/*
+ * Verify command can be invoked without error
+ */
+test('mpicker -h', function (t) {
+    var argv = [
+        MPICKER,
+        '-h'
+    ];
+
+    var usagePhrase = 'Models the behavior of the Muskie "picker" component.';
+
+    forkExecWait({
+        argv: argv
+    }, function (err, info) {
+        t.ifError(err, err);
+
+        t.equal(info.stderr, '', 'no stderr');
+        t.equal(info.stdout.lastIndexOf(usagePhrase, 0), 0,
+            'stdout from mpicker');
+
+        t.done();
+    });
+});
-- 
2.21.0

