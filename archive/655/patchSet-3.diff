commit 12b7fce0c244bc76ac11be2fafc777b91b8f0176 (refs/changes/55/655/3)
Author: Jordan Paige Hendricks <jordan.hendricks@joyent.com>
Date:   2016-10-12T18:58:43+00:00 (3 years ago)
    
    MANTA-2716 muskie behaves poorly when mako is extremely slow
    MANTA-2737 muskie returned 500 on GET when one CN was down
    Reviewed by:
    Approved by:

diff --git a/lib/shark_client.js b/lib/shark_client.js
index b952343..e95e5be 100644
--- a/lib/shark_client.js
+++ b/lib/shark_client.js
@@ -57,23 +57,40 @@ function _request(opts, cb) {
     cb = once(cb);
 
     var req = http.request(opts);
-    var timer = setTimeout(function onTimeout() {
-        if (req)
+    /*
+     * This timer represents the timeout for connecting to the shark
+     * for this request,so it is important that it is cleared only once
+     * we have heard some sort of response from the shark.
+     *
+     * We previously cleared this timer on the 'socket' event,
+     * which is emitted when a connection is assigned a socket. Because node
+     * reuses sockets when possible, if the shark has been successfully
+     * contacted in the past, its socket may be assigned to a new request
+     * to that shark. If the shark has since become unavailable, the timer
+     * was still cleared on assignment of the socket, and we were unable to
+     * detect the shark is down until the socket timeout (usually 2 min) fired.
+     *
+     * We now clear the timer when it is safe to assume the shark is
+     * up, instead of on the 'socket' event. Specifically:
+     *  - GET/HEAD requests: After the shark's response is received.
+     *  - PUT requests: After a 100-continue is received.
+     *
+     */
+    var connectionTimer = setTimeout(function onTimeout() {
+        if (req) {
             req.abort();
+        }
 
         cb(new ConnectTimeoutError(opts.hostname, opts.connectTimeout));
     }, opts.connectTimeout);
 
     req.once('error', function onRequestError(err) {
-        clearTimeout(timer);
+        clearTimeout(connectionTimer);
         cb(err);
     });
 
-    req.once('socket', function () {
-        clearTimeout(timer);
-    });
-
     function onResponse(res) {
+        clearTimeout(connectionTimer);
         if (res.statusCode >= 400) {
             var body = '';
             res.setEncoding('utf8');
@@ -93,6 +110,7 @@ function _request(opts, cb) {
     }
 
     req.once('continue', function () {
+        clearTimeout(connectionTimer);
         req.removeListener('response', onResponse);
         cb(null, req);
     });
