From 5e779e3f3921f577724e9ad51c83153d75ee6932 Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Tue, 11 Jun 2019 14:22:26 -0700
Subject: [PATCH] TRITON-1733 cn-agent machine_destroy has bogus provisioning
 timeout check Reviewed by: Orlando Vazquez <orlando@joyent.com> Approved by:
 Orlando Vazquez <orlando@joyent.com>

---
 lib/backends/dummy/common.js   | 23 +++++++-----
 lib/backends/smartos/common.js | 65 ++++++++++++++++++----------------
 package.json                   |  2 +-
 3 files changed, 51 insertions(+), 39 deletions(-)

diff --git a/lib/backends/dummy/common.js b/lib/backends/dummy/common.js
index eb81c3d..5144485 100644
--- a/lib/backends/dummy/common.js
+++ b/lib/backends/dummy/common.js
@@ -80,12 +80,12 @@ function ensureProvisionComplete(uuid, callback) {
     assert.uuid(uuid, 'uuid');
     assert.func(callback, 'callback');
 
+    var expiresAt;
     var filename = '/var/tmp/machine-provision-' + uuid;
     var timeoutMinutes = 10;
 
     function callbackWhenComplete() {
         fs.stat(filename, function (err, stats) {
-            var expiresAt;
             var now;
 
             if (err) {
@@ -99,19 +99,26 @@ function ensureProvisionComplete(uuid, callback) {
                 return;
             }
 
-            expiresAt = timeoutMinutes * 60 * 1000 + stats.ctime;
-            now = Date.now();
+            // The provisioning file still exists - give it at least 10 minutes
+            // from when provisioning was started to complete the provisioning
+            // process.
+            if (!expiresAt) {
+                expiresAt = timeoutMinutes * 60 * 1000 + Number(stats.ctime);
+            }
 
+            // Check if we exceeded the timeout duration.
+            now = Number(new Date());
             if (now > expiresAt) {
-                // Expired, so consider provision complete and delete file.
+                // Expired, so consider provision complete and delete the file,
+                // ignoring any delete error.
                 fs.unlink(filename, function () {
                     callback();
-                    return;
                 });
-            } else {
-                // Not expired yet, so try again in 1 second.
-                setTimeout(callbackWhenComplete, 1000);
+                return;
             }
+
+            // Not expired yet, so try again in 1 second.
+            setTimeout(callbackWhenComplete, 1 * 1000);
         });
     }
 
diff --git a/lib/backends/smartos/common.js b/lib/backends/smartos/common.js
index 821ca15..38d036e 100644
--- a/lib/backends/smartos/common.js
+++ b/lib/backends/smartos/common.js
@@ -18,7 +18,6 @@ var assert = require('assert-plus');
 var execFile = require('child_process').execFile;
 var fs = require('fs');
 
-var async = require('async');
 var verror = require('verror');
 
 var FIELDS = 'zoneid:zonename:state:zonepath:uuid:brand:ip-type'.split(':');
@@ -130,43 +129,49 @@ function ensureProvisionComplete(uuid, callback) {
     assert.uuid(uuid, 'uuid');
     assert.func(callback, 'callback');
 
-    var filename = '/var/tmp/machine-provision-' + uuid;
     var expiresAt;
+    var filename = '/var/tmp/machine-provision-' + uuid;
     var timeoutMinutes = 10;
 
-    function checkIfReady() {
-        fs.exists(filename, function (exists) {
-            if (!exists) {
-                return callback();
-            }
+    function callbackWhenComplete() {
+        fs.stat(filename, function (err, stats) {
+            var now;
 
-            return async.waterfall([
-                function (wf$callback) {
-                    if (!expiresAt) {
-                        fs.stat(filename, function (error, stats) {
-                            expiresAt =
-                                timeoutMinutes * 60 * 1000 + stats.ctime;
-                            return wf$callback(error);
-                        });
-                    }
-                    return wf$callback();
+            if (err) {
+                if (err.code === 'ENOENT') {
+                    // File is gone, provision is complete.
+                    callback();
+                    return;
                 }
-            ],
-            function (error) {
-                // Check if we exceeded the timeout duration.
-                var now = Number(new Date());
-                if (now > expiresAt) {
-                    fs.unlink(filename, function () {
-                        return callback();
-                    });
-                } else {
-                    setTimeout(checkIfReady, 10 * 1000);
-                }
-            });
+                // We don't know, something is wrong.
+                callback(err);
+                return;
+            }
+
+            // The provisioning file still exists - give it at least 10 minutes
+            // from when provisioning was started to complete the provisioning
+            // process.
+            if (!expiresAt) {
+                expiresAt = timeoutMinutes * 60 * 1000 + Number(stats.ctime);
+            }
+
+            // Check if we exceeded the timeout duration.
+            now = Number(new Date());
+            if (now > expiresAt) {
+                // Expired, so consider provision complete and delete the file,
+                // ignoring any delete error.
+                fs.unlink(filename, function () {
+                    callback();
+                });
+                return;
+            }
+
+            // Not expired yet, so try again in 1 second.
+            setTimeout(callbackWhenComplete, 1 * 1000);
         });
     }
 
-    checkIfReady();
+    callbackWhenComplete();
 }
 
 
diff --git a/package.json b/package.json
index 3036109..8254166 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cn-agent",
   "description": "Triton Compute Node Agent",
-  "version": "2.12.5",
+  "version": "2.12.6",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

