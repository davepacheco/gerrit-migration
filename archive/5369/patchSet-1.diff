commit 41008bdf9927e36acdeefb7b711db6a023f313b8 (refs/changes/69/5369/1)
Author: John Levon <john.levon@joyent.com>
Date:   2019-01-15T19:58:55+00:00 (9 months ago)
    
    OS-7201 ::status -v should show git information

diff --git a/usr/src/cmd/mdb/common/kmdb/kmdb_kvm.c b/usr/src/cmd/mdb/common/kmdb/kmdb_kvm.c
index 16bbb46a3c..c58319a6fd 100644
--- a/usr/src/cmd/mdb/common/kmdb/kmdb_kvm.c
+++ b/usr/src/cmd/mdb/common/kmdb/kmdb_kvm.c
@@ -22,7 +22,7 @@
  * Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
  * Copyright (c) 2013 by Delphix. All rights reserved.
  *
- * Copyright 2018 Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 #include <kmdb/kmdb_kvm.h>
@@ -570,16 +570,14 @@ kmt_status_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	mdb_printf("operating system: %s %s (%s)\n",
 	    uts.release, uts.version, uts.machine);
 
-	if (mdb_tgt_readsym(mdb.m_target, MDB_TGT_AS_VIRT, uuid, sizeof (uuid),
-	    "genunix", "dump_osimage_uuid") != sizeof (uuid)) {
-		warn("failed to read 'dump_osimage_uuid' string from kernel\n");
-		(void) strcpy(uuid, "(error)");
-	} else if (*uuid == '\0') {
-		(void) strcpy(uuid, "(not set)");
-	} else if (uuid[36] != '\0') {
-		(void) strcpy(uuid, "(invalid)");
+	mdb_print_gitstatus();
+
+	if (mdb_readsym(uuid, sizeof (uuid),
+	    "dump_osimage_uuid") == sizeof (uuid) &&
+	    uuid[sizeof (uuid) - 1] == '\0') {
+		mdb_printf("image uuid: %s\n", uuid[0] != '\0' ?
+		    uuid : "(not set)");
 	}
-	mdb_printf("image uuid: %s\n", uuid);
 
 	mdb_printf("DTrace state: %s\n", (kmdb_kdi_dtrace_get_state() ==
 	    KDI_DTSTATE_DTRACE_ACTIVE ? "active (debugger breakpoints cannot "
diff --git a/usr/src/cmd/mdb/common/mdb/mdb_ks.h b/usr/src/cmd/mdb/common/mdb/mdb_ks.h
index 1fe64fbc55..0717e2acce 100644
--- a/usr/src/cmd/mdb/common/mdb/mdb_ks.h
+++ b/usr/src/cmd/mdb/common/mdb/mdb_ks.h
@@ -23,6 +23,10 @@
  * Use is subject to license terms.
  */
 
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
 #ifndef	_MDB_KS_H
 #define	_MDB_KS_H
 
@@ -140,6 +144,8 @@ extern const char *mdb_dlpi_prim(int);
 /* Generic function for working with MAC (network layer 2) addresses. */
 extern void mdb_mac_addr(const uint8_t *, size_t, char *, size_t);
 
+extern void mdb_print_gitstatus(void);
+
 /*
  * Target-specific interfaces
  *
diff --git a/usr/src/cmd/mdb/common/mdb/mdb_kvm.c b/usr/src/cmd/mdb/common/mdb/mdb_kvm.c
index 6b6c982184..8059d1ecaa 100644
--- a/usr/src/cmd/mdb/common/mdb/mdb_kvm.c
+++ b/usr/src/cmd/mdb/common/mdb/mdb_kvm.c
@@ -23,7 +23,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.  All rights reserved.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -68,6 +68,7 @@
 #include <mdb/mdb_kvm.h>
 #include <mdb/mdb_module.h>
 #include <mdb/mdb_kb.h>
+#include <mdb/mdb_ks.h>
 #include <mdb/mdb.h>
 
 #define	KT_RELOC_BUF(buf, obase, nbase) \
@@ -94,6 +95,8 @@ typedef struct kt_maparg {
 static const char KT_MODULE[] = "mdb_ks";
 static const char KT_CTFPARENT[] = "genunix";
 
+static void (*print_gitstatus)(void);
+
 static void
 kt_load_module(kt_data_t *kt, mdb_tgt_t *t, kt_module_t *km)
 {
@@ -485,6 +488,9 @@ kt_status_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	mdb_printf("operating system: %s %s (%s)\n",
 	    uts.release, uts.version, uts.machine);
 
+	if (print_gitstatus != NULL)
+		print_gitstatus();
+
 	if (kt->k_dumphdr) {
 		dumphdr_t *dh = kt->k_dumphdr;
 
@@ -496,9 +502,11 @@ kt_status_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	} else {
 		char uuid[37];
 
-		if (mdb_readsym(uuid, 37, "dump_osimage_uuid") == 37 &&
-		    uuid[36] == '\0') {
-			mdb_printf("image uuid: %s\n", uuid);
+		if (mdb_readsym(uuid, sizeof (uuid),
+		    "dump_osimage_uuid") == sizeof (uuid) &&
+		    uuid[sizeof (uuid) - 1] == '\0') {
+			mdb_printf("image uuid: %s\n", uuid[0] != '\0' ?
+			    uuid : "(not set)");
 		}
 	}
 
@@ -582,6 +590,9 @@ kt_activate(mdb_tgt_t *t)
 			    "some modules may not load\n");
 		}
 
+		print_gitstatus = (void (*)(void))dlsym(RTLD_NEXT,
+		    "mdb_print_gitstatus");
+
 		if (mdb_prop_postmortem && kt->k_dumphdr != NULL) {
 			sym = dlsym(RTLD_NEXT, "mdb_dump_print_content");
 			if (sym != NULL)
diff --git a/usr/src/cmd/mdb/common/modules/mdb_ks/mdb_ks.c b/usr/src/cmd/mdb/common/modules/mdb_ks/mdb_ks.c
index a801d4d39f..860d0a4747 100644
--- a/usr/src/cmd/mdb/common/modules/mdb_ks/mdb_ks.c
+++ b/usr/src/cmd/mdb/common/modules/mdb_ks/mdb_ks.c
@@ -20,7 +20,7 @@
  */
 /*
  * Copyright (c) 1990, 2010, Oracle and/or its affiliates. All rights reserved.
- * Copyright 2017 Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -60,6 +60,12 @@
 
 #define	MDB_PATH_NELEM	256			/* Maximum path components */
 
+/*
+ * Due to mdb_param.h shenanigans, there's no simple way to include string.h
+ * here...
+ */
+extern char *strtok(char *restrict, const char *restrict);
+
 typedef struct mdb_path {
 	size_t mdp_nelem;			/* Number of components */
 	uint_t mdp_complete;			/* Path completely resolved? */
@@ -1012,9 +1018,9 @@ find_mbind(const char *name, uintptr_t *hashtab)
 int
 mdb_name_to_major(const char *name, major_t *major)
 {
-	uintptr_t	mbind;
-	uintptr_t	mb_hashtab[MOD_BIND_HASHSIZE];
-	struct bind 	mbind_local;
+	uintptr_t mbind;
+	uintptr_t mb_hashtab[MOD_BIND_HASHSIZE];
+	struct bind mbind_local;
 
 
 	if (mdb_readsym(mb_hashtab, sizeof (mb_hashtab), "mb_hashtab") == -1) {
@@ -1810,3 +1816,51 @@ mdb_get_lbolt(void)
 
 	return ((ts/nsec) - lbi.lbi_debug_time);
 }
+
+/*
+ * Dig out the branch and revision of the illumos-joyent repo, if we were
+ * provided with it.  This is a rather fragile JSON parser to say the least, but
+ * it should be sufficient.
+ */
+void
+mdb_print_gitstatus(void)
+{
+	const char branch_prefix[] = "        \"branch\":";
+	const char repo_prefix[] = "        \"repo\":";
+	const char repo_name[] = "\"illumos-joyent\",";
+	const char rev_prefix[] = "        \"rev\":";
+	boolean_t in_joyent = B_FALSE;
+	GElf_Sym sym;
+	char *line;
+	char *str;
+
+	if (mdb_lookup_by_name("gitstatus_start", &sym) != 0)
+		return;
+
+	str = mdb_zalloc(4096, UM_SLEEP | UM_GC);
+
+	if (mdb_readstr(str, 4096, sym.st_value) < 1)
+		return;
+
+	for (line = strtok(str, "\n"); line; line = strtok(NULL, "\n")) {
+		if (strncmp(line, repo_prefix,
+		    sizeof (repo_prefix) - 1) == 0) {
+			if (strncmp(line + sizeof (repo_prefix),
+			    repo_name, sizeof (repo_name) -1) == 0) {
+				in_joyent = B_TRUE;
+			} else if (in_joyent) {
+				return;
+			}
+		} else if (in_joyent && strncmp(line, branch_prefix,
+		    sizeof (branch_prefix) - 1) == 0) {
+			line[strlen(line) - 1] = '\0';
+			mdb_printf("illumos-joyent git branch: %s\n",
+			    line + sizeof (branch_prefix));
+		} else if (in_joyent && strncmp(line, rev_prefix,
+		    sizeof (rev_prefix) - 1) == 0) {
+			line[strlen(line) - 1] = '\0';
+			mdb_printf("illumos-joyent git rev: %s\n",
+			    line + sizeof (rev_prefix));
+		}
+	}
+}
