commit e472149ccec2632c989dc2186476cb4bf043cdfd (refs/changes/85/985/1)
Author: Chris Burroughs <chris.burroughs@joyent.com>
Date:   2016-11-30T13:56:05-05:00 (2 years, 10 months ago)
    
    bash completion probably works with new world order

diff --git a/lib/cli.js b/lib/cli.js
index 900e05c..435c249 100644
--- a/lib/cli.js
+++ b/lib/cli.js
@@ -362,7 +362,7 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
 
     var cacheFile = path.join(this.tritonapi.cacheDir, type + '.completions');
     var ttl = 5 * 60 * 1000; // timeout of cache file info (ms)
-    var cloudapi = this.tritonapi.cloudapi;
+    var tritonapi = this.tritonapi;
 
     vasync.pipeline({arg: {}, funcs: [
         function tryCacheFile(arg, next) {
@@ -378,13 +378,25 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
                 }
             });
         },
+        function initAuth(args, next) {
+            tritonapi.init(function (initErr) {
+                if (initErr) {
+                    next(initErr);
+                }
+                if (tritonapi.keyPair.isLocked()) {
+                    next(new errors.TritonError(
+                        'can not unlock keys during completion'));
+                }
+                next();
+            });
+        },
 
         function gather(arg, next) {
             var completions;
 
             switch (type) {
             case 'packages':
-                cloudapi.listPackages({}, function (err, pkgs) {
+                tritonapi.cloudapi.listPackages({}, function (err, pkgs) {
                     if (err) {
                         next(err);
                         return;
@@ -403,7 +415,7 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
                 });
                 break;
             case 'images':
-                cloudapi.listImages({}, function (err, imgs) {
+                tritonapi.cloudapi.listImages({}, function (err, imgs) {
                     if (err) {
                         next(err);
                         return;
@@ -425,7 +437,7 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
                 });
                 break;
             case 'instances':
-                cloudapi.listMachines({}, function (err, insts) {
+                tritonapi.cloudapi.listMachines({}, function (err, insts) {
                     if (err) {
                         next(err);
                         return;
@@ -450,7 +462,7 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
                  * on that is that with the additional prefixes, there would
                  * be too many.
                  */
-                cloudapi.listMachines({}, function (err, insts) {
+                tritonapi.cloudapi.listMachines({}, function (err, insts) {
                     if (err) {
                         next(err);
                         return;
@@ -471,7 +483,7 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
                 });
                 break;
             case 'networks':
-                cloudapi.listNetworks({}, function (err, nets) {
+                tritonapi.cloudapi.listNetworks({}, function (err, nets) {
                     if (err) {
                         next(err);
                         return;
@@ -490,7 +502,8 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
                 });
                 break;
             case 'fwrules':
-                cloudapi.listFirewallRules({}, function (err, fwrules) {
+                tritonapi.cloudapi.listFirewallRules({}, function (err,
+                                                                   fwrules) {
                     if (err) {
                         next(err);
                         return;
@@ -504,7 +517,7 @@ CLI.prototype._emitCompletions = function _emitCompletions(type, cb) {
                 });
                 break;
             case 'keys':
-                cloudapi.listKeys({}, function (err, keys) {
+                tritonapi.cloudapi.listKeys({}, function (err, keys) {
                     if (err) {
                         next(err);
                         return;
