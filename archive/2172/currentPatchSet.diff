commit 338188007a9179bd4ea9d06ebb9435fd82dd5cbd (v1.x, refs/changes/72/2172/2)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2017-06-29T20:25:28+00:00 (2 years, 3 months ago)
    
    joyent/node-lockfd#9 lockfd functions in v1 branch should detach worker threads
    Reviewed by: Jason King <jason.king@joyent.com>

diff --git a/package.json b/package.json
index 0c8a796..87c4cc8 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "lockfd",
   "description": "thin wrapper around fcntl(F_SETLK)",
-  "version": "1.2.0",
+  "version": "1.2.1",
   "author": "Joshua M. Clulow <jmc@joyent.com>",
   "repository": "git://github.com/joyent/node-lockfd.git",
   "main": "./lib/index.js",
diff --git a/src/lockfd.c b/src/lockfd.c
index 48372cd..c821b02 100644
--- a/src/lockfd.c
+++ b/src/lockfd.c
@@ -21,11 +21,24 @@ typedef struct lockfd_args {
 static const char *
 errno_to_code(int en)
 {
-	return (en == EAGAIN ? "EAGAIN" :
-	    en == ENOLCK ? "ENOLCK" :
-	    en == EINTR ? "EINTR" :
-	    en == EDEADLK ? "EDEADLK" :
-	    "");
+	switch (en) {
+	case EAGAIN:
+		return ("EAGAIN");
+	case ENOLCK:
+		return ("ENOLCK");
+	case EINTR:
+		return ("EINTR");
+	case EDEADLK:
+		return ("EDEADLK");
+	case EBADF:
+		return ("EBADF");
+	case EINVAL:
+		return ("EINVAL");
+	case EOPNOTSUPP:
+		return ("EOPNOTSUPP");
+	default:
+		return ("<unknown errno>");
+	}
 }
 
 /*
@@ -46,7 +59,7 @@ lockfd_thread(void *arg)
 	 * Call back into JS:
 	 */
 	ap = v8plus_obj(
-	    V8PLUS_TYPE_NUMBER, "0", (double) ret,
+	    V8PLUS_TYPE_NUMBER, "0", (double)ret,
 	    V8PLUS_TYPE_STRING, "1", strerror(en),
 	    V8PLUS_TYPE_STRING, "2", errno_to_code(en),
 	    V8PLUS_TYPE_NONE);
@@ -55,7 +68,7 @@ lockfd_thread(void *arg)
 
 	if (!lfa->lfa_run_sync) {
 		/*
-		 * Release our callback, held from the ititial call:
+		 * Release our callback, held from the initial call:
 		 */
 		v8plus_jsfunc_rele(lfa->lfa_cb);
 	}
@@ -66,7 +79,7 @@ lockfd_thread(void *arg)
 }
 
 /*
- * Primary entrypoint from Javascript:
+ * Primary entrypoint from Javascript to lock_fd function:
  */
 static nvlist_t *
 lockfd_lockfd(const nvlist_t *ap)
@@ -118,12 +131,16 @@ lockfd_lockfd(const nvlist_t *ap)
 		v8plus_jsfunc_hold(lfa->lfa_cb);
 
 		/*
-		 * Create a thread for the blocking fcntl(F_SETLKW) call:
+		 * Create a worker thread for the blocking fcntl(F_SETLKW) call:
 		 */
 		if (pthread_create(&newthr, NULL, lockfd_thread, lfa) != 0) {
 			return (v8plus_error(V8PLUSERR_UNKNOWN,
 			    "could not create thread"));
 		}
+		if (pthread_detach(newthr) != 0) {
+			return (v8plus_error(V8PLUSERR_UNKNOWN,
+			    "could not detach thread"));
+		}
 	}
 
 	return (v8plus_void());
