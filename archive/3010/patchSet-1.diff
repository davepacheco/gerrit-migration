commit 4997d60dc8204597944831356e76d8a603d42483 (refs/changes/10/3010/1)
Author: Julien Gilli <julien.gilli@joyent.com>
Date:   2017-11-29T11:37:36-08:00 (1 year, 10 months ago)
    
    DOCKER-1130 api-mount-nfs-shared-volume-as-docker-compose.test.js fails

diff --git a/lib/backends/sdc/containers.js b/lib/backends/sdc/containers.js
index 0abf315..f2eac2d 100644
--- a/lib/backends/sdc/containers.js
+++ b/lib/backends/sdc/containers.js
@@ -1890,7 +1890,7 @@ function buildVmPayload(opts, container, callback) {
 
         function handleVolumes(_, cb) {
             var existing = {};
-            var nfsVolumesMetadata, nfsVolumesInfo;
+            var volumesInfo;
 
             /*
              * Regular -v /data volumes, we'll create a new ZFS dataset for
@@ -1918,17 +1918,9 @@ function buildVmPayload(opts, container, callback) {
              * if both properties are used, we consider that the volume to
              * create is not local and shouldn't be handled here.
              */
-            nfsVolumesMetadata = payload.internal_metadata['docker:nfsvolumes'];
-            if (nfsVolumesMetadata !== undefined) {
-                try {
-                    nfsVolumesInfo = JSON.parse(nfsVolumesMetadata);
-                } catch (nfsVolMetadataParseErr) {
-                    cb(new errors.InternalError(nfsVolMetadataParseErr,
-                        'Error when parsing docker:nfsvolumes metadata'));
-                    return;
-                }
-
-                nfsVolumesInfo.forEach(function markNfsVolumeExisting(volume) {
+            volumesInfo = payload.volumes;
+            if (volumesInfo) {
+                volumesInfo.forEach(function markVolumeExisting(volume) {
                     assert.object(volume, 'volume');
                     assert.string(volume.name, 'volume.name');
 
