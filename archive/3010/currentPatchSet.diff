From 8f6e1e65906d5269c494065be4367ece5472515a Mon Sep 17 00:00:00 2001
From: Julien Gilli <julien.gilli@joyent.com>
Date: Wed, 29 Nov 2017 11:37:36 -0800
Subject: [PATCH] DOCKER-1130
 api-mount-nfs-shared-volume-as-docker-compose.test.js fails Reviewed by: Josh
 Wilsdon <jwilsdon@joyent.com> Approved by: Josh Wilsdon <jwilsdon@joyent.com>

---
 lib/backends/sdc/containers.js | 16 ++++------------
 1 file changed, 4 insertions(+), 12 deletions(-)

diff --git a/lib/backends/sdc/containers.js b/lib/backends/sdc/containers.js
index 0abf315..f2eac2d 100644
--- a/lib/backends/sdc/containers.js
+++ b/lib/backends/sdc/containers.js
@@ -1890,7 +1890,7 @@ function buildVmPayload(opts, container, callback) {
 
         function handleVolumes(_, cb) {
             var existing = {};
-            var nfsVolumesMetadata, nfsVolumesInfo;
+            var volumesInfo;
 
             /*
              * Regular -v /data volumes, we'll create a new ZFS dataset for
@@ -1918,17 +1918,9 @@ function buildVmPayload(opts, container, callback) {
              * if both properties are used, we consider that the volume to
              * create is not local and shouldn't be handled here.
              */
-            nfsVolumesMetadata = payload.internal_metadata['docker:nfsvolumes'];
-            if (nfsVolumesMetadata !== undefined) {
-                try {
-                    nfsVolumesInfo = JSON.parse(nfsVolumesMetadata);
-                } catch (nfsVolMetadataParseErr) {
-                    cb(new errors.InternalError(nfsVolMetadataParseErr,
-                        'Error when parsing docker:nfsvolumes metadata'));
-                    return;
-                }
-
-                nfsVolumesInfo.forEach(function markNfsVolumeExisting(volume) {
+            volumesInfo = payload.volumes;
+            if (volumesInfo) {
+                volumesInfo.forEach(function markVolumeExisting(volume) {
                     assert.object(volume, 'volume');
                     assert.string(volume.name, 'volume.name');
 
-- 
2.21.0

