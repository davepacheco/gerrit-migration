commit 65f26c13e4637e15771beb82e2956d3dd1ecac03
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2019-09-06T15:16:10-07:00 (4 weeks ago)
    
    TRITON-1814 vm losing all nics within an hour of `sdc-migrate`

diff --git a/lib/inst-fsm.js b/lib/inst-fsm.js
index c706cdb..0b0418c 100644
--- a/lib/inst-fsm.js
+++ b/lib/inst-fsm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 'use strict';
@@ -102,10 +102,12 @@ InstanceFSM.prototype.state_init = function (S) {
 
 InstanceFSM.prototype.state_waiting = function (S) {
     S.validTransitions([
+        'stop',
         'update',
         'remove'
     ]);
 
+    S.gotoStateOn(this, 'stopAsserted', 'stop');
     S.gotoStateOn(this, 'updateAsserted', 'update');
     S.gotoStateOn(this, 'removeAsserted', 'remove');
 };
@@ -154,6 +156,7 @@ InstanceFSM.prototype.state_update.wait = function (S) {
         return;
     }
 
+    S.gotoStateOn(this, 'stopAsserted', 'stop');
     S.gotoStateOn(this, 'updateAsserted', 'update');
 
     S.on(pending, 'stateChanged', function onStateChange() {
@@ -179,6 +182,8 @@ InstanceFSM.prototype.state_update.vm = function (S) {
         }
     }
 
+    S.gotoStateOn(this, 'stopAsserted', 'stop');
+
     mod_jsprim.forEachKey(this.nics, function (_, nfsm) {
         if (nfsm.remote.routes) {
             Object.assign(target, nfsm.remote.routes);
@@ -247,6 +252,7 @@ InstanceFSM.prototype.state_remove = function (S) {
     var self = this;
 
     S.validTransitions([
+        'stop',
         'update'
     ]);
 
@@ -257,10 +263,31 @@ InstanceFSM.prototype.state_remove = function (S) {
     self.nics = {};
     self.vm = null;
 
+    S.gotoStateOn(this, 'stopAsserted', 'stop');
     S.gotoStateOn(this, 'updateAsserted', 'update');
 };
 
 
+/**
+ * Stop (but don't remove) the underlying NICs. This is the end of the FSM.
+ */
+InstanceFSM.prototype.state_stop = function (S) {
+    var self = this;
+
+    S.validTransitions([ ]);
+
+    mod_jsprim.forEachKey(self.nics, function (mac, nfsm) {
+        self.log.debug({mac: mac, vm: self.uuid}, 'Stopping nic-fsm');
+        nfsm.stop();
+    });
+
+    self.nics = {};
+    self.vm = null;
+
+    self.log.info('Stopped tracking of VM %s', self.uuid);
+};
+
+
 InstanceFSM.prototype._update = function (vm) {
     var self = this;
     var prev = self.nics;
@@ -403,4 +430,8 @@ InstanceFSM.prototype.reboot = function (callback) {
     });
 };
 
+InstanceFSM.prototype.stop = function () {
+    this.emit('stopAsserted');
+};
+
 module.exports = InstanceFSM;
diff --git a/lib/net-agent.js b/lib/net-agent.js
index 55e246e..fa3e6c1 100644
--- a/lib/net-agent.js
+++ b/lib/net-agent.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -245,9 +245,27 @@ NetAgent.prototype.updateVMs = function (vms) {
 
     self.insts = {};
 
+    self.log.info({num_vms: vms.length}, 'updateVMs');
+
     vms.forEach(function (vm) {
         var vfsm;
 
+        if (vm.do_not_inventory) {
+            self.log.info({vm_uuid: vm.uuid},
+                'Ignoring vm with do_not_inventory set');
+            if (mod_jsprim.hasKey(prev, vm.uuid)) {
+                /*
+                 * TRITON-1814: Ignore network changes for vm's that are
+                 * migrating. This is when a vm existed, but is now hidden by
+                 * the do_not_inventory flag. Stop (and forget) the InstanceFSM.
+                 */
+                vfsm = prev[vm.uuid];
+                delete prev[vm.uuid];
+                vfsm.stop();
+            }
+            return;
+        }
+
         if (mod_jsprim.hasKey(prev, vm.uuid)) {
             vfsm = prev[vm.uuid];
             vfsm.update(vm);
diff --git a/lib/nic-fsm.js b/lib/nic-fsm.js
index 3c1704a..7f50d0b 100644
--- a/lib/nic-fsm.js
+++ b/lib/nic-fsm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 'use strict';
@@ -186,6 +186,7 @@ NicFSM.prototype.state_init = function (S) {
  */
 NicFSM.prototype.state_waiting = function (S) {
     S.gotoStateOn(this, 'setAsserted', 'update');
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
     S.gotoStateOn(this, 'refreshAsserted', 'refresh');
     S.gotoStateOn(this, 'releaseAsserted', 'release');
 
@@ -212,11 +213,13 @@ NicFSM.prototype.state_refresh = function (S) {
         'refresh',
         'release',
         'remove',
+        'stopped',
         'update'
     ]);
 
     S.gotoStateOn(self, 'refreshAsserted', 'refresh');
     S.gotoStateOn(self, 'releaseAsserted', 'release');
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
 
     function afterGet(err, nic, _, res) {
         if (err) {
@@ -263,6 +266,7 @@ NicFSM.prototype.state_create = function (S) {
     S.validTransitions([
         'refresh',
         'release',
+        'stopped',
         'update',
         'waiting'
     ]);
@@ -272,6 +276,8 @@ NicFSM.prototype.state_create = function (S) {
         return;
     }
 
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
+
     S.on(this, 'releaseAsserted', function () {
         /*
          * We wait to move to the "release" state to ensure that our
@@ -310,6 +316,7 @@ NicFSM.prototype.state_update = function (S) {
     S.validTransitions([
         'refresh',
         'remove',
+        'stopped',
         'update.local',
         'update.napi',
         'waiting'
@@ -355,6 +362,7 @@ NicFSM.prototype.state_update = function (S) {
     }
 
     S.gotoStateOn(this, 'refreshAsserted', 'refresh');
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
 
     S.gotoState('update.local');
 };
@@ -364,6 +372,7 @@ NicFSM.prototype.state_update.local = function (S) {
 
     S.validTransitions([
         'release',
+        'stopped',
         'update.local',
         'update.napi',
         'waiting'
@@ -383,6 +392,7 @@ NicFSM.prototype.state_update.local = function (S) {
     }
 
     S.gotoStateOn(this, 'releaseAsserted', 'release');
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
 
     function afterUpdate(err) {
         if (err) {
@@ -466,6 +476,7 @@ NicFSM.prototype.state_update.napi = function (S) {
     S.validTransitions([
         'release',
         'remove',
+        'stopped',
         'update',
         'update.napi',
         'waiting'
@@ -478,6 +489,8 @@ NicFSM.prototype.state_update.napi = function (S) {
         return;
     }
 
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
+
     S.on(this, 'releaseAsserted', function () {
         /*
          * It's okay for our DELETE to race with the PUT:
@@ -542,6 +555,8 @@ NicFSM.prototype.state_remove.nic = function (S) {
         return;
     }
 
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
+
     function afterRemove(err) {
         if (err) {
             self.log.error(err,
@@ -581,6 +596,8 @@ NicFSM.prototype.state_remove.reboot = function (S) {
         return;
     }
 
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
+
     function afterRemove(err) {
         if (err) {
             self.log.error(err,
@@ -641,6 +658,8 @@ NicFSM.prototype.state_release.delete = function (S) {
         return;
     }
 
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
+
     function afterDelete(err) {
         if (err) {
             if (err.statusCode === 404) {
@@ -672,6 +691,8 @@ NicFSM.prototype.state_release.delete = function (S) {
 NicFSM.prototype.state_release.refresh = function (S) {
     var self = this;
 
+    S.gotoStateOn(this, 'stopAsserted', 'stopped');
+
     function afterGet(err, nic, _, res) {
         if (err) {
             if (err.statusCode === 404) {
@@ -705,6 +726,8 @@ NicFSM.prototype.state_stopped = function (S) {
     this.remote = null;
     this.etag = undefined;
 
+    this.log.info({mac: this.mac}, 'Stopped tracking NIC');
+
     delete this.app.nics[this.mac];
 };
 
@@ -750,4 +773,8 @@ NicFSM.prototype.releaseFrom = function (belongs_to_uuid) {
     this.emit('releaseAsserted', belongs_to_uuid);
 };
 
+NicFSM.prototype.stop = function () {
+    this.emit('stopAsserted', 0);
+};
+
 module.exports = NicFSM;
diff --git a/lib/vmadm-watcher-fsm.js b/lib/vmadm-watcher-fsm.js
index 75690d2..02ae759 100644
--- a/lib/vmadm-watcher-fsm.js
+++ b/lib/vmadm-watcher-fsm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 'use strict';
@@ -236,10 +236,12 @@ VmadmEventsFSM.prototype.handleEvent = function (ev) {
 VmadmEventsFSM.prototype.getCurrentVMs = function () {
     var self = this;
 
+    /*
+     * Convert the vms hash object into an array. Note that we don't filter
+     * out vms with do_not_inventory set (see TRITON-1814 for reasons).
+     */
     var vms = Object.keys(self.vms).map(function (uuid) {
         return self.vms[uuid];
-    }).filter(function (vm) {
-        return !vm.do_not_inventory;
     });
 
     return vms;
diff --git a/lib/watcher-fsm.js b/lib/watcher-fsm.js
index 3131762..687bdea 100644
--- a/lib/watcher-fsm.js
+++ b/lib/watcher-fsm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 'use strict';
@@ -28,7 +28,8 @@ var FIELDS = [
     'zone_state',
     'nics',
     'resolvers',
-    'routes'
+    'routes',
+    'do_not_inventory'
 ];
 
 var STATE_WATCHER_TIMEOUT = 5 * 60 * 1000;
@@ -245,7 +246,7 @@ WatcherFSM.prototype.state_refresh = function (S) {
 
     self.vmadm.lookup({}, {
         log: self.log,
-        include_dni: false,
+        include_dni: true,
         fields: FIELDS
     }, S.callback(afterLookup));
 };
diff --git a/package.json b/package.json
index 3cee79c..95362cf 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "net-agent",
     "description": "Triton Network Agent",
-    "version": "2.3.0",
+    "version": "2.3.1",
     "author": "Joyent (joyent.com)",
     "private": true,
     "dependencies": {
diff --git a/tools/rsync-to b/tools/rsync-to
index d975b95..352296d 100755
--- a/tools/rsync-to
+++ b/tools/rsync-to
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 #
@@ -18,6 +18,7 @@ set -o errexit
 
 TOP=$(cd $(dirname $0)/../; pwd)
 NODE=$1
+NAME=net-agent
 
 extraOpts=
 if [[ $(uname -s) != "SunOS" ]]; then
@@ -28,7 +29,7 @@ if [[ $(uname -s) != "SunOS" ]]; then
 fi
 
 rsync -av ${TOP}/ \
-    $NODE:/var/tmp/net-agent/ \
+    "$NODE:/opt/smartdc/agents/lib/node_modules/${NAME}" \
     $extraOpts \
     --exclude .git/ \
     --exclude /deps/ \
@@ -36,4 +37,9 @@ rsync -av ${TOP}/ \
     --exclude /tools/ \
     --exclude /tmp/
 
-ssh $NODE cp -R /opt/smartdc/agents/lib/node_modules/net-agent/node_modules/ /var/tmp/net-agent/
\ No newline at end of file
+state=$(ssh ${NODE} svcs -H -o state ${NAME})
+if [[ "$state" == "maintenance" ]]; then
+    ssh ${NODE} svcadm clear "${NAME}"
+else
+    ssh ${NODE} svcadm restart "${NAME}"
+fi
