From 543593adae98f01d234accaafad6d15c8fef3df5 Mon Sep 17 00:00:00 2001
From: Hans Rosenfeld <hans.rosenfeld@joyent.com>
Date: Fri, 2 Nov 2018 16:51:38 +0100
Subject: [PATCH] OS-7405 mdb: allow mdb_ia32util and mdb_amd64util to coexist

---
 usr/src/cmd/mdb/intel/mdb/kvm_amd64dep.c  |  1 +
 usr/src/cmd/mdb/intel/mdb/kvm_ia32dep.c   |  1 +
 usr/src/cmd/mdb/intel/mdb/mdb_amd64util.c |  1 +
 usr/src/cmd/mdb/intel/mdb/mdb_amd64util.h |  7 +--
 usr/src/cmd/mdb/intel/mdb/mdb_ia32util.c  | 67 +++++++++++++++--------
 usr/src/cmd/mdb/intel/mdb/mdb_ia32util.h  |  7 +--
 usr/src/cmd/mdb/intel/mdb/mdb_isautil.h   |  7 ++-
 usr/src/cmd/mdb/intel/mdb/mdb_kreg.h      | 11 ++++
 usr/src/cmd/mdb/intel/mdb/proc_amd64dep.c |  1 +
 usr/src/cmd/mdb/intel/mdb/proc_ia32dep.c  |  3 +-
 10 files changed, 71 insertions(+), 35 deletions(-)

diff --git a/usr/src/cmd/mdb/intel/mdb/kvm_amd64dep.c b/usr/src/cmd/mdb/intel/mdb/kvm_amd64dep.c
index b878fef855..af4d8332b4 100644
--- a/usr/src/cmd/mdb/intel/mdb/kvm_amd64dep.c
+++ b/usr/src/cmd/mdb/intel/mdb/kvm_amd64dep.c
@@ -46,6 +46,7 @@
 #include <mdb/mdb_modapi.h>
 #include <mdb/mdb_conf.h>
 #include <mdb/mdb_kreg_impl.h>
+#include <mdb/mdb_isautil.h>
 #include <mdb/mdb_amd64util.h>
 #include <mdb/kvm_isadep.h>
 #include <mdb/mdb_kvm.h>
diff --git a/usr/src/cmd/mdb/intel/mdb/kvm_ia32dep.c b/usr/src/cmd/mdb/intel/mdb/kvm_ia32dep.c
index 64cbaff939..3924d6fb49 100644
--- a/usr/src/cmd/mdb/intel/mdb/kvm_ia32dep.c
+++ b/usr/src/cmd/mdb/intel/mdb/kvm_ia32dep.c
@@ -45,6 +45,7 @@
 #include <mdb/mdb_modapi.h>
 #include <mdb/mdb_conf.h>
 #include <mdb/mdb_kreg_impl.h>
+#include <mdb/mdb_isautil.h>
 #include <mdb/mdb_ia32util.h>
 #include <mdb/kvm_isadep.h>
 #include <mdb/mdb_kvm.h>
diff --git a/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.c b/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.c
index 14c81f47fd..503b171fad 100644
--- a/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.c
+++ b/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.c
@@ -39,6 +39,7 @@
 #include <mdb/mdb_kreg_impl.h>
 #include <mdb/mdb_debug.h>
 #include <mdb/mdb_modapi.h>
+#include <mdb/mdb_isautil.h>
 #include <mdb/mdb_amd64util.h>
 #include <mdb/mdb_ctf.h>
 #include <mdb/mdb_err.h>
diff --git a/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.h b/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.h
index f8c6097cef..b3f060bf05 100644
--- a/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.h
+++ b/usr/src/cmd/mdb/intel/mdb/mdb_amd64util.h
@@ -22,12 +22,13 @@
  * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
  */
+/*
+ * Copyright (c) 2018, Joyent, Inc.  All rights reserved.
+ */
 
 #ifndef _MDB_AMD64UTIL_H
 #define	_MDB_AMD64UTIL_H
 
-#pragma ident	"%Z%%M%	%I%	%E% SMI"
-
 #include <mdb/mdb_kreg.h>
 #include <mdb/mdb_target_impl.h>
 
@@ -35,8 +36,6 @@
 extern "C" {
 #endif
 
-typedef uchar_t mdb_instr_t;
-
 extern const mdb_tgt_regdesc_t mdb_amd64_kregs[];
 
 extern void mdb_amd64_printregs(const mdb_tgt_gregset_t *);
diff --git a/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.c b/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.c
index d6db4811b2..2f5d650912 100644
--- a/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.c
+++ b/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.c
@@ -23,16 +23,18 @@
  * Use is subject to license terms.
  */
 /*
- * Copyright (c) 2012, Joyent, Inc.  All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc.  All rights reserved.
  * Copyright 2014 Nexenta Systems, Inc.  All rights reserved.
  */
 
 #include <sys/types.h>
+#include <sys/types32.h>
 #include <sys/reg.h>
 #include <sys/privregs.h>
 #include <sys/stack.h>
 #include <sys/frame.h>
 
+#include <mdb/mdb_isautil.h>
 #include <mdb/mdb_ia32util.h>
 #include <mdb/mdb_target_impl.h>
 #include <mdb/mdb_kreg_impl.h>
@@ -41,10 +43,14 @@
 #include <mdb/mdb_err.h>
 #include <mdb/mdb.h>
 
+#ifndef __amd64
 /*
  * We also define an array of register names and their corresponding
  * array indices.  This is used by the getareg and putareg entry points,
  * and also by our register variable discipline.
+ *
+ * When built into an amd64 mdb this won't be used as it's only a subset of
+ * mdb_amd64_kregs, hence the #ifdef.
  */
 const mdb_tgt_regdesc_t mdb_ia32_kregs[] = {
 	{ "savfp", KREG_SAVFP, MDB_TGT_R_EXPORT },
@@ -87,6 +93,7 @@ const mdb_tgt_regdesc_t mdb_ia32_kregs[] = {
 	{ "err", KREG_ERR, MDB_TGT_R_EXPORT | MDB_TGT_R_PRIV },
 	{ NULL, 0, 0 }
 };
+#endif
 
 void
 mdb_ia32_printregs(const mdb_tgt_gregset_t *gregs)
@@ -94,27 +101,27 @@ mdb_ia32_printregs(const mdb_tgt_gregset_t *gregs)
 	const kreg_t *kregs = &gregs->kregs[0];
 	kreg_t eflags = kregs[KREG_EFLAGS];
 
-	mdb_printf("%%cs = 0x%04x\t\t%%eax = 0x%0?p %A\n",
+	mdb_printf("%%cs = 0x%04x\t\t%%eax = 0x%08p %A\n",
 	    kregs[KREG_CS], kregs[KREG_EAX], kregs[KREG_EAX]);
 
-	mdb_printf("%%ds = 0x%04x\t\t%%ebx = 0x%0?p %A\n",
+	mdb_printf("%%ds = 0x%04x\t\t%%ebx = 0x%08p %A\n",
 	    kregs[KREG_DS], kregs[KREG_EBX], kregs[KREG_EBX]);
 
-	mdb_printf("%%ss = 0x%04x\t\t%%ecx = 0x%0?p %A\n",
+	mdb_printf("%%ss = 0x%04x\t\t%%ecx = 0x%08p %A\n",
 	    kregs[KREG_SS], kregs[KREG_ECX], kregs[KREG_ECX]);
 
-	mdb_printf("%%es = 0x%04x\t\t%%edx = 0x%0?p %A\n",
+	mdb_printf("%%es = 0x%04x\t\t%%edx = 0x%08p %A\n",
 	    kregs[KREG_ES], kregs[KREG_EDX], kregs[KREG_EDX]);
 
-	mdb_printf("%%fs = 0x%04x\t\t%%esi = 0x%0?p %A\n",
+	mdb_printf("%%fs = 0x%04x\t\t%%esi = 0x%08p %A\n",
 	    kregs[KREG_FS], kregs[KREG_ESI], kregs[KREG_ESI]);
 
-	mdb_printf("%%gs = 0x%04x\t\t%%edi = 0x%0?p %A\n\n",
+	mdb_printf("%%gs = 0x%04x\t\t%%edi = 0x%08p %A\n\n",
 	    kregs[KREG_GS], kregs[KREG_EDI], kregs[KREG_EDI]);
 
-	mdb_printf("%%eip = 0x%0?p %A\n", kregs[KREG_EIP], kregs[KREG_EIP]);
-	mdb_printf("%%ebp = 0x%0?p\n", kregs[KREG_EBP]);
-	mdb_printf("%%esp = 0x%0?p\n\n", kregs[KREG_ESP]);
+	mdb_printf("%%eip = 0x%08p %A\n", kregs[KREG_EIP], kregs[KREG_EIP]);
+	mdb_printf("%%ebp = 0x%08p\n", kregs[KREG_EBP]);
+	mdb_printf("%%esp = 0x%08p\n\n", kregs[KREG_ESP]);
 	mdb_printf("%%eflags = 0x%08x\n", eflags);
 
 	mdb_printf("  id=%u vip=%u vif=%u ac=%u vm=%u rf=%u nt=%u iopl=0x%x\n",
@@ -138,8 +145,8 @@ mdb_ia32_printregs(const mdb_tgt_gregset_t *gregs)
 	    (eflags & KREG_EFLAGS_PF_MASK) ? "PF" : "pf",
 	    (eflags & KREG_EFLAGS_CF_MASK) ? "CF" : "cf");
 
-#ifndef _KMDB
-	mdb_printf("  %%uesp = 0x%0?x\n", kregs[KREG_UESP]);
+#if !defined(__amd64) && !defined(_KMDB)
+	mdb_printf("  %%uesp = 0x%08x\n", kregs[KREG_UESP]);
 #endif
 	mdb_printf("%%trapno = 0x%x\n", kregs[KREG_TRAPNO]);
 	mdb_printf("   %%err = 0x%x\n", kregs[KREG_ERR]);
@@ -185,7 +192,7 @@ kvm_argcount(mdb_tgt_t *t, uintptr_t eip, ssize_t size)
 		n = 0;
 	}
 
-	return (MIN((ssize_t)n, size) / sizeof (long));
+	return (MIN((ssize_t)n, size) / sizeof (uint32_t));
 }
 
 int
@@ -198,9 +205,9 @@ mdb_ia32_kvm_stack_iter(mdb_tgt_t *t, const mdb_tgt_gregset_t *gsp,
 	int err;
 
 	struct fr {
-		uintptr_t fr_savfp;
-		uintptr_t fr_savpc;
-		long fr_argv[32];
+		uintptr32_t fr_savfp;
+		uintptr32_t fr_savpc;
+		uint32_t fr_argv[32];
 	} fr;
 
 	uintptr_t fp = gsp->kregs[KREG_EBP];
@@ -227,8 +234,8 @@ mdb_ia32_kvm_stack_iter(mdb_tgt_t *t, const mdb_tgt_gregset_t *gsp,
 			goto badfp;
 		}
 		if ((size = mdb_tgt_vread(t, &fr, sizeof (fr), fp)) >=
-		    (ssize_t)(2 * sizeof (uintptr_t))) {
-			size -= (ssize_t)(2 * sizeof (uintptr_t));
+		    (ssize_t)(2 * sizeof (uintptr32_t))) {
+			size -= (ssize_t)(2 * sizeof (uintptr32_t));
 			argc = kvm_argcount(t, fr.fr_savpc, size);
 		} else {
 			err = EMDB_NOMAP;
@@ -262,7 +269,8 @@ mdb_ia32_kvm_stack_iter(mdb_tgt_t *t, const mdb_tgt_gregset_t *gsp,
 
 		advance_tortoise = !advance_tortoise;
 
-		if (got_pc && func(arg, pc, argc, fr.fr_argv, &gregs) != 0)
+		if (got_pc &&
+		    func(arg, pc, argc, (const long *)fr.fr_argv, &gregs) != 0)
 			break;
 
 		kregs[KREG_ESP] = kregs[KREG_EBP];
@@ -294,6 +302,12 @@ badfp:
 	return (set_errno(err));
 }
 
+#ifndef __amd64
+/*
+ * The functions mdb_ia32_step_out and mdb_ia32_next haven't yet been adapted
+ * to work when built for an amd64 mdb. They are unused by the amd64-only bhyve
+ * target, hence the #ifdef.
+ */
 /*
  * Determine the return address for the current frame.  Typically this is the
  * fr_savpc value from the current frame, but we also perform some special
@@ -404,13 +418,16 @@ mdb_ia32_next(mdb_tgt_t *t, uintptr_t *p, kreg_t pc, mdb_instr_t curinstr)
 
 	return (set_errno(EAGAIN));
 }
+#endif
 
 /*ARGSUSED*/
 int
-mdb_ia32_kvm_frame(void *arglim, uintptr_t pc, uint_t argc, const long *argv,
+mdb_ia32_kvm_frame(void *arglim, uintptr_t pc, uint_t argc, const long *largv,
     const mdb_tgt_gregset_t *gregs)
 {
-	argc = MIN(argc, (uint_t)arglim);
+	const uint32_t *argv = (const uint32_t *)largv;
+
+	argc = MIN(argc, (uintptr_t)arglim);
 	mdb_printf("%a(", pc);
 
 	if (argc != 0) {
@@ -424,11 +441,13 @@ mdb_ia32_kvm_frame(void *arglim, uintptr_t pc, uint_t argc, const long *argv,
 }
 
 int
-mdb_ia32_kvm_framev(void *arglim, uintptr_t pc, uint_t argc, const long *argv,
+mdb_ia32_kvm_framev(void *arglim, uintptr_t pc, uint_t argc, const long *largv,
     const mdb_tgt_gregset_t *gregs)
 {
-	argc = MIN(argc, (uint_t)arglim);
-	mdb_printf("%0?lr %a(", gregs->kregs[KREG_EBP], pc);
+	const uint32_t *argv = (const uint32_t *)largv;
+
+	argc = MIN(argc, (uintptr_t)arglim);
+	mdb_printf("%08lr %a(", gregs->kregs[KREG_EBP], pc);
 
 	if (argc != 0) {
 		mdb_printf("%lr", *argv++);
diff --git a/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.h b/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.h
index 597b234b3e..1645b86d8d 100644
--- a/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.h
+++ b/usr/src/cmd/mdb/intel/mdb/mdb_ia32util.h
@@ -22,12 +22,13 @@
  * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
  */
+/*
+ * Copyright (c) 2018, Joyent, Inc.  All rights reserved.
+ */
 
 #ifndef _MDB_IA32UTIL_H
 #define	_MDB_IA32UTIL_H
 
-#pragma ident	"%Z%%M%	%I%	%E% SMI"
-
 #include <mdb/mdb_kreg.h>
 #include <mdb/mdb_target_impl.h>
 
@@ -35,8 +36,6 @@
 extern "C" {
 #endif
 
-typedef uchar_t mdb_instr_t;
-
 extern const mdb_tgt_regdesc_t mdb_ia32_kregs[];
 
 extern void mdb_ia32_printregs(const mdb_tgt_gregset_t *);
diff --git a/usr/src/cmd/mdb/intel/mdb/mdb_isautil.h b/usr/src/cmd/mdb/intel/mdb/mdb_isautil.h
index b6d17e1045..237e6663ae 100644
--- a/usr/src/cmd/mdb/intel/mdb/mdb_isautil.h
+++ b/usr/src/cmd/mdb/intel/mdb/mdb_isautil.h
@@ -23,16 +23,19 @@
  * Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
  */
+/*
+ * Copyright (c) 2018, Joyent, Inc.  All rights reserved.
+ */
 
 #ifndef _MDB_ISAUTIL_H
 #define	_MDB_ISAUTIL_H
 
-#pragma ident	"%Z%%M%	%I%	%E% SMI"
-
 #ifdef __cplusplus
 extern "C" {
 #endif
 
+typedef uchar_t mdb_instr_t;
+
 #ifdef __amd64
 #include <mdb/mdb_amd64util.h>
 
diff --git a/usr/src/cmd/mdb/intel/mdb/mdb_kreg.h b/usr/src/cmd/mdb/intel/mdb/mdb_kreg.h
index 08d65c0cef..3db7d6a1d6 100644
--- a/usr/src/cmd/mdb/intel/mdb/mdb_kreg.h
+++ b/usr/src/cmd/mdb/intel/mdb/mdb_kreg.h
@@ -92,6 +92,17 @@ typedef uint32_t kreg_t;
 #define	KREG_SP		KREG_RSP
 #define	KREG_FP		KREG_RBP
 
+#define	KREG_EAX	KREG_RAX
+#define	KREG_EBX	KREG_RBX
+#define	KREG_ECX	KREG_RCX
+#define	KREG_EDX	KREG_RDX
+#define	KREG_ESI	KREG_RSI
+#define	KREG_EDI	KREG_RDI
+#define	KREG_EBP	KREG_RBP
+#define	KREG_ESP	KREG_RSP
+#define	KREG_EFLAGS	KREG_RFLAGS
+#define	KREG_EIP	KREG_RIP
+
 #else	/* __amd64 */
 
 #define	KREG_SAVFP	KDIREG_SAVFP
diff --git a/usr/src/cmd/mdb/intel/mdb/proc_amd64dep.c b/usr/src/cmd/mdb/intel/mdb/proc_amd64dep.c
index d86c1b79f8..39fcaaa405 100644
--- a/usr/src/cmd/mdb/intel/mdb/proc_amd64dep.c
+++ b/usr/src/cmd/mdb/intel/mdb/proc_amd64dep.c
@@ -37,6 +37,7 @@
 #include <mdb/mdb_proc.h>
 #include <mdb/mdb_kreg.h>
 #include <mdb/mdb_err.h>
+#include <mdb/mdb_isautil.h>
 #include <mdb/mdb_amd64util.h>
 #include <mdb/mdb.h>
 
diff --git a/usr/src/cmd/mdb/intel/mdb/proc_ia32dep.c b/usr/src/cmd/mdb/intel/mdb/proc_ia32dep.c
index 5ebe2df9f4..0f9b8ae42c 100644
--- a/usr/src/cmd/mdb/intel/mdb/proc_ia32dep.c
+++ b/usr/src/cmd/mdb/intel/mdb/proc_ia32dep.c
@@ -24,7 +24,7 @@
  * Use is subject to license terms.
  */
 /*
- * Copyright 2015 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 /*
@@ -37,6 +37,7 @@
 #include <mdb/mdb_proc.h>
 #include <mdb/mdb_kreg.h>
 #include <mdb/mdb_err.h>
+#include <mdb/mdb_isautil.h>
 #include <mdb/mdb_ia32util.h>
 #include <mdb/mdb.h>
 
-- 
2.21.0

