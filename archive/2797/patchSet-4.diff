From e8927c3de6112eb37839d3ac90d1658c873ebac2 Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Tue, 17 Oct 2017 00:35:57 +0000
Subject: [PATCH] MORAY-446 apply connection limit to "moray" role

---
 boot/setup.sh | 37 +++++++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/boot/setup.sh b/boot/setup.sh
index 7e2d88e..24c39ae 100755
--- a/boot/setup.sh
+++ b/boot/setup.sh
@@ -204,6 +204,42 @@ function sdc_moray_setup {
 
 }
 
+function manta_set_moray_role_connlimit {
+    # Having 18 reserve connections ensures that the maximum possible number of
+    # moray postgres connections does not exceed the imposed "moray" rolconnlimit
+    # in any of the default deployment sizes: coal, lab, production.
+    #
+    #       pg_max_conns  instances_per_zone  num_zones  max_conn_per_zone
+    # coal  100           1                   1          16
+    # lab   210           4                   3          16
+    # prod  1000          4                   3          16
+    #
+    # 18 reserve connections means 82, 192, and 982 moray role connections in
+    # coal, lab, and production deployments. These serve as an upper bound on
+    # the maximum possible 16, 192, and 192 moray connections that could be open
+    # to a single postgres cluster in coal, lab, and production deployments.
+    local reserve_conns=18
+    local primary_ip="$1"
+    pg_max_conns=$(psql -t -P format=unaligned -U postgres -h "$primary_ip" -p 5432 -c 'SHOW max_connections')
+    [[ $? -eq 0 ]] || fatal "Unable to retrieve postgres max_connections"
+
+    re='^[0-9]+$'
+    if ! [[ $pg_max_conns =~ $re ]]; then
+        fatal "Maximum allowed postgres connections value ($pg_max_conns) is not a positive integer"
+    fi
+
+    if ! [[ $reserve_conns =~ $re ]]; then
+        fatal "Reserve connections value ($reserve_conns) is not a positive integer"
+    fi
+
+    if [[ $pg_max_conns -le $reserve_conns ]]; then
+        fatal "Maximum allowed postgres connections ($pg_max_conns) is lower than the number of reserve connections ($reserve_conns)"
+    fi
+
+    psql -U postgres -h $primary_ip -p 5432 -c "ALTER ROLE $PG_USER WITH CONNECTION LIMIT $(expr $pg_max_conns - $reserve_conns)"
+    [[ $? -eq 0 ]] || fatal "Unable to set moray role connection limit"
+}
+
 function manta_setup_moray_config {
     #.bashrc
     echo 'function req() { grep "$@" `svcs -L moray` | bunyan ;}' >> $PROFILE
@@ -223,6 +259,7 @@ function manta_setup_moray_config {
     # exists, so we don't check error, subsequent pg requests will fail with
     # this user if it dne.
     createuser -U postgres -h $primary_ip -p 5432 -d -S -R $PG_USER
+    manta_set_moray_role_connlimit $primary_ip
 
     # Postgres sucks at return codes, so we basically have no choice but to
     # ignore the error code here since we can't conditionally create the DB
-- 
2.21.0

