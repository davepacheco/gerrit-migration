commit 5f7e94879d7f442649365c0a4fdaf4851e7171dd (refs/changes/97/2797/9)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-12-09T01:49:35+00:00 (1 year, 10 months ago)
    
    MORAY-446 apply connection limit to "moray" role

diff --git a/boot/setup.sh b/boot/setup.sh
index 7e2d88e..da6c17d 100755
--- a/boot/setup.sh
+++ b/boot/setup.sh
@@ -204,6 +204,47 @@ function sdc_moray_setup {
 
 }
 
+function manta_set_moray_role_connlimit {
+    # Having 18 reserve connections ensures that the maximum possible number of
+    # Moray postgres connections does not exceed the imposed "moray"
+    # rolconnlimit in any of the default deployment sizes: coal, lab,
+    # production.
+    #
+    #       pg_max_conns  instances_per_zone  num_zones  max_conn_per_zone
+    # coal  100           1                   1          16
+    # lab   210           4                   3          16
+    # prod  1000          4                   3          16
+    #
+    # Reserving 18 connections imposes an upper bound of 82, 192, and 982 moray
+    # role connections in coal, lab, and production deployments. These upper
+    # bounds are fine because with their default configurations, coal, lab, and
+    # production deployment morays may have (in aggregate) a maximum of 16,
+    # 192, and 192 total connections to postgres, respectively.
+    local reserve_conns=18
+    local primary_ip="$1"
+
+    local pg_max_conns=$(psql -t -P format=unaligned -U postgres -h \
+	    "$primary_ip" -p 5432 -c 'SHOW max_connections')
+
+    [[ $? -eq 0 ]] || warn "Unable to retrieve postgres max_connections"
+
+    local re='^[0-9]+$'
+    if ! [[ $pg_max_conns =~ $re ]]; then
+        warn "Maximum allowed postgres connections value ($pg_max_conns) is " \
+             "not a positive integer"
+    fi
+
+    if [[ $pg_max_conns -le $reserve_conns ]]; then
+        warn "Maximum allowed postgres connections ($pg_max_conns) is lower" \
+             "than the number of reserve connections ($reserve_conns)"
+    fi
+
+    local rolconnlimit="$(($pg_max_conns - $reserve_conns))"
+    local sql="ALTER ROLE $PG_USER WITH CONNECTION LIMIT $rolconnlimit"
+    psql -U postgres -h $primary_ip -p 5432 -c "$sql"
+    [[ $? -eq 0 ]] || warn "Unable to set moray role connection limit"
+}
+
 function manta_setup_moray_config {
     #.bashrc
     echo 'function req() { grep "$@" `svcs -L moray` | bunyan ;}' >> $PROFILE
@@ -223,6 +264,7 @@ function manta_setup_moray_config {
     # exists, so we don't check error, subsequent pg requests will fail with
     # this user if it dne.
     createuser -U postgres -h $primary_ip -p 5432 -d -S -R $PG_USER
+    manta_set_moray_role_connlimit $primary_ip
 
     # Postgres sucks at return codes, so we basically have no choice but to
     # ignore the error code here since we can't conditionally create the DB
