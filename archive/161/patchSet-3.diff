commit 6cfe1dad2dd26ab02f84d16fdddbc9b07aa916ca (refs/changes/61/161/3)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2016-07-28T17:38:10+00:00 (3 years, 2 months ago)
    
    NET-361 booter uses type=file instead of type=hash for networking.json hash
    Reviewed by: Joshua M. Clulow <jmc@joyent.com>

diff --git a/lib/menulst.js b/lib/menulst.js
index 8ef0c78..239f741 100644
--- a/lib/menulst.js
+++ b/lib/menulst.js
@@ -18,6 +18,9 @@ var fmt = require('util').format;
 var fs = require('fs');
 
 
+var HASH_RE = /^(.*)\.hash$/;
+
+
 /**
  * Using an object of unordered key/value pairs, create an string of parameters
  * (alphabetically sorted). If any flags are created, the string will end with
@@ -81,8 +84,17 @@ function addMenuItem(menu, opts) {
 
     if (!opts.disableBootTimeFiles && opts.bootFiles) {
         opts.bootFiles.forEach(function (bf) {
-            menu.push(fmt('  module$ %s/%s type=file name=%s',
-                opts.bootFsDirRelative, bf, bf));
+            var fparts = HASH_RE.exec(bf);
+            var ftype = 'file';
+            var fname = bf;
+
+            if (fparts !== null) {
+                fname = fparts[1];
+                ftype = 'hash';
+            }
+
+            menu.push(fmt('  module$ %s/%s type=%s name=%s',
+                opts.bootFsDirRelative, bf, ftype, fname));
         });
     }
 
@@ -294,9 +306,18 @@ function buildIpxeCfg_impl(opts, cb)  {
     if (!opts.disableBootTimeFiles && opts.bootFiles &&
         opts.bootFiles.length !== 0 && opts.bootFsDirRelative) {
         opts.bootFiles.forEach(function (bf) {
+            var fparts = HASH_RE.exec(bf);
+            var ftype = 'file';
+            var fname = bf;
+
+            if (fparts !== null) {
+                fname = fparts[1];
+                ftype = 'hash';
+            }
+
             result.push(fmt(
-                'module %s://${next-server}%s/%s type=file name=%s ',
-                proto, opts.bootFsDirRelative, bf, bf));
+                'module %s://${next-server}%s/%s type=%s name=%s ',
+                proto, opts.bootFsDirRelative, bf, ftype, fname));
         });
     }
 
