commit 632945ed0c194d2b115b24fdda2744be6ed39f53 (refs/changes/64/1664/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-03-14T15:19:32-07:00 (2 years, 7 months ago)
    
    joyent/node-cueball#102 HTTP pinger hangs

diff --git a/lib/agent.js b/lib/agent.js
index fbdd00f..e57da30 100644
--- a/lib/agent.js
+++ b/lib/agent.js
@@ -334,8 +334,11 @@ CueBallAgent.prototype.addRequest = function (req, optionsOrHost, port) {
 	}
 };
 
-CueBallAgent.prototype.checkSocket = function (host, handle, socket) {
+CueBallAgent.prototype.checkSocket = function (host, err, handle, socket) {
 	var self = this;
+	if (err) {
+		return;
+	}
 	var agent = new PingAgent({
 		protocol: this.protocol,
 		socket: socket,
diff --git a/lib/connection-fsm.js b/lib/connection-fsm.js
index 2b776fd..b73127f 100644
--- a/lib/connection-fsm.js
+++ b/lib/connection-fsm.js
@@ -503,6 +503,32 @@ function CueBallClaimHandle(options) {
 }
 mod_util.inherits(CueBallClaimHandle, FSM);
 
+Object.defineProperty(CueBallClaimHandle.prototype, 'writable', {
+	get: function () {
+		throw (new mod_errors.ClaimHandleMisusedError());
+	}
+});
+
+Object.defineProperty(CueBallClaimHandle.prototype, 'readable', {
+	get: function () {
+		throw (new mod_errors.ClaimHandleMisusedError());
+	}
+});
+
+CueBallClaimHandle.prototype.on = function (evt) {
+	if (evt === 'readable' || evt === 'close') {
+		throw (new mod_errors.ClaimHandleMisusedError());
+	}
+	return (EventEmitter.prototype.on.apply(this, arguments));
+};
+
+CueBallClaimHandle.prototype.once = function (evt) {
+	if (evt === 'readable' || evt === 'close') {
+		throw (new mod_errors.ClaimHandleMisusedError());
+	}
+	return (EventEmitter.prototype.once.apply(this, arguments));
+};
+
 CueBallClaimHandle.prototype.try = function (slot) {
 	mod_assert.ok(this.isInState('waiting'), 'ClaimHandle#try may only ' +
 	    'be called in state "waiting" (is in "' + this.getState() + '")');
diff --git a/lib/errors.js b/lib/errors.js
index 930c045..13da0d5 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -12,12 +12,23 @@ module.exports = {
 	ConnectionTimeoutError: ConnectionTimeoutError,
 	ConnectionClosedError: ConnectionClosedError,
 	PoolFailedError: PoolFailedError,
-	PoolStoppingError: PoolStoppingError
+	PoolStoppingError: PoolStoppingError,
+	ClaimHandleMisusedError: ClaimHandleMisusedError
 };
 
 const mod_util = require('util');
 const mod_assert = require('assert-plus');
 
+function ClaimHandleMisusedError() {
+	if (Error.captureStackTrace)
+		Error.captureStackTrace(this, ClaimHandleMisusedError);
+	this.name = 'ClaimHandleMisusedError';
+	this.message = 'CueBall claim handle used as if it was a ' +
+	    'socket. Check the order and number of arguments in ' +
+	    'your claim callbacks.';
+}
+mod_util.inherits(ClaimHandleMisusedError, Error);
+
 function ClaimTimeoutError(pool) {
 	if (Error.captureStackTrace)
 		Error.captureStackTrace(this, ClaimTimeoutError);
diff --git a/package.json b/package.json
index d5523c4..335e6a9 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "cueball",
-  "version": "2.2.0",
+  "version": "2.2.1",
   "description": "manage a pool of connections to a multi-node service where nodes are listed in DNS",
   "main": "lib/index.js",
   "dependencies": {
