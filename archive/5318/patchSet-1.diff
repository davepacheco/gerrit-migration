From e78d2604d10bcca3cc800a5dc193469552b0e6c3 Mon Sep 17 00:00:00 2001
From: dyep <dyep49@gmail.com>
Date: Sun, 6 Jan 2019 14:01:13 -0800
Subject: [PATCH] OS-7435 imgadm "create" tests fail after OS-7343

---
 src/img/test/create.test.js | 84 ++++++++++++++++++++++++++-----------
 1 file changed, 60 insertions(+), 24 deletions(-)

diff --git a/src/img/test/create.test.js b/src/img/test/create.test.js
index 88a5e23d..a4bdedfd 100644
--- a/src/img/test/create.test.js
+++ b/src/img/test/create.test.js
@@ -36,6 +36,7 @@ var rimraf = require('rimraf');
 var mkdirp = require('mkdirp');
 var IMGAPI = require('sdc-clients').IMGAPI;
 var createImgadm = require('/usr/img/lib/imgadm').createTool;
+var imgadm;
 var VM = require('/usr/vm/node_modules/VM');
 var vminfod = require('/usr/vm/node_modules/vminfod/client');
 var common = require('/usr/vm/test/tests/common');
@@ -60,7 +61,6 @@ var TESTDIR = __dirname;
 
 // Base images from which we'll be creating a custom images.
 var BASE_UUID = 'f669428c-a939-11e2-a485-b790efc0f0c1'; // base 13.1.0
-var BHYVE_BASE_UUID = '462d1d03-8457-e134-a408-cf9ea2b9be96'; // centos 7
 
 var envWithTrace = objCopy(process.env);
 envWithTrace.TRACE = '1';
@@ -91,6 +91,21 @@ test('setup: clean WRKDIR (' + WRKDIR + ')', function (t) {
     });
 });
 
+test('setup: create imgadm client', function (t) {
+    createImgadm({log: log}, function onCreated(err, tool) {
+        common.ifError(t, err, 'error creating imgadm');
+
+        if (err) {
+            t.end();
+            return;
+        }
+
+        imgadm = tool;
+        t.end();
+    });
+});
+
+
 // ---- tests
 
 test('custom image (compression=none)', function (t) {
@@ -250,47 +265,63 @@ function waitForUserScript(uuid, callback) {
 }
 
 test('create image from bhyve vm', function (t) {
+    var BHYVE_IMAGE_UUID;
     var dsQuota;
     var imgFilePath;
-    var imgadm;
     var manifest;
     var manifestPath;
+    var payloadCommon;
     var vmobj;
 
-    var payloadCommon = {
-        brand: 'bhyve',
-        autoboot: true,
-        do_not_inventory: true,
-        ram: 128,
-        disks: [
-            {
-                boot: true,
-                image_uuid: BHYVE_BASE_UUID,
-                model: 'virtio'
-            },
-            {
-                size: 512,
-                model: 'virtio'
-            }
-        ]
-    };
-
     vasync.pipeline({
         funcs: [
-            function createImgadmTool(_, next) {
-                createImgadm({log: log}, function onCreated(err, tool) {
-                    common.ifError(t, err, 'error creating imgadm');
+            function bhyveImageExists(_, next) {
+                imgadm.listImages(function listed(err, imagesInfo) {
+                    common.ifError(t, err, 'error listing images');
 
                     if (err) {
                         next(err);
                         return;
                     }
 
-                    imgadm = tool;
+                    // HVM images built after 20180819 can be used for KVM or
+                    // bhyve
+                    var bhyveImages = imagesInfo.filter(function isHvm(img) {
+                        return img.manifest.type === 'zvol' &&
+                            img.manifest.os === 'linux' &&
+                            img.manifest.published_at >= '2018-08-19T00:00:00Z';
+                    });
+
+                    if (bhyveImages.length === 0) {
+                        console.log('No bhyve images. Create image from ' +
+                            'bhyve vm test skipped');
+                        next(true);
+                        return;
+                    }
+
+                    BHYVE_IMAGE_UUID = bhyveImages[0].manifest.uuid;
                     next();
                 });
             },
             function createVm(_, next) {
+                payloadCommon = {
+                    brand: 'bhyve',
+                    autoboot: true,
+                    do_not_inventory: true,
+                    ram: 512,
+                    disks: [
+                        {
+                            boot: true,
+                            image_uuid: BHYVE_IMAGE_UUID,
+                            model: 'virtio'
+                        },
+                        {
+                            size: 512,
+                            model: 'virtio'
+                        }
+                    ]
+                };
+
                 var payload = jsprim.deepCopy(payloadCommon);
                 payload.alias = 'test-image-create-' + process.pid;
                 payload.customer_metadata = {
@@ -520,6 +551,11 @@ test('create image from bhyve vm', function (t) {
             }
         ]
     }, function onDone(err) {
+        if (!BHYVE_IMAGE_UUID) {
+            t.end();
+            return;
+        }
+
         common.ifError(t, err, 'error testing image create');
         t.end();
     });
-- 
2.21.0

