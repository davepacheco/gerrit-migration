From e1cf9a76abf729c0299ff08fe1c58491c70168de Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Thu, 17 Aug 2017 22:26:49 +0000
Subject: [PATCH] TOOLS-1545 Prevent accidental pushes to GitHub repos

---
 bin/crimport            | 119 +++++++++++++++++++++++++++++++++++++++-
 docs/operator/README.md |   5 ++
 2 files changed, 123 insertions(+), 1 deletion(-)

diff --git a/bin/crimport b/bin/crimport
index 0f70dcc..4119553 100755
--- a/bin/crimport
+++ b/bin/crimport
@@ -15,6 +15,14 @@ igp_gerrit_host=cr.joyent.us
 igp_gerrit_group="Temporary Git Superusers"
 # Temporary directory for cloned project
 igp_tmproot="${TMPDIR-/var/tmp}/crimport-$$"
+# URL for accessing Github API
+igp_github_api="https://api.github.com"
+# Location of file containing user's Github API token
+igp_github_token_file=~/.github-api-token
+# User that Gerrit uses to push to Github
+igp_github_gerrit_user="joyent-automation"
+# Slug for the "Joyent Engineering" team
+igp_github_eng_slug="joyent-engineering"
 
 #
 # Runtime state
@@ -92,6 +100,9 @@ function main
 		igp_gerrit_sshhost="$igp_gerrit_host"
 	fi
 
+	echo "Setting up Github repo for Gerrit pushes ... "
+	igp_github_protect $igp_gh_account $igp_gh_repo
+
 	echo -n "Detecting your Gerrit username ... "
 	igp_gerrit_configure || fail "failed"
 	echo "$igp_gerrit_username"
@@ -209,6 +220,112 @@ function igp_github_clone
 	git clone git@github.com:$1/$2.git $3
 }
 
+#
+# igp_github_protect ACCOUNT REPONAME
+#
+# Adds branch protection to the Github repo to ensure only Gerrit can
+# push to the "master" branch.
+#
+function igp_github_protect
+{
+	if [[ ! $1 =~ ^[-a-zA-Z0-9_]+$ ]] ||
+	   [[ ! $2 =~ ^[-a-zA-Z0-9_]+$ ]]; then
+		fail "bogus account or repo name!"
+	fi
+
+	if [[ ! -f $igp_github_token_file ]]; then
+		fail "couldn't find $igp_github_token_file"
+	fi
+
+	local TOKEN="`cat $igp_github_token_file`"
+	local BRANCH="master"
+	local PREVIEW_HEADER="Accept: application/vnd.github.loki-preview+json"
+	local UNIQUE="$RANDOM$RANDOM$RANDOM:"
+
+	# Check that the Gerrit user is able to push
+	local PERM_RESULT=$(curl -s --write-out "$UNIQUE%{http_code}\n" \
+	    -u "$TOKEN:x-oauth-basic" -X GET \
+	    "$igp_github_api/repos/$1/$2/collaborators/$igp_github_gerrit_user/permission")
+	if [[ $? != 0 ]]; then
+		fail "couldn't get permissions for $igp_github_gerrit_user"
+	fi
+
+	local PERM_INFO=$(grep -v "^$UNIQUE" <<< "$PERM_RESULT")
+	local STATUS=$(grep "^$UNIQUE" <<< "$PERM_RESULT" | cut -d: -f2)
+
+	if [[ $STATUS != "200" ]]; then
+		fail "couldn't get permissions (HTTP status code $STATUS)"
+	fi
+
+	local PERM=$(json permission <<< "$PERM_INFO")
+	if [[ $PERM != "write" && $PERM != "admin" ]]; then
+		fail "$igp_github_gerrit_user needs push access to $1/$2"
+	fi
+
+	# Set branch protection on master, so that only Gerrit can push.
+	curl -fsS -u "$TOKEN:x-oauth-basic" -H "$PREVIEW_HEADER" -X PUT -d@- \
+	    "$igp_github_api/repos/$1/$2/branches/$BRANCH/protection" > /dev/null <<-EOF
+		{
+		    "required_status_checks": {
+		        "strict": true,
+		        "contexts": [ ]
+		    },
+		    "enforce_admins": true,
+		    "restrictions": {
+		        "users": [
+		            "$igp_github_gerrit_user"
+		        ],
+		        "teams": []
+		    }
+		}
+	EOF
+	if [[ $? != 0 ]]; then
+		fail "failed to set branch protection"
+	fi
+
+	# Disable all but squash merging, to make it harder to accidentally do
+	# merge commits.
+	#
+	# Github doesn't allow completely disabling merge buttons, but we can
+	# at least restrict it enough to make it harder for anyone to do. In
+	# the future we could also create a bot that automatically marks all
+	# PRs as failing checks.
+	curl -fsS -u "$TOKEN:x-oauth-basic" -X PATCH -d@- \
+	    "$igp_github_api/repos/$1/$2" > /dev/null <<-EOF
+		{
+		    "name": "$2",
+		    "allow_squash_merge": true,
+		    "allow_merge_commit": false,
+		    "allow_rebase_merge": false,
+		    "has_projects": false
+		}
+	EOF
+	if [[ $? != 0 ]]; then
+		fail "failed to set branch protection"
+	fi
+
+	# Get the "Joyent Engineering" team's ID.
+	local TEAMS=$(curl -fsS -u "$TOKEN:x-oauth-basic" "$igp_github_api/orgs/$1/teams")
+	if [[ $? != 0 ]]; then
+		fail "failed to list $1 teams"
+	fi
+
+	local JOYENT_ID=$(json -a -c "this.slug === '$igp_github_eng_slug'" id <<< "$TEAMS")
+	if [[ -z $JOYENT_ID ]]; then
+		fail "failed to find Joyent Engineering team's ID"
+	fi
+
+	curl -fsS -u "$TOKEN:x-oauth-basic" -X PUT -d@- \
+	    "$igp_github_api/teams/$JOYENT_ID/repos/$1/$2" <<-EOF
+		{
+			"permission": "push"
+		}
+	EOF
+	if [[ $? != 0 ]]; then
+		fail "failed to grant Engineering push access to $1/$2"
+	fi
+}
+
 #
 # igp_gerrit_push REPO_PATH PROJECT_NAME
 #
@@ -239,7 +356,7 @@ function igp_gerrit_push
 function igp_gerrit_configure
 {
 	igp_gerrit_username=$(ssh $igp_gerrit_sshhost 2>&1 | \
-	   grep '^\s\+git clone.*REPOSITORY_NAME.git\s*$' | \
+	   grep '^ *git clone.*REPOSITORY_NAME.git *$' | \
 	   sed -e s'#.*ssh://\(.*\)@.*#\1#') ||
 	   fail "failed to parse out Gerrit username"
 
diff --git a/docs/operator/README.md b/docs/operator/README.md
index f177ce2..790c785 100644
--- a/docs/operator/README.md
+++ b/docs/operator/README.md
@@ -117,11 +117,16 @@ something bad has already happened.
 Use the [crimport](../../bin/crimport) script inside this repository to import a
 repository from GitHub.  This script:
 
+- configures the GitHub repository to only allow Gerrit to push to master
 - creates a new Gerrit project with appropriate settings, including replication
   to GitHub
 - clones the repository from GitHub
 - pushes the repository to Gerrit
 
+Before running this script you will need to [create a GitHub API token](https://github.com/settings/tokens)
+and place it into a `~/.github-api-token` file locally, so that the script can
+take care of updating GitHub.
+
 **Note:** the script may report problems pushing tags or non-master branches.
 We haven't figured out yet how we're going to deal with these branches, but the
 failure to push these branches doesn't affect using code review for master.
-- 
2.21.0

