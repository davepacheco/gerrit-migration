From 01726f7e175822bcb435d17484b9c9df2934ae39 Mon Sep 17 00:00:00 2001
From: dyep49 <dyep49@gmail.com>
Date: Fri, 9 Mar 2018 11:21:27 -0800
Subject: [PATCH] TRITON-137 Add artedi metrics collection to SAPI

---
 docs/index.md                |  1 +
 lib/server/sapi.js           | 29 +++++++++++++++++
 package.json                 |  3 +-
 sapi_manifests/sapi/template | 60 +++++++++++++++++++-----------------
 test/helper.js               |  4 ++-
 5 files changed, 67 insertions(+), 30 deletions(-)

diff --git a/docs/index.md b/docs/index.md
index 1b46d7d..9bd45c7 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -31,6 +31,7 @@ It has several goals:
 SAPI has two main components: the API itself and the associated config-agent.
 There's also a SAPI client delivered with the rest of the SDC clients.
 
+SAPI exposes metrics via [node-triton-metrics](https://github.com/joyent/node-triton-metrics) on `http://<ADMIN_IP>:8881/metrics`
 
 ## SAPI
 
diff --git a/lib/server/sapi.js b/lib/server/sapi.js
index dddc6fa..0f659cc 100644
--- a/lib/server/sapi.js
+++ b/lib/server/sapi.js
@@ -15,6 +15,7 @@
 var assert = require('assert-plus');
 var async = require('async');
 var fs = require('fs');
+var createMetricsManager = require('triton-metrics').createMetricsManager;
 var http = require('http');
 var https = require('https');
 var os = require('os');
@@ -71,8 +72,30 @@ SAPI.prototype.start = function start(cb) {
         function (subcb) {
             self.model.initClients(subcb);
         },
+        function initMetrics(subcb) {
+            var config = self.config;
+
+            self.metricsManager = createMetricsManager({
+                address: config.adminIp,
+                log: config.log.child({component: 'metrics'}),
+                staticLabels: {
+                    datacenter: config.datacenter_name,
+                    instance: config.instanceUuid,
+                    server: config.serverUuid,
+                    service: config.serviceName
+                },
+                port: config.metricsPort || 8881,
+                restify: restify
+            });
+
+            self.metricsManager.createRestifyMetrics();
+            self.metricsManager.listen(function metricsServerStarted() {
+                subcb();
+            });
+        },
         function (subcb) {
             var server_opts = {};
+            server_opts.metricsManager = self.metricsManager;
             server_opts.model = self.model;
             server_opts.log = self.log;
 
@@ -100,6 +123,10 @@ SAPI.prototype.shutdown = function shutdown(cb) {
         function (subcb) {
             log.info('shutdown: closing server');
             self.server.close(subcb);
+        },
+        function shutdownMetricsServer(subcb) {
+            self.metricsManager.log.info('shutdown: closing metrics server');
+            self.metricsManager.close(subcb);
         }
     ], function () {
         log.info('shutdown: complete');
@@ -149,6 +176,8 @@ function createServer(options) {
     server.use(restify.queryParser({allowDots: false, plainObjects: false}));
     server.use(restify.bodyParser());
     server.use(restify.requestLogger());
+    server.on('after', options.metricsManager.collectRestifyMetrics
+        .bind(options.metricsManager));
     server.on('after', function (req, res, route, err) {
         // Skip logging some high frequency or unimportant endpoints to
         // keep log noise down.
diff --git a/package.json b/package.json
index 0541ec5..a550986 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sapi",
   "description": "Triton Services and Configuration API",
-  "version": "0.2.1",
+  "version": "0.3.0",
   "author": "Joyent (joyent.com)",
   "license": "MPL-2.0",
   "private": true,
@@ -22,6 +22,7 @@
     "sdc-clients": "10.5.0",
     "semver": "5.4.1",
     "sprintf-js": "0.0.7",
+    "triton-metrics": "0.1.0",
     "vasync": "2.2.0",
     "verror": "1.10.0"
   },
diff --git a/sapi_manifests/sapi/template b/sapi_manifests/sapi/template
index 3aea439..2dbf452 100644
--- a/sapi_manifests/sapi/template
+++ b/sapi_manifests/sapi/template
@@ -1,30 +1,34 @@
 {
-	"log_options": {
-		"name": "sapi",
-		"level": "info"
-	},
-	"datacenter_name": "{{{datacenter_name}}}",
-	"moray": {
-		"srvDomain": "{{MORAY_SERVICE}}",
-		"cueballOptions": {
-			"resolvers": ["{{{BINDER_SERVICE}}}"]
-		},
-		"master_host": "{{{MASTER_MORAY_IP}}}",
-		"master_port": "{{{MASTER_MORAY_PORT}}}"
-	},
-	"cnapi": {
-		"url": "http://{{{CNAPI_SERVICE}}}"
-	},
-	"vmapi": {
-		"url": "http://{{{VMAPI_SERVICE}}}"
-	},
-	"napi": {
-		"url": "http://{{{NAPI_SERVICE}}}"
-	},
-	"imgapi": {
-		"url": "http://{{{IMGAPI_SERVICE}}}"
-	},
-	"papi": {
-		"url": "http://{{{PAPI_SERVICE}}}"
-	}
+    "log_options": {
+        "name": "sapi",
+        "level": "info"
+    },
+    "datacenter_name": "{{{datacenter_name}}}",
+    "serviceName": "{{SERVICE_NAME}}",
+    "instanceUuid": "{{auto.ZONENAME}}",
+    "serverUuid": "{{auto.SERVER_UUID}}",
+    "adminIp": "{{auto.ADMIN_IP}}",
+    "moray": {
+        "srvDomain": "{{MORAY_SERVICE}}",
+        "cueballOptions": {
+            "resolvers": ["{{{BINDER_SERVICE}}}"]
+        },
+        "master_host": "{{{MASTER_MORAY_IP}}}",
+        "master_port": "{{{MASTER_MORAY_PORT}}}"
+    },
+    "cnapi": {
+        "url": "http://{{{CNAPI_SERVICE}}}"
+    },
+    "vmapi": {
+        "url": "http://{{{VMAPI_SERVICE}}}"
+    },
+    "napi": {
+        "url": "http://{{{NAPI_SERVICE}}}"
+    },
+    "imgapi": {
+        "url": "http://{{{IMGAPI_SERVICE}}}"
+    },
+    "papi": {
+        "url": "http://{{{PAPI_SERVICE}}}"
+    }
 }
diff --git a/test/helper.js b/test/helper.js
index 2755198..391bd47 100644
--- a/test/helper.js
+++ b/test/helper.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -30,6 +30,7 @@ var VMAPIPlus = require('../lib/server/vmapiplus');
 var exec = require('child_process').exec;
 
 var SAPI_TEST_SERVER_PORT = 12345;
+var SAPI_TEST_METRICS_SERVER_PORT = 8882;
 
 // -- Helpers
 
@@ -192,6 +193,7 @@ function startSapiServer(mode, cb) {
     config.log = log;
 
     config.port = SAPI_TEST_SERVER_PORT;
+    config.metricsPort = SAPI_TEST_METRICS_SERVER_PORT;
 
     var sapi = new SAPI(config);
 
-- 
2.21.0

