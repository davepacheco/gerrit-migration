From 9ebed612c6d2b4aaae5d54236d2266273dc93108 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 28 Apr 2017 15:30:10 -0700
Subject: [PATCH] CNS-147 want unified tag parser for triton.cns.services

---
 lib/common/validation.js | 34 ++++++----------------------------
 package.json             |  1 +
 test/vms.full.test.js    | 20 +++++++++++++-------
 3 files changed, 20 insertions(+), 35 deletions(-)

diff --git a/lib/common/validation.js b/lib/common/validation.js
index 613e5b8..b76620a 100644
--- a/lib/common/validation.js
+++ b/lib/common/validation.js
@@ -27,6 +27,8 @@ var markerUtils = require('./marker');
 var predicateUtils = require('./predicate');
 var sortValidation = require('../validation/sort');
 
+var tritonTags = require('triton-tags');
+
 var UUID_RE = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
 var ALIAS_RE = /^[a-zA-Z0-9][a-zA-Z0-9\_\.\-]*$/;
 var RAM_RE = /^0$|^([1-9][0-9]*$)/;
@@ -1911,35 +1913,11 @@ exports.validMetadata = validMetadata;
  */
 function validTags(tags, preventDocker) {
     for (var key in tags) {
-        if (key.match(TRITON_TAG_ROOT_RE)) {
-            if (!key.match(TRITON_TAG_RE)) {
-                return 'Unrecognized special triton tag "' + key + '"';
-            }
-
+        if (tritonTags.isTritonTag(key)) {
             var data = tags[key];
-            if (key === 'triton.cns.services') {
-                if (typeof (data) !== 'string') {
-                    return '"' + key + '" must be a string';
-                }
-
-                var fqdns = data.split(',');
-                for (var i = 0; i < fqdns.length; i++) {
-                    var fqdn = fqdns[i];
-
-                    if (fqdn.length > 255 || !fqdn.match(DNS_NAME_RE)) {
-                        return '"' + fqdn + '" is not DNS safe';
-                    }
-                }
-            } else if (key === 'triton.cns.disable' &&
-                    typeof (data) !== 'boolean') {
-                return '"' + key + '" must be a boolean';
-            } else if (key === 'triton.cns.reverse_ptr') {
-                if (typeof (data) !== 'string') {
-                    return '"' + key + '" must be a string';
-                }
-                if (data.length > 255 || !data.match(DNS_NAME_RE)) {
-                    return '"' + data + '" is not DNS safe';
-                }
+            var err = tritonTags.validateTritonTag(key, data);
+            if (err !== null) {
+                return (err);
             }
         } else if (preventDocker && key.match(DOCKER_TAG_RE)) {
             return 'Special tag "' + key + '" not supported';
diff --git a/package.json b/package.json
index 3be79fb..7183a4a 100644
--- a/package.json
+++ b/package.json
@@ -25,6 +25,7 @@
     "sprintf": "0.1.1",
     "strsplit": "1.0.0",
     "trace-event": "1.3.0",
+    "triton-tags": "^1.1.4",
     "vasync": "^1.6.3",
     "wf-client": "0.2.1"
   },
diff --git a/test/vms.full.test.js b/test/vms.full.test.js
index fc81451..3f8e7f8 100644
--- a/test/vms.full.test.js
+++ b/test/vms.full.test.js
@@ -606,18 +606,21 @@ exports.create_vm_tags_not_ok = function (t) {
     }
 
     function checkBadTritonTagType1(next) {
-        var msg = '"triton.cns.services" must be a string';
+        var msg = 'Triton tag "triton.cns.services" value must be a string: ' +
+            'true (boolean)';
         callVmapi({ 'triton.cns.services': true }, msg, next);
     }
 
     function checkBadTritonTagType2(next) {
-        var msg = '"triton.cns.disable" must be a boolean';
+        var msg = 'Triton tag "triton.cns.disable" value must be a boolean: ' +
+            '"true" (string)';
         callVmapi({ 'triton.cns.disable': 'true' }, msg, next);
     }
 
     function checkBadTritonDNS(next) {
-        var msg = '"_foo.bar" is not DNS safe';
-        callVmapi({ 'triton.cns.services': 'foo,_foo.bar' }, msg, next);
+        var msg = 'invalid "triton.cns.services" tag: Expected DNS name ' +
+            'but "$" found.';
+        callVmapi({ 'triton.cns.services': 'foo,$#foo.bar' }, msg, next);
     }
 
     async.series([
@@ -1093,9 +1096,12 @@ exports.change_with_bad_tags = function (t) {
     }
 
     var unrecognizedMsg = 'Unrecognized special triton tag "triton.foo"';
-    var stringMsg = '"triton.cns.services" must be a string';
-    var booleanMsg = '"triton.cns.disable" must be a boolean';
-    var dnsMsg = '"_foo.bar" is not DNS safe';
+    var stringMsg = 'Triton tag "triton.cns.services" value must be a ' +
+        'string: true (boolean)';
+    var booleanMsg = 'Triton tag "triton.cns.disable" value must be a ' +
+        'boolean: "true" (string)';
+    var dnsMsg = 'invalid "triton.cns.services" tag: Expected DNS name but ' +
+        '"_" found.';
     var dockerMsg1 = 'Special tag "docker:label:com.docker." not supported';
     var dockerMsg2 = 'Special tag "sdc_docker" not supported';
 
-- 
2.21.0

