commit 590a4e09c0c76093f66f4ff69d6b4fd66de09bb6 (refs/changes/75/1875/4)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-05-01T21:27:00+00:00 (2 years, 5 months ago)
    
    CNS-147 want unified tag parser for triton.cns.services
    Reviewed by: Julien Gilli <julien.gilli@joyent.com>
    Reviewed by: Trent Mick <trent.mick@joyent.com>
    Approved by: Trent Mick <trent.mick@joyent.com>

diff --git a/docs/index.md b/docs/index.md
index 16d1c4f..eaa2570 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -2134,7 +2134,6 @@ on VMAPI is updated as well.
 | moray.retry.minTimeout | Number           | -               | Moray minimum retry timeout                                    |
 | moray.retry.maxTimeout | Number           | -               | Moray maximum retry timeout                                    |
 | docker_tag_re          | String           | -               | Tags matching regex are treated with Docker tag semantics      |
-| triton_tag_re          | String           | -               | Tags matching regex are treated with Triton tag semantics      |
 
 
 ## SAPI Configuration
@@ -2151,15 +2150,12 @@ production.
 | ------------------------------ | ------ | ---------------------------------------------------------------------------- |
 | **experimental_fluentd_host**  | String |                                                                              |
 | **docker_tag_re**              | String | Tags matching regex are treated with Docker tag semantics                    |
-| **triton_tag_re**              | String | Tags matching regex are treated with Triton tag semantics                    |
-
-`docker_tag_re` and `triton_tag_re` must be valid regular expression strings --
-more concretely, what Javascript's RegExp() considers valid. Docker tags can be
-added during provisioning, but otherwise cannot later be altered or removed, and
-may have special significance to Docker. Triton tags may be used by various
-Triton services. It's recommende to not change either `docker_tag_re` or
-`triton_tag_re` unless you're aware of the semantics and effects of Docker and
-Triton tags.
+
+`docker_tag_re` must be a valid regular expression string -- more concretely,
+what Javascript's RegExp() considers valid. Docker tags can be added during
+provisioning, but otherwise cannot later be altered or removed, and may have
+special significance to Docker. It's recommended to not change `docker_tag_re`
+unless you're aware of the semantics and effects of Docker tags.
 
 
 ## Health
diff --git a/lib/common/validation.js b/lib/common/validation.js
index 613e5b8..b04d6cd 100644
--- a/lib/common/validation.js
+++ b/lib/common/validation.js
@@ -14,15 +14,16 @@
 
 
 var assert = require('assert-plus');
-var restify = require('restify');
 var async = require('async');
 var format = require('util').format;
+var jsprim = require('jsprim');
 var libuuid = require('libuuid');
 var net = require('net');
-var jsprim = require('jsprim');
+var restify = require('restify');
+var tritonTags = require('triton-tags');
 
-var errors = require('../errors');
 var common = require('./vm-common');
+var errors = require('../errors');
 var markerUtils = require('./marker');
 var predicateUtils = require('./predicate');
 var sortValidation = require('../validation/sort');
@@ -32,8 +33,6 @@ var ALIAS_RE = /^[a-zA-Z0-9][a-zA-Z0-9\_\.\-]*$/;
 var RAM_RE = /^0$|^([1-9][0-9]*$)/;
 var TRITON_TAG_ROOT_RE = /^triton\./;
 /* JSSTYLED */
-var TRITON_TAG_DEFAULT_RE = /^triton\.(?:cns\.services|cns\.disable|cns\.reverse_ptr|network\.public)$/;
-/* JSSTYLED */
 var DOCKER_TAG_DEFAULT_RE = /^(?:sdc_docker$|docker:label:triton\.|docker:label:(?:com|io|org)\.docker(?:project)?\.)/;
 
 // For now, using the more limited labels allowed by RFC1123. RFC2181 supercedes
@@ -45,7 +44,6 @@ var DNS_NAME_RE = /^[a-z0-9][a-z0-9\-]{0,62}(?:\.[a-z0-9][a-z0-9\-]{0,62})*$/i;
 var IP_RE = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;
 var PW_SUFFIX = /^(.*)_pw$/;
 
-var TRITON_TAG_RE = TRITON_TAG_DEFAULT_RE;
 var DOCKER_TAG_RE = DOCKER_TAG_DEFAULT_RE;
 
 var MAX_LIST_VMS_LIMIT = 1000;
@@ -456,10 +454,6 @@ var validators = {
  * object returned from a constructor function.
  */
 function init(config) {
-    if (config.triton_tag_re) {
-        TRITON_TAG_RE = new RegExp(config.triton_tag_re);
-    }
-
     if (config.docker_tag_re) {
         DOCKER_TAG_RE = new RegExp(config.docker_tag_re);
     }
@@ -1911,35 +1905,11 @@ exports.validMetadata = validMetadata;
  */
 function validTags(tags, preventDocker) {
     for (var key in tags) {
-        if (key.match(TRITON_TAG_ROOT_RE)) {
-            if (!key.match(TRITON_TAG_RE)) {
-                return 'Unrecognized special triton tag "' + key + '"';
-            }
-
+        if (tritonTags.isTritonTag(key)) {
             var data = tags[key];
-            if (key === 'triton.cns.services') {
-                if (typeof (data) !== 'string') {
-                    return '"' + key + '" must be a string';
-                }
-
-                var fqdns = data.split(',');
-                for (var i = 0; i < fqdns.length; i++) {
-                    var fqdn = fqdns[i];
-
-                    if (fqdn.length > 255 || !fqdn.match(DNS_NAME_RE)) {
-                        return '"' + fqdn + '" is not DNS safe';
-                    }
-                }
-            } else if (key === 'triton.cns.disable' &&
-                    typeof (data) !== 'boolean') {
-                return '"' + key + '" must be a boolean';
-            } else if (key === 'triton.cns.reverse_ptr') {
-                if (typeof (data) !== 'string') {
-                    return '"' + key + '" must be a string';
-                }
-                if (data.length > 255 || !data.match(DNS_NAME_RE)) {
-                    return '"' + data + '" is not DNS safe';
-                }
+            var errMsg = tritonTags.validateTritonTag(key, data);
+            if (errMsg !== null) {
+                return errMsg;
             }
         } else if (preventDocker && key.match(DOCKER_TAG_RE)) {
             return 'Special tag "' + key + '" not supported';
diff --git a/package.json b/package.json
index 3be79fb..7183a4a 100644
--- a/package.json
+++ b/package.json
@@ -25,6 +25,7 @@
     "sprintf": "0.1.1",
     "strsplit": "1.0.0",
     "trace-event": "1.3.0",
+    "triton-tags": "^1.1.4",
     "vasync": "^1.6.3",
     "wf-client": "0.2.1"
   },
diff --git a/sapi_manifests/vmapi/template b/sapi_manifests/vmapi/template
index 7c57f13..cda96e1 100644
--- a/sapi_manifests/vmapi/template
+++ b/sapi_manifests/vmapi/template
@@ -7,9 +7,6 @@
 {{#experimental_fluentd_host}}
     "fluentd_host": "{{{experimental_fluentd_host}}}",
 {{/experimental_fluentd_host}}
-{{#triton_tag_re}}
-    "triton_tag_re": "{{triton_tag_re}}",
-{{/triton_tag_re}}
 {{#docker_tag_re}}
     "docker_tag_re": "{{docker_tag_re}}",
 {{/docker_tag_re}}
diff --git a/test/vms.full.test.js b/test/vms.full.test.js
index fc81451..3f8e7f8 100644
--- a/test/vms.full.test.js
+++ b/test/vms.full.test.js
@@ -606,18 +606,21 @@ exports.create_vm_tags_not_ok = function (t) {
     }
 
     function checkBadTritonTagType1(next) {
-        var msg = '"triton.cns.services" must be a string';
+        var msg = 'Triton tag "triton.cns.services" value must be a string: ' +
+            'true (boolean)';
         callVmapi({ 'triton.cns.services': true }, msg, next);
     }
 
     function checkBadTritonTagType2(next) {
-        var msg = '"triton.cns.disable" must be a boolean';
+        var msg = 'Triton tag "triton.cns.disable" value must be a boolean: ' +
+            '"true" (string)';
         callVmapi({ 'triton.cns.disable': 'true' }, msg, next);
     }
 
     function checkBadTritonDNS(next) {
-        var msg = '"_foo.bar" is not DNS safe';
-        callVmapi({ 'triton.cns.services': 'foo,_foo.bar' }, msg, next);
+        var msg = 'invalid "triton.cns.services" tag: Expected DNS name ' +
+            'but "$" found.';
+        callVmapi({ 'triton.cns.services': 'foo,$#foo.bar' }, msg, next);
     }
 
     async.series([
@@ -1093,9 +1096,12 @@ exports.change_with_bad_tags = function (t) {
     }
 
     var unrecognizedMsg = 'Unrecognized special triton tag "triton.foo"';
-    var stringMsg = '"triton.cns.services" must be a string';
-    var booleanMsg = '"triton.cns.disable" must be a boolean';
-    var dnsMsg = '"_foo.bar" is not DNS safe';
+    var stringMsg = 'Triton tag "triton.cns.services" value must be a ' +
+        'string: true (boolean)';
+    var booleanMsg = 'Triton tag "triton.cns.disable" value must be a ' +
+        'boolean: "true" (string)';
+    var dnsMsg = 'invalid "triton.cns.services" tag: Expected DNS name but ' +
+        '"_" found.';
     var dockerMsg1 = 'Special tag "docker:label:com.docker." not supported';
     var dockerMsg2 = 'Special tag "sdc_docker" not supported';
 
