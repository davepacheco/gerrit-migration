From 8823a0c7ce0123c423c043aa0161f2ec761555df Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Thu, 21 Sep 2017 14:38:24 -0700
Subject: [PATCH] DOCKER-705 "docker build" containers are assigned public IP
 Reviewed by: Julien Gilli <julien.gilli@joyent.com> Approved by: Todd
 Whiteman <todd.whiteman@joyent.com>

---
 lib/backends/sdc/build.js      |  1 -
 lib/backends/sdc/containers.js | 18 +++---------------
 2 files changed, 3 insertions(+), 16 deletions(-)

diff --git a/lib/backends/sdc/build.js b/lib/backends/sdc/build.js
index 37f525a..09d4655 100644
--- a/lib/backends/sdc/build.js
+++ b/lib/backends/sdc/build.js
@@ -113,7 +113,6 @@ function buildImage(opts, callback) {
             account: req.account,
             app: req.app,
             clientApiVersion: req.clientApiVersion,
-            requireExternalNetwork: true,  // use external network
             image: scratchImage,
             log: log,
             name: 'build_' + req_id,
diff --git a/lib/backends/sdc/containers.js b/lib/backends/sdc/containers.js
index 2f32825..48912e3 100644
--- a/lib/backends/sdc/containers.js
+++ b/lib/backends/sdc/containers.js
@@ -540,9 +540,8 @@ function addRulesToFWAPI(opts, rules, payload, callback) {
  *  External:
  *
  *   An external network is added in these cases:
- *    1. opts.requireExternalNetwork is set, or
- *    2. fabrics are *not* enabled, or
- *    3. fabrics are enabled and the user wants to expose ports
+ *    1. fabrics are *not* enabled, or
+ *    2. fabrics are enabled and the user wants to expose ports
  *
  *   The user can specify which external network is used by setting the
  *   'triton.network.public' container label (tag), this specifies the external
@@ -560,8 +559,6 @@ function addNetworksToPayload(opts, container, payload, callback) {
         'opts.config.overlay.externalPool');
     assert.optionalBool(opts.config.overlay.enabled,
         'opts.config.overlay.enabled');
-    assert.optionalBool(opts.requireExternalNetwork,
-        'opts.requireExternalNetwork');
     assert.func(callback, 'callback');
 
     var log = opts.log;
@@ -592,8 +589,7 @@ function addNetworksToPayload(opts, container, payload, callback) {
         },
 
         function addExternalNetwork(_, next) {
-            if (!opts.requireExternalNetwork && opts.config.overlay.enabled
-                && !publishingPorts(container)) {
+            if (opts.config.overlay.enabled && !publishingPorts(container)) {
                 // DOCKER-1045: for fabrics, it is an error if the
                 // triton.network.public label is used and no ports are being
                 // published.
@@ -701,11 +697,6 @@ function externalNetworkByName(opts, container, payload, callback) {
  * When fabrics are configured, but no specific network is supplied,
  * or if 'bridge' is supplied, we will use the user's default fabric
  * network, stored in UFDS.
- *
- * Additionally, if the user is publishing ports or we have the
- * `requireExternalNetwork` option (currently used by docker build,
- * see DOCKER-705), we will also attach to configured network pool
- * (typically the external/public pool).
  */
 function defaultFabricNetwork(opts, payload, callback) {
     assert.object(opts, 'opts');
@@ -2834,8 +2825,6 @@ function createContainer(opts, callback) {
     assert.string(opts.req_id, 'opts.req_id');
     assert.object(opts.account, 'opts.account');
     assert.number(opts.clientApiVersion, 'opts.clientApiVersion');
-    assert.optionalBool(opts.requireExternalNetwork,
-        'opts.requireExternalNetwork');
 
     var log = opts.log || this.log;
     var name = opts.name;
@@ -2858,7 +2847,6 @@ function createContainer(opts, callback) {
         buildVmPayload({
             app: opts.app,
             config: config,
-            requireExternalNetwork: opts.requireExternalNetwork,
             image: opts.image,
             log: log,
             req_id: opts.req_id,
-- 
2.21.0

