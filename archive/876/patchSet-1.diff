From c4a25149a2ce4887d425f241cc1ab25203cc3bc1 Mon Sep 17 00:00:00 2001
From: David Pacheco <dap@joyent.com>
Date: Thu, 10 Nov 2016 12:08:28 -0800
Subject: [PATCH] MORAY-374 electric-moray needs to use moray v2 MORAY-375
 electric moray needs to lose the no-op "moray" client error handler MORAY-373
 electric-moray repo needs a little cleanup MORAY-372 electric-moray getBucket
 broken with presence of "reindex_active"

---
 Makefile                            |  4 +-
 README.md                           | 59 +++++++++++++++++++++-
 env.sh                              |  4 +-
 lib/index.js                        |  6 +--
 lib/server.js                       | 13 +++--
 main.js                             |  8 +--
 package.json                        |  9 ++--
 server.js                           | 77 -----------------------------
 smf/manifests/electric-moray.xml.in |  2 +-
 test/buckets.test.js                |  4 --
 test/helper.js                      |  1 +
 test/load/load.js                   |  2 +-
 test/load/manta1027.js              | 55 ---------------------
 13 files changed, 75 insertions(+), 169 deletions(-)
 delete mode 100644 server.js
 delete mode 100644 test/load/manta1027.js

diff --git a/Makefile b/Makefile
index f7486ce..2f7b001 100644
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2016, Joyent, Inc.
 #
 
 #
@@ -42,7 +42,7 @@ SMF_MANIFESTS_IN = smf/manifests/haproxy.xml.in
 BOOTSTRAP_MANIFESTS = sapi_manifests/registrar/template
 
 
-NODE_PREBUILT_VERSION=v0.10.25
+NODE_PREBUILT_VERSION=v0.10.48
 # Allow emoray builds on a VM other than sdc-multiarch/13.3.1.
 NODE_PREBUILT_IMAGE=b4bdc598-8939-11e3-bea4-8341f6861379
 ifeq ($(shell uname -s),SunOS)
diff --git a/README.md b/README.md
index 1cdd83f..81e657a 100644
--- a/README.md
+++ b/README.md
@@ -5,7 +5,7 @@
 -->
 
 <!--
-    Copyright (c) 2014, Joyent, Inc.
+    Copyright (c) 2016, Joyent, Inc.
 -->
 
 # electric-moray
@@ -14,6 +14,61 @@ This repository is part of the Joyent Manta project.  For contribution
 guidelines, issues, and general documentation, visit the main
 [Manta](http://github.com/joyent/manta) project page.
 
-Node-based service that provides the same interface as
+electric-moray is a Node-based service that provides the same interface as
 [Moray](https://github.com/joyent/moray), but which directs requests to one or
 more Moray+Manatee shards based on hashing of the Moray key.
+
+
+# Building and running
+
+To run your own electric-moray from a copy of this repository, you'll want:
+
+* a Manta deployment, which includes at least one metadata shard of Moray and
+  Manatee,
+* an electric-moray configuration file, and
+* an electric-moray consistent hash ring configuration.
+
+To point electric-moray at your existing deployment, you'll want to make sure
+that the nameservers in your environment include the nameservers for your Manta
+deployment.
+
+The easiest way to obtain a working configuration file and hash ring
+configuration is to copy them from one of the electric-moray zones in your
+existing Manta deployment:
+
+* configuration file: /opt/smartdc/electric-moray/etc/config.json.  **For local
+  development, it's recommended that you remove the "syslog" block from the
+  configuration file so that logs are emitted to stderr rather than syslog.**
+* hash ring: /electric-moray/chash/leveldb-2021
+
+In a single-server deployment (as is typically used for testing), you can use
+`cp -a` in the global zone to copy these from the electric-moray zone to your
+test zone.
+
+Once you've got these pieces in place, install the dependencies:
+
+    $ make
+
+update your path:
+
+    $ source env.sh
+
+and run electric-moray with something like this:
+
+    $ node ./main.js -f /path/to/config.json -r /path/to/hash/ring -p 2020 \
+        2>&1 | bunyan
+
+For example, if the configuration file and hash ring were copied to your
+electric-moray workspace, you'd use:
+
+    $ node ./main.js -f ./config.json -r ./leveldb-2021 -p 2020 2>&1 | bunyan
+
+
+# Testing
+
+First, make sure you're running a local copy of electric-moray as described
+above.  Then, run the test suite:
+
+    $ make test
+
+This assumes that an electric-moray server is running on localhost port 2020.
diff --git a/env.sh b/env.sh
index 67d142a..8fc072c 100644
--- a/env.sh
+++ b/env.sh
@@ -5,10 +5,8 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2016, Joyent, Inc.
 #
 
 export PATH=$PWD/build/node/bin:$PWD/node_modules/.bin:node_modules/moray/bin:$PATH
-
-alias electric-moray='node main.js -f ./etc/config.coal.json -r ./etc/coal.ring.json -v 2>&1 | bunyan'
 alias npm='node `which npm`'
diff --git a/lib/index.js b/lib/index.js
index dc087ca..67c2c58 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -5,11 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-/*
- * A brief overview of this source file: what is its purpose.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var server = require('./server');
diff --git a/lib/server.js b/lib/server.js
index dad0b47..7975cf5 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -232,6 +232,10 @@ function getBucket(options) {
                     rbucket.post = JSON.stringify(rbucket.post);
                     rbucket.options = JSON.stringify(rbucket.options);
                     rbucket.mtime = JSON.stringify(rbucket.mtime.toString());
+                    if (rbucket.hasOwnProperty('reindex_active')) {
+                        rbucket.reindex_active = JSON.stringify(
+                            rbucket.reindex_active);
+                    }
 
                     res.end(rbucket);
                 }
@@ -735,6 +739,7 @@ function createClient(options, callback) {
             }, 'creating moray client');
 
             var client = moray_client.createClient({
+                unwrapErrors: true,
                 log: options.log.child({
                     component: 'moray-client-' + pnodeUrl.hostname
                 }),
@@ -745,12 +750,6 @@ function createClient(options, callback) {
             clientMap[pnode] = client;
             clientArray.push(client);
 
-            client.on('error', function (err2) {
-                // not much more to do because the moray client should take
-                // care of reconnecting, etc.
-                log.error(err2, 'moray client error');
-            });
-
             if (clientArray.length === pnodes.length) {
                 // write ready cookie when clients have connected
                 log.info('all moray clients instantiated writing ready cookie');
diff --git a/main.js b/main.js
index 57badb9..96dc0bb 100644
--- a/main.js
+++ b/main.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var fs = require('fs');
@@ -17,7 +17,6 @@ var bunyan = require('bunyan');
 var clone = require('clone');
 var getopt = require('posix-getopt');
 var extend = require('xtend');
-var panic = require('panic');
 
 var app = require('./lib');
 
@@ -184,9 +183,4 @@ function run(options) {
             process.exit(0);
         });
     }
-
-    panic.enablePanicOnCrash({
-        'skipDump': true,
-        'abortOnPanic': true
-    });
 })();
diff --git a/package.json b/package.json
index dde487a..85792fb 100644
--- a/package.json
+++ b/package.json
@@ -18,12 +18,11 @@
         "fast": "0.3.8",
         "ldapjs": "0.6.3",
         "imgapi-cli": "git+https://github.com/joyent/sdc-imgapi-cli.git#db3efc1",
-        "moray": "git+https://github.com/joyent/node-moray.git#b84ef0e",
+        "moray": "^2.0.0",
         "node-uuid": "1.4.0",
-        "panic": "0.2.1",
-        "posix-getopt": "1.0.0",
-        "vasync": "1.4.3",
-        "verror": "1.3.5",
+        "posix-getopt": "^1.0.0",
+        "vasync": "^1.4.3",
+        "verror": "^1.3.5",
         "xtend": "2.0.6"
     },
     "devDependencies": {
diff --git a/server.js b/server.js
deleted file mode 100644
index aeefef0..0000000
--- a/server.js
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-/*
- * Main entry-point for the Boilerplate API.
- */
-
-var filed = require('filed');
-var restify = require('restify');
-var uuid = require('node-uuid');
-var Logger = require('bunyan');
-
-
-var log = new Logger({
-    name: 'boilerplateapi',
-    level: 'debug',
-    serializers: {
-        err: Logger.stdSerializers.err,
-        req: Logger.stdSerializers.req,
-        res: restify.bunyan.serializers.response
-    }
-});
-
-
-
-var server = restify.createServer({
-    name: 'Boilerplate API',
-    log: log
-});
-
-// TODO: Add usage of the restify auditLog plugin.
-
-
-// '/eggs/...' endpoints.
-var eggs = {}; // My lame in-memory database.
-server.get({path: '/eggs', name: 'ListEggs'}, function (req, res, next) {
-    req.log.info('ListEggs start');
-    var eggsArray = [];
-    Object.keys(eggs).forEach(function (u) { eggsArray.push(eggs[u]); });
-    res.send(eggsArray);
-    return next();
-});
-server.post({path: '/eggs', name: 'CreateEgg'}, function (req, res, next) {
-    var newUuid = uuid();
-    var newEgg = {'uuid': newUuid};
-    eggs[newUuid] = newEgg;
-    res.send(newEgg);
-    return next();
-});
-server.get({path: '/eggs/:uuid', name: 'GetEgg'}, function (req, res, next) {
-    var egg = eggs[req.params.uuid];
-    if (!egg) {
-        return next(new restify.ResourceNotFoundError('No such egg.'));
-    }
-    res.send(egg);
-    return next();
-});
-
-
-// TODO: static serve the docs, favicon, etc.
-//  waiting on https://github.com/mcavage/node-restify/issues/56 for this.
-server.get('/favicon.ico', function (req, res, next) {
-    filed(__dirname + '/docs/media/img/favicon.ico').pipe(res);
-    next();
-});
-
-
-server.listen(8080, function () {
-    log.info({url: server.url}, '%s listening', server.name);
-});
diff --git a/smf/manifests/electric-moray.xml.in b/smf/manifests/electric-moray.xml.in
index 998e323..eebdad5 100644
--- a/smf/manifests/electric-moray.xml.in
+++ b/smf/manifests/electric-moray.xml.in
@@ -44,7 +44,7 @@
         <exec_method
             type="method"
             name="start"
-            exec="node main.js -f etc/config.json -r %{electric-moray/ring-location} -p %{electric-moray/port} &amp;"
+            exec="node --abort-on-uncaught-exception main.js -f etc/config.json -r %{electric-moray/ring-location} -p %{electric-moray/port} &amp;"
             timeout_seconds="30">
             <method_context working_directory="/opt/smartdc/electric-moray">
                 <method_credential user="root" group="nobody" />
diff --git a/test/buckets.test.js b/test/buckets.test.js
index 10b75c3..82c76a2 100644
--- a/test/buckets.test.js
+++ b/test/buckets.test.js
@@ -243,7 +243,6 @@ test('update bucket (versioned not ok 1 -> 0)', function (t) {
         c.updateBucket(b, cfg, function (err2) {
             t.ok(err2);
             if (err2) {
-                t.equal(err2.name, 'VError');
                 t.ok(err2.message);
                 t.ok(err2.ase_errors.length >= 1);
                 err2.ase_errors.forEach(function (err3) {
@@ -280,7 +279,6 @@ test('update bucket (versioned not ok 2 -> 1)', function (t) {
         c.updateBucket(b, cfg, function (err2) {
             t.ok(err2);
             if (err2) {
-                t.equal(err2.name, 'VError');
                 t.ok(err2.message);
                 t.ok(err2.ase_errors.length >= 1);
                 err2.ase_errors.forEach(function (err3) {
@@ -299,7 +297,6 @@ test('create bucket bad index type', function (t) {
     var c = this.client;
     c.createBucket(b, {index: {foo: 'foo'}}, function (err) {
         t.ok(err);
-        t.equal(err.name, 'VError');
         t.ok(err.message);
         t.ok(err.ase_errors.length >= 1);
         err.ase_errors.forEach(function (err2) {
@@ -316,7 +313,6 @@ test('create bucket triggers not function', function (t) {
     var c = this.client;
     c.createBucket(b, {pre: ['foo']}, function (err) {
         t.ok(err);
-        t.equal(err.name, 'VError');
         t.ok(err.message);
         t.ok(err.ase_errors.length >= 1);
         err.ase_errors.forEach(function (err2) {
diff --git a/test/helper.js b/test/helper.js
index 34c924b..d90f354 100644
--- a/test/helper.js
+++ b/test/helper.js
@@ -70,6 +70,7 @@ module.exports = {
 
         createClient: function createClient() {
                 var client = moray.createClient({
+                        unwrapErrors: true,
                         host: (process.env.MORAY_IP || '127.0.0.1'),
                         port: (parseInt(process.env.MORAY_PORT, 10) || 2020),
                         log: module.exports.createLogger()
diff --git a/test/load/load.js b/test/load/load.js
index f4f9c37..7c6e759 100644
--- a/test/load/load.js
+++ b/test/load/load.js
@@ -83,4 +83,4 @@ function main() {
                 for (var i = 0; i < 250; i++)
                         put(1, cb);
         });
-}
\ No newline at end of file
+}
diff --git a/test/load/manta1027.js b/test/load/manta1027.js
deleted file mode 100644
index 9e2e889..0000000
--- a/test/load/manta1027.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-var assert = require('assert');
-var bunyan = require('bunyan');
-var cluster = require('cluster');
-var moray = require('moray');
-
-assert.ok(process.env.MORAY_URL, 'specify MORAY_URL');
-
-var numCPUs = require('os').cpus().length;
-if (cluster.isMaster) {
-        // Fork workers.
-        for (var i = 0; i < numCPUs; i++) {
-                cluster.fork();
-        }
-
-        cluster.on('exit', function (worker, code, signal) {
-                console.log('worker ' + worker.process.pid + ' died');
-        });
-} else {
-        var client = moray.createClient({
-                log: bunyan.createLogger({
-                        level: 'warn',
-                        name: 'manta1027',
-                        stream: process.stdout,
-                        serializers: bunyan.stdSerializers
-                }),
-                url: process.env.MORAY_URL
-        });
-
-        client.once('connect', function () {
-                function put() {
-                        client.putObject('manta', '1027', {}, function (err) {
-                                if (err) {
-                                        console.error(err.stack);
-                                }
-                                put(i);
-                        });
-                }
-
-                var max = parseInt(process.env.MANTA1027_CONCURRENCY || 20, 10);
-                console.log('running...');
-                for (var ii = 0; ii < max; ii++) {
-                        put();
-                }
-        });
-}
-- 
2.21.0

