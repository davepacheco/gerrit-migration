{"project":"joyent/moray-test-suite","branch":"master","topic":"MORAY-428","id":"I1cea1a036765b168c2303dff1ef91a4b4e00c394","number":"2649","subject":"MORAY-428 Make it safer to use reindexing buckets Reviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e Reviewed by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e Approved by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e","owner":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"url":"https://cr.joyent.us/2649","commitMessage":"MORAY-428 Make it safer to use reindexing buckets\nReviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e\nReviewed by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e\nApproved by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e\n","createdOn":1506373003,"lastUpdated":1507784988,"open":false,"status":"MERGED","comments":[{"timestamp":1506373003,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 1."},{"timestamp":1506373013,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1506373019,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Topic set to MORAY-428"},{"timestamp":1506726907,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 1:\n\n(9 comments)"},{"timestamp":1506737111,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 2."},{"timestamp":1506737116,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1506737154,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 2:\n\n(9 comments)"},{"timestamp":1506737433,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1507226204,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1507596105,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 3."},{"timestamp":1507596110,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1507685063,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 4: Patch Set 3 was rebased"},{"timestamp":1507685073,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4:\n\n\"make check\" passed ok"},{"timestamp":1507749425,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 4: Code-Review+1 Integration-Approval+1"},{"timestamp":1507755579,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Uploaded patch set 5: Commit message was updated."},{"timestamp":1507784988,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Cody Peter Mello"}],"currentPatchSet":{"number":"5","revision":"1cea1a036765b168c2303dff1ef91a4b4e00c394","parents":["6681ea22d9f1d2086422b81f3691b2c954b51073"],"ref":"refs/changes/49/2649/5","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1507755579,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1507596110,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507749425,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1507749425,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"SUBM","value":"1","grantedOn":1507784988,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"test/buckets.test.js","type":"MODIFIED","insertions":435,"deletions":0},{"file":"test/findobjects-requireindexes.test.js","type":"MODIFIED","insertions":6,"deletions":-5}],"sizeInsertions":441,"sizeDeletions":-5},"patchSets":[{"number":"1","revision":"2244d2c373fb4d41fcb981b0e028c5a0fcf4823c","parents":["825ec0d3b3dea786d85f11eadf831051f611ef77"],"ref":"refs/changes/49/2649/1","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1506373003,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1506373013,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"test/buckets.test.js","line":154,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Would this delete any previously set bucket during a previous test?"},{"file":"test/buckets.test.js","line":154,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"\u0027b\u0027 is a unique value for each of the top-level tests. So the \u0027b\u0027 variable here will always reference a new bucket that doesn\u0027t exist yet."},{"file":"test/buckets.test.js","line":248,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Do you mind adding a comment that explains what the purpose of this test is? I don\u0027t think I understand why it\u0027s necessary."},{"file":"test/buckets.test.js","line":248,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Done"},{"file":"test/buckets.test.js","line":249,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"\"doNothing\" seems to be a confusing name when reading call sites, because even if we expect this to \"do nothing\", it seems it does not do nothing, at least it sends a RPC to moray."},{"file":"test/buckets.test.js","line":249,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I\u0027ve renamed this to doNeedlessReindex()."},{"file":"test/buckets.test.js","line":335,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Does that mean that the behavior is the same whether onlineReindexing is set to true or not? Or that the default is true? What if we set it to false?"},{"file":"test/buckets.test.js","line":335,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"The server-side behaviour is the same whether or not the option is sent. The difference is in whether or not the client expects to receive the metadata record. I have this test so that that code gets exercised, and so that I could verify that it failed when I didn\u0027t send \"onlineReindexing\" back in the handled options array."},{"file":"test/buckets.test.js","line":343,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What would happen before again? I don\u0027t remember."},{"file":"test/buckets.test.js","line":343,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"With putObject() nothing bad would happen, since the value would get inserted into the column with the latest bucket version in _rver. I put it here for completeness to demonstrate and verify that it behaves as expected."},{"file":"test/buckets.test.js","line":407,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same question as before: what\u0027s the difference between passing onlineReindexing: true and not passing it? Or is it that the default is true? Then what happens when it\u0027s set to false?"},{"file":"test/buckets.test.js","line":407,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Same as above. This is to make sure that the code path for handling the metadata record gets tested when it\u0027s sent."},{"file":"test/buckets.test.js","line":410,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is it to double check that indeed the bucket is reindexing, or is it that that test was missing from MORAY-104?"},{"file":"test/buckets.test.js","line":410,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This effectively duplicates a subset of the testing added in MORAY-104. This is here just to further test and demonstrate how to safely search a reindexing bucket."},{"file":"test/buckets.test.js","line":569,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What\u0027s the purpose of this test?"},{"file":"test/buckets.test.js","line":569,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This shows that there is nothing to reindex (processed\u003d0), since we deleted the object. I\u0027ve updated the message to hopefully clarify this."},{"file":"test/findobjects-requireindexes.test.js","line":254,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"I\u0027d like to echo my comment at https://cr.joyent.us/#/c/2651/2/lib/objects/find.js@208. It seems that could be changing behavior in such a way that would be surprising for users? I would think we\u0027d require passing \"onlineReindexing: true\" for this to take effect."},{"file":"test/findobjects-requireindexes.test.js","line":254,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Services that wait until their buckets are fully reindexed before servicing requests will be fine. Those that don\u0027t will only be affected by this change if they try to perform queries on fields that are currently being reindexed. In that case, the query will fail to pick up some objects, since it won\u0027t see the value of the reindexing field.\n\nJulien and I talked a bit about this in PM. I\u0027m going to comment further on this after I\u0027ve had a chance to look into what VMAPI and UFDS do with reindexing on Monday."},{"file":"test/findobjects-requireindexes.test.js","line":254,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"So, I was just thinking about this some more: consumers would have a hard time relying on the behaviour that exists today, unless they _never_ reindexed after an update. If they had any reindexing operations going on concurrently while they serviced requests, then the objects could have their column fixed at any moment. So the new behaviour should be indistinguishable from the old one (unless you never, ever call reindexObjects)."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"test/buckets.test.js","type":"MODIFIED","insertions":425,"deletions":0},{"file":"test/findobjects-requireindexes.test.js","type":"MODIFIED","insertions":6,"deletions":-5}],"sizeInsertions":431,"sizeDeletions":-5},{"number":"2","revision":"4de5d02f89620343f862ed41cbbd763b5335ccc2","parents":["825ec0d3b3dea786d85f11eadf831051f611ef77"],"ref":"refs/changes/49/2649/2","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1506737111,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1506737116,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507226204,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"test/buckets.test.js","type":"MODIFIED","insertions":433,"deletions":0},{"file":"test/findobjects-requireindexes.test.js","type":"MODIFIED","insertions":6,"deletions":-5}],"sizeInsertions":439,"sizeDeletions":-5},{"number":"3","revision":"59e13d3f1aceb304a4c91adaa5ef7523acd7e02d","parents":["825ec0d3b3dea786d85f11eadf831051f611ef77"],"ref":"refs/changes/49/2649/3","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1507596105,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1507596110,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"test/buckets.test.js","type":"MODIFIED","insertions":435,"deletions":0},{"file":"test/findobjects-requireindexes.test.js","type":"MODIFIED","insertions":6,"deletions":-5}],"sizeInsertions":441,"sizeDeletions":-5},{"number":"4","revision":"71bcdf423b641a28988141816a7e36414da67436","parents":["6681ea22d9f1d2086422b81f3691b2c954b51073"],"ref":"refs/changes/49/2649/4","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1507685063,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1507596110,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507749425,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1507749425,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"test/buckets.test.js","type":"MODIFIED","insertions":435,"deletions":0},{"file":"test/findobjects-requireindexes.test.js","type":"MODIFIED","insertions":6,"deletions":-5}],"sizeInsertions":441,"sizeDeletions":-5},{"number":"5","revision":"1cea1a036765b168c2303dff1ef91a4b4e00c394","parents":["6681ea22d9f1d2086422b81f3691b2c954b51073"],"ref":"refs/changes/49/2649/5","uploader":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"createdOn":1507755579,"author":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"SUBM","value":"1","grantedOn":1507784988,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1507596110,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1507749425,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1507749425,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"test/buckets.test.js","type":"MODIFIED","insertions":435,"deletions":0},{"file":"test/findobjects-requireindexes.test.js","type":"MODIFIED","insertions":6,"deletions":-5}],"sizeInsertions":441,"sizeDeletions":-5}],"allReviewers":[{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},{"name":"Kody A Kantor","email":"kody.kantor@joyent.com","username":"KodyKantor"},{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}]}