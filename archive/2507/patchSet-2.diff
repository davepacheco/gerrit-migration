From c221db4b344f63587471093bb5ed24014200869d Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Wed, 6 Sep 2017 22:42:40 +0000
Subject: [PATCH] NAPI-430 Integration tests sometimes fail to get the proper
 Triton admin user's UUID

---
 lib/config.js                          |  5 ++--
 test/config.json                       |  2 ++
 test/integration/fabrics.test.js       | 14 +----------
 test/integration/helpers.js            | 35 --------------------------
 test/integration/ips.test.js           | 14 ++---------
 test/integration/network-owner.test.js | 16 +++---------
 test/integration/networks.test.js      | 18 +++----------
 test/integration/nics.test.js          | 15 ++---------
 test/integration/provision.test.js     | 15 +++--------
 test/lib/config.js                     |  3 +++
 10 files changed, 22 insertions(+), 115 deletions(-)

diff --git a/lib/config.js b/lib/config.js
index a220ed6..351dcce 100644
--- a/lib/config.js
+++ b/lib/config.js
@@ -29,7 +29,7 @@ function validateConfig(config) {
     assert.optionalNumber(config.maxHttpSockets,
             'maxHttpSockets (maximum open connections)');
     assert.number(config.port, 'port (port number)');
-    assert.string(config.ufdsAdminUuid, 'ufdsAdminUuid (admin user uuid)');
+    assert.uuid(config.ufdsAdminUuid, 'ufdsAdminUuid (admin user uuid)');
 
     assert.object(config.moray, 'moray (moray config section)');
     assert.string(config.moray.host, 'moray.host (moray IP)');
@@ -58,5 +58,6 @@ function loadConfig(configFile) {
 
 
 module.exports = {
-    load: loadConfig
+    load: loadConfig,
+    validate: validateConfig
 };
diff --git a/test/config.json b/test/config.json
index 55f60b5..5c3bc7f 100644
--- a/test/config.json
+++ b/test/config.json
@@ -1,6 +1,8 @@
 {
   "//": "minimal NAPI config needed for unit tests",
 
+  "datacenter": "unit-test",
+  "macOUI": "010203",
   "overlay": {
       "enabled": true,
       "defaultOverlayMTU": 1400,
diff --git a/test/integration/fabrics.test.js b/test/integration/fabrics.test.js
index b8c2228..cc2f31f 100644
--- a/test/integration/fabrics.test.js
+++ b/test/integration/fabrics.test.js
@@ -38,7 +38,7 @@ var extend = mod_jsprim.mergeObjects;
 
 
 
-var ADMIN_OWNER;    // Loaded in setup below
+var ADMIN_OWNER = config.server.ufdsAdminUuid;
 var CREATED = {};
 var OWNERS = [
     mod_uuid.v4(),
@@ -224,19 +224,7 @@ function checkEventLog(t, opts) {
 
 
 test('setup', function (t) {
-
-    t.test('load UFDS admin UUID', function (t2) {
-        h.loadUFDSadminUUID(t2, function (adminUUID) {
-            if (adminUUID) {
-                ADMIN_OWNER = adminUUID;
-            }
-
-            return t2.end();
-        });
-    });
-
     t.test('create default nic tag', mod_nic_tag.createDefault);
-
 });
 
 
diff --git a/test/integration/helpers.js b/test/integration/helpers.js
index a173b12..eadfc04 100644
--- a/test/integration/helpers.js
+++ b/test/integration/helpers.js
@@ -29,7 +29,6 @@ var vasync = require('vasync');
 
 
 
-var ADMIN_UUID;
 // 198.18.0.0/15 is supposed to be used for benchmarking network devices,
 // according to RFC 2544, and therefore shouldn't be used for anything:
 var TEST_NET_FMT = '198.18.%d.%d';
@@ -353,30 +352,6 @@ function doneWithError(t, err, desc) {
 }
 
 
-/**
- * Load the UFDS admin UUID - cheat by grabbing the first owner_uuid of the
- * admin network.
- */
-function loadUFDSadminUUID(t, callback) {
-    var client = createNAPIclient(t);
-
-    client.getNetwork('admin', function (err, res) {
-        if (common.ifErr(t, err, 'get admin network')) {
-            return t.end();
-        }
-
-        ADMIN_UUID = res.owner_uuids[0];
-        t.ok(ADMIN_UUID, 'admin UUID: ' + ADMIN_UUID);
-
-        if (callback) {
-            return callback(ADMIN_UUID);
-        }
-
-        return t.end();
-    });
-}
-
-
 /**
  * Asserts that substr is a substring or match for str. Similar to tap's
  * similar() (that's a little test humour for you).
@@ -426,20 +401,10 @@ module.exports = {
     get lastNetPrefix() {
         return fmt(TEST_NET_PFX, NET_NUM - 1);
     },
-    loadUFDSadminUUID: loadUFDSadminUUID,
     randomMAC: common.randomMAC,
     reqOpts: common.reqOpts,
     saveTimestamps: saveTimestamps,
     similar: similar,
     timestampsAdvance: timestampsAdvance,
-    get ufdsAdminUuid() {
-        if (!ADMIN_UUID) {
-            throw new Error(
-                'UFDS admin UUID undefined! ' +
-                'Have you run helpers.loadUFDSadminUUID()?');
-        }
-
-        return ADMIN_UUID;
-    },
     validNetworkParams: validNetworkParams
 };
diff --git a/test/integration/ips.test.js b/test/integration/ips.test.js
index 22ad0fa..86df88c 100644
--- a/test/integration/ips.test.js
+++ b/test/integration/ips.test.js
@@ -15,6 +15,7 @@
 'use strict';
 
 var common = require('../lib/common');
+var config = require('../lib/config');
 var h = require('./helpers');
 var mod_ip = require('../lib/ip');
 var mod_net = require('../lib/net');
@@ -39,7 +40,7 @@ var IPS = {
 var napi = h.createNAPIclient();
 var state = {};
 var uuids = {
-    admin: '',  // set in setup below
+    admin: config.server.ufdsAdminUuid,
     a: '564d69b1-a178-07fe-b36f-dfe5fa3602e2'
 };
 
@@ -50,17 +51,6 @@ var uuids = {
 
 
 test('setup', function (t) {
-    t.test('load UFDS admin UUID', function (t2) {
-        h.loadUFDSadminUUID(t2, function (adminUUID) {
-            if (adminUUID) {
-                uuids.admin = adminUUID;
-            }
-
-            return t2.end();
-        });
-    });
-
-
     t.test('create test nic tag', function (t2) {
         h.createNicTag(t2, napi, state);
     });
diff --git a/test/integration/network-owner.test.js b/test/integration/network-owner.test.js
index f4f0902..f5d9e72 100644
--- a/test/integration/network-owner.test.js
+++ b/test/integration/network-owner.test.js
@@ -15,6 +15,7 @@
 'use strict';
 
 var common = require('../lib/common');
+var config = require('../lib/config');
 var constants = require('../../lib/util/constants');
 var h = require('./helpers');
 var mod_err = require('../../lib/util/errors');
@@ -41,7 +42,6 @@ var state = {
     noOwnerPools: [],
     testName: 'network-owner'
 };
-var ufdsAdminUuid;  // Loaded in setup below
 var noNicMACs = [];
 
 
@@ -149,21 +149,11 @@ function deleteNetworkPool(t, name, callback) {
 test('setup', function (t) {
     t.ok(owner, 'owner=' + owner);
     t.ok(owner2, 'owner2=' + owner2);
+    t.ok(config.server.ufdsAdminUuid, 'admin=' + config.server.ufdsAdminUuid);
 
     t.test('create test nic tag', function (t2) {
         h.createNicTag(t2, napi, state);
     });
-
-    t.test('load UFDS admin UUID', function (t2) {
-        h.loadUFDSadminUUID(t2, function (adminUUID) {
-            if (adminUUID) {
-                ufdsAdminUuid = adminUUID;
-            }
-
-            t2.ok(ufdsAdminUuid, 'ufdsAdminUuid=' + ufdsAdminUuid);
-            return t2.end();
-        });
-    });
 });
 
 
@@ -278,7 +268,7 @@ test('provision: invalid owner', function (t) {
 
 
 test('provision: admin owner_uuid', function (t) {
-    checkProvisionSuccess(ufdsAdminUuid, t);
+    checkProvisionSuccess(config.server.ufdsAdminUuid, t);
 });
 
 
diff --git a/test/integration/networks.test.js b/test/integration/networks.test.js
index 21c3677..093002e 100644
--- a/test/integration/networks.test.js
+++ b/test/integration/networks.test.js
@@ -14,6 +14,7 @@
 
 'use strict';
 
+var config = require('../lib/config');
 var constants = require('../../lib/util/constants');
 var fmt = require('util').format;
 var h = require('./helpers');
@@ -41,25 +42,12 @@ var NETS = [
     })
 ];
 var state = { };
-var ufdsAdminUuid;  // Loaded in setup below
 
 
 
 // --- Setup
 
 
-
-test('load UFDS admin UUID', function (t) {
-    h.loadUFDSadminUUID(t, function (adminUUID) {
-        if (adminUUID) {
-            ufdsAdminUuid = adminUUID;
-        }
-
-        return t.end();
-    });
-});
-
-
 test('create test nic tag', function (t) {
     h.createNicTag(t, napi, state);
 });
@@ -158,10 +146,10 @@ test('validate IPs created with network', function (t) {
     var ips = [ '192.0.2.1', '192.0.2.2'].reduce(function (arr, i) {
             arr.push({
                 ip: i,
-                belongs_to_uuid: ufdsAdminUuid,
+                belongs_to_uuid: config.server.ufdsAdminUuid,
                 belongs_to_type: 'other',
                 network_uuid: state.network.uuid,
-                owner_uuid: ufdsAdminUuid,
+                owner_uuid: config.server.ufdsAdminUuid,
                 reserved: true,
                 free: false
             });
diff --git a/test/integration/nics.test.js b/test/integration/nics.test.js
index 4427d57..803b287 100644
--- a/test/integration/nics.test.js
+++ b/test/integration/nics.test.js
@@ -14,6 +14,7 @@
 
 'use strict';
 
+var config = require('../lib/config');
 var constants = require('../../lib/util/constants');
 var h = require('./helpers');
 var mod_err = require('../../lib/util/errors');
@@ -39,7 +40,7 @@ var state = {
     ts: {}
 };
 var uuids = {
-    admin: '',
+    admin: config.server.ufdsAdminUuid,
     a: '564d69b1-a178-07fe-b36f-dfe5fa3602e2',
     b: '91abd897-566a-4ae5-80d2-1ba103221bbc',
     c: 'e8e2deb9-2d68-4e4e-9aa6-4962c879d9b1',
@@ -80,18 +81,6 @@ test('setup', function (t) {
 });
 
 
-test('load UFDS admin UUID', function (t) {
-    h.loadUFDSadminUUID(t, function (adminUUID) {
-        if (adminUUID) {
-            uuids.admin = adminUUID;
-        }
-
-        return t.end();
-    });
-});
-
-
-
 // --- Tests
 
 
diff --git a/test/integration/provision.test.js b/test/integration/provision.test.js
index 33a3377..6228cec 100644
--- a/test/integration/provision.test.js
+++ b/test/integration/provision.test.js
@@ -16,6 +16,7 @@
 
 var assert = require('assert-plus');
 var clone = require('clone');
+var config = require('../lib/config');
 var constants = require('../../lib/util/constants');
 var h = require('./helpers');
 var log = require('../lib/log');
@@ -43,7 +44,7 @@ var state = {
     nics: []
 };
 var uuids = {
-    admin: '',  // Loaded in setup below
+    admin: config.server.ufdsAdminUuid,
     a: '564d69b1-a178-07fe-b36f-dfe5fa3602e2',
     b: '91abd897-566a-4ae5-80d2-1ba103221bbc',
     c: 'e8e2deb9-2d68-4e4e-9aa6-4962c879d9b1',
@@ -337,7 +338,7 @@ function listIPs(t, opts) {
         t.deepEqual(res.map(function (i) {
             return i.belongs_to_uuid;
         }).sort(), d.belongsToExp.concat(
-            [h.ufdsAdminUuid, undefined, undefined]).sort(),
+            [config.server.ufdsAdminUuid, undefined, undefined]).sort(),
             'All belongs_to_uuids returned');
 
         return t.end();
@@ -580,16 +581,6 @@ function deleteAll(t) {
 
 
 test('setup', function (t) {
-    t.test('load UFDS admin UUID', function (t2) {
-        h.loadUFDSadminUUID(t2, function (adminUUID) {
-            if (adminUUID) {
-                uuids.admin = adminUUID;
-            }
-
-            return t2.end();
-        });
-    });
-
     t.test('nic tag', function (t2) {
         mod_tag.create(t2, { name: '<generate>', state: state });
     });
diff --git a/test/lib/config.js b/test/lib/config.js
index e4b448f..228929a 100644
--- a/test/lib/config.js
+++ b/test/lib/config.js
@@ -17,6 +17,7 @@
 var fmt = require('util').format;
 var fs = require('fs');
 var jsprim = require('jsprim');
+var validateConfig = require('../../lib/config').validate;
 
 
 
@@ -65,5 +66,7 @@ if (!jsprim.hasKey(CONFIG.server, 'moray')) {
 
 CONFIG.moray = jsprim.deepCopy(CONFIG.server.moray);
 
+validateConfig(CONFIG.server);
+
 
 module.exports = CONFIG;
-- 
2.21.0

