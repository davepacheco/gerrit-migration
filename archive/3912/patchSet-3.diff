commit 866f732d25db2865aa946859d7bb30a06b87d5a2 (refs/changes/12/3912/3)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2018-05-30T22:07:23+00:00 (1 year, 4 months ago)
    
    MANATEE-404 Want "cueball" resolver for Manatee Primary IP
    MANATEE-394 Clean up node-manatee package dependencies

diff --git a/.gitmodules b/.gitmodules
index acab38f..451ccc2 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -1,6 +1,6 @@
 [submodule "deps/javascriptlint"]
 	path = deps/javascriptlint
-	url = https://github.com/davepacheco/javascriptlint.git
+	url = https://github.com/joyent/javascriptlint.git
 [submodule "deps/jsstyle"]
 	path = deps/jsstyle
-	url = https://github.com/davepacheco/jsstyle
+	url = https://github.com/joyent/jsstyle
diff --git a/deps/javascriptlint b/deps/javascriptlint
index e1bd0ab..ad52812 160000
--- a/deps/javascriptlint
+++ b/deps/javascriptlint
@@ -1 +1 @@
-Subproject commit e1bd0abfd424811af469d1ece3af131d95443924
+Subproject commit ad52812e77bdfb1e90fb71a1201adb2b665a27e6
diff --git a/deps/jsstyle b/deps/jsstyle
index 07d4f68..52dc973 160000
--- a/deps/jsstyle
+++ b/deps/jsstyle
@@ -1 +1 @@
-Subproject commit 07d4f68251063be6496a42dd00a7f5bacd65c5e4
+Subproject commit 52dc973cf64da11834eca7cf46ebce8518e3ee88
diff --git a/manatee.js b/manatee.js
index a8ac483..4007c8e 100644
--- a/manatee.js
+++ b/manatee.js
@@ -17,9 +17,12 @@
 var assert = require('assert-plus');
 var backoff = require('backoff');
 var bunyan = require('bunyan');
+var mod_crypto = require('crypto');
+var mod_mooremachine = require('mooremachine');
+var mod_net = require('net');
+var mod_url = require('url');
 var once = require('once');
 var util = require('util');
-var uuid = require('uuid');
 var vasync = require('vasync');
 var verror = require('verror');
 var zkClient = require('joyent-zookeeper-client');
@@ -108,6 +111,9 @@ util.inherits(Manatee, EventEmitter);
 module.exports = {
     createClient: function createClient(options) {
         return (new Manatee(options));
+    },
+    createPrimaryResolver: function createPrimaryResolver(options) {
+        return (new ManateePrimaryResolver(options));
     }
 };
 
@@ -556,4 +562,156 @@ Manatee.prototype._clusterStateToUrls = function clusterStateToUrls(cs) {
     return (urls);
 };
 
-/** #@- */
+
+/*
+ *
+ */
+function ManateePrimaryResolver(options) {
+    assert.object(options, 'options');
+    assert.object(options.log, 'options.log');
+
+    this.mpr_opts = options;
+    this.mpr_manatee = null;
+    this.mpr_previous = null;
+    this.mpr_primary = null;
+    this.mpr_lastError = null;
+    this.mpr_log = options.log.child({
+        component: 'ManateePrimaryResolver'
+    });
+
+    mod_mooremachine.FSM.call(this, 'stopped');
+}
+util.inherits(ManateePrimaryResolver, mod_mooremachine.FSM);
+
+ManateePrimaryResolver.prototype.state_stopped = function (S) {
+    S.on(this, 'startAsserted', function () {
+        S.gotoState('starting');
+    });
+};
+
+ManateePrimaryResolver.prototype.state_starting = function (S) {
+    var self = this;
+
+    if (this.mpr_manatee === null) {
+        this.mpr_manatee = new Manatee(this.mpr_opts);
+    }
+
+
+    S.on(this.mpr_manatee, 'ready', function () {
+        S.gotoState('running');
+    });
+
+    S.on(this.mpr_manatee, 'error', function (err) {
+        self.mpr_log.warn(err, 'manatee client emitted error');
+        self.mpr_lastError = err;
+        S.gotoState('failed');
+    });
+};
+
+ManateePrimaryResolver.prototype.state_running = function (S) {
+    var self = this;
+
+    S.on(self.mpr_manatee, 'topology', function (urls) {
+        self.mpr_log.trace({
+            urls: urls
+        }, 'manatee topology changed');
+
+        var primary = mod_url.parse(urls[0]);
+
+        assert.strictEqual(primary.protocol, 'tcp:');
+        assert.ok(
+            mod_net.isIPv4(primary.hostname) ||
+            mod_net.isIPv6(primary.hostname));
+
+        self.diffPrimaryAndEmit({
+            name: 'primary',
+            address: primary.hostname,
+            port: parseInt(primary.port, 10)
+        });
+    });
+
+    S.on(self.mpr_manatee, 'error', function (err) {
+        self.mpr_log.warn(err, 'manatee client emitted error');
+        self.mpr_lastError = err;
+        S.gotoState('failed');
+    });
+
+    S.on(self, 'stopAsserted', function () {
+        S.gotoState('stopping');
+    });
+};
+
+ManateePrimaryResolver.prototype.state_stopping = function (S) {
+    S.on(this.mpr_manatee, 'close', function () {
+        S.gotoState('stopped');
+    });
+
+    this.mpr_manatee.close();
+    this.mpr_manatee = null;
+};
+
+ManateePrimaryResolver.prototype.state_failed = function (S) {
+    this.mpr_previous = this.mpr_primary;
+    this.mpr_primary = null;
+
+    S.timeout(1000, function () {
+        S.gotoState('starting');
+    });
+
+    S.on(this, 'stopAsserted', function () {
+        S.gotoState('stopped');
+    });
+};
+
+ManateePrimaryResolver.prototype.start = function () {
+    assert.ok(this.isInState('stopped'));
+    this.emit('startAsserted');
+};
+
+ManateePrimaryResolver.prototype.stop = function () {
+    assert.ok(this.isInState('running') || this.isInState('failed'));
+    this.emit('stopAsserted');
+};
+
+ManateePrimaryResolver.prototype.count = function () {
+    return (this.mpr_primary === null ? 0 : 1);
+};
+
+ManateePrimaryResolver.prototype.getLastError = function () {
+    return (this.mpr_lastError);
+};
+
+ManateePrimaryResolver.prototype.list = function () {
+    var backends = {};
+    if (this.mpr_primary !== null) {
+        backends[this.mpr_primary.key] = this.mpr_primary;
+    }
+    return backends;
+};
+
+ManateePrimaryResolver.prototype.diffPrimaryAndEmit = function (np) {
+    var op = this.mpr_primary;
+
+    if (op !== null &&
+        op.name === np.name &&
+        op.address === np.address &&
+        op.port === np.port) {
+        return;
+    }
+
+    np.key = mod_crypto.randomBytes(9).toString('base64');
+
+    this.mpr_previous = op;
+    this.mpr_primary = np;
+
+    this.mpr_log.info({
+        oldPrimary: this.mpr_previous,
+        newPrimary: this.mpr_primary
+    }, 'Manatee primary has changed');
+
+    this.emit('added', np.key, np);
+
+    if (op !== null) {
+        this.emit('removed', op.key);
+    }
+};
diff --git a/package.json b/package.json
index 5746cca..59bcb18 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "author": "Yunong Xiao <yunong@joyent.com>",
     "name": "node-manatee",
-    "version": "1.0.0",
+    "version": "1.1.0",
     "private": true,
     "description": "Manatee Client",
     "repository": {
@@ -15,16 +15,12 @@
     "dependencies": {
         "assert-plus": "0.1.0",
         "backoff": "1.2.0",
-        "bunyan": "0.21.3",
-        "node-uuid": "1.3.3",
+        "bunyan": "1.8.12",
         "joyent-zookeeper-client": "0.2.2",
+        "mooremachine": "2.2.1",
         "once": "1.3.1",
-        "pg": "3.0.3",
-        "posix-getopt": "1.0.0",
-        "sprintf": "0.1.0",
-        "uuid": "1.4.1",
-        "vasync": "1.4.2",
-        "verror": "1.3.3"
+        "vasync": "1.6.4",
+        "verror": "1.10.0"
     },
     "devDependencies": {
         "tape": "4.2.2"
