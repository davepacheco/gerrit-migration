From 35ae9db8c2cfd6e4e6322f0e8bf55f35b038a81b Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Fri, 22 Sep 2017 16:28:47 -0700
Subject: [PATCH] DOCKER-1109 Unable to find docker images when image name
 contains a port

---
 lib/backends/sdc/images.js          |  5 ++---
 package.json                        |  2 +-
 test/integration/api-images.test.js | 30 +++++++++++++++++++++++++++++
 3 files changed, 33 insertions(+), 4 deletions(-)

diff --git a/lib/backends/sdc/images.js b/lib/backends/sdc/images.js
index 8692424..c78e266 100644
--- a/lib/backends/sdc/images.js
+++ b/lib/backends/sdc/images.js
@@ -519,7 +519,7 @@ function _imgFromNameOrConfigDigest(opts, callback) {
     var imgIsGone = false;
     var log = opts.log;
     var name = opts.rat.localName;
-    var nameIsDigest;
+    var nameIsDigest = false;
     var tag = opts.rat.tag;
 
     // When a digest is given by itself, like:
@@ -528,11 +528,10 @@ function _imgFromNameOrConfigDigest(opts, callback) {
     // This problem is corrected here, a digest lookup can be made.
     if (name === 'sha256' && tag && tag.match(/^[0-9a-f]+$/)) {
         name = format('%s:%s', name, tag);
+        nameIsDigest = true;
         tag = '';
     }
 
-    nameIsDigest = (name.indexOf(':') >= 0);
-
     log.debug({localName: name, tag: tag, nameIsDigest: nameIsDigest},
         '_imgFromNameV2');
 
diff --git a/package.json b/package.json
index b8324d7..24471a6 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "sdc-docker",
-  "version": "0.4.5",
+  "version": "0.4.6",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/integration/api-images.test.js b/test/integration/api-images.test.js
index 2899b02..d850e36 100644
--- a/test/integration/api-images.test.js
+++ b/test/integration/api-images.test.js
@@ -27,6 +27,8 @@ var ALICE;
 var BOB;
 var DOCKER_ALICE;
 var DOCKER_BOB;
+var IMAGE_NAME_WITH_PORT = 'registry-1.docker.io:443/'
+    + 'joyentunsupported/test-nginx:latest';
 var STATE = {
     log: require('../lib/log')
 };
@@ -185,4 +187,32 @@ test('docker images', function (tt) {
             t.end();
         });
     });
+
+    tt.test('pull image name containing port', function (t) {
+        h.ensureImage({
+            name: IMAGE_NAME_WITH_PORT,
+            user: ALICE
+        }, function (err) {
+            console.log('ubuntu pull err: ', err);
+            t.error(err, 'should be no error pulling image');
+            t.end();
+        });
+    });
+
+    tt.test('inspect image name containing port', function (t) {
+        var url = '/images/' + IMAGE_NAME_WITH_PORT + '/json';
+        DOCKER_ALICE.get(url, function (err2, req2, res2) {
+            t.error(err2, 'get image name containing port');
+            t.end();
+        });
+    });
+
+    tt.test('delete image name containing port', function (t) {
+        DOCKER_ALICE.del('/images/' + IMAGE_NAME_WITH_PORT,
+            function ondel(err, req, res) {
+                t.error(err, 'should be no error deleting image');
+                t.end();
+            }
+        );
+    });
 });
-- 
2.21.0

