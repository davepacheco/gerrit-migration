From c6adc0d3c0cd8c6c49379623f548540cb20af06d Mon Sep 17 00:00:00 2001
From: Jerry Jelinek <jerry.jelinek@joyent.com>
Date: Mon, 10 Oct 2016 19:41:38 +0000
Subject: [PATCH] OS-5683 'db2 create db' hangs in LX branded zone

---
 usr/src/lib/brand/lx/lx_brand/common/aio.c | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/usr/src/lib/brand/lx/lx_brand/common/aio.c b/usr/src/lib/brand/lx/lx_brand/common/aio.c
index 81dea317f4..b19502df99 100644
--- a/usr/src/lib/brand/lx/lx_brand/common/aio.c
+++ b/usr/src/lib/brand/lx/lx_brand/common/aio.c
@@ -283,12 +283,13 @@ lx_io_getevents(lx_aio_context_t cid, long min_nr, long nr,
 {
 	port_event_t *list;
 	lx_io_event_t *out;
-	unsigned int nget = min_nr;
+	uint_t nget, max;
 	int rval, i, err;
-	uint32_t max = nr;
 	lx_aio_ctxt_t *ctx = (lx_aio_ctxt_t *)cid;
 
-	if (nr > ctx->lxaio_nevents)
+	/* ctx->lxaio_nevents already validated against lx_aio_max_nr */
+	if (min_nr < 0 || min_nr > ctx->lxaio_nevents ||
+	    nr < 0 || nr > ctx->lxaio_nevents)
 		return (-EINVAL);
 
 	/*
@@ -298,6 +299,18 @@ lx_io_getevents(lx_aio_context_t cid, long min_nr, long nr,
 	if ((list = malloc(nr * sizeof (port_event_t))) == NULL)
 		return (-EINTR);
 
+	/*
+	 * For Linux, the io_getevents() min_nr argument specifies *at least*
+	 * that number of events, but for illumos the port_getn() nget argument
+	 * specifies the *desired* numbers of events. Some applications pass 0
+	 * for min_nr. This will cause port_getn to short-circuit and return
+	 * immediately, so we use a value of 1 in this case. The port_getn()
+	 * function can still return up to max events when nget == 1.
+	 */
+	nget = (min_nr == 0 ? 1 : min_nr);
+
+	max = nr;
+
 	/*
 	 * Grab the lock associated with the context to bump the number of
 	 * waiters.  This is needed in case this context is destroyed while
-- 
2.21.0

