commit 58e84b74a0364429e72804cb9ef161c85d8ea27e (refs/changes/63/5363/1)
Author: David Pacheco <dap@joyent.com>
Date:   2019-01-14T14:37:37-08:00 (9 months ago)
    
    joyent/node-verror#65 tst.multierror.js failure on Node v8 and later

diff --git a/CHANGES.md b/CHANGES.md
index bbb745a..5d2e0c7 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -2,7 +2,7 @@
 
 ## Not yet released
 
-None yet.
+* #65 tst.multierror.js failure on Node v8 and later
 
 ## v1.10.0
 
diff --git a/test/tst.multierror.js b/test/tst.multierror.js
index bc8bac7..a63125d 100644
--- a/test/tst.multierror.js
+++ b/test/tst.multierror.js
@@ -60,23 +60,23 @@ function main()
 	/* errorFromList */
 	mod_assert.throws(function () {
 		console.error(errorFromList());
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /^AssertionError.*: errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList(null));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /^AssertionError.*: errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList({}));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /^AssertionError.*: errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList('asdf'));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /^AssertionError.*: errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList([ new Error(), 17 ]));
-	}, /^AssertionError: errors \(\[object\]\) is required$/);
+	}, /^AssertionError.*: errors \(\[object\]\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorFromList([ new Error(), {} ]));
@@ -95,23 +95,23 @@ function main()
 	/* errorForEach */
 	mod_assert.throws(function () {
 		console.error(errorForEach());
-	}, /^AssertionError: err must be an Error$/);
+	}, /^AssertionError.*: err must be an Error$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach(null));
-	}, /^AssertionError: err must be an Error$/);
+	}, /^AssertionError.*: err must be an Error$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach(err1));
-	}, /^AssertionError: func \(func\) is required$/);
+	}, /^AssertionError.*: func \(func\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach(err1, {}));
-	}, /^AssertionError: func \(func\) is required$/);
+	}, /^AssertionError.*: func \(func\) is required$/);
 
 	mod_assert.throws(function () {
 		console.error(errorForEach({}, function () {}));
-	}, /^AssertionError: err must be an Error$/);
+	}, /^AssertionError.*: err must be an Error$/);
 
 	accum = [];
 	doAccum = function (e) { accum.push(e); };
