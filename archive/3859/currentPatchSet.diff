From c0c2746d63aed6203fce08ca489a0f226a52aa7c Mon Sep 17 00:00:00 2001
From: Mike Zeller <mike@mikezeller.net>
Date: Mon, 30 Apr 2018 16:56:44 +0000
Subject: [PATCH] OS-6904 Want validMacAddress for proptable Reviewed by: Dave
 Eddy <dave.eddy@joyent.com> Reviewed by: Cody Peter Mello
 <cody.mello@joyent.com> Approved by: Cody Peter Mello <cody.mello@joyent.com>

---
 src/vm/man/vmadm.1m.md           | 24 ++++++++++++++----------
 src/vm/node_modules/VM.js        | 14 ++++++++++++++
 src/vm/node_modules/proptable.js |  7 ++++++-
 src/vm/node_modules/utils.js     | 15 ++++++++++++++-
 src/vm/tests/test-create.js      | 27 +++++++++++++++++++++++++++
 5 files changed, 75 insertions(+), 12 deletions(-)

diff --git a/src/vm/man/vmadm.1m.md b/src/vm/man/vmadm.1m.md
index fe8ff157..7747905c 100644
--- a/src/vm/man/vmadm.1m.md
+++ b/src/vm/man/vmadm.1m.md
@@ -1725,21 +1725,25 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     routes:
 
-        This is a key-value object that maps destinations to gateways. These
-        will be set as static routes in the VM. The destinations can be either
-        IPs or subnets in CIDR form. The gateways can either be IP addresses, or
-        can be of the form "nics[0]", which specifies a link-local route on the
-        numbered nic in that VM's nics array (the first nic is 0).  As an
-        example:
+	This is a key-value object that maps destinations to gateways. These
+	will be set as static routes in the VM. The destinations can be either
+	IPs or subnets in CIDR form. The gateways can either be IP addresses,
+	or can be of the form "nics[0]" or "macs[aa:bb:cc:12:34:56]". Using
+	nics[] or macs[] specifies a link-local route. When using nics[] the IP
+	of the numbered nic in that VM's nics array (the first nic is 0) is
+	used. When using macs[] the IP of the nic with the matching mac address
+	in that VM's nic array is used. As an example:
 
             {
                 "10.2.2.0/24": "10.2.1.1",
-                "10.3.0.1": "nics[1]"
+                "10.3.0.1": "nics[1]",
+                "10.4.0.1": "macs[aa:bb:cc:12:34:56]"
             }
 
-        This sets two static routes: to the 10.2.2.0/24 subnet with a gateway
-        of 10.2.1.1, and a link-local route to the host 10.3.0.1 over the VM's
-        second nic.
+	This sets three static routes: to the 10.2.2.0/24 subnet with a gateway
+	of 10.2.1.1, a link-local route to the host 10.3.0.1 over the VM's
+	second nic, and a link-local route to the host 10.4.0.1 over the VM's
+	nic with the corresponding mac address.
 
         type: object
         vmtype: OS
diff --git a/src/vm/node_modules/VM.js b/src/vm/node_modules/VM.js
index 3400f3ce..c8c74997 100644
--- a/src/vm/node_modules/VM.js
+++ b/src/vm/node_modules/VM.js
@@ -614,6 +614,20 @@ function validateProperty(brand, prop, value, action, data, errors, log)
 
                 errors.bad_values.push(prop);
             }
+
+            // if a validator was defined, pass value through that
+            if (PAYLOAD_PROPERTIES[prop]
+                .hasOwnProperty('pr_valueValidator')) {
+
+                if (!PAYLOAD_PROPERTIES[prop]
+                    .pr_valueValidator(value)) {
+
+                    if (errors.bad_values.indexOf(prop) === -1) {
+                        errors.bad_values.push(prop);
+                    }
+                    break;
+                }
+            }
             break;
         case 'integer':
             var nval;
diff --git a/src/vm/node_modules/proptable.js b/src/vm/node_modules/proptable.js
index 714d0fef..03107e97 100644
--- a/src/vm/node_modules/proptable.js
+++ b/src/vm/node_modules/proptable.js
@@ -179,6 +179,10 @@ exports.KVM_MEM_OVERHEAD = KVM_MEM_OVERHEAD;
  *      'required': (optional) an object with brand names as keys and a list
  *                  of actions this payload property *must* be specified with
  *      'type': (required) the type of this property (for validation)
+ *      'valueValidator': (optional) validate this property with a function.
+ *                  Currently only string and list types check for the presence
+ *                  of a validator. If you need to validate something else,
+ *                  then the case statement in VM.js needs to be updated.
  *
  *    Valid property types are:
  *
@@ -1286,7 +1290,8 @@ exports.properties = {
                 'kvm': ['add', 'update'],
                 'lx': ['add', 'update']
             },
-            type: 'string'
+            type: 'string',
+            valueValidator: 'utils.validMacAddress'
         },
         updatable: true,
         zonexml: 'zone.network.mac-addr'
diff --git a/src/vm/node_modules/utils.js b/src/vm/node_modules/utils.js
index 7befd9de..157b96bb 100644
--- a/src/vm/node_modules/utils.js
+++ b/src/vm/node_modules/utils.js
@@ -20,13 +20,14 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2014, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  */
 
 var assert = require('assert');
 var fs = require('fs');
 var ipaddr = require('/usr/vm/node_modules/ip');
+var macaddr = require('/usr/vm/node_modules/macaddr');
 var net = require('net');
 var sprintf = require('/usr/node/node_modules/sprintf').sprintf;
 
@@ -240,6 +241,17 @@ function validResolver(str)
     return Boolean(net.isIP(str));
 }
 
+function validMacAddress(str)
+{
+    try {
+        macaddr.parse(str);
+    } catch (e) {
+        return false;
+    }
+
+    return /^[0-9a-fA-F:]+$/.test(str);
+}
+
 function ltrim(str, chars)
 {
     chars = chars || '\\s';
@@ -316,5 +328,6 @@ module.exports = {
     unmangleMem: unmangleMem,
     validAttrValue: validAttrValue,
     validResolver: validResolver,
+    validMacAddress: validMacAddress,
     vrrpMAC: vrrpMAC
 };
diff --git a/src/vm/tests/test-create.js b/src/vm/tests/test-create.js
index 71ef5a42..dc72ddd8 100644
--- a/src/vm/tests/test-create.js
+++ b/src/vm/tests/test-create.js
@@ -12,6 +12,22 @@ require('nodeunit-plus');
 
 VM.loglevel = 'DEBUG';
 
+var payload_invalid_mac = {
+    alias: 'test-create-' + process.pid,
+    autoboot: false,
+    brand: 'joyent-minimal',
+    do_not_inventory: true,
+    nics: [
+        {
+            nic_tag: 'admin',
+            ip: '10.99.99.12',
+            mac: 'aa:bb:cc:dd:ee:ff:12',
+            gateway: '10.99.99.1',
+            netmask: '255.255.255.0'
+        }
+    ]
+};
+
 var payload_invalid_ip = {
     alias: 'test-create-' + process.pid,
     autoboot: false,
@@ -254,6 +270,17 @@ test('test create with IPv4 and IPv6 autoconfiguration', function (t) {
     });
 });
 
+test('test create with invalid mac address', function (t) {
+    var p = JSON.parse(JSON.stringify(payload_invalid_mac));
+    var state = {brand: p.brand, expect_create_failure: true};
+
+    vmtest.on_new_vm(t, vmtest.CURRENT_SMARTOS_UUID, p, state, [],
+        function (err) {
+            t.end();
+        }
+    );
+});
+
 test('test create with invalid IP', function (t) {
     var p = JSON.parse(JSON.stringify(payload_invalid_ip));
     var state = {brand: p.brand, expect_create_failure: true};
-- 
2.21.0

