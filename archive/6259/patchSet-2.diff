From 7c4d025b758b8ec60ecb7f372df047a4b6027b76 Mon Sep 17 00:00:00 2001
From: Isaac Davis <isaac.davis@joyent.com>
Date: Wed, 15 May 2019 15:39:00 -0700
Subject: [PATCH] TRITON-1667 Want isNicManta and isNetManta functions in
 node-triton-netconfig Reviewed by: Rui Loura <rui.loura@joyent.com> Approved
 by: Rui Loura <rui.loura@joyent.com>

---
 CHANGES.md              |  4 +++
 lib/index.js            | 12 ++++++++-
 package.json            |  2 +-
 test/unit/main.test.js  | 46 +++++++++++++++++++++++++++++++++--
 test/unit/testdata.json | 54 +++++++++++++++++++++++++++++++++++++++++
 5 files changed, 114 insertions(+), 4 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index 8153a7b..77af249 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -4,6 +4,10 @@
 
 (nothing yet)
 
+## 1.4.0
+
+* TRITON-1667 Want isNicManta and isNetManta functions in node-triton-netconfig
+
 ## 1.3.0
 
 * TRITON-1094 isNet() functions should be more compatible with network pools
diff --git a/lib/index.js b/lib/index.js
index c4c269c..405699d 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -197,6 +197,10 @@ function isNicExternal(nic) {
     return _isNetNicCommon(nic, EXTERNAL_NAME);
 }
 
+function isNicManta(nic) {
+    return _isNetNicCommon(nic, MANTA_NAME);
+}
+
 // ---- isNet
 
 function isNetAdmin(net) {
@@ -211,6 +215,10 @@ function isNetInternal(net) {
     return _isNetCommon(net, INTERNAL_NAME);
 }
 
+function isNetManta(net) {
+    return _isNetCommon(net, MANTA_NAME);
+}
+
 module.exports = {
     adminNicFromSysinfo: adminNicFromSysinfo,
     adminIpFromNicsArray: adminIpFromNicsArray,
@@ -222,7 +230,9 @@ module.exports = {
     adminMacFromVmMetadata: adminMacFromVmMetadata,
     isNicAdmin: isNicAdmin,
     isNicExternal: isNicExternal,
+    isNicManta: isNicManta,
     isNetAdmin: isNetAdmin,
     isNetExternal: isNetExternal,
-    isNetInternal: isNetInternal
+    isNetInternal: isNetInternal,
+    isNetManta: isNetManta
 };
diff --git a/package.json b/package.json
index bff77d6..d1c4b68 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "triton-netconfig",
-  "version": "1.3.0",
+  "version": "1.4.0",
   "description": "Common methods for managing Triton network configuration",
   "repository": {
     "type": "git",
diff --git a/test/unit/main.test.js b/test/unit/main.test.js
index fb9afb5..bd6c738 100644
--- a/test/unit/main.test.js
+++ b/test/unit/main.test.js
@@ -24,20 +24,40 @@ tap.test('nets', function (tt) {
     tt.test('main', function (t) {
         const admin_net = NETS['admin_mainnet'];
         const external_net = NETS['external_mainnet'];
+        const manta_net = NETS['manta_mainnet'];
+
         t.ok(netconf.isNetAdmin(admin_net));
         t.notOk(netconf.isNetExternal(admin_net));
+        t.notOk(netconf.isNetManta(admin_net));
+
         t.ok(netconf.isNetExternal(external_net));
         t.notOk(netconf.isNetAdmin(external_net));
+        t.notOk(netconf.isNetManta(external_net));
+
+        t.ok(netconf.isNetManta(manta_net));
+        t.notOk(netconf.isNetAdmin(manta_net));
+        t.notOk(netconf.isNetExternal(manta_net));
+
         t.end();
     });
 
     tt.test('rack', function (t) {
         const admin_net = NETS['admin_racknet'];
         const external_net = NETS['external_racknet'];
+        const manta_net = NETS['manta_racknet'];
+
         t.ok(netconf.isNetAdmin(admin_net));
         t.notOk(netconf.isNetExternal(admin_net));
+        t.notOk(netconf.isNetManta(admin_net));
+
         t.ok(netconf.isNetExternal(external_net));
         t.notOk(netconf.isNetAdmin(external_net));
+        t.notOk(netconf.isNetManta(external_net));
+
+        t.ok(netconf.isNetManta(manta_net));
+        t.notOk(netconf.isNetAdmin(manta_net));
+        t.notOk(netconf.isNetExternal(manta_net));
+
         t.end();
     });
     tt.end();
@@ -51,18 +71,28 @@ tap.test('pools', function (tt) {
         const rack_tags_present = POOLS['tags_present_rack_external'];
         const not_external = POOLS['not_external'];
         const admin_rack = POOLS['admin_rack'];
+        const manta_rack = POOLS['manta_rack'];
 
         t.ok(netconf.isNetExternal(basic));
         t.ok(netconf.isNetExternal(rack_reg_external));
         t.ok(netconf.isNetExternal(tags_present));
         t.ok(netconf.isNetExternal(rack_tags_present));
         t.notOk(netconf.isNetExternal(admin_rack));
+        t.notOk(netconf.isNetExternal(manta_rack));
 
         t.ok(netconf.isNetAdmin(admin_rack));
         t.notOk(netconf.isNetAdmin(basic));
         t.notOk(netconf.isNetAdmin(rack_reg_external));
         t.notOk(netconf.isNetAdmin(tags_present));
         t.notOk(netconf.isNetAdmin(rack_tags_present));
+        t.notOk(netconf.isNetAdmin(manta_rack));
+
+        t.ok(netconf.isNetManta(manta_rack));
+        t.notOk(netconf.isNetManta(basic));
+        t.notOk(netconf.isNetManta(rack_reg_external));
+        t.notOk(netconf.isNetManta(tags_present));
+        t.notOk(netconf.isNetManta(rack_tags_present));
+        t.notOk(netconf.isNetManta(admin_rack));
 
         t.notOk(netconf.isNetExternal(not_external));
         t.notOk(netconf.isNetInternal(basic));
@@ -114,10 +144,16 @@ tap.test('nics', function (tt) {
         const admin_nic = main_vm['nics'][2];
 
         t.ok(netconf.isNicAdmin(admin_nic));
+        t.notOk(netconf.isNicExternal(admin_nic));
+        t.notOk(netconf.isNicManta(admin_nic));
+
         t.ok(netconf.isNicExternal(external_nic));
+        t.notOk(netconf.isNicAdmin(external_nic));
+        t.notOk(netconf.isNicManta(external_nic));
 
+        t.ok(netconf.isNicManta(manta_nic));
+        t.notOk(netconf.isNicAdmin(manta_nic));
         t.notOk(netconf.isNicExternal(manta_nic));
-        t.notOk(netconf.isNicAdmin(external_nic));
 
         t.end();
     });
@@ -128,10 +164,16 @@ tap.test('nics', function (tt) {
         const admin_nic = rack_vm['nics'][2];
 
         t.ok(netconf.isNicAdmin(admin_nic));
+        t.notOk(netconf.isNicExternal(admin_nic));
+        t.notOk(netconf.isNicManta(admin_nic));
+
         t.ok(netconf.isNicExternal(external_nic));
+        t.notOk(netconf.isNicAdmin(external_nic));
+        t.notOk(netconf.isNicManta(external_nic));
 
+        t.ok(netconf.isNicManta(manta_nic));
+        t.notOk(netconf.isNicAdmin(manta_nic));
         t.notOk(netconf.isNicExternal(manta_nic));
-        t.notOk(netconf.isNicAdmin(external_nic));
 
         t.end();
     });
diff --git a/test/unit/testdata.json b/test/unit/testdata.json
index cebeff9..67b17c3 100644
--- a/test/unit/testdata.json
+++ b/test/unit/testdata.json
@@ -611,6 +611,20 @@
           "admin_rack_e50"
         ],
         "nic_tag": "admin"
+      },
+      "manta_rack": {
+        "family": "ipv4",
+        "uuid": "7306b0bd-c250-4336-bc9b-c0a06e382560",
+        "name": "manta",
+        "networks": [
+          "cdadfce6-269a-4d4d-b73d-a18c13150cca",
+          "b0152d14-5744-4255-ab43-b2d7f0f1dc28"
+        ],
+        "nic_tags_present": [
+          "manta",
+          "manta_rack_e50"
+        ],
+        "nic_tag": "manta"
       }
     },
     "nets": {
@@ -653,6 +667,27 @@
             ],
             "netmask": "255.255.255.0"
         },
+        "manta_mainnet": {
+            "family": "ipv4",
+            "mtu": 1500,
+            "nic_tag": "manta",
+            "name": "manta",
+            "provision_end_ip": "172.27.3.254",
+            "provision_start_ip": "172.27.3.4",
+            "subnet": "172.27.3.0/24",
+            "uuid": "b0152d14-5744-4255-ab43-b2d7f0f1dc28",
+            "vlan_id": 0,
+            "resolvers": [],
+            "routes": {
+              "172.27.4.0/24": "172.27.3.1",
+              "172.27.5.0/24": "172.27.3.1"
+            },
+            "owner_uuids": [
+              "4d649f41-cf87-ca1d-c2c0-bb6a9004311d",
+              "930896af-bf8c-48d4-885c-6573a94b1853"
+            ],
+            "netmask": "255.255.255.0"
+        },
         "admin_racknet": {
             "family": "ipv4",
             "mtu": 1500,
@@ -692,6 +727,25 @@
             "gateway": "172.26.19.1",
             "netmask": "255.255.255.0"
 
+        },
+        "manta_racknet": {
+            "family": "ipv4",
+            "mtu": 1500,
+            "nic_tag": "manta_rack_e50",
+            "name": "manta_rack_e50",
+            "provision_end_ip": "192.168.100.250",
+            "provision_start_ip": "192.168.100.5",
+            "subnet": "192.168.100.0/24",
+            "uuid": "b0152d14-5744-4255-ab43-b2d7f0f1dc28",
+            "vlan_id": 0,
+            "resolvers": [],
+            "routes": {
+                "192.168.222.0/24": "192.168.100.1"
+            },
+            "owner_uuids": [
+                "4d649f41-cf87-ca1d-c2c0-bb6a9004311d"
+            ],
+            "netmask": "255.255.255.0"
         }
     },
     "nics": {
-- 
2.21.0

