commit db2abb831ea29ebe4a9f226b5a02bd799e1e346c (refs/changes/06/4606/7)
Author: Jared Morrow <jm@joyent.com>
Date:   2018-08-03T08:28:48-06:00 (1 year, 2 months ago)
    
    MANTA-1387 libmanta should log and ignore BucketVersionError

diff --git a/lib/moray.js b/lib/moray.js
index e89b7b6..7db1c9e 100644
--- a/lib/moray.js
+++ b/lib/moray.js
@@ -403,10 +403,76 @@ function createBucket(opts, cb) {
     var client = opts.client;
 
     client.putBucket(bucket, opts.opts, function (err) {
+        var realErrors = [];
+
+        /*
+         * Filters out errors we want to ignore that would otherwise
+         * cause startup to fail. This will still push real errors
+         * up to the callback.
+         */
+        function pushErrIfValid(tryError) {
+            function checkAndPushError(sErr) {
+                if (VError.findCauseByName(sErr, 'BucketVersionError')
+                    !== null) {
+                    opts.log.warn(sErr, 'ignoring bucket schema out of date');
+                } else {
+                    realErrors.push(sErr);
+                }
+            }
+
+            if (VError.hasCauseWithName(tryError, 'MultiError')) {
+                /*
+                 * A MultiError structure is as follows
+                 *
+                 *    "name": "MultiError",
+                 *    "jse_shortmsg": "first of N errors...",
+                 *    "jse_info": { },
+                 *    "message": "first of N errors...",
+                 *    "context": { },
+                 *    "ase_errors": [
+                 *        {
+                 *            "name": "BucketVersionError",
+                 *            "jse_shortmsg": "manta has a newer version...",
+                 *            "jse_info": { },
+                 *            "message": "manta has a newer version than 1 (3)",
+                 *            "context": { }
+                 *        },
+                 *        {
+                 *            "name": "SomeOtherErrror",
+                 *            "jse_shortmsg": "...",
+                 *            "jse_info": { },
+                 *            "message": "...",
+                 *            "context": { }
+                 *        }
+                 *    ]
+                 *
+                 * We just filter errors in the ase_errors list
+                 */
+                var errs = tryError.ase_errors;
+                errs.forEach(checkAndPushError);
+            } else {
+                checkAndPushError(tryError);
+            }
+        }
+
+        /*
+         * Entry point to the above filtering
+         * errorForEach() will handle both cases of a MultiError or a
+         * single error.
+         */
         if (err) {
-            err.bucket = opts.bucket;
-            err.opts = opts.opts;
-            cb(err);
+            VError.errorForEach(err, pushErrIfValid);
+        }
+
+        /*
+         * Collect any important errors we found and rebuild them into
+         * a MultiError
+         */
+        if (realErrors.length > 0) {
+            var err2 = new VError.errorFromList(realErrors);
+            err2.bucket = bucket;
+            err2.opts = opts.opts;
+            cb(err2);
         } else {
             opts.log.debug(opts.opts, 'Moray.createBucket done');
             cb();
diff --git a/package.json b/package.json
index 82e16e9..ad7051f 100644
--- a/package.json
+++ b/package.json
@@ -20,7 +20,7 @@
         "restify": "2.6.3",
         "redis": "0.10.1",
         "vasync": "1.6.3",
-        "verror": "1.6.0",
+        "verror": "^1.10.0",
         "xtend": "2.1.2"
     },
     "devDependencies": {
