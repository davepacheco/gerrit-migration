{"project":"joyent/sdc-volapi","branch":"master","id":"I7b9a6cf7965233fc00085f46c18aa269a9120e13","number":"2168","subject":"VOLAPI-18 Add support for filtering entries outputted by ListVolumes on any volume object attribute","owner":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"url":"https://cr.joyent.us/2168","commitMessage":"VOLAPI-18 Add support for filtering entries outputted by ListVolumes on any volume object attribute\n","createdOn":1498719469,"lastUpdated":1499361057,"open":false,"status":"MERGED","comments":[{"timestamp":1498719469,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 1."},{"timestamp":1498719470,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 1:\n\nNew commits:\n    \n    commit 91b5219526816bf5c5c9783e81d831416eb7c159\n    \n    initial work"},{"timestamp":1498719500,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1498763200,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 2."},{"timestamp":1498763201,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 2:\n\nNew commits:\n    \n    commit 3fab7a74dffd8c0a28e8c1587411ee66d8a6e6ef\n    \n    remove support for tags, not needed for master integration"},{"timestamp":1498785273,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1498849644,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 2:\n\n(9 comments)"},{"timestamp":1498851321,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 2:\n\n(7 comments)"},{"timestamp":1498857249,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1498891321,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1499211037,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1499211148,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 3."},{"timestamp":1499211149,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 3:\n\nNew commits:\n    \n    commit c672feca937da98392bc590217136eeadd8bab10\n    \n    updates + refactoring to address feedback"},{"timestamp":1499211176,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1499212191,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 4."},{"timestamp":1499212192,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 4:\n\nNew commits:\n    \n    commit c796fe3151710974db5704087ed5941b75336e69\n    \n    only krill the krillable"},{"timestamp":1499212220,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1499277422,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 4:\n\n(6 comments)"},{"timestamp":1499280966,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Uploaded patch set 5."},{"timestamp":1499280967,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 4:\n\n(6 comments)"},{"timestamp":1499280967,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Patch Set 5:\n\nNew commits:\n    \n    commit 402f069de3907c9e097fec61021b38f68dc61713\n    \n    updates based on CR round 2!"},{"timestamp":1499280991,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1499286951,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 4:\n\n(2 comments)"},{"timestamp":1499287085,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 5: Code-Review+1 Integration-Approval+1"},{"timestamp":1499361057,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Josh Wilsdon"}],"currentPatchSet":{"number":"5","revision":"7b9a6cf7965233fc00085f46c18aa269a9120e13","parents":["fbc1865641a350b58de9c8851f25a726dfe1c666"],"ref":"refs/changes/68/2168/5","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1499280966,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1499280991,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499287085,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1499287085,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"SUBM","value":"1","grantedOn":1499361057,"by":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/endpoints/volumes.js","type":"MODIFIED","insertions":98,"deletions":-13},{"file":"lib/models/volumes.js","type":"MODIFIED","insertions":16,"deletions":-3},{"file":"lib/validation/volumes.js","type":"MODIFIED","insertions":47,"deletions":0},{"file":"test/integration/list-with-params.test.js","type":"ADDED","insertions":543,"deletions":0}],"sizeInsertions":704,"sizeDeletions":-16},"patchSets":[{"number":"1","revision":"3e286d59f899e9421786c965242de59f5df81e32","parents":["fbc1865641a350b58de9c8851f25a726dfe1c666"],"ref":"refs/changes/68/2168/1","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1498719469,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1498719500,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/endpoints/volumes.js","type":"MODIFIED","insertions":110,"deletions":-11},{"file":"lib/models/volumes.js","type":"MODIFIED","insertions":16,"deletions":-3},{"file":"lib/validation/volumes.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/integration/list-with-params.test.js","type":"ADDED","insertions":585,"deletions":0}],"sizeInsertions":713,"sizeDeletions":-14},{"number":"2","revision":"974a34654a8fcdbf0632cb2fbc2bf2172759c124","parents":["fbc1865641a350b58de9c8851f25a726dfe1c666"],"ref":"refs/changes/68/2168/2","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1498763200,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1498785273,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/endpoints/volumes.js","line":746,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Can we factor that out to a separate function like \"validateVolumeNameSearchParam\" in a file under lib/validation? I\u0027m not 100% sure about the details (whether that file would be a new file, etc.), but I think I\u0027m sure that would be preferable to having it implemented inline here."},{"file":"lib/endpoints/volumes.js","line":746,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"sure."},{"file":"lib/endpoints/volumes.js","line":770,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same for the validation of a string that represents a volume size. We already have a \"validateVolumeSize\" function, but it takes a number as input. Maybe we could add a \"validateVolumeSizeSearchParam\", or \"validateVolumeSizeAsString\" in a file under the \"lib/validation\" directory?"},{"file":"lib/endpoints/volumes.js","line":770,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Sure."},{"file":"lib/endpoints/volumes.js","line":777,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"There are other endpoints that already validate \"valid\" params like at https://github.com/joyent/sdc-volapi/blob/master/lib/endpoints/volumes.js#L670-L680. If we can reuse that pattern, then maybe the code in this file would be more consistent.\n\nI\u0027m not sure that pattern is great though, maybe we can improve on it. The idea being that ideally we\u0027d be able to share code."},{"file":"lib/endpoints/volumes.js","line":777,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"ok, I\u0027ll see what I can do!"},{"file":"lib/endpoints/volumes.js","line":812,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"We have a \"validatePredicate\" function in lib/validation/predicate.js that we may be able to use here. It\u0027s possible that we\u0027ll need to make changes to it though.\n\nI would separate the predicate validation itself in that separate validation module and perform the check for duplicate fields between the predicate and other query params in this file."},{"file":"lib/endpoints/volumes.js","line":812,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"I\u0027m not sure I understand. The only thing we\u0027re doing here is checking for the duplicate params...  Maybe my naming here was confusing?"},{"file":"lib/endpoints/volumes.js","line":812,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Ah OK, got it. I still think we should perform that validation in the \"validateListVolumes\" restify handler if we can, just so that the separation between validation code and the rest of the restify handlers is clearer.\n\nMaybe we can store the parsed predicate created in the validation function on the req object so that it can be used in the \"listVolumes\" function?"},{"file":"lib/models/volumes.js","line":179,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"I didn\u0027t know about that, so I ran the following:\n\n\u003e var filter \u003d new ldapFilter.EqualityFilter({attribute: \u0027name\u0027, value: \u0027*foo*\u0027});\nundefined\n\u003e filter\nEqualityFilter { attribute: \u0027name\u0027, raw: \u003cBuffer 2a 66 6f 6f 2a\u003e }\n\u003e filter.raw\n\u003cBuffer 2a 66 6f 6f 2a\u003e\n\u003e filter.raw.toString()\n\u0027*foo*\u0027\n\u003e\n\nSo it seems the \u0027*\u0027 are not \"destroyed\". What am I missing?"},{"file":"lib/models/volumes.js","line":179,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"The problem is this:\n\n    \u003e var ldapFilter \u003d require(\u0027ldap-filter\u0027)\n    undefined\n    \u003e var f \u003d new ldapFilter.EqualityFilter({attribute: \u0027name\u0027, value: \u0027foo*\u0027});\n    undefined\n    \u003e f.toString()\n    \u0027(name\u003dfoo\\\\2a)\u0027\n    \u003e var f1 \u003d ldapFilter.parse(\u0027(name\u003dfoo*)\u0027)\n    undefined\n    \u003e f1.toString()\n    \u0027(name\u003dfoo*)\u0027\n    \u003e\n\nSo we end up with \\\\2a instead of * which means we won\u0027t correctly do the wildcard search."},{"file":"lib/models/volumes.js","line":179,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"Looking further, the code has:\n\nhttps://github.com/joyent/node-moray-filter/blob/master/lib/helpers.js#L18\n\nbut I had looked at the substr_filter before and it\u0027s pretty awful. I guess I can see if I can write something convoluted enough to work using that."},{"file":"lib/models/volumes.js","line":179,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"I\u0027ve spent more time looking at this, and I can\u0027t find a good way to do this that doesn\u0027t require changes to the SubstringFilter... Specifically, it\u0027s not possible to do any of:\n\n    (name\u003dfoo*)\n\nor:\n\n    (name\u003dfoo)\n\nor:\n\n    (name\u003dfoo*)\n\nwith it, since it always adds \u0027*\u0027 at both the beginning and end. Using this SubstringFilter only when the name is *foo* seems pretty silly since that\u0027s much more complex than the existing code since we\u0027ll be using different filter functions based on the data. I would add an issue for node-moray-filter to allow options that effectively allow you to skip:\n\nhttps://github.com/joyent/node-moray-filter/blob/85ab1b80bac38ff8dfd6ba26acfd10f28c912b34/lib/substr_filter.js#L58\n\nand the + \u0027*\u0027 here:\n\nhttps://github.com/joyent/node-moray-filter/blob/85ab1b80bac38ff8dfd6ba26acfd10f28c912b34/lib/substr_filter.js#L61\n\nperhaps when initial and/or final are empty? However, the repo does not allow issues. If others think it\u0027s a good idea, I\u0027ll file one in JIRA."},{"file":"test/integration/list-with-params.test.js","line":118,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Should we also check on:\n\n- invalid size\n- invalid state\n- invalid owner_uuid\n- invalid type\n\n?"},{"file":"test/integration/list-with-params.test.js","line":118,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"I can do that. Sure."},{"file":"test/integration/list-with-params.test.js","line":243,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"I\u0027m wondering if comparing between the output at the API level and the output at the model level is actually a good test, since a bug at the model level would not be caught.\n\nI\u0027m not sure yet how to improve on that, I\u0027ll try to come up with suggestions."},{"file":"test/integration/list-with-params.test.js","line":263,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit: should we guard on \"volumes\" being defined and just make the test fail if it\u0027s not so that the tests suite doesn\u0027t crash if we don\u0027t get volumes back?"},{"file":"test/integration/list-with-params.test.js","line":263,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"ok!"},{"file":"test/integration/list-with-params.test.js","line":280,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"I noticed that this piece of code is used quite a few times, is there a way to factor it to a separate function? Let\u0027s not do it if it means a bunch of additional work, only if that makes your life simpler."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/endpoints/volumes.js","type":"MODIFIED","insertions":98,"deletions":-10},{"file":"lib/models/volumes.js","type":"MODIFIED","insertions":16,"deletions":-3},{"file":"lib/validation/volumes.js","type":"MODIFIED","insertions":2,"deletions":0},{"file":"test/integration/list-with-params.test.js","type":"ADDED","insertions":531,"deletions":0}],"sizeInsertions":647,"sizeDeletions":-13},{"number":"3","revision":"2208f29e22f278134b1a6c93c908ad9307ef3f48","parents":["fbc1865641a350b58de9c8851f25a726dfe1c666"],"ref":"refs/changes/68/2168/3","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1499211148,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1499211176,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/endpoints/volumes.js","type":"MODIFIED","insertions":93,"deletions":-13},{"file":"lib/models/volumes.js","type":"MODIFIED","insertions":16,"deletions":-3},{"file":"lib/validation/volumes.js","type":"MODIFIED","insertions":45,"deletions":0},{"file":"test/integration/list-with-params.test.js","type":"ADDED","insertions":538,"deletions":0}],"sizeInsertions":692,"sizeDeletions":-16},{"number":"4","revision":"eee4a6858388754a80eb594a2f4cbf40888f2062","parents":["fbc1865641a350b58de9c8851f25a726dfe1c666"],"ref":"refs/changes/68/2168/4","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1499212191,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1499212220,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/endpoints/volumes.js","line":745,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Wouldn\u0027t \"errs.concat(invalidParamsErrs\" always make \"undefined\" present in \"errs\"?\n\nFor instance, using node\u0027s REPL:\n\n\u003e [].concat(undefined)\n[ undefined ]\n\nIt seems that would cause the condition below:\n\nif (errs.length \u003e 0) {\n\nto be always true?"},{"file":"lib/endpoints/volumes.js","line":745,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"The reason this doesn\u0027t happen is that checkInvalidParams returns an empty *array* when it finds no errors. This same pattern is used in the other functions in this file and indeed that\u0027s why I changed to match this pattern based on previous review comments. ;)"},{"file":"lib/endpoints/volumes.js","line":745,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Sorry, on first read I had somehow missed that invalidParamsErrs was assigned an empty array on line 744. All good :)"},{"file":"lib/validation/volumes.js","line":91,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit, and thinking out loud: we could use \"VALID_VOLUME_NAME_CHARS_REGEXP.test(coreName)\" since we don\u0027t care about the matching results.\n\nI\u0027m not sure it\u0027s worth changing it though."},{"file":"lib/validation/volumes.js","line":91,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"sure."},{"file":"lib/validation/volumes.js","line":124,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"nit and thinking out loud: same comment as above regarding match vs test."},{"file":"lib/validation/volumes.js","line":124,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"sure."},{"file":"lib/validation/volumes.js","line":125,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Should we add to the error message what a valid size looks like? Maybe by stringifying the regexp used to test the input?"},{"file":"lib/validation/volumes.js","line":125,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"sure."},{"file":"test/integration/list-with-params.test.js","line":309,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"\"with a name predicate\" -\u003e \"with an empty predicate\"?"},{"file":"test/integration/list-with-params.test.js","line":309,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"yep! Nice catch!"},{"file":"test/integration/list-with-params.test.js","line":469,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Since ListVolumes is a GET request, and thus the \"size\" param will be stringyfied to be passed as a query parameter, is it worth it to have both a \"number\" and a \"string\" test for this test?"},{"file":"test/integration/list-with-params.test.js","line":469,"reviewer":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"message":"good point. No, not on its own. But in this case we\u0027re also testing with two different values to ensure that a different VM is found in each case. So I think I might leave it for that reason. Not because the string and the number make a difference. I\u0027ll make a note of that in the test."},{"file":"test/integration/list-with-params.test.js","line":469,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"OK, I had missed that the sizes were different."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/endpoints/volumes.js","type":"MODIFIED","insertions":98,"deletions":-13},{"file":"lib/models/volumes.js","type":"MODIFIED","insertions":16,"deletions":-3},{"file":"lib/validation/volumes.js","type":"MODIFIED","insertions":45,"deletions":0},{"file":"test/integration/list-with-params.test.js","type":"ADDED","insertions":538,"deletions":0}],"sizeInsertions":697,"sizeDeletions":-16},{"number":"5","revision":"7b9a6cf7965233fc00085f46c18aa269a9120e13","parents":["fbc1865641a350b58de9c8851f25a726dfe1c666"],"ref":"refs/changes/68/2168/5","uploader":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"createdOn":1499280966,"author":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1499280991,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"SUBM","value":"1","grantedOn":1499361057,"by":{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499287085,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1499287085,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/endpoints/volumes.js","type":"MODIFIED","insertions":98,"deletions":-13},{"file":"lib/models/volumes.js","type":"MODIFIED","insertions":16,"deletions":-3},{"file":"lib/validation/volumes.js","type":"MODIFIED","insertions":47,"deletions":0},{"file":"test/integration/list-with-params.test.js","type":"ADDED","insertions":543,"deletions":0}],"sizeInsertions":704,"sizeDeletions":-16}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Josh Wilsdon","email":"josh@wilsdon.ca","username":"joshwilsdon"},{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}]}