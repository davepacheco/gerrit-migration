From dbc9a988209a84cc1713e8058301450d6383b6f5 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Mon, 3 Jul 2017 11:23:09 -0700
Subject: [PATCH] joyent/node-zkstream#18 after mod_assert.optionalX, need to
 check for null too

---
 lib/client.js         | 16 +++++++++-------
 lib/connection-fsm.js |  8 ++++----
 package.json          |  2 +-
 3 files changed, 14 insertions(+), 12 deletions(-)

diff --git a/lib/client.js b/lib/client.js
index f74941d..2a5a3eb 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -29,7 +29,7 @@ function ZKClient(opts) {
 	mod_assert.object(opts, 'options');
 
 	mod_assert.optionalObject(opts.log, 'options.log');
-	if (opts.log == undefined) {
+	if (opts.log === undefined || opts.log === null) {
 		this.zc_log = mod_bunyan.createLogger({
 			name: 'zkstream',
 			component: 'ZKClient'
@@ -41,7 +41,7 @@ function ZKClient(opts) {
 	}
 
 	mod_assert.optionalArrayOfObject(opts.servers, 'options.servers');
-	if (opts.servers === undefined) {
+	if (opts.servers === undefined || opts.servers === null) {
 		mod_assert.string(opts.address, 'options.address');
 		mod_assert.number(opts.port, 'options.port');
 		this.zc_servers = [
@@ -57,8 +57,10 @@ function ZKClient(opts) {
 	mod_assert.optionalNumber(opts.sessionTimeout,
 	    'options.sessionTimeout');
 	this.zc_sessionTimeout = opts.sessionTimeout;
-	if (this.zc_sessionTimeout === undefined)
+	if (this.zc_sessionTimeout === undefined ||
+	    this.zc_sessionTimeout === null) {
 		this.zc_sessionTimeout = 30000;
+	}
 
 	this.zc_session = undefined;
 	this.zc_oldSession = undefined;
@@ -309,19 +311,19 @@ ZKClient.prototype.create = function (path, data, options, cb) {
 	mod_assert.buffer(data, 'data');
 	mod_assert.optionalObject(options, 'options');
 	mod_assert.optionalFunc(cb, 'callback');
-	if (options === undefined)
+	if (options === undefined || options === null)
 		options = {};
 	mod_assert.optionalArrayOfObject(options.acl, 'options.acl');
 	mod_assert.optionalArrayOfString(options.flags, 'options.flags');
 
-	if (options.acl === undefined) {
+	if (options.acl === undefined || options.acl === null) {
 		options.acl = [ {
 		    id: { scheme: 'world', id: 'anyone' },
 		    perms: ['read', 'write', 'create', 'delete', 'admin']
 		} ];
 	}
 
-	if (options.flags === undefined) {
+	if (options.flags === undefined || options.flags === null) {
 		options.flags = [];
 	}
 
@@ -350,7 +352,7 @@ ZKClient.prototype.set = function (path, data, version, cb) {
 	mod_assert.optionalNumber(version, 'version');
 	mod_assert.optionalFunc(cb, 'callback');
 
-	if (version === undefined)
+	if (version === undefined || version === null)
 		version = -1;
 
 	var conn = this.currentConnection();
diff --git a/lib/connection-fsm.js b/lib/connection-fsm.js
index e947ab4..4d21973 100644
--- a/lib/connection-fsm.js
+++ b/lib/connection-fsm.js
@@ -389,11 +389,11 @@ ZKConnectionFSM.prototype.ping = function (cb) {
 	var req = new ZKRequest(pkt);
 	if (this.zcf_reqs[pkt.xid] !== undefined) {
 		this.zcf_reqs[pkt.xid].once('reply', function () {
-			if (cb !== undefined)
+			if (cb)
 				cb();
 		});
 		this.zcf_reqs[pkt.xid].once('error', function (err) {
-			if (cb !== undefined)
+			if (cb)
 				cb(err);
 		});
 		return;
@@ -412,7 +412,7 @@ ZKConnectionFSM.prototype.ping = function (cb) {
 		var t2 = new Date();
 		clearTimeout(timer);
 		self.zcf_log.trace('ping ok in %d ms', (t2 - t1));
-		if (cb !== undefined)
+		if (cb)
 			cb(null, (t2 - t1));
 	}
 	function onTimeout() {
@@ -422,7 +422,7 @@ ZKConnectionFSM.prototype.ping = function (cb) {
 	function onError(err) {
 		delete (self.zcf_reqs[pkt.xid]);
 		clearTimeout(timer);
-		if (cb !== undefined)
+		if (cb)
 			cb(err);
 	}
 };
diff --git a/package.json b/package.json
index 91813e9..4b96f4c 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "zkstream",
-  "version": "0.8.1",
+  "version": "0.8.2",
   "description": "",
   "main": "lib/index.js",
   "dependencies": {
-- 
2.21.0

