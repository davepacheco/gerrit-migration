commit d28e20924dfd7ab38716e5176ac6fa3be6fadc5c (refs/changes/06/2106/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-06-15T13:21:04-07:00 (2 years, 4 months ago)
    
    joyent/node-zkstream#9 use var instead of const so we can run in strict mode

diff --git a/lib/client-fsm.js b/lib/client-fsm.js
index c8fb491..157138a 100644
--- a/lib/client-fsm.js
+++ b/lib/client-fsm.js
@@ -8,20 +8,23 @@
 
 module.exports = { Client: ZKClientFSM };
 
-const mod_fsm = require('mooremachine');
-const mod_assert = require('assert-plus');
-const mod_consts = require('./zk-consts');
-const mod_util = require('util');
-const mod_stream = require('stream');
-const mod_errors = require('./errors');
-const mod_jsbn = require('jsbn');
-const mod_events = require('events');
-const mod_zkstreams = require('./zk-streams');
-const mod_net = require('net');
+var mod_fsm = require('mooremachine');
+var mod_assert = require('assert-plus');
+var mod_consts = require('./zk-consts');
+var mod_util = require('util');
+var mod_stream = require('stream');
+var mod_errors = require('./errors');
+var mod_jsbn = require('jsbn');
+var mod_events = require('events');
+var mod_zkstreams = require('./zk-streams');
+var mod_net = require('net');
+var mod_bunyan = require('bunyan');
 
 function ZKClientFSM(opts) {
 	mod_assert.object(opts, 'options');
 
+	mod_assert.optionalObject(opts.log, 'options.log');
+
 	mod_assert.optionalArrayOfObject(opts.servers, 'options.servers');
 	if (opts.servers === undefined) {
 		mod_assert.string(opts.host, 'options.host');
@@ -671,19 +674,22 @@ ZKWatcher.prototype.on = function (evt, cb) {
 
 ZKWatcher.prototype.emit = function (evt) {
 	var self = this;
+
 	if (this.listeners(evt).length < 1)
 		return;
+
 	if (!this.zkw_client.isInState('connected')) {
-		function onStateChanged(st) {
-			if (st === 'connected') {
-				self.emit(evt);
-				self.zkw_client.removeListener('stateChanged',
-				    onStateChanged);
-			}
-		}
 		this.zkw_client.on('stateChanged', onStateChanged);
 		return;
 	}
+	function onStateChanged(st) {
+		if (st === 'connected') {
+			self.emit(evt);
+			self.zkw_client.removeListener('stateChanged',
+			    onStateChanged);
+		}
+	}
+
 	var qpkt = this.reqPacket(evt);
 	var req = this.zkw_client.request(qpkt);
 	req.on('reply', function (pkt) {
diff --git a/lib/errors.js b/lib/errors.js
index d34323b..9580af9 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -12,8 +12,8 @@ module.exports = {
 	ZKPingTimeoutError: ZKPingTimeoutError
 };
 
-const mod_assert = require('assert-plus');
-const mod_util = require('util');
+var mod_assert = require('assert-plus');
+var mod_util = require('util');
 
 function ZKProtocolError(code, msg) {
 	if (Error.captureStackTrace)
diff --git a/lib/index.js b/lib/index.js
index 978f233..db5dbba 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -6,10 +6,10 @@
  * Copyright (c) 2016, Joyent, Inc.
  */
 
-const mod_client = require('./client-fsm');
-const mod_errors = require('./errors');
-const mod_assert = require('assert-plus');
-const mod_net = require('net');
+var mod_client = require('./client-fsm');
+var mod_errors = require('./errors');
+var mod_assert = require('assert-plus');
+var mod_net = require('net');
 
 module.exports = {
 	connect: connect,
@@ -25,21 +25,22 @@ function connect(options, cb) {
 
 	var zkc = new mod_client.Client(options);
 	if (cb) {
-		function onStateChanged(st) {
-			if (st === 'connected') {
-				zkc.removeListener('stateChanged',
-				    onStateChanged);
-				zkc.removeListener('error', onError);
-				cb(null, zkc);
-			}
-		}
-		function onError(err) {
-			cb(err);
-		}
 		zkc.on('stateChanged', onStateChanged);
 		zkc.on('error', onError);
 	}
 	zkc.connect();
 
 	return (zkc);
+
+	function onStateChanged(st) {
+		if (st === 'connected') {
+			zkc.removeListener('stateChanged',
+			    onStateChanged);
+			zkc.removeListener('error', onError);
+			cb(null, zkc);
+		}
+	}
+	function onError(err) {
+		cb(err);
+	}
 }
diff --git a/lib/jute-buffer.js b/lib/jute-buffer.js
index f7e1cbc..0885c14 100644
--- a/lib/jute-buffer.js
+++ b/lib/jute-buffer.js
@@ -8,8 +8,8 @@
 
 module.exports = { JuteBuffer: JuteBuffer };
 
-const mod_assert = require('assert-plus');
-const mod_jsbn = require('jsbn');
+var mod_assert = require('assert-plus');
+var mod_jsbn = require('jsbn');
 
 function JuteBuffer(opts) {
 	mod_assert.object(opts, 'options');
diff --git a/lib/zk-buffer.js b/lib/zk-buffer.js
index a4d1f96..348668c 100644
--- a/lib/zk-buffer.js
+++ b/lib/zk-buffer.js
@@ -8,11 +8,11 @@
 
 module.exports = { ZKBuffer: ZKBuffer };
 
-const mod_assert = require('assert-plus');
-const mod_jsbn = require('jsbn');
-const mod_util = require('util');
-const JuteBuffer = require('./jute-buffer').JuteBuffer;
-const mod_consts = require('./zk-consts');
+var mod_assert = require('assert-plus');
+var mod_jsbn = require('jsbn');
+var mod_util = require('util');
+var JuteBuffer = require('./jute-buffer').JuteBuffer;
+var mod_consts = require('./zk-consts');
 
 function ZKBuffer(opts) {
 	JuteBuffer.call(this, opts);
@@ -264,7 +264,7 @@ ZKBuffer.prototype.writeSetWatchesRequest = function (pkt) {
 		this.writeUString(evt[i], 'childrenChanged[' + i + ']');
 };
 
-const SPECIAL_XIDS = {};
+var SPECIAL_XIDS = {};
 SPECIAL_XIDS[mod_consts.XID_NOTIFICATION] = 'NOTIFICATION';
 SPECIAL_XIDS[mod_consts.XID_PING] = 'PING';
 SPECIAL_XIDS[mod_consts.XID_AUTHENTICATION] = 'AUTH';
diff --git a/lib/zk-consts.js b/lib/zk-consts.js
index 77d29ae..d171ff9 100644
--- a/lib/zk-consts.js
+++ b/lib/zk-consts.js
@@ -8,7 +8,7 @@
 
 module.exports = {};
 
-const mod_util = require('util');
+var mod_util = require('util');
 
 module.exports.PERM_MASKS = {
 	READ: (1<<0),
diff --git a/lib/zk-streams.js b/lib/zk-streams.js
index a199542..87c2e1e 100644
--- a/lib/zk-streams.js
+++ b/lib/zk-streams.js
@@ -11,16 +11,16 @@ module.exports = {
 	ZKEncodeStream: ZKEncodeStream
 };
 
-const mod_assert = require('assert-plus');
-const ZKBuffer = require('./zk-buffer').ZKBuffer;
-const mod_consts = require('./zk-consts');
-const mod_util = require('util');
-const mod_stream = require('stream');
-const mod_errors = require('./errors');
-const mod_jsbn = require('jsbn');
-const mod_events = require('events');
+var mod_assert = require('assert-plus');
+var ZKBuffer = require('./zk-buffer').ZKBuffer;
+var mod_consts = require('./zk-consts');
+var mod_util = require('util');
+var mod_stream = require('stream');
+var mod_errors = require('./errors');
+var mod_jsbn = require('jsbn');
+var mod_events = require('events');
 
-const MAX_PACKET = 8*1024*1024;
+var MAX_PACKET = 8*1024*1024;
 
 function ZKDecodeStream(opts) {
 	mod_assert.object(opts, 'options');
diff --git a/test/basic.test.js b/test/basic.test.js
index cfca7fe..3823fa5 100644
--- a/test/basic.test.js
+++ b/test/basic.test.js
@@ -6,10 +6,10 @@
  * Copyright (c) 2016, Joyent, Inc.
  */
 
-const mod_tape = require('tape');
-const mod_zk = require('./zkserver');
-const mod_zkc = require('../lib/index');
-const mod_net = require('net');
+var mod_tape = require('tape');
+var mod_zk = require('./zkserver');
+var mod_zkc = require('../lib/index');
+var mod_net = require('net');
 
 var zk;
 
diff --git a/test/multi-node.test.js b/test/multi-node.test.js
index 8461009..fd521ed 100644
--- a/test/multi-node.test.js
+++ b/test/multi-node.test.js
@@ -6,10 +6,10 @@
  * Copyright (c) 2016, Joyent, Inc.
  */
 
-const mod_tape = require('tape');
-const mod_zk = require('./zkserver');
-const mod_zkc = require('../lib/index');
-const mod_net = require('net');
+var mod_tape = require('tape');
+var mod_zk = require('./zkserver');
+var mod_zkc = require('../lib/index');
+var mod_net = require('net');
 
 var zk1, zk2, zk3;
 
diff --git a/test/streams.test.js b/test/streams.test.js
index b76d239..536bbd1 100644
--- a/test/streams.test.js
+++ b/test/streams.test.js
@@ -6,10 +6,10 @@
  * Copyright (c) 2016, Joyent, Inc.
  */
 
-const mod_tape = require('tape');
+var mod_tape = require('tape');
 
-const mod_zkbuf = require('../lib/zk-buffer');
-const mod_zkstreams = require('../lib/zk-streams');
+var mod_zkbuf = require('../lib/zk-buffer');
+var mod_zkstreams = require('../lib/zk-streams');
 
 /* An example packet capture of "zkCli ls /" */
 var CAPTURE1 = [
diff --git a/test/zkserver.js b/test/zkserver.js
index f8b4bd3..002fcdb 100644
--- a/test/zkserver.js
+++ b/test/zkserver.js
@@ -8,14 +8,14 @@
 
 module.exports = { ZKServer: ZKServer };
 
-const mod_fsm = require('mooremachine');
-const mod_cproc = require('child_process');
-const mod_fs = require('fs');
-const mod_util = require('util');
-const mod_assert = require('assert-plus');
-const mod_ps = require('ps-node');
-const mod_events = require('events');
-const mod_uuid = require('node-uuid');
+var mod_fsm = require('mooremachine');
+var mod_cproc = require('child_process');
+var mod_fs = require('fs');
+var mod_util = require('util');
+var mod_assert = require('assert-plus');
+var mod_ps = require('ps-node');
+var mod_events = require('events');
+var mod_uuid = require('node-uuid');
 
 function ZKServer(opts) {
 	var self = this;
