commit 0ec27a82892843979ea0bc7ce1f27fe6d79aa906 (refs/changes/17/817/2)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2016-11-01T09:57:48-07:00 (2 years, 11 months ago)
    
    DOCKER-958 Change 'make test-integration-in-coal' to only run against latest docker
    Reviewed by: Trent Mick <trent.mick@joyent.com>

diff --git a/README.md b/README.md
index 40e2e4f..0670e93 100644
--- a/README.md
+++ b/README.md
@@ -266,12 +266,16 @@ run from your Mac dev tree, e.g.:
     ./test/runtest ./test/integration/cli-info.test.js
 
 
-All "cli" integration tests ("test/integration/cli-\*.test.js") are run
-repeatedly -- onces for each supported Docker CLI version. If you want to
-run with just a particular version, you can set the `DOCKER_CLI_VERSIONS`
-(plural) environment variable, e.g:
-
+By default all "cli" integration tests ("test/integration/cli-\*.test.js") are
+run against the latest Docker CLI version (see the
+`DOCKER_AVAILABLE_CLI_VERSIONS` variable in "test/runtest.common"). To run
+against against other versions, or all supported versions, set the
+`DOCKER_CLI_VERSIONS` (plural) environment variable, e.g.:
+
+    make test-integration-in-coal DOCKER_CLI_VERSIONS=all
+    make test-integration-in-coal DOCKER_CLI_VERSIONS="1.11.1 1.10.3"
     DOCKER_CLI_VERSIONS=1.11.1 /zones/$(vmadm lookup -1 alias=docker0)/root/opt/smartdc/docker/test/runtests -f cli-info
+    DOCKER_CLI_VERSIONS=latest /zones/$(vmadm lookup -1 alias=docker0)/root/opt/smartdc/docker/test/runtests -f cli-labels
 
 
 
diff --git a/test/runtest.common b/test/runtest.common
index 70aa5bf..cca242e 100644
--- a/test/runtest.common
+++ b/test/runtest.common
@@ -54,9 +54,13 @@ export NAPI_URL="http://$(vmadm lookup -j alias=napi0 | json 0.nics \
 #    run the "test/integration/cli-*.test.js" files. This is overridable, e.g.:
 #       DOCKER_CLI_VERSIONS=1.6.2 .../runtests
 export DOCKER_AVAILABLE_CLI_VERSIONS="1.12.2 1.11.1 1.10.3 1.9.1 1.8.3 1.7.1 1.6.2"
-if [[ -z "$DOCKER_CLI_VERSIONS" ]]; then
+if [[ "$DOCKER_CLI_VERSIONS" == "all" ]]; then
     export DOCKER_CLI_VERSIONS="$DOCKER_AVAILABLE_CLI_VERSIONS"
 fi
+if [[ -z "$DOCKER_CLI_VERSIONS" || "$DOCKER_CLI_VERSIONS" == "latest" ]]; then
+    # Use the first (latest) version, splitting on the space separator.
+    export DOCKER_CLI_VERSIONS="${DOCKER_AVAILABLE_CLI_VERSIONS%% *}"
+fi
 
 # Guard
 guard_file=/lib/sdc/.sdc-test-no-production-data
