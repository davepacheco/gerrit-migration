{"project":"joyent/illumos-joyent","branch":"master","id":"I87b3eba89974d328822c6ffda4259b7f3d4edc54","number":"1814","subject":"OS-6056 dls_devnet_unset() and DLS temp holds can deadlock OS-5989 OS-3506 introduced deadlock in dls_devnet_prop_task Reviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e Reviewed by: Robert Mustacchi \u003crm@joyent.com\u003e Approved by: Jerry Jelinek \u003cjerry.je","owner":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"url":"https://cr.joyent.us/1814","commitMessage":"OS-6056 dls_devnet_unset() and DLS temp holds can deadlock\nOS-5989 OS-3506 introduced deadlock in dls_devnet_prop_task\nReviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\nReviewed by: Robert Mustacchi \u003crm@joyent.com\u003e\nApproved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\n","createdOn":1492712839,"lastUpdated":1495223582,"open":false,"status":"MERGED","comments":[{"timestamp":1492712839,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 1."},{"timestamp":1492715859,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 1:\n\nThere are three parts to this patch. If you find it hard to review in this manner I can also share a branch with individual commits to show you the separate stages.\n\nThe first part is to revert patcthsets 3 \u0026 4 of my OS-3506 work. These were the patchsets that modified drv_ioc_attr() and drv_ioc_prop_common() to use mac_perim_enter_by_linkid() instead of dls_devnet_hold_tmp() -- introducing the OS-5989 deadlock. In this case I simply reverted the code back to how it was pre OS-3506.\n\nThe second part was to undo another change I made as part of OS-3506: the moving of dls_devnet_unset() inside the MAC perim in the dls_devnet_destroy() function. I made this change so that dls_devnet_destroy() would follow the MAC -\u003e DLS lock ordering rules. While this change did fix the lock ordering it introduced another deadlock: OS-6056 (calling dls_devnet_unset() with wait \u003d\u003d B_TRUE opens us up for deadlock).\n\nWith parts 1 \u0026 2 done the code is now back to OS-3506 days -- this deadlock must be fixed. It turns out there are two modifications that can be made to correct this.\n\n1. Modify dls_devnet_unset() so that it can be safely called from outside the MAC perim. It turns out that the reason it was unsafe to do so before is because it called i_dls_devnet_setzid() from within the i_dls_devnet_lock -- causing a DLS -\u003e MAC lock ordering because setzid eventually grabs the MAC perim. Since i_dls_devnet_setzid() grabs the MAC perim the modifications to the dls_devnet_t are synchronized and the i_dls_devnet_lock doesn\u0027t need to be held (although, now that I think about it, perhaps I should add this lock in i_dls_devnet_setzid() in case we ever get rid of the MAC perim there). If we move the i_dls_devnet_setzid() call outside of the i_dls_devnet_lock then we no longer have DLS -\u003e MAC ordering and consumers of dls_devnet_unset() don\u0027t have to grab the MAC perim first.\n\n2. In some cases, functions call dls_devnet_unset() with the MAC perim held and they can\u0027t do anything about it -- e.g., dls_devnet_set(). In these cases it is imperative that wait is set to B_FALSE (to avoid OS-6056). We can only do this if we know for sure that the tref count is 0 and there is no outstanding prop task. In this case I added a new flag, DD_INITIALIZING, to indicate that a link is in the process of initializing and outside consumers sholdn\u0027t be able to access it. This prevents holds and the kstat update function from accessing the devnet until it is fully initialized and ready. This also means that we can safely call dls_devnet_unset() with wait of B_FALSE in cases where the link is in the DD_INITIALIZING state because we know no temp holds could have been placed. This is actually already enforced, perhaps accidently, by the various locking mechanisms but this flag makes it explicit and perhaps easier to debug if we have any problems in the future (because we will know if a devnet was still initializing).\n\nAs I worte this summary up I realized that I don\u0027t actually coordinate the DD_INITIALIZING flag and the prop task. In a failure scenario there might be a change we call dls_devnet_unset() with wait of B_FALSE and an outstanding prop task -- causing a panic. I need to look into this."},{"timestamp":1493136262,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1:\n\n(4 comments)\n\nIn general, I think this makes sense. I\u0027ve tried to run through the different lock ordering bits in my mind, but it\u0027s a bit hard to really get and feel 100% confident about. I think we do need to work out the case you mention about the prop task outstanding in failure."},{"timestamp":1493145485,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\n(1 comment)\n\nIn addition to Robert\u0027s comments, I tried to compare this code with how it looked from before your work on OS-3506. Is it correct that all of the changes in dld_drv.c here are simply to revert that code back to the pre-OS-3506 state? That is what it looks like to me, but I\u0027d like to be sure."},{"timestamp":1493162637,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1493162825,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 1:\n\n\u003e (1 comment)\n \u003e \n \u003e In addition to Robert\u0027s comments, I tried to compare this code with\n \u003e how it looked from before your work on OS-3506. Is it correct that\n \u003e all of the changes in dld_drv.c here are simply to revert that code\n \u003e back to the pre-OS-3506 state? That is what it looks like to me,\n \u003e but I\u0027d like to be sure.\n\nYes, the changes to dld_drv.c were simply to revert the work I performed in OS-3506 (because those changes introduced OS-5989). I went ahead and double checked this by performing a diff on this file between the commit previous to OS-3506 and the head of this patch. The differences related to OS-3506 did not appear -- as expected."},{"timestamp":1493164103,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1493319258,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 2."},{"timestamp":1493321049,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 2:\n\nI made several improvements in patch set 2:\n\n* Dispatch the DLS prop task _after_ we attempt to set the zoneid. This way we know that if setzid fails and we call dls_devnet_unset() there cannot be an outstanding prop task. This also seems to have improved the concurrent load I can place on DLS (e.g. via dladm commands) now that the prop task creation is done outside of the global DLS lock.\n\n* If the setzid call inside dls_devnet_set() fails then return the error -- don\u0027t continue to create the kstat, set the ddpp, or dispatch the prop task. This was a bug in the original code: if setzid fails then you would return a ddpp that is pointing to freed memory.\n\n* Remove the DD_INITIALIZING flag only after a dd_linkid has been set. This guarentees that the devnet doesn\u0027t have any trefs in the case of line 885. That case is only hit when a physical link was created while dlgmtmd was down -- that would leave an entry in the i_dls_devnet_hash but none in the i_dls_devnet_id_hash (because dlmgmtd needs to be up for softmac to get a linkid). Once dlmgmtd is back up, dls_devnet_set() would be called a second time with a linkid to associate with the phy. This would then call i_dls_devnet_setzid() (for a second time, because it was also called the first time when there was no linkid...this function is a mess) and if it fails we know the link is still DD_INITIALIZING because that flag isn\u0027t removed until we return from dls_devnet_set() back to dls_devnet_create() and there is an associated linkid.\n\n* Modify the dls_devnet_{set,unset}() APIs to take the MAC handle so we can ASSERT the MAC perim is NOT held when wait is true.\n\n* Make MAC transceiver ioctls consistent with drv_ioc_prop_common()."},{"timestamp":1493397049,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\nRyan, this looks good to me. I just had one question. Robert made the comment in dls_mgmt.c and you added the ASSERT at line 944, but I am not not clear how you know that you never take the first path where the flag is not set. Maybe a comment explaining why this ASSERT is valid would be helpful?"},{"timestamp":1493416425,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 3."},{"timestamp":1493417671,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 4."},{"timestamp":1493419284,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 4: Code-Review+1"},{"timestamp":1493422533,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 4:\n\n(1 comment)"},{"timestamp":1493423907,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 5."},{"timestamp":1493424296,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 4:\n\n(1 comment)"},{"timestamp":1493425237,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 5:\n\n(1 comment)"},{"timestamp":1493426164,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 4:\n\n(1 comment)"},{"timestamp":1493653861,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 5: Code-Review+1"},{"timestamp":1493659587,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 5:\n\n(2 comments)\n\nIn general, I think this is good. I just have a few last questions around the comments."},{"timestamp":1493692067,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 6."},{"timestamp":1493692140,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 5:\n\n(2 comments)"},{"timestamp":1493727921,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 6: Code-Review+1"},{"timestamp":1493758204,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 6: Code-Review+1"},{"timestamp":1493880109,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 6:\n\nTesting notes added to both tickets."},{"timestamp":1493898270,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 6: Integration-Approval+1"},{"timestamp":1494963711,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 7."},{"timestamp":1494964012,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 7:\n\nMy latest change set is a rebase on the latest master -- including a small merge conflict with illumos#8149 that I addressed. Unfortunately, since I hadn\u0027t rebased this patch until now, the incremental diff shows changes I didn\u0027t actually make. So there\u0027s no easy way to see that I just rebased and handled the merge conflict."},{"timestamp":1494966097,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7:\n\nRyan, can you point out the actual code changes you made to handle the merge conflict so that I know what to look at vs. ignore?"},{"timestamp":1494966455,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 7:\n\n\u003e Ryan, can you point out the actual code changes you made to handle\n \u003e the merge conflict so that I know what to look at vs. ignore?\n\nGood idea. Here is a direct copy/paste of the conflicts, both from dls_mgmt.c\n\n\nAt the top of file:\n\n /* dls_devnet_t dd_flags */\n #define\tDD_CONDEMNED\t\t0x1\n \u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\n #define\tDD_IMPLICIT_IPTUN\t0x2 /* Implicitly-created ip*.*tun* tunnel */\n \u003d\u003d\u003d\u003d\u003d\u003d\u003d\n #define\tDD_KSTAT_CHANGING\t0x2\n #define\tDD_IMPLICIT_IPTUN\t0x4 /* Implicitly-created ip*.*tun* tunnel */\n #define\tDD_INITIALIZING\t\t0x8\n\n /*\n  * If the link is marked as initializing or condemned then it should\n  * not be visible outside of the DLS framework.\n  */\n #define DD_NOT_VISIBLE(flags)\t(\t\t\t\\\n     (flags \u0026 (DD_CONDEMNED | DD_INITIALIZING)) !\u003d 0)\n \u003e\u003e\u003e\u003e\u003e\u003e\u003e WIP: Change to DD_INITIALIZING\n\n\nIn dls_devnet_stat_update():\n\n \u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\n \tif ((err \u003d dls_devnet_hold_tmp(linkid, \u0026ddp)) !\u003d 0) {\n \t\treturn (err);\n \u003d\u003d\u003d\u003d\u003d\u003d\u003d\n \t/*\n \t * Check the link is being renamed or if the link is going away\n \t * before incrementing dd_tref which in turn prevents the link\n \t * from being renamed or deleted until we finish.\n \t */\n \tmutex_enter(\u0026ddp-\u003edd_mutex);\n \tif (DD_NOT_VISIBLE(ddp-\u003edd_flags) ||\n \t    (ddp-\u003edd_flags \u0026 DD_KSTAT_CHANGING)) {\n \t\tmutex_exit(\u0026ddp-\u003edd_mutex);\n \t\treturn (ENOENT);\n \u003e\u003e\u003e\u003e\u003e\u003e\u003e WIP: Change to DD_INITIALIZING"},{"timestamp":1494969850,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1495040988,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1495216598,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 7:\n\nOkay, I retested this on DEBUG and found issue OS-6137, which was not introduced by this change. I also tested on non-DEBUG and was unable to deadlock."},{"timestamp":1495216695,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 8: Patch Set 7 was rebased."},{"timestamp":1495223466,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 8: Integration-Approval+1"},{"timestamp":1495223567,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Uploaded patch set 9: Commit message was updated."},{"timestamp":1495223582,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Ryan Zezeski"}],"currentPatchSet":{"number":"9","revision":"87b3eba89974d328822c6ffda4259b7f3d4edc54","parents":["d0151f97529dd89fa4e77bb6f9061d41248f7004"],"ref":"refs/changes/14/1814/9","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1495223567,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1494969850,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1495040988,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1495223466,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1495223582,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":165,"deletions":-53}],"sizeInsertions":207,"sizeDeletions":-75},"patchSets":[{"number":"1","revision":"90d3b08102a4f7c69eedc97f28c5722099ca648b","parents":["69aa191a3c86569c788df5bb23a7b5b6133f0225"],"ref":"refs/changes/14/1814/1","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1492712839,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/io/dld/dld_drv.c","line":0,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"We need to update drv_ioc_gettran() and drv_ioc_readtran() as well."},{"file":"usr/src/uts/common/io/dld/dld_drv.c","line":351,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Minor style nit, but if it fits, do the new line before \u0026mph, if we can."},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":945,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"What guarantees this is true when we\u0027re in the case at line +855 that led us here?"},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":945,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I think you mean the block at 885? If so, I have the same question."},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1099,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Can we assert that we do not hold the mac perimeter in this case, so we can catch violations on debug builds? So something like ASSERT0(mac_perim_held(...)). I\u0027m not sure if we have enough context to be able to have the mac_handle here."},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1099,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Unfortunately, we don\u0027t have access to the MAC handle in this context. We could change dls_devset_{set,unset}() to take a mac_handle_t as argument instead of the name. That would allow us to make this assertion. I like that we only pass in the macname because it limits the function to only the data it absolutely needs -- but it would be nice to programmatically verify that we don\u0027t call this function in a way that we know will deadlock.\n\nWhat do you think?"},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1099,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I\u0027m not sure if it\u0027s worth it and moving the complexity. Ultimately I\u0027d defer to you on this. If it isn\u0027t easy or if it\u0027s too much refactoring at the client end, then it may not be worth it."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":20,"deletions":-8},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":84,"deletions":-36}],"sizeInsertions":104,"sizeDeletions":-44},{"number":"2","revision":"a56fbeba9a4cd9d18176d36f9bb28756d0072368","parents":["69aa191a3c86569c788df5bb23a7b5b6133f0225"],"ref":"refs/changes/14/1814/2","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1493319258,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":109,"deletions":-49}],"sizeInsertions":151,"sizeDeletions":-71},{"number":"3","revision":"fc93bd72d1fba66f5003af6245a5ab59e50472b7","parents":["69aa191a3c86569c788df5bb23a7b5b6133f0225"],"ref":"refs/changes/14/1814/3","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1493416425,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":135,"deletions":-53}],"sizeInsertions":177,"sizeDeletions":-75},{"number":"4","revision":"50b73e3f72c57506e56f958faf4fb21768dc0f8f","parents":["69aa191a3c86569c788df5bb23a7b5b6133f0225"],"ref":"refs/changes/14/1814/4","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1493417671,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493419284,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"comments":[{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1909,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Could you explain when this case might happen? Is this an error path or is it indicative of a physical device?"},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1909,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"I\u0027m glad you asked that because while writing a code comment I realized I still had a bit of work to do around DD_INITIALIZING.\n\nI enhanced the block comment to elaborate more on this but I\u0027ll also answer here: if dd_linkid is not set (invalid) it means the call must have come from softmac and it failed to obtain a linkid. In this case softmac will eventually obtain a linkid and finish initializing the link by calling dls_devnet_recreate(). This logic makes sure that a partially initialized PHY is not exposed (and I don\u0027t want it exposed because then something could grab a tref on it and that means that dls_devnet_set() would have to call dls_devnet_unset() with wait \u003d\u003d B_TRUE, which would bring us back to our deadlock)."},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1909,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"OK, so for a physical device, the theory is that if we\u0027re coming through these and we\u0027ve properly taken care of things, then the linkid will no longer be an invalid linkid and thus we set up the physical device?\n\nOr does that change somewhere else for physical devices?"},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1909,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Yea, if dd_linkid isn\u0027t set then we are dealing with a physical link and it\u0027s not done initializing (or dls_devnet_unset() went wrong at some point and called dls_devnet_set() with an invalid linkid -- the weird edge cases in that function are fucked)\n\nFor dls_devnet_create(), if linkid is not set then it means softmac called it with DATALINK_INVALID_LINKID. When this happens softmac_create_datalink() will set the flag SOFTMAC_NEED_RECREATE. Then, when dlmgmtd comes up softmac will call softmac_mac_recreate() (this function has a nice block comment about this). This function will call dls_devnet_recreate() (softmac is the only consumer of this function).\n\ndls_devnet_recreate() ASSERTS that a linkid is set so I can actually remove the check and always strip the flag.\n\nIf dls_devnet_unset() is calling dls_devnet_set() we are in uncharted waters and I just kept it consistent with the other two functions."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":138,"deletions":-53}],"sizeInsertions":180,"sizeDeletions":-75},{"number":"5","revision":"77cbf7c88912f8a361c99c52e19b2e31413ae93c","parents":["69aa191a3c86569c788df5bb23a7b5b6133f0225"],"ref":"refs/changes/14/1814/5","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1493423907,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493653861,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"comments":[{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":905,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I don\u0027t think you want to be using PHY here or elsewhere in the comments. The OS creates drivers usually based on the MAC chip, which may have one or more PHYs in it. I think you probably want to stick to just using the phrase physical link."},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":905,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"You\u0027re right, I was confusing these two. I\u0027ve changed it to \"physical link\"."},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1910,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"See PHY note above."},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","line":1910,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Done."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":166,"deletions":-54}],"sizeInsertions":208,"sizeDeletions":-76},{"number":"6","revision":"42dfcae259294ce7fb2c7a5c7c5318c5b7578b76","parents":["69aa191a3c86569c788df5bb23a7b5b6133f0225"],"ref":"refs/changes/14/1814/6","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1493692067,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493758204,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493727921,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493898270,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":167,"deletions":-54}],"sizeInsertions":209,"sizeDeletions":-76},{"number":"7","revision":"02f84faf2a315c3f37256d60030e214e611c27a4","parents":["20bbbc2871a3fc191b4c28e03bf213a0e83166f4"],"ref":"refs/changes/14/1814/7","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1494963711,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1495040988,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1494969850,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":165,"deletions":-53}],"sizeInsertions":207,"sizeDeletions":-75},{"number":"8","revision":"ba356796fed6ea6db194df2bf63695408f09534e","parents":["d0151f97529dd89fa4e77bb6f9061d41248f7004"],"ref":"refs/changes/14/1814/8","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1495216695,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1495040988,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1494969850,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1495223466,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":165,"deletions":-53}],"sizeInsertions":207,"sizeDeletions":-75},{"number":"9","revision":"87b3eba89974d328822c6ffda4259b7f3d4edc54","parents":["d0151f97529dd89fa4e77bb6f9061d41248f7004"],"ref":"refs/changes/14/1814/9","uploader":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"createdOn":1495223567,"author":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1495040988,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1494969850,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1495223466,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1495223582,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/io/dld/dld_drv.c","type":"MODIFIED","insertions":42,"deletions":-22},{"file":"usr/src/uts/common/io/dls/dls_mgmt.c","type":"MODIFIED","insertions":165,"deletions":-53}],"sizeInsertions":207,"sizeDeletions":-75}],"allReviewers":[{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}]}