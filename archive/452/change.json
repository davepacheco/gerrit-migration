{"project":"joyent/sdcadm","branch":"master","id":"I0e8780a9ae6b6b8cc5dc29e2a94a078d699a3dc8","number":"452","subject":"TOOLS-1527 sdcadm history failures should never make a command fail Reviewed by: Trent Mick \u003ctrent.mick@joyent.com\u003e","owner":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"url":"https://cr.joyent.us/452","commitMessage":"TOOLS-1527 sdcadm history failures should never make a command fail\nReviewed by: Trent Mick \u003ctrent.mick@joyent.com\u003e\n","createdOn":1473697345,"lastUpdated":1474309642,"open":false,"status":"MERGED","comments":[{"timestamp":1473697345,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Uploaded patch set 1."},{"timestamp":1473697377,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1473725361,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 1:\n\n(2 comments)\n\nOverall I think history.js could stand some refactoring. \n\nThere are a number of places where an error is log.info\u0027s without the state of the history. It would be nice to have a crisp definition of where a failure to save a history item should be ignored: is it that history.updateHistory and history.saveHistory will never callback with an err? or is it that callers should ignore (choosing to log if they like) such errors?  A top-comment on this module showing suggested module usage would be helpful.\n\nThe variable name \"history\" is alternately used to mean the \"History\" class instance that manages working with the history, and individual history items. That is a bit confusing.\n\nIf we\u0027d prefer to do refactoring in a separate ticket, that is fine.\n\nDo the current changes handle the case of an empty file in /var/sdcadm/history? a non-JSON file?"},{"timestamp":1473788393,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Uploaded patch set 2."},{"timestamp":1473788441,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1473788596,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Patch Set 2:\n\n(2 comments)\n\nThanks for the review!\n \n\u003e (2 comments)\n \u003e \n \u003e Overall I think history.js could stand some refactoring.\n \u003e \n \u003e There are a number of places where an error is log.info\u0027s without\n \u003e the state of the history. It would be nice to have a crisp\n \u003e definition of where a failure to save a history item should be\n \u003e ignored: is it that history.updateHistory and history.saveHistory\n \u003e will never callback with an err? or is it that callers should\n \u003e ignore (choosing to log if they like) such errors?  A top-comment\n \u003e on this module showing suggested module usage would be helpful.\n \u003e \n \u003e The variable name \"history\" is alternately used to mean the\n \u003e \"History\" class instance that manages working with the history, and\n \u003e individual history items. That is a bit confusing.\n \u003e \n \u003e If we\u0027d prefer to do refactoring in a separate ticket, that is\n \u003e fine.\n \u003e \n\nYeah, I think a separated file would be better, b/c I think that given we don\u0027t wanna history making any sdcadm command fail, I\u0027ll completely drop the error argument returned by history callback when saving history. This means modifications on pretty much anything sdcadm using history so I\u0027d say it\u0027s a good thing to separate the refactoring from this issue, which is a bug fix after all, and should be shipped as soon as possible.\n\n \u003e Do the current changes handle the case of an empty file in\n \u003e /var/sdcadm/history? a non-JSON file?\n\nYeah, it does. JSON parse will fail and the file will be ignored/removed"},{"timestamp":1473883968,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 2:\n\n(6 comments)"},{"timestamp":1474298822,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Uploaded patch set 3."},{"timestamp":1474298857,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Patch Set 2:\n\n(6 comments)\n\nAll applied, thanks again!"},{"timestamp":1474298862,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1474308010,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 3: Code-Review+1 Integration-Approval+1\n\n(1 comment)"},{"timestamp":1474308164,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Patch Set 3:\n\n\u003e (1 comment)\n\nIf we do that, it could result into an exception being thrown during an attempt to save the history, which is exactly what we\u0027re trying to avoid. I\u0027d rather don\u0027t care too much about the bogus file being saved, since there\u0027s logic present to drop that file during the next attempt to read it, if needed"},{"timestamp":1474309457,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Uploaded patch set 4."},{"timestamp":1474309502,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 4: Code-Review+1 Integration-Approval+1"},{"timestamp":1474309523,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1474309601,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Patch Set 5: Patch Set 4 was rebased"},{"timestamp":1474309610,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Pedro Palazón Candel"},{"timestamp":1474309642,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5:\n\n\"make check\" passed ok"}],"currentPatchSet":{"number":"5","revision":"15860cc0150df512676100f7369edf16cb086171","parents":["ba692d78ab118dc928fe87416d441402c022f2d9"],"ref":"refs/changes/52/452/5","uploader":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"createdOn":1474309601,"author":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1474309502,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1474309502,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1474309523,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"SUBM","value":"1","grantedOn":1474309610,"by":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"lib/cli/do_history.js","type":"MODIFIED","insertions":7,"deletions":-5},{"file":"lib/history.js","type":"MODIFIED","insertions":207,"deletions":-80},{"file":"test/history.test.js","type":"MODIFIED","insertions":74,"deletions":-46}],"sizeInsertions":288,"sizeDeletions":-131},"patchSets":[{"number":"1","revision":"e7cd48a9126caf72f44296b00c31db2211c93ad3","parents":["e98ed967f1662f002126cf8e0c996f2255578995"],"ref":"refs/changes/52/452/1","uploader":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"createdOn":1473697345,"author":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1473697377,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/history.js","line":45,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"It seems wrong to save \u0027{}\u0027 as a history item when stringification fails. Log a warning and drop it?"},{"file":"lib/history.js","line":45,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Done"},{"file":"lib/history.js","line":70,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Hrm. I think if there *is* a bogus JSON file here, that there should be some action:\n\n- log a warning: including its full content and path in the log record\n- remove the history item file (or move it out of the way)\n\nAlso, is there anywhere that this parsed JSON is validated? I.e. what if there is a valid JSON file there that isn\u0027t a valid history item? Perhaps a \u0027validateHistoryItem\u0027 function in history.js that is called by both saveHistoryToFile and readHistoryFromFile"},{"file":"lib/history.js","line":70,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Done. I\u0027ve moved both read/write file functions to be History object methods so they can get access to sdcadm logger w/o having to add any more arguments."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/cli/do_history.js","type":"MODIFIED","insertions":7,"deletions":-5},{"file":"lib/history.js","type":"MODIFIED","insertions":64,"deletions":-36},{"file":"test/history.test.js","type":"MODIFIED","insertions":74,"deletions":-46}],"sizeInsertions":145,"sizeDeletions":-87},{"number":"2","revision":"314246bf1949e18e9ae388096316a1c69ca29d46","parents":["e98ed967f1662f002126cf8e0c996f2255578995"],"ref":"refs/changes/52/452/2","uploader":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"createdOn":1473788393,"author":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1473788441,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/history.js","line":64,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Leading \u0027_\u0027 to indicate private method?"},{"file":"lib/history.js","line":64,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Done"},{"file":"lib/history.js","line":67,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Frankly I don\u0027t see how this case happens. I\u0027d be inclined to drop this guard."},{"file":"lib/history.js","line":67,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Done"},{"file":"lib/history.js","line":77,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Include the history item that couldn\u0027t be stringified in the log.error. String should perhaps be \"could not serialize history item\"."},{"file":"lib/history.js","line":77,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Done. Good idea, yes"},{"file":"lib/history.js","line":84,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"I believe this whole callback to fs.writeFile could just be \"cb\". I.e. this:\n\n```\nfs.writeFile(fname, s, {encoding: \u0027utf8\u0027}, cb);\n```"},{"file":"lib/history.js","line":84,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Good call. Too much markdown-minded, btw ;-)"},{"file":"lib/history.js","line":99,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Leading \u0027_\u0027 to indicate private method?"},{"file":"lib/history.js","line":99,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Done"},{"file":"lib/history.js","line":142,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Perhaps leading \u0027_\u0027 to indicate this is a private method? That was a common pattern in *Python* at least, and I\u0027ve used that commonly."},{"file":"lib/history.js","line":142,"reviewer":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"message":"Done. It would be definitely better to also be able to define private methods properly, but I also like the \"_\" approach anyway :-)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"lib/cli/do_history.js","type":"MODIFIED","insertions":7,"deletions":-5},{"file":"lib/history.js","type":"MODIFIED","insertions":216,"deletions":-80},{"file":"test/history.test.js","type":"MODIFIED","insertions":74,"deletions":-46}],"sizeInsertions":297,"sizeDeletions":-131},{"number":"3","revision":"7f9d80d2d17c6ec67ef08f2d8ed938c4dc9f4839","parents":["e98ed967f1662f002126cf8e0c996f2255578995"],"ref":"refs/changes/52/452/3","uploader":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"createdOn":1474298822,"author":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1474298862,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1474308010,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1474308010,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}}],"comments":[{"file":"lib/history.js","line":66,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Now that the \"if (history \u003d\u003d\u003d null)\" is dropped because expected code paths can\u0027t result in that, it might be nice to have a `assert.object(history, \u0027history\u0027)` to break if there is a programmer error. Otherwise we\u0027d get a bogus saved file:\n\n\u003e JSON.stringify(undefined)\nundefined\n\u003e JSON.stringify(null)\n\u0027null\u0027"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"lib/cli/do_history.js","type":"MODIFIED","insertions":7,"deletions":-5},{"file":"lib/history.js","type":"MODIFIED","insertions":205,"deletions":-80},{"file":"test/history.test.js","type":"MODIFIED","insertions":74,"deletions":-46}],"sizeInsertions":286,"sizeDeletions":-131},{"number":"4","revision":"0e8780a9ae6b6b8cc5dc29e2a94a078d699a3dc8","parents":["e98ed967f1662f002126cf8e0c996f2255578995"],"ref":"refs/changes/52/452/4","uploader":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"createdOn":1474309457,"author":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1474309523,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1474309502,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1474309502,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"lib/cli/do_history.js","type":"MODIFIED","insertions":7,"deletions":-5},{"file":"lib/history.js","type":"MODIFIED","insertions":207,"deletions":-80},{"file":"test/history.test.js","type":"MODIFIED","insertions":74,"deletions":-46}],"sizeInsertions":288,"sizeDeletions":-131},{"number":"5","revision":"15860cc0150df512676100f7369edf16cb086171","parents":["ba692d78ab118dc928fe87416d441402c022f2d9"],"ref":"refs/changes/52/452/5","uploader":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"createdOn":1474309601,"author":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1474309523,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1474309502,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1474309502,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"SUBM","value":"1","grantedOn":1474309610,"by":{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"lib/cli/do_history.js","type":"MODIFIED","insertions":7,"deletions":-5},{"file":"lib/history.js","type":"MODIFIED","insertions":207,"deletions":-80},{"file":"test/history.test.js","type":"MODIFIED","insertions":74,"deletions":-46}],"sizeInsertions":288,"sizeDeletions":-131}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},{"name":"Pedro Palazón Candel","email":"pedro@joyent.com","username":"kusor"}]}