commit 37f447913d960b6efc962e18134f0882d0d4b975
Author: Marsell Kukuljevic <marsell@joyent.com>
Date:   2019-04-22T13:49:35+00:00 (6 months ago)
    
    TRITON-1417 cloudapi fails on nightly due to zone without cpu_cap
    Reviewed by: Trent Mick <trentm@gmail.com>
    Approved by: Trent Mick <trentm@gmail.com>

diff --git a/tests/test.FsWatcher.js b/tests/test.FsWatcher.js
index 8897415..e8b989c 100644
--- a/tests/test.FsWatcher.js
+++ b/tests/test.FsWatcher.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var execFile = require('child_process').execFile;
@@ -87,7 +87,8 @@ test('create VM', function _test(t) {
         alias: 'vm-agent_testvm',
         brand: 'joyent-minimal',
         image_uuid: smartosImageUUID,
-        quota: 10
+        quota: 10,
+        cpu_cap: 100
     };
 
     payload.log = mocks.Logger;
diff --git a/tests/test.PeriodicWatcher.js b/tests/test.PeriodicWatcher.js
index e336465..ecccd6f 100644
--- a/tests/test.PeriodicWatcher.js
+++ b/tests/test.PeriodicWatcher.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var execFile = require('child_process').execFile;
@@ -88,7 +88,8 @@ test('create VM', function _test(t) {
         alias: 'vm-agent_testvm',
         brand: 'joyent-minimal',
         image_uuid: smartosImageUUID,
-        quota: 10
+        quota: 10,
+        cpu_cap: 100
     };
 
     payload.log = mocks.Logger;
@@ -288,7 +289,8 @@ test('create KVM VM', function _test(t) {
     var payload = {
         alias: 'vm-agent_testkvm',
         autoboot: false,
-        brand: 'kvm'
+        brand: 'kvm',
+        cpu_cap: 100
     };
 
     // start with an exmpt set of events
diff --git a/tests/test.VmAgentRealVmadm.js b/tests/test.VmAgentRealVmadm.js
index ee7b15e..78f68d6 100644
--- a/tests/test.VmAgentRealVmadm.js
+++ b/tests/test.VmAgentRealVmadm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var execFile = require('child_process').execFile;
@@ -192,6 +192,7 @@ test('Real vmadm, fake VMAPI', function _test(t) {
         alias: 'vm-agent_testvm',
         brand: 'joyent-minimal',
         image_uuid: smartosImageUUID,
+        cpu_cap: 100,
         uuid: node_uuid.v4(),
         log: mocks.Logger
     };
@@ -439,7 +440,8 @@ test('Real vmadm, fake VMAPI: 1 invalid VM', function _test(t) {
     var payload = {
         alias: 'vm-agent_testvm',
         brand: 'joyent-minimal',
-        image_uuid: smartosImageUUID
+        image_uuid: smartosImageUUID,
+        cpu_cap: 100
     };
     var vmAgent;
     var vms = [];
@@ -663,6 +665,7 @@ test('Real vmadm, fake VMAPI: validate DNI', function _test(t) {
         brand: 'joyent-minimal',
         do_not_inventory: true,
         image_uuid: smartosImageUUID,
+        cpu_cap: 100,
         uuid: node_uuid.v4()
     };
     var vmAgent;
@@ -861,7 +864,8 @@ test('Real vmadm, fake VMAPI: new DNI VM', function _test(t) {
         autoboot: true,
         brand: 'joyent-minimal',
         do_not_inventory: true,
-        image_uuid: smartosImageUUID
+        image_uuid: smartosImageUUID,
+        cpu_cap: 100
     };
     var payload1 = JSON.parse(JSON.stringify(payload));
     var payload2 = JSON.parse(JSON.stringify(payload));
@@ -978,6 +982,7 @@ test('VmAgent works after initial errors', function _test(t) {
         autoboot: false,
         brand: 'joyent-minimal',
         image_uuid: smartosImageUUID,
+        cpu_cap: 100,
         uuid: node_uuid.v4()
     };
     var resolveAfter = 3;
diff --git a/tests/test.VmWatcher.js b/tests/test.VmWatcher.js
index 2c1000f..14754f6 100644
--- a/tests/test.VmWatcher.js
+++ b/tests/test.VmWatcher.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var execFile = require('child_process').execFile;
@@ -122,7 +122,8 @@ test('create VM', function _test(t) {
         alias: 'vm-agent_testvm',
         brand: 'joyent-minimal',
         image_uuid: smartosImageUUID,
-        quota: 10
+        quota: 10,
+        cpu_cap: 100
     };
 
     payload.log = mocks.Logger;
diff --git a/tests/test.VmadmEventsWatcher.js b/tests/test.VmadmEventsWatcher.js
index 49a3356..26e7663 100644
--- a/tests/test.VmadmEventsWatcher.js
+++ b/tests/test.VmadmEventsWatcher.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var execFile = require('child_process').execFile;
@@ -80,7 +80,8 @@ function main() {
             alias: 'vm-agent_testvm',
             brand: 'joyent-minimal',
             image_uuid: smartosImageUUID,
-            quota: 10
+            quota: 10,
+            cpu_cap: 100
         };
 
         payload.log = mocks.Logger;
diff --git a/tests/test.ZoneeventWatcher.js b/tests/test.ZoneeventWatcher.js
index 7f2c186..7aee085 100644
--- a/tests/test.ZoneeventWatcher.js
+++ b/tests/test.ZoneeventWatcher.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var test = require('tape');
@@ -79,7 +79,8 @@ test('create VM', function _test(t) {
         autoboot: false,
         brand: 'joyent-minimal',
         image_uuid: smartosImageUUID,
-        quota: 10
+        quota: 10,
+        cpu_cap: 100
     };
     var waitAfterCreate = 5000;
 
diff --git a/tests/test.ZoneeventWatcherOverflow.js b/tests/test.ZoneeventWatcherOverflow.js
index f141005..e4de722 100644
--- a/tests/test.ZoneeventWatcherOverflow.js
+++ b/tests/test.ZoneeventWatcherOverflow.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var execFile = require('child_process').execFile;
@@ -109,7 +109,8 @@ function main() {
                 autoboot: true,
                 brand: 'joyent-minimal',
                 image_uuid: smartosImageUUID,
-                quota: 10
+                quota: 10,
+                cpu_cap: 100
             };
 
             payload.log = mocks.Logger;
