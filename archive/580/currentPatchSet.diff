commit 6e917e934726c36cbbe88063b0c0d3c85c4cdef3 (refs/changes/80/580/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2016-10-03T14:21:04-07:00 (3 years ago)
    
    joyent/node-mname-client#1 Add contribution guidelines, update readme

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000..ad06cc3
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,16 @@
+# Contributing
+
+This repository uses [cr.joyent.us](https://cr.joyent.us) (Gerrit) for new
+changes.  Anyone can submit changes.  To get started, see the [cr.joyent.us user
+guide](https://github.com/joyent/joyent-gerrit/blob/master/docs/user/README.md).
+This repo does not use GitHub pull requests.
+
+See the [Joyent Engineering
+Guidelines](https://github.com/joyent/eng/blob/master/docs/index.md) for general
+best practices expected in this repository.
+
+Contributions should be "make check" clean.  The "make check" target will
+install all necessary tools as part of its operation.
+
+If you're changing something non-trivial or user-facing, you may want to submit
+an issue first.
diff --git a/README.md b/README.md
index 7825182..5c92514 100644
--- a/README.md
+++ b/README.md
@@ -1,13 +1,42 @@
 # node-named-client
 
-A DNS client library using the packet parsing/generating code from node-named.
+A DNS client library using the packet parsing/generating code from node-mname.
+
+## Example
+
+```js
+const mod_mname_client = require('mname-client');
+
+var client = new mod_name_client.DnsClient({
+    /* Will try all of the set name servers in parallel. */
+    resolvers: ['8.8.8.8', '8.8.4.4']
+});
+
+client.lookup({
+    domain: 'google.com',
+    type: 'AAAA',
+    timeout: 3000
+}, function (err, message) {
+        if (err) {
+                /* ... */
+                return;
+        }
+        var ans = msg.getAnswers();
+        /* ans will look like: */
+        ans = [ { name: 'google.com',
+          type: 'A',
+          class: 'IN',
+          ttl: 299,
+          target: '216.58.192.14' } ];
+});
+```
 
 ## Example (low-level API)
 
 ```js
-const mod_named_client = require('named-client');
+const mod_mname_client = require('mname-client');
 
-var req = new mod_named_client.DnsMessage();
+var req = new mod_mname_client.DnsMessage();
 
 req.addQuestion('google.com', 'A');
 req.addEDNS({ maxUDPLength: 1480 });
@@ -44,7 +73,7 @@ req.on('reply', function (msg, done) {
   done();
 });
 
-var sock = new mod_named_client.DnsTcpSocket({
+var sock = new mod_mname_client.DnsTcpSocket({
   address: '8.8.8.8',
   port: 53
 });
@@ -66,7 +95,7 @@ sock.on('error', function (err) {
    */
 });
 
-var sock = new mod_named_client.DnsUdpSocket({ family: 'udp4' });
+var sock = new mod_mname_client.DnsUdpSocket({ family: 'udp4' });
 sock.on('ready', function () {
   /*
    * You have to provide a destination to send on a DnsUdpSocket, as you
