From 51ca03a1dd0b102b12b47a15527930d76ade64f0 Mon Sep 17 00:00:00 2001
From: Patrick Mooney <pmooney@pfmooney.com>
Date: Thu, 6 Jul 2017 17:16:27 +0000
Subject: [PATCH] OS-6222 lxbrand lseek32 mishandles negative offsets

---
 usr/src/uts/common/brand/lx/syscall/lx_lseek.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/usr/src/uts/common/brand/lx/syscall/lx_lseek.c b/usr/src/uts/common/brand/lx/syscall/lx_lseek.c
index 222fc03386..3ac32a2faf 100644
--- a/usr/src/uts/common/brand/lx/syscall/lx_lseek.c
+++ b/usr/src/uts/common/brand/lx/syscall/lx_lseek.c
@@ -10,7 +10,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -46,6 +46,7 @@ long
 lx_lseek32(int fd, off32_t offset, int whence)
 {
 	offset_t res;
+	const uint32_t hival = (offset < 0) ? (uint32_t)-1 : 0;
 
 	/*
 	 * When returning EOVERFLOW for an offset which is outside the bounds
@@ -57,7 +58,7 @@ lx_lseek32(int fd, off32_t offset, int whence)
 	 * successful seek.
 	 */
 	ASSERT(get_udatamodel() == DATAMODEL_ILP32);
-	res = llseek32(fd, (uint32_t)offset, 0, whence);
+	res = llseek32(fd, (uint32_t)offset, hival, whence);
 	if (ttolwp(curthread)->lwp_errno == 0 && res > MAXOFF32_T) {
 		return (set_errno(EOVERFLOW));
 	}
-- 
2.21.0

