From 3e7a27d654420de2ddc065eec463416d38c7bdee Mon Sep 17 00:00:00 2001
From: Tim Foster <tim.foster@joyent.com>
Date: Wed, 10 Apr 2019 13:14:05 +0100
Subject: [PATCH] TOOLS-2229 MG's launch-build script needs to adapt to
 lullaby-phase4 OS-7453 convert platform build to engbld framework

---
 Makefile                        |  2 +-
 tools/launch-build              | 65 ++++++++++++++++++-----
 tools/ls-missing-release-builds |  7 ++-
 tools/smartos-index             | 19 -------
 tools/smartos-release           | 91 ---------------------------------
 5 files changed, 59 insertions(+), 125 deletions(-)
 delete mode 100755 tools/smartos-index
 delete mode 100755 tools/smartos-release

diff --git a/Makefile b/Makefile
index 98e8e97..5777cd2 100644
--- a/Makefile
+++ b/Makefile
@@ -2891,7 +2891,7 @@ $(SMARTOS_BITS):
 	@echo "# Build smartos release: branch $(SMARTOS_LIVE_BRANCH), sha $(SMARTOS_LIVE_SHA), time `date -u +%Y%m%dT%H%M%SZ`"
 	(cd build/smartos-live \
 		&& ./tools/build_changelog \
-		&& ./tools/build_boot_image -I -r . \
+		&& ./tools/build_boot_image -I -r .
 		&& ./tools/build_boot_image -r . \
 		&& ./tools/build_vmware -r .)
 	mkdir -p $(SMARTOS_BITS_DIR)
diff --git a/tools/launch-build b/tools/launch-build
index 5bd1fa4..b6fcbb1 100755
--- a/tools/launch-build
+++ b/tools/launch-build
@@ -1,4 +1,4 @@
-#! /bin/bash
+#!/bin/bash
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright 2017, Joyent, Inc.
+# Copyright 2019, Joyent, Inc.
 #
 
 #
@@ -29,17 +29,17 @@ function usage() {
 	if [[ -n $1 ]]; then
 		printf "%s: %s\n" "$PROGNAME" "$1" >&2
 	fi
-	printf "usage:\n    $PROGNAME [-v] [-H url] [-b BRANCH] [-t TRY_BRANCH] [-u auth] project\n" >&2
+	printf "usage:\n    $PROGNAME [-v] [-H url] [-b BRANCH] [-F PLAT_FLAVOR] [-u auth] project\n" >&2
 	exit 2
 }
 
-while getopts ':H:u:b:t:hv' opt; do
+while getopts 'F:H:u:b:hv' opt; do
 	case $opt in
 	H) JENKINS_URL=$OPTARG;;
 	u) JENKINS_AUTH=$OPTARG;;
 	b) BRANCH=$OPTARG;;
-	t) TRY_BRANCH=$OPTARG;;
 	v) VERBOSE=true;;
+	F) PLAT_FLAVOR=$OPTARG;;
 	h) usage;;
 	:) usage "-$OPTARG requires an argument";;
 	\?) usage "illegal option: -$OPTARG";;
@@ -48,6 +48,27 @@ done
 
 PROJECT=${@:$OPTIND:1}
 
+if [[ -n "$PLAT_FLAVOR" ]]; then
+	case $PROJECT in
+		"platform"|"platform-debug"|"timf-platform"|"timf-platform-debug")
+			case "$PLAT_FLAVOR" in
+				"triton"|"smartos"|"triton-and-smartos")
+					;;
+				*)
+					echo "ERROR: unknown platform flavor, expecting one of:"
+					echo "    smartos"
+					echo "    triton"
+					echo "    triton-and-smartos"
+					exit 1
+					;;
+			esac
+		;;
+	*)
+		usage "-F should only be used for platform or platform-debug builds"
+		;;
+	esac
+fi
+
 if [[ -z $PROJECT ]]; then
 	usage "project to build must be specified"
 fi
@@ -60,16 +81,9 @@ if [[ -z $JENKINS_AUTH ]]; then
 	usage "JENKINS_AUTH must be set to <user>:<api token> (get it here: ${JENKINS_URL}/me/configure)"
 fi
 
-if [[ -n $BRANCH && -n $TRY_BRANCH ]]; then
-	usage "-b and -t cannot be used together"
-fi
-
 if [[ -n $BRANCH ]]; then
 	printf "Building %s with BRANCH=%s\n" "$PROJECT" "$BRANCH"
 	BUILD_PARAM=`printf '{"name":"BRANCH", "value": "%s"}' $BRANCH`
-elif [[ -n $TRY_BRANCH ]]; then
-	printf "Building %s with TRY_BRANCH=%s\n" "$PROJECT" "$TRY_BRANCH"
-	BUILD_PARAM=`printf '{"name":"TRY_BRANCH", "value": "%s"}' $TRY_BRANCH`
 fi
 
 if [[ -n $VERBOSE ]]; then
@@ -81,6 +95,33 @@ fi
 CRUMB_URL="$JENKINS_URL/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)"
 BUILD_URL="$JENKINS_URL/job/$PROJECT/build"
 
+#
+# The platform build expects set of parameters to specify which branches should
+# be built. It's unfortunate we need to set this here, but we can't default
+# jenkins to using ${BRANCH} because that'll take the long-form git branch
+#
+PLAT_REPOS='illumos-extra illumos-joyent ur-agent kvm kvm-cmd mdata-client eng'
+for repo in $PLAT_REPOS; do
+	if [[ -z "$PLAT_BRANCHES_TEMPLATE" ]]; then
+		PLAT_BRANCHES_TEMPLATE="$repo: BRANCH\n"
+	else
+		PLAT_BRANCHES_TEMPLATE="${PLAT_BRANCHES_TEMPLATE}$repo: BRANCH\n"
+	fi
+done
+
+case $PROJECT in
+	"platform"|"platform-debug"|"timf-platform"|"timf-platform-debug")
+		if [[ -n "$BRANCH" ]]; then
+			PLAT_BRANCHES=$(echo "${PLAT_BRANCHES_TEMPLATE}" | \
+			    sed -e "s/BRANCH/${BRANCH}/g")
+			BUILD_PARAM="${BUILD_PARAM},$(printf '{"name": "CONFIGURE_BRANCHES", "value": "%s"}' "${PLAT_BRANCHES}")"
+		fi
+		if [[ -n "$PLAT_FLAVOR" ]]; then
+			BUILD_PARAM="${BUILD_PARAM},$(printf '{"name": "PLATFORM_BUILD_FLAVOR", "value": "%s"}' "${PLAT_FLAVOR}")"
+		fi
+		;;
+esac
+
 # Fetch the CSRF token to send in our request's headers
 CRUMB=`curl ${CURL_OPTS[@]} --user "$JENKINS_AUTH" "$CRUMB_URL"`
 
diff --git a/tools/ls-missing-release-builds b/tools/ls-missing-release-builds
index 3b1d3f0..5a2ba97 100755
--- a/tools/ls-missing-release-builds
+++ b/tools/ls-missing-release-builds
@@ -6,11 +6,11 @@
 #
 
 #
-# Copyright 2017, Joyent, Inc.
+# Copyright 2019, Joyent, Inc.
 #
 
 #
-# Quick hack script that looks in /Joyent_Dev/stor/builds/...
+# Quick hack script that looks in /Joyent_Dev/public/builds/...
 # for SDC components for which there is no "release-YYYYMMDD"
 # build. These are ones that you may need to manually kick
 # off in jenkins.
@@ -85,5 +85,8 @@ echo "$targets" | while read target public; do
     if [[ -z "$latest" ]]; then
         echo "# $target, '$latest_mpath' does not exist" >&2
         echo "./tools/launch-build -b $release $target"
+        echo "note that for platform builds, you need to supply a"
+	echo " -F <flavor> target where <flavor> is either"
+	echo "smartos or triton-and-smartos"
     fi
 done
diff --git a/tools/smartos-index b/tools/smartos-index
deleted file mode 100755
index 7605c36..0000000
--- a/tools/smartos-index
+++ /dev/null
@@ -1,19 +0,0 @@
-#!/bin/bash
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-
-#
-# Copyright (c) 2014, Joyent, Inc.
-#
-
-echo "<html>"
-echo "<head><title>SmartOS ${1}</title></head>"
-echo "<body>"
-for x in `ls * | grep -v index.html`; do
-  echo "<a href=\"$x\">$x</a><br>"
-done
-echo "<a href=\"md5sums.txt\">md5sums.txt</a>"
-echo "</body></html>"
diff --git a/tools/smartos-release b/tools/smartos-release
deleted file mode 100755
index c9b270f..0000000
--- a/tools/smartos-release
+++ /dev/null
@@ -1,91 +0,0 @@
-#!/bin/bash
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-
-#
-# Copyright 2019, Joyent, Inc.
-#
-
-# Update the SmartOS release directory
-if [ "$TRACE" != "" ]; then
-    export PS4='${BASH_SOURCE}:${LINENO}: '
-    set -o xtrace
-fi
-set -o errexit
-
-TOP=$(cd $(dirname $0)/../; pwd)
-PATH=$PATH:${TOP}/node_modules/manta/bin
-
-
-# --- Manta config
-
-if [[ -z "$MANTA_KEY_ID" ]]; then
-    export MANTA_KEY_ID=`ssh-keygen -l -f ~/.ssh/id_rsa.pub | awk '{print $2}' | tr -d '\n'`
-fi
-if [[ -z "$MANTA_URL" ]]; then
-    export MANTA_URL=https://us-east.manta.joyent.com
-fi
-if [[ -z "$MANTA_USER" ]]; then
-    export MANTA_USER="Joyent_Dev";
-fi
-
-
-# --- support functions
-
-function fatal {
-    echo "$(basename $0): error: $1"
-    exit 1
-}
-
-function errexit {
-    [[ $1 -ne 0 ]] || exit 0
-    fatal "error exit status $1 at line $2"
-}
-
-function print_help() {
-    echo "Usage:"
-    echo "  ./tools/smartos-release BRANCH TIMESTAMP"
-    echo ""
-    echo "Create snaplinks under /\${MANTA_USER}/public/SmartOS/\${TIMESTAMP}"
-    echo "pointing to objects under /\${MANTA_USER}/public/builds/smartos/\${BRANCH}-\${TIMESTAMP}/smartos/"
-}
-
-
-# --- mainline
-
-trap 'errexit $? $LINENO' EXIT
-
-BRANCH=$1
-shift
-TIMESTAMP=$1
-
-SOURCE=/${MANTA_USER}/public/builds/smartos/${BRANCH}-${TIMESTAMP}/smartos/
-SMARTOS=/${MANTA_USER}/public/SmartOS
-DESTINATION=${SMARTOS}/${TIMESTAMP}
-
-start_time=$(date +%s)
-echo "Creating release snaplinks under ${DESTINATION}"
-
-mmkdir -v -p ${DESTINATION}
-mfind ${SOURCE} -t o | while read OBJECT; do
-    mln ${OBJECT} ${DESTINATION}/$(basename ${OBJECT})
-done
-
-echo "Updating top level ${SMARTOS} snaplinks"
-mln ${SOURCE}/platform-${TIMESTAMP}.tgz ${SMARTOS}/platform-latest.tgz
-mln ${SOURCE}/smartos-${TIMESTAMP}.iso ${SMARTOS}/smartos-latest.iso
-mln ${SOURCE}/smartos-${TIMESTAMP}-USB.img.gz ${SMARTOS}/smartos-latest-USB.img.gz
-mln ${SOURCE}/smartos-${TIMESTAMP}.vmwarevm.tar.gz ${SMARTOS}/smartos-latest.vmwarevm.tar.gz
-
-echo "Updating ${SMARTOS}/latest object"
-echo ${DESTINATION} | mput -v -H 'content-type: text/plain' ${SMARTOS}/latest
-
-echo "<html><head><meta HTTP-EQUIV=\"REFRESH\" content=\"0; url=${SOURCE}/index.html\"></head></html>" | mput -H 'content-type: text/html' ${SMARTOS}/latest.html
-
-end_time=$(date +%s)
-elapsed=$((${end_time} - ${start_time}))
-echo "Creating release snaplinks took ${elapsed} seconds (Manta path=${DESTINATION})"
-exit 0
-- 
2.21.0

