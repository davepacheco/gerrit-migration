commit 60c09feafb0ad8e5714b191cb5af92dffafa5373 (refs/changes/83/2083/1)
Author: Trent Mick <trentm@gmail.com>
Date:   2017-06-13T16:38:02-07:00 (2 years, 4 months ago)
    
    MON-364 cmd alarm faults could include environment details

diff --git a/plugins/lib/cmd.js b/plugins/lib/cmd.js
index 240d2f5..804bd30 100644
--- a/plugins/lib/cmd.js
+++ b/plugins/lib/cmd.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -23,7 +23,7 @@ var util = require('util'),
 var assert = require('assert-plus');
 
 var ProbeType = require('./probe');
-
+var objCopy = require('amon-common').utils.objCopy;
 
 
 //---- globals
@@ -99,16 +99,17 @@ CmdProbe.prototype.runCmd = function runCmd() {
 
     try {
         exec(this.cmd, this._cmdOptions, function (cmdErr, stdout, stderr) {
-            var cmdSummary;
-            if (log.debug()) {
-                cmdSummary = {
-                    cmd: self.cmd,
-                    exitStatus: (cmdErr ? cmdErr.code : 0),
-                    signal: (cmdErr ? cmdErr.signal : undefined),
-                    stdout: clip(stdout, 1024),
-                    stderr: clip(stderr, 1024)
-                };
+            var cmdDetails = {
+                cmd: self.cmd,
+                exitStatus: (cmdErr ? cmdErr.code : 0),
+                signal: (cmdErr ? cmdErr.signal : null),
+                stdout: clip(stdout, 1024),
+                stderr: clip(stderr, 1024)
+            };
+            if (self._cmdOptions.env) {
+                cmdDetails.env = self._cmdOptions.env;
             }
+
             var fail = false, reason;
             if (!self.ignoreExitStatus && cmdErr) {
                 fail = true;
@@ -133,9 +134,9 @@ CmdProbe.prototype.runCmd = function runCmd() {
                 reason = 'stderr';
             }
             if (!fail) {
-                log.trace(cmdSummary, 'cmd pass');
+                log.trace(cmdDetails, 'cmd pass');
             } else {
-                log.debug(cmdSummary, 'cmd fail (%s)', reason);
+                log.debug(cmdDetails, 'cmd fail (%s)', reason);
                 if (++self._count >= self.threshold) {
                     log.info({count: self._count, threshold: self.threshold},
                         'cmd event');
@@ -152,7 +153,7 @@ CmdProbe.prototype.runCmd = function runCmd() {
                     else if (reason === 'stderr')
                         msg = format('Command failed (stderr matched %s).',
                             self.stderrMatcher);
-                    self.emitEvent(msg, self._count, cmdSummary);
+                    self.emitEvent(msg, self._count, cmdDetails);
                 }
             }
 
