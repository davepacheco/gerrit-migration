commit 00141b7725eeb730769952cba1f2c7b823fa8b48 (refs/changes/02/4202/1)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2018-06-13T19:00:21+00:00 (1 year, 4 months ago)
    
    TRITON-500 Use batch() in writeObjects() for VMAPI tests

diff --git a/test/lib/moray.js b/test/lib/moray.js
index b0809a8..0f61541 100644
--- a/test/lib/moray.js
+++ b/test/lib/moray.js
@@ -79,26 +79,30 @@ function writeObjects(morayClient, bucketName, valueTemplate, nbObjects,
 
     var i;
 
-    var objectKeys = [];
+    var requests = [];
     for (i = 0; i < nbObjects; ++i) {
-        objectKeys.push(libuuid.create());
+        var newObjectValue = jsprim.deepCopy(valueTemplate);
+        var newObjectUuid = libuuid.create();
+        newObjectValue.uuid = newObjectUuid;
+        requests.push({
+            bucket: bucketName,
+            key: newObjectUuid,
+            operation: 'put',
+            value: newObjectValue,
+            option: {
+                etag: null
+            }
+        });
     }
 
-    vasync.forEachParallel({
-        func: function writeObject(objectUuid, done) {
-            var newObjectValue = jsprim.deepCopy(valueTemplate);
-            newObjectValue.uuid = objectUuid;
-            /*
-             * noBucketCache: true is needed so that when putting objects in
-             * moray after a bucket has been deleted and recreated, it doesn't
-             * use an old bucket schema and determine that it needs to update an
-             * _rver column that doesn't exist anymore.
-             */
-            morayClient.putObject(bucketName, objectUuid, newObjectValue, {
-                noBucketCache: true
-            }, done);
-        },
-        inputs: objectKeys
+    /*
+     * noBucketCache: true is needed so that when putting objects in
+     * moray after a bucket has been deleted and recreated, it doesn't
+     * use an old bucket schema and determine that it needs to update an
+     * _rver column that doesn't exist anymore.
+     */
+    morayClient.batch(requests, {
+        noBucketCache: true
     }, callback);
 }
 
