commit aa29e78f947983f8321215c3d4867de89dbba9de
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2019-04-17T15:46:28-07:00 (6 months ago)
    
    TRITON-1412 vmapi test suite broken by instance migration changes

diff --git a/test/lib/moray.js b/test/lib/moray.js
index 6d8f71e..d8842cf 100644
--- a/test/lib/moray.js
+++ b/test/lib/moray.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -19,6 +19,35 @@ var verror = require('verror');
 
 var common = require('../common');
 
+function getDefaultBucketsConfig(suffix) {
+    return {
+        vms: {
+            name: 'test_vmapi_vms_' + suffix,
+            schema: {
+                index: {
+                    uuid: { type: 'string', unique: true}
+                }
+            }
+        },
+        server_vms: {
+            name: 'test_vmapi_server_vms_' + suffix,
+            schema: {}
+        },
+        vm_role_tags: {
+            name: 'test_vmapi_vm_role_tags_' + suffix,
+            schema: {
+                index: {
+                    role_tags: { type: '[string]' }
+                }
+            }
+        },
+        vm_migrations: {
+            name: 'test_vmapi_vm_migrations_' + suffix,
+            schema: {}
+        }
+    };
+}
+
 /*
  * Deletes all buckets whose name is present in the "bucketsName" array. When
  * done or when if an error is encountered, calls the function "callback" with
@@ -65,7 +94,8 @@ function cleanupLeftoverBuckets(bucketsName, callback) {
 
     function filterBucketNotFoundErr(err) {
         assert.object(err, 'err');
-        return !verror.hasCauseWithName(err, 'BucketNotFoundError');
+        return !verror.hasCauseWithName(err, 'BucketNotFoundError') &&
+            err.message.indexOf(' does not exist') === -1;
     }
 }
 
@@ -107,6 +137,7 @@ function writeObjects(morayClient, bucketName, valueTemplate, nbObjects,
 }
 
 module.exports = {
+    getDefaultBucketsConfig: getDefaultBucketsConfig,
     cleanupLeftoverBuckets: cleanupLeftoverBuckets,
     writeObjects: writeObjects
 };
diff --git a/test/runtests b/test/runtests
index 00a0d31..315be05 100755
--- a/test/runtests
+++ b/test/runtests
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
 #
@@ -152,15 +152,6 @@ mkdir -p $OUTPUT_DIR
 
 CFG_FILE=$TOP/config.json
 
-# Install necessary images (for instance migration tests).
-# Image 7b5981c4-1889-11e7-b4c5-3f3bdfc9b88b (lx, ubuntu-16.04, 20170403)
-sdc-imgadm get 7b5981c4-1889-11e7-b4c5-3f3bdfc9b88b >/dev/null 2>/dev/null \
-    || sdc-imgadm import 7b5981c4-1889-11e7-b4c5-3f3bdfc9b88b  -S https://images.joyent.com
-# Image 2d4068a1-d3da-4f93-bcda-db872bc7ded7 (HVM, ubuntu-certified-16.04, 20190212)
-sdc-imgadm get 2d4068a1-d3da-4f93-bcda-db872bc7ded7 >/dev/null 2>/dev/null \
-    || sdc-imgadm import 2d4068a1-d3da-4f93-bcda-db872bc7ded7  -S https://images.joyent.com
-
-
 # Setup VMAPI tests to run on either local or SDC mode
 if [[ -n "$opt_local" ]]; then
     export VMAPI_URL=http://localhost:$(json api.port <$CFG_FILE)
diff --git a/test/vms.data-migrations.test.js b/test/vms.data-migrations.test.js
index 19e21bd..e18a6b3 100644
--- a/test/vms.data-migrations.test.js
+++ b/test/vms.data-migrations.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -39,9 +39,7 @@ var MOCKED_WFAPI_CLIENT = {
     }
 };
 
-var VMS_BUCKET_NAME = 'test_vmapi_vms_data_migrations';
-var SERVER_VMS_BUCKET_NAME = 'test_vmapi_server_vms_data_migrations';
-var ROLE_TAGS_BUCKET_NAME = 'test_vmapi_vm_role_tags_data_migrations';
+var BUCKET_SUFFIX = 'data_migrations';
 
 /*
  * We use two versions for the VMS_BUCKET_CONFIG (VMS_BUCKET_CONFIG_V1 and
@@ -51,7 +49,7 @@ var ROLE_TAGS_BUCKET_NAME = 'test_vmapi_vm_role_tags_data_migrations';
  * See https://smartos.org/bugview/TRITON-214 for context.
  */
 var VMS_BUCKET_CONFIG_V1 = {
-    name: VMS_BUCKET_NAME,
+    name: 'test_vmapi_vms_' + BUCKET_SUFFIX,
     schema: {
         index: {
             foo: { type: 'string' },
@@ -61,7 +59,7 @@ var VMS_BUCKET_CONFIG_V1 = {
 };
 
 var VMS_BUCKET_CONFIG_V2 = {
-    name: VMS_BUCKET_NAME,
+    name: VMS_BUCKET_CONFIG_V1.name,
     schema: {
         index: {
             foo: { type: 'string' },
@@ -74,28 +72,17 @@ var VMS_BUCKET_CONFIG_V2 = {
     }
 };
 
-var SERVER_VMS_MORAY_BUCKET_CONFIG = {
-    name: SERVER_VMS_BUCKET_NAME,
-    schema: {}
-};
+var TEST_BUCKETS_CONFIG_V1 = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+var TEST_BUCKETS_CONFIG_V2 = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+// Replace the vms bucket with our test bucket.
+TEST_BUCKETS_CONFIG_V1.vms = VMS_BUCKET_CONFIG_V1;
+TEST_BUCKETS_CONFIG_V2.vms = VMS_BUCKET_CONFIG_V2;
 
-var ROLE_TAGS_MORAY_BUCKET_CONFIG = {
-    name: ROLE_TAGS_BUCKET_NAME,
-    schema: {
-    }
-};
+var BUCKET_NAMES = Object.keys(TEST_BUCKETS_CONFIG_V1).map(function (b) {
+    return TEST_BUCKETS_CONFIG_V1[b].name;
+});
 
-var TEST_BUCKETS_CONFIG_V1 = {
-    vms: VMS_BUCKET_CONFIG_V1,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG
-};
-
-var TEST_BUCKETS_CONFIG_V2 = {
-    vms: VMS_BUCKET_CONFIG_V2,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG
-};
+var VMS_BUCKET_NAME = VMS_BUCKET_CONFIG_V1.name;
 
 /*
  * The number of test objects is chosen so that it's larger than the default
@@ -169,12 +156,8 @@ exports.data_migrations = function (t) {
 
     vasync.pipeline({arg: context, funcs: [
         function cleanup(ctx, next) {
-            testMoray.cleanupLeftoverBuckets([
-                VMS_BUCKET_NAME,
-                SERVER_VMS_BUCKET_NAME,
-                ROLE_TAGS_BUCKET_NAME
-            ],
-            function onCleanupLeftoverBuckets(cleanupErr) {
+            testMoray.cleanupLeftoverBuckets(BUCKET_NAMES,
+                    function onCleanupLeftoverBuckets(cleanupErr) {
                 t.ok(!cleanupErr,
                     'cleaning up leftover buckets should be successful');
                 next(cleanupErr);
@@ -551,12 +534,8 @@ exports.data_migrations_non_transient_error = function (t) {
 
     vasync.pipeline({arg: context, funcs: [
         function cleanup(ctx, next) {
-            testMoray.cleanupLeftoverBuckets([
-                VMS_BUCKET_NAME,
-                SERVER_VMS_BUCKET_NAME,
-                ROLE_TAGS_BUCKET_NAME
-            ],
-            function onCleanupLeftoverBuckets(cleanupErr) {
+            testMoray.cleanupLeftoverBuckets(BUCKET_NAMES,
+                    function onCleanupLeftoverBuckets(cleanupErr) {
                 t.ok(!cleanupErr,
                     'cleaning up leftover buckets should be successful');
                 next(cleanupErr);
diff --git a/test/vms.reindex-moray-bucket-transient-error.test.js b/test/vms.reindex-moray-bucket-transient-error.test.js
index 927fb70..2782476 100644
--- a/test/vms.reindex-moray-bucket-transient-error.test.js
+++ b/test/vms.reindex-moray-bucket-transient-error.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -31,40 +31,16 @@ var common = require('./common');
 var morayInit = require('../lib/moray/moray-init');
 var NoopDataMigrationsController =
     require('../lib/data-migrations/noop-controller');
+var testMoray = require('./lib/moray');
 var VmapiApp = require('../lib/vmapi');
 
 var TRANSIENT_ERROR_MSG = 'Mocked transient error';
 
-var VMS_BUCKET_CONFIG = {
-    name: 'test_vmapi_vms_reindex_transient_error',
-    schema: {
-        index: {
-            uuid: { type: 'string', unique: true}
-        }
-    }
-};
-
-var SERVER_VMS_MORAY_BUCKET_CONFIG = {
-    name: 'test_vmapi_server_vms_reindex_transient_error',
-    schema: {}
-};
+var BUCKET_SUFFIX = 'reindex_transient_error';
 
-var ROLE_TAGS_MORAY_BUCKET_CONFIG = {
-    name: 'test_vmapi_vm_role_tags_reindex_transient_error',
-    schema: {
-        index: {
-            role_tags: { type: '[string]' }
-        }
-    }
-};
-
-var MORAY_BUCKETS_CONFIG = {
-    vms: VMS_BUCKET_CONFIG,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG
-};
+var MORAY_BUCKETS_CONFIG = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
 
-exports.moray_init_transient_error = function (t) {
+exports.moray_init_reindex_transient_error = function (t) {
     var morayBucketsInitializer;
     var morayClient;
     var moray;
diff --git a/test/vms.update-moray-bucket-non-transient-error.test.js b/test/vms.update-moray-bucket-non-transient-error.test.js
index 2718a21..cac0a45 100644
--- a/test/vms.update-moray-bucket-non-transient-error.test.js
+++ b/test/vms.update-moray-bucket-non-transient-error.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -31,8 +31,10 @@ var NoopDataMigrationsController =
 var testMoray = require('./lib/moray');
 var VmapiApp = require('../lib/vmapi');
 
+var BUCKET_SUFFIX = 'non_transient_error';
+
 var VMS_BUCKET_CONFIG_WITH_ERROR = {
-    name: 'test_vmapi_vms_non_transient_error',
+    name: 'test_vmapi_vms_' + BUCKET_SUFFIX,
     schema: {
         index: {
             uuid: { type: 'string', unique: true},
@@ -63,25 +65,15 @@ var VMS_BUCKET_CONFIG_WITH_ERROR = {
     }
 };
 
-var SERVER_VMS_MORAY_BUCKET_CONFIG = {
-    name: 'test_vmapi_server_vms_non_transient_error',
-    schema: {}
-};
+var morayBucketsConfigWithError =
+    testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+// Replace the vms bucket with our test bucket.
+morayBucketsConfigWithError.vms = VMS_BUCKET_CONFIG_WITH_ERROR;
 
-var ROLE_TAGS_MORAY_BUCKET_CONFIG = {
-    name: 'test_vmapi_vm_role_tags_non_transient_error',
-    schema: {
-        index: {
-            role_tags: { type: '[string]' }
-        }
-    }
-};
+var BUCKET_NAMES = Object.keys(morayBucketsConfigWithError).map(function (b) {
+    return morayBucketsConfigWithError[b].name;
+});
 
-var morayBucketsConfigWithError = {
-    vms: VMS_BUCKET_CONFIG_WITH_ERROR,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG
-};
 
 exports.moray_init_non_transient_error = function (t) {
     var mockedMetricsManager = {
@@ -102,12 +94,8 @@ exports.moray_init_non_transient_error = function (t) {
 
     vasync.pipeline({funcs: [
         function cleanLeftoverTestBuckets(arg, next) {
-            testMoray.cleanupLeftoverBuckets([
-                morayBucketsConfigWithError.vms.name,
-                morayBucketsConfigWithError.server_vms.name,
-                morayBucketsConfigWithError.vm_role_tags.name
-            ],
-            function onCleanupLeftoverBuckets(cleanupErr) {
+            testMoray.cleanupLeftoverBuckets(BUCKET_NAMES,
+                    function onCleanupLeftoverBuckets(cleanupErr) {
                 t.ifError(cleanupErr,
                     'cleaning up leftover buckets should be successful');
                 next(cleanupErr);
diff --git a/test/vms.update-moray-bucket-removes-index-fails.test.js b/test/vms.update-moray-bucket-removes-index-fails.test.js
index 1f3b6fe..c1eb0b0 100644
--- a/test/vms.update-moray-bucket-removes-index-fails.test.js
+++ b/test/vms.update-moray-bucket-removes-index-fails.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -29,8 +29,10 @@ var NoopDataMigrationsController =
 var testMoray = require('./lib/moray');
 var VmapiApp = require('../lib/vmapi');
 
+var BUCKET_SUFFIX = 'invalid_index_removal';
+
 var VMS_BUCKET_CONFIG_V0 = {
-    name: 'test_vmapi_vms_invalid_index_removal',
+    name: 'test_vmapi_vms_' + BUCKET_SUFFIX,
     schema: {
         index: {
             uuid: { type: 'string', unique: true},
@@ -40,7 +42,7 @@ var VMS_BUCKET_CONFIG_V0 = {
 };
 
 var VMS_BUCKET_CONFIG_V1 = {
-    name: 'test_vmapi_vms_invalid_index_removal',
+    name: VMS_BUCKET_CONFIG_V0.name,
     schema: {
         index: {
             uuid: { type: 'string', unique: true}
@@ -51,31 +53,15 @@ var VMS_BUCKET_CONFIG_V1 = {
     }
 };
 
-var SERVER_VMS_MORAY_BUCKET_CONFIG = {
-    name: 'test_vmapi_server_vms_invalid_index_removal',
-    schema: {}
-};
+var morayBucketsConfigV0 = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+var morayBucketsConfigV1 = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+// Replace the vms bucket with our test bucket.
+morayBucketsConfigV0.vms = VMS_BUCKET_CONFIG_V0;
+morayBucketsConfigV1.vms = VMS_BUCKET_CONFIG_V1;
 
-var ROLE_TAGS_MORAY_BUCKET_CONFIG = {
-    name: 'test_vmapi_vm_role_tags_invalid_index_removal',
-    schema: {
-        index: {
-            role_tags: { type: '[string]' }
-        }
-    }
-};
-
-var morayBucketsConfigV0 = {
-    vms: VMS_BUCKET_CONFIG_V0,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG
-};
-
-var morayBucketsConfigV1 = {
-    vms: VMS_BUCKET_CONFIG_V1,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG
-};
+var BUCKET_NAMES = Object.keys(morayBucketsConfigV0).map(function (b) {
+    return morayBucketsConfigV0[b].name;
+});
 
 var morayBucketsInitializer;
 
@@ -99,12 +85,8 @@ exports.moray_init_invalid_index_removal = function (t) {
 
     vasync.pipeline({funcs: [
         function cleanLeftoverTestBuckets(arg, next) {
-            testMoray.cleanupLeftoverBuckets([
-                morayBucketsConfigV0.vms.name,
-                morayBucketsConfigV0.server_vms.name,
-                morayBucketsConfigV0.vm_role_tags.name
-            ],
-            function onCleanupLeftoverBuckets(cleanupErr) {
+            testMoray.cleanupLeftoverBuckets(BUCKET_NAMES,
+                    function onCleanupLeftoverBuckets(cleanupErr) {
                 t.ifError(cleanupErr,
                     'cleaning up leftover buckets should be successful');
                 next(cleanupErr);
diff --git a/test/vms.update-moray-bucket-versioning.test.js b/test/vms.update-moray-bucket-versioning.test.js
index bb90f20..6856141 100644
--- a/test/vms.update-moray-bucket-versioning.test.js
+++ b/test/vms.update-moray-bucket-versioning.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -37,32 +37,8 @@ var MOCKED_WFAPI_CLIENT = {
     }
 };
 
-var VMS_BUCKET_NAME = 'test_vmapi_vms_versioning';
-var SERVER_VMS_BUCKET_NAME = 'test_vmapi_server_vms_versioning';
-var ROLE_TAGS_BUCKET_NAME = 'test_vmapi_vm_role_tags_versioning';
-
-/*
- * Initial buckets configuration, version 0.
- */
-var VMS_BUCKET_CONFIG_V0 = {
-    name: VMS_BUCKET_NAME,
-    schema: {
-        index: {
-            uuid: { type: 'string', unique: true }
-        }
-    }
-};
-
-var SERVER_VMS_MORAY_BUCKET_CONFIG_V0 = {
-    name: SERVER_VMS_BUCKET_NAME,
-    schema: {}
-};
-
-var ROLE_TAGS_MORAY_BUCKET_CONFIG_V0 = {
-    name: ROLE_TAGS_BUCKET_NAME,
-    schema: {
-    }
-};
+var BUCKET_SUFFIX = 'versioning';
+var VMS_BUCKET_NAME = 'test_vmapi_vms_' + BUCKET_SUFFIX;
 
 /*
  * Buckets configuration at version 1: an index is added on the property named
@@ -81,20 +57,6 @@ var VMS_BUCKET_CONFIG_V1 = {
     }
 };
 
-var SERVER_VMS_MORAY_BUCKET_CONFIG_V1 = {
-    name: SERVER_VMS_BUCKET_NAME,
-    schema: {}
-};
-
-var ROLE_TAGS_MORAY_BUCKET_CONFIG_V1 = {
-    name: ROLE_TAGS_BUCKET_NAME,
-    schema: {
-        index: {
-            role_tags: { type: '[string]' }
-        }
-    }
-};
-
 /*
  * Buckets configuration at version 2: an index is added on the property named
  * "another_indexed_property". The upgrade from version 1 to version 2 is valid.
@@ -113,37 +75,16 @@ var VMS_BUCKET_CONFIG_V2 = {
     }
 };
 
-var SERVER_VMS_MORAY_BUCKET_CONFIG_V2 = {
-    name: SERVER_VMS_BUCKET_NAME,
-    schema: {}
-};
+var testBucketsConfigV0 = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+var testBucketsConfigV1 = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+var testBucketsConfigV2 = testMoray.getDefaultBucketsConfig(BUCKET_SUFFIX);
+// Replace the vms bucket with our test bucket.
+testBucketsConfigV1.vms = VMS_BUCKET_CONFIG_V1;
+testBucketsConfigV2.vms = VMS_BUCKET_CONFIG_V2;
 
-var ROLE_TAGS_MORAY_BUCKET_CONFIG_V2 = {
-    name: ROLE_TAGS_BUCKET_NAME,
-    schema: {
-        index: {
-            role_tags: { type: '[string]' }
-        }
-    }
-};
-
-var testBucketsConfigV0 = {
-    vms: VMS_BUCKET_CONFIG_V0,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG_V0,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG_V0
-};
-
-var testBucketsConfigV1 = {
-    vms: VMS_BUCKET_CONFIG_V1,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG_V1,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG_V1
-};
-
-var testBucketsConfigV2 = {
-    vms: VMS_BUCKET_CONFIG_V2,
-    server_vms: SERVER_VMS_MORAY_BUCKET_CONFIG_V2,
-    vm_role_tags: ROLE_TAGS_MORAY_BUCKET_CONFIG_V2
-};
+var BUCKET_NAMES = Object.keys(testBucketsConfigV0).map(function (b) {
+    return testBucketsConfigV0[b].name;
+});
 
 var NB_TEST_OBJECTS = 200;
 
@@ -395,12 +336,8 @@ function testMigrationToBucketsConfig(bucketsConfig, options, t, callback) {
 exports.moray_init_bucket_versioning = function (t) {
     vasync.pipeline({funcs: [
         function cleanup(arg, next) {
-            testMoray.cleanupLeftoverBuckets([
-                VMS_BUCKET_NAME,
-                SERVER_VMS_BUCKET_NAME,
-                ROLE_TAGS_BUCKET_NAME
-            ],
-            function onCleanupLeftoverBuckets(cleanupErr) {
+            testMoray.cleanupLeftoverBuckets(BUCKET_NAMES,
+                    function onCleanupLeftoverBuckets(cleanupErr) {
                 t.ok(!cleanupErr,
                     'cleaning up leftover buckets should be successful');
                 next(cleanupErr);
diff --git a/test/vms.validate.test.js b/test/vms.validate.test.js
index e42badf..c0804d5 100644
--- a/test/vms.validate.test.js
+++ b/test/vms.validate.test.js
@@ -5,14 +5,14 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var VError = require('verror').VError;
 
 var safeBrandName = require('../lib/common/validation')._safeBrandName;
 var validatePackageValues =
-    require('../lib/common/validation')._validatePackageValues;
+    require('../lib/common/validation').validatePackageValues;
 
 var PACKAGES = {
     'BHYVE_PACKAGE': {
