From 6bf11ad0dc4b8cecd66a90dc04e7fa5283b77fad Mon Sep 17 00:00:00 2001
From: Jordan Hendricks <jordan.hendricks@joyent.com>
Date: Tue, 17 Oct 2017 22:56:27 +0000
Subject: [PATCH] added to crontab

---
 bin/kick_off_mpu_gc.js           | 44 ++++++++-------
 bin/mpu_gc.js                    |  2 +-
 bin/mpu_gc_links.pl              | 50 -----------------
 bin/mpu_moray_gc.js              | 92 --------------------------------
 boot/setup.sh                    |  6 ++-
 lib/mpu/common.js                |  4 +-
 lib/mpu/index.js                 | 38 +++++++++++++
 lib/mpu/mpuBatchStream.js        |  8 ++-
 lib/mpu/mpuMorayCleanerStream.js | 56 +++++++++++++++----
 lib/mpu_gc_pg_row_transformer.js |  2 +-
 10 files changed, 119 insertions(+), 183 deletions(-)
 delete mode 100755 bin/mpu_gc_links.pl
 delete mode 100755 bin/mpu_moray_gc.js
 create mode 100644 lib/mpu/index.js

diff --git a/bin/kick_off_mpu_gc.js b/bin/kick_off_mpu_gc.js
index 35687d2..39add26 100755
--- a/bin/kick_off_mpu_gc.js
+++ b/bin/kick_off_mpu_gc.js
@@ -18,7 +18,9 @@ var lib = require('../lib');
 var manta = require('manta');
 var path = require('path');
 
-
+/*
+ * TODO
+ */
 
 ///--- Global Objects
 
@@ -42,7 +44,6 @@ var MANTA_DUMP_NAME_PREFIX = 'manta-';
 var MANTA_UPLOADS_NAME_PREFIX = 'manta_uploads-';
 
 
-
 ///--- Helpers
 
 /*
@@ -73,7 +74,6 @@ cd /assets/ && gtar -xzf ' + opts.marlinPathToAsset + ' && cd mola && \
 }
 
 
-
 /*
  * Returns the command that is run during the map phase of the MPU GC job.
  * This command calls into bin/mpu_gc_pg_transform.js, which transforms
@@ -140,25 +140,21 @@ function getMpuGcCmd(opts) {
         return (getEnvCommon(opts) + ' \
 export UUID=$(uuid) && \
 export MANTA_PRE=/$MANTA_USER/stor/$MANTA_MPU_GC/all && \
-export MANTA_FILE_PRE=$MANTA_PRE/done/$NOW-$MARLIN_JOB-X-$UUID && \
-export MANTA_PATTERN=$MANTA_FILE_PRE-{1}-{2} && \
-export MANTA_LINKS=$MANTA_PRE/do/$NOW-$MARLIN_JOB-X-$UUID-links && \
-export PERL=/usr/perl5/bin/perl && \
+export MANTA_MPU_GC_CLEANUP_FILE=$MANTA_PRE/do/$NOW-$MARLIN_JOB-X-$UUID && \
 export LINKS_FILE=./links.txt && \
 sort | \
 ./build/node/bin/node ./bin/mpu_gc.js' + gracePeriodOption + ' | \
-./bin/mpu_gc_links.pl $MANTA_USER $LINKS_FILE $MANTA_FILE_PRE | \
-./build/node/bin/node ./bin/mdemux.js -p $MANTA_PATTERN && \
-cat $LINKS_FILE | mpipe $MANTA_LINKS \
+mpipe $MANTA_MPU_GC_CLEANUP_FILE \
 ');
 /* END JSSTYLED */
 }
 
-
 function parseOptions() {
         var option;
-        //First take what's in the config file, override what's on the
-        // command line, and use the defaults if all else fails.
+        /*
+         * First take what's in the config file, override what's on the
+         * command line, and use the defaults if all else fails.
+         */
         var opts = MOLA_CONFIG_OBJ;
         opts.shards = opts.shards || [];
         var parser = new getopt.BasicParser('a:d:g:m:no:p:r:t',
@@ -200,7 +196,6 @@ function parseOptions() {
                 }
         }
 
-        //Set up some defaults...
         opts.jobName = opts.jobName || 'manta_mpu_gc';
         opts.jobRoot = opts.jobRoot || MP + '/manta_mpu_gc';
 
@@ -219,7 +214,6 @@ function parseOptions() {
                 opts.jobRoot + '/all',
                 opts.jobRoot + '/all/do',
                 opts.jobRoot + '/all/done',
-                opts.jobRoot + '/mako',
                 opts.jobRoot + '/moray'
         ];
 
@@ -254,28 +248,32 @@ function usage(msg) {
  *  - cb: callback of the form cb(err, job)
  */
 function getMpuGcJob(opts, cb) {
-        //We use the number of shards + 1 so that we know
-        // we are always using multiple reducers.  There's
-        // no reason this can't be much more.
+        /*
+         * As with the regular GC job, use the number of shards + 1 reducers so
+         * that we are always using multiple reducers.
+         */
         opts.numberReducers = opts.shards.length + 1;
 
-        var pgCmd = getMpuPgTransformCmd(opts);
-        var gcCmd = getMpuGcCmd(opts);
+        var mpuPgCmd = getMpuPgTransformCmd(opts);
+        var mpuGcCmd = getMpuGcCmd(opts);
+
         var job = {
                 phases: [ {
                         type: 'storage-map',
-                        exec: pgCmd,
+                        exec: mpuPgCmd,
                         disk: opts.gcMapDisk
                 }, {
                         type: 'reduce',
                         count: opts.numberReducers,
                         memory: opts.gcReduceMemory,
                         disk: opts.gcReduceDisk,
-                        exec: gcCmd
+                        exec: mpuGcCmd
                 } ]
         };
 
-        LOG.info({ job: job }, 'MPU GC Marlin Job Definition');
+        LOG.info({
+                job: job
+        }, 'MPU GC Marlin Job Definition');
 
         cb(null, job);
 }
diff --git a/bin/mpu_gc.js b/bin/mpu_gc.js
index 9d99822..995a3ff 100755
--- a/bin/mpu_gc.js
+++ b/bin/mpu_gc.js
@@ -59,7 +59,7 @@ if (_opts.gracePeriodSeconds) {
 
 var _garbageCollector = lib.createMpuGarbageCollector(_opts);
 _garbageCollector.on('moray', function (moray) {
-        console.log('moray\t' + moray.toString());
+        console.log(moray.toString());
 });
 
 _garbageCollector.on('error', function (err) {
diff --git a/bin/mpu_gc_links.pl b/bin/mpu_gc_links.pl
deleted file mode 100755
index 153af6e..0000000
--- a/bin/mpu_gc_links.pl
+++ /dev/null
@@ -1,50 +0,0 @@
-#!/usr/bin/env perl
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-
-#
-# Copyright (c) 2014, Joyent, Inc.
-#
-
-###############################################################################
-# Acts as a filter to output all the links that must be made for moray and
-# mako.  This should go away post-haste after the stream to many mpipes
-# is written.
-###############################################################################
-
-
-if (@ARGV < 3) {
-    print "Usage: ".$ENV{"_"}." [manta_user] [output file] " .
-        "[manta object prefix]\n";
-    exit 1;
-}
-$user = $ARGV[0];
-$file = $ARGV[1];
-$prefix = $ARGV[2];
-$dir = 'manta_mpu_gc';
-
-while($line = <STDIN>) {
-    @parts = split(/\t/, $line);
-    #Parts 0 will be either "mako" or "moray"
-    #Parts 1 will be the node or shard id
-    $k{$parts[0]}{$parts[1]} = 1;
-    print $line;
-}
-
-open(OUT, ">$file");
-for $node (sort keys %{ $k{"mako"} } ) {
-    $object = "$prefix-mako-$node";
-    $k = (split(/\//, $object))[-1];
-    print OUT "mmkdir /$user/stor/$dir/mako/$node\n";
-    print OUT "mln $object /$user/stor/$dir/mako/$node/$k\n";
-}
-for $shard (sort keys %{ $k{"moray"} } ) {
-    $object = "$prefix-moray-$shard";
-    $k = (split(/\//, $object))[-1];
-    print OUT "mmkdir /$user/stor/$dir/moray/$shard\n";
-    print OUT "mln $prefix-moray-$shard /$user/stor/$dir/moray/$shard/$k\n";
-}
-close(OUT);
diff --git a/bin/mpu_moray_gc.js b/bin/mpu_moray_gc.js
deleted file mode 100755
index 7586f56..0000000
--- a/bin/mpu_moray_gc.js
+++ /dev/null
@@ -1,92 +0,0 @@
-#!/usr/bin/env node
-// -*- mode: js -*-
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2017, Joyent, Inc.
- */
-var http = require('http');
-
-var bunyan = require('bunyan');
-var fs = require('fs');
-var lstream = require('lstream');
-var mahi = require('mahi');
-var manta = require('manta');
-var vstream = require('vstream');
-
-var lib = require('../lib');
-var mpu = require('../lib/mpu');
-
-
-var LOG = bunyan.createLogger({
-        //level: (process.env.LOG_LEVEL || 'info'),
-        level: (process.env.LOG_LEVEL || 'trace'),
-        name: 'mpu_gc_streams',
-        stream: process.stdout,
-        serializers: bunyan.stdSerializers
-});
-
-var MANTA_CONFIG = (process.env.MANTA_CONFIG ||
-                    '/opt/smartdc/common/etc/config.json');
-var CONFIG = JSON.parse(fs.readFileSync(MANTA_CONFIG, { encoding: 'utf8' }));
-
-var MANTA_CLIENT = manta.createClientFromFileSync(MANTA_CONFIG, LOG);
-var MAHI_CLIENT = mahi.createClient(CONFIG.auth);
-
-
-var mmcls = vstream.wrapStream(
-        new mpu.createMpuMorayCleanerStream({
-                log: LOG,
-                dryRun: true,
-                verbose: true
-        }
-));
-
-var mpuGcStreams = new vstream.PipelineStream({
-        streams: [
-                vstream.wrapTransform(new lstream({ highWaterMark: 0 })),
-                vstream.wrapTransform(new mpu.createMpuBatchStream({
-                        log: LOG
-                })),
-                vstream.wrapTransform(new mpu.createMpuVerifyStream({
-                        log: LOG
-                })),
-                vstream.wrapTransform(new mpu.createMpuUnlinkLiveRecordStream({
-                        log: LOG,
-                        dryRun: true,
-                        verbose: true,
-                        mantaClient: MANTA_CLIENT,
-                        mahiClient: MAHI_CLIENT,
-                        type: 'partRecords'
-                })),
-                vstream.wrapTransform(new mpu.createMpuUnlinkLiveRecordStream({
-                        log: LOG,
-                        dryRun: true,
-                        verbose: true,
-                        mantaClient: MANTA_CLIENT,
-                        mahiClient: MAHI_CLIENT,
-                        type: 'uploadRecord'
-                })),
-                mmcls
-        ],
-
-        streamOpts: {
-                highWaterMark: 0,
-                objectMode: true
-        }
-});
-
-// TODO comment explaining why we do this here and not on mpuGcStreams
-mmcls.on('finish', function cleanup() {
-        MAHI_CLIENT.close();
-        MANTA_CLIENT.close();
-});
-
-//var s = fs.createReadStream('/root/mola/test-file.txt');
-var s = fs.createReadStream('/root/mola/non-sorted-batch.txt');
-//var s = fs.createReadStream('/root/mola/test-file-simple.txt');
-s.pipe(mpuGcStreams);
diff --git a/boot/setup.sh b/boot/setup.sh
index 00b1181..2c3e2b4 100755
--- a/boot/setup.sh
+++ b/boot/setup.sh
@@ -7,7 +7,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 set -o xtrace
@@ -52,9 +52,13 @@ function manta_setup_mola {
     mkdir -p /opt/smartdc/common/bundle
     cd /opt/smartdc && tar -chzf /opt/smartdc/common/bundle/mola.tar.gz mola; cd -
     echo '0 2 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/kick_off_pg_transform.js >>/var/log/mola-pg-transform.log 2>&1' >>$crontab
+    echo '0 3 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/kick_off_mpu_pg_transform.js >>/var/log/mola-mpu-pg-transform.log 2>&1' >>$crontab
+
     echo '5 8 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/kick_off_gc.js >>/var/log/mola.log 2>&1' >>$crontab
+    echo '5 9 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/kick_off_mpu_gc.js >>/var/log/mola-mpu-gc.log 2>&1' >>$crontab
     echo '10 11 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/gc_create_links.js >>/var/log/mola-gc-create-links.log 2>&1' >>$crontab
     echo '15 12 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/moray_gc.js >>/var/log/mola-moray-gc.log 2>&1' >>$crontab
+    echo '15 13 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/kick_off_mpu_cleanup.js >>/var/log/mola-mpu-cleanup.log 2>&1' >>$crontab
     echo '20 14 * * * cd /opt/smartdc/mola && ./build/node/bin/node ./bin/kick_off_audit.js >>/var/log/mola-audit.log 2>&1' >>$crontab
 
     #Metering
diff --git a/lib/mpu/common.js b/lib/mpu/common.js
index 3101bcd..c592da6 100644
--- a/lib/mpu/common.js
+++ b/lib/mpu/common.js
@@ -81,7 +81,7 @@ function recordToObject(record) {
                 sprintf('invalid mpu object type: \"%s\"', mpuObject));
 
         if (mpuObject === MPUOBJ_FINALIZINGRECORD) {
-                assert.ok(split.length == 6, sprintf('finalizing record must ' +
+                assert.ok(split.length === 6, sprintf('finalizing record must ' +
                         'contain 6 tab-separated fields: \"%s\"', record));
 
                 var shard = split[3];
@@ -101,7 +101,7 @@ function recordToObject(record) {
                         type: finalizingType
                 });
         } else {
-                assert.ok(split.length == 4, 'upload/part records must ' +
+                assert.ok(split.length === 4, 'upload/part records must ' +
                         'contain 4 tab-separated fields');
 
                 key = split[3];
diff --git a/lib/mpu/index.js b/lib/mpu/index.js
new file mode 100644
index 0000000..1c15907
--- /dev/null
+++ b/lib/mpu/index.js
@@ -0,0 +1,38 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2017, Joyent, Inc.
+ */
+
+var MpuBatchStream = require('./mpuBatchStream');
+var MpuVerifyStream = require('./mpuVerifyStream');
+var mulrs = require('./mpuUnlinkLiveRecordStream');
+var MpuUnlinkLiveRecordStream = mulrs.MpuUnlinkLiveRecordStream;
+var MpuMorayCleanerStream = require('./mpuMorayCleanerStream');
+
+function createMpuBatchStream(opts) {
+        return (new MpuBatchStream(opts));
+}
+
+function createMpuVerifyStream(opts) {
+        return (new MpuVerifyStream(opts));
+}
+
+function createMpuUnlinkLiveRecordStream(opts) {
+        return (new MpuUnlinkLiveRecordStream(opts));
+}
+
+function createMpuMorayCleanerStream(opts) {
+        return (new MpuMorayCleanerStream(opts));
+}
+
+module.exports = {
+        createMpuBatchStream: createMpuBatchStream,
+        createMpuVerifyStream: createMpuVerifyStream,
+        createMpuUnlinkLiveRecordStream: createMpuUnlinkLiveRecordStream,
+        createMpuMorayCleanerStream: createMpuMorayCleanerStream
+};
diff --git a/lib/mpu/mpuBatchStream.js b/lib/mpu/mpuBatchStream.js
index f71523d..a89b9a8 100644
--- a/lib/mpu/mpuBatchStream.js
+++ b/lib/mpu/mpuBatchStream.js
@@ -85,16 +85,19 @@ MpuBatchStream.prototype.commitBatch = function commitBatch() {
  * - "id": upload ID for the new batch
  */
 MpuBatchStream.prototype.createBatch = function createBatch(id) {
+        assert.uuid(id, 'id');
         var self = this;
 
-        assert.uuid(id, 'id');
         assert.ok(self.mpu_uploadId === null, 'other batch in process');
 
         if (self.mpu_UPLOAD_IDS[id]) {
                 var msg = sprintf('Upload id \"%s\" has already been ' +
                         'processed. This is very bad. Some records may not ' +
                         'be garbage collected properly as a result.', id);
-                self.log.fatal(msg);
+                self.log.fatal({
+                        uploadId: id,
+                        previousBatch: self.mpu_UPLOAD_IDS[id]
+                }, msg);
                 throw (new Error(msg));
         } else {
                 self.mpu_uploadId = id;
@@ -133,6 +136,7 @@ MpuBatchStream.prototype._transform = function mbsTransform(record, _, cb) {
         var self = this;
 
         var r = mpuCommon.recordToObject(record);
+        assert.object(r, 'r');
 
         if (self.mpu_uploadId === null) {
                 self.createBatch(r.uploadId);
diff --git a/lib/mpu/mpuMorayCleanerStream.js b/lib/mpu/mpuMorayCleanerStream.js
index 4df7a6b..8d0ccbc 100644
--- a/lib/mpu/mpuMorayCleanerStream.js
+++ b/lib/mpu/mpuMorayCleanerStream.js
@@ -16,6 +16,12 @@ var moray = require('moray');
 
 var mpuCommon = require('./common');
 
+
+///--- Globals
+
+var MORAY_CONNECT_TIMEOUT = 10000;
+var MORAY_PORT = 2020;
+
 /*
  * MpuMorayCleanerStream: Deletes the finalizing record for the MPU.
  */
@@ -46,20 +52,41 @@ function MpuMorayCleanerStream(args) {
 util.inherits(MpuMorayCleanerStream, stream.Writable);
 module.exports = MpuMorayCleanerStream;
 
+MpuMorayCleanerStream.prototype.getMorayClient =
+function getMorayClient(shard, cb) {
+        assert.string(shard, 'shard');
+        assert.func(cb, 'cb');
+
+        var self = this;
+        if (self.morayClients[shard]) {
+                cb(self.morayClients[shard]);
+                return;
+        }
+
+        var client = moray.createClient({
+                log: self.log,
+                connectTimeout: MORAY_CONNECT_TIMEOUT,
+                host: shard,
+                port: MORAY_PORT
+        });
+
+        client.on('connect', function () {
+                self.log.info({ shard: shard }, 'Connected to shard.');
+                if (!self.morayClients[shard]) {
+                        self.morayClients[shard] = client;
+                }
+                cb(self.morayClients[shard]);
+        });
+};
+
 MpuMorayCleanerStream.prototype.deleteFinalizingRecord =
 function deleteFinalizingRecord(shard, key, cb) {
         var self = this;
 
-        if (!self.morayClients[shard]) {
-                //TODO timeout, other options to creating client
-                self.morayClients[shard] = moray.createClient({
-                        log: self.log,
-                        srvDomain: shard
-                });
-        }
-
-        assert.object(self.morayClients[shard]);
-        self.morayClients[shard].delObject(mpuCommon.MPU_MORAY_BUCKET, key, cb);
+        self.getMorayClient(shard, function (client) {
+                assert.object(client);
+                client.delObject(mpuCommon.MPU_MORAY_BUCKET, key, cb);
+        });
 };
 
 MpuMorayCleanerStream.prototype._write = function mmcsWrite(batch, _, cb) {
@@ -78,7 +105,7 @@ MpuMorayCleanerStream.prototype._write = function mmcsWrite(batch, _, cb) {
 
         var self = this;
         if (self.verbose) {
-                console.log('delObject ' + fr.key);
+                console.error('delObject ' + fr.key);
         }
 
         if (!self.dryRun) {
@@ -91,8 +118,15 @@ MpuMorayCleanerStream.prototype._write = function mmcsWrite(batch, _, cb) {
                                  */
                                 self.log.error({
                                         uploadId: batch.uploadId,
+                                        shard: fr.shard,
+                                        key: fr.key,
                                         err: err
                                 }, 'mpu moray cleaner stream failure');
+                        } else {
+                                self.log.info({
+                                        key: fr.key,
+                                        shard: fr.shard
+                                }, 'delobject');
                         }
 
                         cb();
diff --git a/lib/mpu_gc_pg_row_transformer.js b/lib/mpu_gc_pg_row_transformer.js
index 3d08108..2cd72ae 100644
--- a/lib/mpu_gc_pg_row_transformer.js
+++ b/lib/mpu_gc_pg_row_transformer.js
@@ -54,7 +54,7 @@ function MpuGcPgRowTransformer(opts, listener) {
         assert.object(opts, 'opts');
         assert.object(opts.reader, 'opts.reader');
         assert.ok(opts.dumpDate, 'opts.dumpDate');
-        assert.ok(date instanceof Date, 'invalid date');
+        assert.ok(opts.dumpDate instanceof Date, 'invalid date');
         assert.string(opts.morayHostname, 'opts.morayHostname');
 
         var self = this;
-- 
2.21.0

