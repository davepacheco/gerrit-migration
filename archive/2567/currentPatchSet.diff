commit bdba952122b612d820611b584388951129d30c14 (refs/changes/67/2567/4)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2017-09-19T11:51:11-07:00 (2 years, 1 month ago)
    
    DOCKER-1103 Docker build works for accounts with provisioning disabled

diff --git a/lib/endpoints/build.js b/lib/endpoints/build.js
index a5ad4b2..9cb5cfc 100644
--- a/lib/endpoints/build.js
+++ b/lib/endpoints/build.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var path = require('path');
@@ -120,11 +120,13 @@ function build(req, res, next) {
  */
 function register(http, before) {
     http.post({ path: /^(\/v[^\/]+)?\/build$/, name: 'Build' },
-        before, restify.queryParser({mapParams: false}), build);
+        before,
+        restify.queryParser({mapParams: false}),
+        common.checkApprovedForProvisioning,
+        build);
 }
 
 
-
 module.exports = {
     register: register
 };
diff --git a/package.json b/package.json
index 89362c0..b8324d7 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "sdc-docker",
-  "version": "0.4.4",
+  "version": "0.4.5",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/integration/api-build.test.js b/test/integration/api-build.test.js
index c5daabd..ec1dd25 100644
--- a/test/integration/api-build.test.js
+++ b/test/integration/api-build.test.js
@@ -32,8 +32,10 @@ var STATE = {
 };
 
 var ALICE;
+var BOB;
 var DOCKER_ALICE; // Regular JSON restify client.
 var DOCKER_ALICE_HTTP; // For sending non-JSON payload
+var DOCKER_BOB_HTTP; // For sending non-JSON payload
 var imgapiClient;
 var morayClient;
 
@@ -45,6 +47,7 @@ test('setup', function (tt) {
             t.ifErr(err);
 
             ALICE = accounts.alice;
+            BOB = accounts.bob;
 
             t.end();
         });
@@ -90,10 +93,41 @@ test('setup', function (tt) {
                         t.ifErr(err, 'docker client init for alice/http');
                         done(err, client);
                     });
+            },
+            function createBobHttp(done) {
+                h.createDockerRemoteClient({user: BOB, clientType: 'http'},
+                    function (err, client) {
+                        t.ifErr(err, 'docker client init for bob/http');
+                        done(err, client);
+                    });
             }
         ]}, function allDone(err, results) {
             t.ifError(err, 'docker client http init should be successful');
             DOCKER_ALICE_HTTP = results.operations[0].result;
+            DOCKER_BOB_HTTP = results.operations[1].result;
+            t.end();
+        });
+    });
+});
+
+test('api: build without approved_for_provisioning', function (tt) {
+    tt.test('docker build for bob (no approval)', function (t) {
+        var fileAndContents = {
+            'Dockerfile': 'FROM busybox\n'
+                        + 'LABEL sdcdockertest=true\n'
+        };
+        h.buildDockerContainer({
+            dockerClient: DOCKER_BOB_HTTP,
+            test: t,
+            tarball: createTarStream(fileAndContents)
+        }, function onbuild(err, result) {
+            t.ok(err, 'should not build without approved_for_provisioning');
+            t.equal(err.statusCode, 403);
+
+            var response = result.body;
+            var expected = BOB.login + ' does not have permission to pull or '
+                + 'provision';
+            t.ok(response.match(expected));
             t.end();
         });
     });
diff --git a/test/integration/helpers.js b/test/integration/helpers.js
index 7e4ab7e..23007a8 100644
--- a/test/integration/helpers.js
+++ b/test/integration/helpers.js
@@ -1339,9 +1339,6 @@ function buildDockerContainer(opts, callback) {
 
             res.on('end', function onEnd() {
                 removeDockerTarStreamListeners();
-                if (err) {
-                    log.error({err: err}, 'error at end of result');
-                }
                 return callback(err, buildResult);
             });
         });
