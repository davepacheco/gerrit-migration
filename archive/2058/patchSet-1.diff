From 587b67b2d06f690d639821ce9ca95d2d70e6fed1 Mon Sep 17 00:00:00 2001
From: Isaac Davis <isaac.davis@joyent.com>
Date: Thu, 8 Jun 2017 17:07:20 +0000
Subject: [PATCH] OS-6127 "dladm show-overlay <overlay>" exits zero when varpd
 doesn't know about the overlay

---
 usr/src/cmd/dladm/dladm.c | 42 ++++++++++++++++++++++++++++-----------
 1 file changed, 30 insertions(+), 12 deletions(-)

diff --git a/usr/src/cmd/dladm/dladm.c b/usr/src/cmd/dladm/dladm.c
index 40c28ad6ab..3890bf1ae4 100644
--- a/usr/src/cmd/dladm/dladm.c
+++ b/usr/src/cmd/dladm/dladm.c
@@ -190,6 +190,11 @@ typedef struct show_usage_state_s {
 	ofmt_handle_t	us_ofmt;
 } show_usage_state_t;
 
+typedef struct show_overlay_request_s {
+	int failed;
+	ofmt_handle_t ofmt;
+} show_overlay_request_t;
+
 /*
  * callback functions for printing output and error diagnostics.
  */
@@ -10194,18 +10199,23 @@ show_one_overlay(dladm_handle_t hdl, datalink_id_t linkid, void *arg)
 	showoverlay_state_t	state;
 	datalink_class_t	class;
 
+	show_overlay_request_t *req = arg;
 	if (dladm_datalink_id2info(hdl, linkid, NULL, &class, NULL, buf,
 	    MAXLINKNAMELEN) != DLADM_STATUS_OK ||
-	    class != DATALINK_CLASS_OVERLAY)
+	    class != DATALINK_CLASS_OVERLAY) {
+		req->failed = 1;
 		return (DLADM_WALK_CONTINUE);
+	}
 
 	state.sho_linkname = buf;
-	state.sho_ofmt = arg;
+	state.sho_ofmt = req->ofmt;
 
 	dladm_errlist_reset(&errlist);
 	(void) dladm_overlay_walk_prop(handle, linkid, dladm_overlay_show_one,
 	    &state, &errlist);
 	warn_dlerrlist(&errlist);
+	if (errlist.el_count)
+		req->failed = 1;
 
 	return (DLADM_WALK_CONTINUE);
 }
@@ -10308,13 +10318,16 @@ show_one_overlay_table(dladm_handle_t handle, datalink_id_t linkid, void *arg)
 	char				linkbuf[MAXLINKNAMELEN];
 	showoverlay_targ_state_t	shot;
 	datalink_class_t		class;
+	show_overlay_request_t *req = arg;
 
 	if (dladm_datalink_id2info(handle, linkid, NULL, &class, NULL, linkbuf,
 	    MAXLINKNAMELEN) != DLADM_STATUS_OK ||
-	    class != DATALINK_CLASS_OVERLAY)
+	    class != DATALINK_CLASS_OVERLAY) {
+		req->failed = 1;
 		return (DLADM_WALK_CONTINUE);
+	}
 
-	shot.shot_ofmt = arg;
+	shot.shot_ofmt = req->ofmt;
 	shot.shot_linkname = linkbuf;
 
 	(void) dladm_overlay_walk_cache(handle, linkid,
@@ -10365,6 +10378,7 @@ show_one_overlay_fma(dladm_handle_t handle, datalink_id_t linkid, void *arg)
 	char			linkbuf[MAXLINKNAMELEN];
 	datalink_class_t	class;
 	showoverlay_fma_state_t	shof;
+	show_overlay_request_t *req;
 
 	if (dladm_datalink_id2info(handle, linkid, NULL, &class, NULL, linkbuf,
 	    MAXLINKNAMELEN) != DLADM_STATUS_OK ||
@@ -10372,7 +10386,8 @@ show_one_overlay_fma(dladm_handle_t handle, datalink_id_t linkid, void *arg)
 		die("datalink %s is not an overlay device\n", linkbuf);
 	}
 
-	shof.shof_ofmt = arg;
+	req = arg;
+	shof.shof_ofmt = req->ofmt;
 	shof.shof_linkname = linkbuf;
 
 	status = dladm_overlay_status(handle, linkid,
@@ -10395,14 +10410,14 @@ do_show_overlay(int argc, char *argv[], const char *use)
 	const ofmt_field_t	*fieldsp;
 	ofmt_status_t		oferr;
 	boolean_t		parse;
-	ofmt_handle_t		ofmt;
+	show_overlay_request_t req;
 	uint_t			ofmtflags;
 	int			err;
 
-
 	funcp = show_one_overlay;
 	fieldsp = overlay_fields;
 	parse = B_FALSE;
+	req.failed = 0;
 	ofmtflags = OFMT_WRAP;
 	while ((opt = getopt_long(argc, argv, ":o:pft", overlay_show_lopts,
 	    NULL)) != -1) {
@@ -10430,8 +10445,8 @@ do_show_overlay(int argc, char *argv[], const char *use)
 	if (fields_str != NULL && strcasecmp(fields_str, "all") == 0)
 		fields_str = NULL;
 
-	oferr = ofmt_open(fields_str, fieldsp, ofmtflags, 0, &ofmt);
-	ofmt_check(oferr, parse, ofmt, die, warn);
+	oferr = ofmt_open(fields_str, fieldsp, ofmtflags, 0, &req.ofmt);
+	ofmt_check(oferr, parse, req.ofmt, die, warn);
 
 	err = 0;
 	if (argc > optind) {
@@ -10444,14 +10459,17 @@ do_show_overlay(int argc, char *argv[], const char *use)
 				err = 1;
 				continue;
 			}
-			funcp(handle, linkid, ofmt);
+			(void) funcp(handle, linkid, &req);
 		}
 	} else {
-		(void) dladm_walk_datalink_id(funcp, handle, ofmt,
+		(void) dladm_walk_datalink_id(funcp, handle, &req,
 		    DATALINK_CLASS_OVERLAY, DATALINK_ANY_MEDIATYPE,
 		    DLADM_OPT_ACTIVE);
 	}
-	ofmt_close(ofmt);
+	if (req.failed) {
+		err = 1;
+	}
+	ofmt_close(req.ofmt);
 
 	exit(err);
 }
-- 
2.21.0

