commit e07ea7b7433e55cc005bfb39a8c49ac1ec73454a (refs/changes/59/2959/3)
Author: Richard Kiene <richard.kiene@joyent.com>
Date:   2017-11-17T00:21:22+00:00 (1 year, 11 months ago)
    
    joyent/manta-thoth#156 64bit node binaries are not debuggable by mdb when a 32bit node binary is in PATH
    Reviewed by: Bryan Cantrill <bryan@joyent.com>
    Approved by: Bryan Cantrill <bryan@joyent.com>

diff --git a/.gitignore b/.gitignore
index c2658d7..48ca58b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1,4 @@
 node_modules/
+opt/
+thoth-*.tar.gz
+node-v*
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..41021fd
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,20 @@
+UNAME=$(shell uname -s | tr "[:upper:]" "[:lower:]")
+VER=$(shell json -f package.json version)
+
+node_modules: package.json
+	npm install --production
+	@touch node_modules
+
+.PHONY: release github-release
+release: thoth-$(UNAME)-$(VER).tar.gz
+
+publish: release
+	./tools/publish.sh "$(VER)"
+
+thoth-$(UNAME)-$(VER).tar.gz: node_modules
+	./tools/build-release.sh
+
+clean:
+	rm -rf node_modules opt
+	rm -f thoth-$(UNAME)-$(VER).tar.gz
+	rm -rf node-v*-$(UNAME)-*
diff --git a/bin/thoth b/bin/thoth
index 2ac3141..3e3e5cc 100755
--- a/bin/thoth
+++ b/bin/thoth
@@ -1777,7 +1777,13 @@ handlers.debug = function (client, argv)
 		if (analyzer) {
 			cmd += analyzerCmd(args);
 		} else {
-			cmd += 'mdb $MANTA_INPUT_FILE';
+			/*
+			 * LIBPROC_INCORE_ELF=1 prevents us from loading
+			 * whatever node binary happens to be in $PATH. This is
+			 * necessary when debugging cores that do not match the
+			 * bitness of the node binary found in $PATH.
+			 */
+			cmd += 'LIBPROC_INCORE_ELF=1 mdb $MANTA_INPUT_FILE';
 		}
 
 		setAnalyzer(client, cmd, function (asset) {
diff --git a/package.json b/package.json
index 3fcb1fc..3c6c2c2 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,13 @@
 {
 	"name": "manta-thoth",
 	"description": "Manta-based system for core and crash dump analysis",
+<<<<<<< HEAD
+	"version": "1.1.0",
+        "license": "MIT",
+=======
 	"version": "1.0.0",
+    "license": "MIT",
+>>>>>>> 3f0c0a2... joyent/manta-thoth#154 Need license info in package.json
 	"author": "Joyent (joyent.com)",
 	"dependencies": {
 		"manta": "^4.0.0",
diff --git a/tools/build-release.sh b/tools/build-release.sh
new file mode 100755
index 0000000..8abe455
--- /dev/null
+++ b/tools/build-release.sh
@@ -0,0 +1,34 @@
+#!/bin/bash
+
+if [[ -n "$TRACE" ]]; then
+    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+    set -o xtrace
+fi
+
+set -o errexit
+
+node_ver='0.10.38'
+thoth_ver=$(json -f package.json version)
+uname=$(uname -s | tr "[:upper:]" "[:lower:]")
+case "$uname" in
+    darwin) node_arch='x64';;
+    sunos) node_arch='x86';;
+    *) printf 'Sorry, not ready for you'; exit 1;;
+esac
+tar="thoth-${uname}-${thoth_ver}.tar.gz"
+node_dir="node-v${node_ver}-${uname}-${node_arch}"
+node_tar="${node_dir}.tar.gz"
+node_location="https://nodejs.org/download/release/v${node_ver}"
+
+curl -#LOC - "${node_location}/${node_tar}"
+tar zxf "$node_tar"
+
+mkdir -p opt/custom/thoth/{bin,lib}
+cp "${node_dir}/bin/node" opt/custom/thoth/bin
+if [[ $uname == sunos ]]; then
+    cp /opt/local/gcc47/lib/libstdc++.so.6 opt/custom/thoth/lib
+    cp /opt/local/gcc47/lib/libgcc_s.so.1 opt/custom/thoth/lib
+fi
+cp -r node_modules opt/custom/thoth
+
+tar zcf "$tar" opt
diff --git a/tools/manta-thoth-build.sh b/tools/manta-thoth-build.sh
new file mode 100755
index 0000000..64bbc0e
--- /dev/null
+++ b/tools/manta-thoth-build.sh
@@ -0,0 +1,11 @@
+#!/bin/bash -x
+
+set -o errexit
+
+job=$(
+mjob create --close -m 'set -o errexit ;
+cd /var/tmp ;
+git clone https://github.com/joyent/manta-thoth ;
+cd manta-thoth ;
+make publish')
+mjob watch "$job"
diff --git a/tools/publish.sh b/tools/publish.sh
new file mode 100755
index 0000000..e4ba56b
--- /dev/null
+++ b/tools/publish.sh
@@ -0,0 +1,9 @@
+#!/bin/bash
+
+ver="$1"
+uname=$(uname -s | tr "[:upper:]" "[:lower:]")
+name="thoth-${uname}-${ver:?}.tar.gz"
+latest="thoth-${uname}-latest.tar.gz"
+
+mput -f "$name" "/thoth/public/$name"
+mln "/thoth/public/$name" "/thoth/public/$latest"
