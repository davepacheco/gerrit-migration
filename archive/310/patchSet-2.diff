commit e423cd6bd540f4b71da9dbde4c768c480e53575b (refs/changes/10/310/2)
Author: Marsell Kukuljevic <marsell@joyent.com>
Date:   2016-08-22T13:01:27+12:00 (3 years, 2 months ago)
    
    DAPI-322 - More prone to provisioning failure after DAPI-320

diff --git a/lib/algorithms/calculate-server-unreserved.js b/lib/algorithms/calculate-server-unreserved.js
index 145efa3..25b028e 100644
--- a/lib/algorithms/calculate-server-unreserved.js
+++ b/lib/algorithms/calculate-server-unreserved.js
@@ -143,6 +143,11 @@ numKvms(vms)
 function
 calcUnreservedDisk(server)
 {
+	// Temporary workaround of negative values until AGENT-1029 is closed.
+	var systemUsed = server.disk_system_used_bytes;
+	if (systemUsed < 0)
+		systemUsed = 0;
+
 	/*
 	 * POOL_USABLE_RATIO is needed because the pool size is larger than
 	 * what we see in the datasets due to metadata overhead. Furthermore,
@@ -152,7 +157,7 @@ calcUnreservedDisk(server)
 	 * typical setups; we use POOL_USABLE_RATIO as a fudge factor for this.
 	 */
 	var unreserved = server.disk_pool_size_bytes * POOL_USABLE_RATIO -
-	    server.disk_system_used_bytes -
+	    systemUsed -
 	    server.disk_installed_images_used_bytes -
 	    server.disk_cores_quota_used_bytes;
 
diff --git a/package.json b/package.json
index 2170ddf..7a59a30 100644
--- a/package.json
+++ b/package.json
@@ -8,7 +8,7 @@
     "assert-plus": "~1.0.0",
     "bunyan": "~1.3.3",
     "node-uuid": "~1.4.0",
-    "joyent-schemas": "git://github.com/joyent/schemas.git#c661af34f9fa839aada1ff5c215067d9c86cbe89",
+    "joyent-schemas": "git://github.com/joyent/schemas.git#8e19f70",
     "jsprim": "~0.6.1"
   },
   "devDependencies": {
diff --git a/test/algorithms/calculate-server-unreserved.test.js b/test/algorithms/calculate-server-unreserved.test.js
index 2876ec3..8da5217 100644
--- a/test/algorithms/calculate-server-unreserved.test.js
+++ b/test/algorithms/calculate-server-unreserved.test.js
@@ -87,7 +87,7 @@ test('calculateServerUnreserved()', function (t) {
 			memory_total_bytes: 9132881112,
 			disk_pool_size_bytes: 4096 * GB,
 			disk_pool_alloc_bytes: 30 * GB,
-			disk_system_used_bytes: 2 * GB,
+			disk_system_used_bytes: -2 * GB,
 			disk_installed_images_used_bytes: 3 * GB,
 			disk_zone_quota_bytes: (20 + 10) * GB,
 			disk_kvm_quota_bytes: 0,
@@ -200,7 +200,7 @@ test('calculateServerUnreserved()', function (t) {
 	t.equal(servers[1].unreserved_ram,  1924);
 	t.equal(servers[1].unreserved_cpu,  2225);
 
-	t.equal(servers[2].unreserved_disk, 3906805);
+	t.equal(servers[2].unreserved_disk, 3908853);
 	t.equal(servers[2].unreserved_ram,  4331);
 	t.equal(servers[2].unreserved_cpu,  2500);
 
diff --git a/test/algorithms/hard-filter-invalid-servers.test.js b/test/algorithms/hard-filter-invalid-servers.test.js
index f4c5ff1..6491092 100644
--- a/test/algorithms/hard-filter-invalid-servers.test.js
+++ b/test/algorithms/hard-filter-invalid-servers.test.js
@@ -29,8 +29,9 @@ test('filterInvalidServers()', function (t) {
 	var results = filter.run(log, serversInfo, constraints);
 	var servers = results[0];
 	var reasons = results[1];
-	t.equal(servers.length, 1);
+	t.equal(servers.length, 2);
 	t.deepEqual(servers[0].uuid, '2bb4c1de-16b5-11e4-8e8e-07469af29312');
+	t.deepEqual(servers[1].uuid, 'e4c4b6ee-3cfa-11e6-9214-28cfe91f7d53');
 
 	var expectedReasons = {
 		/* BEGIN JSSTYLED */
@@ -39,8 +40,7 @@ test('filterInvalidServers()', function (t) {
 		'd0c1bacd-77b2-409a-a629-9ada5cc0eef9': 'property "reserved": string value found, but a boolean is required',
 		'a8da02c2-a294-4f66-bb7d-8a5c6689588d': 'property "sysinfo.Network Interfaces.e1000g0.NIC Names[1]": number value found, but a string is required',
 		'6a6ffadd-e274-4089-a561-ccbdc894ae76': 'property "sysinfo.Live Image": is missing and it is required',
-		'bc19a132-a1d7-408d-a8b3-73453c7d4f0b': 'property "vms.d95e64c8-da45-4b81-a044-89e26db43cbc.state": is missing and it is required',
-		'e4c4b6ee-3cfa-11e6-9214-28cfe91f7d53': 'property "disk_pool_alloc_bytes": is missing and it is required'
+		'bc19a132-a1d7-408d-a8b3-73453c7d4f0b': 'property "vms.d95e64c8-da45-4b81-a044-89e26db43cbc.state": is missing and it is required'
 		/* END JSSTYLED */
 
 	};
