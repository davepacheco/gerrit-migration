From 750e75a552ac8bd30892da3c0a75f274b0ffa760 Mon Sep 17 00:00:00 2001
From: Chris Burroughs <chris.burroughs@joyent.com>
Date: Mon, 28 Nov 2016 15:57:46 -0500
Subject: [PATCH] ./bin/triton instance ssh 8e65bf9b

---
 lib/do_instance/do_ssh.js | 87 +++++++++++++++++++++------------------
 1 file changed, 47 insertions(+), 40 deletions(-)

diff --git a/lib/do_instance/do_ssh.js b/lib/do_instance/do_ssh.js
index bdf8fed..be2da84 100644
--- a/lib/do_instance/do_ssh.js
+++ b/lib/do_instance/do_ssh.js
@@ -38,52 +38,59 @@ function do_ssh(subcmd, opts, args, callback) {
         id = id.substr(i + 1);
     }
 
-    cli.tritonapi.getInstance(id, function (err, inst) {
-        if (err) {
-            callback(err);
-            return;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        if (setupErr) {
+            callback(setupErr);
         }
+        cli.tritonapi.getInstance(id, function (err, inst) {
+            if (err) {
+                callback(err);
+                return;
+            }
 
-        var ip = inst.primaryIp;
-        if (!ip) {
-            callback(new Error('primaryIp not found for instance'));
-            return;
-        }
-
-        args = ['-l', user, ip].concat(args);
+            var ip = inst.primaryIp;
+            if (!ip) {
+                callback(new Error('primaryIp not found for instance'));
+                return;
+            }
 
-        /*
-         * By default we disable ControlMaster (aka mux, aka SSH connection
-         * multiplexing) because of
-         * https://github.com/joyent/node-triton/issues/52
-         *
-         */
-        if (!opts.no_disable_mux) {
-            /*
-             * A simple `-o ControlMaster=no` doesn't work. With just that
-             * option, a `ControlPath` option (from ~/.ssh/config) will still
-             * be used if it exists. Our hack is to set a ControlPath we
-             * know should not exist. Using '/dev/null' wasn't a good
-             * alternative because `ssh` tries "$ControlPath.$somerandomnum"
-             * and also because Windows.
-             */
-            var nullSshControlPath = path.resolve(
-                cli.tritonapi.config._configDir, 'tmp', 'nullSshControlPath');
-            args = [
-                '-o', 'ControlMaster=no',
-                '-o', 'ControlPath='+nullSshControlPath
-            ].concat(args);
-        }
+            args = ['-l', user, ip].concat(args);
 
-        self.top.log.info({args: args}, 'forking ssh');
-        var child = spawn('ssh', args, {stdio: 'inherit'});
-        child.on('close', function (code) {
             /*
-             * Once node 0.10 support is dropped we could instead:
-             *      process.exitCode = code;
-             *      callback();
+             * By default we disable ControlMaster (aka mux, aka SSH connection
+             * multiplexing) because of
+             * https://github.com/joyent/node-triton/issues/52
+             *
              */
-            process.exit(code);
+            if (!opts.no_disable_mux) {
+                /*
+                 * A simple `-o ControlMaster=no` doesn't work. With
+                 * just that option, a `ControlPath` option (from
+                 * ~/.ssh/config) will still be used if it exists. Our
+                 * hack is to set a ControlPath we know should not
+                 * exist. Using '/dev/null' wasn't a good alternative
+                 * because `ssh` tries "$ControlPath.$somerandomnum"
+                 * and also because Windows.
+                 */
+                var nullSshControlPath = path.resolve(
+                    cli.tritonapi.config._configDir, 'tmp',
+                    'nullSshControlPath');
+                args = [
+                    '-o', 'ControlMaster=no',
+                    '-o', 'ControlPath='+nullSshControlPath
+                ].concat(args);
+            }
+
+            self.top.log.info({args: args}, 'forking ssh');
+            var child = spawn('ssh', args, {stdio: 'inherit'});
+            child.on('close', function (code) {
+                /*
+                 * Once node 0.10 support is dropped we could instead:
+                 *      process.exitCode = code;
+                 *      callback();
+                 */
+                process.exit(code);
+            });
         });
     });
 }
-- 
2.21.0

