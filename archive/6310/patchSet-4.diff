From 9f9df7f16966ed15ce2c0fc807225c1df6b32236 Mon Sep 17 00:00:00 2001
From: Tim Foster <tim.foster@joyent.com>
Date: Fri, 24 May 2019 11:09:03 +0100
Subject: [PATCH] TOOLS-2178 eng check targets should reference resources in
 deps/eng/tools Reviewed by: Trent Mick <trentm@gmail.com> Approved by: Trent
 Mick <trentm@gmail.com>

---
 Makefile                   |    8 +-
 deps/eng                   |    2 +-
 lib/aggr-fsm.js            |   81 +--
 lib/common.js              |   86 ++-
 lib/inst-fsm.js            |   46 +-
 lib/net-agent.js           |   38 +-
 lib/net-fsm.js             |   36 +-
 lib/nic-fsm.js             |   95 +---
 lib/server-fsm.js          |   19 +-
 lib/utils.js               |   30 -
 lib/vmadm-watcher-fsm.js   |  250 ++++-----
 lib/watcher-fsm.js         |   46 +-
 package.json               |    3 +-
 test/unit/util.test.js     |   51 ++
 tools/bashstyle            |  113 ----
 tools/service_bundle.dtd.1 | 1091 ------------------------------------
 16 files changed, 333 insertions(+), 1662 deletions(-)
 delete mode 100644 lib/utils.js
 create mode 100644 test/unit/util.test.js
 delete mode 100755 tools/bashstyle
 delete mode 100644 tools/service_bundle.dtd.1

diff --git a/Makefile b/Makefile
index 22d5b16..9f786e6 100644
--- a/Makefile
+++ b/Makefile
@@ -59,7 +59,7 @@ NAME :=			net-agent
 RELEASE_TARBALL :=	$(NAME)-$(STAMP).tgz
 RELEASE_MANIFEST :=	$(NAME)-$(STAMP).manifest
 RELSTAGEDIR :=		/tmp/$(NAME)-$(STAMP)
-NODEUNIT =		$(TOP)/node_modules/.bin/nodeunit
+TAPE =			$(TOP)/node_modules/.bin/tape
 
 #
 # Due to the unfortunate nature of npm, the Node Package Manager, there appears
@@ -78,14 +78,14 @@ RUN_NPM_INSTALL =	$(NPM_ENV) $(NPM) install
 all: $(SMF_MANIFESTS) | $(NPM_EXEC) $(REPO_DEPS)
 	$(RUN_NPM_INSTALL)
 
-$(NODEUNIT): | $(NPM_EXEC)
+$(TAPE): | $(NPM_EXEC)
 	$(RUN_NPM_INSTALL)
 
 CLEAN_FILES += $(TAP) ./node_modules/tap
 
 .PHONY: test
-test: $(TAP)
-	TAP=1 $(TAP) test/*.test.js
+test: $(TAPE)
+	$(NODE) $(TAPE) test/unit/*.test.js
 
 .PHONY: release
 release: all deps docs $(SMF_MANIFESTS)
diff --git a/deps/eng b/deps/eng
index 126c0f0..d25b8fc 160000
--- a/deps/eng
+++ b/deps/eng
@@ -1 +1 @@
-Subproject commit 126c0f032b8bfddd45b14e8ee14e73e9798a013f
+Subproject commit d25b8fc60fb8c649559924870fe3aaf75e7421d5
diff --git a/lib/aggr-fsm.js b/lib/aggr-fsm.js
index a874297..9e3eac4 100644
--- a/lib/aggr-fsm.js
+++ b/lib/aggr-fsm.js
@@ -13,7 +13,6 @@
 var assert = require('assert-plus');
 var mod_common = require('./common');
 var mod_jsprim = require('jsprim');
-var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 
 // --- Globals
@@ -89,10 +88,6 @@ function AggrFSM(opts) {
         aggr: this.name
     }, true);
 
-    this.pending = {
-        refresh: false,
-        update: false
-    };
     this.released = null;
 
     this.local = null;
@@ -104,9 +99,9 @@ function AggrFSM(opts) {
      */
     this.etag = undefined;
 
-    mod_mooremachine.FSM.call(this, 'init');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(AggrFSM, mod_mooremachine.FSM);
+mod_util.inherits(AggrFSM, mod_common.CommonFSM);
 
 AggrFSM.prototype.state_init = function (S) {
     S.immediate(function () {
@@ -118,24 +113,14 @@ AggrFSM.prototype.state_init = function (S) {
  * Wait for external events to force us to recompare.
  */
 AggrFSM.prototype.state_waiting = function (S) {
-    S.on(this, 'setAsserted', function () {
-        S.gotoState('update');
-    });
-
-    S.on(this, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'setAsserted', 'update');
+    S.gotoStateOn(this, 'refreshAsserted', 'refresh');
+    S.gotoStateOn(this, 'releaseAsserted', 'release');
 
     /*
      * Refresh periodically.
      */
-    S.timeout(60 * 60 * 1000, function () {
-        S.gotoState('refresh');
-    });
-
-    S.on(this, 'releaseAsserted', function () {
-        S.gotoState('release');
-    });
+    S.gotoStateTimeout(60 * 60 * 1000, 'refresh');
 };
 
 AggrFSM.prototype.state_refresh = function (S) {
@@ -148,13 +133,8 @@ AggrFSM.prototype.state_refresh = function (S) {
         'update'
     ]);
 
-    S.on(self, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
-
-    S.on(self, 'releaseAsserted', function () {
-        S.gotoState('release');
-    });
+    S.gotoStateOn(self, 'refreshAsserted', 'refresh');
+    S.gotoStateOn(self, 'releaseAsserted', 'release');
 
     function afterGet(err, aggr, _, res) {
         if (err) {
@@ -170,9 +150,7 @@ AggrFSM.prototype.state_refresh = function (S) {
             self.log.warn(err,
                 'Failed to refresh aggregation information; ' +
                 'retrying in 5 seconds');
-            S.timeout(5000, function () {
-                S.gotoState('refresh');
-            });
+            S.gotoStateTimeout(5000, 'refresh');
             return;
         }
 
@@ -221,9 +199,7 @@ AggrFSM.prototype.state_create = function (S) {
             self.log.warn(err,
                 'Failed to create aggregation in NAPI; ' +
                 'scheduling state refresh');
-            S.timeout(5000, function () {
-                S.gotoState('refresh');
-            });
+            S.gotoStateTimeout(5000, 'refresh');
             return;
         }
 
@@ -256,9 +232,7 @@ AggrFSM.prototype.state_update = function (S) {
         return;
     }
 
-    S.on(this, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'refreshAsserted', 'refresh');
 
     S.gotoState('update.local');
 };
@@ -280,9 +254,7 @@ AggrFSM.prototype.state_update.local = function (S) {
         return;
     }
 
-    S.on(this, 'releaseAsserted', function () {
-        S.gotoState('release');
-    });
+    S.gotoStateOn(this, 'releaseAsserted', 'release');
 
     function afterUpdate(err) {
         if (err) {
@@ -417,9 +389,7 @@ AggrFSM.prototype.state_release.delete = function (S) {
                 return;
             }
 
-            S.timeout(5000, function () {
-                S.gotoState('release.delete');
-            });
+            S.gotoStateTimeout(5000, 'release.delete');
             return;
         }
 
@@ -446,9 +416,7 @@ AggrFSM.prototype.state_release.refresh = function (S) {
             self.log.warn(err,
                 'Failed to refresh aggregation information for release; ' +
                 'retrying in 5 seconds');
-            S.timeout(5000, function () {
-                S.gotoState('release.refresh');
-            });
+            S.gotoStateTimeout(5000, 'release.refresh');
             return;
         }
 
@@ -481,16 +449,7 @@ AggrFSM.prototype.setLocal = function (aggr) {
     var self = this;
 
     self.local = aggr;
-
-    if (self.pending.update) {
-        return;
-    }
-
-    self.pending.update = true;
-    setImmediate(function () {
-        self.pending.update = false;
-        self.emit('setAsserted');
-    });
+    self.emitDelayed('setAsserted', 0);
 };
 
 /**
@@ -512,15 +471,7 @@ AggrFSM.prototype.refresh = function (etag) {
         return;
     }
 
-    if (self.pending.refresh) {
-        return;
-    }
-
-    self.pending.refresh = true;
-    setImmediate(function () {
-        self.pending.refresh = false;
-        self.emit('refreshAsserted');
-    });
+    self.emitDelayed('refreshAsserted', 0);
 };
 
 AggrFSM.prototype.releaseFrom = function (belongs_to_uuid) {
diff --git a/lib/common.js b/lib/common.js
index b7dae15..b204fc8 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -5,17 +5,50 @@
  */
 
 /*
- * Copyright (c) 2018 Joyent, Inc.
+ * Copyright (c) 2019 Joyent, Inc.
  */
 
 'use strict';
 
 var assert = require('assert-plus');
 var mod_jsprim = require('jsprim');
+var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 
+// --- Globals
+
+var MAX_TIMESTAMPS = 10;
+
+
+// --- Internal helpers
+
+function prependTS(arr) {
+    arr.unshift(currentMillis());
+
+    while (arr.length > MAX_TIMESTAMPS) {
+        arr.pop();
+    }
+}
+
+
 // --- Exports
 
+
+/*
+ * Get monotonic time in milliseconds.
+ *
+ * Note that this is *not* the same as Date.now(), which returns the current
+ * wall clock time in milliseconds.
+ */
+function currentMillis() {
+    var time = process.hrtime();
+    var secs2ms = time[0] * 1000;
+    var ns2ms = time[1] / 1000000;
+
+    return (secs2ms + ns2ms);
+}
+
+
 function formatAggrId(cn_uuid, name) {
     assert.uuid(cn_uuid, 'cn_uuid');
     assert.string(name, 'name');
@@ -34,12 +67,61 @@ function hasChanged(fields, cur, old) {
     }
 
     return fields.some(function (field) {
-        return mod_jsprim.deepEqual(cur[field], old[field]);
+        return !mod_jsprim.deepEqual(cur[field], old[field]);
     });
 }
 
 
+/**
+ * This class encapsulates some of the common logic to net-agent's FSMs.
+ */
+function CommonFSM() {
+    this.pending = {};
+    this.last = {};
+
+    mod_mooremachine.FSM.call(this, 'init');
+}
+mod_util.inherits(CommonFSM, mod_mooremachine.FSM);
+
+/**
+ * Asynchronously emit event "name". If the event was last emitted within
+ * "delay" milliseconds, then we wait to emit it until we're clear of the
+ * window. Multiple calls to emitDelayed() for the same event will be
+ * coalesced into one emit.
+ */
+CommonFSM.prototype.emitDelayed = function emitDelayed(name, delay) {
+    var self = this;
+    var wait = 0;
+
+    if (typeof (delay) !== 'number') {
+        delay = 0;
+    }
+
+    if (self.pending[name]) {
+        return;
+    }
+
+    if (self.last[name] === undefined) {
+        self.last[name] = [ 0 ];
+    }
+
+    var now = currentMillis();
+    var next = self.last[name][0] + delay;
+    if (next > now) {
+        wait = next - now;
+    }
+
+    self.pending[name] = true;
+    setTimeout(function _emitDelayed() {
+        self.pending[name] = false;
+        prependTS(self.last[name]);
+        self.emit(name);
+    }, wait);
+};
+
 module.exports = {
+    CommonFSM: CommonFSM,
+    currentMillis: currentMillis,
     formatAggrId: formatAggrId,
     hasChanged: hasChanged
 };
diff --git a/lib/inst-fsm.js b/lib/inst-fsm.js
index 03159d9..b0d3c01 100644
--- a/lib/inst-fsm.js
+++ b/lib/inst-fsm.js
@@ -11,8 +11,8 @@
 'use strict';
 
 var assert = require('assert-plus');
+var mod_common = require('./common');
 var mod_jsprim = require('jsprim');
-var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 
 // --- Globals
@@ -66,19 +66,19 @@ function InstanceFSM(opts) {
         uuid: this.uuid
     }, true);
 
-    this.pending = {
-        refresh: false
-    };
-
     this.nics = {};
     this.vm = null;
     this.vmadm = opts.vmadm;
 
     this._update(opts.vm);
 
-    mod_mooremachine.FSM.call(this, 'update');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(InstanceFSM, mod_mooremachine.FSM);
+mod_util.inherits(InstanceFSM, mod_common.CommonFSM);
+
+InstanceFSM.prototype.state_init = function (S) {
+    S.gotoState('update');
+};
 
 InstanceFSM.prototype.state_waiting = function (S) {
     S.validTransitions([
@@ -86,13 +86,8 @@ InstanceFSM.prototype.state_waiting = function (S) {
         'remove'
     ]);
 
-    S.on(this, 'updateAsserted', function () {
-        S.gotoState('update');
-    });
-
-    S.on(this, 'removeAsserted', function () {
-        S.gotoState('remove');
-    });
+    S.gotoStateOn(this, 'updateAsserted', 'update');
+    S.gotoStateOn(this, 'removeAsserted', 'remove');
 };
 
 InstanceFSM.prototype.state_update = function (S) {
@@ -109,9 +104,7 @@ InstanceFSM.prototype.state_update = function (S) {
         return;
     }
 
-    S.on(this, 'removeAsserted', function () {
-        S.gotoState('remove');
-    });
+    S.gotoStateOn(this, 'removeAsserted', 'remove');
 
     S.gotoState('update.wait');
 };
@@ -141,9 +134,7 @@ InstanceFSM.prototype.state_update.wait = function (S) {
         return;
     }
 
-    S.on(this, 'updateAsserted', function () {
-        S.gotoState('update');
-    });
+    S.gotoStateOn(this, 'updateAsserted', 'update');
 
     S.on(pending, 'stateChanged', function onStateChange() {
         if (pending.remote === null) {
@@ -246,9 +237,7 @@ InstanceFSM.prototype.state_remove = function (S) {
     self.nics = {};
     self.vm = null;
 
-    S.on(this, 'updateAsserted', function () {
-        S.gotoState('update');
-    });
+    S.gotoStateOn(this, 'updateAsserted', 'update');
 };
 
 
@@ -315,16 +304,7 @@ InstanceFSM.prototype.update = function (vm) {
     var self = this;
 
     self._update(vm);
-
-    if (self.pending.update) {
-        return;
-    }
-
-    self.pending.update = true;
-    setImmediate(function () {
-        self.pending.update = false;
-        self.emit('updateAsserted');
-    });
+    self.emitDelayed('updateAsserted', 0);
 };
 
 /**
diff --git a/lib/net-agent.js b/lib/net-agent.js
index 1b04a7e..4f328ae 100644
--- a/lib/net-agent.js
+++ b/lib/net-agent.js
@@ -75,9 +75,9 @@
 
 var assert = require('assert-plus');
 var mod_clients = require('sdc-clients');
+var mod_common = require('./common');
 var mod_cueball = require('cueball');
 var mod_jsprim = require('jsprim');
-var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 var VError = require('verror');
 var vmadm = require('vmadm');
@@ -163,9 +163,9 @@ function NetAgent(options) {
     this.nics = {};
     this.nets = {};
 
-    mod_mooremachine.FSM.call(this, 'waiting');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(NetAgent, mod_mooremachine.FSM);
+mod_util.inherits(NetAgent, mod_common.CommonFSM);
 
 NetAgent.prototype.start = function () {
     this.emit('startAsserted');
@@ -283,21 +283,17 @@ NetAgent.prototype.releaseAggr = function (name, belongs_to_uuid) {
     }
 };
 
-NetAgent.prototype.state_waiting = function (S) {
-    S.on(this, 'startAsserted', function () {
-        S.gotoState('init');
-    });
+NetAgent.prototype.state_init = function (S) {
+    S.gotoStateOn(this, 'startAsserted', 'starting');
 };
 
-NetAgent.prototype.state_init = function (S) {
-    S.on(this, 'stopAsserted', function () {
-        S.gotoState('stopping');
-    });
+NetAgent.prototype.state_starting = function (S) {
+    S.gotoStateOn(this, 'stopAsserted', 'stopping');
 
-    S.gotoState('init.determineEventSource');
+    S.gotoState('starting.determineEventSource');
 };
 
-NetAgent.prototype.state_init.determineEventSource = function (S) {
+NetAgent.prototype.state_starting.determineEventSource = function (S) {
     var self = this;
 
     determineEventSource({
@@ -306,20 +302,18 @@ NetAgent.prototype.state_init.determineEventSource = function (S) {
     }, function determinedEventSource(err, eventSource) {
         if (err) {
             self.log.error(err, 'error determining event source');
-            S.timeout(1000, function () {
-                S.gotoState('init.determineEventSource');
-            });
+            S.gotoStateTimeout(1000, 'starting.determineEventSource');
             return;
         }
 
         self.log.info('determined best eventSource: %s', eventSource);
         self.eventSource = eventSource;
 
-        S.gotoState('init.startWatcher');
+        S.gotoState('starting.startWatcher');
     });
 };
 
-NetAgent.prototype.state_init.startWatcher = function (S) {
+NetAgent.prototype.state_starting.startWatcher = function (S) {
     S.validTransitions([ 'running' ]);
 
     switch (this.eventSource) {
@@ -339,13 +333,9 @@ NetAgent.prototype.state_init.startWatcher = function (S) {
         throw new VError('unknown event source %j', this.eventSource);
     }
 
-    S.on(this.watcher, 'stateChanged', function (newState) {
-        if (newState === 'waiting') {
-            S.gotoState('running');
-        }
-    });
-
     this.watcher.start();
+
+    S.gotoState('running');
 };
 
 NetAgent.prototype.state_running = function (S) {
diff --git a/lib/net-fsm.js b/lib/net-fsm.js
index df20f4b..ceb436c 100644
--- a/lib/net-fsm.js
+++ b/lib/net-fsm.js
@@ -12,8 +12,6 @@
 
 var assert = require('assert-plus');
 var mod_common = require('./common');
-var mod_jsprim = require('jsprim');
-var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 
 // --- Globals
@@ -40,6 +38,8 @@ var MAX_NIC_LISTENERS = 512;
 
 /**
  * The NetFSM is responsible for tracking changes related to a single network.
+ * We emit the "changed" event whenever fields responsible for VM and NIC
+ * configurations (DIFF_FIELDS) change so that the NICs can be updated.
  */
 function NetworkFSM(opts) {
     assert.object(opts, 'opts');
@@ -56,9 +56,9 @@ function NetworkFSM(opts) {
     this.old = null;
     this.cur = null;
 
-    mod_mooremachine.FSM.call(this, 'init');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(NetworkFSM, mod_mooremachine.FSM);
+mod_util.inherits(NetworkFSM, mod_common.CommonFSM);
 
 NetworkFSM.prototype.state_init = function (S) {
     this.setMaxListeners(MAX_NIC_LISTENERS);
@@ -71,20 +71,16 @@ NetworkFSM.prototype.state_init = function (S) {
 NetworkFSM.prototype.state_waiting = function (S) {
     S.validTransitions([ 'refresh' ]);
 
-    if (!mod_jsprim.deepEqual(this.old, this.cur)) {
-        this.emit('updated', this.cur);
-    }
-
     /*
      * Refresh periodically.
      */
-    S.timeout(5 * 60 * 1000, function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateTimeout(5 * 60 * 1000, 'refresh');
 
-    S.on(this, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'refreshAsserted', 'refresh');
+
+    if (mod_common.hasChanged(DIFF_FIELDS, this.cur, this.old)) {
+        this.emitDelayed('changed', 0);
+    }
 };
 
 NetworkFSM.prototype.state_refresh = function (S) {
@@ -111,16 +107,10 @@ NetworkFSM.prototype.state_refresh = function (S) {
 
         self.cur = net;
 
-        if (mod_common.hasChanged(DIFF_FIELDS, self.cur, self.old)) {
-            self.emit('changed');
-        }
-
         S.gotoState('waiting');
     }
 
-    S.on(self, 'stopAsserted', function () {
-        S.gotoState('stopped');
-    });
+    S.gotoStateOn(self, 'stopAsserted', 'stopped');
 
     self.log.info('Refreshing network information');
     self.app.napi.getNetwork(self.uuid, S.callback(afterGet));
@@ -129,9 +119,7 @@ NetworkFSM.prototype.state_refresh = function (S) {
 NetworkFSM.prototype.state_stopped = function (S) {
     S.validTransitions([ 'refresh' ]);
 
-    S.on(this, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'refreshAsserted', 'refresh');
 };
 
 NetworkFSM.prototype.refresh = function () {
diff --git a/lib/nic-fsm.js b/lib/nic-fsm.js
index 984625a..18b1d1d 100644
--- a/lib/nic-fsm.js
+++ b/lib/nic-fsm.js
@@ -13,7 +13,6 @@
 var assert = require('assert-plus');
 var mod_common = require('./common');
 var mod_jsprim = require('jsprim');
-var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 
 // --- Globals
@@ -151,10 +150,6 @@ function NicFSM(opts) {
         mac: this.mac
     }, true);
 
-    this.pending = {
-        refresh: false,
-        update: false
-    };
     this.released = null;
 
     this.needVmUpdate = false;
@@ -170,9 +165,9 @@ function NicFSM(opts) {
 
     this.network = null;
 
-    mod_mooremachine.FSM.call(this, 'init');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(NicFSM, mod_mooremachine.FSM);
+mod_util.inherits(NicFSM, mod_common.CommonFSM);
 
 NicFSM.prototype.state_init = function (S) {
     S.immediate(function () {
@@ -184,13 +179,9 @@ NicFSM.prototype.state_init = function (S) {
  * Wait for external events to force us to recompare.
  */
 NicFSM.prototype.state_waiting = function (S) {
-    S.on(this, 'setAsserted', function () {
-        S.gotoState('update');
-    });
-
-    S.on(this, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'setAsserted', 'update');
+    S.gotoStateOn(this, 'refreshAsserted', 'refresh');
+    S.gotoStateOn(this, 'releaseAsserted', 'release');
 
     /*
      * Refresh periodically.
@@ -200,18 +191,10 @@ NicFSM.prototype.state_waiting = function (S) {
      * to let us know when something important changes. If NIC-specific
      * properties like spoofing parameters change, we'll eventually fix them.
      */
-    S.timeout(60 * 60 * 1000, function () {
-        S.gotoState('refresh');
-    });
-
-    S.on(this, 'releaseAsserted', function () {
-        S.gotoState('release');
-    });
+    S.gotoStateTimeout(60 * 60 * 1000, 'refresh');
 
     if (this.network !== null) {
-        S.on(this.network, 'changed', function () {
-            S.gotoState('refresh');
-        });
+        S.gotoStateOn(this.network, 'changed', 'refresh');
     }
 };
 
@@ -225,13 +208,8 @@ NicFSM.prototype.state_refresh = function (S) {
         'update'
     ]);
 
-    S.on(self, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
-
-    S.on(self, 'releaseAsserted', function () {
-        S.gotoState('release');
-    });
+    S.gotoStateOn(self, 'refreshAsserted', 'refresh');
+    S.gotoStateOn(self, 'releaseAsserted', 'release');
 
     function afterGet(err, nic, _, res) {
         if (err) {
@@ -247,9 +225,7 @@ NicFSM.prototype.state_refresh = function (S) {
             self.log.warn(err,
                 'Failed to refresh NIC information; ' +
                 'retrying in 5 seconds');
-            S.timeout(5000, function () {
-                S.gotoState('refresh');
-            });
+            S.gotoStateTimeout(5000, 'refresh');
             return;
         }
 
@@ -298,9 +274,7 @@ NicFSM.prototype.state_create = function (S) {
             self.log.warn(err,
                 'Failed to create NIC in NAPI; ' +
                 'scheduling state refresh');
-            S.timeout(5000, function () {
-                S.gotoState('refresh');
-            });
+            S.gotoStateTimeout(5000, 'refresh');
             return;
         }
 
@@ -309,9 +283,11 @@ NicFSM.prototype.state_create = function (S) {
         S.gotoState('waiting');
     }
 
-    self.log.info({ nic: self.local }, 'Syncing local NIC to NAPI');
+    var remcreate = Object.assign({ check_owner: false }, self.local);
 
-    self.app.napi.createNic(self.mac, self.local, S.callback(afterCreate));
+    self.log.info({ nic: remcreate }, 'Syncing local NIC to NAPI');
+
+    self.app.napi.createNic(self.mac, remcreate, S.callback(afterCreate));
 };
 
 NicFSM.prototype.state_update = function (S) {
@@ -362,9 +338,7 @@ NicFSM.prototype.state_update = function (S) {
         return;
     }
 
-    S.on(this, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'refreshAsserted', 'refresh');
 
     S.gotoState('update.local');
 };
@@ -392,9 +366,7 @@ NicFSM.prototype.state_update.local = function (S) {
         return;
     }
 
-    S.on(this, 'releaseAsserted', function () {
-        S.gotoState('release');
-    });
+    S.gotoStateOn(this, 'releaseAsserted', 'release');
 
     function afterUpdate(err) {
         if (err) {
@@ -540,9 +512,7 @@ NicFSM.prototype.state_remove = function (S) {
         if (err) {
             self.log.error(err, 'Failed to update NIC on VM %s',
                 self.local.belongs_to_uuid);
-            S.timeout(5000, function () {
-                S.gotoState('remove');
-            });
+            S.gotoStateTimeout(5000, 'remove');
             return;
         }
 
@@ -605,9 +575,7 @@ NicFSM.prototype.state_release.delete = function (S) {
                 return;
             }
 
-            S.timeout(5000, function () {
-                S.gotoState('release.delete');
-            });
+            S.gotoStateTimeout(5000, 'release.delete');
             return;
         }
 
@@ -634,9 +602,7 @@ NicFSM.prototype.state_release.refresh = function (S) {
             self.log.warn(err,
                 'Failed to refresh NIC information for release; ' +
                 'retrying in 5 seconds');
-            S.timeout(5000, function () {
-                S.gotoState('release.refresh');
-            });
+            S.gotoStateTimeout(5000, 'release.refresh');
             return;
         }
 
@@ -665,16 +631,7 @@ NicFSM.prototype.setLocal = function (nic) {
     var self = this;
 
     self.local = nic;
-
-    if (self.pending.update) {
-        return;
-    }
-
-    self.pending.update = true;
-    setImmediate(function () {
-        self.pending.update = false;
-        self.emit('setAsserted');
-    });
+    self.emitDelayed('setAsserted', 0);
 };
 
 /**
@@ -702,15 +659,7 @@ NicFSM.prototype.refresh = function (etag) {
         return;
     }
 
-    if (self.pending.refresh) {
-        return;
-    }
-
-    self.pending.refresh = true;
-    setImmediate(function () {
-        self.pending.refresh = false;
-        self.emit('refreshAsserted');
-    });
+    self.emitDelayed('refreshAsserted', 0);
 };
 
 NicFSM.prototype.releaseFrom = function (belongs_to_uuid) {
diff --git a/lib/server-fsm.js b/lib/server-fsm.js
index 21602d3..fdaaf72 100644
--- a/lib/server-fsm.js
+++ b/lib/server-fsm.js
@@ -14,7 +14,6 @@ var assert = require('assert-plus');
 var mod_common = require('./common');
 var mod_forkexec = require('forkexec');
 var mod_jsprim = require('jsprim');
-var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 
 // --- Globals
@@ -73,22 +72,20 @@ function ServerFSM(opts) {
      */
     this.loadSysinfo = opts.loadSysinfo || loadSysinfo;
 
-    mod_mooremachine.FSM.call(this, 'init');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(ServerFSM, mod_mooremachine.FSM);
+mod_util.inherits(ServerFSM, mod_common.CommonFSM);
 
 ServerFSM.prototype.state_init = function (S) {
-    S.validTransitions([ 'refresh' ]);
-
-    S.gotoState('refresh');
+    S.immediate(function () {
+        S.gotoState('refresh');
+    });
 };
 
 ServerFSM.prototype.state_waiting = function (S) {
     S.validTransitions([ 'refresh' ]);
 
-    S.on(this, 'refreshAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'refreshAsserted', 'refresh');
 };
 
 ServerFSM.prototype.state_refresh = function (S) {
@@ -98,9 +95,7 @@ ServerFSM.prototype.state_refresh = function (S) {
 
     function retry(err) {
         self.log.error(err, 'failed to fetch new sysinfo');
-        S.timeout(5000, function () {
-            S.gotoState('refresh');
-        });
+        S.gotoStateTimeout(5000, 'refresh');
     }
 
     self.loadSysinfo(function _onSysinfo(err, sysinfo) {
diff --git a/lib/utils.js b/lib/utils.js
deleted file mode 100644
index 0697d1c..0000000
--- a/lib/utils.js
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2019 Joyent, Inc.
- */
-
-'use strict';
-
-/*
- * Get monotonic time in milliseconds.
- *
- * Note that this is *not* the same as Date.now(), which returns the current
- * wall clock time in milliseconds.
- */
-function currentMillis() {
-    var time = process.hrtime();
-    var secs2ms = time[0] * 1000;
-    var ns2ms = time[1] / 1000000;
-
-    return (secs2ms + ns2ms);
-}
-
-
-module.exports = {
-    currentMillis: currentMillis
-};
diff --git a/lib/vmadm-watcher-fsm.js b/lib/vmadm-watcher-fsm.js
index cf45ed8..75690d2 100644
--- a/lib/vmadm-watcher-fsm.js
+++ b/lib/vmadm-watcher-fsm.js
@@ -11,11 +11,9 @@
 'use strict';
 
 var assert = require('assert-plus');
-var mod_mooremachine = require('mooremachine');
+var mod_common = require('./common');
 var mod_util = require('util');
 
-var currentMillis = require('./utils').currentMillis;
-
 // --- Globals
 
 /*
@@ -58,22 +56,15 @@ function VmadmEventsFSM(opts) {
     self.stopWatcher = null;
     self.vmadm = opts.vmadm;
 
-    self.lastUpdate = 0;
-    self.pending = {
-        vmsUpdate: false
-    };
-
-    mod_mooremachine.FSM.call(self, 'waiting');
+    mod_common.CommonFSM.call(self);
 }
-mod_util.inherits(VmadmEventsFSM, mod_mooremachine.FSM);
+mod_util.inherits(VmadmEventsFSM, mod_common.CommonFSM);
 
-VmadmEventsFSM.prototype.state_waiting = function (S) {
-    S.on(this, 'startAsserted', function () {
-        S.gotoState('init');
-    });
+VmadmEventsFSM.prototype.state_init = function (S) {
+    S.gotoStateOn(this, 'startAsserted', 'setup');
 };
 
-/*
+/**
  * Create the `vmadm events` watcher which gets events for any VM change on the
  * system using vminfod.
  *
@@ -83,7 +74,7 @@ VmadmEventsFSM.prototype.state_waiting = function (S) {
  * latest known state of the VM.  This object is then passed to `app.updateVMs`
  * whenever any change on the system is seen.
  */
-VmadmEventsFSM.prototype.state_init = function (S) {
+VmadmEventsFSM.prototype.state_setup = function (S) {
     var self = this;
 
     self.vms = {};
@@ -94,78 +85,6 @@ VmadmEventsFSM.prototype.state_init = function (S) {
         name: 'Net Agent VmadmEventsFSM'
     };
 
-    // Called when a new event from `vmadm events` is seen
-    function handler(ev) {
-        assert.object(ev, 'ev');
-        assert.optionalObject(ev.vm, 'ev.vm');
-        assert.string(ev.type, 'ev.type');
-        assert.uuid(ev.zonename, 'ev.zonename');
-
-        var needsUpdate = false;
-
-        self.log.trace({ev: ev}, 'saw event from "vmadm events"');
-
-        if (ev.vm && ev.vm.do_not_inventory) {
-            self.ignore[ev.zonename] = true;
-            self.log.debug('VM %s ignored - do_not_inventory set',
-                ev.zonename);
-        } else if (ev.vm && !ev.vm.do_not_inventory) {
-            delete self.ignore[ev.zonename];
-        }
-
-        switch (ev.type) {
-        case 'create':
-            assert.object(ev.vm, 'ev.vm');
-            assert(!self.vms.hasOwnProperty(ev.zonename), 'VM already created');
-
-            self.vms[ev.zonename] = ev.vm;
-            self.log.debug('VM %s created - setting needsUpdate', ev.zonename);
-            needsUpdate = true;
-            break;
-        case 'modify':
-            assert.object(ev.vm, 'ev.vm');
-            assert.arrayOfObject(ev.changes, 'ev.changes');
-            assert(self.vms.hasOwnProperty(ev.zonename), 'VM not found');
-
-            self.vms[ev.zonename] = ev.vm;
-
-            if (self.ignore[ev.zonename]) {
-                break;
-            }
-
-            var changes = ev.changes.filter(function (change) {
-                return (WATCHED_FIELDS.indexOf(change.path[0]) >= 0);
-            });
-
-            if (changes.length > 0) {
-                var keys = changes.map(function (change) {
-                    return change.prettyPath;
-                });
-                self.log.debug(
-                    'VM %s fields updated (%s) - setting needsUpdate',
-                    ev.zonename, keys.join(','));
-                needsUpdate = true;
-            }
-
-            break;
-        case 'delete':
-            delete self.vms[ev.zonename];
-            if (!self.ignore[ev.zonename]) {
-                self.log.debug('VM %s deleted - setting needsUpdate',
-                    ev.zonename);
-                needsUpdate = true;
-            }
-            delete self.ignore[ev.zonename];
-            break;
-        default:
-            assert.fail('unknown vmadm event type: ' + ev.type);
-            break;
-        }
-
-        if (needsUpdate) {
-            self._emitUpdate();
-        }
-    }
 
     /*
      * Called when `vmadm events` is ready (with full list of VMs on the
@@ -176,10 +95,8 @@ VmadmEventsFSM.prototype.state_init = function (S) {
         if (err) {
             self.log.error(err, 'vmadm events failed to ready');
 
-            // Try again
-            S.timeout(1000, function () {
-                S.gotoState('init');
-            });
+            // Try again in a second.
+            S.gotoStateTimeout(1000, 'setup');
             return;
         }
 
@@ -191,19 +108,17 @@ VmadmEventsFSM.prototype.state_init = function (S) {
         self.vms = obj.ev.vms;
         self.stopWatcher = obj.stop;
 
-        self._emitUpdate();
+        self.emitDelayed('vms-update', UPDATE_DELAY);
 
         S.gotoState('running');
     }
 
-    self.emitter = self.vmadm.events(opts, handler, ready);
+    self.emitter = self.vmadm.events(opts, self.handleEvent.bind(self), ready);
 
     S.on(self.emitter, 'error', function (err) {
         self.log.error(err, 'vmadm events error');
         self.emitter = null;
-        S.timeout(1000, function () {
-            S.gotoState('init');
-        });
+        S.gotoStateTimeout(1000, 'setup');
     });
 };
 
@@ -215,18 +130,11 @@ VmadmEventsFSM.prototype.state_running = function (S) {
         self.stopWatcher();
         self.stopWatcher = null;
         self.emitter = null;
-        S.timeout(1000, function () {
-            S.gotoState('init');
-        });
+        S.gotoStateTimeout(1000, 'setup');
     });
 
-    S.on(self, 'stopAsserted', function () {
-        S.gotoState('stopped');
-    });
-
-    S.on(self, 'restartAsserted', function () {
-        S.gotoState('init');
-    });
+    S.gotoStateOn(self, 'stopAsserted', 'stopped');
+    S.gotoStateOn(self, 'restartAsserted', 'setup');
 };
 
 VmadmEventsFSM.prototype.state_stopped = function (S) {
@@ -245,6 +153,86 @@ VmadmEventsFSM.prototype.stop = function () {
     self.emit('stopAsserted');
 };
 
+/**
+ * Given an individual event notification sent by vminfod, update our local
+ * copy of the CN's state.
+ */
+VmadmEventsFSM.prototype.handleEvent = function (ev) {
+    assert.object(ev, 'ev');
+    assert.optionalObject(ev.vm, 'ev.vm');
+    assert.string(ev.type, 'ev.type');
+    assert.uuid(ev.zonename, 'ev.zonename');
+
+    var self = this;
+    var needsUpdate = false;
+
+    self.log.trace({ev: ev}, 'saw event from "vmadm events"');
+
+    if (ev.vm && ev.vm.do_not_inventory) {
+        self.ignore[ev.zonename] = true;
+        self.log.debug('VM %s ignored - do_not_inventory set',
+            ev.zonename);
+    } else if (ev.vm && !ev.vm.do_not_inventory) {
+        delete self.ignore[ev.zonename];
+    }
+
+    switch (ev.type) {
+    case 'create':
+        assert.object(ev.vm, 'ev.vm');
+        assert(!self.vms.hasOwnProperty(ev.zonename), 'VM already created');
+
+        self.vms[ev.zonename] = ev.vm;
+        self.log.debug('VM %s created - setting needsUpdate', ev.zonename);
+        needsUpdate = true;
+        break;
+    case 'modify':
+        assert.object(ev.vm, 'ev.vm');
+        assert.arrayOfObject(ev.changes, 'ev.changes');
+        assert(self.vms.hasOwnProperty(ev.zonename), 'VM not found');
+
+        self.vms[ev.zonename] = ev.vm;
+
+        if (self.ignore[ev.zonename]) {
+            break;
+        }
+
+        var changes = ev.changes.filter(function (change) {
+            return (WATCHED_FIELDS.indexOf(change.path[0]) >= 0);
+        });
+
+        if (changes.length > 0) {
+            var keys = changes.map(function (change) {
+                return change.prettyPath;
+            });
+            self.log.debug(
+                'VM %s fields updated (%s) - setting needsUpdate',
+                ev.zonename, keys.join(','));
+            needsUpdate = true;
+        }
+
+        break;
+    case 'delete':
+        delete self.vms[ev.zonename];
+        if (!self.ignore[ev.zonename]) {
+            self.log.debug('VM %s deleted - setting needsUpdate',
+                ev.zonename);
+            needsUpdate = true;
+        }
+        delete self.ignore[ev.zonename];
+        break;
+    default:
+        assert.fail('unknown vmadm event type: ' + ev.type);
+        break;
+    }
+
+    if (needsUpdate) {
+        self.emitDelayed('vms-update', UPDATE_DELAY);
+    }
+};
+
+/**
+ * Return the current set of Triton-tracked VMs on this CN.
+ */
 VmadmEventsFSM.prototype.getCurrentVMs = function () {
     var self = this;
 
@@ -257,28 +245,6 @@ VmadmEventsFSM.prototype.getCurrentVMs = function () {
     return vms;
 };
 
-VmadmEventsFSM.prototype._emitUpdate = function () {
-    var self = this;
-    var wait = 0;
-
-    if (self.pending.vmsUpdate) {
-        return;
-    }
-
-    var now = currentMillis();
-    var next = self.lastUpdate + UPDATE_DELAY;
-    if (next > now) {
-        wait = next - now;
-    }
-
-    self.pending.vmsUpdate = true;
-    setTimeout(function () {
-        self.lastUpdate = currentMillis();
-        self.pending.vmsUpdate = false;
-        self.emit('vms-update');
-    }, wait);
-};
-
 
 // --- Exports
 
@@ -300,20 +266,12 @@ function VmadmWatcherFSM(opts) {
         vmadm: self.vmadm
     });
 
-    self.pending = {
-        refresh: false
-    };
-
-    mod_mooremachine.FSM.call(self, 'init');
+    mod_common.CommonFSM.call(self);
 }
-mod_util.inherits(VmadmWatcherFSM, mod_mooremachine.FSM);
+mod_util.inherits(VmadmWatcherFSM, mod_common.CommonFSM);
 
 VmadmWatcherFSM.prototype.state_init = function (S) {
-    var self = this;
-
-    S.on(self, 'startAsserted', function () {
-        S.gotoState('running');
-    });
+    S.gotoStateOn(this, 'startAsserted', 'running');
 };
 
 VmadmWatcherFSM.prototype.state_running = function (S) {
@@ -343,17 +301,7 @@ VmadmWatcherFSM.prototype.stop = function () {
 };
 
 VmadmWatcherFSM.prototype.refresh = function () {
-    var self = this;
-
-    if (self.pending.refresh) {
-        return;
-    }
-
-    self.pending.refresh = true;
-    setImmediate(function () {
-        self.pending.refresh = false;
-        self.emit('refreshAsserted');
-    });
+    this.emitDelayed('refreshAsserted', 0);
 };
 
 module.exports = VmadmWatcherFSM;
diff --git a/lib/watcher-fsm.js b/lib/watcher-fsm.js
index a38c4f2..3131762 100644
--- a/lib/watcher-fsm.js
+++ b/lib/watcher-fsm.js
@@ -12,12 +12,11 @@
 
 var assert = require('assert-plus');
 var mod_child = require('child_process');
+var mod_common = require('./common');
 var mod_fs = require('fs');
 var mod_jsprim = require('jsprim');
-var mod_mooremachine = require('mooremachine');
 var mod_util = require('util');
 
-var currentMillis = require('./utils').currentMillis;
 var LineStream = require('lstream');
 
 // --- Globals
@@ -72,9 +71,9 @@ function ZoneEventFSM(opts) {
     this.stdout = null;
     this.stderr = null;
 
-    mod_mooremachine.FSM.call(this, 'init');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(ZoneEventFSM, mod_mooremachine.FSM);
+mod_util.inherits(ZoneEventFSM, mod_common.CommonFSM);
 
 ZoneEventFSM.prototype.state_init = function (S) {
     this.proc = mod_child.spawn(ZONEEVENT_CMD, ['-i', 'net-agent'], {
@@ -187,27 +186,18 @@ function WatcherFSM(opts) {
      */
     this.cfgwatcher = mod_fs.watch('/etc/zones', this.refresh.bind(this));
 
-    this.lastRefresh = 0;
-    this.pending = {
-        refresh: false
-    };
-
-    mod_mooremachine.FSM.call(this, 'init');
+    mod_common.CommonFSM.call(this);
 }
-mod_util.inherits(WatcherFSM, mod_mooremachine.FSM);
+mod_util.inherits(WatcherFSM, mod_common.CommonFSM);
 
 WatcherFSM.prototype.state_init = function (S) {
-    S.on(this, 'startAsserted', function () {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(this, 'startAsserted', 'refresh');
 };
 
 WatcherFSM.prototype.state_waiting = function (S) {
     var self = this;
 
-    S.on(self, 'refreshAsserted', function doRefresh() {
-        S.gotoState('refresh');
-    });
+    S.gotoStateOn(self, 'refreshAsserted', 'refresh');
 
     function scheduleRefresh() {
         self.refresh();
@@ -225,8 +215,6 @@ WatcherFSM.prototype.state_waiting = function (S) {
 WatcherFSM.prototype.state_refresh = function (S) {
     var self = this;
 
-    self.lastRefresh = currentMillis();
-
     S.on(self, 'refreshAsserted', function () {
         /*
          * If we get a refresh event during a refresh, then that means that our
@@ -236,7 +224,6 @@ WatcherFSM.prototype.state_refresh = function (S) {
          */
         self.log.warn('rescheduling VM information refresh due to ' +
             'already running "vmadm lookup"');
-        self.lastRefresh = currentMillis();
         self.refresh();
     });
 
@@ -272,24 +259,7 @@ WatcherFSM.prototype.stop = function () {
 };
 
 WatcherFSM.prototype.refresh = function () {
-    var self = this;
-    var wait = 0;
-
-    if (self.pending.refresh) {
-        return;
-    }
-
-    var now = currentMillis();
-    var next = self.lastRefresh + REFRESH_DELAY;
-    if (next > now) {
-        wait = next - now;
-    }
-
-    self.pending.refresh = true;
-    setTimeout(function () {
-        self.pending.refresh = false;
-        self.emit('refreshAsserted');
-    }, wait);
+    this.emitDelayed('refreshAsserted', REFRESH_DELAY);
 };
 
 module.exports = WatcherFSM;
diff --git a/package.json b/package.json
index 340cfd7..cde1a1f 100644
--- a/package.json
+++ b/package.json
@@ -12,10 +12,11 @@
         "jsprim": "1.4.1",
         "kang": "1.2.0",
         "lstream": "0.0.4",
-        "mooremachine": "2.2.0",
+        "mooremachine": "2.3.0",
         "restify": "4.3.0",
         "sdc-bunyan-serializers": "git+https://github.com/joyent/sdc-bunyan-serializers.git#aefc119",
         "sdc-clients": "^10.5.0",
+        "tape": "4.5.1",
         "triton-mockcloud-common": "git+http://github.com/joyent/triton-mockcloud-common.git#master",
         "triton-netconfig": "1.1.0",
         "uuid": "3.2.1",
diff --git a/test/unit/util.test.js b/test/unit/util.test.js
new file mode 100644
index 0000000..5108cd6
--- /dev/null
+++ b/test/unit/util.test.js
@@ -0,0 +1,51 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2019 Joyent, Inc.
+ */
+
+/*
+ * Tests that verify that NIC changes made in NAPI are reflected locally.
+ */
+
+'use strict';
+
+var mod_common = require('../../lib/common');
+var test = require('tape');
+
+// --- Tests
+
+test('hasChanged() tests', function (t) {
+    var OBJ1 = { a: 5, b: [ 1, 2, 3, 4 ] };
+    var OBJ2 = { a: 6, b: [ 1, 2, 3, 4 ] };
+    var OBJ3 = { a: 5, b: [ 1, 2, 3, 5 ] };
+
+    t.equal(mod_common.hasChanged([], OBJ1, null), true);
+    t.equal(mod_common.hasChanged([ 'a' ], OBJ1, OBJ2), true);
+    t.equal(mod_common.hasChanged([ 'b' ], OBJ1, OBJ3), true);
+
+    t.equal(mod_common.hasChanged([ 'a', 'b' ], OBJ1, OBJ3), true);
+    t.equal(mod_common.hasChanged([ 'a', 'b' ], OBJ1, OBJ2), true);
+    t.equal(mod_common.hasChanged([ 'a', 'b' ], OBJ2, OBJ3), true);
+
+    t.equal(mod_common.hasChanged([ 'a', 'b', 'c' ], OBJ1, OBJ3), true);
+    t.equal(mod_common.hasChanged([ 'a', 'b', 'c' ], OBJ1, OBJ2), true);
+    t.equal(mod_common.hasChanged([ 'a', 'b', 'c' ], OBJ2, OBJ3), true);
+
+    t.equal(mod_common.hasChanged([], {}, {}), false);
+    t.equal(mod_common.hasChanged([], OBJ1, OBJ2), false);
+    t.equal(mod_common.hasChanged([ 'a' ], OBJ1, OBJ3), false);
+    t.equal(mod_common.hasChanged([ 'b' ], OBJ1, OBJ2), false);
+    t.equal(mod_common.hasChanged([ 'c' ], OBJ1, OBJ2), false);
+
+    t.equal(mod_common.hasChanged([], OBJ1, OBJ1), false);
+    t.equal(mod_common.hasChanged([ 'a' ], OBJ1, OBJ1), false);
+    t.equal(mod_common.hasChanged([ 'b' ], OBJ1, OBJ1), false);
+    t.equal(mod_common.hasChanged([ 'c' ], OBJ1, OBJ1), false);
+
+    t.end();
+});
diff --git a/tools/bashstyle b/tools/bashstyle
deleted file mode 100755
index e4b13e2..0000000
--- a/tools/bashstyle
+++ /dev/null
@@ -1,113 +0,0 @@
-#!/usr/bin/env node
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-/*
- * bashstyle: check bash scripts for adherence to style guidelines, including:
- *
- *    o no lines longer than 80 characters
- *    o file does not end with a blank line
- *
- * Future enhancements could include:
- *    o indents consistent with respect to tabs, spaces
- *    o indents consistently sized (all are some multiple of the smallest
- *      indent, which must be a tab or 4 or 8 spaces)
- */
-
-var mod_assert = require('assert');
-var mod_fs = require('fs');
-
-var nerrors = 0;
-
-main();
-process.exit(0);
-
-function main()
-{
-	var files = process.argv.slice(2);
-
-	if (files.length === 0) {
-		console.error('usage: %s file1 [...]',
-		    process.argv.slice(0, 2).join(' '));
-		process.exit(2);
-	}
-
-	files.forEach(checkFile);
-
-	if (nerrors != 0)
-		process.exit(1);
-}
-
-function checkFile(filename)
-{
-	var text = mod_fs.readFileSync(filename, 'utf-8');
-	var lines = text.split('\n');
-	var i;
-
-	mod_assert.ok(lines.length > 0);
-
-	/*
-	 * Expand tabs in each line and check for long lines.
-	 */
-	for (i = 1; i <= lines.length; i++) {
-		var line = expandTabs(lines[i - 1]);
-
-		if (line.length > 80) {
-			nerrors++;
-			console.log('%s: %d: line exceeds 80 columns',
-			    filename, i);
-		}
-	}
-
-	/*
-	 * No sane editor lets you save a file without a newline at the very end.
-	 */
-	if (lines[lines.length - 1].length !== 0) {
-		nerrors++;
-		console.log('%s: %d: file does not end with newline',
-			filename, lines.length);
-	}
-
-	/*
-	 * Since the file will always end with a newline, the last entry of
-	 * "lines" will actually be blank.
-	 */
-	if (lines.length > 1 && lines[lines.length - 2].length === 0) {
-		nerrors++;
-		console.log('%s: %d: file ends with a blank line',
-		    filename, lines.length - 1);
-	}
-}
-
-function expandTabs(text)
-{
-	var out = '';
-	var col = 0;
-	var j, k;
-
-	for (j = 0; j < text.length; j++) {
-		if (text[j] != '\t') {
-			out += text[j];
-			col++;
-			continue;
-		}
-
-		k = 8 - (col % 8);
-		col += k;
-
-		do {
-			out += ' ';
-		}  while (--k > 0);
-
-		col += k;
-	}
-
-	return (out);
-}
diff --git a/tools/service_bundle.dtd.1 b/tools/service_bundle.dtd.1
deleted file mode 100644
index e5c2380..0000000
--- a/tools/service_bundle.dtd.1
+++ /dev/null
@@ -1,1091 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
-
- CDDL HEADER START
-
- The contents of this file are subject to the terms of the
- Common Development and Distribution License (the "License").
- You may not use this file except in compliance with the License.
-
- You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
- or http://www.opensolaris.org/os/licensing.
- See the License for the specific language governing permissions
- and limitations under the License.
-
- When distributing Covered Code, include this CDDL HEADER in each
- file and include the License file at usr/src/OPENSOLARIS.LICENSE.
- If applicable, add the following below this CDDL HEADER, with the
- fields enclosed by brackets "[]" replaced with your own identifying
- information: Portions Copyright [yyyy] [name of copyright owner]
-
- CDDL HEADER END
--->
-
-<!--
-  Service description DTD
-
-    Most attributes are string values (or an individual string from a
-    restricted set), but attributes with a specific type requirement are
-    noted in the comment describing the element.
--->
-
-<!--
-  XInclude support
-
-    A series of service bundles may be composed via the xi:include tag.
-    smf(5) tools enforce that all bundles be of the same type.
--->
-
-<!--
-     These entities are used for the property, propval and property_group
-     elements, that require type attributes for manifest, while for profiles
-     the type attributes are only implied.
--->
-
-<!ENTITY % profile "IGNORE">
-<!ENTITY % manifest "INCLUDE">
-
-<!ELEMENT xi:include
-  (xi:fallback)
-  >
-<!ATTLIST xi:include
-  href CDATA #REQUIRED
-  parse (xml|text) "xml"
-  encoding CDATA #IMPLIED
-  xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude"
-  >
-
-<!ELEMENT xi:fallback
-  ANY
-  >
-<!ATTLIST xi:fallback
-  xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude"
-  >
-
-<!--
-  stability
-
-    This element associates an SMI stability level with the parent
-    element.  See attributes(5) for an explanation of interface
-    stability levels.
-
-    Its attribute is
-
-	value	The stability level of the parent element.
--->
-
-<!ELEMENT stability EMPTY>
-
-<!ATTLIST stability
-	value		( Standard | Stable | Evolving | Unstable |
-			External | Obsolete ) #REQUIRED >
-
-<!-- Property value lists -->
-
-<!--
-  value_node
-
-    This element represents a single value within any of the typed
-    property value lists.
-
-    Its attribute is
-
-	value	The value for this node in the list.
--->
-
-<!ELEMENT value_node EMPTY>
-
-<!ATTLIST value_node
-	value CDATA #REQUIRED>
-
-<!--
-  count_list
-  integer_list
-  opaque_list
-  host_list
-  hostname_list
-  net_address_list
-  net_address_v4_list
-  net_address_v6_list
-  time_list
-  astring_list
-  ustring_list
-  boolean_list
-  fmri_list
-  uri_list
-
-    These elements represent the typed lists of values for a property.
-    Each contains one or more value_node elements representing each
-    value on the list.
-
-    None of these elements has attributes.
--->
-
-<!ELEMENT count_list
-	( value_node+ )>
-
-<!ATTLIST count_list>
-
-<!ELEMENT integer_list
-	( value_node+ )>
-
-<!ATTLIST integer_list>
-
-<!ELEMENT opaque_list
-	( value_node+ )>
-
-<!ATTLIST opaque_list>
-
-<!ELEMENT host_list
-	( value_node+ )>
-
-<!ATTLIST host_list>
-
-<!ELEMENT hostname_list
-	( value_node+ )>
-
-<!ATTLIST hostname_list>
-
-<!ELEMENT net_address_list
-	( value_node+ )>
-
-<!ATTLIST net_address_list>
-
-<!ELEMENT net_address_v4_list
-	( value_node+ )>
-
-<!ATTLIST net_address_v4_list>
-
-<!ELEMENT net_address_v6_list
-	( value_node+ )>
-
-<!ATTLIST net_address_v6_list>
-
-<!ELEMENT time_list
-	( value_node+ )>
-
-<!ATTLIST time_list>
-
-<!ELEMENT astring_list
-	( value_node+ )>
-
-<!ATTLIST astring_list>
-
-<!ELEMENT ustring_list
-	( value_node+ )>
-
-<!ATTLIST ustring_list>
-
-<!ELEMENT boolean_list
-	( value_node+ )>
-
-<!ATTLIST boolean_list>
-
-<!ELEMENT fmri_list
-	( value_node+ )>
-
-<!ATTLIST fmri_list>
-
-<!ELEMENT uri_list
-	( value_node+ )>
-
-<!ATTLIST uri_list>
-
-<!-- Properties and property groups -->
-
-<!--
-   property
-
-     This element is for a singly or multiply valued property within a
-     property group.  It contains an appropriate value list element,
-     which is expected to be consistent with the type attribute.
-
-     Its attributes are
-
-	name	The name of this property.
-
-	type	The data type for this property.
-
-	override These values should replace values already in the
-		repository.
--->
-
-<![%profile;[
-<!ELEMENT property
-	( count_list | integer_list | opaque_list | host_list | hostname_list |
-	net_address_list | net_address_v4_list | net_address_v6_list |
-	time_list | astring_list | ustring_list | boolean_list | fmri_list |
-	uri_list )? >
-
-<!ATTLIST property
-	name		CDATA #REQUIRED
-	type		( count | integer | opaque | host | hostname |
-			net_address | net_address_v4 | net_address_v6 | time |
-			astring | ustring | boolean | fmri | uri ) #IMPLIED
-	override	( true | false ) "false" >
-]]>
-	
-<![%manifest;[
-<!ELEMENT property
-	( count_list | integer_list | opaque_list | host_list | hostname_list |
-	net_address_list | net_address_v4_list | net_address_v6_list |
-	time_list | astring_list | ustring_list | boolean_list | fmri_list |
-	uri_list )? >
-
-<!ATTLIST property
-	name		CDATA #REQUIRED
-	type		( count | integer | opaque | host | hostname |
-			net_address | net_address_v4 | net_address_v6 | time |
-			astring | ustring | boolean | fmri | uri ) #REQUIRED
-	override	( true | false ) "false" >
-]]>
-
-<!--
-   propval
-
-     This element is for a singly valued property within a property
-     group.  List-valued properties must use the property element above.
-
-     Its attributes are
-
-	name	The name of this property.
-
-	type	The data type for this property.
-
-	value	The value for this property.  Must match type
-		restriction of type attribute.
-
-	override This value should replace any values already in the
-		repository.
--->
-
-<![%profile;[
-<!ELEMENT propval EMPTY>
-
-<!ATTLIST propval
-	name		CDATA #REQUIRED
-	type		( count | integer | opaque | host | hostname |
-			net_address | net_address_v4 | net_address_v6 | time |
-			astring | ustring | boolean | fmri | uri ) #IMPLIED
-	value		CDATA #REQUIRED
-	override	( true | false ) "false" >
-]]>
-
-<![%manifest;[
-<!ELEMENT propval EMPTY>
-
-<!ATTLIST propval
-	name		CDATA #REQUIRED
-	type		( count | integer | opaque | host | hostname |
-			net_address | net_address_v4 | net_address_v6 | time |
-			astring | ustring | boolean | fmri | uri ) #REQUIRED
-	value		CDATA #REQUIRED
-	override	( true | false ) "false" >
-]]>
-
-<!--
-  property_group
-
-    This element is for a set of related properties on a service or
-    instance.  It contains an optional stability element, as well as
-    zero or more property-containing elements.
-
-    Its attributes are
-
-	name	The name of this property group.
-
-	type	A category for this property group.  Groups of type
-		"framework", "implementation" or "template" are primarily
-		of interest to the service management facility, while
-		groups of type "application" are expected to be only of
-		interest to the service to which this group is attached.
-		Other types may be introduced using the service symbol
-		namespace conventions.
-
-	delete	If in the repository, this property group should be removed.
--->
-
-<![%profile;[
-<!ELEMENT property_group
-	( stability?, ( propval | property )* )>
-
-<!ATTLIST property_group
-	name		CDATA #REQUIRED
-	type		CDATA #IMPLIED
-	delete		( true | false ) "false" >
-]]>
-
-<![%manifest;[
-<!ELEMENT property_group
-	( stability?, ( propval | property )* )>
-
-<!ATTLIST property_group
-	name		CDATA #REQUIRED
-	type		CDATA #REQUIRED
-	delete		( true | false ) "false" >
-]]>
-
-<!--
-  service_fmri
-
-    This element defines a reference to a service FMRI (for either a
-    service or an instance).
-
-    Its attribute is
-
-	value	The FMRI.
--->
-
-<!ELEMENT service_fmri EMPTY>
-
-<!ATTLIST service_fmri
-	value		CDATA #REQUIRED>
-
-<!-- Dependencies -->
-
-<!--
-  dependency
-
-    This element identifies a group of FMRIs upon which the service is
-    in some sense dependent.  Its interpretation is left to the
-    restarter to which a particular service instance is delegated.  It
-    contains a group of service FMRIs, as well as a block of properties.
-
-    Its attributes are
-
-	name	The name of this dependency.
-
-	grouping The relationship between the various FMRIs grouped
-		here; "require_all" of the FMRIs to be online, "require_any"
-		of the FMRIs to be online, or "exclude_all" of the FMRIs
-		from being online or in maintenance for the dependency to
-		be satisfied.  "optional_all" dependencies are satisfied
-		when all of the FMRIs are either online or unable to come
-		online (because they are disabled, misconfigured, or one
-		of their dependencies is unable to come online).
-
-	restart_on The type of events from the FMRIs that the service should
-		be restarted for.  "error" restarts the service if the
-		dependency is restarted due to hardware fault.  "restart"
-		restarts the service if the dependency is restarted for
-		any reason, including hardware fault.  "refresh" restarts
-		the service if the dependency is refreshed or restarted for
-		any reason.  "none" will never restart the service due to
-		dependency state changes.
-
-	type	The type of dependency: on another service ('service'), on
-		a filesystem path ('path'), or another dependency type.
-
-	delete	This dependency should be deleted.
--->
-
-<!ELEMENT dependency
-	( service_fmri*, stability?, ( propval | property )* ) >
-
-<!ATTLIST dependency
-	name		CDATA #REQUIRED
-	grouping	( require_all | require_any | exclude_all |
-			optional_all ) #REQUIRED
-	restart_on	( error | restart | refresh | none ) #REQUIRED
-	type		CDATA #REQUIRED
-	delete		( true | false ) "false" >
-
-<!-- Dependents -->
-
-<!--
-  dependent
-
-    This element identifies a service which should depend on this service.  It
-    corresponds to a dependency in the named service.  The grouping and type
-    attributes of that dependency are implied to be "require_all" and
-    "service", respectively.
-
-    Its attributes are
-
-	name	The name of the dependency property group to create in the
-		dependent entity.
-
-	grouping The grouping relationship of the dependency property
-		group to create in the dependent entity.  See "grouping"
-		attribute on the dependency element.
-
-	restart_on The type of events from this service that the named service
-		should be restarted for.
-
-	delete	True if this dependent should be deleted.
-
-	override Whether to replace an existing dependent of the same name.
-
--->
-
-<!ELEMENT dependent
-	( service_fmri, stability?, ( propval | property )* ) >
-
-<!ATTLIST dependent
-	name		CDATA #REQUIRED
-	grouping	( require_all | require_any | exclude_all |
-			optional_all) #REQUIRED
-	restart_on	( error | restart | refresh | none) #REQUIRED
-	delete		( true | false ) "false"
-	override	( true | false ) "false" >
-
-<!-- Method execution context, security profile, and credential definitions -->
-
-<!--
-  envvar
-
-    An environment variable. It has two attributes:
-
-	name	The name of the environment variable.
-	value	The value of the environment variable.
--->
-
-<!ELEMENT envvar EMPTY>
-
-<!ATTLIST envvar
-	name		CDATA #REQUIRED
-	value		CDATA #REQUIRED >
-
-<!--
-  method_environment
-
-    This element defines the environment for a method. It has no
-    attributes, and one or more envvar child elements.
--->
-
-<!ELEMENT method_environment (envvar+) >
-
-<!ATTLIST method_environment>
-
-<!--
-  method_profile
-
-    This element indicates which exec_attr(5) profile applies to the
-    method context being defined.
-
-    Its attribute is
-
-	name	The name of the profile.
--->
-
-<!ELEMENT method_profile EMPTY>
-
-<!ATTLIST method_profile
-	name		CDATA #REQUIRED >
-
-<!--
-  method_credential
-
-    This element specifies credential attributes for the execution
-    method to use.
-
-    Its attributes are
-
-	user	The user ID, in numeric or text form.
-
-	group	The group ID, in numeric or text form.  If absent or
-		":default", the group associated with the user in the
-		passwd database.
-
-	supp_groups Supplementary group IDs to be associated with the
-		method, separated by commas or spaces.  If absent or
-		":default", initgroups(3C) will be used.
-
-	privileges An optional string specifying the privilege set.
-
-	limit_privileges An optional string specifying the limit
-		privilege set.
--->
-
-<!ELEMENT method_credential EMPTY>
-
-<!ATTLIST method_credential
-	user		CDATA #REQUIRED
-	group		CDATA #IMPLIED
-	supp_groups	CDATA #IMPLIED
-	privileges	CDATA #IMPLIED
-	limit_privileges CDATA #IMPLIED >
-
-<!--
-  method_context
-
-    This element combines credential and resource management attributes
-    for execution methods.  It may contain a method_environment, or
-    a method_profile or method_credential element.
-
-    Its attributes are
-
-	working_directory The home directory to launch the method from.
-		":default" can be used as a token to indicate use of the
-		user specified by the credential or profile specified.
-
-	project	The project ID, in numeric or text form.  ":default" can
-		be used as a token to indicate use of the project
-		identified by getdefaultproj(3PROJECT) for the non-root
-		user specified by the credential or profile specified.
-		If the user is root, ":default" designates the project
-		the restarter is running in.
-
-	resource_pool The resource pool name to launch the method on.
-		":default" can be used as a token to indicate use of the
-		pool specified in the project(4) entry given in the
-		"project" attribute above.
--->
-<!ELEMENT method_context
-	( (method_profile | method_credential)?, method_environment? ) >
-
-<!ATTLIST method_context
-	working_directory	CDATA #IMPLIED
-	project			CDATA #IMPLIED
-	resource_pool		CDATA #IMPLIED >
-
-<!-- Restarter delegation, methods, and monitors -->
-
-<!--
-  exec_method
-
-    This element describes one of the methods used by the designated
-    restarter to act on the service instance.  Its interpretation is
-    left to the restarter to which a particular service instance is
-    delegated.  It contains a set of attributes, an optional method
-    context, and an optional stability element for the optional
-    properties that can be included.
-
-    Its attributes are
-
-	type	The type of method, either "method" or "monitor".
-
-	name	Name of this execution method.  The method names are
-		usually a defined interface of the restarter to which an
-		instance of this service is delegated.
-
-	exec	The string identifying the action to take.  For
-		svc.startd(1M), this is a string suitable to pass to
-		exec(2).
-
-	timeout_seconds [integer] Duration, in seconds, to wait for this
-		method to complete.  A '0' or '-1' denotes an infinite
-		timeout.
-
-	delete	If in the repository, the property group for this method
-		should be removed.
--->
-
-<!ELEMENT exec_method
-	( method_context?, stability?, ( propval | property )* ) >
-
-<!ATTLIST exec_method
-	type		( method | monitor ) #REQUIRED
-	name		CDATA #REQUIRED
-	exec		CDATA #REQUIRED
-	timeout_seconds	CDATA #REQUIRED
-	delete		( true | false ) "false" >
-
-<!--
-  restarter
-
-    A flag element identifying the restarter to which this service or
-    service instance is delegated.  Contains the FMRI naming the
-    delegated restarter.
-
-    This element has no attributes.
--->
-
-<!ELEMENT restarter
-	( service_fmri ) >
-
-<!ATTLIST restarter>
-
-<!--
-  Templates
--->
-
-<!--
-  doc_link
-
-    The doc_link relates a resource described by the given URI to the
-    service described by the containing template.  The resource is
-    expected to be a documentation or elucidatory reference of some
-    kind.
-
-    Its attributes are
-
-      name      A label for this resource.
-
-      uri       A URI to the resource.
--->
-
-<!ELEMENT doc_link EMPTY>
-
-<!ATTLIST doc_link
-	name		CDATA #REQUIRED
-	uri		CDATA #REQUIRED >
-
-<!--
-  manpage
-
-    The manpage element connects the reference manual page to the
-    template's service.
-
-    Its attributes are
-
-      title     The manual page title.
-
-      section   The manual page's section.
-
-      manpath   The MANPATH environment variable, as described in man(1)
-                that is required to reach the named manual page
--->
-
-<!ELEMENT manpage EMPTY>
-
-<!ATTLIST manpage
-	title		CDATA #REQUIRED
-	section		CDATA #REQUIRED
-	manpath		CDATA ":default" >
-
-<!--
-  documentation
-
-    The documentation element groups an arbitrary number of doc_link
-    and manpage references.
-
-    It has no attributes.
--->
-
-<!ELEMENT documentation
-	( doc_link | manpage )* >
-
-<!ATTLIST documentation>
-
-<!--
-  loctext
-
-    The loctext element is a container for localized text.
-
-    Its sole attribute is
-
-	xml:lang The name of the locale, in the form accepted by LC_ALL,
-		etc.  See locale(5).
--->
-<!ELEMENT loctext
-        (#PCDATA) >
-
-<!ATTLIST loctext
-        xml:lang	CDATA #REQUIRED >
-
-<!--
-  description
-
-    The description holds a set of potentially longer, localized strings that
-    consist of a short description of the service.
-
-    The description has no attributes.
--->
-<!ELEMENT description
-        ( loctext+ ) >
-
-<!ATTLIST description>
-
-<!--
-  common_name
-
-    The common_name holds a set of short, localized strings that
-    represent a well-known name for the service in the given locale.
-
-    The common_name has no attributes.
--->
-<!ELEMENT common_name
-        ( loctext+ ) >
-
-<!ATTLIST common_name>
-
-<!--
-  units
-
-    The units a numerical property is expressed in.
--->
-
-<!ELEMENT units
-	( loctext+ ) >
-
-<!ATTLIST units>
-
-<!--
-  visibility
-
-    Expresses how a property is typically accessed.  This isn't
-    intended as access control, but as an indicator as to how a
-    property is used.
-
-    Its attributes are:
-
-      value     'hidden', 'readonly', or 'readwrite' indicating that
-		the property should be hidden from the user, shown but
-		read-only, or modifiable.
--->
-
-<!ELEMENT visibility EMPTY>
-
-<!ATTLIST visibility
-	value	( hidden | readonly | readwrite ) #REQUIRED >
-
-<!--
-  value
-
-    Describes a legal value for a property value, and optionally contains a
-    human-readable name and description for the specified property
-    value.
-
-    Its attributes are:
-
-      name	A string representation of the value.
--->
-
-<!ELEMENT value
-	( common_name?, description? ) >
-
-<!ATTLIST value
-	name	CDATA #REQUIRED >
-
-<!--
-  values
-
-    Human-readable names and descriptions for valid values of a property.
--->
-
-<!ELEMENT values
-	(value+) >
-
-<!ATTLIST values>
-
-<!--
-  cardinality
-
-    Places a constraint on the number of values the property can take
-    on.
-
-    Its attributes are:
-	min	minimum number of values
-	max	maximum number of values
-
-    Both attributes are optional.  If min is not specified, it defaults to
-    0.  If max is not specified it indicates an unlimited number of values.
-    If neither is specified this indicates 0 or more values.
--->
-
-<!ELEMENT cardinality EMPTY>
-
-<!ATTLIST cardinality
-	min	CDATA "0"
-	max	CDATA "18446744073709551615">
-
-<!--
-  internal_separators
-
-    Indicates the separators used within a property's value used to
-    separate the actual values.  Used in situations where multiple
-    values are packed into a single property value instead of using a
-    multi-valued property.
--->
-
-<!ELEMENT internal_separators
-	(#PCDATA) >
-
-<!ATTLIST internal_separators>
-
-<!--
-  range
-
-    Indicates a range of possible integer values.
-
-    Its attributes are:
-
-      min	The minimum value of the range (inclusive).
-      max	The maximum value of the range (inclusive).
--->
-
-<!ELEMENT range EMPTY>
-
-<!ATTLIST range
-	min	CDATA #REQUIRED
-	max	CDATA #REQUIRED >
-
-<!--
-  constraints
-
-    Provides a set of constraints on the values a property can take on.
--->
-
-<!ELEMENT constraints
-	( value*, range* ) >
-<!ATTLIST constraints>
-
-<!--
-  include_values
-
-    Includes an entire set of values in the choices block.
-
-    Its attributes are:
-
-	type    Either "constraints" or "values", indicating an
-		inclusion of all values allowed by the property's
-		constraints or all values for which there are
-		human-readable names and descriptions, respectively.
--->
-
-<!ELEMENT include_values EMPTY>
-
-<!ATTLIST include_values
-	type	( constraints | values ) #REQUIRED >
-
-<!--
-  choices
-
-    Provides a set of common choices for the values a property can take
-    on.  Useful in those cases where the possibilities are unenumerable
-    or merely inconveniently legion, and a manageable subset is desired
-    for presentation in a user interface.
--->
-
-<!ELEMENT choices
-	( value*, range*, include_values* ) >
-
-<!ATTLIST choices>
-
-<!--
-  prop_pattern
-
-
-    The prop_pattern describes one property of the enclosing property group
-    pattern.
-
-    Its attributes are:
-
-	name    The property's name.
-	type    The property's type.
-	required
-		If the property group is present, this property is required.
-
-	type can be omitted if required is false.
--->
-
-<!ELEMENT prop_pattern
-	( common_name?, description?, units?, visibility?, cardinality?,
-	  internal_separators?, values?, constraints?, choices? ) >
-
-<!ATTLIST prop_pattern
-	name		CDATA	#REQUIRED
-	type		( count | integer | opaque | host | hostname |
-			net_address | net_address_v4 | net_address_v6 | time |
-			astring | ustring | boolean | fmri | uri ) #IMPLIED
-	required	( true | false )	"false" >
-
-<!--
-  pg_pattern
-
-    The pg_pattern describes one property group.
-    Depending on the element's attributes, these descriptions may apply
-    to just the enclosing service/instance, instances of the enclosing
-    service, delegates of the service (assuming it is a restarter), or
-    all services.
-
-    Its attributes are:
-
-	name    The property group's name.  If not specified, it
-		matches all property groups with the specified type.
-	type    The property group's type.  If not specified, it
-		matches all property groups with the specified name.
-	required
-		If the property group is required.
-	target	The scope of the pattern, which may be all, delegate,
-		instance, or this.  'all' is reserved for framework use
-		and applies the template to all services on the system.
-		'delegate' is reserved for restarters, and means the
-		template applies to all services which use the restarter.
-		'this' would refer to the defining service or instance.
-		'instance' can only be used in a service's template block,
-		and means the definition applies to all instances of this
-		service.
-
--->
-
-<!ELEMENT pg_pattern
-	( common_name?, description?, prop_pattern* ) >
-
-<!ATTLIST pg_pattern
-	name		CDATA	""
-	type		CDATA	""
-	required	( true | false )	"false"
-	target		( this | instance | delegate | all )	"this" >
-
-<!--
-  template
-
-    The template contains a collection of metadata about the service.
-    It contains a localizable string that serves as a common,
-    human-readable name for the service.  (This name should be less than
-    60 characters in a single byte locale.)  The template may optionally
-    contain a longer localizable description of the service, a
-    collection of links to documentation, either in the form of manual
-    pages or in the form of URI specifications to external documentation
-    sources (such as docs.sun.com).
-
-    The template has no attributes.
--->
-<!ELEMENT template
-        ( common_name, description?, documentation?, pg_pattern* ) >
-
-<!ATTLIST template>
-
-<!-- Notification Parameters -->
-
-<!ELEMENT paramval EMPTY>
-
-<!ATTLIST paramval
-	name		CDATA #REQUIRED
-	value		CDATA #REQUIRED>
-
-<!ELEMENT parameter
-	( value_node* )>
-
-<!ATTLIST parameter
-	name		CDATA #REQUIRED>
-
-<!ELEMENT event EMPTY>
-
-<!ATTLIST event
-	value		CDATA #REQUIRED>
-
-<!ELEMENT type
-	( ( parameter | paramval )* )>
-
-<!ATTLIST type
-	name		CDATA #REQUIRED
-	active		( true | false ) "true" >
-
-<!--
-  notification parameters
-
-    This element sets the notification parameters for Software Events and
-    Fault Management problem lifecycle events.
--->
-
-<!ELEMENT notification_parameters
-	( event, type+ )>
-
-<!ATTLIST notification_parameters>
-
-<!-- Services and instances -->
-
-<!--
-  create_default_instance
-
-    A flag element indicating that an otherwise empty default instance
-    of this service (named "default") should be created at install, with
-    its enabled property set as given.
-
-    Its attribute is
-
-	enabled	[boolean] The initial value for the enabled state of
-		this instance.
--->
-
-<!ELEMENT create_default_instance EMPTY >
-
-<!ATTLIST create_default_instance
-	enabled		( true | false ) #REQUIRED >
-
-<!--
-  single_instance
-
-    A flag element stating that this service can only have a single
-    instance on a particular system.
--->
-
-<!ELEMENT single_instance EMPTY>
-
-<!ATTLIST single_instance>
-
-<!--
-  instance
-
-    The service instance is the object representing a software component
-    that will run on the system if enabled.  It contains an enabled
-    element, a set of dependencies on other services, potentially
-    customized methods or configuration data, an optional method
-    context, and a pointer to its restarter.  (If no restarter is
-    specified, the master restarter, svc.startd(1M), is assumed to be
-    responsible for the service.)
-
-    Its attributes are
-
-	name	The canonical name for this instance of the service.
-
-	enabled	[boolean] The initial value for the enabled state of
-		this instance.
--->
-
-<!ELEMENT instance
-	( restarter?, dependency*, dependent*, method_context?,
-	exec_method*, notification_parameters*, property_group*,
-	template? ) >
-
-<!ATTLIST instance
-	name		CDATA #REQUIRED
-	enabled		( true | false ) #REQUIRED >
-
-<!--
-  service
-
-    The service contains the set of instances defined by default for
-    this service, an optional method execution context, any default
-    methods, the template, and various restrictions or advice applicable
-    at installation.  The method execution context and template elements
-    are required for service_bundle documents with type "manifest", but
-    are optional for "profile" or "archive" documents.
-
-    Its attributes are
-
-	name	The canonical name for the service.
-
-	version	[integer] The integer version for this service.
-
-	type	Whether this service is a simple service, a delegated
-		restarter, or a milestone (a synthetic service that
-		collects a group of dependencies).
--->
-
-<!ELEMENT service
-	( create_default_instance?, single_instance?, restarter?,
-	dependency*, dependent*, method_context?, exec_method*,
-	notification_parameters*, property_group*, instance*,
-	stability?, template? ) >
-
-<!ATTLIST service
-	name		CDATA #REQUIRED
-	version		CDATA #REQUIRED
-	type		( service | restarter | milestone ) #REQUIRED >
-
-<!--
-  service_bundle
-
-    The bundle possesses two attributes:
-
-	type	How this file is to be understood by the framework (or
-		used in a non-framework compliant way). Standard types
-		are 'archive', 'manifest', and 'profile'.
-	
-	name	A name for the bundle.  Manifests should be named after
-		the package which delivered them; profiles should be
-		named after the "feature set nickname" they intend to
-		enable.
--->
-
-<!ELEMENT service_bundle
-	( service_bundle* | service* | xi:include* )>
-
-<!ATTLIST service_bundle
-	type		CDATA #REQUIRED
-	name		CDATA #REQUIRED>
-- 
2.21.0

