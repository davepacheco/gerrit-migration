From 2e0f244662d1b778c2569ddd2ce3bcaa53f70492 Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Fri, 14 Jun 2019 20:40:37 +0000
Subject: [PATCH] joyent/bugview#34 add "People" and "Details" sections to
 issue display Reviewed by: Cody Peter Mello <cody.mello@joyent.com> Approved
 by: Cody Peter Mello <cody.mello@joyent.com>

---
 jirapub.js | 88 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 88 insertions(+)

diff --git a/jirapub.js b/jirapub.js
index 6155efc..d008663 100644
--- a/jirapub.js
+++ b/jirapub.js
@@ -1064,6 +1064,65 @@ format_issue(opts, callback)
 	} ], callback);
 }
 
+/*
+ * Accepts "heading", a string to be used as a level two heading; and "table",
+ * an array of objects with a "name" and "value" property.  Returns either an
+ * empty string (if "table" contains no entries), or a heading and HTML table
+ * with a name (in bold) and a value cell on each row.
+ */
+function
+render_table(heading, table)
+{
+	mod_assert.string(heading, 'heading');
+	mod_assert.arrayOfObject(table, 'table');
+
+	if (table.length === 0) {
+		return ('');
+	}
+
+	var out = [
+		'<h2>' + heading + '</h2>',
+		'<table>'
+	];
+
+	table.forEach(function (row) {
+		out.push('<tr><th><b>' + row.name + '</b></th>' +
+		    '<td>' + row.value + '</td></tr>');
+	});
+
+	out.push('</table>');
+
+	return (out.join('\n') + '\n');
+}
+
+/*
+ * Accepts "issue", an issue from the JIRA backend; "type", the name of a field
+ * (e.g., "creator"); "label", the heading name to use for the table row; and
+ * "rows", a table array for use with render_table().  If we can read the named
+ * field from the table, we'll render it for display and append it to the
+ * table; otherwise, "rows" is unaltered.
+ */
+function
+extract_people_field(issue, type, label, rows)
+{
+	var f;
+
+	if (!(f = issue.fields[type])) {
+		return;
+	}
+
+	var val = null;
+	if (f.displayName) {
+		val = f.displayName;
+	}
+
+	if (val === null || val === '') {
+		return;
+	}
+
+	rows.push({ name: label + ':', value: val });
+}
+
 function
 format_issue_finalise(issue, remotelinks, other_issues)
 {
@@ -1074,6 +1133,35 @@ format_issue_finalise(issue, remotelinks, other_issues)
 	var i;
 	var out = '<h1>' + issue.key + ': ' + issue.fields.summary + '</h1>\n';
 
+	var details = [];
+	if (issue.fields.issuetype && issue.fields.issuetype.name) {
+		details.push({ name: 'Issue Type:',
+		    value: issue.fields.issuetype.name });
+	}
+	if (issue.fields.priority && issue.fields.priority.name) {
+		details.push({ name: 'Priority:',
+		    value: issue.fields.priority.name });
+	}
+	if (issue.fields.status && issue.fields.status.name) {
+		details.push({ name: 'Status:',
+		    value: issue.fields.status.name });
+	}
+	if (issue.fields.created) {
+		details.push({ name: 'Created at:',
+		    value: new Date(issue.fields.created).toISOString() });
+	}
+	if (issue.fields.updated) {
+		details.push({ name: 'Updated at:',
+		    value: new Date(issue.fields.updated).toISOString() });
+	}
+	out += render_table('Details', details);
+
+	var people = [];
+	extract_people_field(issue, 'creator', 'Created by', people);
+	extract_people_field(issue, 'reporter', 'Reported by', people);
+	extract_people_field(issue, 'assignee', 'Assigned to', people);
+	out += render_table('People', people);
+
 	if (issue.fields.resolution) {
 		var rd = new Date(issue.fields.resolutiondate);
 
-- 
2.21.0

