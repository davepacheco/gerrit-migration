From 25bf8a6f7068999ed4c49f30ddc5ef38d2ae7124 Mon Sep 17 00:00:00 2001
From: Julien Gilli <julien.gilli@joyent.com>
Date: Mon, 13 Nov 2017 12:06:43 -0800
Subject: [PATCH] DOCKER-1124 skipped volume tests should output valid tap
 Reviewed by: Josh Wilsdon <josh@wilsdon.ca> Approved by: Josh Wilsdon
 <josh@wilsdon.ca>

---
 ...fs-shared-volume-as-docker-compose.test.js |  4 +-
 .../api-rename-used-nfs-shared-volume.test.js |  4 +-
 ...-volume-created-with-docker-create.test.js | 11 ++---
 ...ared-volumes-create-duplicate-name.test.js | 12 ++---
 ...-nfs-shared-volumes-create-failure.test.js | 14 ++----
 ...cli-nfs-shared-volumes-create-size.test.js | 12 ++---
 ...i-nfs-shared-volumes-delete-in-use.test.js | 12 ++---
 .../cli-nfs-shared-volumes-disabled.test.js   | 19 ++-----
 .../cli-nfs-shared-volumes-docker-880.test.js | 13 ++---
 ...nfs-shared-volumes-filter-dangling.test.js | 12 ++---
 ...lumes-mount-overrides-local-volume.test.js | 11 ++---
 ...i-nfs-shared-volumes-mounting-mode.test.js | 13 ++---
 .../cli-nfs-shared-volumes-networks.test.js   | 11 ++---
 .../cli-nfs-shared-volumes.test.js            | 11 ++---
 test/lib/volumes.js                           | 49 +++++++++++++------
 15 files changed, 91 insertions(+), 117 deletions(-)

diff --git a/test/integration/api-mount-nfs-shared-volume-as-docker-compose.test.js b/test/integration/api-mount-nfs-shared-volume-as-docker-compose.test.js
index b24de95..e39a3e7 100644
--- a/test/integration/api-mount-nfs-shared-volume-as-docker-compose.test.js
+++ b/test/integration/api-mount-nfs-shared-volume-as-docker-compose.test.js
@@ -27,7 +27,9 @@ var dockerTestHelpers = require('./helpers');
 var mod_testVolumes = require('../lib/volumes');
 var volumesApi = require('../lib/volumes-api');
 
-var test = mod_testVolumes.testIfEnabled;
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true
+});
 
 var ALICE_ACCOUNT;
 var ALICE_DOCKER_API_CLIENT;
diff --git a/test/integration/api-rename-used-nfs-shared-volume.test.js b/test/integration/api-rename-used-nfs-shared-volume.test.js
index 470ae31..ceac9f6 100644
--- a/test/integration/api-rename-used-nfs-shared-volume.test.js
+++ b/test/integration/api-rename-used-nfs-shared-volume.test.js
@@ -20,7 +20,9 @@ var dockerTestHelpers = require('./helpers');
 var mod_testVolumes = require('../lib/volumes');
 var volumesApi = require('../lib/volumes-api');
 
-var test = mod_testVolumes.testIfEnabled;
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true
+});
 
 var ALICE_ACCOUNT;
 var ALICE_DOCKER_API_CLIENT;
diff --git a/test/integration/cli-mount-nfs-volume-created-with-docker-create.test.js b/test/integration/cli-mount-nfs-volume-created-with-docker-create.test.js
index 93d8ecf..d49f764 100644
--- a/test/integration/cli-mount-nfs-volume-created-with-docker-create.test.js
+++ b/test/integration/cli-mount-nfs-volume-created-with-docker-create.test.js
@@ -16,13 +16,10 @@ var common = require('../lib/common');
 var testVolumes = require('../lib/volumes');
 var volumesCli = require('../lib/volumes-cli');
 
-if (!testVolumes.dockerClientSupportsVolumes(process.env.DOCKER_CLI_VERSION)) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
-var test = testVolumes.testIfEnabled;
+var test = testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUME_NAMES_PREFIX =
     testVolumes.getNfsSharedVolumesNamePrefix();
diff --git a/test/integration/cli-nfs-shared-volumes-create-duplicate-name.test.js b/test/integration/cli-nfs-shared-volumes-create-duplicate-name.test.js
index 711495e..2bffff4 100644
--- a/test/integration/cli-nfs-shared-volumes-create-duplicate-name.test.js
+++ b/test/integration/cli-nfs-shared-volumes-create-duplicate-name.test.js
@@ -16,15 +16,11 @@ var log = require('../lib/log');
 var mod_testVolumes = require('../lib/volumes');
 var volumesCli = require('../lib/volumes-cli');
 
-var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
-if (dockerVersion.major < 1 || dockerVersion.minor < 9) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
 var createTestVolume = mod_testVolumes.createTestVolume;
-var test = mod_testVolumes.testIfEnabled;
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUME_NAMES_PREFIX =
     mod_testVolumes.getNfsSharedVolumesNamePrefix();
diff --git a/test/integration/cli-nfs-shared-volumes-create-failure.test.js b/test/integration/cli-nfs-shared-volumes-create-failure.test.js
index e776dd4..25585a8 100644
--- a/test/integration/cli-nfs-shared-volumes-create-failure.test.js
+++ b/test/integration/cli-nfs-shared-volumes-create-failure.test.js
@@ -31,17 +31,11 @@ var cli = require('../lib/cli');
 var h = require('./helpers');
 var volumesCli = require('../lib/volumes-cli');
 
-assert.string(process.env.DOCKER_CLI_VERSION, 'process.env.DOCKER_CLI_VERSION');
-
-var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
-if (dockerVersion.major < 1 || dockerVersion.minor < 9) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
 var createTestVolume = mod_testVolumes.createTestVolume;
-var test = mod_testVolumes.testIfEnabled;
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUME_NAMES_PREFIX =
     mod_testVolumes.getNfsSharedVolumesNamePrefix();
diff --git a/test/integration/cli-nfs-shared-volumes-create-size.test.js b/test/integration/cli-nfs-shared-volumes-create-size.test.js
index 02a8107..4d83dde 100644
--- a/test/integration/cli-nfs-shared-volumes-create-size.test.js
+++ b/test/integration/cli-nfs-shared-volumes-create-size.test.js
@@ -18,15 +18,11 @@ var log = require('../lib/log');
 var mod_testVolumes = require('../lib/volumes');
 var volumesCli = require('../lib/volumes-cli');
 
-var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
-if (dockerVersion.major < 1 || dockerVersion.minor < 9) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
 var createTestVolume = mod_testVolumes.createTestVolume;
-var test = mod_testVolumes.testIfEnabled;
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var ALICE_USER;
 var MIBS_IN_GIB = 1024;
diff --git a/test/integration/cli-nfs-shared-volumes-delete-in-use.test.js b/test/integration/cli-nfs-shared-volumes-delete-in-use.test.js
index 6ead85e..d01ecbd 100644
--- a/test/integration/cli-nfs-shared-volumes-delete-in-use.test.js
+++ b/test/integration/cli-nfs-shared-volumes-delete-in-use.test.js
@@ -16,15 +16,11 @@ var log = require('../lib/log');
 var mod_testVolumes = require('../lib/volumes');
 var mod_testVolumesCli = require('../lib/volumes-cli');
 
-var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
-if (dockerVersion.major < 1 || dockerVersion.minor < 9) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
 var createTestVolume = mod_testVolumesCli.createTestVolume;
-var test = mod_testVolumes.testIfEnabled;
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUMES_DRIVER_NAME =
     mod_testVolumes.getNfsSharedVolumesDriverName();
diff --git a/test/integration/cli-nfs-shared-volumes-disabled.test.js b/test/integration/cli-nfs-shared-volumes-disabled.test.js
index 7b5d513..7c39ef4 100644
--- a/test/integration/cli-nfs-shared-volumes-disabled.test.js
+++ b/test/integration/cli-nfs-shared-volumes-disabled.test.js
@@ -13,7 +13,6 @@
  */
 
 var restify = require('restify');
-var test = require('tape');
 var vasync = require('vasync');
 
 var cli = require('../lib/cli');
@@ -21,17 +20,15 @@ var common = require('../lib/common');
 var testVolumes = require('../lib/volumes');
 var volumesCli = require('../lib/volumes-cli');
 
-if (!testVolumes.dockerClientSupportsVolumes(process.env.DOCKER_CLI_VERSION)) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
+var disabled_nfs_volumes = false;
 
 var errorMeansNFSSharedVolumeSupportDisabled =
     testVolumes.errorMeansNFSSharedVolumeSupportDisabled;
-var nfsSharedVolumesSupported = testVolumes.nfsSharedVolumesSupported;
 
-var disabled_nfs_volumes = false;
+var test = testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var ALICE_USER;
 var NFS_SHARED_VOLUME_NAMES_PREFIX =
@@ -111,12 +108,6 @@ test('setup', function (tt) {
         });
     });
 
-    if (!nfsSharedVolumesSupported()) {
-        tt.ok(true, 'NFS volumes are already disabled, no need to do anything');
-        tt.end();
-        return;
-    }
-
     tt.test('disable NFS volumes', function (t) {
         t.ok(process.env.SAPI_URL, 'have SAPI_URL ('
             + JSON.stringify(process.env.SAPI_URL) + ')');
diff --git a/test/integration/cli-nfs-shared-volumes-docker-880.test.js b/test/integration/cli-nfs-shared-volumes-docker-880.test.js
index 4248c0e..17407f7 100644
--- a/test/integration/cli-nfs-shared-volumes-docker-880.test.js
+++ b/test/integration/cli-nfs-shared-volumes-docker-880.test.js
@@ -36,16 +36,11 @@ var log = require('../lib/log');
 var mod_testVolumes = require('../lib/volumes');
 var volumesCli = require('../lib/volumes-cli');
 
-var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
-if (dockerVersion.major < 1 || dockerVersion.minor < 9) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
-var errorMeansNFSSharedVolumeSupportDisabled =
-    mod_testVolumes.errorMeansNFSSharedVolumeSupportDisabled;
-var test = mod_testVolumes.testIfEnabled;
 var VOLAPI_CLIENT = mod_testVolumes.getVolapiClient();
 
 var NFS_SHARED_VOLUMES_DRIVER_NAME =
diff --git a/test/integration/cli-nfs-shared-volumes-filter-dangling.test.js b/test/integration/cli-nfs-shared-volumes-filter-dangling.test.js
index 7e3476e..8d068fa 100644
--- a/test/integration/cli-nfs-shared-volumes-filter-dangling.test.js
+++ b/test/integration/cli-nfs-shared-volumes-filter-dangling.test.js
@@ -16,15 +16,11 @@ var log = require('../lib/log');
 var mod_testVolumes = require('../lib/volumes');
 var mod_testVolumesCli = require('../lib/volumes-cli');
 
-var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
-if (dockerVersion.major < 1 || dockerVersion.minor < 9) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
 var createTestVolume = mod_testVolumesCli.createTestVolume;
-var test = mod_testVolumes.testIfEnabled;
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUMES_DRIVER_NAME =
     mod_testVolumes.getNfsSharedVolumesDriverName();
diff --git a/test/integration/cli-nfs-shared-volumes-mount-overrides-local-volume.test.js b/test/integration/cli-nfs-shared-volumes-mount-overrides-local-volume.test.js
index 5bd7734..4983bf6 100644
--- a/test/integration/cli-nfs-shared-volumes-mount-overrides-local-volume.test.js
+++ b/test/integration/cli-nfs-shared-volumes-mount-overrides-local-volume.test.js
@@ -16,13 +16,10 @@ var common = require('../lib/common');
 var testVolumes = require('../lib/volumes');
 var volumesCli = require('../lib/volumes-cli');
 
-if (!testVolumes.dockerClientSupportsVolumes(process.env.DOCKER_CLI_VERSION)) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
-var test = testVolumes.testIfEnabled;
+var test = testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUME_NAMES_PREFIX =
     testVolumes.getNfsSharedVolumesNamePrefix();
diff --git a/test/integration/cli-nfs-shared-volumes-mounting-mode.test.js b/test/integration/cli-nfs-shared-volumes-mounting-mode.test.js
index 675681e..bd6942f 100644
--- a/test/integration/cli-nfs-shared-volumes-mounting-mode.test.js
+++ b/test/integration/cli-nfs-shared-volumes-mounting-mode.test.js
@@ -27,15 +27,12 @@ var log = require('../lib/log');
 var mod_testVolumes = require('../lib/volumes');
 var volumesCli = require('../lib/volumes-cli');
 
-var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
-if (dockerVersion.major < 1 || dockerVersion.minor < 9) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
 var createTestVolume = mod_testVolumes.createTestVolume;
-var test = mod_testVolumes.testIfEnabled;
+var dockerVersion = common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
+var test = mod_testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 var VOLAPI_CLIENT = mod_testVolumes.getVolapiClient();
 
 var NFS_SHARED_VOLUMES_DRIVER_NAME =
diff --git a/test/integration/cli-nfs-shared-volumes-networks.test.js b/test/integration/cli-nfs-shared-volumes-networks.test.js
index 0980e21..05c9df7 100644
--- a/test/integration/cli-nfs-shared-volumes-networks.test.js
+++ b/test/integration/cli-nfs-shared-volumes-networks.test.js
@@ -21,13 +21,10 @@ var testVolumes = require('../lib/volumes');
 var ufds = require('ufds');
 var volumesCli = require('../lib/volumes-cli');
 
-if (!testVolumes.dockerClientSupportsVolumes(process.env.DOCKER_CLI_VERSION)) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
-var test = testVolumes.testIfEnabled;
+var test = testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUME_NAMES_PREFIX =
     testVolumes.getNfsSharedVolumesNamePrefix();
diff --git a/test/integration/cli-nfs-shared-volumes.test.js b/test/integration/cli-nfs-shared-volumes.test.js
index 488cf80..bdad3e8 100644
--- a/test/integration/cli-nfs-shared-volumes.test.js
+++ b/test/integration/cli-nfs-shared-volumes.test.js
@@ -21,13 +21,10 @@ var volumesCli = require('../lib/volumes-cli');
 var common = require('../lib/common');
 var testVolumes = require('../lib/volumes');
 
-if (!testVolumes.dockerClientSupportsVolumes(process.env.DOCKER_CLI_VERSION)) {
-    console.log('Skipping volume tests: volumes are not supported in Docker '
-        + 'versions < 1.9');
-    process.exit(0);
-}
-
-var test = testVolumes.testIfEnabled;
+var test = testVolumes.createTestFunc({
+    checkTritonSupportsNfs: true,
+    checkDockerClientSupportsNfsVols: true
+});
 
 var NFS_SHARED_VOLUME_NAMES_PREFIX =
     testVolumes.getNfsSharedVolumesNamePrefix();
diff --git a/test/lib/volumes.js b/test/lib/volumes.js
index b4f9962..f4258f2 100644
--- a/test/lib/volumes.js
+++ b/test/lib/volumes.js
@@ -129,28 +129,49 @@ function getVolapiClient() {
     return VOLAPI_CLIENT;
 }
 
-function testIfNfsVolumesEnabled(testName, testFunc) {
-    assert.string(testName, 'testName');
-    assert.func(testFunc, 'testFunc');
-
-    test(testName, function (t) {
-        if (!nfsSharedVolumesSupported()) {
-            t.ok(true, 'NFS volumes disabled - skipping test');
-            t.end();
-            return;
-        }
-        testFunc(t);
-    });
+function createTestFunc(options) {
+    assert.object(options, 'options');
+    assert.optionalBool(options.checkDockerClientSupportsNfsVols,
+        'options.checkDockerClientSupportsNfsVols');
+    assert.optionalBool(options.checkTritonSupportsNfsVols,
+        'options.checkTritonSupportsNfsVol');
+
+    var dockerClientSupportsVols =
+        process.env.DOCKER_CLI_VERSION !== undefined
+            && dockerClientSupportsVolumes(process.env.DOCKER_CLI_VERSION);
+
+    return function testWrapper(testName, testFunc) {
+        assert.string(testName, 'testName');
+        assert.func(testFunc, 'testFunc');
+
+        test(testName, function (t) {
+            if (options.checkDockerClientSupportsNfsVols
+                && !dockerClientSupportsVols) {
+                t.ok(true,
+                    'Docker client doesn\'t support volumes - skipping test');
+                t.end();
+                return;
+            }
+
+            if (options.checkTritonSupportsNfsVols
+                && !nfsSharedVolumesSupported()) {
+                t.ok(true, 'NFS volumes disabled - skipping test');
+                t.end();
+                return;
+            }
+
+            testFunc(t);
+        });
+    };
 }
 
 module.exports = {
-    dockerClientSupportsVolumes: dockerClientSupportsVolumes,
+    createTestFunc: createTestFunc,
     errorMeansNFSSharedVolumeSupportDisabled:
         errorMeansNFSSharedVolumeSupportDisabled,
     getNfsSharedVolumesNamePrefix: getNfsSharedVolumesNamePrefix,
     getNfsSharedVolumesDriverName: getNfsSharedVolumesDriverName,
     getVolapiClient: getVolapiClient,
     nfsSharedVolumesSupported: nfsSharedVolumesSupported,
-    testIfEnabled: testIfNfsVolumesEnabled,
     validGeneratedVolumeName: validGeneratedVolumeName
 };
-- 
2.21.0

