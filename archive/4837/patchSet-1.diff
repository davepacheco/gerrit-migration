commit 629d590402b9a6d8ca2eca2a583a165b2e0dbbf1 (refs/changes/37/4837/1)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2018-09-13T20:32:16+02:00 (1 year, 1 month ago)
    
    TRITON-769 wf-runner is crashing in metrics calc on jobs that fail with "workflow timeout"

diff --git a/lib/job-runner.js b/lib/job-runner.js
index aa5b478..40abc88 100644
--- a/lib/job-runner.js
+++ b/lib/job-runner.js
@@ -449,7 +449,8 @@ var WorkflowJobRunner = module.exports = function (opts) {
                 if (!failed) {
                     job[chain_results].push({
                         error: 'workflow timeout',
-                        result: ''
+                        result: '',
+                        finished_at: new Date().toISOString()
                     });
                     _updateJobProperty(
                         job.uuid,
@@ -464,7 +465,8 @@ var WorkflowJobRunner = module.exports = function (opts) {
                 } else {
                     job.onerror_results.push({
                         error: 'workflow timeout',
-                        result: ''
+                        result: '',
+                        finished_at: new Date().toISOString()
                     });
                     _updateJobProperty(
                         job.uuid,
diff --git a/lib/runner.js b/lib/runner.js
index ae23c67..915e187 100644
--- a/lib/runner.js
+++ b/lib/runner.js
@@ -147,10 +147,14 @@ var WorkflowRunner = module.exports = function (opts) {
                 if (job.chain_results.length) {
                     var lastTask = job.
                         chain_results[job.chain_results.length - 1];
-                    var endMs = new Date(lastTask.finished_at).getTime();
-                    var startMs = new Date(job.created_at).getTime();
-                    durationSeconds = (endMs - startMs) / 1000;
-                } else {
+                    if (lastTask.finished_at) {
+                        var endMs = new Date(lastTask.finished_at).getTime();
+                        var startMs = new Date(job.created_at).getTime();
+                        durationSeconds = (endMs - startMs) / 1000;
+                    }
+                }
+
+                if (!durationSeconds) {
                     durationSeconds = job.elapsed;
                 }
 
@@ -161,13 +165,14 @@ var WorkflowRunner = module.exports = function (opts) {
             // between tasks
             function calculateOverhead(job) {
                 var jobCreated = new Date(job.created_at).getTime();
-                var firstJobStarted = new Date(job.chain_results[0].started_at)
-                    .getTime();
+                var firstJobStarted = (job.chain_results[0].started_at) ?
+                    new Date(job.chain_results[0].started_at).getTime():
+                    jobCreated;
                 var startOverhead = (firstJobStarted - jobCreated) / 1000;
                 var overheadSeconds = job.chain_results.reduce(
                     function sumOverhead(total, result, idx, chainResults) {
                     var nextTask = chainResults[idx + 1];
-                    if (nextTask) {
+                    if (nextTask && nextTask.started_at) {
                         var nextTaskStartMs = new Date(nextTask.started_at)
                             .getTime();
                         var currentTaskEndMs = new Date(result.finished_at)
