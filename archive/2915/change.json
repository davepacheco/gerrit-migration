{"project":"joyent/sdc-napi","branch":"master","id":"Ifc16bba451baa4c227e3769115c35ce7b0aa6da7","number":"2915","subject":"NAPI-434 Want way to automatically generate available subnets","owner":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"url":"https://cr.joyent.us/2915","commitMessage":"NAPI-434 Want way to automatically generate available subnets\n","createdOn":1510006775,"lastUpdated":1527029932,"open":false,"status":"MERGED","comments":[{"timestamp":1510006775,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 1."},{"timestamp":1510006835,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1510274911,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 1:\n\n(8 comments)"},{"timestamp":1511221549,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 1:\n\n(8 comments)"},{"timestamp":1511821616,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 2."},{"timestamp":1511821641,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing-1\n\n(2 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1511821800,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 3."},{"timestamp":1511821860,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1512177091,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 3:\n\n(15 comments)\n\nThanks for making those changes! I\u0027ve gone through and commented on some additional things.\n\nI think that this change also needs a lot more tests. If you move some of the utility functions into their own file, you can write unit tests for a bunch of them. You should be able to then use the code coverage reports that get produced after running \u0027make test\u0027 to make sure that you\u0027re testing appropriate scenarios."},{"timestamp":1513386405,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 4."},{"timestamp":1513386431,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing-1\n\n(13 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1513634828,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 5."},{"timestamp":1513634887,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1513646521,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 5:\n\n(8 comments)\n\nThere are several things that were missed from the last review. Please fix them and reply with \"Done\" to all of my comments once they\u0027re fixed."},{"timestamp":1513904152,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 6."},{"timestamp":1513904178,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 6: CI-Testing-1\n\n(6 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1513904662,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 7."},{"timestamp":1513904718,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 7: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1514916302,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 7:\n\n(18 comments)\n\nAlso added requested tests, but couldn\u0027t mark the file-wide-gerrit-comment as done."},{"timestamp":1515534915,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 7:\n\n(28 comments)"},{"timestamp":1515635735,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 7:\n\n(24 comments)\n\nApplied most feedback\nNot yet ready for review\nTests are out of whack"},{"timestamp":1515799153,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 8."},{"timestamp":1515799168,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 8:\n\n(5 comments)"},{"timestamp":1515799183,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 8: CI-Testing-1\n\n(12 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1515799775,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 9."},{"timestamp":1515799832,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 9: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1516671322,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 9:\n\n(4 comments)"},{"timestamp":1516751759,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 9:\n\n(4 comments)"},{"timestamp":1516752503,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 10."},{"timestamp":1516752530,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 10: CI-Testing-1\n\n(29 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1516752784,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 11."},{"timestamp":1516752815,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 11: CI-Testing-1\n\n(4 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1516752986,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 12."},{"timestamp":1516753043,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 12: CI-Testing-1\n\n(1 comment)\n\n\"make check\" exited with status 2"},{"timestamp":1516753137,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 13."},{"timestamp":1516753203,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 13: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1519171836,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 14."},{"timestamp":1519171900,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 14: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1519678555,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 13:\n\n(28 comments)"},{"timestamp":1519685959,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 14:\n\n(27 comments)\n\nThanks for taking a look. Should have new code up for CR soon. The biggest change will be some gap-related stuff related to how we will handle an allocation failure and retries as result of a race. You can see some details in the comments I left. Anyway, I\u0027m off to write-out this code."},{"timestamp":1519864944,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 15."},{"timestamp":1520027494,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 15:\n\n(2 comments)"},{"timestamp":1520032785,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 15:\n\n(2 comments)\n\nHey, thanks for the fast response! I\u0027ll fix both of the issues you pointed out."},{"timestamp":1520474201,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 15: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1521505920,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 16."},{"timestamp":1521505983,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 16: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1522181138,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 16:\n\n(13 comments)"},{"timestamp":1522192028,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 16:\n\n(12 comments)\n\nI\u0027ve applied most suggestions, except for the for-loop thing -- see comment. Code will be uploaded shortly."},{"timestamp":1522192385,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 16:\n\nAdditional note: this code will have to be integrated with an enable/disable flag in the SAPI config, so that we can disable autoalloc in production (until NAPI-435 [race-condition code] goes back)."},{"timestamp":1522192440,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 17."},{"timestamp":1522192469,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 17: CI-Testing-1\n\n(3 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1522192629,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 18."},{"timestamp":1522192689,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 18: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523306536,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 19."},{"timestamp":1523306601,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 19: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523306714,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 20: Patch Set 19 was rebased."},{"timestamp":1523306781,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 20: CI-Testing-1\n\n(6 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1523307070,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 21: Commit message was updated."},{"timestamp":1523308154,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 22."},{"timestamp":1523308214,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 22: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523404581,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 22:\n\n(12 comments)\n\nJust some minor things to address."},{"timestamp":1524003906,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 22:\n\n(12 comments)"},{"timestamp":1524009078,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 23."},{"timestamp":1524009138,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 23: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1524261633,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 23: Code-Review+1\n\n(1 comment)"},{"timestamp":1524358459,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 23:\n\n(1 comment)"},{"timestamp":1524358522,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 24."},{"timestamp":1524358584,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 24: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1524499102,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 24: Code-Review+1"},{"timestamp":1524524170,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 25."},{"timestamp":1524524232,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 25: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1525211104,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 26: Patch Set 25 was rebased."},{"timestamp":1525211166,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 26:\n\n\"make check\" passed ok"},{"timestamp":1526331441,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 27: Patch Set 26 was rebased."},{"timestamp":1526331508,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 27:\n\n\"make check\" passed ok"},{"timestamp":1526402941,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 27:\n\nNick - have you made any changes since patch set 24 (as it\u0027s hard to tell with Gerrit rebase)?"},{"timestamp":1526455480,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 27:\n\nTodd: No, all the changes are a result of the rebase."},{"timestamp":1526486957,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Patch Set 27: Code-Review+1"},{"timestamp":1526502491,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 28: Patch Set 27 was rebased"},{"timestamp":1526502553,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 28:\n\n\"make check\" passed ok"},{"timestamp":1526514997,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 28:\n\n(3 comments)"},{"timestamp":1526596927,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Uploaded patch set 29."},{"timestamp":1526596989,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 29: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1526597021,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Patch Set 29:\n\n(3 comments)"},{"timestamp":1527029369,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 29: Code-Review+1 Integration-Approval+1"},{"timestamp":1527029932,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Nick Zivkovic"}],"currentPatchSet":{"number":"29","revision":"fc16bba451baa4c227e3769115c35ce7b0aa6da7","parents":["99f504ba70da2018c32504396fff96bc3295c964"],"ref":"refs/changes/15/2915/29","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1526596927,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1526596989,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1527029369,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1527029369,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"SUBM","value":"1","grantedOn":1527029931,"by":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":272,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":173,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":126,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":368,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1470,"sizeDeletions":-49},"patchSets":[{"number":"1","revision":"d8f6efa033bb8476498dd8d90ce3430fdc6dd132","parents":["392178ed2d1de72d814cfd9fea0b728b8dbd84d9"],"ref":"refs/changes/15/2915/1","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1510006775,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1510006835,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":616,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I think that it\u0027d be better to create three functions here: validateSubnetAlloc, and two helper functions, validateSubnetAutoAlloc \u0026 validateSubnetParamsAlloc. Then, in validateSubnetAlloc, you can do:\n\n    if (parsedParams.subnet_alloc) {\n        validateSubnetAutoAlloc(opts, original, parsedParams, callback);\n    } else {\n        validateSubnetParamsAlloc(opts, original, parsedParams, callback);\n    }\n\nIn the two helper functions, you can then assert that each of the fields is or isn\u0027t present, and do the appropriate errors.invalidParam/errors.missingParam calls with each name, and call the callback with an array of the errors. That will allow us to create more easily understand error messages when we have conflicts."},{"file":"lib/models/network.js","line":621,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Can the errors.InvalidParamsError constructor be used here?"},{"file":"lib/models/network.js","line":629,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Perhaps split this complicated expression into two separate if checks, like:\n\nif (parsedParams.subnet \u0026\u0026\n    (!parsedParams.provision_start_ip || !parsedParams.provision_end_ip)) {\n    ERR();\n}\n\nif (parsedParams.subnet_alloc) {\n    if (!parsedParams.addr_family || !parsedParams.subnet_prefix) {\n        ERR();\n    }\n    if (!parsedParams.fabric || !parsedParams.vnet_id) {\n        ERR();\n    }\n}"},{"file":"lib/models/network.js","line":631,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Can the errors.InvalidParamsError constructor be used here?"},{"file":"lib/models/network.js","line":646,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"While we\u0027re in this area, can you move the return to its own line?"},{"file":"lib/models/network.js","line":1457,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"NAPI uses camel case for variable and argument identifiers."},{"file":"lib/models/network.js","line":1496,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Can we make this a global constant at the top of the file? AUTO_ALLOC_FILTERS, or something?"},{"file":"lib/models/network.js","line":1512,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Can you make this a helper towards the top of the file, called getMarkerSubnet() or something?"},{"file":"lib/models/network.js","line":1530,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"What would you think about doing this like:\n\n    function updatePair(sub) {\n        pair.push(sub);\n        while (pair.length \u003e 2) {\n            pair.shift();\n        }\n    }"},{"file":"lib/models/network.js","line":1538,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"You\u0027ll want to repeatedly call stream.read(1) until it returns  null, like:\n\n    var network;\n\n    for (;;) {\n        network \u003d stream.read(1);\n        if (network \u003d\u003d\u003d null) {\n            return;\n        }\n\n        ...\n    }"},{"file":"lib/models/network.js","line":1598,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Here and below, you can do:\n\n    s1 \u003d ipaddr.createCIDR(sn1.address(), plen);"},{"file":"lib/models/network.js","line":1843,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Please use an errors.X, maybe errors.SubnetFullError() or alternatively create appropriate error constructor."},{"file":"lib/util/validate.js","line":64,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"nit: please move function comment above the function definition. Use /** */ style comments."},{"file":"lib/util/validate.js","line":65,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"remove console.log"},{"file":"lib/util/validate.js","line":76,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"nit: please move function comment above the function definition. Use /** */ style comments."},{"file":"lib/util/validate.js","line":79,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Should this return statement be here? Looks like it should fall below into the /24 validation."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/models/network.js","type":"MODIFIED","insertions":507,"deletions":-4},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":29,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":54,"deletions":0}],"sizeInsertions":590,"sizeDeletions":-4},{"number":"2","revision":"4bec3c688bce6876ce303ea4a31a67c5a575ebb6","parents":["392178ed2d1de72d814cfd9fea0b728b8dbd84d9"],"ref":"refs/changes/15/2915/2","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1511821616,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1511821641,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":1717,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027decSubImpl\u0027 is already defined"},{"file":"lib/util/validate.js","line":76,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 76 exceeds the maximum line length of 80"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/models/network.js","type":"MODIFIED","insertions":506,"deletions":-5},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":54,"deletions":0}],"sizeInsertions":610,"sizeDeletions":-5},{"number":"3","revision":"c0d63f314dacaa600a1a6c5c040526468fa5b4a4","parents":["392178ed2d1de72d814cfd9fea0b728b8dbd84d9"],"ref":"refs/changes/15/2915/3","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1511821800,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1511821860,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":0,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"A lot of the utility functions added here should probably be moved to their own file lib/util/autoalloc.js or similar, so that we can then create something like test/unit/util-autoalloc.test.js, and unit test them."},{"file":"lib/models/network.js","line":0,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":140,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Let\u0027s call this field just \"family\", to match what we return/allow listing on, and let\u0027s make the validator validate.enum([ \u0027ipv4\u0027 ])."},{"file":"lib/models/network.js","line":140,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Still need to make the validator validate.enum([ \u0027ipv4\u0027 ]);"},{"file":"lib/models/network.js","line":140,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":140,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":618,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Can you make this three separate if blocks, and use the name of each parameter in the invalidParam() call? You can push them errors into an array, and then pass that array at the very end, so that we can warn on all of the invalid parameters."},{"file":"lib/models/network.js","line":618,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We should still make separate error objects for each one of these. So you should do something like:\n\n    mixed_params.push(errors.invalidParam(\u0027subnet\u0027));\n\nAnd then pass the array to the callback."},{"file":"lib/models/network.js","line":618,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":618,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":624,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Same thing: let\u0027s split these up, and create different errors.missingParam() errors for each one, putting them into an array. If I forget \"subnet_prefix\", for example, I should get a message saying the name of the missing field."},{"file":"lib/models/network.js","line":624,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Same thing here, still. You should make a separate errors.missingParam() object for each one of these, and pass the error to the callback."},{"file":"lib/models/network.js","line":624,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":624,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":633,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Ditto the checks in this function."},{"file":"lib/models/network.js","line":633,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"These should all be separate error objects for each field."},{"file":"lib/models/network.js","line":633,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":633,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":657,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This can be just (opts, original, parsedParams, callback), since all of the parameters get used."},{"file":"lib/models/network.js","line":657,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1486,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This function doesn\u0027t need to do any work asynchronously, so you can make this just return the stream to its consumers instead of passing it via a callback."},{"file":"lib/models/network.js","line":1486,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1527,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This shouldn\u0027t be inside the OR, since this field must be present, and must be equal to the vnet_id. You only want the or to encompass the subnet filters. This is probably why you\u0027re seeing duplicates below, which should never happen since we don\u0027t allow networks to be duplicated per owner.\n\nYou can probably add a test for this by creating a user with three fabrics: 10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16. That user should then get an error when trying to automatically provision, but other users should still be able to."},{"file":"lib/models/network.js","line":1527,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"You still need to fix this and add a test to show that it\u0027s fixed."},{"file":"lib/models/network.js","line":1527,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1527,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1617,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"I think that we can make this function shorter and easier to follow. I\u0027ve put together an example of what I\u0027m thinking we can do here:\n\nhttps://gist.github.com/melloc/38a0d6047794b2d22124e22535ab4368"},{"file":"lib/models/network.js","line":1617,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1627,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This should be sn2, right?"},{"file":"lib/models/network.js","line":1627,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1724,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Since incSubImpl returns null, won\u0027t this crash once we exhaust all subnets? We should make sure we add a test for exhausting all subnets and make sure it returns SUBNETS_EXHAUSTED_MSG."},{"file":"lib/models/network.js","line":1724,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1736,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Same thing. decSubImpl returns null, so we should make sure that gets handled properly."},{"file":"lib/models/network.js","line":1736,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/errors.js","line":154,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This should be \"SubnetsExhaustedError\""},{"file":"lib/util/validate.js","line":76,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Triton"},{"file":"test/integration/fabrics.test.js","line":0,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"In addition to these tests, we should also add new tests to test/unit/networks.test to test out invalid parameters. See the \"Create network - invalid parameters\" test for an example, although it may need to be a separate run of tests just afterwards, since automatic parameter validation and specific parameters conflict."},{"file":"test/integration/fabrics.test.js","line":0,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Please add the tests I asked for."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/models/network.js","type":"MODIFIED","insertions":464,"deletions":-5},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":54,"deletions":0}],"sizeInsertions":568,"sizeDeletions":-5},{"number":"4","revision":"3165914ba6b5164a368ec4d8f646270bb89de995","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/4","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1513386405,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1513386431,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/util/autoalloc.js","line":1,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Use the global form of \u0027use strict\u0027"},{"file":"lib/util/autoalloc.js","line":55,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027plen\u0027 is defined but never used"},{"file":"lib/util/autoalloc.js","line":156,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027subnet2\u0027 is defined but never used"},{"file":"lib/util/autoalloc.js","line":168,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Missing semicolon"},{"file":"test/unit/networks-subnet-alloc.test.js","line":22,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027mod_nic_tag\u0027 is defined but never used"},{"file":"test/unit/networks-subnet-alloc.test.js","line":34,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027TAG_A\u0027 is defined but never used"},{"file":"test/unit/networks-subnet-alloc.test.js","line":35,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027TAG_B\u0027 is defined but never used"},{"file":"test/unit/networks-subnet-alloc.test.js","line":44,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027MORAY\u0027 is defined but never used"},{"file":"test/unit/networks-subnet-alloc.test.js","line":97,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Expected space or tab after \u0027//\u0027 in comment"},{"file":"test/unit/networks-subnet-alloc.test.js","line":125,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027err\u0027 is defined but never used"},{"file":"test/unit/networks-subnet-alloc.test.js","line":279,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027err\u0027 is already declared in the upper scope"},{"file":"test/unit/networks-subnet-alloc.test.js","line":279,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027err\u0027 is defined but never used"},{"file":"test/unit/networks-subnet-alloc.test.js","line":280,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Expected space or tab after \u0027//\u0027 in comment"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/models/network.js","type":"MODIFIED","insertions":331,"deletions":-5},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":168,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":54,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":321,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4}],"sizeInsertions":926,"sizeDeletions":-9},{"number":"5","revision":"5c92078a194b4a3178dba75d76d25b834de97434","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/5","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1513634828,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1513634887,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":778,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"\"original\""},{"file":"test/unit/networks-subnet-alloc.test.js","line":285,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Please put these into a separate util-autoalloc.test.js file, like how the other utility functions are."},{"file":"test/unit/networks-subnet-alloc.test.js","line":285,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/models/network.js","type":"MODIFIED","insertions":331,"deletions":-5},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":167,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":54,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":314,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4}],"sizeInsertions":918,"sizeDeletions":-9},{"number":"6","revision":"81ba9f9755fb182db63622cb150b3fea02bfd57e","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/6","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1513904152,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1513904178,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"test/unit/networks-subnet-alloc.test.js","line":181,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Expected space or tab after \u0027//\u0027 in comment"},{"file":"test/unit/networks-subnet-alloc.test.js","line":195,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Expected space or tab after \u0027//\u0027 in comment"},{"file":"test/unit/networks-subnet-alloc.test.js","line":246,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Expected space or tab after \u0027//\u0027 in comment"},{"file":"test/unit/networks-subnet-alloc.test.js","line":248,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Expected space or tab after \u0027//\u0027 in comment"},{"file":"test/unit/networks-subnet-alloc.test.js","line":254,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027err\u0027 is defined but never used"},{"file":"test/unit/util-alloc.test.js","line":1,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Use the global form of \u0027use strict\u0027"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":307,"deletions":-6},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":167,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":31,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":378,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":32,"deletions":0}],"sizeInsertions":1065,"sizeDeletions":-12},{"number":"7","revision":"6714ac34c171dbfcf5f14f4d0d2438e1ee996eee","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/7","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1513904662,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1513904718,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"docs/index.md","line":865,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Only \"ipv4\" is supported for this field currently."},{"file":"docs/index.md","line":865,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"docs/index.md","line":866,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Only 24 is supported for now."},{"file":"docs/index.md","line":866,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":695,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Let\u0027s say \"parameter not allowed\" for these instead."},{"file":"lib/models/network.js","line":695,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":727,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Same thing: let\u0027s say \"parameter not allowed\" for these."},{"file":"lib/models/network.js","line":727,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":729,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"There\u0027s no addr_prefix field, right?"},{"file":"lib/models/network.js","line":729,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1610,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"You can just make this \"nets.length \u003d\u003d\u003d 0\"."},{"file":"lib/models/network.js","line":1610,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1628,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Remove the leading blank line."},{"file":"lib/models/network.js","line":1628,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1630,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"You can write these on one line."},{"file":"lib/models/network.js","line":1630,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1657,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We shouldn\u0027t have duplicates here anymore."},{"file":"lib/models/network.js","line":1657,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Right, forgot to remove that comment and code."},{"file":"lib/models/network.js","line":1678,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Please use camel case for these and other identifier names."},{"file":"lib/models/network.js","line":1678,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1680,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Can we define this before calling subnetPairs and give it a name like subnetWalker? That\u0027ll make it easier to read the subnetPairs() invocation and make it clearer that the second function is the callback for when we\u0027re finished."},{"file":"lib/models/network.js","line":1680,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1764,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"If we\u0027re going to do the parameter validation here, we should remove it from createValidNetwork() so that we aren\u0027t doing it twice, and make it take validatedParams as an argument."},{"file":"lib/models/network.js","line":1764,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1773,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We shouldn\u0027t use the original parameters object after the above validation, but should switch to using the validatedParams object."},{"file":"lib/models/network.js","line":1773,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":11,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Please insert a blank line after here."},{"file":"lib/util/autoalloc.js","line":11,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":22,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Please put these assignments and declarations together."},{"file":"lib/util/autoalloc.js","line":22,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":27,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We shouldn\u0027t need this anymore since we shouldn\u0027t feed overlapping subnets into haveGapBetweenSubnets() now, right?"},{"file":"lib/util/autoalloc.js","line":27,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":91,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This function won\u0027t behave correctly for all inputs. Consider the input addr\u003d10.0.2.128/25 and plen\u003d24, for example. This function would return 10.0.2.0/24, which encompasses the input subnet.\n\nA better way to implement this would be to take addr.address(), and do an offset of -Math.pow(2, 32 - plen). This will move you far enough away from the subnet that, when you truncate the bits below with createCIDR(), the resulting subnet will not overlap with the input.\n\nYou should make sure to add some decrementSubnet() tests to util-alloc.test.js for these kinds of situations."},{"file":"lib/util/autoalloc.js","line":91,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Fixed, but at the incrementSubnet and decrementSubnet levels, by creating a new CIDR with a (potentially) smaller prefix (if necessary)."},{"file":"lib/util/autoalloc.js","line":94,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Let\u0027s avoid moving the addresses back and forth between strings and objects, and just use objects in all of the new code as much as possible. For any constant addresses or subnets you want to compare against, just create another constant ip6addr object above, and use .compare() here."},{"file":"lib/util/autoalloc.js","line":94,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":94,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Please make these addresses constants above, like IP_10_0_0_0 and others are.\n\nWe\u0027re also still moving back and forth between strings and objects in decrementSubnet and incrementSubnet, where we convert it back to a string at the very end. Let\u0027s keep that an object, and then make allocateSubnet() in lib/models/network.js always return an object so that we don\u0027t need to call createCIDR() in the createNetwork() pipeline."},{"file":"lib/util/autoalloc.js","line":94,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":116,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This has a similar issue. Consider the input addr\u003d10.0.2.0/25 and plen\u003d24. This would return 10.0.2.0/24, which would encompass the input subnet, and therefore be overlapping.\n\nA better way to do this would be to offset the subnet\u0027s .address() by Math.pow(2, 32 - subnet.prefixLength()) + Math.pow(2, 32 - plen). This would, once the trailing bits are truncated, give you the next non-overlapping subnet of plen size.\n\nYou should make sure to add some incrementSubnet() tests for these kinds of cases."},{"file":"lib/util/autoalloc.js","line":116,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Fixed, but at the incrementSubnet and decrementSubnet levels, by creating a new CIDR with a (potentially) smaller prefix (if necessary)."},{"file":"lib/util/autoalloc.js","line":139,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"You can just write at the beginning of the function:\n\n    assert.number(plen, \u0027plen\u0027);\n\nWhich will achieve what you\u0027re doing with assert.ok and make sure that it is actually a number. You can do the same with the asserts in decrementSubnet()."},{"file":"lib/util/autoalloc.js","line":139,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":142,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Why rename the inputs? Just make the function have the parameter names you want. Same goes for decrementSubnet()."},{"file":"lib/util/autoalloc.js","line":142,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":145,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"What is this for? This will make an input of subnet\u003d10.88.0.0/16 and desired_plen\u003d24 return a new /16 instead of /24. NAPI should preserve the desired prefix length. Same goes for decrementSubnet().\n\nPlease add tests for these two functions where the input subnet is less than and greater than the requested prefix length."},{"file":"lib/util/autoalloc.js","line":145,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"I have not a clue\nWhat the deal is with this math\nSo very coocoo"},{"file":"lib/util/autoalloc.js","line":145,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"I mistakenly applied Math.min() to the desired prefix. The intent was to use Math.min() to choose the smaller prefix and create an adjusted CIDR that had the same address but a (potentially) smaller prefix. This way the increment/decrement logic in incSubImpl and decSubImpl would not create overlapping subnets. But clearly there is a mismatch between the intent and manifestation here. Fixed."},{"file":"lib/util/autoalloc.js","line":145,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We still need tests for input subnets where the prefix length is less than the target prefix length. When you add some, please make sure to add them with several example lengths."},{"file":"lib/util/autoalloc.js","line":145,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/errors.js","line":150,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"\u0027SubnetsExhaustedError\u0027"},{"file":"lib/util/errors.js","line":150,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/validate.js","line":61,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Let\u0027s make this return an invalidParam() if typeof isn\u0027t \"number\", so that this field is strict. (This\u0027ll also help us avoid all of the weirdness around parseInt().)"},{"file":"lib/util/validate.js","line":61,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks-subnet-alloc.test.js","line":131,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"You can put this into the partialExp object above. Same for the other checks below."},{"file":"test/unit/networks-subnet-alloc.test.js","line":131,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks-subnet-alloc.test.js","line":252,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"If you don\u0027t pass the callback, it\u0027ll call t2.end() for you."},{"file":"test/unit/networks-subnet-alloc.test.js","line":252,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/util-alloc.test.js","line":24,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"This is 192.168.255.0/24."},{"file":"test/unit/util-alloc.test.js","line":24,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/util-alloc.test.js","line":43,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Please add the subnetsAdjacent() tests from the gist to this file, too."},{"file":"test/unit/util-alloc.test.js","line":43,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":307,"deletions":-6},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":167,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":17,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":374,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":43,"deletions":0}],"sizeInsertions":1058,"sizeDeletions":-12},{"number":"8","revision":"08c9baa95274a2d2cc76da0c1c250db91cfa0973","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/8","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1515799153,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1515799183,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":1066,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027app\u0027 is defined but never used"},{"file":"lib/models/network.js","line":1067,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027log\u0027 is defined but never used"},{"file":"lib/models/network.js","line":1081,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Unnecessary semicolon"},{"file":"lib/models/network.js","line":1653,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Unexpected space before function parentheses"},{"file":"lib/util/autoalloc.js","line":54,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027plen\u0027 is defined but never used"},{"file":"lib/util/autoalloc.js","line":67,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Unexpected space before function parentheses"},{"file":"lib/util/validate.js","line":62,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 62 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":17,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Unexpected space before function parentheses"},{"file":"test/unit/util-alloc.test.js","line":88,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 88 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":89,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 89 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":103,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 103 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":107,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 107 exceeds the maximum line length of 80"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":317,"deletions":-41},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":147,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":372,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":120,"deletions":0}],"sizeInsertions":1124,"sizeDeletions":-47},{"number":"9","revision":"14eebc6b4cd2f079ef4e3c4f311fb53f7320382c","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/9","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1515799775,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1515799832,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/util/errors.js","line":148,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"These two were correct before. Only this.name needed to be fixed. Look at SubnetFullError and InUseError for examples of how NAPI sets up these errors."},{"file":"lib/util/errors.js","line":148,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/util-alloc.test.js","line":45,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"We don\u0027t need to have this here. The tests below should test the version of subnetsAdjacent that lives in lib/util/autoalloc.js, the code that NAPI will actually be using, and not this copy of that code."},{"file":"test/unit/util-alloc.test.js","line":45,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":316,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":147,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":19,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":372,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":124,"deletions":0}],"sizeInsertions":1128,"sizeDeletions":-48},{"number":"10","revision":"601b37473574948dcbaaa8c1f099678f1c92084d","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/10","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1516752503,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1516752530,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"test/unit/util-alloc.test.js","line":21,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027IP_10_0_0_0\u0027 is defined but never used"},{"file":"test/unit/util-alloc.test.js","line":22,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027IP_172_16_0_0\u0027 is defined but never used"},{"file":"test/unit/util-alloc.test.js","line":23,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027IP_192_168_0_0\u0027 is defined but never used"},{"file":"test/unit/util-alloc.test.js","line":25,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027IP_10_255_255_255\u0027 is defined but never used"},{"file":"test/unit/util-alloc.test.js","line":26,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"\u0027IP_172_31_255_255\u0027 is defined but never used"},{"file":"test/unit/util-alloc.test.js","line":33,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 33 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":70,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 70 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":71,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 71 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":72,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 72 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":75,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 75 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":76,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 76 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":77,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 77 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":79,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 79 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":83,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 83 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":84,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 84 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":85,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 85 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":88,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 88 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":89,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 89 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":90,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 90 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":93,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 93 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":94,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 94 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":98,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 98 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":99,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 99 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":103,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 103 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":104,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 104 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":105,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 105 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":106,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 106 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":109,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 109 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":110,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 110 exceeds the maximum line length of 80"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":315,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":158,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":19,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":372,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":113,"deletions":0}],"sizeInsertions":1127,"sizeDeletions":-48},{"number":"11","revision":"941bde96349bfbbad37cddc645dc730bbe1a3ca5","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/11","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1516752784,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1516752815,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"test/unit/util-alloc.test.js","line":76,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 76 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":78,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 78 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":100,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 100 exceeds the maximum line length of 80"},{"file":"test/unit/util-alloc.test.js","line":106,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 106 exceeds the maximum line length of 80"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":315,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":158,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":19,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":372,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":126,"deletions":0}],"sizeInsertions":1140,"sizeDeletions":-48},{"number":"12","revision":"9bb2647d2b33e38bf30614568f627a21a7aad91f","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/12","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1516752986,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1516753043,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/util/autoalloc.js","line":117,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"whitespace before right paren"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":315,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":158,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":19,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":372,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":126,"deletions":0}],"sizeInsertions":1140,"sizeDeletions":-48},{"number":"13","revision":"f4df8fa2b82063efe45025cb07018e9de982eacc","parents":["6479f265cda008a6828fe68f083fbb784ef3d9dc"],"ref":"refs/changes/15/2915/13","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1516753137,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1516753203,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":1535,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"offset and limit don\u0027t seem to be set, yet they are used in the listObjs call"},{"file":"lib/models/network.js","line":1535,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Good catch, will fix."},{"file":"lib/models/network.js","line":1574,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"copyOpts is created, but it\u0027s unused? Was it meant to be passed to the network filter?"},{"file":"lib/models/network.js","line":1574,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Good catch. Checking this out, will fix."},{"file":"lib/models/network.js","line":1598,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"You could use an object (passed to this function and passed on to listFilteredNetworksStream, either as part of opts, or a separate argument) and set a specific value on that object when you wanted to stop, e.g.:\n  if (state.abort) { ... }\n\nthen could could set state.abort in the allocateSubnet function when you\u0027ve found a subnet."},{"file":"lib/models/network.js","line":1598,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Ok, quick update: instead of finding just 1 gap and trying to use it, it is a better idea to walk the entire stream, and save all gaps in a list.\n\nReasoning: Once the race-condition handling we depend on gets implemented (NAPI-435), we can fail an allocation. Instead of passing this error on to sdc-docker, we should handle it ourselves and allocate a different gap. It is wasteful to walk the stream on each failure, so we should have a list of gaps that we can try to allocate. And if they all fail, we should re-walk the stream."},{"file":"lib/models/network.js","line":1634,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Maybe simplify this code - by just keeping track of the prevNetwork in the loop, for example:\n\n    var prevNetwork \u003d null;\n    stream.on(\u0027readable\u0027, function () {\n        var network \u003d stream.read(1);\n        while (network) {\n            if (prevNetwork !\u003d\u003d null) {\n                walker([prevNetwork, network]);\n            }\n            prevNetwork \u003d network;\n            network \u003d stream.read(1);\n        }\n    }"},{"file":"lib/models/network.js","line":1634,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Yeah, this seems fine if we are saving a list of gaps. Will fix."},{"file":"lib/models/network.js","line":1639,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"if (prevNetwork) {\n    walker([prevNetwork]);\n}"},{"file":"lib/models/network.js","line":1639,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Ditto."},{"file":"lib/util/autoalloc.js","line":19,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Add an assert.object here (in an else block)."},{"file":"lib/util/autoalloc.js","line":19,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":59,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"What if sn2 starts before sn1? It could be adjacent in that case.\n\nNote: I don\u0027t have full context for how this is used, if sn1 is always guaranteed to be less than sn2, then this behaviour is fine - but maybe change the name or better yet, add an assert for \"s1 \u003c s2\"."},{"file":"lib/util/autoalloc.js","line":59,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Right, sn1 is always less than sn2, since we use it on subnets returned by moray, which sorts them in ascending order. Will the assert for clarity."},{"file":"lib/util/autoalloc.js","line":65,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"s/is/when/"},{"file":"lib/util/autoalloc.js","line":65,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":76,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Does this XXX still need to be addressed?"},{"file":"lib/util/autoalloc.js","line":76,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"No. This one was removed from the latest changes. (changeset 14, not 13)."},{"file":"lib/util/autoalloc.js","line":82,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Not sure what \"leftmost possible byte\" means - perhaps just drop this part of the comment?"},{"file":"lib/util/autoalloc.js","line":82,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":85,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Please rename this variable \"sub\" as it\u0027s a ip6addr.CIDR (subnet), to avoid confusing it with ip6addr.Addr."},{"file":"lib/util/autoalloc.js","line":85,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":97,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"This code confuses me - why the need for both new_addr and new_addr2, seems like it could be simpler:\n\n    var addr \u003d sub.address();\n    if (addr.compare(IP_10_0_0_0) \u003d\u003d\u003d 0) {\n        return null;\n    } else if (addr.compare(IP_172_16_0_0) \u003d\u003d\u003d 0) {\n        addr \u003d IP_10_255_255_255;\n    } else if (new_addr2.compare(IP_192_168_0_0) \u003d\u003d\u003d 0) {\n        addr \u003d IP_172_31_255_255;\n    } else {\n        addr \u003d addr.offset(-1);\n    }\n\n    return ipaddr.createCIDR(addr, plen);"},{"file":"lib/util/autoalloc.js","line":97,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"This was updated in changeset 14, not 13. Good catch though."},{"file":"lib/util/autoalloc.js","line":105,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Does this XXX still apply - as I don\u0027t understand this comment as to why we cannot increment?"},{"file":"lib/util/autoalloc.js","line":105,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"typo \"can\u0027t\""},{"file":"lib/util/autoalloc.js","line":105,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Nope, was removed in the new changeset."},{"file":"lib/util/autoalloc.js","line":110,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Same comments as decSubImpl."},{"file":"lib/util/autoalloc.js","line":110,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":138,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"nit - just use:\n  return incSubImpl(...);"},{"file":"lib/util/autoalloc.js","line":138,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":142,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Copy the comments - as code and functions can move around."},{"file":"lib/util/autoalloc.js","line":142,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/autoalloc.js","line":149,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"nit - just use:\n  return decSubImpl(...);"},{"file":"lib/util/autoalloc.js","line":149,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/errors.js","line":327,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Might be good to add an assert here:\n  assert.arrayOfObject(errs, \u0027errs\u0027);"},{"file":"lib/util/errors.js","line":327,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/validate.js","line":58,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Don\u0027t need this part of the comment - just need what it does now."},{"file":"lib/util/validate.js","line":58,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/integration/fabrics.test.js","line":90,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"This supposed to use the same vlan_id as previous network?"},{"file":"test/integration/fabrics.test.js","line":90,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Probably not, will re-test and confirm."},{"file":"test/unit/networks-subnet-alloc.test.js","line":23,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"nit: keep these in a-z sort order"},{"file":"test/unit/networks-subnet-alloc.test.js","line":23,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks-subnet-alloc.test.js","line":85,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I don\u0027t think this call is needed (when your creating sub-tests)."},{"file":"test/unit/networks-subnet-alloc.test.js","line":85,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Will remove if not needed."},{"file":"test/unit/networks-subnet-alloc.test.js","line":132,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Doesn\u0027t look like NETS is used for anything? If not used, drop all NETS usage."},{"file":"test/unit/networks-subnet-alloc.test.js","line":132,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Good catch. Dropped."},{"file":"test/unit/networks-subnet-alloc.test.js","line":152,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Why is this different to the test case above, why not validate through partialExp?"},{"file":"test/unit/networks-subnet-alloc.test.js","line":152,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks-subnet-alloc.test.js","line":365,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"don\u0027t need this line"},{"file":"test/unit/networks-subnet-alloc.test.js","line":365,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Will remove."},{"file":"test/unit/util-alloc.test.js","line":26,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Since these mod_alloc functions are used multiple times, perhaps just make local variables of them:\n  var incrementSubnet \u003d mod_alloc.incrementSubnet;\n\nit will then make it easier to read these tests, e.g.:\n  t2.deepEqual(null, incrementSubnet(c(\u0027192.168.255.0/24\u0027), 24));\n\nSame goes for other mod_alloc test usage."},{"file":"test/unit/util-alloc.test.js","line":26,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/util-alloc.test.js","line":50,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Should this result be \u0027172.31.255.0/24\u0027 ?"},{"file":"test/unit/util-alloc.test.js","line":50,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Good catch. Fixed."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":315,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":158,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":19,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":372,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":126,"deletions":0}],"sizeInsertions":1140,"sizeDeletions":-48},{"number":"14","revision":"3dbc2347ea1b791b67b474f1d6b4eeea4d9e6ae4","parents":["e975068ded0e15743527a31d782de7a46aec1391"],"ref":"refs/changes/15/2915/14","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1519171836,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1519171900,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":315,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":137,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":31,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":19,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":372,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":2,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":126,"deletions":0}],"sizeInsertions":1119,"sizeDeletions":-48},{"number":"15","revision":"6a5592b071a6d1c120192524913599f273d2dfbd","parents":["1a0b793b3f5a72bdcac08d841b2d1fdd0124e75b"],"ref":"refs/changes/15/2915/15","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1519864944,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1520474201,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":1572,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I don\u0027t how this can possibly limit to 10 networks at a time - as listFilteredNetworks makes no use of copyOpts.params (or maybe listFilteredNetworks should?).\n\nSeems like \"limit\" should be set on copyOpts and then listFilteredNetworks would set the limit on the moray.listObjs call."},{"file":"lib/models/network.js","line":1572,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Yeah, forgot to set the limit properly here. The only reason this works at all is because listObjs() sets a default limit, if one is not given. Good catch."},{"file":"lib/models/network.js","line":1739,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I don\u0027t know why this is trying to allocate multiple subnets.\n\nI would prefer this to just find one subnet and abort (stop further searching).\n\nNote: I know there is another ticket to address race collisions, but I don\u0027t see why there would be changes here to support that. For a race collision avoidance, I would expect that would work similar to a generator - where you call \"next()\" only if you want more objects (which in turn may perform more moray searches to fetch N at a time)."},{"file":"lib/models/network.js","line":1739,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"TLDR: good idea, I\u0027ll fix it.\n\nI see what you\u0027re saying. We had a discussion and settled on the list-of-subnets strategy *initially*. But the generator-notion that you describe is logically equivalent and more efficient. So I\u0027ll change the code implement a transform-stream on top of the LOMstream/pair-stream. This will let us automatically pause and resume the stream upon hitting a high water mark. Ultimately, the callback would call `read()` once instead of getting the first elem of the `subnets` array. Internally, we will -- for each gap -- return a list of up to 16 possible subnets that can live in the gap. This way if an allocation fails, we simply read the stream again in order to retry."},{"file":"lib/models/network.js","line":1739,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Great - the transform stream sounds good to me :)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":301,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":361,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":128,"deletions":0}],"sizeInsertions":1100,"sizeDeletions":-48},{"number":"16","revision":"d641b17f329857d2269a5d9570845519848e6c86","parents":["1a0b793b3f5a72bdcac08d841b2d1fdd0124e75b"],"ref":"refs/changes/15/2915/16","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1521505920,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1521505983,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":1575,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I don\u0027t think \u0027copyOpts.params.limit\u0027 needs to be set, just \u0027copyOpts.limit\u0027 (from looking at listFilteredNetworks function)."},{"file":"lib/models/network.js","line":1575,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/models/network.js","line":1698,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"This needs to be in a while loop, i.e.\nwhile (subnet_stream.read()) { ... }\n\nThis is because the stream only emits the readable event when there is *new* data read into it\u0027s buffer/cache. If you don\u0027t consume them all - you could end up stalling or not reading all the stream data."},{"file":"lib/models/network.js","line":1698,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"That\u0027s correct, except we only want to get a single object (the very first subnet we find). This code is going to look a little different once Cody implements the retry functionality. For now, I just want to implement something that is semantically equivalent to the old changes (allocates a single subnet), but can be easily modified to accommodate retries. This is why the stream-tests _do_ use a for-loop, while this chunk here doesn\u0027t."},{"file":"lib/util/subnet-streams.js","line":83,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Using a hard coded limit like this is not how most transform streams work. Generally streams stop writing/pushing when they have exceeded their highwater limit i.e. when self.push() returns false. They begin writing again (from the point they left off) when they see a \"drain\" event (i.e. when the buffer is emptied).\n\nCurrently, if a consumer of this stream is reading the unused subnets, they will get (up to) a batch of 16 between the first two subnets, then a batch of (up to) 16 from the next two subnets, etc... so this stream doesn\u0027t actually generate all the available subnets.\n\nMaybe this is fine for the given application - but if so it should be documented that this is not going to generate all available subnets."},{"file":"lib/util/subnet-streams.js","line":83,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Understood. It is very much the intent that we fetch only up to the first 16 in-between subnets. I will document this."},{"file":"lib/util/subnet-streams.js","line":85,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Assert (pair.length \u003e 0) ?"},{"file":"lib/util/subnet-streams.js","line":85,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":88,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I don\u0027t think it\u0027s possible to have a pair length of zero is it?"},{"file":"lib/util/subnet-streams.js","line":88,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":96,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Move var declaration to the start of the function"},{"file":"lib/util/subnet-streams.js","line":96,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":100,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I don\u0027t think this needs to be inside the while loop (as _newSub is only null on the first loop), therefore define it once outside of the loop."},{"file":"lib/util/subnet-streams.js","line":100,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":103,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Maybe use \"startSub\", \"currentSub\" and \"endSub\" variable naming, then the code flows as:\n\nvar startSub \u003d pair[0];\nvar endSub \u003d pair.length \u003e 1 ? pair[1] : pair[0];\n...\nvar i \u003d 0;\nvar currentSub \u003d startSub;\nwhile (i \u003c newSubLimit) {\n    currentSub \u003d autoalloc.incrementSubnet(currentSub, plen);\n    if (currentSub \u003d\u003d\u003d null || currentSub.compare(endSub) \u003e 0) {\n..."},{"file":"lib/util/subnet-streams.js","line":103,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":109,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"This line is not needed."},{"file":"lib/util/subnet-streams.js","line":109,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":141,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Move var declaration to the start of the function... perhaps call it lastSub"},{"file":"lib/util/subnet-streams.js","line":141,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":150,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Not sure why this needs to be _newSub2 - why not just use _newSub from this point down?"},{"file":"lib/util/subnet-streams.js","line":150,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"I\u0027ve renamed newSub and newSub2. They can\u0027t share the same name, since we want to keep track of the most recent _left_ current value and the most recent _right_ current value. I\u0027ve renamed these to currentSubLeft, and currentSubRight. I\u0027ve renamed the very first use of _newSub to currentSub. The idea here is to return a stream of available subnets from both the left end and right end of an otherwise gapless stream of pairs."},{"file":"lib/util/subnet-streams.js","line":150,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Ah, I think I follow. You loop to the left, if no more left then you loop to the right.\n\nI think this may be clearer as two separate loops, i.e. like this:\n\n/* look for available subnets before startSub */\ncurrentSub \u003d autoalloc.decrementSubnet(startSub, plen);\nwhile (currentSub \u0026\u0026 self.us_npushed \u003c 16) {\n    self.pushToStream(currentSub);\n    currentSub \u003d autoalloc.decrementSubnet(currentSub, plen);\n}\n\nif (self.us_npushed \u003e\u003d 16) {\n    done();\n    return;\n}\n\n/* look for available subnets after endSub */\ncurrentSub \u003d autoalloc.incrementSubnet(endSub, plen);\nwhile (currentSub \u0026\u0026 self.us_npushed \u003c 16) {\n    self.pushToStream(currentSub);\n    currentSub \u003d autoalloc.incrementSubnet(currentSub, plen);\n}\n\ndone();"},{"file":"lib/util/subnet-streams.js","line":150,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Hey, thanks for refactoring this. This is much clearer than the single-loop version from before (and now that I think about it, probably faster, too)."},{"file":"lib/util/validate.js","line":82,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Oh man - the same thing is all over the place in NAPI. What a crappy function/API (errors.invalidParam), it just seems to cause confusion.\n\nCan you fix the other instances (at least in your code changes) where this does the wrong thing (i.e. where the code uses \"new\" instead of a direct function call)."},{"file":"lib/util/validate.js","line":82,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/unknown-subnet-stream.test.js","line":13,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Why is it \u0027unknown\u0027? Did you mean \u0027unused\u0027? Same goes for this test filename.\n\nFYI (this may just be me - so take with a grain a salt), I\u0027ve been finding the word \"unused\" jarring to my brain - as it feels like this is referring to something that\u0027s unused (i.e. code or objects that are not needed). I think I prefer the word \"available\" i.e. \"find an available subnet\" v\u0027s \"find an unused subnet\"."},{"file":"test/unit/unknown-subnet-stream.test.js","line":13,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Yeah, \u0027available\u0027 is a much more accurate adjective than \u0027unused\u0027. And \u0027unknown\u0027 is the result of compulsive tab-completion -- sorry for not noticing this beforehand."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":263,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":167,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":361,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/unknown-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":128,"deletions":0}],"sizeInsertions":1426,"sizeDeletions":-48},{"number":"17","revision":"1414bec31c49cd2358c63e2edec2593e8a2d754b","parents":["1a0b793b3f5a72bdcac08d841b2d1fdd0124e75b"],"ref":"refs/changes/15/2915/17","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1522192440,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1522192469,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/models/network.js","line":1605,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 1605 exceeds the maximum line length of 80"},{"file":"lib/util/subnet-streams.js","line":152,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 152 exceeds the maximum line length of 80"},{"file":"lib/util/subnet-streams.js","line":158,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Line 158 exceeds the maximum line length of 80"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":263,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":175,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":361,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":128,"deletions":0}],"sizeInsertions":1434,"sizeDeletions":-48},{"number":"18","revision":"d2936fe77de7a1290a787eda34366c314869fc24","parents":["1a0b793b3f5a72bdcac08d841b2d1fdd0124e75b"],"ref":"refs/changes/15/2915/18","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1522192629,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1522192689,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":264,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":177,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":107,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":361,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":128,"deletions":0}],"sizeInsertions":1437,"sizeDeletions":-48},{"number":"19","revision":"b6200cbfabbdd634830ea5af2b70f878e7a00677","parents":["1a0b793b3f5a72bdcac08d841b2d1fdd0124e75b"],"ref":"refs/changes/15/2915/19","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1523306536,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1523306601,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":270,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":177,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":128,"deletions":0}],"sizeInsertions":1484,"sizeDeletions":-49},{"number":"20","revision":"fc44f52418d40ce28aed6c8f32067c5d0547cc96","parents":["2d38182f1e13c246cb164ea517b6503aaec97b7f"],"ref":"refs/changes/15/2915/20","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1523306714,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1523306781,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"test/unit/util-alloc.test.js","line":36,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"indent is 17 not a multiple of 2 spaces"},{"file":"test/unit/util-alloc.test.js","line":38,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"indent is 21 not a multiple of 2 spaces"},{"file":"test/unit/util-alloc.test.js","line":40,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"indent is 21 not a multiple of 2 spaces"},{"file":"test/unit/util-alloc.test.js","line":51,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"indent is 21 not a multiple of 2 spaces"},{"file":"test/unit/util-alloc.test.js","line":53,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"indent is 17 not a multiple of 2 spaces"},{"file":"test/unit/util-alloc.test.js","line":57,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"indent is 17 not a multiple of 2 spaces"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":270,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":177,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":128,"deletions":0}],"sizeInsertions":1484,"sizeDeletions":-49},{"number":"21","revision":"1518d6631c041201442bb0a3ac5ba087c48e54e1","parents":["2d38182f1e13c246cb164ea517b6503aaec97b7f"],"ref":"refs/changes/15/2915/21","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1523307070,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1523306781,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":270,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":177,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":128,"deletions":0}],"sizeInsertions":1484,"sizeDeletions":-49},{"number":"22","revision":"d2e36aee0231c12964f1ad4695ee921957ff4a00","parents":["2d38182f1e13c246cb164ea517b6503aaec97b7f"],"ref":"refs/changes/15/2915/22","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1523308154,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1523308214,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/endpoints/ping.js","line":32,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Why is naming different (subnet_alloc_enabled v\u0027s autoAllocSubnets)? Keeping it consistent will help to avoid confusion, and it will be easier to grep for where it\u0027s used."},{"file":"lib/endpoints/ping.js","line":32,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Well the ping endpoint emits keys in under_bar notation, while the manifest template file uses camelCase notation. I wanted to be consistent with each of those files. But obviously the inconsistency _between_ these two interfaces is unfortunate and probably creates development friction."},{"file":"lib/models/network.js","line":697,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"This config value isn\u0027t guaranteed to be defined (as far as I can tell). Perhaps err on the side of caution and just use a truthy value:\n\nif (!opts.app.config.autoAllocSubnets) {"},{"file":"lib/models/network.js","line":697,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":87,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Also, document this behaviour at the start of the AvailableSubnetStream constructor (i.e. line 57), as that\u0027s where most dev\u0027s will look for notes."},{"file":"lib/util/subnet-streams.js","line":87,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"lib/util/subnet-streams.js","line":146,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"This is not really true - there may have been gaps, but not enough gaps to satisfy the 16 limit, right?"},{"file":"lib/util/subnet-streams.js","line":146,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/integration/fabrics.test.js","line":42,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Keep variable name and config name the same (consistent)."},{"file":"test/integration/fabrics.test.js","line":42,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/integration/fabrics.test.js","line":267,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Can this be moved to after test \u0027setup\u0027, or better yet, become a part of test setup?"},{"file":"test/integration/fabrics.test.js","line":267,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/integration/fabrics.test.js","line":269,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I think this is under \"res.config.subnet_alloc_enabled\"."},{"file":"test/integration/fabrics.test.js","line":269,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks-subnet-alloc.test.js","line":91,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Naming - keep this name the same as config variable name (consistent)."},{"file":"test/unit/networks-subnet-alloc.test.js","line":91,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks-subnet-alloc.test.js","line":95,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"I think this is under \"res.config.subnet_alloc_enabled\"."},{"file":"test/unit/networks-subnet-alloc.test.js","line":95,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks.test.js","line":1623,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"Not sure why this changed?"},{"file":"test/unit/networks.test.js","line":1623,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"I think gerrit got confused by the rebase. I\u0027m not the one who made this change. Cody made this change in commit 2d38182f, for NAPI-420."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":270,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":177,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1483,"sizeDeletions":-49},{"number":"23","revision":"6ee203dd01e98818491598263a7f1d70d8d34dac","parents":["2d38182f1e13c246cb164ea517b6503aaec97b7f"],"ref":"refs/changes/15/2915/23","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1524009078,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1524009138,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1524261633,"by":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"}}],"comments":[{"file":"lib/util/subnet-streams.js","line":58,"reviewer":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},"message":"nit: comment goes before/outside the function :)"},{"file":"lib/util/subnet-streams.js","line":58,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":270,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":174,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1480,"sizeDeletions":-49},{"number":"24","revision":"4b32d218b2c7f072d55276074e31d355e7a1c5e7","parents":["2d38182f1e13c246cb164ea517b6503aaec97b7f"],"ref":"refs/changes/15/2915/24","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1524358522,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1524358584,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1524499102,"by":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":270,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":173,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1479,"sizeDeletions":-49},{"number":"25","revision":"83ac29c5466a54de8c6b149acee555a232ab01ef","parents":["207d8989621a446d238a98d72796347ca158ddfc"],"ref":"refs/changes/15/2915/25","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1524524170,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1524524232,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":269,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":173,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1478,"sizeDeletions":-49},{"number":"26","revision":"3a8bb7e1d3d1cd49f838e8d3278a7fc5cfc49ed2","parents":["1c5cbf8cb02eaf78d83c71a3d6acfff535efd466"],"ref":"refs/changes/15/2915/26","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1525211104,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1524524232,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":269,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":173,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1478,"sizeDeletions":-49},{"number":"27","revision":"e6d0791920955806854e73dfb6be514e8801f3e7","parents":["9b10d55db26afea97d3324b380c51bf1ce9ac377"],"ref":"refs/changes/15/2915/27","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1526331441,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1524524232,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1526486957,"by":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":269,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":173,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1478,"sizeDeletions":-49},{"number":"28","revision":"3b5302eb2dc4fcf4d1fe7a65a2c4fe41c1d56186","parents":["99f504ba70da2018c32504396fff96bc3295c964"],"ref":"refs/changes/15/2915/28","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1526502491,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1524524232,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1526486957,"by":{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"}}],"comments":[{"file":"lib/models/network.js","line":865,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"There should also be a check for parsedParams.subnet."},{"file":"lib/models/network.js","line":865,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/integration/fabrics.test.js","line":631,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Can you write this as:\n\n    if (!subnet_alloc_enabled) {\n        return;\n    }\n\nSo that the below doesn\u0027t need to be indented as much, and so that when we remove the flag it doesn\u0027t have to be reindented?"},{"file":"test/integration/fabrics.test.js","line":631,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"},{"file":"test/unit/networks-subnet-alloc.test.js","line":48,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"You can make this:\n\n    h.createClientAndServer({\n        config: {\n            subnet_alloc_enabled: true\n        }\n    }, function (err, res) {\n\nAnd then you won\u0027t need the early returns below, since it\u0027ll always be enabled for this file."},{"file":"test/unit/networks-subnet-alloc.test.js","line":48,"reviewer":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":269,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":173,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":124,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":381,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1478,"sizeDeletions":-49},{"number":"29","revision":"fc16bba451baa4c227e3769115c35ce7b0aa6da7","parents":["99f504ba70da2018c32504396fff96bc3295c964"],"ref":"refs/changes/15/2915/29","uploader":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"createdOn":1526596927,"author":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1527029369,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1527029369,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1526596989,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"SUBM","value":"1","grantedOn":1527029931,"by":{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"docs/index.md","type":"MODIFIED","insertions":9,"deletions":-1},{"file":"lib/endpoints/ping.js","type":"MODIFIED","insertions":2,"deletions":-1},{"file":"lib/models/network.js","type":"MODIFIED","insertions":272,"deletions":-42},{"file":"lib/util/autoalloc.js","type":"ADDED","insertions":140,"deletions":0},{"file":"lib/util/constants.js","type":"MODIFIED","insertions":1,"deletions":0},{"file":"lib/util/errors.js","type":"MODIFIED","insertions":32,"deletions":-1},{"file":"lib/util/subnet-streams.js","type":"ADDED","insertions":173,"deletions":0},{"file":"lib/util/validate.js","type":"MODIFIED","insertions":18,"deletions":0},{"file":"sapi_manifests/napi/template","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/config.json","type":"MODIFIED","insertions":1,"deletions":0},{"file":"test/integration/fabrics.test.js","type":"MODIFIED","insertions":126,"deletions":0},{"file":"test/unit/available-subnet-stream.test.js","type":"ADDED","insertions":197,"deletions":0},{"file":"test/unit/networks-subnet-alloc.test.js","type":"ADDED","insertions":368,"deletions":0},{"file":"test/unit/networks.test.js","type":"MODIFIED","insertions":3,"deletions":-4},{"file":"test/unit/util-alloc.test.js","type":"ADDED","insertions":127,"deletions":0}],"sizeInsertions":1470,"sizeDeletions":-49}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Todd Whiteman","email":"todd.whiteman@joyent.com","username":"twhiteman"},{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},{"name":"Nick Zivkovic","email":"nick.zivkovic@joyent.com","username":"nickziv"}]}