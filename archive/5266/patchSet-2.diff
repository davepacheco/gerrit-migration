commit 9efa379f1c6858fe67bb6129af0d5237f0da8054 (refs/changes/66/5266/2)
Author: Ryan Zezeski <rpz@joyent.com>
Date:   2018-12-19T10:03:05-07:00 (10 months ago)
    
    OS-7457 i40e Tx freezes on zero descriptors

diff --git a/usr/src/uts/common/io/i40e/i40e_transceiver.c b/usr/src/uts/common/io/i40e/i40e_transceiver.c
index f23cdc0135..28f3b88dee 100644
--- a/usr/src/uts/common/io/i40e/i40e_transceiver.c
+++ b/usr/src/uts/common/io/i40e/i40e_transceiver.c
@@ -2469,9 +2469,17 @@ i40e_ring_tx(void *arg, mblk_t *mp)
 		needed_desc++;
 	}
 
+	/*
+	 * The second condition ensures that 'itrq_desc_tail' never
+	 * equals 'itrq_desc_head'. This enforces the rule found in
+	 * the second bullet point of section 8.4.3.1.5 of the XL710
+	 * PG, which declares the TAIL pointer in I40E_QTX_TAIL should
+	 * never overlap with the head. This means that we only ever
+	 * have 'itrq_tx_ring_size - 1' total available descriptors.
+	 */
 	mutex_enter(&itrq->itrq_tx_lock);
 	if (itrq->itrq_desc_free < i40e->i40e_tx_block_thresh ||
-	    itrq->itrq_desc_free < needed_desc) {
+	    (itrq->itrq_desc_free - 1) < needed_desc) {
 		txs->itxs_err_nodescs.value.ui64++;
 		mutex_exit(&itrq->itrq_tx_lock);
 		goto txfail;
