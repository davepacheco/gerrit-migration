From 1be3f58eea1c7a662cbdcd31c6856a5286fa760c Mon Sep 17 00:00:00 2001
From: Patrick Mooney <pmooney@pfmooney.com>
Date: Fri, 3 Aug 2018 20:21:34 +0000
Subject: [PATCH] OS-7102 expose pvclock to KVM guests

---
 configure         |  9 ++++++++-
 target-i386/kvm.c | 15 ++++++++++++++-
 2 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/configure b/configure
index b406ba4..a48edde 100755
--- a/configure
+++ b/configure
@@ -1777,10 +1777,17 @@ EOF
   kvm_cflags="$kvm_cflags -idirafter $source_path/compat"
   if compile_prog "$kvm_cflags" "" ; then
     kvm=yes
-    cat > $TMPC <<EOF
+    if test "$targetos" = "SunOS" ; then
+        cat > $TMPC <<EOF
+#include <sys/kvm_para.h>
+int main(void) { return 0; }
+EOF
+    else
+        cat > $TMPC <<EOF
 #include <linux/kvm_para.h>
 int main(void) { return 0; }
 EOF
+    fi
     if compile_prog "$kvm_cflags" "" ; then
       kvm_para=yes
     fi
diff --git a/target-i386/kvm.c b/target-i386/kvm.c
index ee5fc13..bb3f684 100644
--- a/target-i386/kvm.c
+++ b/target-i386/kvm.c
@@ -36,8 +36,12 @@
 #include "kvm_x86.h"
 
 #ifdef CONFIG_KVM_PARA
+#ifdef __sun__
+#include <sys/kvm_para.h>
+#else
 #include <linux/kvm_para.h>
 #endif
+#endif
 
 #ifdef __sun__
 #define	__u64	uint64_t
@@ -161,7 +165,16 @@ struct kvm_para_features {
     int cap;
     int feature;
 } para_features[] = {
+    /*
+     * This is a little hackish.  Upstream KVM has been refactored to make the
+     * process of exposing these related features more straightforward.  Rather
+     * than pull in all that delta, we just repeat the loop to set the
+     * additional needed bits.
+     */
     { KVM_CAP_CLOCKSOURCE, KVM_FEATURE_CLOCKSOURCE },
+    { KVM_CAP_CLOCKSOURCE, KVM_FEATURE_CLOCKSOURCE2 },
+    { KVM_CAP_CLOCKSOURCE, KVM_FEATURE_CLOCKSOURCE_STABLE_BIT },
+
     { KVM_CAP_NOP_IO_DELAY, KVM_FEATURE_NOP_IO_DELAY },
     { KVM_CAP_PV_MMU, KVM_FEATURE_MMU_OP },
 #ifdef KVM_CAP_ASYNC_PF
@@ -356,7 +369,7 @@ int kvm_arch_init_vcpu(CPUState *env)
     c = &cpuid_data.entries[cpuid_i++];
     memset(c, 0, sizeof(*c));
     c->function = KVM_CPUID_SIGNATURE;
-    c->eax = 0;
+    c->eax = KVM_CPUID_FEATURES;
     c->ebx = signature[0];
     c->ecx = signature[1];
     c->edx = signature[2];
-- 
2.21.0

