commit 2933bd16a531fd47491c988ab7c38e03b8f56b07 (refs/changes/94/3794/6)
Author: Chris Burroughs <chris.burroughs@joyent.com>
Date:   2018-06-19T16:11:34-04:00 (1 year, 4 months ago)
    
    TRITON-315 unit tests for removeOldCNToolsTarballs

diff --git a/.gitignore b/.gitignore
index 0bbb6d6..a812e15 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,8 +1,10 @@
-/node_modules
-/tmp
-/docs/*.json
-/docs/*.html
+*.vim
 /build
+/docs/*.html
+/docs/*.json
+/make_stamps
+/node_modules
+/npm-debug.log
 /sdcadm-*.sh
-*.vim
+/tmp
 man/man1/sdcadm.1
diff --git a/.nycrc b/.nycrc
new file mode 100644
index 0000000..d55f1f8
--- /dev/null
+++ b/.nycrc
@@ -0,0 +1,18 @@
+{
+    "all": true,
+    "include": [
+        "bin/**/*.js",
+        "cmd/**/*.js",
+        "lib/**/*.js"
+    ],
+    "report-dir": "./build/coverage",
+    "temp-directory": "./build/nyc_output",
+    "reporter": [
+      "cobertura",
+      "clover",
+      "json",
+      "json-summary",
+      "html",
+      "text"
+  ]
+}
diff --git a/Makefile b/Makefile
index 9cee6df..eb37a8a 100644
--- a/Makefile
+++ b/Makefile
@@ -21,7 +21,11 @@ EXTRA_DOC_DEPS += deps/restdown-brand-remora/.git
 RESTDOWN_FLAGS   = --brand-dir=deps/restdown-brand-remora
 JS_FILES	:= $(shell find lib test -name '*.js' | grep -v '/tmp/')
 ESLINT_FILES	= $(JS_FILES)
-CLEAN_FILES += ./node_modules ./build/sdcadm-*.sh ./build/sdcadm-*.imgmanifest ./build/shar-image ./man/man1/sdcadm.1 ./etc/sdcadm.completion
+BUILD = ./build
+CLEAN_FILES += ./node_modules ./build/sdcadm-*.sh ./build/sdcadm-*.imgmanifest ./build/shar-image ./man/man1/sdcadm.1 ./etc/sdcadm.completion $(BUILD)
+TAP := ./node_modules/.bin/tap
+TAPE := ./node_modules/.bin/tape
+TEST_UNIT_JOBS ?= 4
 
 
 NODE_PREBUILT_VERSION=v6.14.0
@@ -48,12 +52,19 @@ endif
 # Targets
 #
 .PHONY: all
-all: | $(NPM_EXEC)
-	MAKE_OVERRIDES='CTFCONVERT=/bin/true CTFMERGE=/bin/true' $(NPM) install
+all:  | $(NPM_EXEC)
+	MAKE_OVERRIDES='CTFCONVERT=/bin/true CTFMERGE=/bin/true' $(NPM) $(NPM_ENV) install
 	$(NODE) ./node_modules/.bin/kthxbai || true # work around trentm/node-kthxbai#1
 	$(NODE) ./node_modules/.bin/kthxbai
 	rm -rf ./node_modules/.bin/kthxbai ./node_modules/kthxbai
 
+$(TAPE):
+
+$(TAP):
+
+$(BUILD):
+	mkdir $@
+
 .PHONY: shar
 shar:
 	./tools/mk-shar -o $(TOP)/build -s $(STAMP)
@@ -62,6 +73,15 @@ shar:
 test:
 	./test/runtests
 
+.PHONY: test-unit
+test-unit: | $(TAP) $(BUILD)
+	$(TAP) --jobs=$(TEST_UNIT_JOBS) --output-file=$(BUILD)/test.unit.tap test/unit/**/*.test.js
+
+.PHONY: test-coverage-unit
+test-coverage-unit: | $(TAP) $(BUILD)
+	$(TAP) --jobs=$(TEST_UNIT_JOBS) --output-file=$(BUILD)/test.unit.tap --coverage \
+	test/unit/**/*.test.js
+
 .PHONY: release
 release: all man completion shar
 
diff --git a/lib/cli/do_update_gz_tools.js b/lib/cli/do_update_gz_tools.js
index 602fa2b..f9f0033 100644
--- a/lib/cli/do_update_gz_tools.js
+++ b/lib/cli/do_update_gz_tools.js
@@ -13,7 +13,6 @@ var fs = require('fs');
 var net = require('net');
 var util = require('util');
 var format = util.format;
-var path = require('path');
 
 var assert = require('assert-plus');
 var ProgressBar = require('progbar').ProgressBar;
@@ -22,6 +21,7 @@ var vasync = require('vasync');
 
 var common = require('../common');
 var errors = require('../errors');
+var steps = require('../steps');
 var ur = require('../ur');
 
 function UpdateGzTools(opts) {
@@ -243,7 +243,7 @@ UpdateGzTools.prototype.execute = function cExecute(opts, args, callback) {
 
     function updateScripts(cb) {
         progress('Updating global zone scripts');
-        vasync.pipeline({funcs: [
+        vasync.pipeline({arg: {progress: progress}, funcs: [
             function mountUsbKey(_, next) {
                 progress('Mounting USB key');
                 common.mountUsbKey(sdcadm.log, next);
@@ -271,26 +271,7 @@ UpdateGzTools.prototype.execute = function cExecute(opts, args, callback) {
                 common.execFilePlus({argv: argv, log: sdcadm.log}, next);
             },
 
-            // keep a finite number cn_tools backups on the usb key
-            function removeOldCNToolsTarballs(_, next) {
-                var backupPath = '/usbkey/extra/joysetup/';
-                var tarballs = fs.readdirSync(backupPath).filter(
-                    function isCNTools(p) {
-                        return (p.startsWith('cn_tools.') &&
-                                p.endsWith('tar.gz') &&
-                                p !== 'cn_tools.tar.gz');
-                    });
-                tarballs.sort();
-                tarballs.reverse();
-                var toDelete = tarballs.slice(4);
-                if (toDelete.length) {
-                    progress('Removing old cn backups: ' + toDelete.join(', '));
-                    toDelete.forEach(function rmBall(fname) {
-                        fs.unlinkSync(path.join(backupPath, fname));
-                    });
-                }
-                next();
-            },
+            steps.usbkey.removeOldCNToolsTarballs,
 
             function backupCNToolsFile(_, next) {
                 if (!fs.existsSync('/usbkey/extra/joysetup/cn_tools.tar.gz')) {
diff --git a/lib/steps/index.js b/lib/steps/index.js
index 5b6e24c..bb81417 100644
--- a/lib/steps/index.js
+++ b/lib/steps/index.js
@@ -38,5 +38,6 @@ module.exports = {};
         module.exports[symbol] = mod[symbol];
     });
 });
+module.exports.usbkey = require('./usbkey');
 
 // vim: set softtabstop=4 shiftwidth=4:
diff --git a/lib/steps/usbkey.js b/lib/steps/usbkey.js
new file mode 100644
index 0000000..3e32422
--- /dev/null
+++ b/lib/steps/usbkey.js
@@ -0,0 +1,43 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018 Joyent, Inc.
+ */
+'use strict';
+
+const fs = require('fs');
+const path = require('path');
+
+var assert = require('assert-plus');
+
+// keep a finite number cn_tools backups on the usb key
+function removeOldCNToolsTarballs(arg, next) {
+    assert.optionalFunc(arg.progress, 'arg.progress');
+
+    const progress = arg.progress || console.log;
+    const backupPath = '/usbkey/extra/joysetup/';
+    var tarballs = fs.readdirSync(backupPath).filter(
+        function isCNTools(p) {
+            return (p.startsWith('cn_tools.') &&
+                    p.endsWith('tar.gz') &&
+                    p !== 'cn_tools.tar.gz');
+        });
+    tarballs.sort();
+    tarballs.reverse();
+    const toDelete = tarballs.slice(4);
+    if (toDelete.length) {
+        progress('Removing old cn backups: ' + toDelete.join(', '));
+        toDelete.forEach(function rmBall(fname) {
+            fs.unlinkSync(path.join(backupPath, fname));
+        });
+    }
+    next();
+}
+
+module.exports = {
+    removeOldCNToolsTarballs: removeOldCNToolsTarballs
+};
diff --git a/package.json b/package.json
index c6a5e80..8da0659 100644
--- a/package.json
+++ b/package.json
@@ -37,6 +37,8 @@
     "marked-man": "0.1.4",
     "eslint": "4.13.1",
     "eslint-plugin-joyent": "~2.0.0",
+    "mock-fs": "4.4.x",
+    "tap": "^12.0.1",
     "zkstream": "0.10.1"
   },
   "engines": {
diff --git a/test/unit/steps/usbkey.test.js b/test/unit/steps/usbkey.test.js
new file mode 100644
index 0000000..021c7b6
--- /dev/null
+++ b/test/unit/steps/usbkey.test.js
@@ -0,0 +1,107 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018 Joyent, Inc.
+ */
+'use strict';
+
+const fs = require('fs');
+
+const mockfs = require('mock-fs');
+const tap = require('tap');
+
+const usbkey = require('../../../lib/steps/usbkey');
+
+const joysetupDir = '/usbkey/extra/joysetup/';
+
+tap.test('removeOldCNToolsTarballs', function (suite) {
+    suite.test('empty', function (t) {
+        mockfs({[joysetupDir]: {}});
+        usbkey.removeOldCNToolsTarballs({}, function () {
+            const stats = fs.statSync(joysetupDir);
+            t.ok(stats.isDirectory(joysetupDir));
+            const files = fs.readdirSync(joysetupDir);
+            t.equal(files.length, 0);
+            mockfs.restore();
+            t.end();
+        });
+    });
+
+    suite.test('other-files-untouched', function (t) {
+        mockfs({[joysetupDir]:
+                {'cn_tools.tar.gz': '',
+                 'joysetup.sh': '',
+                 'agentsetup.sh': '',
+                 'cn_tools.20180208T185323.tar.gz': ''}});
+        usbkey.removeOldCNToolsTarballs({}, function () {
+            const files = fs.readdirSync(joysetupDir);
+            t.ok(files.length === 4);
+            mockfs.restore();
+            t.end();
+        });
+    });
+
+    suite.test('prune', function (t) {
+        const isCNTools = function isCNTools(p) {
+            return (p.startsWith('cn_tools.') &&
+                    p.endsWith('tar.gz') &&
+                    p !== 'cn_tools.tar.gz');
+        };
+        const oldFormatTools = ['cn_tools.2017-12-14T15:57:59.179Z.tar.gz',
+                                'cn_tools.2017-08-31T14:36:03.728Z.tar.gz'];
+        const oldTools = ['cn_tools.20180201T000000.tar.gz',
+                          'cn_tools.20180201T204654.tar.gz'];
+        const cnTools = ['cn_tools.20180207T220522.tar.gz',
+                         'cn_tools.20180208T181727.tar.gz',
+                         'cn_tools.20180208T181853.tar.gz',
+                         'cn_tools.20180208T185323.tar.gz'];
+        const stdFiles =
+              {'cn_tools.tar.gz': '',
+               'joysetup.sh': '',
+               'agentsetup.sh': ''};
+        const checkRemoved = function checkRemoved(tt) {
+            const files = fs.readdirSync(joysetupDir);
+            tt.equal(files.length, 7);
+            const remainingTools = files.filter(isCNTools);
+            const remainingOther = files.filter(function (p) {
+                return (!isCNTools(p));
+            });
+            tt.deepEqual(remainingTools.slice().sort(),
+                         cnTools.slice().sort());
+            tt.deepEqual(remainingOther.slice().sort(),
+                         Object.keys(stdFiles).sort());
+            mockfs.restore();
+            tt.end();
+        };
+
+        t.test('prune-old-tarballs', function (tt) {
+            const fakeFiles = Object.assign({}, stdFiles);
+            for (let fname of [].concat(cnTools, oldTools)) {
+                fakeFiles[fname] = '';
+            }
+            mockfs({[joysetupDir]: fakeFiles});
+            usbkey.removeOldCNToolsTarballs({}, function () {
+                checkRemoved(tt);
+            });
+        });
+
+        t.test('prune-old-format', function (tt) {
+            const fakeFiles = Object.assign({}, stdFiles);
+            for (let fname of [].concat(cnTools, oldTools, oldFormatTools)) {
+                fakeFiles[fname] = '';
+            }
+            mockfs({[joysetupDir]: fakeFiles});
+            usbkey.removeOldCNToolsTarballs({}, function () {
+                checkRemoved(tt);
+            });
+        });
+
+        t.end();
+    });
+
+    suite.end();
+});
