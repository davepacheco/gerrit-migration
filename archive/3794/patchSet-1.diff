From 69c49a3b2b4511d3ceb0d858c1728a75ba1ca2b2 Mon Sep 17 00:00:00 2001
From: Chris Burroughs <chris.burroughs@joyent.com>
Date: Tue, 10 Apr 2018 14:15:43 -0400
Subject: [PATCH] WIP

---
 .gitignore                     |   2 +
 Makefile                       |  14 +++++
 lib/sdcadm.js                  |  23 +------
 lib/steps/index.js             |   1 +
 lib/steps/usbkey.js            |  45 ++++++++++++++
 package.json                   |  10 ++-
 test/unit/steps/usbkey.test.js | 108 +++++++++++++++++++++++++++++++++
 7 files changed, 182 insertions(+), 21 deletions(-)
 create mode 100644 lib/steps/usbkey.js
 create mode 100644 test/unit/steps/usbkey.test.js

diff --git a/.gitignore b/.gitignore
index 0bbb6d6..73f5c48 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,5 @@
+/coverage
+/.nyc_output
 /node_modules
 /tmp
 /docs/*.json
diff --git a/Makefile b/Makefile
index 5146213..a10c705 100644
--- a/Makefile
+++ b/Makefile
@@ -25,6 +25,8 @@ JSL_FILES_NODE	 = $(JS_FILES)
 JSSTYLE_FILES	 = $(JS_FILES)
 JSSTYLE_FLAGS	 = -f tools/jsstyle.conf
 CLEAN_FILES += ./node_modules ./build/sdcadm-*.sh ./build/sdcadm-*.imgmanifest ./build/shar-image ./man/man1/sdcadm.1 ./etc/sdcadm.completion
+TAPE := ./node_modules/.bin/tape
+NYC := ./node_modules/.bin/nyc
 
 
 NODE_PREBUILT_VERSION=v4.9.0
@@ -57,6 +59,10 @@ all: | $(NPM_EXEC)
 	$(NODE) ./node_modules/.bin/kthxbai
 	rm -rf ./node_modules/.bin/kthxbai ./node_modules/kthxbai
 
+$(TAPE):
+
+$(NYC):
+
 .PHONY: shar
 shar:
 	./tools/mk-shar -o $(TOP)/build -s $(STAMP)
@@ -65,6 +71,14 @@ shar:
 test:
 	./test/runtests
 
+.PHONY: unit
+unit: | $(TAPE)
+	$(TAPE) 'test/unit/**/*.test.js'
+
+.PHONY: coverage
+coverage: | $(NYC) $(TAPE)
+	$(NYC) $(TAPE) 'test/unit/**/*.test.js'
+
 .PHONY: release
 release: all man completion shar
 
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 72729ee..72ebd53 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -43,8 +43,10 @@ var lock = require('./locker').lock;
 var pkg = require('../package.json');
 var procedures = require('./procedures');
 var History = require('./history').History;
+var steps = require('./steps');
 var ur = require('./ur');
 
+
 var UA = format('%s/%s (node/%s; openssl/%s)', pkg.name, pkg.version,
         process.versions.node, process.versions.openssl);
 var UPDATE_PLAN_FORMAT_VER = 1;
@@ -1523,26 +1525,7 @@ SdcAdm.prototype.updateGzTools = function updateGzTools(options, callback) {
                 common.execFilePlus({argv: argv, log: self.log}, next);
             },
 
-            // keep a finite number cn_tools backups on the usb key
-            function removeOldCNToolsTarballs(_, next) {
-                var backupPath = '/usbkey/extra/joysetup/';
-                var tarballs = fs.readdirSync(backupPath).filter(
-                    function isCNTools(p) {
-                        return (p.startsWith('cn_tools.') &&
-                                p.endsWith('tar.gz') &&
-                                p !== 'cn_tools.tar.gz');
-                    });
-                tarballs.sort();
-                tarballs.reverse();
-                var toDelete = tarballs.slice(4);
-                if (toDelete.length) {
-                    progress('Removing old cn backups: ' + toDelete.join(', '));
-                    toDelete.forEach(function rmBall(fname) {
-                        fs.unlinkSync(path.join(backupPath, fname));
-                    });
-                }
-                next();
-            },
+            steps.usbkey.removeOldCNToolsTarballs(_, next),
 
             function backupCNToolsFile(_, next) {
                 if (!fs.existsSync('/usbkey/extra/joysetup/cn_tools.tar.gz')) {
diff --git a/lib/steps/index.js b/lib/steps/index.js
index a8f3472..1f8972c 100644
--- a/lib/steps/index.js
+++ b/lib/steps/index.js
@@ -37,5 +37,6 @@ module.exports = {};
         module.exports[symbol] = mod[symbol];
     });
 });
+module.exports.usbkey = require('./usbkey');
 
 // vim: set softtabstop=4 shiftwidth=4:
diff --git a/lib/steps/usbkey.js b/lib/steps/usbkey.js
new file mode 100644
index 0000000..0e9d0e6
--- /dev/null
+++ b/lib/steps/usbkey.js
@@ -0,0 +1,45 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018 Joyent, Inc.
+ */
+/* jsl:ignore */
+'use strict';
+/* jsl:end */
+
+const fs = require('fs');
+const path = require('path');
+
+var assert = require('assert-plus');
+
+// keep a finite number cn_tools backups on the usb key
+function removeOldCNToolsTarballs(arg, next) {
+    assert.optionalFunc(arg.progress, 'arg.progress');
+
+    const progress = arg.progress || console.log;
+    const backupPath = '/usbkey/extra/joysetup/';
+    var tarballs = fs.readdirSync(backupPath).filter(
+        function isCNTools(p) {
+            return (p.startsWith('cn_tools.') &&
+                    p.endsWith('tar.gz') &&
+                    p !== 'cn_tools.tar.gz');
+        });
+    tarballs.sort();
+    tarballs.reverse();
+    const toDelete = tarballs.slice(4);
+    if (toDelete.length) {
+        progress('Removing old cn backups: ' + toDelete.join(', '));
+        toDelete.forEach(function rmBall(fname) {
+            fs.unlinkSync(path.join(backupPath, fname));
+        });
+    }
+    next();
+}
+
+module.exports = {
+    removeOldCNToolsTarballs: removeOldCNToolsTarballs
+};
diff --git a/package.json b/package.json
index 27e4f68..ead489b 100644
--- a/package.json
+++ b/package.json
@@ -34,7 +34,15 @@
     "wf-client": "0.3.0"
   },
   "devDependencies": {
-    "marked-man": "0.1.4"
+    "marked-man": "0.1.4",
+    "mock-fs": "4.4.x",
+    "nyc": "11.6.0"
+  },
+  "nyc": {
+    "include": ["lib/**/*.js"],
+    "all": true,
+    "cache": true,
+    "reporter": ["cobertura", "html", "text"]
   },
   "engines": {
     "node": ">=0.10"
diff --git a/test/unit/steps/usbkey.test.js b/test/unit/steps/usbkey.test.js
new file mode 100644
index 0000000..7ec299b
--- /dev/null
+++ b/test/unit/steps/usbkey.test.js
@@ -0,0 +1,108 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018 Joyent, Inc.
+ */
+'use strict';
+
+const fs = require('fs');
+
+const mockfs = require('mock-fs');
+const test = require('tape');
+
+const usbkey = require('../../../lib/steps/usbkey'); // TODO: how to not be gross?
+
+const joysetupDir = '/usbkey/extra/joysetup/';
+
+test('removeOldCNToolsTarballs', function(outer) {
+    test('empty', function (t) {
+        mockfs({[joysetupDir]: {}});
+        usbkey.removeOldCNToolsTarballs({}, function() {
+            const stats = fs.statSync(joysetupDir);
+            t.ok(stats.isDirectory(joysetupDir));
+            const files = fs.readdirSync(joysetupDir)
+            t.equal(files.length, 0);
+            mockfs.restore();
+            t.end();
+        });
+    });
+
+    test('other-files-untouched', function (t) {
+        mockfs({[joysetupDir]:
+                {'cn_tools.tar.gz': '',
+                 'joysetup.sh': '',
+                 'agentsetup.sh': '',
+                 'cn_tools.20180208T185323.tar.gz': ''}});
+        usbkey.removeOldCNToolsTarballs({}, function() {
+            const files = fs.readdirSync(joysetupDir)
+            t.ok(files.length == 4);
+            mockfs.restore();
+            t.end();
+        });
+    });
+
+    test('prune', function (t) {
+        const isCNTools = function isCNTools(p) {
+            return (p.startsWith('cn_tools.') &&
+                    p.endsWith('tar.gz') &&
+                    p !== 'cn_tools.tar.gz');
+        };
+        const oldFormatTools = ['cn_tools.2017-12-14T15:57:59.179Z.tar.gz',
+                           'cn_tools.2017-08-31T14:36:03.728Z.tar.gz'];
+        const oldTools = ['cn_tools.20180201T000000.tar.gz',
+                          'cn_tools.20180201T204654.tar.gz'];
+        const cnTools = ['cn_tools.20180207T220522.tar.gz',
+                         'cn_tools.20180208T181727.tar.gz',
+                         'cn_tools.20180208T181853.tar.gz',
+                         'cn_tools.20180208T185323.tar.gz'];
+        const stdFiles = 
+              {'cn_tools.tar.gz': '',
+               'joysetup.sh': '',
+               'agentsetup.sh': ''};
+        const checkRemoved = function checkRemoved(tt) {
+                const files = fs.readdirSync(joysetupDir)
+                tt.equal(files.length, 7);
+                const remainingTools = files.filter(isCNTools);
+                const remainingOther = files.filter(function(p) {
+                    return (!isCNTools(p));
+                });
+                tt.deepEqual(remainingTools.slice().sort(),
+                             cnTools.slice().sort());
+                tt.deepEqual(remainingOther.slice().sort(),
+                             Object.keys(stdFiles).sort());
+                mockfs.restore();
+                tt.end()
+
+        };
+        
+        test('prune-old-tarballs', function (tt) {
+            const fakeFiles = Object.assign({}, stdFiles);
+            for (let fname of [].concat(cnTools, oldTools)) {
+                fakeFiles[fname] = '';
+            }
+            mockfs({[joysetupDir]: fakeFiles});
+            usbkey.removeOldCNToolsTarballs({}, function() {
+                checkRemoved(tt);
+            });
+        });
+
+        test('prune-old-format', function (tt) {
+            const fakeFiles = Object.assign({}, stdFiles);
+            for (let fname of [].concat(cnTools, oldTools, oldFormatTools)) {
+                fakeFiles[fname] = '';
+            }
+            mockfs({[joysetupDir]: fakeFiles});
+            usbkey.removeOldCNToolsTarballs({}, function() {
+                checkRemoved(tt);
+            });
+        });
+
+        t.end();
+    });
+
+    outer.end();
+});
-- 
2.21.0

