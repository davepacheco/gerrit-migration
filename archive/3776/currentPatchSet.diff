From 5b0660d25d531c8ea18cabf203cf5556c5e9a5aa Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Wed, 4 Apr 2018 14:38:53 -0700
Subject: [PATCH] TRITON-307 improve SAPI README with dev/test notes Reviewed
 by: Cody Peter Mello <cody.mello@joyent.com> Approved by: Cody Peter Mello
 <cody.mello@joyent.com>

---
 Makefile             |  12 +---
 README.md            | 158 ++++++++++++++++++++++++++++++++-----------
 etc/config.coal.json |  29 --------
 3 files changed, 119 insertions(+), 80 deletions(-)
 delete mode 100644 etc/config.coal.json

diff --git a/Makefile b/Makefile
index 5a08afa..8aaad6d 100644
--- a/Makefile
+++ b/Makefile
@@ -23,7 +23,7 @@ NODEUNIT	:= ./node_modules/.bin/nodeunit
 DOC_FILES	 = index.md
 RESTDOWN_FLAGS   = --brand-dir=deps/restdown-brand-remora
 EXTRA_DOC_DEPS += deps/restdown-brand-remora/.git
-JS_FILES	:= $(shell ls *.js) $(shell find cmd lib test tools -name '*.js')
+JS_FILES	:= $(shell ls *.js) $(shell find lib test tools -name '*.js')
 JSL_CONF_NODE	 = tools/jsl.node.conf
 JSL_FILES_NODE   = $(JS_FILES)
 JSSTYLE_FILES	 = $(JS_FILES)
@@ -58,15 +58,7 @@ all: $(SMF_MANIFESTS) | $(NODEUNIT) $(REPO_DEPS) sdc-scripts
 $(NODEUNIT): | $(NPM_EXEC)
 	$(NPM) install
 
-CLEAN_FILES += $(NODEUNIT) ./node_modules/tap ./test/tests.log
-
-#
-# Test SAPI in both modes: proto and full
-#
-.PHONY: test
-test: $(NODEUNIT)
-	MODE=proto $(NODEUNIT) test/*.test.js
-	MODE=full $(NODEUNIT) test/*.test.js
+CLEAN_FILES += ./node_modules
 
 
 #
diff --git a/README.md b/README.md
index a0ce77b..1fea6b9 100644
--- a/README.md
+++ b/README.md
@@ -5,67 +5,143 @@
 -->
 
 <!--
-    Copyright (c) 2016, Joyent, Inc.
+    Copyright (c) 2018, Joyent, Inc.
 -->
 
 # sdc-sapi
 
-This repository is part of the Joyent Triton project. See the [contribution
+SAPI is the Services API, one of the core services of Triton DataCenter
+("Triton" for short). This API allows operators to specify, configure, deploy,
+and upgrade applications in Triton. Specifically, SAPI is used to hold the
+configuration data for the services and instances that make up Triton itself --
+grouped under the "sdc" SAPI application. The "sdc" app name is historical:
+Triton DataCenter was initially known as SmartDataCenter (SDC).
+See [the SAPI docs](docs/index.md).
+
+Note: This repository is part of the Joyent Triton project. See the [contribution
 guidelines](https://github.com/joyent/triton/blob/master/CONTRIBUTING.md) --
 *Triton does not use GitHub PRs* -- and general documentation at the main
 [Triton project](https://github.com/joyent/triton) page.
 
-SAPI is the Services API.  This API allows operators to configure, deploy, and
-upgrade software using a set of loosely-coupled federated services.
-
-# Repository
-
-    bin/            Commands available in $PATH.
-    boot/           Configuration scripts on zone setup.
-    cmd/            Top-level commands.
-    deps/           Git submodules and/or commited 3rd-party deps should go
-                    here. See "node_modules/" for node.js deps.
-    docs/           Project docs (restdown)
-    etc/            Test configuration files for running SAPI locally
-    lib/            Source files.
-    node_modules/   Node.js dependencies
-    sapi_manifests/ SAPI manifests for zone configuration.
-    smf/manifests   SMF manifests
-    test/           Test suite (using nodeunit)
-    tools/          Miscellaneous dev/upgrade/deployment tools and data.
-    Makefile
-    package.json    npm module info (holds the project version)
-    README.md
-
 
 # Development
 
-To run a SAPI server locally:
+Typically, development of SAPI is done in
+[COAL](https://github.com/joyent/triton#getting-started) (a
+Triton-in-a-local-VMware-VM). It should be possible to run a SAPI server
+locally, but that's not well supported.
+
+## Quick dev cycle
+
+Warning: "./tools/rsync-to" is not a fully faithful build.
+
+1. Get a COAL running, including optionally a "coal" alias in your "~/.ssh/config" file:
+
+        Host coal
+            User root
+            Hostname 10.99.99.7
+            StrictHostKeyChecking no
+            UserKnownHostsFile /dev/null
+
+2. Get a local clone of the repo:
+
+        git clone git@github.com:joyent/sdc-sapi.git
+        cd sdc-sapi
+        make
+
+3. Make local edits to JS files, and sync those changes to your COAL:
+
+        ./tools/rsync-to coal
+
+   Warning: This method is *not perfect*. In particular, it allows for syncing
+   changes from a different architecture and OS, so binary modules can not
+   be handled. However, this can be handle for a quicker dev cycle to start.
+
+## Building SAPI images
+
+The more "correct" dev cycle, at least for final testing, is to create a new
+SAPI image for your changes. This can be done by following the procedure for
+building Triton component images defined [here](https://github.com/joyent/mountain-gorilla/blob/master/README.md).
+Or, for Joyent employees, you can use our Jenkins and the `TRY_BRANCH` build
+option:
+
+1. Push your change to a feature branch of https://github.com/joyent/sdc-sapi
+
+2. Build the "sapi" Jenkins job with `TRY_BRANCH=<your feature branch name>`.
+
+3. After the image is built, run this in COAL to update your SAPI using the
+   latest "sapi" image on the "experimental" channel of updates.joyent.com:
+
+        sdcadm up -C experimental sapi
+
 
-    git clone git@github.com:joyent/sdc-sapi.git
-    cd sapi
-    git submodule update --init
-    make all
-    node server.js
+## Commiting
 
-Before commiting/pushing run `make prepush` and, if warranted, get a code
-review.
+Before pushing, ensure your changes pass:
+
+    make prepush
+
+Also, directly pushes to "master" are not allowed. Changes must go through
+Joyent's Gerrit CR. See the note and link for contribution guidelines above.
 
 
 # Testing
 
-To test, SSH to your test machine and run:
+In addition to the test suite (see below), any significant changes to SAPI
+should also run through both (a) creating a SAPI image and updating SAPI in
+COAL using that (see "Building SAPI images" above) and (b) creating and
+setting up a new COAL using that SAPI image. The latter is important because
+SAPI is an early core zone in Triton DataCenter headnode setup, with
+interactions that are only tested with headnode setup.
+
+## Testing headnode setup
+
+If you created a `TRY_BRANCH` build of SAPI via Jenkins (see above), you can
+use that SAPI image in a new COAL via something like:
+
+    git clone git@github.com:joyent/sdc-headnode.git
+    cd sdc-headnode
+
+Include something like the following in "sdc-headnode/build.spec.local":
+
+    {
+        "build-tgz": "false",
+        "zones": {
+            "sapi": {
+                "source": "manta",
+                "branch": "<feature branch name>"
+            }
+        }
+    }
+
+Then run:
+
+    make coal-and-open
+
+If successful, that will create a COAL VMware VM using your custom SAPI
+image, start the VM, and setup the headnode successfully.
+
+
+## Test suite
+
+Testing prerequisites:
+
+- Set the marker file that allows testing in a TritonDC:
+
+        ssh coal
+        touch /lib/sdc/.sdc-test-no-production-data
+
+- Ensure that dev sample data has been added to your COAL:
+
+        sdcadm post-setup common-external-nics
+        sdcadm post-setup dev-sample-data
 
-    # sdc-login sapi
-    # /opt/smartdc/sapi/tests/runtests
 
-The full test suite takes approximately 8-10 minutes to run.  It also requires
-that both the IMGAPI and SAPI zones have external NICs, to communicate with
-updates.joyent.com.  Run this on the headnode for each that doesn't already
-have an external nic:
+To test, SSH to your test machine and run the "runtests" driver script:
 
-    /usbkey/scripts/add_external_nic.sh $(vmadm lookup -1 alias=~sapi)
-    /usbkey/scripts/add_external_nic.sh $(vmadm lookup -1 alias=~imgapi)
+    ssh coal
+    sdc-login -l sapi
+    /opt/smartdc/sapi/tests/runtests
 
 To run a single test (for example):
 
diff --git a/etc/config.coal.json b/etc/config.coal.json
deleted file mode 100644
index 4195c64..0000000
--- a/etc/config.coal.json
+++ /dev/null
@@ -1,29 +0,0 @@
-{
-	"log_options": {
-		"name": "sapi",
-		"level": "debug"
-	},
-	"mode": "proto",
-	"datacenter_name": "coal",
-	"moray": {
-		"srvDomain": "moray.coal.joyent.us",
-		"cueballOptions": {
-			"resolvers": ["binder.coal.joyent.us"]
-		}
-	},
-	"cnapi": {
-		"url": "http://cnapi.coal.joyent.us"
-	},
-	"vmapi": {
-		"url": "http://vmapi.coal.joyent.us"
-	},
-	"napi": {
-		"url": "http://napi.coal.joyent.us"
-	},
-	"imgapi": {
-		"url": "http://imgapi.coal.joyent.us"
-	},
-	"papi": {
-		"url": "http://papi.coal.joyent.us"
-	}
-}
-- 
2.21.0

