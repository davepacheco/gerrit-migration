From a826aed53e00a847df5e6fbbcc54b6276585b7f1 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 26 Oct 2018 14:55:24 -0700
Subject: [PATCH] TRITON-911 support role-operators group in cloudapi

---
 lib/auth.js  | 27 ++++++++++++++++++++++++---
 package.json |  2 +-
 2 files changed, 25 insertions(+), 4 deletions(-)

diff --git a/lib/auth.js b/lib/auth.js
index 24a64c6..2826fd8 100644
--- a/lib/auth.js
+++ b/lib/auth.js
@@ -498,14 +498,35 @@ function authorize(req, res, next) {
     var account = req.account;
     var caller  = req.caller;
     var mahi    = req.sdc.mahi;
+    var groups  = [];
 
     assert.ok(account);
     assert.ok(caller);
 
-    if (account.uuid === caller.uuid ||
-        typeof (caller.isAdmin) !== 'function' ||
-        caller.isAdmin()) {
+    /* An account operating on itself is always allowed. */
+    if (account.uuid === caller.uuid) {
+        return next();
+    }
+
+    if (typeof (caller.groups) === 'function') {
+        groups = caller.groups();
+    }
+
+    /*
+     * Members of role-operators are *only* operators when they provide the
+     * as-role header -- this is true even if they are also members of the
+     * regular operators group (isAdmin).
+     */
+    if (groups.indexOf('role-operators') !== -1) {
+        if (req.params['as-role'] === '_operator') {
+            return next();
+        }
 
+    } else if (typeof (caller.isAdmin) !== 'function' || caller.isAdmin()) {
+        /*
+         * Some tests and plugins depend on us calling isAdmin() specifically
+         * here to detect operators, *not* looking in groups.
+         */
         return next();
     }
 
diff --git a/package.json b/package.json
index 77afb91..a5bd86a 100644
--- a/package.json
+++ b/package.json
@@ -39,7 +39,7 @@
         "semver": "5.4.1",
         "strsplit": "1.0.0",
         "triton-metrics": "0.1.0",
-        "ufds": "1.4.0",
+        "ufds": "1.5.0",
         "vasync": "2.2.0",
         "verror": "1.10.0",
         "xregexp": "3.1.0"
-- 
2.21.0

