commit d6f7463ad76be40cc6c8970ba3622e793ba3c0e5 (refs/changes/79/1479/2)
Author: Robert Mustacchi <rm@joyent.com>
Date:   2017-02-09T18:30:02+00:00 (2 years, 8 months ago)
    
    MANTA-3154 mpu module should be md5 implementation agnostic

diff --git a/src/http/modules/mpu/ngx_http_mpu_commit_module.c b/src/http/modules/mpu/ngx_http_mpu_commit_module.c
index 5ba4cf95..a682babf 100644
--- a/src/http/modules/mpu/ngx_http_mpu_commit_module.c
+++ b/src/http/modules/mpu/ngx_http_mpu_commit_module.c
@@ -175,7 +175,6 @@
 #include <libgen.h>
 #include <stdarg.h>
 #include <sys/debug.h>
-#include <md5.h>
 #include <atomic.h>
 
 #include "deps/json-nvlist.h"
@@ -196,6 +195,17 @@
 #define	MIN(a, b)	((a) < (b) ? (a) : (b))
 #endif
 
+/*
+ * This module attempts to be agnostic to the md5 implementation in use;
+ * however, it does expect that the headers define MD5_DIGEST_LENGTH. This is
+ * currently defined by both the system headers on illumos and OpenSSL. While we
+ * could define it ourselves, if it's missing, that's a sign that we should
+ * figure out what md5 implementation we're actually using.
+ */
+#ifndef	MD5_DIGEST_LENGTH
+#error "md5 implementation headers missing common MD5_DIGEST_LENGTH macro"
+#endif
+
 /*
  * We read up to 512k into a buffer for the commit POST request body. Anything
  * larger is thrown out. This number is based on the idea that we could have
@@ -241,7 +251,7 @@ typedef struct {
 	ngx_int_t		mpcr_status;
 	ngx_buf_t		mpcr_ngx_buf;
 	ngx_md5_t		mpcr_md5;
-	char			mpcr_md5_buf[MD5_DIGEST_LENGTH];
+	unsigned char		mpcr_md5_buf[MD5_DIGEST_LENGTH];
 	char			mpcr_md5_b64[MPU_MD5_B64_LEN];
 	char			mpcr_error[MPU_ERR_BUF_LEN];
 } mpu_request_t;
