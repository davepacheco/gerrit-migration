commit 6faf85ba5d6cecb75977ba5c32a01f8e195c27be (refs/changes/62/5062/2)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2018-11-15T19:13:50+01:00 (11 months ago)
    
    TRITON-964 Add `flexible_disk` attribute support to Packages

diff --git a/etc/config.test.json b/etc/config.test.json
index 1e48931..d2db780 100644
--- a/etc/config.test.json
+++ b/etc/config.test.json
@@ -154,6 +154,14 @@
         },
         "alloc_server_spread": {
             "type": "string"
+        },
+        "flexible_disk": {
+            "type": "boolean",
+            "index": false
+        },
+        "disks": {
+            "type": "[object]",
+            "index": false
         }
     }
 }
diff --git a/lib/validations.js b/lib/validations.js
index d6866de..dd2e703 100644
--- a/lib/validations.js
+++ b/lib/validations.js
@@ -12,16 +12,13 @@
  * Validations run on each package.
  */
 
-var util = require('util');
-var sprintf = util.format;
-
 var BAD_NAME_RE = /[\_\-\.][\_\-\.]/;
 var NAME_RE = /^[a-zA-Z0-9]([a-zA-Z0-9\_\-\.]+)?[a-zA-Z0-9]$/;
 var UUID_RE = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
 var VALID_BRANDS = ['bhyve', 'joyent', 'joyent-minimal', 'kvm', 'lx'];
 var VALID_SPREADS = ['min-ram', 'random', 'min-owner'];
 
-///--- Validation helpers
+// -- Validation helpers
 
 function validUUID(uuid) {
     return UUID_RE.test(uuid);
@@ -112,6 +109,9 @@ function validate(pkg, schema) {
         if (expectedType === 'string' && actualType !== 'string') {
             invalid(name, 'must be string');
 
+        } else if (expectedType === 'boolean' && actualType !== 'boolean') {
+            invalid(name, 'must be boolean');
+
         } else if (expectedType === 'uuid' && !validUUID(val)) {
             invalid(name, 'must be UUID');
 
@@ -147,6 +147,23 @@ function validate(pkg, schema) {
                     invalid(name, 'must only contain UUIDs');
             }
 
+        } else if (expectedType === '[object]') {
+            if (!Array.isArray(val)) {
+                invalid(name, 'must be an array');
+
+            } else {
+                var nonObjects = val.filter(function filterNonObject(i) {
+                    return (Object.keys(i).length &&
+                        Object.keys(i).some(function someInvalidKey(k) {
+                            return k !== 'size';
+                        }));
+                });
+
+                if (nonObjects.length > 0)
+                    invalid(name, 'must only contain Objects with ' +
+                        '"size" property');
+            }
+
         } else if (expectedType === 'object' &&
                    (actualType !== 'object' || Array.isArray(val))) {
             invalid(name, 'must be a hash');
@@ -213,6 +230,11 @@ function validate(pkg, schema) {
                 ', and less or equal to ' + MAX_VCPUS);
     }
 
+    if (pkg.disks && pkg.flexible_disk !== true) {
+        invalid('disks',
+            'disks can be specified only for flexible_disk packages');
+    }
+
     if (errors.length)
         return errors;
 
diff --git a/package.json b/package.json
index 918be9e..2d80cd4 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdc-papi",
   "description": "Packages API",
-  "version": "7.1.1",
+  "version": "7.2.1",
   "author": "Joyent (joyent.com)",
   "private": true,
   "repository": {
diff --git a/sapi_manifests/papi/template b/sapi_manifests/papi/template
index 9e26247..5df61d6 100644
--- a/sapi_manifests/papi/template
+++ b/sapi_manifests/papi/template
@@ -163,6 +163,14 @@
         },
         "alloc_server_spread": {
             "type": "string"
+        },
+        "flexible_disk": {
+            "type": "boolean",
+            "index": false
+        },
+        "disks": {
+            "type": "[object]",
+            "index": false
         }
     }
 }
diff --git a/test/api.test.js b/test/api.test.js
index 217287f..0a1f02d 100644
--- a/test/api.test.js
+++ b/test/api.test.js
@@ -409,7 +409,9 @@ test('POST /packages (fields validation failed)', function (t) {
         description: 'This is a package description, and should be present',
         common_name: 'Regular 128MiB',
         fss: 25,
-        alloc_server_spread: 'invalid'
+        alloc_server_spread: 'invalid',
+        flexible_disk: 'ho-ho-ho!',
+        disks: [ {'foo': 'bar'} ]
     };
 
     client.post('/packages', pkg, function (err, req, res, _) {
@@ -420,6 +422,16 @@ test('POST /packages (fields validation failed)', function (t) {
         t.equal(err.body.message, 'Package is invalid');
 
         var expectedErrs = [
+            {
+                field: 'disks',
+                code: 'Invalid',
+                message: 'must only contain Objects with "size" property'
+            },
+            {
+                field: 'flexible_disk',
+                code: 'Invalid',
+                message: 'must be boolean'
+            },
             { field: 'networks',
               code: 'Invalid',
               message: 'must only contain UUIDs' },
@@ -444,7 +456,13 @@ test('POST /packages (fields validation failed)', function (t) {
             { field: 'zfs_io_priority',
               code: 'Invalid',
               message: 'must be greater or equal to 0, and less than or ' +
-                  'equal to 16383' }
+                  'equal to 16383' },
+            {
+                field: 'disks',
+                code: 'Invalid',
+                message: 'disks can be specified only for flexible_disk' +
+                ' packages'
+            }
         ];
         t.deepEqual(err.body.errors, expectedErrs);
 
@@ -472,7 +490,9 @@ test('POST /packages (quota must be multiple of 1024)', function (t) {
         uuid: 'ebb58a8c-b77e-4559-bbf0-19ebd67973f0',
         description: 'This is a package description, and should be present',
         common_name: 'Regular 128MiB',
-        fss: 25
+        fss: 25,
+        flexible_disk: true,
+        disks: [ {} ]
     };
 
     client.post('/packages', pkg, function (err, req, res, _) {
@@ -528,7 +548,11 @@ test('POST /packages (VCPUS exceeding MAX value)', function (t) {
         uuid: 'ebb58a8c-b77e-4559-bbf0-19ebd67973f0',
         description: 'This is a package description, and should be present',
         common_name: 'Regular 128MiB',
-        fss: 25
+        fss: 25,
+        flexible_disk: true,
+        disks: [ {
+            size: 'remaining'
+        } ]
     };
 
     client.post('/packages', pkg, function (err, req, res, _) {
