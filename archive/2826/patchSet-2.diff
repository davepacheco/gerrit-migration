From e001321cd554585d859fc4de4232160b4783c8ad Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Thu, 19 Oct 2017 20:47:18 +0000
Subject: [PATCH] MANTA-3223 Registrar should stop relying on node-zkplus

---
 lib/register.js | 46 +++++++++++++++++++++++++++++++++++-----------
 lib/zk.js       | 20 ++++++++++++++++----
 main.js         | 13 +++++++++----
 package.json    |  2 +-
 4 files changed, 61 insertions(+), 20 deletions(-)

diff --git a/lib/register.js b/lib/register.js
index b956d78..41701b8 100644
--- a/lib/register.js
+++ b/lib/register.js
@@ -55,11 +55,11 @@ function registerService(opts, cb) {
 
     log.debug('registerService(%s): entered', opts.path);
 
-    var obj = {
+    var data = new Buffer(JSON.stringify({
         type: 'service',
         service: opts.registration.service
-    };
-    opts.zk.put(opts.path, obj, function (err) {
+    }), 'utf8');
+    zk.set(opts.path, data, opts.version, function (err) {
         if (err) {
             log.error(err, 'registerService: put failed');
             cb(err);
@@ -83,9 +83,13 @@ function cleanupPreviousEntries(opts, cb) {
 
     log.debug('cleanupPreviousEntries(%j): entered', opts.nodes);
     vasync.forEachParallel({
-        func: function _unlink(n, _cb) {
-            zk.unlink(n, function (err) {
-                if (err && err.name !== 'NO_NODE') {
+        func: function _delete(n, _cb) {
+            if (zk.ephemerals[n])
+                delete zk.ephemerals[n];
+
+            var ver = opts.version !== undefined ? opts.version : -1;
+            zk.delete(n, ver, function (err) {
+                if (err && err.code !== 'NO_NODE') {
                     _cb(err);
                 } else {
                     _cb();
@@ -111,9 +115,13 @@ function setupDirectories(opts, cb) {
     var log = opts.log;
     var zk = opts.zk;
 
+    var nullBuffer = new Buffer('null', 'ascii');
+
     log.debug('setupDirectories(%j): entered', opts.nodes);
     vasync.forEachParallel({
-        func: zk.mkdirp.bind(zk),
+        func: function (dirname, cb) {
+           zk.createWithEmptyParents(dirname, nullBuffer, {}, cb);
+        },
         inputs: opts.nodes.map(function (p) {
             return (path.dirname(p));
         })
@@ -154,9 +162,21 @@ function registerEntries(opts, cb) {
                 ports: ports
             };
             var _opts = {
-                flags: ['ephemeral_plus']
+                flags: ['EPHEMERAL']
             };
-            zk.create(n, _obj, _opts, once(_cb));
+            var data = new Buffer(JSON.stringify(_obj), 'utf8');
+            zk.create(n, data, _opts, once(function (err) {
+                if (err) {
+                    _cb(err);
+                } else {
+                    zk.ephemerals[n] = {
+                        data: data,
+                        flags: _opts.flags,
+                        path: n
+                    };
+                    _cb();
+                }
+	    }));
         },
         inputs: opts.nodes
     }, function (err) {
@@ -272,12 +292,16 @@ function unregister(opts, cb) {
             _cb = once(_cb);
 
             log.debug('unregister: deleting %s', n);
-            zk.unlink(n, function (err) {
+            var ver = opts.version !== undefined ? opts.version : -1;
+            if (zk.ephemerals[n]) {
+                delete zk.ephemerals[n];
+            }
+            zk.delete(n, ver, function (err) {
                 if (err) {
                     log.debug(err, 'unregister: failed to delete %s', n);
                     _cb(err);
                 } else {
-                    log.debug('unregister: unlink(%s) done', n);
+                    log.debug('unregister: delete(%s) done', n);
                     cb();
                 }
             });
diff --git a/lib/zk.js b/lib/zk.js
index 7ea4336..2bb59a8 100644
--- a/lib/zk.js
+++ b/lib/zk.js
@@ -12,7 +12,7 @@ var assert = require('assert-plus');
 var backoff = require('backoff');
 var once = require('once');
 var vasync = require('vasync');
-var zkplus = require('zkplus');
+var zkstream = require('zkstream');
 
 
 
@@ -55,6 +55,18 @@ function patchClient(zk) {
         }, cb);
     };
 
+    zk.ephemerals = {};
+    zk.recreateEphemerals = function _recreate(cb) {
+        assert.func(cb, 'callback');
+        vasync.forEachPipeline({
+            func: function (k, cb) {
+                var e = zk.ephemerals[key];
+                zk.create(k, e.data, {flags: e.flags}, cb);
+            },
+            inputs: Object.keys(zk.ephemerals)
+        }, cb);
+    }
+
     return (zk);
 }
 
@@ -67,15 +79,15 @@ function createZKClient(opts, cb) {
 
     assert.ok((opts.servers.length > 0), 'options.servers empty');
     opts.servers.forEach(function (s) {
-        assert.string(s.host, 'servers.host');
+        assert.string(s.address, 'servers.host');
         assert.number(s.port, 'servers.port');
     });
 
     cb = once(cb);
 
     function create(_, _cb) {
-        var client = zkplus.createClient(opts);
-        client.connect(function (err) {
+        var client = new zkstream.Client(opts);
+        client.on('connect', function (err) {
             if (err) {
                 _cb(err);
             } else {
diff --git a/main.js b/main.js
index 3f9b4b3..b8c7e0d 100644
--- a/main.js
+++ b/main.js
@@ -132,13 +132,18 @@ function usage(help, msg) {
         });
 
         // annoyingly this fires twice, so ignore the first one
-        zk.once('connect', function () {
-            zk.on('connect', function () {
-                LOG.info('zookeeper: reconnected');
+        zk.on('connect', function () {
+            LOG.info('zookeeper: reconnected');
+            zk.recreateEphemerals(function (err) {
+                if (err) {
+                    LOG.info({
+                        err: err
+                    }, 'zookeeper: recreate ephemerals');
+                }
             });
         });
 
-        zk.on('session_expired', function force_restart() {
+        zk.on('expire', function force_restart() {
             LOG.fatal('Zookeeper session_expired event; exiting');
             process.exit(1);
         });
diff --git a/package.json b/package.json
index afd4340..4f752df 100644
--- a/package.json
+++ b/package.json
@@ -18,7 +18,7 @@
         "once": "1.3.0",
         "vasync": "1.5.0",
         "verror": "1.4.0",
-        "zkplus": "git://github.com/mcavage/node-zkplus.git#master"
+        "zkstream":"git+https://cr.joyent.us/joyent/node-zkstream#e5db113bd2b0e960e05dd44504c06cbc998553b7"
     },
     "devDependencies": {
         "faucet": "0.0.1",
-- 
2.21.0

