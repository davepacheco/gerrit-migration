From 5e257d045f90fefefe7ef5181f5258249f893a48 Mon Sep 17 00:00:00 2001
From: Mike Gerdts <mike.gerdts@joyent.com>
Date: Sun, 14 Jan 2018 18:20:08 +0000
Subject: [PATCH] OS-6594 zoneadmd forgot to setenv _ZONECFG_device_resources

---
 usr/src/cmd/zoneadmd/zoneadmd.c | 42 ++++++++++++++++++++++++++-------
 1 file changed, 33 insertions(+), 9 deletions(-)

diff --git a/usr/src/cmd/zoneadmd/zoneadmd.c b/usr/src/cmd/zoneadmd/zoneadmd.c
index 5d3adcebc6..5e085ac9a0 100644
--- a/usr/src/cmd/zoneadmd/zoneadmd.c
+++ b/usr/src/cmd/zoneadmd/zoneadmd.c
@@ -22,7 +22,7 @@
 /*
  * Copyright (c) 2003, 2010, Oracle and/or its affiliates. All rights reserved.
  * Copyright 2014 Nexenta Systems, Inc. All rights reserved.
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  * Copyright (c) 2016 by Delphix. All rights reserved.
  */
 
@@ -778,6 +778,20 @@ mount_early_fs(void *data, const char *spec, const char *dir,
 	return (0);
 }
 
+/*
+ * Replace characters other than [A-Za-z0-9_] with '_' so that the string is a
+ * valid environment varialbe name.
+ */
+static void
+sanitize_env_var_name(char *var)
+{
+	for (char *p = var; *p != '\0'; p++) {
+		if (!isalnum(*p) && *p != '_') {
+			*p = '_';
+		}
+	}
+}
+
 /*
  * env variable name format
  *	_ZONECFG_{resource name}_{identifying attr. name}_{property name}
@@ -786,7 +800,6 @@ mount_early_fs(void *data, const char *spec, const char *dir,
 static void
 set_zonecfg_env(char *rsrc, char *attr, char *name, char *val)
 {
-	char *p;
 	/* Enough for maximal name, rsrc + attr, & slop for ZONECFG & _'s */
 	char nm[2 * MAXNAMELEN + 32];
 
@@ -797,9 +810,7 @@ set_zonecfg_env(char *rsrc, char *attr, char *name, char *val)
 		(void) snprintf(nm, sizeof (nm), "_ZONECFG_%s_%s_%s", rsrc,
 		    attr, name);
 
-	p = nm;
-	while ((p = strchr(p, '-')) != NULL)
-		*p++ = '_';
+	sanitize_env_var_name(nm);
 
 	(void) setenv(nm, val, 1);
 }
@@ -866,23 +877,36 @@ setup_subproc_env(boolean_t debug)
 	if ((res = zonecfg_setdevent(snap_hndl)) != Z_OK)
 		goto done;
 
+	dev_resources[0] = '\0';
 	while (zonecfg_getdevent(snap_hndl, &dtab) == Z_OK) {
 		struct zone_res_attrtab *rap;
 		char *match;
 
 		match = dtab.zone_dev_match;
 
-		(void) strlcat(dev_resources, match, sizeof (dev_resources));
-		(void) strlcat(dev_resources, " ", sizeof (dev_resources));
+		set_zonecfg_env(RSRC_DEV, match, "path", match);
 
 		for (rap = dtab.zone_dev_attrp; rap != NULL;
-		    rap = rap->zone_res_attr_next)
+		    rap = rap->zone_res_attr_next) {
 			set_zonecfg_env(RSRC_DEV, match,
 			    rap->zone_res_attr_name, rap->zone_res_attr_value);
-	}
+		}
 
+		/*
+		 * _ZONECFG_device_resources will contain a space separated list
+		 * of devices that have _ZONECFG_device_<device>* environment
+		 * variables.  So that each element of the list matches up with
+		 * <device>, each list item needs to be sanitized in the same
+		 * way that environment variable names are sanitized.
+		 */
+		sanitize_env_var_name(match);
+		(void) strlcat(dev_resources, match, sizeof (dev_resources));
+		(void) strlcat(dev_resources, " ", sizeof (dev_resources));
+	}
 	(void) zonecfg_enddevent(snap_hndl);
 
+	(void) setenv("_ZONECFG_device_resources", dev_resources, 1);
+
 	if ((res = zonecfg_setattrent(snap_hndl)) != Z_OK)
 		goto done;
 
-- 
2.21.0

