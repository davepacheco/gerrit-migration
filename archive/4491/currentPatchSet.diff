commit 9215ee7500b9a07ffc7d733a8a61b7a4e8a5be3d (refs/changes/91/4491/3)
Author: Nick Zivkovic <nick.zivkovic@joyent.com>
Date:   2018-07-19T17:18:06+00:00 (1 year, 3 months ago)
    
    TRITON-575 Should modify and document NAPI endpoints
    Reviewed by: Cody Peter Mello <melloc@writev.io>
    Approved by: Cody Peter Mello <melloc@writev.io>

diff --git a/docs/index.md b/docs/index.md
index eddd50b..0e24d0a 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -58,6 +58,29 @@ properties from the IP (including **reserved**, **belongs_to_uuid**, and
 **belongs_to_type**).  This therefore makes the IP available for automatic
 provisioning again.
 
+# Ping NAPI
+
+## Ping (GET /ping)
+
+This endpoint gives us a general status report from NAPI. It indicates if NAPI
+is fully initialized, and if so, which features are enabled.
+
+### Example
+
+```
+GET /ping
+{
+  "config": {
+      "fabrics_enabled": true,
+      "subnet_alloc_enabled": false
+  },
+  "healthy": true,
+  "services": {
+    "moray": "online"
+  },
+  "status": "OK"
+}
+```
 
 # Nic Tags
 
@@ -1696,6 +1719,20 @@ In the example above, the node will boot with one aggregation, aggr0, with
 **Note: changes to aggregations will only take effect at the next reboot
 of the Compute Node that hosts them.**
 
+# Internal Endpoints
+
+These endpoints are intended for use by developers and/or other internal
+components of the Triton stack.
+
+## RunGC (GET /manage/gc)
+
+If NAPI has been executed with the correct CLI options, a developer can use this
+endpoint to tell the node.js runtime to garbage collect allocated objects. If
+NAPI does not have access to the node GC, it will return an error. Otherwise it
+will run the GC and return heap usage statistics from before and after the GC
+run. This endpoint is usually used for getting memory usage information or
+forcing a GC run to help determine whether there's a memory leak.
+
 
 # Pagination
 
diff --git a/lib/endpoints/aggregations.js b/lib/endpoints/aggregations.js
index acd219b..1301280 100644
--- a/lib/endpoints/aggregations.js
+++ b/lib/endpoints/aggregations.js
@@ -144,23 +144,23 @@ function register(http, before) {
         restify.conditionalRequest()
     ]);
 
-    http.get({ path: '/aggregations', name: 'ListAggregations' },
+    http.get({ path: '/aggregations', name: 'listaggregations' },
         before, listAggregations);
-    http.head({ path: '/aggregations', name: 'HeadAggregations' },
+    http.head({ path: '/aggregations', name: 'headaggregations' },
         before, listAggregations);
 
-    http.post({ path: '/aggregations', name: 'CreateAggregation' },
+    http.post({ path: '/aggregations', name: 'createaggregation' },
             before, postAggregation);
 
-    http.get({ path: '/aggregations/:id', name: 'GetAggregation' },
+    http.get({ path: '/aggregations/:id', name: 'getaggregation' },
         aggrRequired, getAggregation);
-    http.head({ path: '/aggregations/:id', name: 'HeadAggregation' },
+    http.head({ path: '/aggregations/:id', name: 'headaggregation' },
         aggrRequired, getAggregation);
 
-    http.put({ path: '/aggregations/:id', name: 'UpdateAggregation' },
+    http.put({ path: '/aggregations/:id', name: 'updateaggregation' },
         aggrRequired, putAggregation);
 
-    http.del({ path: '/aggregations/:id', name: 'DeleteAggregation' },
+    http.del({ path: '/aggregations/:id', name: 'deleteaggregation' },
         aggrRequired, deleteAggregation);
 }
 
diff --git a/lib/endpoints/fabrics/networks.js b/lib/endpoints/fabrics/networks.js
index 83719cd..e05c42d 100644
--- a/lib/endpoints/fabrics/networks.js
+++ b/lib/endpoints/fabrics/networks.js
@@ -207,17 +207,17 @@ function register(http, serverBefore) {
     var path = '/fabrics/:owner_uuid/vlans/:vlan_id/networks';
     var perObjPath = path + '/:uuid';
 
-    http.post({ path: path, name: 'createFabricNetwork' },
+    http.post({ path: path, name: 'createfabricnetwork' },
         before, createFabricNetwork);
-    http.get({ path: path, name: 'listFabricNetworks' }, before,
+    http.get({ path: path, name: 'listfabricnetworks' }, before,
         listFabricNetworks);
 
-    http.get({ path: perObjPath, name: 'getFabricNetwork' },
+    http.get({ path: perObjPath, name: 'getfabricnetwork' },
         fabricNetRequired, getFabricNetwork);
-    http.del({ path: perObjPath, name: 'delFabricNetwork' },
+    http.del({ path: perObjPath, name: 'delfabricnetwork' },
         fabricNetRequired, delFabricNetwork);
 
-    http.put({ path: perObjPath, name: 'updateFabricNetwork' },
+    http.put({ path: perObjPath, name: 'updatefabricnetwork' },
         fabricNetRequired, updateFabricNetwork);
 }
 
diff --git a/lib/endpoints/fabrics/vlans.js b/lib/endpoints/fabrics/vlans.js
index 5adf7b5..06b1e00 100644
--- a/lib/endpoints/fabrics/vlans.js
+++ b/lib/endpoints/fabrics/vlans.js
@@ -174,16 +174,16 @@ function register(http, serverBefore) {
     var path = '/fabrics/:owner_uuid/vlans';
     var perObjPath = path + '/:vlan_id';
 
-    http.del({ path: perObjPath, name: 'delFabricVLAN' },
+    http.del({ path: perObjPath, name: 'deletefabricvlan' },
         before, delFabricVLAN);
-    http.get({ path: path, name: 'listFabricVLANs' },
+    http.get({ path: path, name: 'listfabricvlans' },
         before, listFabricVLANs);
-    http.post({ path: path, name: 'createFabricVLAN' },
+    http.post({ path: path, name: 'createfabricvlan' },
         before.concat(getFabric), createFabricVLAN);
 
-    http.get({ path: perObjPath, name: 'getFabricVLAN' },
+    http.get({ path: perObjPath, name: 'getfabricvlan' },
         vlanRequired, getFabricVLAN);
-    http.put({ path: perObjPath, name: 'updateFabricVLAN' },
+    http.put({ path: perObjPath, name: 'updatefabricvlan' },
         vlanRequired, updateFabricVLAN);
 }
 
diff --git a/lib/endpoints/manage.js b/lib/endpoints/manage.js
index d0153fb..98b7b62 100644
--- a/lib/endpoints/manage.js
+++ b/lib/endpoints/manage.js
@@ -50,9 +50,9 @@ function runGC(req, res, next) {
 
 
 function register(http, before) {
-    http.get({ path: '/manage/gc', name: 'RunGC' },
+    http.get({ path: '/manage/gc', name: 'rungc' },
         before, runGC);
-    http.head({ path: '/manage/gc', name: 'RunGC' },
+    http.head({ path: '/manage/gc', name: 'rungc' },
         before, runGC);
 }
 
diff --git a/lib/endpoints/network-pools.js b/lib/endpoints/network-pools.js
index 120d489..78ac3ea 100644
--- a/lib/endpoints/network-pools.js
+++ b/lib/endpoints/network-pools.js
@@ -146,20 +146,20 @@ function register(http, before) {
         restify.conditionalRequest()
     ]);
 
-    http.get({ path: '/network_pools', name: 'ListNetworkPools' },
+    http.get({ path: '/network_pools', name: 'listnetworkpools' },
         before, listNetworkPools);
-    http.head({ path: '/network_pools', name: 'HeadNetworkPools' },
+    http.head({ path: '/network_pools', name: 'headnetworkpools' },
         before, listNetworkPools);
-    http.post({ path: '/network_pools', name: 'CreateNetworkPool' },
+    http.post({ path: '/network_pools', name: 'createnetworkpool' },
         before, postNetworkPool);
 
-    http.get({ path: '/network_pools/:uuid', name: 'GetNetworkPool' },
+    http.get({ path: '/network_pools/:uuid', name: 'getnetworkpool' },
         poolRequired, getNetworkPool);
-    http.head({ path: '/network_pools/:uuid', name: 'HeadNetworkPool' },
+    http.head({ path: '/network_pools/:uuid', name: 'headnetworkpool' },
         poolRequired, getNetworkPool);
-    http.put({ path: '/network_pools/:uuid', name: 'UpdateNetworkPool' },
+    http.put({ path: '/network_pools/:uuid', name: 'updatenetworkpool' },
         poolRequired, putNetworkPool);
-    http.del({ path: '/network_pools/:uuid', name: 'DeleteNetworkPool' },
+    http.del({ path: '/network_pools/:uuid', name: 'deletenetworkpool' },
         poolRequired, deleteNetworkPool);
 }
 
diff --git a/lib/endpoints/networks/index.js b/lib/endpoints/networks/index.js
index 9194ffd..fe1e5e9 100644
--- a/lib/endpoints/networks/index.js
+++ b/lib/endpoints/networks/index.js
@@ -181,22 +181,22 @@ function register(http, before) {
         restify.conditionalRequest()
     ]);
 
-    http.post({ path: '/networks', name: 'CreateNetwork' },
+    http.post({ path: '/networks', name: 'createnetwork' },
         before, postNetwork);
-    http.get({ path: '/networks', name: 'ListNetworks' },
+    http.get({ path: '/networks', name: 'listnetworks' },
         before, listNetworks);
-    http.head({ path: '/networks', name: 'HeadNetworks' },
+    http.head({ path: '/networks', name: 'headnetworks' },
         before, listNetworks);
 
-    http.get({ path: '/networks/:uuid', name: 'GetNetwork' },
+    http.get({ path: '/networks/:uuid', name: 'getnetwork' },
         netRequired, getNetwork);
-    http.head({ path: '/networks/:uuid', name: 'HeadNetwork' },
+    http.head({ path: '/networks/:uuid', name: 'headnetwork' },
         netRequired, getNetwork);
 
-    http.put({ path: '/networks/:uuid', name: 'PutNetwork' },
+    http.put({ path: '/networks/:uuid', name: 'putnetwork' },
         netRequired, putNetwork);
 
-    http.del({ path: '/networks/:uuid', name: 'DeleteNetwork' },
+    http.del({ path: '/networks/:uuid', name: 'deletenetwork' },
         netRequired.concat(ensureNetworkUnused), deleteNetwork);
 }
 
diff --git a/lib/endpoints/networks/ips.js b/lib/endpoints/networks/ips.js
index a1135fb..c5f6994 100644
--- a/lib/endpoints/networks/ips.js
+++ b/lib/endpoints/networks/ips.js
@@ -192,14 +192,14 @@ function register(http, before) {
         restify.conditionalRequest()
     ]);
 
-    http.get({ path: '/networks/:network_uuid/ips', name: 'ListIPs' },
+    http.get({ path: '/networks/:network_uuid/ips', name: 'listips' },
         beforeAll, listIPs);
-    http.head({ path: '/networks/:network_uuid/ips', name: 'HeadIPs' },
+    http.head({ path: '/networks/:network_uuid/ips', name: 'headips' },
         beforeAll, listIPs);
 
-    http.get({ path: '/networks/:network_uuid/ips/:ip_addr', name: 'GetIP' },
+    http.get({ path: '/networks/:network_uuid/ips/:ip_addr', name: 'getip' },
         ipRequired, getIP);
-    http.put({ path: '/networks/:network_uuid/ips/:ip_addr', name: 'UpdateIP' },
+    http.put({ path: '/networks/:network_uuid/ips/:ip_addr', name: 'updateip' },
         ipRequired, putIP);
 }
 
diff --git a/lib/endpoints/networks/nics.js b/lib/endpoints/networks/nics.js
index 332bac7..2c2cc95 100644
--- a/lib/endpoints/networks/nics.js
+++ b/lib/endpoints/networks/nics.js
@@ -47,7 +47,7 @@ function postNetworkNic(req, res, next) {
  */
 function register(http, before) {
     http.post(
-        { path: '/networks/:network_uuid/nics', name: 'ProvisionNic' },
+        { path: '/networks/:network_uuid/nics', name: 'provisionnic' },
         before, postNetworkNic);
 }
 
diff --git a/lib/endpoints/nic-tags.js b/lib/endpoints/nic-tags.js
index 6a3a3de..1690209 100644
--- a/lib/endpoints/nic-tags.js
+++ b/lib/endpoints/nic-tags.js
@@ -110,20 +110,20 @@ function deleteNicTag(req, res, next) {
  * Register all endpoints with the restify server
  */
 function register(http, before) {
-    http.get({ path: '/nic_tags', name: 'ListNicTags' },
+    http.get({ path: '/nic_tags', name: 'listnictags' },
         before, listNicTags);
-    http.head({ path: '/nic_tags', name: 'HeadNicTags' },
+    http.head({ path: '/nic_tags', name: 'headnictags' },
         before, listNicTags);
-    http.post({ path: '/nic_tags', name: 'CreateNicTag' },
+    http.post({ path: '/nic_tags', name: 'createnictag' },
         before, postNicTag);
 
-    http.get({ path: '/nic_tags/:name', name: 'GetNicTag' },
+    http.get({ path: '/nic_tags/:name', name: 'getnictag' },
         before, getNicTag);
-    http.head({ path: '/nic_tags/:name', name: 'headNicTag' },
+    http.head({ path: '/nic_tags/:name', name: 'headnictag' },
         before, getNicTag);
-    http.put({ path: '/nic_tags/:oldname', name: 'UpdateNicTag' },
+    http.put({ path: '/nic_tags/:oldname', name: 'updatenictag' },
         before, putNicTag);
-    http.del({ path: '/nic_tags/:name', name: 'DeleteNicTag' },
+    http.del({ path: '/nic_tags/:name', name: 'deletenictag' },
         before, deleteNicTag);
 }
 
diff --git a/lib/endpoints/nics.js b/lib/endpoints/nics.js
index fa4d0b6..7375458 100644
--- a/lib/endpoints/nics.js
+++ b/lib/endpoints/nics.js
@@ -180,20 +180,20 @@ function register(http, before) {
         restify.conditionalRequest()
     ]);
 
-    http.get({ path: '/nics', name: 'ListNics' },
+    http.get({ path: '/nics', name: 'listnics' },
         before, listNics);
-    http.head({ path: '/nics', name: 'HeadNics' },
+    http.head({ path: '/nics', name: 'headnics' },
         before, listNics);
-    http.post({ path: '/nics', name: 'CreateNic' },
+    http.post({ path: '/nics', name: 'createnic' },
             before, postNic);
 
-    http.get({ path: '/nics/:mac', name: 'GetNic' },
+    http.get({ path: '/nics/:mac', name: 'getnic' },
         nicRequired, getNic);
-    http.head({ path: '/nics/:mac', name: 'HeadNic' },
+    http.head({ path: '/nics/:mac', name: 'headnic' },
         nicRequired, getNic);
-    http.put({ path: '/nics/:mac', name: 'UpdateNic' },
+    http.put({ path: '/nics/:mac', name: 'updatenic' },
         nicRequired, putNic);
-    http.del({ path: '/nics/:mac', name: 'DeleteNic' },
+    http.del({ path: '/nics/:mac', name: 'deletenic' },
         nicRequired, deleteNic);
 }
 
diff --git a/lib/endpoints/ping.js b/lib/endpoints/ping.js
index 44bc8e8..c6c6868 100644
--- a/lib/endpoints/ping.js
+++ b/lib/endpoints/ping.js
@@ -62,9 +62,9 @@ function register(http, before) {
     });
 
     http.get(
-        { path: '/ping', name: 'getPing' }, filtered, ping);
+        { path: '/ping', name: 'getping' }, filtered, ping);
     http.head(
-        { path: '/ping', name: 'headPing' }, filtered, ping);
+        { path: '/ping', name: 'headping' }, filtered, ping);
 }
 
 
diff --git a/lib/endpoints/search.js b/lib/endpoints/search.js
index bd3fe33..27abff0 100644
--- a/lib/endpoints/search.js
+++ b/lib/endpoints/search.js
@@ -233,7 +233,7 @@ function searchIPs(req, res, next) {
  */
 function register(http, before) {
     http.get(
-        { path: '/search/ips', name: 'searchIPs' },
+        { path: '/search/ips', name: 'searchips' },
         before, searchIPs);
 }
 
