commit 3d38341fc0fa49755dca161a6e6ba121cc0de8d6
Author: Tim Foster <tim.foster@joyent.com>
Date:   2019-08-19T16:38:19+01:00 (7 weeks ago)
    
    MANTA-2769 manta-init should be channel aware
    MANTA-4159 manta-init should have an option to specify an image version substring

diff --git a/cmd/manta-init.js b/cmd/manta-init.js
index d6bd7cf..3c40fc4 100755
--- a/cmd/manta-init.js
+++ b/cmd/manta-init.js
@@ -53,6 +53,15 @@ var CONCURRENCY = 10;
 optimist.usage('Usage:\tmanta-init -e <email>');
 
 var ARGV = optimist.options({
+	'B': {
+		alias: 'branch',
+		describe: 'the branch substring to use when looking for images',
+		default: 'master'
+	},
+	'C': {
+		alias: 'channel',
+		describe: 'the channel to use'
+	},
 	'c': {
 		alias: 'concurrent_downloads',
 		describe: 'number of concurrent image downloads (default: 10)'
@@ -217,17 +226,25 @@ function findLatestImage(service, cb) {
 	var log = self.log;
 
 	var image_name = services.serviceNameToImageName(service);
-	var version_substr = 'master';
+	var version_substr = ARGV.branch;
+	var channel = ARGV.channel;
 
-	log.info('finding image %s (version substr "%s") for service %s',
-	    image_name, version_substr, service);
+	log.info('finding image %s (version substr "%s") for service %s on ' +
+	    'channel "%s"',
+	    image_name, version_substr, service, channel);
 
 	var onSearchFinish = function (err, image) {
 		if (err) {
 			log.error(err);
 			return (cb(err));
 		}
-
+		if (image === undefined) {
+			var msg = sprintf(
+			    'Unable to find %s image %s for %s on channel "%s"',
+			    version_substr, image_name, service, channel);
+			log.error(msg);
+			return (cb(new Error(msg)));
+		}
 		log.info({ image: image }, 'found image %s for %s',
 		    image_name, service);
 
@@ -236,7 +253,7 @@ function findLatestImage(service, cb) {
 
 	/*
 	 * If -n is used, find the most recent image which is installed in
-	 * this datacenter's IMGAPI.
+	 * this datacenter's IMGAPI, assuming it matches our version_substr.
 	 */
 	if (ARGV.n) {
 		return (findLatestLocalImage(
@@ -245,7 +262,10 @@ function findLatestImage(service, cb) {
 
 	var filters = {};
 	filters.name = image_name;
-	filters.version = '~' + version_substr;
+	if (version_substr.length > 0) {
+		filters.version = '~' + version_substr;
+	}
+	filters.channel = channel;
 	log.info({ filters: filters }, 'search for images');
 
 	remote_imgapi.listImages(filters, function (err, images) {
@@ -268,7 +288,9 @@ function findLatestLocalImage(image_name, version_substr, cb) {
 
 	var filters = {};
 	filters.name = image_name;
-	filters.version = '~' + version_substr;
+	if (version_substr.length > 0) {
+		filters.version = '~' + version_substr;
+	}
 
 	imgapi.listImages(filters, function (err, images) {
 		if (err) {
@@ -396,6 +418,11 @@ if (typeof (ARGV.c) == 'number' && ARGV.c > 0 && ARGV.c < 128 &&
 	usage('unsupported value for "-c" option ' +
 	    '(must be a positive integer less than 128)');
 }
+// let the user pass an empty string to indicate they do not want
+// version-filtering.
+if (typeof (ARGV.branch) == 'boolean') {
+	ARGV.branch = '';
+}
 
 var pipelineFuncs = [
 	function verifyArgs(_, cb) {
@@ -698,6 +725,25 @@ var pipelineFuncs = [
 		});
 	},
 
+	function determineDefaultChannel(_, cb) {
+		var log = self.log;
+
+		if (ARGV.channel === undefined) {
+			log.info('determining update_channel from sapi');
+			common.getSdcChannel.call(self,
+				POSEIDON.owner_uuid, function(err, channel) {
+				if (err) {
+					log.error(err, 'failed to determine sdc update_channel');
+					return (cb(err));
+				}
+				ARGV.channel = channel;
+				return (cb(null));
+			});
+		} else {
+			return (cb(null));
+		}
+	},
+
 	function findLatestImages(ctx, cb) {
 		var log = self.log;
 
diff --git a/docs/man/man1/manta-init.md b/docs/man/man1/manta-init.md
index 82f82e9..8c060f0 100644
--- a/docs/man/man1/manta-init.md
+++ b/docs/man/man1/manta-init.md
@@ -24,6 +24,18 @@ run this command except as documented in the Manta Operator's Guide.**
 
 ## OPTIONS
 
+`-B, --branch BRANCH`
+  Specifies a substring which must be present in the version string of the
+  images to be downloaded. By default, this is set to `master`. An empty string
+  can be specified to indicate that images from any branch can be used.
+
+`-C, --channel CHANNEL`
+  Specifies the updates.joyent.com channel from which images should be
+  downloaded unless `-n` is used. By default, this value is set to the current
+  value of `update_channel` in this data-center, obtained from the `sdc`
+  application in SAPI. Use the `sdcadm channel` command to view or change
+  the default value.
+
 `-c, --concurrent_downloads N`
   Specifies that no more than `N` zone images should be downloaded
   concurrently.
diff --git a/lib/common.js b/lib/common.js
index a2659ea..af51611 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -937,6 +937,36 @@ function getServerNicTags(cb) {
 	});
 }
 
+function getSdcChannel(owner_uuid, cb) {
+	if (typeof (owner_uuid) === 'function') {
+		cb = owner_uuid;
+		owner_uuid = undefined;
+	}
+	var sapi = this.SAPI;
+	var log = this.log;
+
+	var search = {};
+	search.name = 'sdc';
+	if (owner_uuid) {
+		search.owner_uuid = owner_uuid;
+	}
+
+	search.include_master = true;
+
+	sapi.listApplications(search, function (err, apps) {
+		if (err) {
+			log.error(err, 'failed to list applications');
+			return (cb(err));
+		}
+
+		log.debug({ app: apps[0] }, 'found sdc application');
+
+		assert.ok(apps.length <= 1);
+
+		return (cb(null, apps[0].metadata.update_channel));
+	});
+}
+
 exports.shuffle = shuffle;
 exports.domainToPath = domainToPath;
 exports.initSdcClients = initSdcClients;
@@ -953,3 +983,4 @@ exports.sortObjectsByProps = sortObjectsByProps;
 exports.fmtDuration = fmtDuration;
 exports.updateNetworkUsers = updateNetworkUsers;
 exports.getServerNicTags = getServerNicTags;
+exports.getSdcChannel = getSdcChannel;
