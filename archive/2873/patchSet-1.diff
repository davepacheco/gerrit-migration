commit 7886cbba64f4307609e3c060536431682162d6e1 (refs/changes/73/2873/1)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-10-26T00:31:57+00:00 (1 year, 11 months ago)
    
    MANTA-3475 muskie should report 503 errors when moray hits its max queue length

diff --git a/lib/server.js b/lib/server.js
index b04eb4b..6ccf254 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -12,6 +12,7 @@ var crypto = require('crypto');
 var fs = require('fs');
 var path = require('path');
 var url = require('url');
+var verror = require('verror');
 
 var assert = require('assert-plus');
 var bunyan = require('bunyan');
@@ -47,6 +48,10 @@ var JOBS_LIVE_RE = /(state|status|name)=/i;
 // Always force JSON
 function formatJSON(req, res, body) {
     if (body instanceof Error) {
+        var info = verror.info(body);
+        if (info.morayMaxQueueDepthReached) {
+            body = new ServiceUnavailableError(req, body);
+        }
         body = translateError(body, req);
         res.statusCode = body.statusCode || 500;
         if (res.statusCode >= 500)
@@ -185,26 +190,33 @@ function createServer(options, clearProxy) {
 
     server.use(function ensureDependencies(req, res, next) {
         var ok = true;
+        var errors = [];
 
         if (!options.picker()) {
+            errors.push(new Error('picker unavailable'));
             req.log.error('picker unavailable');
             ok = false;
         } else if (!options.moray()) {
+            errors.push(new Error('index moray unavailable'));
             req.log.error('index moray unavailable');
             ok = false;
         } else if (!options.mahi()) {
+            errors.push(new Error('mahi unavailable'));
             req.log.error('mahi unavailable');
             ok = false;
         } else if (!options.marlin()) {
+            errors.push(new Error('marlin available'));
             req.log.error('marlin unavailable');
             ok = !req.isMarlinRequest();
         } else if (!options.medusa()) {
+            errors.push(new Error('medusa unavailable'));
             req.log.error('medusa unavailable');
             ok = !req.isMedusaRequest();
         }
 
         if (!ok) {
-            next(new ServiceUnavailableError());
+            next(new ServiceUnavailableError(req,
+                        new verror.MultiError(errors)));
         } else {
             next();
         }
