commit 20eabf05c131fda2172b663a2d604fbe43e76d83 (refs/changes/33/4833/1)
Author: Rob Johnston <rob.johnston@joyent.com>
Date:   2018-09-13T00:33:54+00:00 (1 year, 1 month ago)
    
    OS-7180 ses enumerator should trim leading/trailing whitespace from labels
    OS-7234 ses enumerator should make protocol/label prop mutable

diff --git a/usr/src/lib/fm/topo/modules/common/ses/ses.c b/usr/src/lib/fm/topo/modules/common/ses/ses.c
index 7fd6d03cd1..cdae215ac2 100644
--- a/usr/src/lib/fm/topo/modules/common/ses/ses.c
+++ b/usr/src/lib/fm/topo/modules/common/ses/ses.c
@@ -1393,7 +1393,7 @@ ses_create_generic(ses_enum_data_t *sdp, ses_enum_node_t *snp, tnode_t *pnode,
 	nvlist_t *props, *aprops;
 	nvlist_t *auth = NULL, *fmri = NULL;
 	tnode_t *tn = NULL;
-	char label[128];
+	char *clean_label = NULL, label[128];
 	int err;
 	char *part = NULL, *serial = NULL, *revision = NULL;
 	char *desc;
@@ -1470,7 +1470,10 @@ ses_create_generic(ses_enum_data_t *sdp, ses_enum_node_t *snp, tnode_t *pnode,
 		desc = label;
 	}
 
-	if (topo_node_label_set(tn, desc, &err) != 0)
+	clean_label = topo_mod_clean_str(mod, desc);
+
+	if (topo_prop_set_string(tn, TOPO_PGROUP_PROTOCOL, TOPO_PROP_LABEL,
+	    TOPO_PROP_MUTABLE, clean_label, &err) < 0)
 		goto error;
 
 	if (ses_set_standard_props(mod, frutn, tn, NULL, ses_node_id(np),
@@ -1514,12 +1517,14 @@ ses_create_generic(ses_enum_data_t *sdp, ses_enum_node_t *snp, tnode_t *pnode,
 
 	nvlist_free(auth);
 	nvlist_free(fmri);
+	topo_mod_strfree(mod, clean_label);
 	if (node != NULL) *node = tn;
 	return (0);
 
 error:
 	nvlist_free(auth);
 	nvlist_free(fmri);
+	topo_mod_strfree(mod, clean_label);
 	return (-1);
 }
 
@@ -2251,7 +2256,7 @@ ses_create_subchassis(ses_enum_data_t *sdp, tnode_t *pnode,
 	nvlist_t *auth = NULL, *fmri = NULL;
 	uint64_t instance = scp->sec_instance;
 	char *desc;
-	char label[128];
+	char *clean_label = NULL, label[128];
 	char **paths;
 	int i, err;
 	ses_enum_target_t *stp;
@@ -2306,7 +2311,10 @@ ses_create_subchassis(ses_enum_data_t *sdp, tnode_t *pnode,
 		desc = label;
 	}
 
-	if (topo_node_label_set(tn, desc, &err) != 0)
+	clean_label = topo_mod_clean_str(mod, desc);
+
+	if (topo_prop_set_string(tn, TOPO_PGROUP_PROTOCOL, TOPO_PROP_LABEL,
+	    TOPO_PROP_MUTABLE, clean_label, &err) < 0)
 		goto error;
 
 	if (ses_set_standard_props(mod, NULL, tn, NULL,
@@ -2372,6 +2380,7 @@ ses_create_subchassis(ses_enum_data_t *sdp, tnode_t *pnode,
 error:
 	nvlist_free(auth);
 	nvlist_free(fmri);
+	topo_mod_strfree(mod, clean_label);
 	return (ret);
 }
 
