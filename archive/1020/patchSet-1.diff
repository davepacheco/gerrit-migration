commit fb935124ae924c4175e4077ef23cdb6f19700e69 (refs/changes/20/1020/1)
Author: Chris Burroughs <chris.burroughs@joyent.com>
Date:   2016-11-30T13:56:06-05:00 (2 years, 10 months ago)
    
    ./bin/triton info

diff --git a/lib/do_info.js b/lib/do_info.js
index af0f94c..0864366 100644
--- a/lib/do_info.js
+++ b/lib/do_info.js
@@ -28,69 +28,75 @@ function do_info(subcmd, opts, args, callback) {
 
     var out = {};
     var i = 0;
+    var tritonapi = this.tritonapi;
 
-    this.tritonapi.cloudapi.getAccount(cb.bind('account'));    i++;
-    this.tritonapi.cloudapi.listMachines(cb.bind('machines')); i++;
-
-    function cb(err, data) {
-        if (err) {
-            callback(err);
-            return;
+    common.cliSetupTritonApi({cli: this}, function onSetup(setupErr) {
+        if (setupErr) {
+            callback(setupErr);
+        }
+        tritonapi.cloudapi.getAccount(cb.bind('account'));    i++;
+        tritonapi.cloudapi.listMachines(cb.bind('machines')); i++;
+
+        function cb(err, data) {
+            if (err) {
+                callback(err);
+                return;
+            }
+            out[this.toString()] = data;
+            if (--i === 0)
+                done();
         }
-        out[this.toString()] = data;
-        if (--i === 0)
-            done();
-    }
 
-    function done() {
-        // parse name
-        var name;
-        if (out.account.firstName && out.account.lastName)
-            name = format('%s %s', out.account.firstName,
-                    out.account.lastName);
-        else if (out.account.firstName)
-            name = out.account.firstName;
-
-        // parse machine states and accounting
-        var states = {};
-        var disk = 0;
-        var memory = 0;
-        out.machines.forEach(function (machine) {
-            var state = machine.state;
-            states[state] = states[state] || 0;
-            states[state]++;
-            memory += machine.memory;
-            disk += machine.disk;
-        });
-        disk *= 1000 * 1000;
-        memory *= 1000 * 1000;
-
-        var data = {};
-        data.login = out.account.login;
-        if (name)
-            data.name = name;
-        data.email = out.account.email;
-        data.url = self.tritonapi.cloudapi.url;
-        data.totalDisk = disk;
-        data.totalMemory = memory;
-
-        if (opts.json) {
-            data.totalInstances = out.machines.length;
-            data.instances = states;
-            console.log(JSON.stringify(data));
-        } else {
-            data.totalDisk = common.humanSizeFromBytes(disk);
-            data.totalMemory = common.humanSizeFromBytes(memory);
-            Object.keys(data).forEach(function (key) {
-                console.log('%s: %s', key, data[key]);
-            });
-            console.log('instances: %d', out.machines.length);
-            Object.keys(states).forEach(function (key) {
-                console.log('    %s: %d', key, states[key]);
+        function done() {
+            // parse name
+            var name;
+            if (out.account.firstName && out.account.lastName)
+                name = format('%s %s', out.account.firstName,
+                              out.account.lastName);
+            else if (out.account.firstName)
+                name = out.account.firstName;
+
+            // parse machine states and accounting
+            var states = {};
+            var disk = 0;
+            var memory = 0;
+            out.machines.forEach(function (machine) {
+                var state = machine.state;
+                states[state] = states[state] || 0;
+                states[state]++;
+                memory += machine.memory;
+                disk += machine.disk;
             });
+            disk *= 1000 * 1000;
+            memory *= 1000 * 1000;
+
+            var data = {};
+            data.login = out.account.login;
+            if (name)
+                data.name = name;
+            data.email = out.account.email;
+            data.url = self.tritonapi.cloudapi.url;
+            data.totalDisk = disk;
+            data.totalMemory = memory;
+
+            if (opts.json) {
+                data.totalInstances = out.machines.length;
+                data.instances = states;
+                console.log(JSON.stringify(data));
+            } else {
+                data.totalDisk = common.humanSizeFromBytes(disk);
+                data.totalMemory = common.humanSizeFromBytes(memory);
+                Object.keys(data).forEach(function (key) {
+                    console.log('%s: %s', key, data[key]);
+                });
+                console.log('instances: %d', out.machines.length);
+                Object.keys(states).forEach(function (key) {
+                    console.log('    %s: %d', key, states[key]);
+                });
+            }
+            callback();
         }
-        callback();
-    }
+    });
 }
 
 do_info.options = [
