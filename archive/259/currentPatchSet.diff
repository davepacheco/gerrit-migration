commit cd36e8cec8d6d4286ef583ec361c65817964d887 (refs/changes/59/259/2)
Author: Johanan Lai <lai.johanan@gmail.com>
Date:   2016-08-12T10:24:58-07:00 (3 years, 2 months ago)
    
    ADMINUI-2303 AdminUI should display disk availability using the unreserved_disk figures

diff --git a/less/server-disk-utilization.less b/less/server-disk-utilization.less
index b52224b7..8be76455 100644
--- a/less/server-disk-utilization.less
+++ b/less/server-disk-utilization.less
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 .server-disk-utilization-circle {
@@ -16,10 +16,10 @@
     height: 100%;
     .layer.provisionable text,
     .layer.reserved text,
-    .layer.used text { display: none; }
+    .layer.provisioned text { display: none; }
 
     .layer.provisionable path { fill: #00d295; }
-    .layer.used path { fill: #ec7676; }
+    .layer.provisioned path { fill: #ec7676; }
     .layer.reserved path { fill: #aaa; }
   }
   & > .percent {
diff --git a/less/server-memory-utilization.less b/less/server-memory-utilization.less
index 7efbe809..d3b138ea 100644
--- a/less/server-memory-utilization.less
+++ b/less/server-memory-utilization.less
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 .server-memory-utilization-circle {
@@ -16,10 +16,10 @@
     height: 100%;
     .layer.provisionable text,
     .layer.reserved text,
-    .layer.used text { display: none; }
+    .layer.provisioned text { display: none; }
 
     .layer.provisionable path { fill: #00d295; }
-    .layer.used path { fill: #ec7676; }
+    .layer.provisioned path { fill: #ec7676; }
     .layer.reserved path { fill: #aaa; }
   }
   & > .percent {
diff --git a/www/js/components/pages/server/disk-overview.jsx b/www/js/components/pages/server/disk-overview.jsx
index 1096f2c3..daa884b3 100644
--- a/www/js/components/pages/server/disk-overview.jsx
+++ b/www/js/components/pages/server/disk-overview.jsx
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var React = require('react');
@@ -20,25 +20,10 @@ var ServerDiskOverview = React.createClass({
     },
     render: function() {
         var server = this.props.server.toJSON();
-        if (!server.vms) {
-            return null;
-        }
 
-        var total = server.disk_pool_size_bytes;
-
-        var usedInGB = 0;
-
-        Object.keys(server.vms).forEach(function(uuid) {
-            var vm = server.vms[uuid];
-            usedInGB += vm.quota;
-        });
-
-        var usedBytes = usedInGB * 1024 * 1024 * 1024;
-
-        var unusedBytes = total - usedBytes;
-        var used = utils.getReadableSize(usedBytes);
-        var unused = utils.getReadableSize(this.props.server.getProvisionableValue());
-        var diskPoolSize = utils.getReadableSize(server.disk_pool_size_bytes);
+        var provisionable = utils.getReadableSize(server.unreserved_disk * 1048576);
+        var provisioned = utils.getReadableSize(server.disk_pool_size_bytes - (server.unreserved_disk * 1048576));
+        var total = utils.getReadableSize(server.disk_pool_size_bytes);
 
         return <div className="disk-overview">
             <div className="row">
@@ -51,16 +36,16 @@ var ServerDiskOverview = React.createClass({
                     <ServerDiskUtilizationCircle diameter="120px" inner="38" server={this.props.server} />
                 </div>
                 <div className="provisionable-disk">
-                    <div className="value">{unused.value + ' ' + unused.measure}</div>
+                    <div className="value">{provisionable.value + ' ' + provisionable.measure}</div>
                     <div className="title">Provisionable</div>
                 </div>
                 <div className="provisioned-disk">
-                    <div className="value">{used.value + ' ' + used.measure}</div>
+                    <div className="value">{provisioned.value + ' ' + provisioned.measure}</div>
                     <div className="title">Provisioned</div>
                 </div>
 
                 <div className="total-disk">
-                    <div className="value">{diskPoolSize.value + ' ' + diskPoolSize.measure}</div>
+                    <div className="value">{total.value + ' ' + total.measure}</div>
                     <div className="title">Total</div>
                 </div>
             </div>
diff --git a/www/js/components/pages/server/disk-utilization-circle.jsx b/www/js/components/pages/server/disk-utilization-circle.jsx
index 5fc498cb..99faae0d 100644
--- a/www/js/components/pages/server/disk-utilization-circle.jsx
+++ b/www/js/components/pages/server/disk-utilization-circle.jsx
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var $ = require('jquery');
@@ -25,31 +25,23 @@ var ServerMemoryUtilizationCircle = React.createClass({
         inner: React.PropTypes.string.isRequired
     },
 
-
     getChartData: function() {
         var server = this.props.server.toJSON();
 
-        var usedInGB = 0;
-
-        Object.keys(server.vms).forEach(function(uuid) {
-            var vm = server.vms[uuid];
-            usedInGB += vm.quota;
-        });
+        var provisioned = server.disk_pool_size_bytes - (server.unreserved_disk * 1048576);
+        var provisionable = server.unreserved_disk * 1048576;
 
-        var usedBytes = usedInGB * 1024 * 1024 * 1024;
-
-        var provisionable = this.props.server.getProvisionableValue();
-        if (provisionable < 0) {
-            provisionable = 0;
-        }
+        if (provisioned < 0) { provisioned = 0; }
+        if (provisionable < 0) { provisionable = 0; }
 
         var pieData = [
-            {label: 'Used', value: usedBytes },
+            {label: 'Provisioned', value: provisioned },
             {label: 'Provisionable', value: provisionable },
         ];
         return pieData;
     },
-    drawCircle: function() {
+
+    drawDiskGraph: function() {
         var $node = $(this.getDOMNode()).find('.graph');
 
         if (this.chart) {
@@ -62,43 +54,38 @@ var ServerMemoryUtilizationCircle = React.createClass({
             });
         }
     },
+
     componentDidMount: function() {
-        this.drawCircle();
-        this.props.server.on('change:memory_provisionable_bytes change:reservation_ratio', this.drawCircle, this);
+        this.drawDiskGraph();
+        this.props.server.on('change:memory_provisionable_bytes change:reservation_ratio', this.drawDiskGraph, this);
     },
+
     componentWillUnmount: function() {
-        this.props.server.off('change:memory_provisionable_bytes change:reservation_ratio', this.drawCircle);
+        this.props.server.off('change:memory_provisionable_bytes change:reservation_ratio', this.drawDiskGraph);
     },
+
     render: function() {
         var diameter = parseInt(this.props.diameter);
         var percentmTop = (-(diameter/2) - 9) + 'px';
         var server = this.props.server.toJSON();
 
+        var provisioned = server.disk_pool_size_bytes - (server.unreserved_disk * 1048576);
         var total = server.disk_pool_size_bytes;
-        var usedInGB = 0;
 
-        Object.keys(server.vms).forEach(function(uuid) {
-            var vm = server.vms[uuid];
-            usedInGB += vm.quota;
-        });
+        var util_percent = Math.round(provisioned / total * 100);
+        if (util_percent < 0) { util_percent = 0; }
 
-        var usedBytes = usedInGB * 1024 * 1024 * 1024;
-
-        var util_percent = Math.round(usedBytes / total * 100);
-        if (util_percent <= 0) {
-            util_percent = 0;
-        }
         var pctSize, labelSize;
-        if (parseInt(this.props.diameter) > 100) {
+        if (diameter > 100) {
             pctSize = '18px';
             labelSize = '10px';
             percentmTop = parseInt(percentmTop) - 2 + 'px';
         }
 
-        return <div className="server-disk-utilization-circle" style={ {width: this.props.diameter, height: this.props.diameter} }>
-            <div className="graph epoch" style={ {width: this.props.diameter, height: this.props.diameter} }></div>
-            <div className="percent" style={ { 'font-size': pctSize, 'margin-top': percentmTop}}>
-                <strong style={ { 'font-size':labelSize }}>UTILIZATION</strong> {util_percent}%
+        return <div className="server-disk-utilization-circle" style={ {width: diameter, height: diameter} }>
+            <div className="graph epoch" style={ {width: diameter, height: diameter} }></div>
+            <div className="percent" style={ {'fontSize': pctSize, 'marginTop': percentmTop}}>
+                <strong style={ {'fontSize': labelSize} }>UTILIZATION</strong> {util_percent}%
             </div>
         </div>;
     }
diff --git a/www/js/components/pages/server/memory-overview.jsx b/www/js/components/pages/server/memory-overview.jsx
index c66626ba..eff86e0b 100644
--- a/www/js/components/pages/server/memory-overview.jsx
+++ b/www/js/components/pages/server/memory-overview.jsx
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var React = require('react');
@@ -21,15 +21,13 @@ var ServerMemoryOverview = React.createClass({
     render: function() {
         var server = this.props.server.toJSON();
 
-        server.memory_total_provisionable_bytes = (server.memory_total_bytes * (1-server.reservation_ratio));
-        server.memory_provisionable = utils.getReadableSize(server.memory_provisionable_bytes);
-        server.memory_reserved = utils.getReadableSize(server.reservation_ratio * server.memory_total_bytes);
-        server.memory_unreserved = utils.getReadableSize((1-server.reservation_ratio) * server.memory_total_bytes);
-        server.memory_total = utils.getReadableSize(server.memory_total_bytes);
-        server.memory_provisioned = utils.getReadableSize(server.memory_total_provisionable_bytes - server.memory_provisionable_bytes);
-        if (server.memory_provisioned_gb <= 0) {
-            server.memory_provisioned_gb = 0;
-        }
+        var provisionable = utils.getReadableSize(server.memory_provisionable_bytes);
+        var provisioned = utils.getReadableSize((1-server.reservation_ratio) * server.memory_total_bytes -
+                                                server.memory_provisionable_bytes);
+        var reserved = utils.getReadableSize(server.reservation_ratio * server.memory_total_bytes);
+        var unreserved = utils.getReadableSize((1-server.reservation_ratio) * server.memory_total_bytes);
+        var total = utils.getReadableSize(server.memory_total_bytes);
+
         return <div className="memory-overview">
             <div className="row">
                 <div className="col-sm-12">
@@ -41,23 +39,23 @@ var ServerMemoryOverview = React.createClass({
                     <ServerMemoryUtilizationCircle diameter="120px" inner="38" server={this.props.server} />
                 </div>
                 <div className="provisionable-memory">
-                    <div className="value">{server.memory_provisionable.value + ' ' + server.memory_provisionable.measure}</div>
+                    <div className="value">{provisionable.value + ' ' + provisionable.measure}</div>
                     <div className="title">Provisionable</div>
                 </div>
                 <div className="provisioned-memory">
-                    <div className="value">{server.memory_provisioned.value + ' ' + server.memory_provisioned.measure}</div>
+                    <div className="value">{provisioned.value + ' ' + provisioned.measure}</div>
                     <div className="title">Provisioned</div>
                 </div>
                 <div className="reserved-memory">
-                    <div className="value">{server.memory_reserved.value + ' ' + server.memory_reserved.measure}</div>
+                    <div className="value">{reserved.value + ' ' + reserved.measure}</div>
                     <div className="title">Reserved</div>
                 </div>
                 <div className="unreserved-memory">
-                    <div className="value">{server.memory_unreserved.value + ' ' + server.memory_unreserved.measure}</div>
+                    <div className="value">{unreserved.value + ' ' + unreserved.measure}</div>
                     <div className="title">Unreserved</div>
                 </div>
                 <div className="total-memory">
-                    <div className="value">{server.memory_total.value + ' ' + server.memory_total.measure}</div>
+                    <div className="value">{total.value + ' ' + total.measure}</div>
                     <div className="title">Total</div>
                 </div>
             </div>
diff --git a/www/js/components/pages/server/memory-utilization-circle.jsx b/www/js/components/pages/server/memory-utilization-circle.jsx
index 5d63e221..aee0d6ea 100644
--- a/www/js/components/pages/server/memory-utilization-circle.jsx
+++ b/www/js/components/pages/server/memory-utilization-circle.jsx
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 var $ = require('jquery');
@@ -25,29 +25,28 @@ var ServerMemoryUtilizationCircle = React.createClass({
         inner: React.PropTypes.string.isRequired
     },
 
-
     getChartData: function() {
-        var model = this.props.server;
-        var total = model.get('memory_total_bytes');
-        var provisionable = model.get('memory_provisionable_bytes');
-        if (provisionable <= 0) { provisionable = 0; }
-        var reserved = total * model.get('reservation_ratio');
-        var used = (total * (1-model.get('reservation_ratio')) - provisionable);
+        var server = this.props.server.toJSON();
+
+        var reserved = server.reservation_ratio * server.memory_total_bytes
+        var provisioned = ((1-server.reservation_ratio) * server.memory_total_bytes) - server.memory_provisionable_bytes;
+        var provisionable = server.memory_provisionable_bytes;
 
-        if (used < 0) { used = 0; }
+        if (provisioned < 0) { provisioned = 0; }
+        if (provisionable < 0) { provisionable = 0; }
 
         var pieData = [
-            {label: 'reserved', value: reserved },
-            {label: 'Used', value: used },
+            {label: 'Reserved', value: reserved },
+            {label: 'Provisioned', value: provisioned },
             {label: 'Provisionable', value: provisionable },
         ];
         return pieData;
     },
+
     drawMemoryGraph: function() {
         var $node = $(this.getDOMNode()).find('.graph');
 
         if (this.chart) {
-            console.log('redraw');
             this.chart.update(this.getChartData());
         } else {
             this.chart = $node.epoch({
@@ -57,35 +56,38 @@ var ServerMemoryUtilizationCircle = React.createClass({
             });
         }
     },
+
     componentDidMount: function() {
         this.drawMemoryGraph();
         this.props.server.on('change:memory_provisionable_bytes change:reservation_ratio', this.drawMemoryGraph, this);
     },
+
     componentWillUnmount: function() {
         this.props.server.off('change:memory_provisionable_bytes change:reservation_ratio', this.drawMemoryGraph);
     },
+
     render: function() {
         var diameter = parseInt(this.props.diameter);
         var percentmTop = (-(diameter/2) - 9) + 'px';
         var server = this.props.server.toJSON();
-        server.memory_total_provisionable_bytes = (server.memory_total_bytes * (1-server.reservation_ratio));
-        server.memory_used_provisionable_bytes = (server.memory_total_provisionable_bytes - server.memory_provisionable_bytes);
 
-        server.memory_utilization_percent = Math.round(server.memory_used_provisionable_bytes / server.memory_total_provisionable_bytes * 100);
-        if (server.memory_utilization_percent <= 0) {
-            server.memory_utilization_percent = 0;
-        }
+        var provisioned = ((1-server.reservation_ratio) * server.memory_total_bytes) - server.memory_provisionable_bytes;
+        var total = server.memory_total_bytes;
+
+        var util_percent = Math.round(provisioned / total * 100);
+        if (util_percent < 0) { util_percent = 0; }
+
         var pctSize, labelSize;
-        if (parseInt(this.props.diameter) > 100) {
+        if (diameter > 100) {
             pctSize = '18px';
             labelSize = '10px';
             percentmTop = parseInt(percentmTop) - 2 + 'px';
         }
 
-        return <div className="server-memory-utilization-circle" style={ {width: this.props.diameter, height: this.props.diameter} }>
-            <div className="graph epoch" style={ {width: this.props.diameter, height: this.props.diameter} }></div>
+        return <div className="server-memory-utilization-circle" style={ {width: diameter, height: diameter} }>
+            <div className="graph epoch" style={ {width: diameter, height: diameter} }></div>
             <div className="percent" style={ {'fontSize': pctSize, 'marginTop': percentmTop} }>
-                <strong style={ {'fontSize':labelSize} }>UTILIZATION</strong> {server.memory_utilization_percent}%
+                <strong style={ {'fontSize': labelSize} }>UTILIZATION</strong> {util_percent}%
             </div>
         </div>;
     }
diff --git a/www/js/models/server.js b/www/js/models/server.js
index 8aced62c..46b02558 100644
--- a/www/js/models/server.js
+++ b/www/js/models/server.js
@@ -80,16 +80,6 @@ var Server = Model.extend({
             cb();
         });
     },
-    getProvisionableValue: function () {
-        var attributes = this.attributes;
-        return attributes.disk_pool_size_bytes -
-            attributes.disk_kvm_zvol_used_bytes -
-            attributes.disk_kvm_quota_used_bytes -
-            attributes.disk_cores_quota_used_bytes -
-            attributes.disk_zone_quota_used_bytes -
-            attributes.disk_system_used_bytes -
-            attributes.disk_installed_images_used_bytes;
-    }
 });
 
 module.exports = Server;
