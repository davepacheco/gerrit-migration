From 4031c5768ae15515a7d4dd28289034343a1eff62 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Tue, 5 Jun 2018 20:08:32 +0200
Subject: [PATCH] TRITON-458 Remove JSStyle and Javascriptlint from sdcadm
 Reviewed by: Chris Burroughs <chris.burroughs@joyent.com> Approved by: Chris
 Burroughs <chris.burroughs@joyent.com>

---
 .gitmodules                                   |   6 -
 Makefile                                      |   4 -
 deps/javascriptlint                           |   1 -
 deps/jsstyle                                  |   1 -
 lib/cli/do_avail.js                           |   2 -
 lib/cli/do_instances.js                       |   2 -
 lib/cli/do_services.js                        |   2 -
 lib/cli/do_update.js                          |   2 -
 lib/cli/do_update_agents.js                   |   2 -
 lib/cli/do_update_other.js                    |   2 -
 lib/cli/index.js                              |   1 -
 lib/common.js                                 |   4 -
 lib/platform.js                               |   9 --
 lib/post-setup/dev-headnode-prov.js           |   2 -
 lib/post-setup/dev-sample-data.js             |   2 -
 lib/procedures/shared.js                      |   1 -
 lib/procedures/update-manatee-v2.js           |   1 -
 .../update-single-headnode-imgapi.js          |   2 -
 lib/sdcadm.js                                 |   1 -
 lib/steps/no-rabbit.js                        |   1 -
 lib/steps/zookeeper.js                        |   1 -
 test/create.test.js                           |   2 -
 test/dc-maint.test.js                         |   1 -
 test/update.test.js                           |   1 -
 tools/jsl.node.conf                           | 140 ------------------
 tools/jsstyle.conf                            |  15 --
 26 files changed, 208 deletions(-)
 delete mode 160000 deps/javascriptlint
 delete mode 160000 deps/jsstyle
 delete mode 100644 tools/jsl.node.conf
 delete mode 100644 tools/jsstyle.conf

diff --git a/.gitmodules b/.gitmodules
index 8bfbc59..89c6ee6 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -1,9 +1,3 @@
-[submodule "deps/javascriptlint"]
-	path = deps/javascriptlint
-	url = https://github.com/davepacheco/javascriptlint.git
-[submodule "deps/jsstyle"]
-	path = deps/jsstyle
-	url = https://github.com/davepacheco/jsstyle.git
 [submodule "deps/restdown"]
 	path = deps/restdown
 	url = https://github.com/trentm/restdown.git
diff --git a/Makefile b/Makefile
index aa396a4..9cee6df 100644
--- a/Makefile
+++ b/Makefile
@@ -20,11 +20,7 @@ DOC_FILES	 = index.md config.md update.md post-setup.md
 EXTRA_DOC_DEPS += deps/restdown-brand-remora/.git
 RESTDOWN_FLAGS   = --brand-dir=deps/restdown-brand-remora
 JS_FILES	:= $(shell find lib test -name '*.js' | grep -v '/tmp/')
-JSL_CONF_NODE	 = tools/jsl.node.conf
-# JSL_FILES_NODE	 = $(JS_FILES)
 ESLINT_FILES	= $(JS_FILES)
-JSSTYLE_FILES	 = $(JS_FILES)
-JSSTYLE_FLAGS	 = -f tools/jsstyle.conf
 CLEAN_FILES += ./node_modules ./build/sdcadm-*.sh ./build/sdcadm-*.imgmanifest ./build/shar-image ./man/man1/sdcadm.1 ./etc/sdcadm.completion
 
 
diff --git a/deps/javascriptlint b/deps/javascriptlint
deleted file mode 160000
index e1bd0ab..0000000
--- a/deps/javascriptlint
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit e1bd0abfd424811af469d1ece3af131d95443924
diff --git a/deps/jsstyle b/deps/jsstyle
deleted file mode 160000
index 07d4f68..0000000
--- a/deps/jsstyle
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 07d4f68251063be6496a42dd00a7f5bacd65c5e4
diff --git a/lib/cli/do_avail.js b/lib/cli/do_avail.js
index cb836f7..ef3acbb 100644
--- a/lib/cli/do_avail.js
+++ b/lib/cli/do_avail.js
@@ -42,9 +42,7 @@ Available.prototype.execute = function cExecute(opts, args, cb) {
     assert.func(cb, 'cb');
 
     var self = this;
-    /* JSSTYLED */
     var columns = opts.o.trim().split(/\s*,\s*/g);
-    /* JSSTYLED */
     var sort = opts.s.trim().split(/\s*,\s*/g);
 
     // This is always true when nothing is given:
diff --git a/lib/cli/do_instances.js b/lib/cli/do_instances.js
index 36a1add..fe1e159 100644
--- a/lib/cli/do_instances.js
+++ b/lib/cli/do_instances.js
@@ -60,9 +60,7 @@ function do_instances(subcmd, opts, args, callback) {
         }
     }
 
-    /* JSSTYLED */
     var columns = opts.o.trim().split(/\s*,\s*/g);
-    /* JSSTYLED */
     var sort = opts.s.trim().split(/\s*,\s*/g);
 
     self.sdcadm.listInsts(listOpts, function (err, insts) {
diff --git a/lib/cli/do_services.js b/lib/cli/do_services.js
index a3cebf5..589149d 100644
--- a/lib/cli/do_services.js
+++ b/lib/cli/do_services.js
@@ -27,9 +27,7 @@ function do_services(subcmd, opts, args, callback) {
     }
 
     var i;
-    /* JSSTYLED */
     var columns = opts.o.trim().split(/\s*,\s*/g);
-    /* JSSTYLED */
     var sort = opts.s.trim().split(/\s*,\s*/g);
     var needInsts = opts.json || ~columns.indexOf('insts');
 
diff --git a/lib/cli/do_update.js b/lib/cli/do_update.js
index 9321e98..7afc075 100644
--- a/lib/cli/do_update.js
+++ b/lib/cli/do_update.js
@@ -401,7 +401,6 @@ function do_experimental_update(subcmd, opts, args, cb) {
 do_experimental_update.help = (
     Update.prototype.help +
     '\n' +
-    /* BEGIN JSSTYLED */
     'Agents:\n' +
     'Agents may only be updated on servers that are *setup*. All setup \n' +
     'servers will be updated unless a specific set of SERVERs is given.\n' +
@@ -424,7 +423,6 @@ do_experimental_update.help = (
     '        $(sdc-server lookup --comma  \\\n' +
     '        setup=true \'traits.internal!~PKGSRC\')\n' +
     '\n' +
-    /* END JSSTYLED */
     '\n' +
     '{{options}}'
 );
diff --git a/lib/cli/do_update_agents.js b/lib/cli/do_update_agents.js
index 3c2d361..0ba0d48 100644
--- a/lib/cli/do_update_agents.js
+++ b/lib/cli/do_update_agents.js
@@ -895,7 +895,6 @@ function do_update_agents(subcmd, opts, args, cb) {
 
 }
 do_update_agents.help = (
-    /* BEGIN JSSTYLED */
     'Update GZ agents on servers in the DC.\n' +
     '\n' +
     'Usage:\n' +
@@ -933,7 +932,6 @@ do_update_agents.help = (
     '    # "internal=PKGSRC" trait.\n' +
     '    {{name}} update-agents 8198c6c0-778c-11e5-8416-13cb06970b44 \\\n' +
     '        $(sdc-server lookup setup=true \'traits.internal!~PKGSRC\')\n'
-    /* END JSSTYLED */
 );
 do_update_agents.options = [
     {
diff --git a/lib/cli/do_update_other.js b/lib/cli/do_update_other.js
index 2575ee0..d876381 100644
--- a/lib/cli/do_update_other.js
+++ b/lib/cli/do_update_other.js
@@ -492,7 +492,6 @@ function do_update_other(subcmd, opts, args, cb) {
                 if (err) {
                     next(err);
                     return;
-                /* JSSTYLED */
                 } else if (data.search(/region_name=/) !== -1) {
                     log.debug('region_name is up to date');
                     next();
@@ -582,7 +581,6 @@ function do_update_other(subcmd, opts, args, cb) {
                 if (err) {
                     next(err);
                     return;
-                /* JSSTYLED */
                 } else if (data.search(/sapi_domain=/) !== -1) {
                     log.debug('sapi_domain already present on node.config');
                     next();
diff --git a/lib/cli/index.js b/lib/cli/index.js
index adf686d..4ce888e 100644
--- a/lib/cli/index.js
+++ b/lib/cli/index.js
@@ -45,7 +45,6 @@ var UUID_RE = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;
 // --- Custom dashdash option types
 
 function parseCommaSepStringNoEmpties(_option, _optstr, arg) {
-    /* JSSTYLED */
     return arg.trim().split(/\s*,\s*/g).filter(function (part) {
         return part;
     });
diff --git a/lib/common.js b/lib/common.js
index d2528e2..5562de8 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -835,7 +835,6 @@ function manateeAdmRemote(opts, cb) {
         '-j',
         '-n',
         opts.server,
-        /* JSSTYLED */
         format('/usr/sbin/zlogin %s "source ~/.bashrc; ' +
             '/opt/smartdc/manatee/node_modules/.bin/manatee-adm %s"',
             opts.vm, opts.cmd)
@@ -1018,7 +1017,6 @@ function waitForPostgresUp(opts, cb) {
             '-j',
             '-n',
             opts.server,
-            /* JSSTYLED */
             format('/usr/sbin/zlogin %s '
                 + '\'PATH=/opt/postgresql/current/bin:/opt/local/bin:$PATH '
                 + 'psql -U postgres -t -A -c "SELECT NOW() AS when;"\'',
@@ -1123,7 +1121,6 @@ function callConfigAgentSync(opts, cb) {
         '-j',
         '-n',
         opts.server,
-        /* JSSTYLED */
         format('/usr/sbin/zlogin %s ' +
             '"/opt/smartdc/config-agent/build/node/bin/node ' +
             '/opt/smartdc/config-agent/agent.js -f ' +
@@ -1181,7 +1178,6 @@ function execRemote(opts, cb) {
         '-j',
         '-n',
         opts.server,
-        /* JSSTYLED */
         format('/usr/sbin/zlogin %s "%s"', opts.vm, opts.cmd)
     ];
 
diff --git a/lib/platform.js b/lib/platform.js
index 1478951..548b5a4 100644
--- a/lib/platform.js
+++ b/lib/platform.js
@@ -94,7 +94,6 @@ Platform.prototype.getHNPlatform = function getHNPlatform(cb) {
                     } else {
                         var cfg = s.split('\n');
                         cfg.forEach(function (c) {
-                            /* JSSTYLED */
                             var r = c.match(/default (\d+)/);
                             if (r !== null) {
                                 defaultSection = Number(r[1]);
@@ -1716,7 +1715,6 @@ function do_assign(subcmd, opts, args, cb) {
 };
 
 PlatformCLI.prototype.do_assign.help = (
-    /* BEGIN JSSTYLED */
     'Assign platform image to the given DC server(s).\n' +
     '\n' +
     'Usage:\n' +
@@ -1747,7 +1745,6 @@ PlatformCLI.prototype.do_assign.help = (
     '    # a "internal=PKGSRC" trait.\n' +
     '    {{name}} assign 20151021T183753Z \\\n' +
     '        $(sdc-server lookup setup=true \'traits.internal!~PKGSRC\')\n'
-    /* END JSSTYLED */
 
 );
 PlatformCLI.prototype.do_assign.options = [
@@ -1778,9 +1775,7 @@ function do_list(subcmd, opts, _args, cb) {
         return;
     }
 
-    /* JSSTYLED */
     var columns = opts.o.trim().split(/\s*,\s*/g);
-    /* JSSTYLED */
     var sort = opts.s.trim().split(/\s*,\s*/g);
 
     self.platform.list(function (err, platforms) {
@@ -1928,9 +1923,7 @@ function do_usage(subcmd, opts, args, cb) {
         'Please use `sdcadm platform help usage` instead'));
     }
 
-    /* JSSTYLED */
     var columns = opts.o.trim().split(/\s*,\s*/g);
-    /* JSSTYLED */
     var sort = opts.s.trim().split(/\s*,\s*/g);
 
     self.platform.usage(opts.platform, function (err, rows) {
@@ -2159,9 +2152,7 @@ PlatformCLI.prototype.do_avail = function do_avail(subcmd, opts, _args, cb) {
         return;
     }
 
-    /* JSSTYLED */
     var columns = opts.o.trim().split(/\s*,\s*/g);
-    /* JSSTYLED */
     var sort = opts.s.trim().split(/\s*,\s*/g);
 
     self.platform.available(opts, function (err, platforms) {
diff --git a/lib/post-setup/dev-headnode-prov.js b/lib/post-setup/dev-headnode-prov.js
index 1a8fa0b..0dbff7c 100644
--- a/lib/post-setup/dev-headnode-prov.js
+++ b/lib/post-setup/dev-headnode-prov.js
@@ -131,7 +131,6 @@ function do_dev_headnode_prov(subcmd, opts, args, cb) {
 }
 
 do_dev_headnode_prov.help = (
-    /* BEGIN JSSTYLED */
     'Make the headnode provisionable, for development and testing.\n' +
     '\n' +
     'This is done via `ALLOC_FILTER_HEADNODE` and \n' +
@@ -140,7 +139,6 @@ do_dev_headnode_prov.help = (
     '\n' +
     'Usage:\n' +
     '     {{name}} dev-headnode-prov\n'
-    /* END JSSTYLED */
 );
 
 do_dev_headnode_prov.options = [
diff --git a/lib/post-setup/dev-sample-data.js b/lib/post-setup/dev-sample-data.js
index 0eb4eff..e9c192f 100644
--- a/lib/post-setup/dev-sample-data.js
+++ b/lib/post-setup/dev-sample-data.js
@@ -173,7 +173,6 @@ function do_dev_sample_data(subcmd, opts, args, cb) {
 }
 
 do_dev_sample_data.help = (
-    /* BEGIN JSSTYLED */
     'Add sample data suitable for *development and testing*.\n' +
     '\n' +
     '- A set of "sample-*" packages are added for provisioning.\n' +
@@ -181,7 +180,6 @@ do_dev_sample_data.help = (
     '\n' +
     'Usage:\n' +
     '     {{name}} dev-sample-data\n'
-    /* END JSSTYLED */
 );
 
 do_dev_sample_data.options = [
diff --git a/lib/procedures/shared.js b/lib/procedures/shared.js
index 2a99cdb..f20c70b 100644
--- a/lib/procedures/shared.js
+++ b/lib/procedures/shared.js
@@ -985,7 +985,6 @@ function updateVmUserScriptRemote(arg, next) {
         format('-n %s ', server),
         'echo \'' +  JSON.stringify({
             set_customer_metadata: {
-                /* JSSTYLED */
                 'user-script': arg.userScript.replace(/'/g, '"')
             }
         })  + '\'|' +
diff --git a/lib/procedures/update-manatee-v2.js b/lib/procedures/update-manatee-v2.js
index 4da6faa..07c421b 100644
--- a/lib/procedures/update-manatee-v2.js
+++ b/lib/procedures/update-manatee-v2.js
@@ -160,7 +160,6 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
             '/opt/smartdc/bin/sdc-oneachnode',
             '-n',
             server,
-            /* JSSTYLED */
             format('/usr/sbin/zfs set canmount=noauto ' +
                 'zones/%s/data/manatee', zone)
         ];
diff --git a/lib/procedures/update-single-headnode-imgapi.js b/lib/procedures/update-single-headnode-imgapi.js
index 8f39a34..c2f9a06 100644
--- a/lib/procedures/update-single-headnode-imgapi.js
+++ b/lib/procedures/update-single-headnode-imgapi.js
@@ -189,13 +189,11 @@ UpdateSingleHeadnodeImgapi.prototype.execute = function ushiExecute(opts, cb) {
                 var argv = [
                     '/usr/sbin/zlogin',
                     inst.zonename,
-                    /* BEGIN JSSTYLED */
                     /* eslint-disable */
                     'cd /opt/smartdc/imgapi && ' +
                         'test ! -f lib/migrations/migration-012-update-docker-image-uuids.js || ' +
                         './build/node/bin/node lib/migrations/migration-012-update-docker-image-uuids.js'
                     /* eslint-enable */
-                    /* END JSSTYLED */
                 ];
                 common.spawnRun({argv: argv, log: log}, next);
             },
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 27f3160..71883fb 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -1895,7 +1895,6 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
                                     params: {
                                         // First dockerlogger image ever:
                                         /* eslint-disable */
-                                        /* JSSTYLED */
                                         image_uuid: 'be775385-a050-4956-b31c-74bbdcc1f259'
                                         /* eslint-enable */
                                     }
diff --git a/lib/steps/no-rabbit.js b/lib/steps/no-rabbit.js
index 13bbbb9..c9f0288 100644
--- a/lib/steps/no-rabbit.js
+++ b/lib/steps/no-rabbit.js
@@ -10,7 +10,6 @@
 
 /*
  * Steps for setting the "no_rabbit=true" SDC config var:
- *    //JSSTYLED
  *    https://github.com/joyent/sdc/blob/master/docs/operator-guide/configuration.md#sdc-application-configuration
  */
 
diff --git a/lib/steps/zookeeper.js b/lib/steps/zookeeper.js
index 9f47f0d..65cf3af 100644
--- a/lib/steps/zookeeper.js
+++ b/lib/steps/zookeeper.js
@@ -329,7 +329,6 @@ function replaceZKData(opts, callback) {
                 '-n',
                 vm.server_uuid,
                 '-g',
-                /* JSSTYLED */
                 ctx.fname,
                 '--clobber',
                 '-d',
diff --git a/test/create.test.js b/test/create.test.js
index 6473a3d..d1eaa5c 100644
--- a/test/create.test.js
+++ b/test/create.test.js
@@ -145,7 +145,6 @@ test('sdcadm create amonredis --dev-allow-multiple-instances ' +
                     t.ifError(err2, 'vmadm list error');
 
                     t.equal(numInsts, NUM_INSTS + 1, 'Number of instances');
-                    // JSSTYLED
                     ctx.uuid = ctx.stdout.match(/Instance "(.+?)"/)[1];
                     next();
                 });
@@ -198,7 +197,6 @@ test('sdcadm create amonredis --dev-allow-multiple-instances' +
                 getNumInsts(function getNumInstCb(err, numInsts) {
                     t.ifError(err, 'vmadm list error');
                     t.equal(numInsts, NUM_INSTS + 1);
-                    // JSSTYLED
                     ctx.uuid = ctx.stdout.match(/Instance "(.+?)"/)[1];
                     next();
                 });
diff --git a/test/dc-maint.test.js b/test/dc-maint.test.js
index 2cd0ce3..9f771b5 100644
--- a/test/dc-maint.test.js
+++ b/test/dc-maint.test.js
@@ -110,7 +110,6 @@ test('sdcadm dc-maint status (maintenance)', function (t) {
         t.ifError(err);
         t.equal(stderr, '');
 
-        // JSSTYLED
         var match = stdout.match(/DC maintenance ETA: (.+)/);
         t.ok(match);
 
diff --git a/test/update.test.js b/test/update.test.js
index b9eff80..8d2716d 100644
--- a/test/update.test.js
+++ b/test/update.test.js
@@ -91,7 +91,6 @@ test('sdcadm update --just-images', function (t) {
             t.ok(stdout.match(regex), 'check update regex present');
         });
 
-        // JSSTYLED
         var imgUuid = stdout.match(/Imported image (.+?)/)[0];
         PAPI_IMG_UUID = imgUuid;
 
diff --git a/tools/jsl.node.conf b/tools/jsl.node.conf
deleted file mode 100644
index 20fac50..0000000
--- a/tools/jsl.node.conf
+++ /dev/null
@@ -1,140 +0,0 @@
-#
-# Configuration File for JavaScript Lint 
-#
-# This configuration file can be used to lint a collection of scripts, or to enable
-# or disable warnings for scripts that are linted via the command line.
-#
-
-### Warnings
-# Enable or disable warnings based on requirements.
-# Use "+WarningName" to display or "-WarningName" to suppress.
-#
-+ambiguous_else_stmt          # the else statement could be matched with one of multiple if statements (use curly braces to indicate intent
-+ambiguous_nested_stmt        # block statements containing block statements should use curly braces to resolve ambiguity
-+ambiguous_newline            # unexpected end of line; it is ambiguous whether these lines are part of the same statement
--anon_no_return_value         # anonymous function does not always return value
-+assign_to_function_call      # assignment to a function call
-+block_without_braces         # block statement without curly braces
-+comma_separated_stmts        # multiple statements separated by commas (use semicolons?)
-+comparison_type_conv         # comparisons against null, 0, true, false, or an empty string allowing implicit type conversion (use === or !==)
-+default_not_at_end           # the default case is not at the end of the switch statement
-+dup_option_explicit          # duplicate "option explicit" control comment
-+duplicate_case_in_switch     # duplicate case in switch statement
-+duplicate_formal             # duplicate formal argument {name}
-+empty_statement              # empty statement or extra semicolon
-+identifier_hides_another     # identifer {name} hides an identifier in a parent scope
--inc_dec_within_stmt          # increment (++) and decrement (--) operators used as part of greater statement
-+incorrect_version            # Expected /*jsl:content-type*/ control comment. The script was parsed with the wrong version.
-+invalid_fallthru             # unexpected "fallthru" control comment
-+invalid_pass                 # unexpected "pass" control comment
-+jsl_cc_not_understood        # couldn't understand control comment using /*jsl:keyword*/ syntax
-+leading_decimal_point        # leading decimal point may indicate a number or an object member
-+legacy_cc_not_understood     # couldn't understand control comment using /*@keyword@*/ syntax
-+meaningless_block            # meaningless block; curly braces have no impact
-+mismatch_ctrl_comments       # mismatched control comment; "ignore" and "end" control comments must have a one-to-one correspondence
-+misplaced_regex              # regular expressions should be preceded by a left parenthesis, assignment, colon, or comma
-+missing_break                # missing break statement
-+missing_break_for_last_case  # missing break statement for last case in switch
-+missing_default_case         # missing default case in switch statement
-+missing_option_explicit      # the "option explicit" control comment is missing
-+missing_semicolon            # missing semicolon
-+missing_semicolon_for_lambda # missing semicolon for lambda assignment
-+multiple_plus_minus          # unknown order of operations for successive plus (e.g. x+++y) or minus (e.g. x---y) signs
-+nested_comment               # nested comment
--no_return_value              # function {name} does not always return a value
--octal_number                 # leading zeros make an octal number
-+parseint_missing_radix       # parseInt missing radix parameter
-+partial_option_explicit      # the "option explicit" control comment, if used, must be in the first script tag
-+redeclared_var               # redeclaration of {name}
-+trailing_comma_in_array      # extra comma is not recommended in array initializers
-+trailing_decimal_point       # trailing decimal point may indicate a number or an object member
-+undeclared_identifier        # undeclared identifier: {name}
-+unreachable_code             # unreachable code
--unreferenced_argument        # argument declared but never referenced: {name}
--unreferenced_function        # function is declared but never referenced: {name}
-+unreferenced_variable        # variable is declared but never referenced: {name}
-+unsupported_version          # JavaScript {version} is not supported
-+use_of_label                 # use of label
-+useless_assign               # useless assignment
-+useless_comparison           # useless comparison; comparing identical expressions
--useless_quotes               # the quotation marks are unnecessary
-+useless_void                 # use of the void type may be unnecessary (void is always undefined)
-+var_hides_arg                # variable {name} hides argument
-+want_assign_or_call          # expected an assignment or function call
-+with_statement               # with statement hides undeclared variables; use temporary variable instead
-
-
-### Output format
-# Customize the format of the error message.
-#    __FILE__ indicates current file path
-#    __FILENAME__ indicates current file name
-#    __LINE__ indicates current line
-#    __COL__ indicates current column
-#    __ERROR__ indicates error message (__ERROR_PREFIX__: __ERROR_MSG__)
-#    __ERROR_NAME__ indicates error name (used in configuration file)
-#    __ERROR_PREFIX__ indicates error prefix
-#    __ERROR_MSG__ indicates error message
-#
-# For machine-friendly output, the output format can be prefixed with
-# "encode:". If specified, all items will be encoded with C-slashes.
-#
-# Visual Studio syntax (default):
-+output-format __FILE__(__LINE__): __ERROR__
-# Alternative syntax:
-#+output-format __FILE__:__LINE__: __ERROR__
-
-
-### Context
-# Show the in-line position of the error.
-# Use "+context" to display or "-context" to suppress.
-#
-+context
-
-
-### Control Comments
-# Both JavaScript Lint and the JScript interpreter confuse each other with the syntax for
-# the /*@keyword@*/ control comments and JScript conditional comments. (The latter is
-# enabled in JScript with @cc_on@). The /*jsl:keyword*/ syntax is preferred for this reason,
-# although legacy control comments are enabled by default for backward compatibility.
-#
--legacy_control_comments
-
-
-### Defining identifiers
-# By default, "option explicit" is enabled on a per-file basis.
-# To enable this for all files, use "+always_use_option_explicit"
--always_use_option_explicit
-
-# Define certain identifiers of which the lint is not aware.
-# (Use this in conjunction with the "undeclared identifier" warning.)
-#
-# Common uses for webpages might be:
-+define __dirname
-+define __filename
-+define clearInterval
-+define clearTimeout
-+define console
-+define exports
-+define global
-+define module
-+define process
-+define require
-+define setImmediate
-+define setInterval
-+define setTimeout
-+define Buffer
-+define JSON
-+define Math
-
-### JavaScript Version
-# To change the default JavaScript version:
-#+default-type text/javascript;version=1.5
-#+default-type text/javascript;e4x=1
-
-### Files
-# Specify which files to lint
-# Use "+recurse" to enable recursion (disabled by default).
-# To add a set of files, use "+process FileName", "+process Folder\Path\*.js",
-# or "+process Folder\Path\*.htm".
-#
-
diff --git a/tools/jsstyle.conf b/tools/jsstyle.conf
deleted file mode 100644
index 2244cb6..0000000
--- a/tools/jsstyle.conf
+++ /dev/null
@@ -1,15 +0,0 @@
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-
-#
-# Copyright (c) 2014, Joyent, Inc.
-#
-
-indent=4
-doxygen
-unparenthesized-return=0
-blank-after-start-comment=0
-leading-right-paren-ok=1
-- 
2.21.0

