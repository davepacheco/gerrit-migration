commit 89742f8ec054c5351bedada905728fc54ab3950a (refs/changes/75/4875/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2018-09-25T09:31:08-07:00 (1 year ago)
    
    OS-4407 OpenSSH 7.5+ broken in lx brand

diff --git a/usr/src/uts/common/brand/lx/syscall/lx_poll.c b/usr/src/uts/common/brand/lx/syscall/lx_poll.c
index 92852e72ae..f7275b80a6 100644
--- a/usr/src/uts/common/brand/lx/syscall/lx_poll.c
+++ b/usr/src/uts/common/brand/lx/syscall/lx_poll.c
@@ -26,6 +26,12 @@
 #include <sys/schedctl.h>
 #include <sys/lx_signal.h>
 
+/*
+ * Max number of FDs that can be given to poll() or select() before we return
+ * EINVAL (the Linux man page documents this value as {OPEN_MAX}, and defaults
+ * it to this value).
+ */
+int lx_poll_max_fds = 1048576;
 
 /* From uts/common/syscall/poll.c */
 extern int poll_copyin(pollstate_t *, pollfd_t *, nfds_t);
@@ -172,11 +178,7 @@ lx_poll_common(pollfd_t *fds, nfds_t nfds, timespec_t *tsp, k_sigset_t *ksetp)
 	 * Initialize pollstate and copy in pollfd data if present.
 	 */
 	if (nfds != 0) {
-		if (nfds > p->p_fno_ctl) {
-			mutex_enter(&p->p_lock);
-			(void) rctl_action(rctlproc_legacy[RLIMIT_NOFILE],
-			    p->p_rctls, p, RCA_SAFE);
-			mutex_exit(&p->p_lock);
+		if (nfds > lx_poll_max_fds) {
 			error = EINVAL;
 			goto pollout;
 		}
@@ -587,11 +589,7 @@ lx_select_common(int nfds, long *rfds, long *wfds, long *efds,
 	 * Initialize pollstate and copy in pollfd data if present.
 	 */
 	if (nfds != 0) {
-		if (nfds > p->p_fno_ctl) {
-			mutex_enter(&p->p_lock);
-			(void) rctl_action(rctlproc_legacy[RLIMIT_NOFILE],
-			    p->p_rctls, p, RCA_SAFE);
-			mutex_exit(&p->p_lock);
+		if (nfds > lx_poll_max_fds) {
 			error = EINVAL;
 			goto out;
 		}
