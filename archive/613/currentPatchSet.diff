commit 627849dc7291617f888bb58d3569d7daedd38461 (refs/changes/13/613/4)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2016-10-08T00:58:54+00:00 (3 years ago)
    
    joyent/node-mooremachine#12 want assert in S.on if we've already left the state
    Reviewed by: Cody Peter Mello <cody.mello@joyent.com>

diff --git a/lib/fsm.js b/lib/fsm.js
index fb77838..09ad2a0 100644
--- a/lib/fsm.js
+++ b/lib/fsm.js
@@ -28,6 +28,8 @@ function FSMStateHandle(fsm, state, link) {
 }
 
 FSMStateHandle.prototype.validTransitions = function (states) {
+	if (this.fsh_validTransitions !== undefined)
+		throw (new Error('FSM validTransitions already set'));
 	assert.arrayOfString(states, 'states');
 	this.fsh_validTransitions = states;
 };
@@ -91,29 +93,54 @@ FSMStateHandle.prototype.disconnectAll = function () {
 };
 
 FSMStateHandle.prototype.on = function (obj, evt, cb) {
+	if (!this.fsh_valid) {
+		throw (new Error('FSM attempted to set up handler in state ' +
+		    this.fsh_state + ' but already called gotoState() to ' +
+		    'enter state ' + this.fsh_nextState));
+	}
 	obj.on(evt, cb);
 	this.fsh_listeners.push([obj, evt, cb]);
 };
 
 FSMStateHandle.prototype.interval = function (interval, cb) {
+	if (!this.fsh_valid) {
+		throw (new Error('FSM attempted to set up interval in state ' +
+		    this.fsh_state + ' but already called gotoState() to ' +
+		    'enter state ' + this.fsh_nextState));
+	}
 	var timer = setInterval(cb, interval);
 	this.fsh_intervals.push(timer);
 	return (timer);
 };
 
 FSMStateHandle.prototype.timeout = function (timeout, cb) {
+	if (!this.fsh_valid) {
+		throw (new Error('FSM attempted to set up timeout in state ' +
+		    this.fsh_state + ' but already called gotoState() to ' +
+		    'enter state ' + this.fsh_nextState));
+	}
 	var timer = setTimeout(cb, timeout);
 	this.fsh_timeouts.push(timer);
 	return (timer);
 };
 
 FSMStateHandle.prototype.immediate = function (cb) {
+	if (!this.fsh_valid) {
+		throw (new Error('FSM attempted to set up immediate in state ' +
+		    this.fsh_state + ' but already called gotoState() to ' +
+		    'enter state ' + this.fsh_nextState));
+	}
 	var timer = setImmediate(cb);
 	this.fsh_immediates.push(timer);
 	return (timer);
 };
 
 FSMStateHandle.prototype.callback = function (cb) {
+	if (!this.fsh_valid) {
+		throw (new Error('FSM attempted to set up callback in state ' +
+		    this.fsh_state + ' but already called gotoState() to ' +
+		    'enter state ' + this.fsh_nextState));
+	}
 	var s = this;
 	return (function () {
 		var args = arguments;
