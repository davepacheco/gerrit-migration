commit 191acf48d43680b7aeadbfc4d9a078ba7a40594a (refs/changes/04/304/1)
Author: Josh Wilsdon <jwilsdon@joyent.com>
Date:   2016-08-16T16:00:31-07:00 (3 years, 2 months ago)
    
    OS-5594 metadata agent dies on aggressive zoneConn asserts

diff --git a/src/vm/lib/metadata/agent.js b/src/vm/lib/metadata/agent.js
index 4176f572..e7277baa 100644
--- a/src/vm/lib/metadata/agent.js
+++ b/src/vm/lib/metadata/agent.js
@@ -246,6 +246,7 @@ function checkStaleSocket(zoneConn, opts, callback) {
         return;
     }
 
+    // Ensure these are the correct types.
     assert.string(zoneConn.sockpath, 'zoneConn.sockpath');
     assert.object(zoneConn.sockstat, 'zoneConn.sockstat');
 
@@ -324,6 +325,7 @@ function addConnSockStat(zoneConn, callback) {
         } else {
             zoneConn.sockstat = st;
         }
+        assert.object(zoneConn.sockstat, 'zoneConn.sockstat');
         callback(e);
     });
 }
@@ -600,7 +602,10 @@ MetadataAgent.prototype.purgeZoneCache = function purgeZoneCache(zonename) {
         delete self.zlog[zonename];
     }
     if (self.zoneConnections.hasOwnProperty(zonename)) {
-        closeZoneConnection(self.zoneConnections[zonename]);
+        if (self.zoneConnections[zonename]) {
+            // it's not undefined, so attempt to close it
+            closeZoneConnection(self.zoneConnections[zonename]);
+        }
         delete self.zoneConnections[zonename];
     }
     if (self.zones.hasOwnProperty(zonename)) {
@@ -639,7 +644,10 @@ MetadataAgent.prototype.checkMissedSysevents = function checkMissedSysevents() {
                     self.log.debug({zonename: zonename}, 'stale socket detected'
                         + ' cleaning up');
 
-                    closeZoneConnection(self.zoneConnections[zonename]);
+                    if (self.zoneConnections[zonename]) {
+                        // not undefined so attempt to close
+                        closeZoneConnection(self.zoneConnections[zonename]);
+                    }
                     delete self.zoneConnections[zonename];
                     _assumeBooted(zonename);
                 } else if (!self.zones[zonename]) {
@@ -794,7 +802,10 @@ MetadataAgent.prototype.start = function () {
             } else if (isStale)  {
                     self.log.debug({zonename: msg.zonename},
                         'stale socket detected cleaning up');
-                    closeZoneConnection(self.zoneConnections[msg.zonename]);
+                    if (self.zoneConnections[msg.zonename]) {
+                        // not undefined so attempt to close
+                        closeZoneConnection(self.zoneConnections[msg.zonename]);
+                    }
                     delete self.zoneConnections[msg.zonename];
             }
 
@@ -910,7 +921,8 @@ MetadataAgent.prototype.createKVMServer = function (zopts, callback) {
     // replace the placeholder entry with a real one.
     self.zoneConnections[zopts.zone] = {
         conn: kvmstream,
-        sockpath: zopts.sockpath
+        sockpath: zopts.sockpath,
+        sockstat: {}
     };
 
     buffer = '';
@@ -1173,7 +1185,8 @@ function createZoneSocket(zopts, callback) {
             self.zoneConnections[zopts.zone] = {
                 serverSocket: server,
                 fd: fd, // so it's in the core for debugging
-                sockpath: path.join(zopts.zoneroot, zopts.path)
+                sockpath: path.join(zopts.zoneroot, zopts.path),
+                sockstat: {}
             };
 
             server.on('error', function (err) {
