commit 71ce4f71ea04c65a6d22f11d934b388212ecf163 (refs/changes/84/2684/4)
Author: Julien Gilli <julien.gilli@joyent.com>
Date:   2017-10-05T17:57:30-07:00 (2 years ago)
    
    DAPI-345 filter out CNs not matching platform requirements for VMs that mount volumes

diff --git a/lib/algorithms/hard-filter-feature-min-platform.js b/lib/algorithms/hard-filter-feature-min-platform.js
new file mode 100644
index 0000000..33f950a
--- /dev/null
+++ b/lib/algorithms/hard-filter-feature-min-platform.js
@@ -0,0 +1,83 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2017, Joyent, Inc.
+ */
+
+/*
+ * Returns servers which meet platform versions requirements depending on what
+ * features are required by a given provision. Currently checks for the
+ * following features:
+ *
+ * - "docker" feature, or the ability to provision a Docker container
+ *
+ * - "docker automatic volume mounting", or the ability to have a Docker
+ *   container automatically mount the volumes it depends on
+ *
+ * - "non-docker automatic volume mounting", or the ability to have an
+ *   infrastructure container automatically mount the volumes it depends on
+ *
+ * Assumes a setup server, so make sure to run hard-filter-setup first.
+ */
+
+var assert = require('assert-plus');
+
+var filterMinPlatforms =
+	require('./shared/platform-versions.js').filterMinPlatforms;
+
+var VERSION_RE = /^\d+\.\d+$/;
+
+function filterFeatureMinPlatform(servers, opts, cb) {
+	assert.arrayOfObject(servers, 'servers');
+	assert.object(opts, 'opts');
+	assert.object(opts.vm, 'opts.vm');
+	assert.object(opts.img, 'opts.img');
+	assert.object(opts.defaults, 'opts.defaults');
+	assert.func(cb, 'cb');
+
+	var reasons = {};
+
+	var dkrMinPlatform = opts.defaults.filter_docker_min_platform;
+	if (opts.vm.docker && dkrMinPlatform) {
+		var dkrMinPlatforms = { '7.0': dkrMinPlatform };
+		servers = filterMinPlatforms(dkrMinPlatforms,
+			servers, 'Docker support', reasons);
+	}
+
+	var dkrVolAutomountMinPlatform =
+	opts.defaults.filter_docker_nfs_volumes_automount_min_platform;
+	if (opts.vm.docker && opts.vm.volumes &&
+		dkrVolAutomountMinPlatform) {
+		var dkrVolAutomountMinPlatforms =
+			{ '7.0': dkrVolAutomountMinPlatform };
+		servers =
+			filterMinPlatforms(dkrVolAutomountMinPlatforms,
+				servers, 'Docker volume automount support',
+				reasons);
+	}
+
+	var nonDkrVolAutomountMinPlatform =
+	opts.defaults.filter_non_docker_nfs_volumes_automount_min_platform;
+	if (!opts.vm.docker && opts.vm.volumes &&
+		nonDkrVolAutomountMinPlatform) {
+		var nonDkrVolAutomountMinPlatforms = {
+			'7.0': nonDkrVolAutomountMinPlatform
+		};
+
+		servers =
+			filterMinPlatforms(nonDkrVolAutomountMinPlatforms,
+				servers, 'Non-docker volume automount support',
+				reasons);
+	}
+
+	return (cb(null, servers, reasons));
+}
+
+module.exports = {
+	name: 'Servers which meet various features\' platform requirements',
+	run: filterFeatureMinPlatform
+};
diff --git a/lib/algorithms/hard-filter-platform-versions.js b/lib/algorithms/hard-filter-platform-versions.js
index 7545377..882e563 100644
--- a/lib/algorithms/hard-filter-platform-versions.js
+++ b/lib/algorithms/hard-filter-platform-versions.js
@@ -19,6 +19,8 @@
 
 var assert = require('assert-plus');
 
+var platformVersions = require('./shared/platform-versions.js');
+
 var VERSION_RE = /^\d+\.\d+$/;
 
 function
@@ -35,13 +37,8 @@ filterPlatformVersions(servers, opts, cb)
 
 	var pkgMinPlatforms = opts.pkg && opts.pkg.min_platform;
 	if (pkgMinPlatforms)
-		servers = filterMinPlatforms(pkgMinPlatforms, servers, reasons);
-
-	var dkrMinPlatform = opts.defaults.filter_docker_min_platform;
-	if (opts.vm.docker && dkrMinPlatform) {
-		var dkrMinPlatforms = { '7.0': dkrMinPlatform };
-		servers = filterMinPlatforms(dkrMinPlatforms, servers, reasons);
-	}
+		servers = platformVersions.filterMinPlatforms(pkgMinPlatforms,
+			servers, 'Package', reasons);
 
 	var img = opts.img;
 	if (!img.requirements)
@@ -49,120 +46,20 @@ filterPlatformVersions(servers, opts, cb)
 
 	var imgMinPlatforms = img.requirements.min_platform;
 	if (imgMinPlatforms)
-		servers = filterMinPlatforms(imgMinPlatforms, servers, reasons);
+		servers = platformVersions.filterMinPlatforms(imgMinPlatforms,
+			servers, 'Image', reasons);
 
 	var imgMaxPlatforms = img.requirements.max_platform;
 	if (imgMaxPlatforms)
-		servers = filterMaxPlatforms(imgMaxPlatforms, servers, reasons);
+		servers = platformVersions.filterMaxPlatforms(imgMaxPlatforms,
+			servers, 'Image', reasons);
 
 	return (cb(null, servers, reasons));
 }
 
-/* mutates reasons arg, if provided */
-function
-filterMinPlatforms(minPlatforms, servers, reasons)
-{
-	var sortedVersions;
-	var maxVersion;
-	var minVersion;
-	var acceptableServers;
-
-	minPlatforms = getValidPlatforms(minPlatforms);
-
-	sortedVersions = Object.keys(minPlatforms).sort();
-	maxVersion = sortedVersions.pop();
-	minVersion = sortedVersions.shift();
-
-	if (!maxVersion)
-		return (servers);
-
-	acceptableServers = [];
-
-	for (var i = 0; i !== servers.length; i++) {
-		var server = servers[i];
-		// 6.5 sysinfo is missing SDC Version
-		var version = server.sysinfo['SDC Version'] || '6.5';
-		var platform = server.sysinfo['Live Image'];
-		var minPlatform = minPlatforms[version];
-
-		if (version > maxVersion || platform >= minPlatform ||
-		    (!minPlatform && minVersion < version &&
-		    version < maxVersion)) {
-			acceptableServers.push(server);
-		} else {
-			var msg = 'Image or package requires min platforms ' +
-			    JSON.stringify(minPlatforms) + ', but server has ' +
-			    '{"' + version + '":"' + platform + '"}';
-			reasons[server.uuid] = msg;
-		}
-	}
-
-	return (acceptableServers);
-}
-
-/* mutates reasons arg, if provided */
-function
-filterMaxPlatforms(maxPlatforms, servers, reasons)
-{
-	var sortedVersions;
-	var minVersion;
-	var maxVersion;
-	var acceptableServers;
-
-	maxPlatforms = getValidPlatforms(maxPlatforms);
-
-	sortedVersions = Object.keys(maxPlatforms).sort();
-	minVersion = sortedVersions.shift();
-	maxVersion = sortedVersions.pop();
-
-	if (!minVersion)
-		return (servers);
-
-	acceptableServers = [];
-
-	for (var i = 0; i !== servers.length; i++) {
-		var server = servers[i];
-		// 6.5 sysinfo is missing SDC Version
-		var version = server.sysinfo['SDC Version'] || '6.5';
-		var platform = server.sysinfo['Live Image'];
-		var maxPlatform = maxPlatforms[version];
-
-		if (version < minVersion || platform <= maxPlatform ||
-		    (!maxPlatform && minVersion < version &&
-		    version < maxVersion)) {
-			acceptableServers.push(server);
-		} else {
-			var msg = 'Image or package requires max platforms ' +
-			    JSON.stringify(maxPlatforms) + ', but server has ' +
-			    '{"' + version + '":"' + platform + '"}';
-			reasons[server.uuid] = msg;
-		}
-	}
-
-	return (acceptableServers);
-}
-
-/*
- * Platforms can also include "smartos", and maybe other things in the future.
- * Whitelist only things that are obviously version numbers. Mutates arg.
- */
-function
-getValidPlatforms(platforms)
-{
-	var versions = Object.keys(platforms);
-
-	for (var i = 0; i !== versions.length; i++) {
-		var version = versions[i];
-
-		if (!version.match(VERSION_RE))
-			delete platforms[version];
-	}
-
-	return (platforms);
-}
 
 module.exports = {
-	name: 'Servers which meet image manifest platform requirements',
+	name:'Servers which meet image manifest and package platform ' +
+		'requirements',
 	run: filterPlatformVersions
-
 };
diff --git a/lib/algorithms/shared/platform-versions.js b/lib/algorithms/shared/platform-versions.js
new file mode 100644
index 0000000..9d5b015
--- /dev/null
+++ b/lib/algorithms/shared/platform-versions.js
@@ -0,0 +1,145 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2017, Joyent, Inc.
+ */
+
+var assert = require('assert-plus');
+
+var VERSION_RE = /^\d+\.\d+$/;
+
+function getServerVersion(server) {
+	assert.object(server, 'server');
+
+	return (server.sysinfo['SDC Version'] || '6.5');
+}
+
+function getServerPlatform(server) {
+	assert.object(server, 'server');
+
+	return (server.sysinfo['Live Image']);
+}
+
+/*
+ * Platforms can also include "smartos", and maybe other things in the future.
+ * Whitelist only things that are obviously version numbers. Mutates arg.
+ */
+function
+getValidPlatforms(platforms)
+{
+	assert.object(platforms, 'platforms');
+
+	var versions = Object.keys(platforms);
+
+	for (var i = 0; i !== versions.length; i++) {
+		var version = versions[i];
+
+		if (!version.match(VERSION_RE))
+			delete platforms[version];
+	}
+
+	return (platforms);
+}
+
+/* mutates reasons arg, if provided */
+function
+filterMinPlatforms(minPlatforms, servers, predicateName, reasons)
+{
+	assert.object(minPlatforms, 'minPlatforms');
+	assert.arrayOfObject(servers, 'servers');
+	assert.string(predicateName, 'predicateName');
+	assert.object(reasons, 'reasons');
+
+	var acceptableServers = [];
+	var maxVersion;
+	var minVersion;
+	var sortedVersions;
+
+	minPlatforms = getValidPlatforms(minPlatforms);
+
+	sortedVersions = Object.keys(minPlatforms).sort();
+	maxVersion = sortedVersions.pop();
+	minVersion = sortedVersions.shift();
+
+	if (!maxVersion) {
+		acceptableServers = servers;
+	} else {
+		for (var i = 0; i !== servers.length; i++) {
+			var server = servers[i];
+			// 6.5 sysinfo is missing SDC Version
+			var version = getServerVersion(server);
+			var platform = getServerPlatform(server);
+			var minPlatform = minPlatforms[version];
+
+			if (version > maxVersion || platform >= minPlatform ||
+				(!minPlatform && minVersion < version &&
+				version < maxVersion)) {
+				acceptableServers.push(server);
+			} else {
+				reasons[server.uuid] = predicateName +
+					' requires min platforms ' +
+					JSON.stringify(minPlatforms) +
+					', but server has ' + '{"' + version +
+					'":"' + platform + '"}';
+			}
+		}
+	}
+
+	return (acceptableServers);
+}
+
+/* mutates reasons arg, if provided */
+function
+filterMaxPlatforms(maxPlatforms, servers, predicateName, reasons)
+{
+	assert.object(maxPlatforms, 'maxPlatforms');
+	assert.arrayOfObject(servers, 'servers');
+	assert.string(predicateName, 'predicateName');
+	assert.object(reasons, 'reasons');
+
+	var sortedVersions;
+	var minVersion;
+	var maxVersion;
+	var acceptableServers;
+
+	maxPlatforms = getValidPlatforms(maxPlatforms);
+
+	sortedVersions = Object.keys(maxPlatforms).sort();
+	minVersion = sortedVersions.shift();
+	maxVersion = sortedVersions.pop();
+
+	if (!minVersion)
+		return (servers);
+
+	acceptableServers = [];
+
+	for (var i = 0; i !== servers.length; i++) {
+		var server = servers[i];
+		// 6.5 sysinfo is missing SDC Version
+		var version = server.sysinfo['SDC Version'] || '6.5';
+		var platform = server.sysinfo['Live Image'];
+		var maxPlatform = maxPlatforms[version];
+
+		if (version < minVersion || platform <= maxPlatform ||
+		    (!maxPlatform && minVersion < version &&
+		    version < maxVersion)) {
+			acceptableServers.push(server);
+		} else {
+			var msg = predicateName + ' requires max platforms ' +
+			    JSON.stringify(maxPlatforms) + ', but server has ' +
+			    '{"' + version + '":"' + platform + '"}';
+			reasons[server.uuid] = msg;
+		}
+	}
+
+	return (acceptableServers);
+}
+
+module.exports = {
+	filterMaxPlatforms: filterMaxPlatforms,
+	filterMinPlatforms: filterMinPlatforms
+};
diff --git a/package.json b/package.json
index a376d33..790948d 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "dapi",
   "description": "SmartDataCenter Designation API",
-  "version": "8.0.0",
+  "version": "8.1.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/algorithms/common.js b/test/algorithms/common.js
index 083f843..c640fb0 100644
--- a/test/algorithms/common.js
+++ b/test/algorithms/common.js
@@ -59,18 +59,39 @@ function createPluginChecker(plugin) {
 
 			t.ifError(err);
 
-			t.deepEqual(servers, expectServers);
-			t.deepEqual(reasons, expectReasons);
+			t.deepEqual(servers, expectServers,
+				'valid servers should be equal to expected ' +
+					'valid servers');
+			t.deepEqual(reasons, expectReasons,
+				'rejection reasons should be equal to ' +
+					'expected reasons');
 
 			t.end();
 		});
 	};
 }
 
+function genServers(serverData)
+{
+	var servers = serverData.map(function (data) {
+		var r = {
+			uuid: data[0],
+			sysinfo: {
+				'SDC Version': data[1],
+				'Live Image': data[2]
+			}
+		};
+
+		return (r);
+	});
+
+	return (servers);
+}
 
 module.exports = {
 	OPTS: OPTS,
 	addCommonOpts: addCommonOpts,
 	createPluginChecker: createPluginChecker,
-	clone: clone
+	clone: clone,
+	genServers: genServers
 };
diff --git a/test/algorithms/hard-filter-min-platform-feature.test.js b/test/algorithms/hard-filter-min-platform-feature.test.js
new file mode 100644
index 0000000..64b8bc4
--- /dev/null
+++ b/test/algorithms/hard-filter-min-platform-feature.test.js
@@ -0,0 +1,282 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2017, Joyent, Inc.
+ */
+
+var test = require('tape');
+
+var common = require('./common.js');
+var filter =
+	require('../../lib/algorithms/hard-filter-feature-min-platform.js');
+
+var log = {
+	trace: function () { return (true); },
+	debug: function () { return (true); }
+};
+
+var dockerFeatureTestServers = common.genServers([
+	['b6d9d432-16bd-41b5-b3ac-7e3986380c37', '6.5', '20121218T203452Z'],
+	['aa652df0-7954-4cbb-9243-3cbb2c99b7be', '6.5', '20121210T203034Z'],
+	/* null should default to 6.5 */
+	['5d4de22f-e082-43ae-83ec-9957be55f2e1', null,  '20130129T122401Z'],
+	['c15641a8-1dad-4b96-be1e-6aa694395aee', '7.0', '20121218T203452Z'],
+	['9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0', '7.0', '20121210T203034Z'],
+	['c98b17b0-d4f9-4a93-b4da-85ee6a065f8a', '7.0', '20130129T122401Z'],
+	['9902bee1-fe4a-4f77-93db-951ed5c501bb', '7.1', '20121218T203452Z'],
+	['f1a33640-8657-4572-8061-31e1ecebbade', '7.1', '20121210T203034Z'],
+	['26dbdcdc-ed50-4169-b27f-e12f27c20026', '7.1', '20130129T122401Z']
+]);
+
+var dockerNfsAutomountTestServers = common.genServers([
+	['b6d9d432-16bd-41b5-b3ac-7e3986380c37', '6.5', '20121218T203452Z'],
+	['aa652df0-7954-4cbb-9243-3cbb2c99b7be', '6.5', '20121210T203034Z'],
+	/* null should default to 6.5 */
+	['5d4de22f-e082-43ae-83ec-9957be55f2e1', null,  '20130129T122401Z'],
+	['c15641a8-1dad-4b96-be1e-6aa694395aee', '7.0', '20121218T203452Z'],
+	['9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0', '7.0', '20121210T203034Z'],
+	['c98b17b0-d4f9-4a93-b4da-85ee6a065f8a', '7.0', '20130129T122401Z'],
+	['9902bee1-fe4a-4f77-93db-951ed5c501bb', '7.1', '20121218T203452Z'],
+	['f1a33640-8657-4572-8061-31e1ecebbade', '7.1', '20121210T203034Z'],
+	['26dbdcdc-ed50-4169-b27f-e12f27c20026', '7.1', '20130129T122401Z'],
+	['59359918-cb06-45c2-9adb-42fc814baa0d', '7.0', '20160613T123039Z']
+]);
+
+var infraContainersNfsAutomountTestServers = common.genServers([
+	['b6d9d432-16bd-41b5-b3ac-7e3986380c37', '6.5', '20121218T203452Z'],
+	['aa652df0-7954-4cbb-9243-3cbb2c99b7be', '6.5', '20121210T203034Z'],
+	/* null should default to 6.5 */
+	['5d4de22f-e082-43ae-83ec-9957be55f2e1', null,  '20130129T122401Z'],
+	['c15641a8-1dad-4b96-be1e-6aa694395aee', '7.0', '20121218T203452Z'],
+	['9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0', '7.0', '20121210T203034Z'],
+	['c98b17b0-d4f9-4a93-b4da-85ee6a065f8a', '7.0', '20130129T122401Z'],
+	['9902bee1-fe4a-4f77-93db-951ed5c501bb', '7.1', '20121218T203452Z'],
+	['f1a33640-8657-4572-8061-31e1ecebbade', '7.1', '20121210T203034Z'],
+	['26dbdcdc-ed50-4169-b27f-e12f27c20026', '7.1', '20130129T122401Z'],
+	['59359918-cb06-45c2-9adb-42fc814baa0d', '7.0', '20160613T123039Z'],
+	['b4343a95-5aeb-499a-bc0e-701c5119b89e', '7.0', '20170925T211846Z']
+]);
+
+var checkFilter = common.createPluginChecker(filter);
+
+test('filterFeatureMinPlatform with filter_docker_min_platform, no Docker',
+function (t) {
+	var expectedServers = dockerFeatureTestServers;
+
+	var opts = {
+		vm: {},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_docker_min_platform: '20121218T203452Z',
+			filter_docker_nfs_volumes_automount_min_platform:
+			'20160613T123039Z'
+		}
+	};
+
+	var expectedReasons = {};
+
+
+	checkFilter(t, dockerFeatureTestServers, opts, expectedServers,
+		expectedReasons);
+	});
+
+
+test('filterFeatureMinPlatform with filter_docker_min_platform, VM is Docker',
+	function (t) {
+
+	var expectedServers = [
+		dockerFeatureTestServers[3],
+		dockerFeatureTestServers[5],
+		dockerFeatureTestServers[6],
+		dockerFeatureTestServers[7],
+		dockerFeatureTestServers[8]
+	];
+
+	var opts = {
+		vm: {
+			docker: true
+		},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_docker_min_platform: '20121218T203452Z',
+			filter_docker_nfs_volumes_automount_min_platform:
+			'20160613T123039Z'
+		}
+	};
+
+	var expectedReasons = {
+		/* BEGIN JSSTYLED */
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"7.0":"20121210T203034Z"}',
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121218T203452Z"}'
+		/* END JSSTYLED */
+	};
+
+	checkFilter(t, dockerFeatureTestServers, opts, expectedServers,
+		expectedReasons);
+});
+
+
+test('filterFeatureMinPlatform with ' +
+	'filter_docker_nfs_automount_min_platform, VM is docker and has no ' +
+	'mounted volume',
+	function (t) {
+	var expectedServers = [
+		dockerNfsAutomountTestServers[3],
+		dockerNfsAutomountTestServers[5],
+		dockerNfsAutomountTestServers[6],
+		dockerNfsAutomountTestServers[7],
+		dockerNfsAutomountTestServers[8],
+		dockerNfsAutomountTestServers[9]
+	];
+
+	var opts = {
+		vm: {
+			docker: true
+		},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_docker_min_platform: '20121218T203452Z',
+			filter_docker_nfs_volumes_automount_min_platform:
+			'20160613T123039Z',
+			filter_non_docker_nfs_volumes_automount_min_platform:
+			'20170925T211846Z'
+		}
+	};
+
+	var expectedReasons = {
+		/* BEGIN JSSTYLED */
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"7.0":"20121210T203034Z"}',
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121218T203452Z"}'
+		/* END JSSTYLED */
+	};
+
+	checkFilter(t, dockerNfsAutomountTestServers, opts, expectedServers,
+		expectedReasons);
+});
+
+
+test('filterFeatureMinPlatform with ' +
+	'filter_docker_nfs_automount_min_platform, VM is Docker and has ' +
+	'mounted volumes',
+	function (t) {
+	var expectedServers = [
+		dockerNfsAutomountTestServers[6],
+		dockerNfsAutomountTestServers[7],
+		dockerNfsAutomountTestServers[8],
+		dockerNfsAutomountTestServers[9]
+	];
+
+	var opts = {
+		vm: {
+			docker: true,
+			volumes: {
+				name: 'foo',
+				mountpoint: '/bar'
+			}
+		},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_docker_min_platform: '20121218T203452Z',
+			filter_docker_nfs_volumes_automount_min_platform:
+			'20160613T123039Z',
+			filter_non_docker_nfs_volumes_automount_min_platform:
+			'20170925T211846Z'
+		}
+	};
+
+	var expectedReasons = {
+		/* BEGIN JSSTYLED */
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"7.0":"20121210T203034Z"}',
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Docker support requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121218T203452Z"}',
+		'c15641a8-1dad-4b96-be1e-6aa694395aee': 'Docker volume automount support requires min platforms {"7.0":"20160613T123039Z"}, but server has {"7.0":"20121218T203452Z"}',
+		'c98b17b0-d4f9-4a93-b4da-85ee6a065f8a': 'Docker volume automount support requires min platforms {"7.0":"20160613T123039Z"}, but server has {"7.0":"20130129T122401Z"}'
+		/* END JSSTYLED */
+	};
+
+	checkFilter(t, dockerNfsAutomountTestServers, opts, expectedServers,
+		expectedReasons);
+});
+
+
+test('filterFeatureMinPlatform with ' +
+	'filter_non_docker_nfs_automount_min_platform, VM is not Docker and ' +
+	'has no mounted volume',
+	function (t) {
+	var expectedServers = infraContainersNfsAutomountTestServers;
+
+	var opts = {
+		vm: {},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_docker_min_platform: '20121218T203452Z',
+			filter_docker_nfs_volumes_automount_min_platform:
+			'20160613T123039Z',
+			filter_non_docker_nfs_volumes_automount_min_platform:
+			'20170925T211846Z'
+		}
+	};
+
+	checkFilter(t, infraContainersNfsAutomountTestServers, opts,
+		expectedServers, []);
+});
+
+
+test('filterFeatureMinPlatform with ' +
+	'filter_non_docker_nfs_automount_min_platform, VM is not Docker and ' +
+	'has mounted volumes',
+	function (t) {
+	var expectedServers = [
+		infraContainersNfsAutomountTestServers[6],
+		infraContainersNfsAutomountTestServers[7],
+		infraContainersNfsAutomountTestServers[8],
+		infraContainersNfsAutomountTestServers[10]
+	];
+
+	var opts = {
+		vm: {
+			volumes: {
+				name: 'foo',
+				mountpoint: '/bar'
+			}
+		},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_docker_min_platform: '20121218T203452Z',
+			filter_docker_nfs_volumes_automount_min_platform:
+			'20160613T123039Z',
+			filter_non_docker_nfs_volumes_automount_min_platform:
+			'20170925T211846Z'
+		}
+	};
+
+	var expectedReasons = {
+		/* BEGIN JSSTYLED */
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Non-docker volume automount support requires min platforms {"7.0":"20170925T211846Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Non-docker volume automount support requires min platforms {"7.0":"20170925T211846Z"}, but server has {"7.0":"20121210T203034Z"}',
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Non-docker volume automount support requires min platforms {"7.0":"20170925T211846Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Non-docker volume automount support requires min platforms {"7.0":"20170925T211846Z"}, but server has {"6.5":"20121218T203452Z"}',
+		'c15641a8-1dad-4b96-be1e-6aa694395aee': 'Non-docker volume automount support requires min platforms {"7.0":"20170925T211846Z"}, but server has {"7.0":"20121218T203452Z"}',
+		'c98b17b0-d4f9-4a93-b4da-85ee6a065f8a': 'Non-docker volume automount support requires min platforms {"7.0":"20170925T211846Z"}, but server has {"7.0":"20130129T122401Z"}',
+		'59359918-cb06-45c2-9adb-42fc814baa0d': 'Non-docker volume automount support requires min platforms {"7.0":"20170925T211846Z"}, but server has {"7.0":"20160613T123039Z"}'
+		/* END JSSTYLED */
+	};
+
+	checkFilter(t, infraContainersNfsAutomountTestServers, opts,
+		expectedServers, expectedReasons);
+});
diff --git a/test/algorithms/hard-filter-platform-versions.test.js b/test/algorithms/hard-filter-platform-versions.test.js
index 49cde38..1383ddf 100644
--- a/test/algorithms/hard-filter-platform-versions.test.js
+++ b/test/algorithms/hard-filter-platform-versions.test.js
@@ -13,7 +13,7 @@ var filter = require('../../lib/algorithms/hard-filter-platform-versions.js');
 var common = require('./common.js');
 
 
-var SERVERS = genServers([
+var SERVERS = common.genServers([
 	['b6d9d432-16bd-41b5-b3ac-7e3986380c37', '6.5', '20121218T203452Z'],
 	['aa652df0-7954-4cbb-9243-3cbb2c99b7be', '6.5', '20121210T203034Z'],
 	/* null should default to 6.5 */
@@ -46,10 +46,10 @@ test('filterPlatformVersions() min platform requirements for images',
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121218T203452Z"}',
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20130129T122401Z"}',
-		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20121210T203034Z"}'
+		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Image requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121218T203452Z"}',
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Image requires min platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20121210T203034Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -75,10 +75,10 @@ test('filterPlatformVersions() min platform requirements for packages',
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121218T203452Z"}',
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20130129T122401Z"}',
-		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Image or package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20121210T203034Z"}'
+		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121218T203452Z"}',
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Package requires min platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20121210T203034Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -99,11 +99,11 @@ test('filterPlatformVersions() max platform requirements', function (t) {
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'c15641a8-1dad-4b96-be1e-6aa694395aee': 'Image or package requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20121218T203452Z"}',
-		'c98b17b0-d4f9-4a93-b4da-85ee6a065f8a': 'Image or package requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20130129T122401Z"}',
-		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image or package requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.1":"20121218T203452Z"}',
-		'f1a33640-8657-4572-8061-31e1ecebbade': 'Image or package requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.1":"20121210T203034Z"}',
-		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image or package requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.1":"20130129T122401Z"}'
+		'c15641a8-1dad-4b96-be1e-6aa694395aee': 'Image requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20121218T203452Z"}',
+		'c98b17b0-d4f9-4a93-b4da-85ee6a065f8a': 'Image requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.0":"20130129T122401Z"}',
+		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.1":"20121218T203452Z"}',
+		'f1a33640-8657-4572-8061-31e1ecebbade': 'Image requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.1":"20121210T203034Z"}',
+		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image requires max platforms {"7.0":"20121211T203034Z"}, but server has {"7.1":"20130129T122401Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -127,14 +127,14 @@ test('filterPlatformVersions() minmax platform requirements 1', function (t) {
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image or package requires max platforms {"6.5":"20130128T203034Z"}, but server has {"6.5":"20130129T122401Z"}',
-		'c15641a8-1dad-4b96-be1e-6aa694395aee': 'Image or package requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.0":"20121218T203452Z"}',
-		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Image or package requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.0":"20121210T203034Z"}',
-		'c98b17b0-d4f9-4a93-b4da-85ee6a065f8a': 'Image or package requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.0":"20130129T122401Z"}',
-		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image or package requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.1":"20121218T203452Z"}',
-		'f1a33640-8657-4572-8061-31e1ecebbade': 'Image or package requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.1":"20121210T203034Z"}',
-		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image or package requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.1":"20130129T122401Z"}'
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image requires max platforms {"6.5":"20130128T203034Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'c15641a8-1dad-4b96-be1e-6aa694395aee': 'Image requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.0":"20121218T203452Z"}',
+		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Image requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.0":"20121210T203034Z"}',
+		'c98b17b0-d4f9-4a93-b4da-85ee6a065f8a': 'Image requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.0":"20130129T122401Z"}',
+		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.1":"20121218T203452Z"}',
+		'f1a33640-8657-4572-8061-31e1ecebbade': 'Image requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.1":"20121210T203034Z"}',
+		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image requires max platforms {"6.5":"20130128T203034Z"}, but server has {"7.1":"20130129T122401Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -161,9 +161,9 @@ test('filterPlatformVersions() minmax platform requirements 2', function (t) {
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image or package requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
-		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image or package requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
+		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -190,10 +190,10 @@ test('filterPlatformVersions() minmax platform requirements 3', function (t) {
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image or package requires max platforms {"6.5":"20130101T122401Z","7.1":"20121217T203452Z"}, but server has {"6.5":"20130129T122401Z"}',
-		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image or package requires max platforms {"6.5":"20130101T122401Z","7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
-		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image or package requires max platforms {"6.5":"20130101T122401Z","7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image requires max platforms {"6.5":"20130101T122401Z","7.1":"20121217T203452Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image requires max platforms {"6.5":"20130101T122401Z","7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
+		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image requires max platforms {"6.5":"20130101T122401Z","7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -222,9 +222,9 @@ test('filterPlatformVersions() minmax platform requirements 4', function (t) {
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"6.5":"20121211T203034Z","7.1":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'f1a33640-8657-4572-8061-31e1ecebbade': 'Image or package requires min platforms {"6.5":"20121211T203034Z","7.1":"20121211T203034Z"}, but server has {"7.1":"20121210T203034Z"}',
-		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image or package requires max platforms {"7.1":"20121219T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image requires min platforms {"6.5":"20121211T203034Z","7.1":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'f1a33640-8657-4572-8061-31e1ecebbade': 'Image requires min platforms {"6.5":"20121211T203034Z","7.1":"20121211T203034Z"}, but server has {"7.1":"20121210T203034Z"}',
+		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image requires max platforms {"7.1":"20121219T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -254,9 +254,9 @@ test('filterPlatformVersions() minmax platform requirements 5', function (t) {
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"6.5":"20121218T203452Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image or package requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
-		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image or package requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image requires min platforms {"6.5":"20121218T203452Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
+		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -283,9 +283,9 @@ test('filterPlatformVersions() ignore non-versions', function (t) {
 
 	var expectReasons = {
 		/* BEGIN JSSTYLED */
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image or package requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
-		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image or package requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
+		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image requires min platforms {"6.5":"20121211T203034Z"}, but server has {"6.5":"20121210T203034Z"}',
+		'9902bee1-fe4a-4f77-93db-951ed5c501bb': 'Image requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20121218T203452Z"}',
+		'26dbdcdc-ed50-4169-b27f-e12f27c20026': 'Image requires max platforms {"7.1":"20121217T203452Z"}, but server has {"7.1":"20130129T122401Z"}'
 		/* END JSSTYLED */
 	};
 
@@ -311,54 +311,6 @@ test('filterPlatformVersions() ignore non-versions', function (t) {
 });
 
 
-test('filterPlatformVersions() with filter_docker_min_platform, no Docker',
-function (t) {
-	var expectServers = SERVERS;
-	var expectReasons = {};
-
-	var opts = {
-		vm: {},
-		img: {},
-		pkg: {},
-		defaults: {
-			filter_docker_min_platform: '20121218T203452Z'
-		}
-	};
-
-	checkFilter(t, SERVERS, opts, expectServers, expectReasons);
-});
-
-
-test('filterPlatformVersions() with filter_docker_min_platform, VM is Docker',
-function (t) {
-	var expectServers = [
-		SERVERS[3],
-		SERVERS[5],
-		SERVERS[6],
-		SERVERS[7],
-		SERVERS[8]
-	];
-
-	var expectReasons = {
-		/* BEGIN JSSTYLED */
-		'5d4de22f-e082-43ae-83ec-9957be55f2e1': 'Image or package requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20130129T122401Z"}',
-		'9728b8c3-ecbd-4af9-94b0-a1b26e6e5cc0': 'Image or package requires min platforms {"7.0":"20121218T203452Z"}, but server has {"7.0":"20121210T203034Z"}',
-		'aa652df0-7954-4cbb-9243-3cbb2c99b7be': 'Image or package requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121210T203034Z"}',
-		'b6d9d432-16bd-41b5-b3ac-7e3986380c37': 'Image or package requires min platforms {"7.0":"20121218T203452Z"}, but server has {"6.5":"20121218T203452Z"}'
-		/* END JSSTYLED */
-	};
-
-	var opts = {
-		vm: { docker: true },
-		img: {},
-		pkg: {},
-		defaults: { filter_docker_min_platform: '20121218T203452Z' }
-	};
-
-	checkFilter(t, SERVERS, opts, expectServers, expectReasons);
-});
-
-
 test('filterPlatformVersions() no pkg', function (t) {
 	var expectServers = SERVERS;
 	var expectReasons = {};
@@ -381,22 +333,3 @@ test('name', function (t) {
 	t.equal(typeof (filter.name), 'string');
 	t.end();
 });
-
-
-function
-genServers(serverData)
-{
-	var servers = serverData.map(function (data) {
-		var r = {
-			uuid: data[0],
-			sysinfo: {
-				'SDC Version': data[1],
-				'Live Image': data[2]
-			}
-		};
-
-		return (r);
-	});
-
-	return (servers);
-}
diff --git a/test/allocator.test.js b/test/allocator.test.js
index 6d6a4e1..8630cb5 100644
--- a/test/allocator.test.js
+++ b/test/allocator.test.js
@@ -793,6 +793,7 @@ test('load available algorithms', function (t) {
 		'calculate-server-unreserved',
 		'calculate-ticketed-vms',
 		'hard-filter-capness',
+		'hard-filter-feature-min-platform',
 		'hard-filter-headnode',
 		'hard-filter-invalid-servers',
 		'hard-filter-large-servers',
