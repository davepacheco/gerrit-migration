commit ac1bf973d4e71ff526b06a2c3dd8f56851412e45 (refs/changes/43/4743/1)
Author: Robert Mustacchi <rm@joyent.com>
Date:   2018-08-24T23:22:50+00:00 (1 year, 1 month ago)
    
    OS-7176 ehci_take_control() can infiinte loop due to PCI invalid reads

diff --git a/usr/src/uts/common/io/usb/hcd/ehci/ehci_util.c b/usr/src/uts/common/io/usb/hcd/ehci/ehci_util.c
index 3900fbd6d6..1c93c0d9d2 100644
--- a/usr/src/uts/common/io/usb/hcd/ehci/ehci_util.c
+++ b/usr/src/uts/common/io/usb/hcd/ehci/ehci_util.c
@@ -21,6 +21,7 @@
 
 /*
  * Copyright (c) 2002, 2010, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -834,8 +835,7 @@ skip_intr:
  * Register FIXED or MSI interrupts.
  */
 static int
-ehci_add_intrs(ehci_state_t	*ehcip,
-		int		intr_type)
+ehci_add_intrs(ehci_state_t *ehcip, int intr_type)
 {
 	int	actual, avail, intr_size, count = 0;
 	int	i, flag, ret;
@@ -1232,8 +1232,7 @@ ehci_init_check_status(ehci_state_t	*ehcip)
  * Initialize the Host Controller (HC).
  */
 int
-ehci_init_ctlr(ehci_state_t	*ehcip,
-		int		init_type)
+ehci_init_ctlr(ehci_state_t *ehcip, int init_type)
 {
 	USB_DPRINTF_L4(PRINT_MASK_ATTA, ehcip->ehci_log_hdl, "ehci_init_ctlr:");
 
@@ -1406,6 +1405,16 @@ ehci_take_control(ehci_state_t *ehcip)
 		extended_cap = pci_config_get32(ehcip->ehci_config_handle,
 		    extended_cap_offset);
 
+		/*
+		 * It's possible that we'll receive an invalid PCI read here. If
+		 * we do, treat this as platform firmware having messed up and
+		 * that the same as though the cap doesn't exist.
+		 */
+		if (extended_cap == PCI_EINVAL32) {
+			extended_cap_id = EHCI_EX_CAP_ID_RESERVED;
+			break;
+		}
+
 		/* Get the capability ID */
 		extended_cap_id = (extended_cap & EHCI_EX_CAP_ID) >>
 		    EHCI_EX_CAP_ID_SHIFT;
@@ -1418,6 +1427,7 @@ ehci_take_control(ehci_state_t *ehcip)
 		/* Get the offset of the next capability */
 		extended_cap_offset = (extended_cap & EHCI_EX_CAP_NEXT_PTR) >>
 		    EHCI_EX_CAP_NEXT_PTR_SHIFT;
+
 	}
 
 	/*
@@ -2976,7 +2986,8 @@ ehci_lattice_parent(uint_t node)
  * Based on the "real" array leaf node and interval, get the periodic node.
  */
 static uint_t
-ehci_find_periodic_node(uint_t leaf, int interval) {
+ehci_find_periodic_node(uint_t leaf, int interval)
+{
 	uint_t	lattice_leaf;
 	uint_t	height = ehci_lattice_height(interval);
 	uint_t	pnode;
diff --git a/usr/src/uts/common/sys/usb/hcd/ehci/ehci.h b/usr/src/uts/common/sys/usb/hcd/ehci/ehci.h
index 76766ce68e..ce8d735ac8 100644
--- a/usr/src/uts/common/sys/usb/hcd/ehci/ehci.h
+++ b/usr/src/uts/common/sys/usb/hcd/ehci/ehci.h
@@ -280,6 +280,7 @@ typedef volatile struct ehci_regs {
 #define	EHCI_EX_CAP_NEXT_PTR_SHIFT	8
 #define	EHCI_EX_CAP_ID			0x000000FF
 #define	EHCI_EX_CAP_ID_SHIFT		0
+#define	EHCI_EX_CAP_ID_RESERVED		0
 #define	EHCI_EX_CAP_ID_BIOS_HANDOFF	1
 
 #define	EHCI_LEGSUP_OS_OWNED_SEM	0x01000000
