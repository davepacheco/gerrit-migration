From 320c858c36bb8204fd3afafbbb05ab226315b9b8 Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Thu, 27 Oct 2016 23:15:50 -0700
Subject: [PATCH] TOOLS-1593 v8plus should use error checking mutexes

---
 .gitignore           |  1 +
 LICENSE              |  2 +-
 Makefile.v8plus.defs |  4 ++--
 package.json         |  2 +-
 v8plus_csup.c        | 21 +++++++++++++++++----
 5 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/.gitignore b/.gitignore
index f977c45..4566d05 100644
--- a/.gitignore
+++ b/.gitignore
@@ -8,3 +8,4 @@ examples/v8plus_objectwrap.o
 examples/v8plus_subr.o
 node_modules/
 mapfile_node
+cscope.*
diff --git a/LICENSE b/LICENSE
index 280e336..c14c487 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,4 +1,4 @@
-Copyright (c) 2013, Joyent, Inc. All rights reserved.
+Copyright 2016 Joyent, Inc.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
diff --git a/Makefile.v8plus.defs b/Makefile.v8plus.defs
index c7c33f7..58ff10e 100644
--- a/Makefile.v8plus.defs
+++ b/Makefile.v8plus.defs
@@ -1,5 +1,5 @@
 #
-# Copyright (c) 2014 Joyent, Inc.  All rights reserved.
+# Copyright 2016 Joyent, Inc.
 #
 
 #
@@ -13,7 +13,7 @@ CC =		gcc
 CXX =		g++
 CTFCONVERT =	/opt/onbld/bin/i386/ctfconvert
 CTFMERGE =	/opt/onbld/bin/i386/ctfmerge
-CTF_LABEL =	v8plus_0.3.0
+CTF_LABEL =	v8plus_0.3.2
 
 NODE_EXEC =	$(PREFIX_NODE)/bin/node
 
diff --git a/package.json b/package.json
index 12685f0..221156c 100644
--- a/package.json
+++ b/package.json
@@ -2,7 +2,7 @@
 	"author": "Keith M Wesolowski <keith.wesolowski@joyent.com>",
 	"name": "v8plus",
 	"description": "utility environment for writing addons in C",
-	"version": "0.3.1",
+	"version": "0.3.2",
 	"contributors": [
 		"Joshua M. Clulow <jmc@joyent.com>"
 	],
diff --git a/v8plus_csup.c b/v8plus_csup.c
index 89cc95b..5859e15 100644
--- a/v8plus_csup.c
+++ b/v8plus_csup.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Joyent, Inc.  All rights reserved.
+ * Copyright 2016 Joyent, Inc.
  */
 
 #include <sys/ccompile.h>
@@ -44,6 +44,8 @@ typedef struct v8plus_uv_ctx {
 	v8plus_completion_f vuc_completion;
 } v8plus_uv_ctx_t;
 
+static pthread_mutexattr_t _v8plus_mutexattr;
+
 static STAILQ_HEAD(v8plus_callq_head, v8plus_async_call) _v8plus_callq =
     STAILQ_HEAD_INITIALIZER(_v8plus_callq);
 static pthread_mutex_t _v8plus_callq_mtx;
@@ -184,7 +186,7 @@ v8plus_cross_thread_call(v8plus_async_call_t *vac)
 	/*
 	 * Common call structure initialisation:
 	 */
-	if (pthread_mutex_init(&vac->vac_mtx, NULL) != 0)
+	if (pthread_mutex_init(&vac->vac_mtx, &_v8plus_mutexattr) != 0)
 		v8plus_panic("could not init async call mutex");
 	if (pthread_cond_init(&vac->vac_cv, NULL) != 0)
 		v8plus_panic("could not init async call condvar");
@@ -328,11 +330,22 @@ v8plus_crossthread_init(void)
 	(void) nv_alloc_init(&_v8plus_nva, nv_fixed_ops,
 	    _v8plus_exception_buf, sizeof (_v8plus_exception_buf));
 
+	/*
+	 * We want error checking mutexes that do not allow recursive entry,
+	 * and which report failures due to inconsistent entry and exit.
+	 */
+	if (pthread_mutexattr_init(&_v8plus_mutexattr) != 0 ||
+	    pthread_mutexattr_settype(&_v8plus_mutexattr,
+	    PTHREAD_MUTEX_ERRORCHECK) != 0) {
+		v8plus_panic("unable to initialise mutex attributes");
+	}
+
 	_v8plus_uv_event_thread = pthread_self();
 	if (uv_async_init(uv_default_loop(), &_v8plus_uv_async,
-	    v8plus_async_callback) != 0)
+	    v8plus_async_callback) != 0) {
 		v8plus_panic("unable to initialise uv_async_t");
-	if (pthread_mutex_init(&_v8plus_callq_mtx, NULL) != 0)
+	}
+	if (pthread_mutex_init(&_v8plus_callq_mtx, &_v8plus_mutexattr) != 0)
 		v8plus_panic("unable to initialise mutex");
 
 	/*
-- 
2.21.0

