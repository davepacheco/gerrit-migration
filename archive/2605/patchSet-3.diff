commit 06ffaf5bbbcf6d31ee7102a666f841d14d9a4aec (refs/changes/05/2605/3)
Author: Kelly McLaughlin <kelly.mclaughlin@joyent.com>
Date:   2017-09-19T16:36:24-06:00 (2 years, 1 month ago)
    
    joyent/node-manta#328 Version and Help should not require Vars to be Set
    Reviewed by: Trent Mick <trentm@gmail.com>
    Approved by: Trent Mick <trentm@gmail.com>

diff --git a/bin/mchattr b/bin/mchattr
index 32899c4..2f99486 100755
--- a/bin/mchattr
+++ b/bin/mchattr
@@ -55,7 +55,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
     }
@@ -87,6 +86,12 @@ function parseOptions() {
         return (manta.path(p, true));
     });
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mchmod b/bin/mchmod
index b3986ab..e2a243d 100755
--- a/bin/mchmod
+++ b/bin/mchmod
@@ -65,7 +65,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message,
                                         '-- [+-=]role,... path...');
@@ -95,6 +94,13 @@ function parseOptions() {
         return (manta.path(p, true));
     });
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message,
+                        '-- [+-=]role,... path...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mfind b/bin/mfind
index a1c691b..62b3566 100755
--- a/bin/mfind
+++ b/bin/mfind
@@ -99,7 +99,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, '[PATH...]');
     }
@@ -121,6 +120,12 @@ function parseOptions() {
         opts.paths = opts._args;
     }
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, '[PATH...]');
+    }
+
     return (opts);
 }
 
diff --git a/bin/minfo b/bin/minfo
index f85917d..684ef88 100755
--- a/bin/minfo
+++ b/bin/minfo
@@ -43,7 +43,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
     }
@@ -61,6 +60,12 @@ function parseOptions() {
 
     opts.paths = opts._args;
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mln b/bin/mln
index eebab6e..2c8868d 100755
--- a/bin/mln
+++ b/bin/mln
@@ -55,7 +55,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'source dest');
     }
@@ -82,6 +81,12 @@ function parseOptions() {
         opts['role-tag'] = opts['role-tag'][0].split(/\s*,\s*/);
     }
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'source dest');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mlogin b/bin/mlogin
index 2e7b6a6..3f67196 100755
--- a/bin/mlogin
+++ b/bin/mlogin
@@ -120,7 +120,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
     }
@@ -193,6 +192,12 @@ function parseOptions() {
     opts.config_key = '/' + opts.account + '/stor/medusa-config-' +
         libuuid.v4() + '.json';
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mls b/bin/mls
index b84568d..8c08c9d 100755
--- a/bin/mls
+++ b/bin/mls
@@ -88,7 +88,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, '[PATH]...');
     }
@@ -126,6 +125,12 @@ function parseOptions() {
         }
     }
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, '[PATH]...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mmd5 b/bin/mmd5
index 182b154..20a5bb6 100755
--- a/bin/mmd5
+++ b/bin/mmd5
@@ -47,7 +47,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
     }
@@ -66,6 +65,12 @@ function parseOptions() {
     opts.parallel = 10;
     opts.paths = opts._args;
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mrm b/bin/mrm
index 6753d60..ba67301 100755
--- a/bin/mrm
+++ b/bin/mrm
@@ -60,7 +60,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
     }
@@ -81,6 +80,12 @@ function parseOptions() {
         return (manta.path(p,  true));
     });
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/mrmdir b/bin/mrmdir
index 997e29b..aa24620 100755
--- a/bin/mrmdir
+++ b/bin/mrmdir
@@ -42,7 +42,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
     }
@@ -63,6 +62,12 @@ function parseOptions() {
         return (manta.path(p, true));
     });
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
+    }
+
     return (opts);
 }
 
diff --git a/bin/msign b/bin/msign
index b0467cc..4dc89e4 100755
--- a/bin/msign
+++ b/bin/msign
@@ -83,7 +83,6 @@ function parseOptions() {
 
     try {
         opts = OPTIONS_PARSER.parse(process.argv);
-        manta.checkBinEnv(opts);
     } catch (e) {
         manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
     }
@@ -111,6 +110,12 @@ function parseOptions() {
 
     opts.paths = opts._args;
 
+    try {
+        manta.checkBinEnv(opts);
+    } catch (e) {
+        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
+    }
+
     return (opts);
 }
 
diff --git a/lib/options.js b/lib/options.js
index 3fbffed..75b02b2 100644
--- a/lib/options.js
+++ b/lib/options.js
@@ -48,7 +48,6 @@ function parseOptions(args) {
 
     try {
         opts = parser.parse(process.argv);
-        cc.checkBinEnv(opts);
     } catch (e) {
         cc.usage(parser, e.message, 'path...');
     }
@@ -78,5 +77,11 @@ function parseOptions(args) {
 
     args.parseCmdOptions(opts, parser);
 
+    try {
+        cc.checkBinEnv(opts);
+    } catch (e) {
+        cc.usage(parser, e.message, 'path...');
+    }
+
     return (opts);
 }
\ No newline at end of file
diff --git a/test/options.test.js b/test/options.test.js
new file mode 100644
index 0000000..fa5df94
--- /dev/null
+++ b/test/options.test.js
@@ -0,0 +1,107 @@
+/*
+ * Copyright 2017 Joyent, Inc.
+ */
+
+/*
+ * Test the CLI options for different commands
+ */
+
+var forkExecWait = require('forkexec').forkExecWait;
+var path = require('path');
+var vasync = require('vasync');
+
+var BINDIR = path.resolve(__dirname, '../bin');
+
+const ALLCMDS = [ 'mchattr', 'mchmod', 'mfind', 'mget', 'minfo',
+                  'mln', 'mlogin', 'mls', 'mmd5', 'mmkdir', 'mput',
+                  'mrm', 'mrmdir', 'msign', 'muntar'
+                ];
+
+// ---- helper functions
+
+function resolveCommand(cmd) {
+    var r = path.resolve(BINDIR, cmd);
+    return (r);
+}
+
+
+function test(name, testfunc) {
+    module.exports[name] = testfunc;
+}
+
+
+function forkCmdWithOption(input, option, cb) {
+    forkExecWait({
+        argv: [ input.cmd,
+                option
+              ],
+        env: { MANTA_URL: '' }
+    }, function (err, info) {
+           const t = input.test;
+           const urlArgMsg = 'url is a required argument';
+
+           t.ifError(err, err);
+           t.equal(info.stderr.indexOf(urlArgMsg), -1);
+
+           if (cb) {
+               cb();
+           }
+
+           return;
+    });
+}
+
+
+function forkHelpOption(cmd, cb) {
+    forkCmdWithOption(cmd, '--help', cb);
+}
+
+
+function forkVersionOption(cmd, cb) {
+    forkCmdWithOption(cmd, '--version', cb);
+}
+
+
+function inputObject(testObj) {
+    const fn = function mkObject(command) {
+        const resolvedCommand = resolveCommand(command);
+        return { cmd: resolvedCommand,
+                 test: testObj
+               };
+    };
+
+    return (fn);
+}
+
+
+// ---- tests
+
+/*
+ * Test that specifying the --help option with no manta URL specified does not
+ * result in a warning about the missing URL. This verifies the fix for
+ * https://github.com/joyent/node-manta/issues/328.
+ */
+
+test('Run commands with --help with no manta URL specified', function (t) {
+    vasync.forEachPipeline({
+        inputs: ALLCMDS.map(inputObject(t)),
+        func: forkHelpOption
+    }, function (err, results) {
+           t.done();
+       });
+});
+
+
+/*
+ * Test that specifying the --version option with no manta URL specified does
+ * not result in a warning about the missing URL. This verifies the fix for
+ * https://github.com/joyent/node-manta/issues/328.
+ */
+test('Run commands with --version with no manta URL specified', function (t) {
+    vasync.forEachParallel({
+        inputs: ALLCMDS.map(inputObject(t)),
+        func: forkVersionOption
+    }, function (err, results) {
+           t.done();
+       });
+});
