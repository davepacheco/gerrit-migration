commit f806e5ae26ee34e08842f81540c726bce34d4431 (refs/changes/99/799/3)
Author: Josh Wilsdon <jwilsdon@joyent.com>
Date:   2016-10-27T16:47:03-07:00 (2 years, 11 months ago)
    
    PAPI-132 PAPI should be updated to node v4
    Reviewed by: Trent Mick <trentm@gmail.com>
    Approved by: Trent Mick <trentm@gmail.com>

diff --git a/Makefile b/Makefile
index 7e0c40c..8e7c872 100644
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2016, Joyent, Inc.
 #
 
 #
@@ -33,7 +33,7 @@ TAP		:= ./node_modules/.bin/tap
 DOC_FILES	 = index.md
 RESTDOWN_FLAGS   = --brand-dir=deps/restdown-brand-remora
 EXTRA_DOC_DEPS += deps/restdown-brand-remora/.git
-JS_FILES	:= $(shell ls *.js) $(shell find lib test bin -name '*.js') bin/importer
+JS_FILES	:= $(shell ls *.js) $(shell find lib test -name '*.js')
 JSON_FILES	 = package.json
 JSL_CONF_NODE	 = tools/jsl.node.conf
 JSL_FILES_NODE	 = $(JS_FILES)
@@ -41,12 +41,12 @@ JSSTYLE_FILES	 = $(JS_FILES)
 JSSTYLE_FLAGS	 = -f tools/jsstyle.conf
 SMF_MANIFESTS_IN = smf/manifests/papi.xml.in
 
-NODE_PREBUILT_VERSION=v0.10.26
 
+NODE_PREBUILT_VERSION=v4.6.1
 ifeq ($(shell uname -s),SunOS)
-    NODE_PREBUILT_TAG=zone
-    # Allow building on a SmartOS image other than sdc-smartos/1.6.3.
-    NODE_PREBUILT_IMAGE=fd2cc906-8938-11e3-beab-4359c665ac99
+        NODE_PREBUILT_TAG=zone
+        # Allow building on other than sdc-minimal-multiarch-lts@15.4.1
+        NODE_PREBUILT_IMAGE=18b094b0-eb01-11e5-80c1-175dac7ddf02
 endif
 
 include ./tools/mk/Makefile.defs
@@ -89,7 +89,6 @@ release: check all docs
 	@touch $(RELSTAGEDIR)/site/.do-not-delete-me
 	@mkdir -p $(RELSTAGEDIR)/root
 	cp -r	$(ROOT)/build \
-		$(ROOT)/bin \
 		$(ROOT)/etc \
 		$(ROOT)/lib \
 		$(ROOT)/server.js \
diff --git a/bin/importer b/bin/importer
deleted file mode 100755
index 8539de2..0000000
--- a/bin/importer
+++ /dev/null
@@ -1,526 +0,0 @@
-#!/usr/bin/env node
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-// vim: set filetype=javascript :
-
-/*
- * Utility to import sdcPackages from UFDS LDAP into sdc_packages bucket. This
- * is needed once during upgrade from UFDS to PAPI.
- *
- * Typical usage for importing from an LDIF file:
- *
- * ./bin/importer --ldif packages.ldif
- *
- * Typical usage for importing from a JSON dump from mapi2moray:
- *
- * ./bin/importer --json papi_packages.moray
- *
- * Typical usage for importing from UFDS:
- *
- * ./bin/importer --url ldaps://ufds.coal.joyent.us --binddn 'cn=root' \
- *   --password 'secret'
- *
- * If binder is running, ufds.coal.joyent.us addresses can be set using:
- *
- * dig +short @10.99.99.11 ufds.coal.joyent.us A
- * ./bin/importer --url ldaps://10.99.99.18 --binddn 'cn=root' \
- *   --password 'secret' --debug 1 2>&1 | bunyan
- */
-
-var fs          = require('fs');
-var nopt        = require('nopt');
-var url         = require('url');
-var path        = require('path');
-var util        = require('util');
-var restify     = require('restify');
-var Logger      = require('bunyan');
-var ldap        = require('ldapjs');
-var vasync      = require('vasync');
-var Backend     = require('../lib/backend');
-var tools       = require('../lib/tools');
-var validations = require('../lib/validations');
-
-
-
-var DEFAULT_CFG_PATH = path.normalize(__dirname + '/../etc/config.json');
-
-nopt.typeDefs.DN = {
-    type: ldap.DN,
-    validate: function (data, k, val) {
-        data[k] = ldap.parseDN(val);
-    }
-};
-
-var optTypes = {
-    'config': String,
-    'debug': Number,
-    'dryrun': Boolean,
-    'binddn': ldap.DN,
-    'password': String,
-    'timeout': Number,
-    'overwrite': Boolean,
-    'url': url,
-    'ldif': String,
-    'json': String
-};
-
-var shortOpts = {
-    'c': ['--config'],
-    'u': ['--url'],
-    'l': ['--ldif'],
-    'j': ['--json'],
-    'D': ['--binddn'],
-    'w': ['--password'],
-    't': ['--timeout'],
-    'o': ['--overwrite'],
-    'd': ['--debug'],
-    'y': ['--dryrun']
-};
-
-var perror; // loaded by main()
-
-
-
-/*
- * Display usage of this program, then terminate.
- */
-
-function usage(code, message) {
-    var opts = '';
-
-    Object.keys(shortOpts).forEach(function (k) {
-        var opt = shortOpts[k];
-
-        if (!Array.isArray(opt))
-            return;
-
-        var longOpt = opt[0].replace('--', '');
-        var type = optTypes[longOpt].name || 'string';
-
-        if (type === 'boolean')
-            type = '';
-
-        type = type.toLowerCase();
-
-        opts += ' [--' + longOpt + ' ' + type + ']';
-    });
-
-    var basename = path.basename(process.argv[1]);
-    var msg = (message ? message + '\n' : '') + 'usage: ' + basename + opts;
-
-    process.stderr.write(msg + '\n');
-    process.exit(code);
-}
-
-
-
-/*
- * Parse command-line args, and set defaults for some missing ones.
- */
-
-function parseOpts() {
-    try {
-        var opts = nopt(optTypes, shortOpts, process.argv, 2);
-    } catch (e) {
-        usage(1, e.toString());
-    }
-
-    if (opts.help || !(opts.url || opts.ldif || opts.json))
-        return usage(0);
-
-    if (!opts.binddn)
-        opts.binddn = 'cn=root';
-
-    if (!opts.password)
-        opts.password = 'secret';
-
-    return opts;
-}
-
-
-
-/*
- * Convert LDIF or LDIF-like-JSON to more regular JS objects.
- */
-
-var attrs2ignore = ['dn', 'objectclass', 'controls', 'overprovision_cpu',
-                    'overprovision_memory', 'overprovision_storage',
-                    'overprovision_network', 'overprovision_io', 'urn'];
-var attrs2numerify = ['max_physical_memory', 'max_swap', 'vcpus', 'cpu_cap',
-                      'max_lwps', 'quota', 'zfs_io_priority', 'fss',
-                      'cpu_burst_ratio', 'ram_ratio'];
-var attrs2boolean = ['active', 'default'];
-
-function decode(obj, log) {
-    attrs2ignore.forEach(function (a) {
-        delete obj[a];
-    });
-
-    attrs2numerify.forEach(function (a) {
-        if (obj[a])
-            obj[a] = Number(obj[a]);
-
-        if (obj[a] === NaN)
-            log.warn({ package: obj }, 'Number is NaN');
-    });
-
-    attrs2boolean.forEach(function (a) {
-        if (obj[a] === undefined)
-            return;
-
-        obj[a] = (obj[a] === 'true' || obj[a] === true);
-    });
-
-    if (obj.networks) {
-        if (typeof (obj.networks) === 'string') {
-            try {
-                obj.networks = JSON.parse(obj.networks);
-            } catch (e) {
-                obj.networks = [];
-                log.error({ err: e, package: obj }, 'Error importing networks');
-            }
-        } else if (!Array.isArray(obj.networks)) {
-            obj.networks = [];
-            log.error({ package: obj }, 'Error importing networks');
-        }
-    }
-
-    // we're changing from owner_uuid to owner_uuids here
-    if (obj.owner_uuid) {
-        if (typeof (obj.owner_uuid) === 'string') {
-            try {
-                obj.owner_uuids = JSON.parse(obj.owner_uuid);
-            } catch (e) {
-                obj.owner_uuids = [obj.owner_uuid];
-            }
-        } else if (!Array.isArray(obj.owner_uuid)) {
-            obj.owner_uuids = [];
-            log.error({ package: obj }, 'Error importing owners');
-        } else {
-            obj.owner_uuids = obj.owner_uuid;
-        }
-
-        delete obj.owner_uuid;
-    }
-
-    if (obj.traits) {
-        try {
-            obj.traits = JSON.parse(obj.traits);
-        } catch (e) {
-            obj.traits = {};
-            log.error({ err: e, package: obj }, 'Error importing traits');
-        }
-    }
-
-    if (obj.min_platform) {
-        try {
-            obj.min_platform = JSON.parse(obj.min_platform);
-        } catch (e) {
-            obj.min_platform = {};
-            log.error({ err: e, package: obj }, 'Error importing min_platform');
-        }
-    }
-
-    return obj;
-}
-
-
-
-/*
- * Load JSON from a file and return an array of package objects.
- */
-
-function loadJsonPackages(config, log, cb) {
-    return fs.readFile(config.json, 'utf8', function (err, jsonRows) {
-        if (err)
-            return cb(err);
-
-        var packages = jsonRows.split('\n').map(function (json) {
-            try {
-                return decode(JSON.parse(json), log);
-            } catch (e) {
-                log.error({ err: e, json: json }, 'Error parsing JSON');
-                return null;
-            }
-        });
-
-        packages = packages.filter(function (p) { return p; });
-
-        return cb(null, packages);
-    });
-}
-
-
-
-/*
- * Load LDIF from a file and return an array of package objects.
- *
- * Takes an array of ldif lines, then combines and converts those lines into
- * an array of JS objects which represent the same data -- bundle lines from
- * the same ldif object into a JS object, convert string representations of
- * numbers into JS numbers, same for booleans, turn multiple ldif keys into
- * a JS array, and so forth.
- */
-
-function loadLdifPackages(config, log, cb) {
-    return fs.readFile(config.ldif, 'utf8', function (err, ldif) {
-        if (err)
-            return cb(err);
-
-        var packages = [];
-        var lookup = {};
-
-        ldif.split('\n').forEach(function (line) {
-            if (line === '') {
-                if (Object.keys(lookup).length > 0) {
-                    var pkg = decode(lookup, log);
-
-                    if (pkg.uuid)
-                        packages.push(pkg);
-
-                    lookup = {};
-                }
-                return;
-            }
-
-            // base64 entries have two colons instead of one between key/val
-            var match = line.match(/^([^:]+?):(:? .+)$/);
-
-            if (match) {
-                var name  = match[1];
-                var value = match[2];
-                var orig  = lookup[name];
-
-                // necessary since some package 'name's are base64
-                if (value[0] === ':') {
-                    value = '' + new Buffer(value.slice(2), 'base64');
-                } else {
-                    value = value.slice(1);
-                }
-
-                if (orig) {
-                    if (Array.isArray(orig)) {
-                        orig.push(value);
-                    } else {
-                        lookup[name] = [orig, value];
-                    }
-                } else {
-                    lookup[name] = value;
-                }
-            }
-        });
-
-        return cb(null, packages);
-    });
-}
-
-
-
-/*
- * Load all the sdcPackages from UFDS and return an array of package objects.
- */
-
-function loadUfdsPackages(config, log, cb) {
-    var packages = [];
-
-    var client = ldap.createClient({
-        url: config.url,
-        log: log,
-        timeout: config.timeout || false
-    });
-
-    client.once('error', function (err) {
-        return cb(err);
-    });
-
-    client.once('timeout', function () {
-        return cb('Timeout reached\n');
-    });
-
-    return client.bind(config.binddn, config.password, function (err, r) {
-        if (err)
-            return cb(err);
-
-        var req = {
-            scope: 'sub',
-            filter: '(&(objectclass=sdcpackage))'
-        };
-
-        return client.search('o=smartdc', req, function (er, res) {
-            if (er)
-                return cb(er);
-
-            res.on('searchEntry', function (entry) {
-                var obj = decode(entry.object, log);
-                packages.push(obj);
-            });
-
-            res.once('error', function (err2) {
-                return cb(err2);
-            });
-
-            return res.once('end', function (res2) {
-                if (res2.status !== 0)
-                    return cb(ldap.getMessage(res2.status));
-
-                return client.unbind(function () {
-                    return cb(null, packages);
-                });
-            });
-        });
-    });
-}
-
-
-
-/*
- * Save an array of package objects into PAPI, checking for duplicates.
- */
-
-function savePapiPackages(packages, config, log, callback) {
-    var backend = new Backend(config);
-
-    return backend.init(function (err) {
-        if (err)
-            return perror(err);
-
-        var success = 0;
-        var savePkg = function (pkg, next) {
-            var validationErrs = validations.validate(pkg, backend.schema);
-
-            if (validationErrs) {
-                var msg = validationErrs.map(function (error) {
-                    return error.field + ' ' + error.message;
-                }).join(', ');
-
-                log.error({ pkg: pkg, err: msg }, 'Error importing package');
-                return next();
-            }
-
-            if (config.dryrun) {
-                log.info({ pkg: pkg }, 'Package imported');
-                return next();
-            }
-
-            // updatePkg does a create-or-update
-            var creator = config.overwrite ?
-                          backend.updatePkg : backend.createPkg;
-
-            var create = creator.bind(backend, pkg.uuid, pkg,
-                                      { req_id: pkg.uuid },
-                                      function (err2) {
-                if (err2 === 'ObjectAlreadyExistsError') {
-                    log.warn({ pkg: pkg }, 'Package already exists');
-                } else if (err2) {
-                    log.error({ pkg: pkg, err: err2 },
-                              'Error importing package');
-                } else {
-                    log.info({ pkg: pkg }, 'Package imported');
-                    success++;
-                }
-
-                return next();
-            });
-
-            return create();
-        };
-
-        vasync.forEachPipeline({ func: savePkg, inputs: packages },
-                               function (err3) {
-            if (err3)
-                log.error({ err: err3 }, 'Error in pipeline saving to PAPI');
-
-            log.info('%d packages imported to PAPI', success);
-            backend.quit();
-            callback();
-        });
-
-        return null;
-    });
-}
-
-
-
-function selectPackageSource(opts) {
-    var loader;
-
-    if (opts.json) {
-        loader = loadJsonPackages;
-    } else if (opts.ldif) {
-        loader = loadLdifPackages;
-    } else if (opts.url) {
-        loader = loadUfdsPackages;
-    } else {
-        // logic in parseOpts() should ensure we never end up here
-        // TODO: look up how to get stack trace
-        perror({ stack: null, message: 'Error selecting package source' });
-    }
-
-    return loader;
-}
-
-
-
-/*
- * Parse command-line args, load objects from UFDS, and save to PAPI.
- */
-
-function main() {
-    var opts = parseOpts();
-
-    var logLevel = 'info';
-    if (opts.debug)
-        logLevel = (opts.debug > 1 ? 'trace' : 'debug');
-
-    var sourceLog = new Logger({
-        name: 'source',
-        component: 'client',
-        stream: process.stderr,
-        level: logLevel
-    });
-
-    var papiLog = sourceLog.child({ component: 'papi' });
-
-    var configPath;
-    if (opts.config) {
-       configPath = path.resolve(process.cwd(), opts.config);
-    } else {
-       configPath = DEFAULT_CFG_PATH;
-    }
-
-    var config = tools.configure(configPath, {}, papiLog);
-    config.dryrun    = opts.dryrun;
-    config.overwrite = opts.overwrite;
-    config.log       = papiLog;
-
-    perror = function (err) {
-        var errOut = (opts.debug ? err.stack : err.message);
-        process.stderr.write(errOut + '\n');
-        process.exit(1);
-    };
-
-    var loader = selectPackageSource(opts, sourceLog);
-
-    loader(opts, sourceLog, function (err, packages) {
-        if (err)
-            return perror(err);
-
-        sourceLog.info('%d packages loaded from source', packages.length);
-
-        return savePapiPackages(packages, config, papiLog, function () {
-            process.exit(0);
-        });
-    });
-}
-
-
-
-main();
diff --git a/lib/papi.js b/lib/papi.js
index 9fb9718..54aac21 100644
--- a/lib/papi.js
+++ b/lib/papi.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 /*
@@ -125,7 +125,7 @@ function createServer(options, callback) {
     server.use(restify.acceptParser(server.acceptable));
     server.use(restify.authorizationParser());
     server.use(restify.dateParser());
-    server.use(restify.queryParser());
+    server.use(restify.queryParser({allowDots: false, plainObjects: false}));
     server.use(restify.bodyParser({
         overrideParams: true,
         mapParams: true
diff --git a/npm-shrinkwrap.json b/npm-shrinkwrap.json
deleted file mode 100644
index f844f36..0000000
--- a/npm-shrinkwrap.json
+++ /dev/null
@@ -1,636 +0,0 @@
-{
-  "name": "sdc-papi",
-  "version": "7.0.0",
-  "dependencies": {
-    "backoff": {
-      "version": "2.3.0",
-      "from": "backoff@2.3.0"
-    },
-    "bunyan": {
-      "version": "0.22.0",
-      "from": "bunyan@0.22.0",
-      "dependencies": {
-        "mv": {
-          "version": "0.0.5",
-          "from": "mv@0.0.5"
-        },
-        "dtrace-provider": {
-          "version": "0.2.8",
-          "from": "dtrace-provider@0.2.8"
-        }
-      }
-    },
-    "clone": {
-      "version": "0.1.6",
-      "from": "clone@0.1.6"
-    },
-    "ldapjs": {
-      "version": "0.7.0",
-      "from": "ldapjs@0.7.0",
-      "dependencies": {
-        "asn1": {
-          "version": "0.1.11",
-          "from": "asn1@0.1.11"
-        },
-        "assert-plus": {
-          "version": "0.1.2",
-          "from": "assert-plus@0.1.2"
-        },
-        "buffertools": {
-          "version": "1.1.0",
-          "from": "buffertools@1.1.0"
-        },
-        "bunyan": {
-          "version": "0.21.1",
-          "from": "bunyan@0.21.1",
-          "dependencies": {
-            "mv": {
-              "version": "0.0.5",
-              "from": "mv@0.0.5"
-            }
-          }
-        },
-        "dtrace-provider": {
-          "version": "0.2.8",
-          "from": "dtrace-provider@0.2.8"
-        },
-        "nopt": {
-          "version": "2.1.1",
-          "from": "nopt@2.1.1",
-          "dependencies": {
-            "abbrev": {
-              "version": "1.0.5",
-              "from": "abbrev@1"
-            }
-          }
-        },
-        "pooling": {
-          "version": "0.4.5",
-          "from": "pooling@0.4.5",
-          "dependencies": {
-            "assert-plus": {
-              "version": "0.1.4",
-              "from": "assert-plus@0.1.4"
-            },
-            "bunyan": {
-              "version": "0.22.0",
-              "from": "bunyan@0.22.0",
-              "dependencies": {
-                "mv": {
-                  "version": "0.0.5",
-                  "from": "mv@0.0.5"
-                }
-              }
-            },
-            "once": {
-              "version": "1.3.0",
-              "from": "once@1.3.0"
-            }
-          }
-        }
-      }
-    },
-    "libuuid": {
-      "version": "0.1.2",
-      "from": "libuuid@0.1.2"
-    },
-    "moray": {
-      "version": "1.0.0",
-      "from": "moray@git+ssh://git@github.com:joyent/node-moray.git#cb9d9b",
-      "resolved": "git+ssh://git@github.com:joyent/node-moray.git#cb9d9bfd7d399965f0a7a13b4f4bfac77a6a0c22",
-      "dependencies": {
-        "assert-plus": {
-          "version": "0.1.5",
-          "from": "assert-plus@0.1.5"
-        },
-        "backoff": {
-          "version": "2.4.0",
-          "from": "backoff@2.4.0",
-          "dependencies": {
-            "precond": {
-              "version": "0.2.3",
-              "from": "precond@0.2",
-              "resolved": "https://registry.npmjs.org/precond/-/precond-0.2.3.tgz"
-            }
-          }
-        },
-        "bunyan": {
-          "version": "0.22.1",
-          "from": "bunyan@0.22.1",
-          "dependencies": {
-            "mv": {
-              "version": "0.0.5",
-              "from": "mv@0.0.5"
-            },
-            "dtrace-provider": {
-              "version": "0.2.8",
-              "from": "dtrace-provider@0.2.8"
-            }
-          }
-        },
-        "fast": {
-          "version": "0.3.10",
-          "from": "fast@git+ssh://git@github.com/mcavage/node-fast.git#806645590ce3ef01ff698ffc5ee4f420cbadfae4",
-          "resolved": "git+ssh://git@github.com/mcavage/node-fast.git#806645590ce3ef01ff698ffc5ee4f420cbadfae4",
-          "dependencies": {
-            "crc": {
-              "version": "0.2.1",
-              "from": "crc@0.2.1"
-            },
-            "dtrace-provider": {
-              "version": "0.2.8",
-              "from": "dtrace-provider@0.2.8"
-            },
-            "microtime": {
-              "version": "0.5.1",
-              "from": "microtime@0.5.1",
-              "dependencies": {
-                "bindings": {
-                  "version": "1.1.1",
-                  "from": "bindings@1.1.1"
-                },
-                "nan": {
-                  "version": "0.6.0",
-                  "from": "nan@0.6.0"
-                }
-              }
-            },
-            "readable-stream": {
-              "version": "1.1.10",
-              "from": "readable-stream@1.1.10",
-              "dependencies": {
-                "core-util-is": {
-                  "version": "1.0.1",
-                  "from": "core-util-is@~1.0.0"
-                },
-                "string_decoder": {
-                  "version": "0.10.31",
-                  "from": "string_decoder@~0.10.x",
-                  "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz"
-                },
-                "debuglog": {
-                  "version": "0.0.2",
-                  "from": "debuglog@0.0.2"
-                }
-              }
-            },
-            "verror": {
-              "version": "1.3.6",
-              "from": "verror@1.3.6",
-              "dependencies": {
-                "extsprintf": {
-                  "version": "1.0.2",
-                  "from": "extsprintf@1.0.2"
-                }
-              }
-            }
-          }
-        },
-        "native-dns": {
-          "version": "0.4.1",
-          "from": "native-dns@0.4.1",
-          "dependencies": {
-            "buffercursor": {
-              "version": "0.0.12",
-              "from": "buffercursor@>= 0.0.5",
-              "dependencies": {
-                "verror": {
-                  "version": "1.4.0",
-                  "from": "verror@^1.4.0",
-                  "dependencies": {
-                    "extsprintf": {
-                      "version": "1.0.3",
-                      "from": "extsprintf@1.0.3"
-                    }
-                  }
-                }
-              }
-            },
-            "binaryheap": {
-              "version": "0.0.3",
-              "from": "binaryheap@>= 0.0.2"
-            },
-            "ipaddr.js": {
-              "version": "0.1.3",
-              "from": "ipaddr.js@>= 0.1.1"
-            }
-          }
-        },
-        "once": {
-          "version": "1.3.0",
-          "from": "once@1.3.0"
-        },
-        "posix-getopt": {
-          "version": "1.0.0",
-          "from": "posix-getopt@1.0.0"
-        },
-        "progbar": {
-          "version": "0.1.0",
-          "from": "progbar@0.1.0",
-          "dependencies": {
-            "sprintf": {
-              "version": "0.1.4",
-              "from": "sprintf@~0.1.3",
-              "resolved": "https://registry.npmjs.org/sprintf/-/sprintf-0.1.4.tgz"
-            }
-          }
-        },
-        "clone": {
-          "version": "0.1.18",
-          "from": "clone@0.1.18"
-        }
-      }
-    },
-    "nopt": {
-      "version": "2.0.0",
-      "from": "nopt@2.0.0",
-      "dependencies": {
-        "abbrev": {
-          "version": "1.0.5",
-          "from": "abbrev@1"
-        }
-      }
-    },
-    "restify": {
-      "version": "2.6.1",
-      "from": "restify@2.6.1",
-      "dependencies": {
-        "assert-plus": {
-          "version": "0.1.4",
-          "from": "assert-plus@0.1.4"
-        },
-        "csv": {
-          "version": "0.3.6",
-          "from": "csv@0.3.6"
-        },
-        "deep-equal": {
-          "version": "0.0.0",
-          "from": "deep-equal@~0.0.0"
-        },
-        "escape-regexp-component": {
-          "version": "1.0.2",
-          "from": "escape-regexp-component@1.0.2"
-        },
-        "formidable": {
-          "version": "1.0.14",
-          "from": "formidable@1.0.14"
-        },
-        "http-signature": {
-          "version": "0.10.0",
-          "from": "http-signature@0.10.0",
-          "dependencies": {
-            "assert-plus": {
-              "version": "0.1.2",
-              "from": "assert-plus@0.1.2"
-            },
-            "asn1": {
-              "version": "0.1.11",
-              "from": "asn1@0.1.11"
-            },
-            "ctype": {
-              "version": "0.5.2",
-              "from": "ctype@0.5.2"
-            }
-          }
-        },
-        "keep-alive-agent": {
-          "version": "0.0.1",
-          "from": "keep-alive-agent@0.0.1"
-        },
-        "lru-cache": {
-          "version": "2.3.1",
-          "from": "lru-cache@2.3.1"
-        },
-        "mime": {
-          "version": "1.2.11",
-          "from": "mime@1.2.11"
-        },
-        "negotiator": {
-          "version": "0.3.0",
-          "from": "negotiator@0.3.0"
-        },
-        "node-uuid": {
-          "version": "1.4.0",
-          "from": "node-uuid@1.4.0"
-        },
-        "once": {
-          "version": "1.3.0",
-          "from": "once@1.3.0"
-        },
-        "qs": {
-          "version": "0.6.5",
-          "from": "qs@0.6.5"
-        },
-        "semver": {
-          "version": "2.2.1",
-          "from": "semver@2.2.1"
-        },
-        "spdy": {
-          "version": "1.14.12",
-          "from": "spdy@1.14.12"
-        },
-        "tunnel-agent": {
-          "version": "0.3.0",
-          "from": "tunnel-agent@0.3.0"
-        },
-        "verror": {
-          "version": "1.3.6",
-          "from": "verror@1.3.6",
-          "dependencies": {
-            "extsprintf": {
-              "version": "1.0.2",
-              "from": "extsprintf@1.0.2"
-            }
-          }
-        },
-        "dtrace-provider": {
-          "version": "0.2.8",
-          "from": "dtrace-provider@0.2.8"
-        }
-      }
-    },
-    "sdc-clients": {
-      "version": "8.1.0",
-      "from": "sdc-clients@git+ssh://git@github.com:joyent/node-sdc-clients.git#a7366a02",
-      "resolved": "git+ssh://git@github.com:joyent/node-sdc-clients.git#a7366a02c47076331109de1e131af3d8555dbf97",
-      "dependencies": {
-        "assert-plus": {
-          "version": "0.1.3",
-          "from": "assert-plus@0.1.3"
-        },
-        "async": {
-          "version": "0.1.22",
-          "from": "async@0.1.22"
-        },
-        "bunyan": {
-          "version": "0.21.3",
-          "from": "bunyan@0.21.3",
-          "dependencies": {
-            "mv": {
-              "version": "0.0.5",
-              "from": "mv@0.0.5"
-            },
-            "dtrace-provider": {
-              "version": "0.2.8",
-              "from": "dtrace-provider@0.2.8"
-            }
-          }
-        },
-        "clone": {
-          "version": "0.1.8",
-          "from": "clone@0.1.8"
-        },
-        "http-signature": {
-          "version": "0.9.11",
-          "from": "http-signature@0.9.11",
-          "dependencies": {
-            "assert-plus": {
-              "version": "0.1.2",
-              "from": "assert-plus@0.1.2"
-            },
-            "asn1": {
-              "version": "0.1.11",
-              "from": "asn1@0.1.11"
-            },
-            "ctype": {
-              "version": "0.5.2",
-              "from": "ctype@0.5.2"
-            }
-          }
-        },
-        "ldapjs": {
-          "version": "0.6.3",
-          "from": "ldapjs@0.6.3",
-          "dependencies": {
-            "asn1": {
-              "version": "0.1.11",
-              "from": "asn1@0.1.11"
-            },
-            "assert-plus": {
-              "version": "0.1.2",
-              "from": "assert-plus@0.1.2"
-            },
-            "buffertools": {
-              "version": "1.1.0",
-              "from": "buffertools@1.1.0"
-            },
-            "bunyan": {
-              "version": "0.21.1",
-              "from": "bunyan@0.21.1",
-              "dependencies": {
-                "mv": {
-                  "version": "0.0.5",
-                  "from": "mv@0.0.5"
-                }
-              }
-            },
-            "dtrace-provider": {
-              "version": "0.2.8",
-              "from": "dtrace-provider@0.2.8"
-            },
-            "nopt": {
-              "version": "2.1.1",
-              "from": "nopt@2.1.1",
-              "dependencies": {
-                "abbrev": {
-                  "version": "1.0.5",
-                  "from": "abbrev@1"
-                }
-              }
-            },
-            "pooling": {
-              "version": "0.4.4",
-              "from": "pooling@0.4.4"
-            }
-          }
-        },
-        "lru-cache": {
-          "version": "2.3.0",
-          "from": "lru-cache@2.3.0"
-        },
-        "once": {
-          "version": "1.1.1",
-          "from": "once@1.1.1"
-        },
-        "restify": {
-          "version": "2.5.1",
-          "from": "restify@2.5.1",
-          "dependencies": {
-            "assert-plus": {
-              "version": "0.1.2",
-              "from": "assert-plus@0.1.2"
-            },
-            "backoff": {
-              "version": "2.2.0",
-              "from": "backoff@2.2.0"
-            },
-            "bunyan": {
-              "version": "0.21.1",
-              "from": "bunyan@0.21.1",
-              "dependencies": {
-                "mv": {
-                  "version": "0.0.5",
-                  "from": "mv@0.0.5"
-                }
-              }
-            },
-            "deep-equal": {
-              "version": "0.0.0",
-              "from": "deep-equal@0.0.0"
-            },
-            "escape-regexp-component": {
-              "version": "1.0.2",
-              "from": "escape-regexp-component@1.0.2"
-            },
-            "formidable": {
-              "version": "1.0.14",
-              "from": "formidable@1.0.14"
-            },
-            "http-signature": {
-              "version": "0.10.0",
-              "from": "http-signature@0.10.0",
-              "dependencies": {
-                "asn1": {
-                  "version": "0.1.11",
-                  "from": "asn1@0.1.11"
-                },
-                "ctype": {
-                  "version": "0.5.2",
-                  "from": "ctype@0.5.2"
-                }
-              }
-            },
-            "keep-alive-agent": {
-              "version": "0.0.1",
-              "from": "keep-alive-agent@0.0.1"
-            },
-            "mime": {
-              "version": "1.2.9",
-              "from": "mime@1.2.9"
-            },
-            "negotiator": {
-              "version": "0.2.5",
-              "from": "negotiator@0.2.5"
-            },
-            "node-uuid": {
-              "version": "1.4.0",
-              "from": "node-uuid@1.4.0"
-            },
-            "qs": {
-              "version": "0.6.4",
-              "from": "qs@0.6.4"
-            },
-            "semver": {
-              "version": "1.1.4",
-              "from": "semver@1.1.4"
-            },
-            "spdy": {
-              "version": "1.8.2",
-              "from": "spdy@1.8.2"
-            },
-            "dtrace-provider": {
-              "version": "0.2.8",
-              "from": "dtrace-provider@0.2.8"
-            }
-          }
-        },
-        "ssh-agent": {
-          "version": "0.2.1",
-          "from": "ssh-agent@0.2.1",
-          "dependencies": {
-            "ctype": {
-              "version": "0.5.0",
-              "from": "ctype@0.5.0"
-            },
-            "posix-getopt": {
-              "version": "1.0.0",
-              "from": "posix-getopt@1.0.0"
-            }
-          }
-        },
-        "vasync": {
-          "version": "1.3.3",
-          "from": "vasync@1.3.3",
-          "dependencies": {
-            "jsprim": {
-              "version": "0.3.0",
-              "from": "jsprim@0.3.0",
-              "dependencies": {
-                "extsprintf": {
-                  "version": "1.0.0",
-                  "from": "extsprintf@1.0.0"
-                },
-                "json-schema": {
-                  "version": "0.2.2",
-                  "from": "json-schema@0.2.2"
-                },
-                "verror": {
-                  "version": "1.3.3",
-                  "from": "verror@1.3.3"
-                }
-              }
-            },
-            "verror": {
-              "version": "1.1.0",
-              "from": "verror@1.1.0",
-              "dependencies": {
-                "extsprintf": {
-                  "version": "1.0.0",
-                  "from": "extsprintf@1.0.0"
-                }
-              }
-            }
-          }
-        },
-        "verror": {
-          "version": "1.3.6",
-          "from": "verror@1.3.6",
-          "dependencies": {
-            "extsprintf": {
-              "version": "1.0.2",
-              "from": "extsprintf@1.0.2"
-            }
-          }
-        }
-      }
-    },
-    "sigyan": {
-      "version": "0.2.0",
-      "from": "sigyan@0.2.0"
-    },
-    "vasync": {
-      "version": "1.4.0",
-      "from": "vasync@1.4.0",
-      "dependencies": {
-        "jsprim": {
-          "version": "0.3.0",
-          "from": "jsprim@0.3.0",
-          "dependencies": {
-            "extsprintf": {
-              "version": "1.0.0",
-              "from": "extsprintf@1.0.0"
-            },
-            "json-schema": {
-              "version": "0.2.2",
-              "from": "json-schema@0.2.2"
-            },
-            "verror": {
-              "version": "1.3.3",
-              "from": "verror@1.3.3"
-            }
-          }
-        },
-        "verror": {
-          "version": "1.1.0",
-          "from": "verror@1.1.0",
-          "dependencies": {
-            "extsprintf": {
-              "version": "1.0.0",
-              "from": "extsprintf@1.0.0"
-            }
-          }
-        }
-      }
-    }
-  }
-}
diff --git a/package.json b/package.json
index b5a6470..0f89401 100644
--- a/package.json
+++ b/package.json
@@ -9,17 +9,16 @@
     "url": "git+ssh://git@github.com:joyent/sdc-papi.git"
   },
   "dependencies": {
-    "restify": "2.6.1",
-    "libuuid": "0.1.2",
+    "backoff": "2.3.0",
+    "bunyan": "1.8.1",
+    "clone": "0.1.6",
+    "libuuid": "0.2.1",
+    "moray": "git+https://github.com/joyent/node-moray.git#fd5781bc25a9bfe2ba82167664639753fb9f0ca5",
     "nopt": "2.0.0",
-    "bunyan": "0.22.0",
+    "restify": "4.2.0",
+    "sdc-clients": "10.0.2",
     "sigyan": "0.2.0",
-    "backoff": "2.3.0",
-    "moray": "git+https://github.com/joyent/node-moray.git#b84ef0e",
-    "sdc-clients": "git+https://github.com/joyent/node-sdc-clients.git#a7366a02",
-    "ldapjs": "0.7.0",
-    "vasync": "1.4.0",
-    "clone": "0.1.6"
+    "vasync": "1.4.0"
   },
   "devDependencies": {
     "tap": "0.4.0"
diff --git a/test/api.test.js b/test/api.test.js
index 2796d08..fd58752 100644
--- a/test/api.test.js
+++ b/test/api.test.js
@@ -26,12 +26,18 @@ var papi = require('../lib/papi');
 
 
 
+// If we're in the papi zone, use the papi config. Otherwise assume we're on
+// someone's laptop and they're using the default COAL IP addresses.
 var cfgFile = path.resolve(__dirname, '../etc/config.json');
 cfgFile = fs.existsSync(cfgFile) ? cfgFile :
                path.resolve(__dirname, '../etc/config.test.json');
 
 var config = JSON.parse(fs.readFileSync(cfgFile, 'utf-8'));
 
+// For tests, override the port to 8080 so we don't block (or get queries for)
+// real papi if we're running in the zone.
+config.port = 8080;
+
 var packages = [ {
     v: 1,
     uuid: '27543bf3-0c66-4f61-9ae4-7dda5cb4741b',
@@ -114,7 +120,7 @@ test('setup', function (t) {
     papi.createServer({
         config: cfgFile,
         log: log,
-        overrides: {},
+        overrides: config,
         test: true
     }, function (err, s) {
         server  = s;
diff --git a/test/importer.test.js b/test/importer.test.js
deleted file mode 100644
index 901434b..0000000
--- a/test/importer.test.js
+++ /dev/null
@@ -1,372 +0,0 @@
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-/*
- * Test the importer.
- */
-
-
-
-var fs      = require('fs');
-var Logger  = require('bunyan');
-var path    = require('path');
-var restify = require('restify');
-var spawn   = require('child_process').spawn;
-var test    = require('tap').test;
-var papi    = require('../lib/papi');
-
-
-
-var DEFAULT_CFG_PATH = path.resolve(__dirname, '../etc/config.json');
-var TEST_LDIF_PATH   = path.resolve(__dirname, 'importer.test.ldif');
-var TEST_JSON_PATH   = path.resolve(__dirname, 'importer.test.json');
-var IMPORTER_PATH    = path.resolve(__dirname, '../bin/importer');
-
-
-
-var server, client, backend, cfgPath, startTime;
-
-
-
-test('setup', function (t) {
-    cfgPath = fs.existsSync(DEFAULT_CFG_PATH) ? DEFAULT_CFG_PATH :
-              path.resolve(__dirname, '../etc/config.test.json');
-
-    var config = JSON.parse(fs.readFileSync(cfgPath, 'utf-8'));
-
-    var logger = new Logger({
-        level: process.env.LOG_LEVEL || 'info',
-        name: 'sdc-package-importer-test',
-        stream: process.stdout,
-        serializers: restify.bunyan.serializers
-    });
-
-    papi.createServer({
-        config: cfgPath,
-        log: logger,
-        overrides: {},
-        test: true
-    }, function (err, s) {
-        t.ok(s, 'server ok');
-        t.ok(s.backend, 'server backend ok');
-        server = s;
-        backend = s.backend;
-
-        client = restify.createJsonClient({
-            log: s.log,
-            url: 'http://127.0.0.1:' + config.port,
-            version: '*',
-            retryOptions: {
-                retry: 0
-            }
-        });
-
-        t.ok(client);
-
-        startTime = +new Date();
-
-        t.end();
-    });
-});
-
-
-
-test('Clean up stale state (before)', cleanUp);
-test('Check no stale packages (before)', checkNoPkgs);
-
-test('Run importer with ldif', importLdif);
-test('GET /packages/b65b8ce2-29e7-4f63-b529-357f42bf0742', checkPkg1);
-test('GET /packages/b8c43025-cfd9-446d-a871-4444c15d9648', checkPkg2);
-test('GET /packages/487997df-a4da-4fd3-bcfc-98f100178241', checkPkg3);
-
-test('Mutate b8c43025-cfd9-446d-a871-4444c15d9648', mutatePkg2);
-test('GET /packages/b8c43025-cfd9-446d-a871-4444c15d9648', checkMutatedPkg2);
-test('Run importer with ldif', importLdif);
-test('GET /packages/b8c43025-cfd9-446d-a871-4444c15d9648', checkMutatedPkg2);
-test('Run importer with overwrite', importLdifOverwrite);
-test('GET /packages/b8c43025-cfd9-446d-a871-4444c15d9648', checkPkg2);
-
-test('Clean up stale state (after ldif)', cleanUp);
-test('Check no stale packages (after ldif)', checkNoPkgs);
-
-test('Run importer with json', importJson);
-test('GET /packages/b65b8ce2-29e7-4f63-b529-357f42bf0742', checkPkg1);
-test('GET /packages/b8c43025-cfd9-446d-a871-4444c15d9648', checkPkg2);
-test('GET /packages/487997df-a4da-4fd3-bcfc-98f100178241', checkPkg3);
-
-test('Clean up stale state (after json)', cleanUp);
-test('Check no stale packages (after json)', checkNoPkgs);
-
-test('Run importer with dryrun', importLdifDryrun);
-test('Check no stale packages (after dryrun)', checkNoPkgs);
-
-
-
-test('teardown', function (t) {
-    t.end();
-
-    // hack until I figure out why process is hanging when tests complete
-    setTimeout(function () { process.exit(0); }, 200);
-});
-
-
-
-function importLdif(t) {
-    var importer = spawn(IMPORTER_PATH, ['--config=' + cfgPath,
-                                         '--ldif=' + TEST_LDIF_PATH]);
-
-//    importer.stdout.on('data', function (data) {
-//        console.log('stdout: ' + data);
-//    });
-//
-//    importer.stderr.on('data', function (data) {
-//        console.log('stderr: ' + data);
-//    });
-
-    importer.on('close', function (code) {
-        t.end();
-    });
-}
-
-
-
-function importLdifDryrun(t) {
-    var importer = spawn(IMPORTER_PATH, ['--config=' + cfgPath,
-                                         '--ldif=' + TEST_LDIF_PATH,
-                                         '--dryrun']);
-    importer.on('close', function (code) {
-        t.end();
-    });
-}
-
-
-
-function importLdifOverwrite(t) {
-    var importer = spawn(IMPORTER_PATH, ['--config=' + cfgPath,
-                                         '--ldif=' + TEST_LDIF_PATH,
-                                         '--overwrite']);
-    importer.on('close', function (code) {
-        t.end();
-    });
-}
-
-
-
-function importJson(t) {
-    var importer = spawn(IMPORTER_PATH, ['--config=' + cfgPath,
-                                         '--json=' + TEST_JSON_PATH]);
-
-    importer.on('close', function (code) {
-        t.end();
-    });
-}
-
-
-
-function mutatePkg2(t) {
-    var change = { max_physical_memory: 16384, max_swap: 32768 };
-
-    client.put('/packages/b8c43025-cfd9-446d-a871-4444c15d9648?force=true',
-               change, function (err, req, res, obj) {
-        t.ifError(err, 'POST /packages error');
-        t.equal(res.statusCode, 200);
-        t.end();
-    });
-}
-
-
-
-function cleanUp(t) {
-    var deletePkgs = ['b65b8ce2-29e7-4f63-b529-357f42bf0742',
-                      'b8c43025-cfd9-446d-a871-4444c15d9648',
-                      '487997df-a4da-4fd3-bcfc-98f100178241'];
-
-    var deletePkg = function () {
-        var uuid = deletePkgs.pop();
-        var url = '/packages/' + uuid + '?force=true';
-
-        client.del(url, function (err, req, res, obj) {
-            if (err && err.statusCode !== 404)
-                t.ifError(err);
-
-            if (deletePkgs.length > 0)
-                return deletePkg();
-
-            return t.end();
-        });
-    };
-
-    deletePkg();
-}
-
-
-
-function checkNoPkgs(t) {
-    var checkPkgs = ['b65b8ce2-29e7-4f63-b529-357f42bf0742',
-                     'b8c43025-cfd9-446d-a871-4444c15d9648',
-                     '487997df-a4da-4fd3-bcfc-98f100178241'];
-
-    var checkPkg = function () {
-        var uuid = checkPkgs.pop();
-        var url = '/packages/' + uuid;
-
-        client.get(url, function (err, req, res, obj) {
-            t.equal(err.statusCode, 404);
-
-            if (checkPkgs.length > 0)
-                return checkPkg();
-
-            return t.end();
-        });
-    };
-
-    checkPkg();
-}
-
-
-
-
-function checkMutatedPkg2(t) {
-    client.get('/packages/b8c43025-cfd9-446d-a871-4444c15d9648',
-               function (err, req, res, obj) {
-        t.ifError(err);
-        t.equal(res.statusCode, 200);
-
-        checkDate(t, obj);
-
-        var expectedResults = {
-            v: 1,
-            active: false,
-            cpu_cap: 300,
-            default: true,
-            max_lwps: 2000,
-            max_physical_memory: 16384,
-            max_swap: 32768,
-            name: 'test-2',
-            quota: 81920,
-            uuid: 'b8c43025-cfd9-446d-a871-4444c15d9648',
-            version: '1.0.1',
-            zfs_io_priority: 50
-        };
-
-        t.equivalent(obj, expectedResults);
-
-        t.end();
-    });
-}
-
-
-
-function checkPkg1(t) {
-    client.get('/packages/b65b8ce2-29e7-4f63-b529-357f42bf0742',
-               function (err, req, res, obj) {
-        t.ifError(err);
-        t.equal(res.statusCode, 200);
-
-        checkDate(t, obj);
-
-        var expectedResults = {
-            v: 1,
-            active: true,
-            common_name: 'Test 1',
-            cpu_burst_ratio: 0.5,
-            cpu_cap: 200,
-            default: false,
-            description: '4GB RAM, 1 CPUs and bursting, and 131GB Disk.',
-            fss: 200,
-            group: 'Test',
-            max_lwps: 4000,
-            max_physical_memory: 4096,
-            max_swap: 8192,
-            min_platform: { '7.0': '20130917T001310Z' },
-            name: 'test-1',
-            networks: [ '9ec60129-9034-47b4-b111-3026f9b1a10f',
-                        '5983940e-58a5-4543-b732-c689b1fe4c08' ],
-            os: 'smartos',
-            owner_uuids: [ '7b315468-c6be-46dc-b99b-9c1f59224693',
-                           '1d09a48c-d1ee-42b0-a22f-0baf42daac2b',
-                           '67e48d3a-35e7-40a3-beee-55a1e4588500',
-                           'ec473ba8-0d5a-4000-9fc9-20b43397ac7d' ],
-            parent: 'g3-standard-4-smartos',
-            quota: 134144,
-            ram_ratio: 3.990024938,
-            traits: { ssd: true, img_mgmt: true },
-            uuid: 'b65b8ce2-29e7-4f63-b529-357f42bf0742',
-            vcpus: 2,
-            version: '1.0.0',
-            zfs_io_priority: 100
-        };
-
-        t.equivalent(obj, expectedResults);
-
-        t.end();
-    });
-}
-
-
-
-function checkPkg2(t) {
-    client.get('/packages/b8c43025-cfd9-446d-a871-4444c15d9648',
-               function (err, req, res, obj) {
-        t.ifError(err);
-        t.equal(res.statusCode, 200);
-
-        checkDate(t, obj);
-
-        var expectedResults = {
-            v: 1,
-            active: false,
-            cpu_cap: 300,
-            default: true,
-            max_lwps: 2000,
-            max_physical_memory: 2048,
-            max_swap: 4096,
-            name: 'test-2',
-            quota: 81920,
-            uuid: 'b8c43025-cfd9-446d-a871-4444c15d9648',
-            version: '1.0.1',
-            zfs_io_priority: 50
-        };
-
-        t.equivalent(obj, expectedResults);
-
-        t.end();
-    });
-}
-
-
-
-/*
- * This package is missing a required attribute (active), so shouldn't have
- * been imported.
- */
-
-function checkPkg3(t) {
-    client.get('/packages/487997df-a4da-4fd3-bcfc-98f100178241',
-               function (err, req, res, obj) {
-        t.equal(res.statusCode, 404);
-        t.end();
-    });
-}
-
-
-
-function checkDate(t, pkg) {
-    var allowedDelta = 5000;
-
-    var created = +new Date(pkg.created_at);
-    var updated = +new Date(pkg.updated_at);
-
-    t.ok(created - startTime < allowedDelta);
-    t.ok(updated - startTime < allowedDelta);
-
-    delete pkg.created_at;
-    delete pkg.updated_at;
-}
diff --git a/test/importer.test.json b/test/importer.test.json
deleted file mode 100644
index 702898c..0000000
--- a/test/importer.test.json
+++ /dev/null
@@ -1,3 +0,0 @@
-{"dn": "uuid=b65b8ce2-29e7-4f63-b529-357f42bf0742, ou=packages, o=smartdc", "active": "true", "common_name": "Test 1", "cpu_burst_ratio": "0.5", "cpu_cap": "200", "default": false, "description": "4GB RAM, 1 CPUs and bursting, and 131GB Disk.", "fss": "200", "group": "Test", "max_lwps": "4000", "max_physical_memory": "4096", "max_swap": "8192", "min_platform": "{\"7.0\": \"20130917T001310Z\"}", "name": "test-1", "networks": ["9ec60129-9034-47b4-b111-3026f9b1a10f", "5983940e-58a5-4543-b732-c689b1fe4c08"], "objectclass": "sdcpackage", "os": "smartos", "overprovision_cpu": "2", "overprovision_io": "2", "overprovision_memory": "1", "overprovision_network": "4", "overprovision_storage": "1", "owner_uuids": ["7b315468-c6be-46dc-b99b-9c1f59224693", "1d09a48c-d1ee-42b0-a22f-0baf42daac2b", "67e48d3a-35e7-40a3-beee-55a1e4588500", "ec473ba8-0d5a-4000-9fc9-20b43397ac7d"], "parent": "g3-standard-4-smartos", "quota": "134144", "ram_ratio": "3.990024938", "traits": "{\"ssd\": true, \"img_mgmt\": true}", "urn": "sdc::test-1:1.0.0", "uuid": "b65b8ce2-29e7-4f63-b529-357f42bf0742", "vcpus": "2", "version": "1.0.0", "zfs_io_priority": "100"}
-{"dn": "uuid=b8c43025-cfd9-446d-a871-4444c15d9648, ou=packages, o=smartdc", "active": "false", "cpu_cap": "300", "default": true, "max_lwps": "2000", "max_physical_memory": "2048", "max_swap": "4096", "name": "test-2", "quota": "81920", "uuid": "b8c43025-cfd9-446d-a871-4444c15d9648", "version": "1.0.1", "zfs_io_priority": "50"}
-{"dn": "uuid=487997df-a4da-4fd3-bcfc-98f100178241, ou=packages, o=smartdc", "cpu_cap": "250", "default": true, "max_lwps": 1000, "max_physical_memory": 512, "max_swap": 1024, "name": "test-3", "quota": "10240", "uuid": "487997df-a4da-4fd3-bcfc-98f100178241", "version": "1.0.2", "zfs_io_priority": "10"}
diff --git a/test/importer.test.ldif b/test/importer.test.ldif
deleted file mode 100644
index 0b7ae87..0000000
--- a/test/importer.test.ldif
+++ /dev/null
@@ -1,60 +0,0 @@
-dn: uuid=b65b8ce2-29e7-4f63-b529-357f42bf0742, ou=packages, o=smartdc
-active: true
-common_name: Test 1
-cpu_burst_ratio: 0.5
-cpu_cap: 200
-default: false
-description: 4GB RAM, 1 CPUs and bursting, and 131GB Disk.
-fss: 200
-group: Test
-max_lwps: 4000
-max_physical_memory: 4096
-max_swap: 8192
-min_platform: {"7.0": "20130917T001310Z"}
-name:: dGVzdC0x
-networks: ["9ec60129-9034-47b4-b111-3026f9b1a10f", "5983940e-58a5-4543-b732-c689b1fe4c08"]
-objectclass: sdcpackage
-os: smartos
-overprovision_cpu: 2
-overprovision_io: 2
-overprovision_memory: 1
-overprovision_network: 4 
-overprovision_storage: 1 
-owner_uuid: 7b315468-c6be-46dc-b99b-9c1f59224693
-owner_uuid: 1d09a48c-d1ee-42b0-a22f-0baf42daac2b
-owner_uuid: 67e48d3a-35e7-40a3-beee-55a1e4588500
-owner_uuid: ec473ba8-0d5a-4000-9fc9-20b43397ac7d
-parent: g3-standard-4-smartos
-quota: 134144
-ram_ratio: 3.990024938
-traits: {"ssd": true, "img_mgmt": true}
-urn: sdc::test-1:1.0.0
-uuid: b65b8ce2-29e7-4f63-b529-357f42bf0742
-vcpus: 2
-version: 1.0.0
-zfs_io_priority: 100
-
-dn: uuid=b8c43025-cfd9-446d-a871-4444c15d9648, ou=packages, o=smartdc
-active: false
-cpu_cap: 300
-default: true
-max_lwps: 2000
-max_physical_memory: 2048
-max_swap: 4096
-name: test-2
-quota: 81920
-uuid: b8c43025-cfd9-446d-a871-4444c15d9648
-version: 1.0.1
-zfs_io_priority: 50
-
-dn: uuid=487997df-a4da-4fd3-bcfc-98f100178241, ou=packages, o=smartdc
-cpu_cap: 250
-default: true
-max_lwps: 1000
-max_physical_memory: 512
-max_swap: 1024
-name: test-3
-quota: 10240
-uuid: 487997df-a4da-4fd3-bcfc-98f100178241
-version: 1.0.2
-zfs_io_priority: 10
