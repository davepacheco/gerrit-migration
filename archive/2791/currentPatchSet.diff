commit 0a4c3e559e08558dcc4b8c26d164c69a9b8e34ea (refs/changes/91/2791/3)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2017-12-19T10:17:47-08:00 (1 year, 10 months ago)
    
    DOCKER-592 disable the restify uncaughtException handler
    Reviewed by: Julien Gilli <julien.gilli@joyent.com>

diff --git a/lib/common.js b/lib/common.js
index 36d4159..e4daf07 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -371,31 +371,6 @@ function filteredAuditLog(req, res, route, err) {
 }
 
 
-/*
- * Returns a handler that will log uncaught exceptions properly
- */
-function uncaughtHandler(req, res, route, err) {
-    req.log.error({err: err, route: route && route.name,
-        req: req}, 'Uncaught exception');
-
-    res.send(new restify.InternalError(err, 'Internal error'));
-    /**
-     * We don't bother logging the `res` here because it always looks like
-     * the following, no added info to the log.
-     *
-     *      HTTP/1.1 500 Internal Server Error
-     *      Content-Type: application/json
-     *      Content-Length: 51
-     *      Date: Wed, 29 Oct 2014 17:33:02 GMT
-     *      x-request-id: a1fb11c0-5f91-11e4-92c7-3755959764aa
-     *      x-response-time: 9
-     *      Connection: keep-alive
-     *
-     *      {"code":"InternalError","message":"Internal error"}
-     */
-}
-
-
 /*
  * Handler for checking if the required servics are online before serving
  * any request
@@ -891,7 +866,6 @@ module.exports = {
     writeToDockerRawStream: writeToDockerRawStream,
     generateDockerId: generateDockerId,
     formatProgress: formatProgress,
-    uncaughtHandler: uncaughtHandler,
     waitForJob: waitForJob,
     writeProgress: writeProgress,
     writeStatus: writeStatus,
diff --git a/lib/docker.js b/lib/docker.js
index ad831e7..3a2d5bc 100644
--- a/lib/docker.js
+++ b/lib/docker.js
@@ -150,7 +150,6 @@ function App(opts) {
     });
 
     server.on('after', common.filteredAuditLog);
-    server.on('uncaughtException', common.uncaughtHandler);
     endpoints.register(self.config, server, self.log, [
         common.checkReadonlyMode,
         common.checkServices,
@@ -381,6 +380,7 @@ App.prototype.setupServer = function () {
 App.prototype.setupAdminSever = function listen(callback) {
     var self = this;
     var admin = self.admin = restify.createServer({
+        handleUncaughtExceptions: false,
         log: self.log,
         name: 'docker-admin',
         version: self.version
@@ -406,7 +406,6 @@ App.prototype.setupAdminSever = function listen(callback) {
     admin.use(restify.queryParser({mapParams: false}));
     admin.use(restify.bodyParser());
     admin.on('after', common.filteredAuditLog);
-    admin.on('uncaughtException', common.uncaughtHandler);
     adminEndpoints.register(admin, self.log, [ common.checkServices ]);
 };
 
