{"project":"joyent/illumos-joyent","branch":"master","id":"If0f2ba1ec85f5d033f9a5500b8476dd1eec1025d","number":"4244","subject":"OS-7030 lx audit may consume all kernel memory Reviewed by: Dan McDonald \u003cdanmcd@joyent.com\u003e Reviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e Reviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e Approved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com","owner":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"url":"https://cr.joyent.us/4244","commitMessage":"OS-7030 lx audit may consume all kernel memory\nReviewed by: Dan McDonald \u003cdanmcd@joyent.com\u003e\nReviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\nReviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e\nApproved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\n","createdOn":1529266937,"lastUpdated":1529458645,"open":false,"status":"MERGED","comments":[{"timestamp":1529266937,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Uploaded patch set 1."},{"timestamp":1529274861,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\nThis looks fine, but I am wondering if we should do something a little different. When we get the ENOSPACE error from the netlink code, I\u0027m wondering if we should treat that like the queue is full? Right now you drop the message, which is generally good, but if the PANIC config is set, should we reboot the zone? That would require some extra work in the audit worker, and maybe that should be left as a later enhancement. I am ok with the current approach but am curious about what you think of this?"},{"timestamp":1529280537,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 1:\n\nRight now it is not dropped.  As described in the issue, when we return ENOSPC from here, lx_audit_worker() puts it back on the head of lxast_ev_queue and increment lxast_backlog.  This does have the effect that we queue more than we probably should (lxast_ev_queue plus that held by sonode), but it is a reasonable approximation.\n\nThe more complete solution would probably be to use a filter (sockfilter.c) that would manage the backlog in one place.  The filter would be responsible for calling lx_audit_fail() or signaling that someone else should.  The filter code is invoked by so_recv() prior to enqueuing the mblk."},{"timestamp":1529322575,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1529324383,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1529324665,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1: Code-Review+1\n\n(1 comment)"},{"timestamp":1529329210,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 1: Integration-Approval+1"},{"timestamp":1529329277,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 1: Code-Review+1 -Integration-Approval\n\nYour answer to Jerry\u0027s question and the analysis were on-point.  Thanks."},{"timestamp":1529331938,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 1: Code-Review-1\n\n(2 comments)\n\nWould like this held briefly while I look a little deeper."},{"timestamp":1529332631,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1529336661,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 1:\n\nReworking per discussion at https://chat.joyent.us/joyent/pl/ykpg8c3hybdajd8mjggrrkpjoh"},{"timestamp":1529358377,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Uploaded patch set 2."},{"timestamp":1529358529,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 2:\n\nMy earlier analysis regarding ENOSPC requeueing was incorrect."},{"timestamp":1529358628,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 2:\n\nHave you updated said analysis in the bug?"},{"timestamp":1529358843,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 2:\n\nticket updated to delete the part about it being requeued on ENOSPC."},{"timestamp":1529358959,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 2: Code-Review+1\n\nThank you."},{"timestamp":1529359081,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 1:\n\n(3 comments)"},{"timestamp":1529361619,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1529377243,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 2: -Code-Review\n\n(1 comment)"},{"timestamp":1529416197,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1529440916,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Uploaded patch set 3."},{"timestamp":1529441495,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 3: Code-Review+1"},{"timestamp":1529441877,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 3:\n\n(2 comments)\n\nThis looks good to me, I just saw a couple small things"},{"timestamp":1529441932,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 3: Code-Review+1\n\nNeither of my nits is important, so feel free to move ahead without addressing them"},{"timestamp":1529445844,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Uploaded patch set 4."},{"timestamp":1529445936,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 4: Code-Review+1\n\nThanks for fixing those nits!"},{"timestamp":1529446155,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 4: Code-Review+1\n\n(1 comment)"},{"timestamp":1529450716,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 4:\n\nticket updated with test notes"},{"timestamp":1529452229,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 4: Code-Review+1\n\n(1 comment)\n\nOne spelling nit."},{"timestamp":1529457991,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 4: Integration-Approval+1"},{"timestamp":1529458622,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 5: Commit message was updated."},{"timestamp":1529458627,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 6: Patch Set 5 was rebased"},{"timestamp":1529458645,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Mike Gerdts"}],"currentPatchSet":{"number":"6","revision":"ad4084961269e91383400b7a28bee257750c85ff","parents":["7058c3c954af033fd27362cf841933da915322f1"],"ref":"refs/changes/44/4244/6","uploader":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"createdOn":1529458627,"author":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529445936,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529446155,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529452229,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529457991,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1529458645,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":41,"deletions":-2},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":42,"sizeDeletions":-3},"patchSets":[{"number":"1","revision":"07f95fbdca3eaef470326c0cc41adad17ec86c94","parents":["a5f014c173362ac2af00648d1184575a91522acd"],"ref":"refs/changes/44/4244/1","uploader":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"createdOn":1529266937,"author":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529324665,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"-1","grantedOn":1529331938,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529329277,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1843,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"\"it\u0027s\" or \"it has\""},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1843,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1846,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Doesn\u0027t this change mean we won\u0027t return ENOSPC anymore?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1846,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"When we want a space check, ENOSPC may be returned at line 1833.\n\nlx_audit_emit_syscall_event() does a space check as it emits its message at line lx_audit.c:377.  If the previous su_recv() call pushed the sonode past its high water mark, this the check at lx_netlink.c:1827 will cause ENOSPC to be returned at line 1833, resulting in lx_audit_emit_syscall_event() to return ENOSPC, which causes lx_audit_worker() to put the message back on its queue.\n\nIf ENOSPC was returned at 1846 after the space check failed, that error would propagate back to lx_audit_worker() which would cause it to put the message back on its queue.  That is exactly the behavior this fix is addressing.\n\n 377         err \u003d lx_audit_emit_msg(lxsock, mtype, msg, LX_AUDIT_MESSAGE_TEXT_MAX,\n 378             B_TRUE);\n 379         if (err !\u003d 0)\n 380                 return (err);\n\nBelow, we don\u0027t want the space check.  If this call were to return ENOSPC, lx_audit_worker() would add the message that was successfully enqueued at 377 back onto its queue. \n\n 381         err \u003d lx_audit_emit_msg(lxsock, 0, NULL, 0, B_FALSE);\n\nIn case it wasn\u0027t clear from the analysis in the ticket, so_queue_msg (su_recv) does the space check after enqueueing the message.  If enqueueing the message (or previous enqueues) causes it to exceed the high water mark, the message remains queued and ENOSPC is returned.  We MUST NOT resend messages that were passed to su_recv() if su_recv() returns ENOSPC.  Doing so results in the death spiral that this fix is attempting to address."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1846,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Thanks for the explanation, sorry, I wasn\u0027t following the logic completely."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1846,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Why not keep a flag for the socket tracking flow-controlled state (clearing it with the sd_setflowctrl downcall)?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1846,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":373,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"if"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":373,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":24,"deletions":-2},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"MODIFIED","insertions":12,"deletions":-4},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":38,"sizeDeletions":-7},{"number":"2","revision":"1e916a827b0966b03c15ee18915a5043f3228e32","parents":["a5f014c173362ac2af00648d1184575a91522acd"],"ref":"refs/changes/44/4244/2","uploader":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"createdOn":1529358377,"author":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529358959,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1791,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Can you expand the comment here to clarify that this is equivalent to msg \u003d\u003d NULL. It seems like it might not be immediately obvious without going back to the caller to figure this out."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1851,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Why not just add a mutex to lx_netlink_sock_t and hold it over the su_recv call?  After acquiring said mutex, the presence of flow control could be checked, resulting in a bail-out if necessary.  Otherwise it would be updated (if needed) after the su_recv was performed.\n\nSimilarly, the lx_netlink_clr_flowctrl() function could acquire the same mutex when clearing the presence of flow control.  Notably, the downcall for sd_setflowctrl is made _without_ so_lock, so I believe an ABBA ordering violation is avoided.\n\nThat way, very explicit exclusion is used, rather than something which requires such explanation."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1851,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"The only current caller of this function is lx_audit_emit_syscall_event() and it needs to make two calls to this function to accomplish its purpose.  For reasons I don\u0027t understand, it seems important for it to send T_UNITDATA_IND (via msg\u003dNULL) after it sends the message.  If the message with msg !\u003d NULL causes ENOSPC, the next message that is intended to send T_UNITDATA_END will likely still be at ENOSPC and will not be queued.  Rather ENOSPC will be returned all the way to lx_audit_worker(), which will put it back on the head of the backlog.\n\nIf we make an exception (as at line 1798) for msg \u003d\u003d NULL, lx_netlink_clr_flowctrl() can be called while the lock you propose is held.  FWIW, this was implemented earlier today and when I happened on the idea of the current implementation.\n\nOne idea that I think I mentioned in chat earlier was to make it so that lx_audit_emit_syscall_event() passes an array of messages (currently two elements, but may grow with OS-6951 and/or OS-6916).  If I understand properly, this function could chain an arbitrary number of mblks together and send them all at once.  This would probably work well with mutex you propose while avoiding the problems I describe in the previous two paragraphs.\n\nAnother thought I had with the mutex approach was to also add a cv.  That way we could sleep on the cv while awaiting the queue to drain.  This would avoid the polling and the likely burstiness and rate limiting that comes from lx_audit_worker() sleeping for a while whenever it hits ENOSPC.  My initial implementation went down this path too, but it started to look rather complex for a small fix whose most important purpose is to avoid the need for a backout of OS-6212."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":43,"deletions":-5},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":44,"sizeDeletions":-6},{"number":"3","revision":"965d22ee5476dc70d7e32e01107234f9c8f7ff32","parents":["a5f014c173362ac2af00648d1184575a91522acd"],"ref":"refs/changes/44/4244/3","uploader":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"createdOn":1529440916,"author":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529441932,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529441495,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}}],"comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":419,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"lxns_flowctrled"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1827,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"could you add a short comment noting that NLMSG_DONE means msg \u003d\u003d NULL."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":41,"deletions":-2},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":42,"sizeDeletions":-3},{"number":"4","revision":"f0f2ba1ec85f5d033f9a5500b8476dd1eec1025d","parents":["a5f014c173362ac2af00648d1184575a91522acd"],"ref":"refs/changes/44/4244/4","uploader":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"createdOn":1529445844,"author":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529445936,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529457991,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529446155,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529452229,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1827,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"small (self) nit: exempt"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1841,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"\"indicate\""}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":41,"deletions":-2},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":42,"sizeDeletions":-3},{"number":"5","revision":"11ba0676831aa31420b99c27330377eb88173e7d","parents":["a5f014c173362ac2af00648d1184575a91522acd"],"ref":"refs/changes/44/4244/5","uploader":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"createdOn":1529458622,"author":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529445936,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529457991,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529446155,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529452229,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":41,"deletions":-2},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":42,"sizeDeletions":-3},{"number":"6","revision":"ad4084961269e91383400b7a28bee257750c85ff","parents":["7058c3c954af033fd27362cf841933da915322f1"],"ref":"refs/changes/44/4244/6","uploader":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"createdOn":1529458627,"author":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529445936,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529457991,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529446155,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1529452229,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}},{"type":"SUBM","value":"1","grantedOn":1529458645,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":41,"deletions":-2},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":42,"sizeDeletions":-3}],"allReviewers":[{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}]}