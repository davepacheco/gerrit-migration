{"project":"joyent/illumos-joyent","branch":"master","id":"I1869eebb8d211d3bcbdec1bf42f3942bd0d397c7","number":"3908","subject":"OS-6212 Auditd fails to start on LX in CentOS 7 Reviewed by: Mike Gerdts \u003cmike.gerdts@joyent.com\u003e Reviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e Approved by: Mike Gerdts \u003cmike.gerdts@joyent.com\u003e","owner":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"url":"https://cr.joyent.us/3908","commitMessage":"OS-6212 Auditd fails to start on LX in CentOS 7\nReviewed by: Mike Gerdts \u003cmike.gerdts@joyent.com\u003e\nReviewed by: Patrick Mooney \u003cpatrick.mooney@joyent.com\u003e\nApproved by: Mike Gerdts \u003cmike.gerdts@joyent.com\u003e\n","createdOn":1525439189,"lastUpdated":1529004354,"open":false,"status":"MERGED","comments":[{"timestamp":1525439189,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 1."},{"timestamp":1525455501,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 2."},{"timestamp":1525455550,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\nPatch set 2 cleans up a few small things I found with a DEBUG build and during further testing today."},{"timestamp":1525463944,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 2:\n\n(22 comments)"},{"timestamp":1525468882,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 2:\n\n(33 comments)\n\nI still need to spend time on lx_netlink.c.  Should have that to you on Monday.  The code review part of my brain is turning to mush."},{"timestamp":1525544930,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\n(44 comments)"},{"timestamp":1525706644,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 2:\n\n(4 comments)"},{"timestamp":1525711213,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 2:\n\n(1 comment)\n\nlx_netlink.c review complete; no further comments on this round."},{"timestamp":1525713576,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\n(4 comments)"},{"timestamp":1525718255,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1525727393,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1525729073,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1525807973,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 3."},{"timestamp":1525808017,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 3:\n\nI think I addressed everything from the first round, but if I missed something, I apologize in advance."},{"timestamp":1525819586,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1525821174,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1525879797,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 3:\n\n(9 comments)\n\nThanks for adding the breadcrumbs on panic."},{"timestamp":1525890943,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 3:\n\n(8 comments)\n\nIn addition to the changes I commented on, this next update includes a few fixes for issues I found as I was running through the test plan."},{"timestamp":1525890967,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 4."},{"timestamp":1526596052,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 4:\n\n(10 comments)"},{"timestamp":1526647226,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 4:\n\n(9 comments)"},{"timestamp":1526676402,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 5."},{"timestamp":1526676493,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 5:\n\nWith all of the refactoring I had to do to address the latest CR feedback, I am not sure how easy it will be to use the diff view to understand the changes. I apologize in advance for that."},{"timestamp":1528290774,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 5:\n\n(4 comments)"},{"timestamp":1528293728,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 5:\n\n(4 comments)"},{"timestamp":1528299973,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 6."},{"timestamp":1528368331,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 6: Code-Review+1"},{"timestamp":1528385878,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 6:\n\n(2 comments)\n\nThanks for doing that reorganization.  To me it seems lot cleaner and more separated into logical groupings."},{"timestamp":1528404231,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 6:\n\nThe panic behavior does not log to the zone (or global zone) console.\n\nauditctl -f 2\nauditctl -b 8\nkill -9 \u003cauditd-pid\u003e\nauditctl -s\n...\nauditctl -s\n\nEventually the zone reboots, and the console shows:\n\n[root@lxaudit ~]# zlogin -C d49ec84c-e113-68b7-9cac-934d13b6cac7\n[Connected to zone \u0027d49ec84c-e113-68b7-9cac-934d13b6cac7\u0027 console]\n\nCentOS Linux 7 (Core)\nKernel 4.3.0 on an x86_64\n\nlx1 login:\n[NOTICE: Zone rebooting]\n2018-06-07T20:39:44.726Z INFO no metadata for \u0027sdc:volumes\u0027\nsystemd 219 running in system mode. (+PAM +AUDIT +SELINUX +IMA -APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ -LZ4 -SECCOMP +BLKID +ELFUTILS +KMOD +IDN)\nDetected virtualization other.\nDetected architecture x86-64.\n...\n\n\nNot holding up the review for this, but if it is something trivial we may want to fix it."},{"timestamp":1528461622,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 6:\n\n(1 comment)\n\nI changed the code to use a local lock. I don’t think the other style issue is a big deal. Once I have a chance to setup my VMs again for testing, I’ll debug and try to figure out why the console output does not show up on CentOS 7."},{"timestamp":1528461703,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 7."},{"timestamp":1528836402,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1528913992,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1529002587,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7:\n\nI reran all of the tests listed on the ticket for a both a non-DEBUG and DEBUG build. Everything looks fine. I did confirm that I\u0027m not getting any console log messages when the audit panic configuration reboots the zone, but in the interest of getting this work integrated, it seems like we should track that problem with a separate issue."},{"timestamp":1529003039,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Patch Set 7: Integration-Approval+1"},{"timestamp":1529004187,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 8: Patch Set 7 was rebased."},{"timestamp":1529004325,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Uploaded patch set 9: Commit message was updated."},{"timestamp":1529004354,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Jerry Jelinek"}],"currentPatchSet":{"number":"9","revision":"1869eebb8d211d3bcbdec1bf42f3942bd0d397c7","parents":["e5c3f3de12c528e4490dc8f63b602902248fb0eb"],"ref":"refs/changes/08/3908/9","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1529004325,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528836402,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528913992,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529003039,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}},{"type":"SUBM","value":"1","grantedOn":1529004354,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":402,"deletions":-7},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1603,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":3,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":19,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2076,"sizeDeletions":-9},"patchSets":[{"number":"1","revision":"76ad59ceedcdb41fc2299b83806caaa806ba0a08","parents":["734000027845005c8c88895da60e3be5798296e2"],"ref":"refs/changes/08/3908/1","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1525439189,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":395,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"lx_audit_enbl_t"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":395,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"This is how it is defined in Linux so I\u0027d prefer to keep that consistent."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":32,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Can these be defined via an enum?  This allows structures and function parameters to be more explicit about what flags they expect.  mdb can decode enum values to names, which is also quite nice."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":32,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"For all of the comments re: the netlink code, I just moved this so it could be used in the lx_brand module and I\u0027d like to not change the existing netlink code under this ticket since it is already too big and the netlink changes would be orthogonal."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":42,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"LXNLMSG_HDRLEN ?\n\nAnd several others below seem to be missing LX"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":52,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"enum?"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":57,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"No need for DUMP_FILTERED?"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":60,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"enum?"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":70,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"enum?\n\nComment pointing to linux/audit.h"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":79,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"enum?"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":87,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"why not use list_node_t?"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":97,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Assuming the flags become an enum, lxnlf_t"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":125,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"If compiling with C99, the size is not needed. That will probably mean the LINTED above is not needed either."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":125,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"This is the structure as defined in Linux so I would like to keep this consistent."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":187,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"also declared in lx_brand.h"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":187,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","line":720,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"also in lx_audit.h"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":457,"deletions":-139},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1252,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":197,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":18,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":1936,"sizeDeletions":-141},{"number":"2","revision":"8f3a7b9e4e20fce8955898bf15095932821c973c","parents":["734000027845005c8c88895da60e3be5798296e2"],"ref":"refs/changes/08/3908/2","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1525455501,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":404,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"never used.  Presumably it exists for compatibility with Linux, but should something be setting or reading it?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":404,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Yes, this is the Linux definition of the interface. It is possible that one of the netlink audit commands I haven\u0027t implemented yet will access this field, or perhaps it is dead in Linux too."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1521,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Don\u0027t we need some race protection for this value?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1521,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"In general I don\u0027t think I need a lock on this value, and I certainly don\u0027t want to take a lock on every syscall return, but I do agree that there is a race in this function specifically since once the config is locked, we cannot make any of the other changes below, so I moved this specific check under the lock."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1582,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Race protection?  Should the case values use the defines/enum names rather than numeric values?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1582,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I was using the values as they are documented in the Linux man page, but my enum is the same so I\u0027ll change this. See previous comment about locking here."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1607,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"race protection?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1607,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"no, as per above"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1619,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"\u0027bp\u0027 is a user pointer, right?  Is the datalen calculation supposed to cover that buffer region? (the code proximity suggests that, at least)  The handling around \u0027bp\u0027 looks as if it would blow up on a SMAP-enabled box if attempted today."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1619,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"no, bp is a pointer into the mblk. So far I haven\u0027t seen a case where I need to handle multiple mblks on a netlink message, but that is a possibility I need to take another look at here."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1619,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Perhaps I\u0027m confused.  The mblk_t is coming straight from the standard netlink handling, right?.  So rulep is fine, since the mblk_t has been copied in, but what guarantees that lxar_buf points to the mblk?  Are the contents here coming in via send(2)?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1619,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Here is followup from our chat. As I said, the string data is in the mblk. Here is some confirmation. I wrote the following dtrace rules:\nfbt::lx_audit_add_rule:entry\n{\n        this-\u003em \u003d (mblk_t *)arg2;\n        printf(\"%s -\u003e %s mp: %p mpl: %d\\n\",\n            execname,\n            probefunc, arg2,\n            this-\u003em-\u003eb_wptr - this-\u003em-\u003eb_rptr);\n}\n\nfbt::lx_audit_append_rule:entry\n{\n        printf(\"%s -\u003e %s: rulep: %p datap: %p\\n\",\n            execname,\n            probefunc, arg0, arg1)\n}\n\nThis produces the following when I add a rule:\nauditctl -\u003e lx_audit_add_rule mp: fffffe08f6e06ee0 mpl: 1068\nauditctl -\u003e lx_audit_append_rule: rulep: fffffe0968e8a800 datap: fffffe0968e8ac10\n\nNote that the mblk length includes the string data as expected.\n\nUsing mdb on the kernel:\n\u003e ::sizeof lx_audit_rule_t\nsizeof (lx_audit_rule_t) \u003d 0x410\n\u003e 8a800+410\u003dX\n                8ac10    \n\nI think this shows that we\u0027re dealing with the string data on the mblk immediately following the body of the rule."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1660,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"same userland pointer concerns about \u0027bp\u0027"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1660,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"same as above"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1767,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"For paranoia, this should probably verify that \u0027curzone\u0027 is LX branded to protect against the socket being passed somewhere goofy via SCM_RIGHTS.  That would keep lx_audit_init() and all the subsequent message logic protected.\n\nUsing the cred_t with which the socket was opened might also do the trick?"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1767,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I added a check"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":39,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"ANDed would be easier to read, IMO"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":39,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":181,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"While I know they\u0027re intertwined, the tangle between the general netlink stuff and the audit facility seems rather unfortunate."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":181,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"agreed, but this was the best idea I could come up with without duplicating a lot of code"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":201,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"unitdata"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":201,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I didn\u0027t actually write this function, just moved it, but I\u0027ll fix this."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":262,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"const char"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":309,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"why void *s?  couldn\u0027t this be lx_netlink_sock_t *lxsock?\nconst char *msg"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":309,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Fixed, that was a leftover from some earlier code I had."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":352,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Maybe we should be more selective about err here.  If ENOMEM, a retry may be beneficial.  If E2BIG, this strategy will just clog up the queue."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":352,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Good point, fixed."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":380,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"return (curval \u003c ruleval);\n\nSame for all below."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":380,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"good suggestion, fixed"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":402,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"My read of auditctl(8) says this is appropriate for BM not BT.\n\nBit test will \"and\" the values and check that they are equal, bit mask just \"ands\" the values."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":402,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I need to make sure the bit stuff is ok. Right now we can\u0027t accept any rules that use those operators, but I have another ticket for future work on more rule handling."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":430,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Should this be crgetsuid() instead?  Otherwise an unprivileged user can use setreuid() to impersonate whoever euid belongs to."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":430,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"good thought, fixed"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":501,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"why bother with t?  It\u0027s not used below here."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":501,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"removed"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":503,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"ttoproc()"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":503,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I removed thread so kept the current usage"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":513,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"nit: why not just one string literal here?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":513,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":526,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"protect with p_lock?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":526,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"check or cast return."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":526,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":526,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":539,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"check return"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":539,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"void"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":539,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"If the buffer is too small the resulting audit entry could end in something like:\n\ncomm\u003d\"f\n\nDoes this break things badly?  Come to think of it, what if comm or exe has a quote character in it?  Should this data that is under user control be sanitized by replacing or escaping double quotes, newlines, etc.?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":539,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I\u0027ll look at if/how Linux escapes these strings and follow the same convention."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":539,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Linux handles this in true Linux fashion. When the comm or exe string has a character that we might expect to be escaped, Linux uses a hex string representation of the entire string. e.g. a program called weird\"name becomes 7765697264226E616D65 in the audit record."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":539,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Sweet.\n\n\u003crhetorical\u003eSo what happens when the command name is 7765697264226E616D65?\u003c/rhetorical\u003e"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":539,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Even though it was rhetorical, :-) I think a consumer would distinguish this because the non-hex string (i.e. the normal case) would start with a quote char (\")."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":548,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"nit: use defines and/or %08x formatting?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":548,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":563,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"shouldn\u0027t this also check that crgetsuid() also matches?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":569,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"At _least_ p_lock needs to be held while walking the p_sessp pointer, and perhaps more.  See also: cttydev() sess_create()"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":569,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"This needs to be retrieved beforehand, while holding pidlock."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":569,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":569,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":570,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Pre-copy this like u_psargs, under p_lock?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":570,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":634,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"\u003d\u003d DATAMODEL_ILP32"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":634,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":679,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"A for loop could allow a lot less indent:\n\nfor (; erp !\u003d NULL; erp - lx_..(...)) {\n        if (!lx_audit_syscall_rule_match(errp))\n                continue;\n        err \u003d lx_audit_syscall_fmt_rcd(...);\n        if (err \u003d\u003d 0)\n                continue;\n        ...\n        switch (...) {\n        }\n}"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":679,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"changed"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":698,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"panic() prints something to the console that clearly distinguishes between a panic and other shutdown causes.   Something analogous should happen here.  Remember, we now have zone console logging in case that is helpful."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":698,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I don\u0027t think very many (anyone?) ever accesses the console in production. I really need to get a message out that would go to journald, or whatever other logger is being used inside the zone, but I want to leave that for follow up work."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":700,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Any chance we want to emit some sort of cmn_err message for this case?  I don\u0027t want us to get too verbose with that kind of thing, but if we\u0027re rebooting the zone because of audit, we might want some record of it."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":700,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"No, panic is a perfectly normal config for auditing if the auditd is not keeping up for some reasonn"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":700,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"I think that what both Patrick and I are getting at is that ops needs some way to identify that the reason for the spontaneous reboot was due to audit.   cmn_err or some other mechanism that causes a log to be persisted in the global zone zone would satisfy this need."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":700,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I disagree. Ops does not monitor or care about when a customer reboots their zone either. The customer is the one driving this behavior here and we have no interest in it. From the customer\u0027s perspective, this is something only they care about that is occurring entirely within the zone."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":753,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"while ((j \u003d ffs(lxar_mask[i])) !\u003d 0)\n\nThere may be a speed improvement by using half as many 64-bit array members."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":753,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I don\u0027t want to change the rule representation from the Linux defined 32-bit array."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":753,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"32-bit vs. 64-bit was one thing.  Use of ffs() (or BT_*, as Patrick suggests in another file) is likely to be much faster than this loop."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":868,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"(void)"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":868,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1014,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"This duplicates a bunch of code from above and starts the search from the beginning.  It would seem better to continue the search above to see if the rule needs to remain enabled."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1014,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I\u0027ll take a look at changing it to work that way"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1120,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"More p_sessp access which needs lock protection."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1120,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1155,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"allocation"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1155,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1191,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Why a taskq if you only ever have one worker and only dispatch one item to that taskq?   You could accomplish the same without a taskq with:\n\nthread_create(NULL, 0, lx_audit_worker, lxzd);\n\nIf you want to use a taskq, each audit event should be dispatched to the taskq.  In that case, lxast_ev_queue would not exist."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1191,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I was depending on the taskq semantics for the in-kernel thread and taskq destruction behavior, but I can look at what it would mean to change this."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1220,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"Not safe until worker is dead"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1220,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I believe the current code is fine, why do you think it is unsafe?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1220,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"In lx_audit_worker, the asp-\u003elxast_exit is B_FALSE.\n\nHere the list is destroyed.\n\nIn lx_audit_worker, list_remove_head() is called.  That should not be called on a destroyed list.\n\nYou could juggle the order of list destruction and setting lxast_exit, but you still end up with fragile code because someone that later modifies lx_audit_worker() may not closely analyze how lx_audit_fini() works.\n\nThere\u0027s no real advantage to destroying the list early, so it is better to just wait until anyone that may be tempted to use it is no longer running, then do the destruction."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1220,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"The list is destroyed while lxast_lock is held. The worker also has to hold lxast_lock to access the list. In the worker, the lxast_exit flag takes precedence over accessing the list. I guess I am not sure what problem you see here."},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","line":382,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Should this happen after the error check, since the data might be bogus in that case?"},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","line":382,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"We\u0027re accessing the args at the same point as the DTrace probes and they could be used in syscall return to generate an audit record, so I think this is the right place to save them off."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":65,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Why not toss all the netlink stuff which is shared between audit and rtnetlink in a common header, rather than tying it to lx_audit.h?"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":65,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":113,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Same comment, Re: lx_netlink.h"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":113,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":119,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Why not use the BT_* macros for this?"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":119,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I\u0027ll explore using those macros and see how things come out"},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","line":630,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Since this is apparently visible to userspace via the status message, it should probably bear a comment that describes that explicitly."},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","line":630,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I\u0027ll add more comments documenting the Linux API, but these values are documented (as integer 0-2) in the Linux man pages."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":460,"deletions":-139},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1245,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":197,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":18,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":1932,"sizeDeletions":-141},{"number":"3","revision":"4a2140fe5e051c0dfc5ea4044d3e6d29ded2e0c9","parents":["734000027845005c8c88895da60e3be5798296e2"],"ref":"refs/changes/08/3908/3","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1525807973,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1531,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"case LXAE_SILENT:\ncase LXAE_PRINT:\ncase LXAE_PANIC:\n        asp-\u003elxast_failure \u003d statusp-\u003elxas_failure;\n        break;"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1531,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":93,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"a worker, but not a taskq worker"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":93,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":204,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"declare this in a header file included by this file and lx_socket.c.  Otherwise, a change in the signature in lx_socket.c can lead to runtime failures because the wrong types are passed."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":204,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"No, this is our standard way of dealing with in-kernel dependencies that we use throughout lx. Also, this interface is defined in the Linux ABI and cannot change. I have added a comment here to be consistent with how we handle this throughout lx."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":205,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"This seems out of place.  Is #include \u003cunistd.h\u003e?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":205,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"No, same as above."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":356,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"not taskq"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":356,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":382,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"\u0026\u0026"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":382,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I changed this to a single check."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":746,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"This should be done under p_splock, like the above p_sessp accessors."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":746,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1185,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Use \u0027sessid\u0027 from above"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1185,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"already fixed, I think you were looking at an old CR"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1231,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"while (asp-\u003elxast_sock !\u003d NULL) {\n\nand get rid of goto."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1231,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1271,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"lx_audit_worker"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1271,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I removed the entire thing."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":109,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"no longer a taskq"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":486,"deletions":-139},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1338,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":127,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":18,"deletions":-1},{"file":"usr/src/uts/common/brand/lx/sys/lx_netlink.h","type":"ADDED","insertions":100,"deletions":0},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2081,"sizeDeletions":-141},{"number":"4","revision":"89d0cdc7d2b5673cc9d37854e22b3b58fe700035","parents":["734000027845005c8c88895da60e3be5798296e2"],"ref":"refs/changes/08/3908/4","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1525890967,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1521,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Well this is terrifying.  Perhaps include a comment in the BACKLOG_WAIT_TIME section below referencing that it\u0027s doing the necessary follow-up check to prevent disaster here."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1521,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I haven\u0027t dug through all of the LInux history here, but I think it has to do with user-level audit code being built for older versions of the kernel. I\u0027ll add the comment below."},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1556,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Should we do anything to verify this PID?  (Even though it appears to be used for nothing besides identification)"},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","line":1556,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I don\u0027t have any ideas, but if you have suggestions, let me know. That process can go away at any time, but I already handle that properly in the cleanup code."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":355,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"I\u0027m not particularly fond of seeing all the netlink-specific stuff here.  I understand that we must avoid the circular dependency (preferably avoiding modstubs or anything), but what about another way?\n\nThe netlink side of audit could pass through a function pointer for encapsulating/emitting the message.  Then the worker thread could just pass in the opaque sock struct, the data buffer and a len.  These two functions, plus the alloc_mp1 could be moved back into lx_netlink where they \"belong\""},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":355,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"OK, I\u0027ll work on rewriting the code along those lines."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":580,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"This feels pretty dirty, but seems fine under the circumstances."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":754,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"nit: cache CRED()?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":754,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":755,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"This should be cached in the block above where splock is held."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":755,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":974,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Do we need to handle multiple key fields? (Or at least bail when hitting such a condition)"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":974,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I think you mean string arguments to the keys. Eventually yes, we will have to handle multiple string arguments. My current code disallows fields that it does not yet support, but I fixed that after I pushed this version of the CR.  I\u0027ll be including that (minor) change in the next round of CR."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1057,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Why re-set \u0027mtch\u0027 when we just verified that it\u0027s B_TRUE?"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1057,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Because the next loop depends on that again and I wanted to make it obvious. I\u0027ll move the initialization into the for loop to make it match the previous for loop usage and hopefully more obvious."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":497,"deletions":-139},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1343,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":128,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":18,"deletions":-1},{"file":"usr/src/uts/common/brand/lx/sys/lx_netlink.h","type":"ADDED","insertions":100,"deletions":0},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2098,"sizeDeletions":-141},{"number":"5","revision":"193dc5839ea4968d530ff052e18aa3caca085416","parents":["734000027845005c8c88895da60e3be5798296e2"],"ref":"refs/changes/08/3908/5","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1526676402,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":172,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"extra space"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":172,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"fixed"},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1024,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"But above the test allowed multiple arches.  Should the test at 1019 be explicit to test for (non-bitwise) B64 or B32?\n\nIf (LX_AUDIT_VAL_B32|LX_AUDIT_VAL_B64) is valid to be passed in, it seems we should be generating two lx_audit_rule_ent_t\u0027s."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1024,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"This is an odd case since that config is misleading/broken. Linux allows it (of course) but the man page is clear that it should not be used. At this point I don\u0027t think it is worthwhile duplicating the broken Linux behavior that no one would use or rely on in the first place. Since this work is already mostly irrelevant, I\u0027m inclined to leave the code as-is in case we ever decide to integrate it."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":23,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"(void).  Same change needed in lx_audit.c."},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":23,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"changed"},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","line":720,"reviewer":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},"message":"This is also defined (but differently) in lx_audit.h.  Maybe that declaration should be moved here."},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","line":720,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I removed this one"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":402,"deletions":-7},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1586,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":18,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2056,"sizeDeletions":-9},{"number":"6","revision":"b7b27ad3b4e71a5fc56b15e7d646660a4ba37568","parents":["65e782538ba0e28b5bae27b0357c8afba9e788a6"],"ref":"refs/changes/08/3908/6","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1528299973,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528368331,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}}],"comments":[{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1535,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Is there a reason to protect lx_audit_emit_msg with pidlock rather than an lx_audit-private lock?  It seems that most of the protection is derived from lx_netlink calling this only when it is unused and being unloaded."},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","line":1535,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","line":28,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"style nit: maybe considering typedef-ing the callback function signatures so they get contextual name?  up to you"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":402,"deletions":-7},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1586,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":1,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":17,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2055,"sizeDeletions":-9},{"number":"7","revision":"469ddd574c3fb2bd3d6f836a9724ed632e81db79","parents":["65e782538ba0e28b5bae27b0357c8afba9e788a6"],"ref":"refs/changes/08/3908/7","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1528461703,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528913992,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528836402,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529003039,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":402,"deletions":-7},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1603,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":3,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":19,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2076,"sizeDeletions":-9},{"number":"8","revision":"addbbc8948eb53fb3653f81d4c206c5ccbe58ff4","parents":["e5c3f3de12c528e4490dc8f63b602902248fb0eb"],"ref":"refs/changes/08/3908/8","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1529004187,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528913992,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528836402,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529003039,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":402,"deletions":-7},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1603,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":3,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":19,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2076,"sizeDeletions":-9},{"number":"9","revision":"1869eebb8d211d3bcbdec1bf42f3942bd0d397c7","parents":["e5c3f3de12c528e4490dc8f63b602902248fb0eb"],"ref":"refs/changes/08/3908/9","uploader":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"createdOn":1529004325,"author":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"SUBM","value":"1","grantedOn":1529004354,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528913992,"by":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1528836402,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1529003039,"by":{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"usr/src/uts/common/brand/lx/io/lx_netlink.c","type":"MODIFIED","insertions":402,"deletions":-7},{"file":"usr/src/uts/common/brand/lx/os/lx_audit.c","type":"ADDED","insertions":1603,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_brand.c","type":"MODIFIED","insertions":3,"deletions":0},{"file":"usr/src/uts/common/brand/lx/os/lx_syscall.c","type":"MODIFIED","insertions":9,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_audit.h","type":"ADDED","insertions":38,"deletions":0},{"file":"usr/src/uts/common/brand/lx/sys/lx_brand.h","type":"MODIFIED","insertions":19,"deletions":-1},{"file":"usr/src/uts/intel/Makefile.files","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":2076,"sizeDeletions":-9}],"allReviewers":[{"name":"Mike Gerdts","email":"mike.gerdts@joyent.com","username":"mgerdts"},{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}]}