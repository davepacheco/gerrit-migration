From 66b7dc4b31e6d6c88717c90491dfe617bc645d71 Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Mon, 17 Jun 2019 21:03:25 -0700
Subject: [PATCH] TRITON-1716 Instances migrated with `sdc-migrate` have
 create_timestamp reset Reviewed by: Orlando Vazquez <orlando@joyent.com>
 Approved by: Orlando Vazquez <orlando@joyent.com>

---
 lib/workflows/migrate-begin.js      |  4 +++
 lib/workflows/vm-migration/begin.js | 44 +++++++++++++++++++++++++++++
 package.json                        |  2 +-
 test/lib/migration.js               | 23 +++++++++------
 4 files changed, 64 insertions(+), 9 deletions(-)

diff --git a/lib/workflows/migrate-begin.js b/lib/workflows/migrate-begin.js
index 1c62db5..d770557 100644
--- a/lib/workflows/migrate-begin.js
+++ b/lib/workflows/migrate-begin.js
@@ -55,6 +55,10 @@ var workflow = module.exports = {
 
         migrationBegin.tasks.provisionVm,
 
+        common.tasks.setupForWaitTask,
+        migrationBegin.tasks.setCreateTimestamp,
+        common.tasks.waitTask,
+
         common.tasks.setupForWaitTask,
         migrationBegin.tasks.getTargetFilesystemDetails,
         common.tasks.waitTask,
diff --git a/lib/workflows/vm-migration/begin.js b/lib/workflows/vm-migration/begin.js
index 8e71cb7..744b271 100644
--- a/lib/workflows/vm-migration/begin.js
+++ b/lib/workflows/vm-migration/begin.js
@@ -435,6 +435,40 @@ function provisionVm(job, cb) {
 }
 
 
+function setCreateTimestamp(job, cb) {
+    var record = job.params.migrationTask.record;
+
+    assert.object(job.params.vm, 'job.params.vm');
+    assert.uuid(record.target_server_uuid, 'record.target_server_uuid');
+    assert.uuid(record.target_vm_uuid, 'record.target_vm_uuid');
+
+    var cnapi = restify.createJsonClient({
+        url: cnapiUrl,
+        headers: { 'x-request-id': job.params['x-request-id'] }
+    });
+
+    var url = '/servers/' +
+        record.target_server_uuid + '/vms/' +
+        record.target_vm_uuid + '/migrate';
+    var payload = {
+        action: 'set-create-timestamp',
+        migrationTask: job.params.migrationTask,
+        vm: job.params.vm,
+        vm_uuid: record.target_vm_uuid
+    };
+
+    cnapi.post(url, payload, function _setCreateTimeCb(err, req, res, task) {
+        if (err) {
+            cb(err);
+            return;
+        }
+
+        job.taskId = task.id;
+        cb(null, 'OK - task id: ' + task.id + ' queued to CNAPI!');
+    });
+}
+
+
 function startSyncWhenAutomatic(job, cb) {
     var record = job.params.migrationTask.record;
 
@@ -529,6 +563,16 @@ module.exports = {
                 restify: 'restify'
             }
         },
+        setCreateTimestamp: {
+            name: 'migration.setCreateTimestamp',
+            timeout: 300,
+            retry: 1,
+            body: setCreateTimestamp,
+            modules: {
+                assert: 'assert-plus',
+                restify: 'restify'
+            }
+        },
         storeSourceFilesystemDetails: {
             name: 'migration.begin.storeSourceFilesystemDetails',
             timeout: 60,
diff --git a/package.json b/package.json
index 9dc0846..17956c9 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "vmapi",
   "description": "VMs API",
-  "version": "9.8.10",
+  "version": "9.8.11",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/lib/migration.js b/test/lib/migration.js
index 859c1e3..9340793 100644
--- a/test/lib/migration.js
+++ b/test/lib/migration.js
@@ -13,6 +13,7 @@ var util = require('util');
 
 var assert = require('assert-plus');
 var byline = require('byline');
+var jsprim = require('jsprim');
 var restify = require('restify');
 var vasync = require('vasync');
 
@@ -809,10 +810,9 @@ function TestMigrationCfg(test, cfg) {
             t.equal(migration.phase, 'begin', 'phase should be "begin"');
             t.equal(migration.state, 'paused', 'state should be "paused"');
 
-            targetVm = {
-                uuid: migration.target_vm_uuid,
-                server_uuid: migration.target_server_uuid
-            };
+            targetVm = jsprim.deepCopy(sourceVm);
+            targetVm.uuid = migration.target_vm_uuid;
+            targetVm.server_uuid = migration.target_server_uuid;
 
             t.ok(Array.isArray(migration.progress_history) &&
                     migration.progress_history.length >= 1,
@@ -1221,6 +1221,10 @@ function TestMigrationCfg(test, cfg) {
                     t.notEqual(sourceVm.server_uuid, vm.server_uuid,
                         'vm server_uuid should be different');
                 }
+
+                // TRITON-1716 Ensure the create-timestamp has not changed.
+                t.equal(sourceVm.create_timestamp, vm.create_timestamp,
+                    'original create_timestamp should be maintained');
             }
 
             checkMigratedVm();
@@ -1443,10 +1447,9 @@ function TestMigrationCfg(test, cfg) {
 
             assert.object(migration, 'migration object');
 
-            targetVm = {
-                uuid: migration.target_vm_uuid,
-                server_uuid: migration.target_server_uuid
-            };
+            targetVm = jsprim.deepCopy(sourceVm);
+            targetVm.uuid = migration.target_vm_uuid;
+            targetVm.server_uuid = migration.target_server_uuid;
 
             t.done();
         });
@@ -1485,6 +1488,10 @@ function TestMigrationCfg(test, cfg) {
                     t.notEqual(sourceVm.server_uuid, vm.server_uuid,
                         'vm server_uuid should be different');
                 }
+
+                // TRITON-1716 Ensure the create-timestamp has not changed.
+                t.equal(sourceVm.create_timestamp, vm.create_timestamp,
+                    'original create_timestamp should be maintained');
             }
 
             checkMigratedVm();
-- 
2.21.0

