From 8c40de1457701d164d262154f68210ce7e3b0157 Mon Sep 17 00:00:00 2001
From: Mike Gerdts <mike.gerdts@joyent.com>
Date: Tue, 30 Oct 2018 22:05:12 +0000
Subject: [PATCH] =?UTF-8?q?OS-7333=20expander.js=20could=20prevent=20baldn?=
 =?UTF-8?q?ess=20by=20sanity=20check=20non-string=20zone.attr.*=20Reviewed?=
 =?UTF-8?q?=20by:=20Pedro=20Palaz=C3=B3n=20Candel=20<pedro@joyent.com>=20R?=
 =?UTF-8?q?eviewed=20by:=20Dave=20Eddy=20<dave.eddy@joyent.com>=20Approved?=
 =?UTF-8?q?=20by:=20Dave=20Eddy=20<dave.eddy@joyent.com>?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 src/vm/node_modules/expander.js | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/src/vm/node_modules/expander.js b/src/vm/node_modules/expander.js
index d79db38e..9b90ce13 100644
--- a/src/vm/node_modules/expander.js
+++ b/src/vm/node_modules/expander.js
@@ -135,6 +135,17 @@ Object.keys(proptable.properties).forEach(function (prop) {
         if (!property.hasOwnProperty('ignore')) {
             vmobj_zonexml_fields.push(prop);
         }
+        // zone.attr.* are stored as strings. If the type is not a string and
+        // there is no translator, save the developer a few hours of debugging.
+        if (property.zonexml.substring(0, 10) === 'zone.attr.'
+            && !property.loadValueTranslator
+            && property.payload && property.payload.type) {
+            var str_types = ['flat-object', 'string', 'uuid'];
+            assert(str_types.indexOf(property.payload.type) !== -1,
+                'prop "' + prop + '" type "' + property.payload.type
+                + '" is not one of "' + str_types.join('", "')
+                + '" and has no loadValueTranslator.');
+        }
     } else if (property.zonexml_depends) {
         /*
          * zonexml_depends is used for things like transition_expire which
-- 
2.21.0

