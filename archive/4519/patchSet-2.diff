From ebaf0ba2742d43aa0317865557200e95484a1cef Mon Sep 17 00:00:00 2001
From: Hans Rosenfeld <hans.rosenfeld@joyent.com>
Date: Mon, 16 Jul 2018 17:54:16 +0200
Subject: [PATCH] OS-6966 SmartOS hangs in boot on bhyve

---
 usr/src/cmd/bhyve/virtio.h | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/usr/src/cmd/bhyve/virtio.h b/usr/src/cmd/bhyve/virtio.h
index cd28f55738..c88e71a113 100644
--- a/usr/src/cmd/bhyve/virtio.h
+++ b/usr/src/cmd/bhyve/virtio.h
@@ -31,6 +31,8 @@
 #ifndef	_VIRTIO_H_
 #define	_VIRTIO_H_
 
+#include <pthread_np.h>
+
 /*
  * These are derived from several virtio specifications.
  *
@@ -438,11 +440,21 @@ vq_interrupt(struct virtio_softc *vs, struct vqueue_info *vq)
 	if (pci_msix_enabled(vs->vs_pi))
 		pci_generate_msix(vs->vs_pi, vq->vq_msix_idx);
 	else {
+#ifndef __FreeBSD__
+		if (vs->vs_mtx && !pthread_mutex_isowned_np(vs->vs_mtx))
+		    pthread_mutex_lock(vs->vs_mtx);
+#else
 		VS_LOCK(vs);
+#endif
 		vs->vs_isr |= VTCFG_ISR_QUEUES;
 		pci_generate_msi(vs->vs_pi, 0);
 		pci_lintr_assert(vs->vs_pi);
+#ifndef __FreeBSD__
+		if (vs->vs_mtx && !pthread_mutex_isowned_np(vs->vs_mtx))
+		    pthread_mutex_unlock(vs->vs_mtx);
+#else
 		VS_UNLOCK(vs);
+#endif
 	}
 }
 
-- 
2.21.0

