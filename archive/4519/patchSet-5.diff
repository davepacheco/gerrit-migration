commit 302b550cc590529a1f35ad5a97261283af23209a (refs/changes/19/4519/5)
Author: Hans Rosenfeld <hans.rosenfeld@joyent.com>
Date:   2018-08-01T17:37:12+02:00 (1 year, 2 months ago)
    
    OS-6966 SmartOS hangs in boot on bhyve
    Reviewed by: Mike Gerdts <mike.gerdts@joyent.com>
    Reviewed by: John Levon <john.levon@joyent.com>
    Reviewed by: Patrick Mooney <patrick.mooney@joyent.com>
    Approved by: John Levon <john.levon@joyent.com>

diff --git a/usr/src/cmd/bhyve/virtio.h b/usr/src/cmd/bhyve/virtio.h
index cd28f55738..f59d823448 100644
--- a/usr/src/cmd/bhyve/virtio.h
+++ b/usr/src/cmd/bhyve/virtio.h
@@ -31,6 +31,8 @@
 #ifndef	_VIRTIO_H_
 #define	_VIRTIO_H_
 
+#include <pthread_np.h>
+
 /*
  * These are derived from several virtio specifications.
  *
@@ -438,11 +440,25 @@ vq_interrupt(struct virtio_softc *vs, struct vqueue_info *vq)
 	if (pci_msix_enabled(vs->vs_pi))
 		pci_generate_msix(vs->vs_pi, vq->vq_msix_idx);
 	else {
+#ifndef __FreeBSD__
+		boolean_t unlock = B_FALSE;
+
+		if (vs->vs_mtx && !pthread_mutex_isowned_np(vs->vs_mtx)) {
+			unlock = B_TRUE;
+			pthread_mutex_lock(vs->vs_mtx);
+		}
+#else
 		VS_LOCK(vs);
+#endif
 		vs->vs_isr |= VTCFG_ISR_QUEUES;
 		pci_generate_msi(vs->vs_pi, 0);
 		pci_lintr_assert(vs->vs_pi);
+#ifndef __FreeBSD__
+		if (unlock)
+			pthread_mutex_unlock(vs->vs_mtx);
+#else
 		VS_UNLOCK(vs);
+#endif
 	}
 }
 
