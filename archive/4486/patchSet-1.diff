commit 425c9bdc54965a89bcb42a4262ea2b269822c083 (refs/changes/86/4486/1)
Author: Rui Loura <rui@joyent.com>
Date:   2018-07-05T18:25:04+00:00 (1 year, 3 months ago)
    
    TRITON-572 sdcadm post-setup cloudapi should let sapi determine instance
    networks

diff --git a/lib/post-setup/cloudapi.js b/lib/post-setup/cloudapi.js
index 008430e..586580f 100644
--- a/lib/post-setup/cloudapi.js
+++ b/lib/post-setup/cloudapi.js
@@ -32,7 +32,6 @@ function createCloudapiInstance(opts, callback) {
     var sdcadm = opts.sdcadm;
     var sapi = opts.sdcadm.sapi;
 
-    var networks;
     var cloudapisvc;
 
     // find cloudapi service, get service uuid
@@ -54,16 +53,6 @@ function createCloudapiInstance(opts, callback) {
                 next();
             });
         },
-        function (_, next) {
-            getNetworksAdminExternal(function (err, nets) {
-                if (err) {
-                    next(err);
-                    return;
-                }
-                networks = nets;
-                next();
-            });
-        },
         function getHeadnode(ctx, next) {
             sdcadm.getCurrServerUuid(function (err, hn) {
                 if (err) {
@@ -78,16 +67,7 @@ function createCloudapiInstance(opts, callback) {
             var cOpts = {
                 params: {
                     server_uuid: ctx.headnodeUuid,
-                    alias: opts.alias,
-                    networks: [
-                        {
-                            uuid: networks.admin.uuid
-                        },
-                        {
-                            primary: true,
-                            uuid: networks.external.uuid
-                        }
-                    ]
+                    alias: opts.alias
                 }
             };
             sapi.createInstance(cloudapisvc.uuid, cOpts, function (err, _inst) {
@@ -111,30 +91,6 @@ function createCloudapiInstance(opts, callback) {
         }
         callback(err);
     });
-
-    function getNetworksAdminExternal(cb) {
-        var napi = sdcadm.napi;
-        var foundnets = {};
-
-        napi.listNetworks({
-            name: ['admin', 'external']
-        }, function listNetworksCb(listerr, nets) {
-            if (listerr) {
-                cb(new errors.SDCClientError(listerr, 'sapi'));
-                return;
-            }
-
-            if (!nets.length) {
-                cb(new Error('Couldn\'t find admin network in NAPI'));
-                return;
-            }
-            for (var i in nets) {
-                foundnets[nets[i].name] = nets[i];
-            }
-
-            cb(null, foundnets);
-        });
-    }
 }
 
 function Cloudapi() {}
