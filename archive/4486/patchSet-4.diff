commit d73d0f69d8ac8828ba6caf6c10414abba8adcb3c (refs/changes/86/4486/4)
Author: Rui Loura <rui@joyent.com>
Date:   2018-07-05T21:43:53+00:00 (1 year, 3 months ago)
    
    TRITON-572 sdcadm post-setup cloudapi should let sapi determine instance networks
    Reviewed by: Josh Wilsdon <jwilsdon@joyent.com>
    Approved by: Josh Wilsdon <jwilsdon@joyent.com>

diff --git a/CHANGES.md b/CHANGES.md
index 3c631a5..e1de9c7 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -10,6 +10,10 @@
 
 # sdcadm Changelog
 
+## 1.19.1
+
+- TRITON-572 sdcadm post-setup cloudapi should let sapi determine instance networks
+
 ## 1.19.0
 
 - TOOLS-1896 `sdcadm update sapi` could avoid using a temporary instance
diff --git a/lib/post-setup/cloudapi.js b/lib/post-setup/cloudapi.js
index 008430e..586580f 100644
--- a/lib/post-setup/cloudapi.js
+++ b/lib/post-setup/cloudapi.js
@@ -32,7 +32,6 @@ function createCloudapiInstance(opts, callback) {
     var sdcadm = opts.sdcadm;
     var sapi = opts.sdcadm.sapi;
 
-    var networks;
     var cloudapisvc;
 
     // find cloudapi service, get service uuid
@@ -54,16 +53,6 @@ function createCloudapiInstance(opts, callback) {
                 next();
             });
         },
-        function (_, next) {
-            getNetworksAdminExternal(function (err, nets) {
-                if (err) {
-                    next(err);
-                    return;
-                }
-                networks = nets;
-                next();
-            });
-        },
         function getHeadnode(ctx, next) {
             sdcadm.getCurrServerUuid(function (err, hn) {
                 if (err) {
@@ -78,16 +67,7 @@ function createCloudapiInstance(opts, callback) {
             var cOpts = {
                 params: {
                     server_uuid: ctx.headnodeUuid,
-                    alias: opts.alias,
-                    networks: [
-                        {
-                            uuid: networks.admin.uuid
-                        },
-                        {
-                            primary: true,
-                            uuid: networks.external.uuid
-                        }
-                    ]
+                    alias: opts.alias
                 }
             };
             sapi.createInstance(cloudapisvc.uuid, cOpts, function (err, _inst) {
@@ -111,30 +91,6 @@ function createCloudapiInstance(opts, callback) {
         }
         callback(err);
     });
-
-    function getNetworksAdminExternal(cb) {
-        var napi = sdcadm.napi;
-        var foundnets = {};
-
-        napi.listNetworks({
-            name: ['admin', 'external']
-        }, function listNetworksCb(listerr, nets) {
-            if (listerr) {
-                cb(new errors.SDCClientError(listerr, 'sapi'));
-                return;
-            }
-
-            if (!nets.length) {
-                cb(new Error('Couldn\'t find admin network in NAPI'));
-                return;
-            }
-            for (var i in nets) {
-                foundnets[nets[i].name] = nets[i];
-            }
-
-            cb(null, foundnets);
-        });
-    }
 }
 
 function Cloudapi() {}
diff --git a/package.json b/package.json
index ce3a171..8a05c11 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdcadm",
   "description": "Administer a SmartDataCenter (SDC) standup",
-  "version": "1.19.0",
+  "version": "1.19.1",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
