commit 30e495c10065431fb373a61fa0193f26eddda11f (refs/changes/45/3845/1)
Author: Orlando Vazquez <ovazquez@gmail.com>
Date:   2018-03-12T12:58:30-07:00 (1 year, 7 months ago)
    
    foo

diff --git a/lib/models/waitlist.js b/lib/models/waitlist.js
index 70ad6df..fce64df 100644
--- a/lib/models/waitlist.js
+++ b/lib/models/waitlist.js
@@ -467,9 +467,15 @@ ModelWaitlist.list = function (params, callback) {
     ModelWaitlist.query('(server_uuid=' + uuid + ')', queryOpts, callback);
 };
 
+/*
+ * Do a moray query and return an array of the response objects.
+ *
+ * @param filter {String}
+ * @param findOpts {Object}
+ * @param callback {Function} `function (err, responses)`
+ */
 
-
-ModelWaitlist.query = function (filter, findOpts, callback) {
+ModelWaitlist.queryWithMeta = function (filter, findOpts, callback) {
     assert.optionalObject(findOpts, 'findOpts');
 
     var self    = ModelWaitlist;
@@ -532,8 +538,8 @@ ModelWaitlist.query = function (filter, findOpts, callback) {
         oncecb(err, tickets);
     }
 
-    function onRecord(ticket) {
-        tickets.push(ticket.value);
+    function onRecord(ticketres) {
+        tickets.push(ticketres);
     }
 
     function processResults() {
@@ -543,29 +549,34 @@ ModelWaitlist.query = function (filter, findOpts, callback) {
     req.on('error', onError);
     req.on('record', onRecord);
     req.on('end', processResults);
-};
-
+});
 
 
-ModelWaitlist.getTicket = function (uuid, callback) {
-    var self = ModelWaitlist;
+/*
+ * Do a moray query and call callback with an array of the `value` property
+ * from the responses.
+ *
+ * @param filter {String}
+ * @param findOpts {Object}
+ * @param callback {Function} `function (err, values)`
+ */
 
-    ModelWaitlist.getMoray().getObject(
-        buckets.waitlist_tickets.name, uuid, onGet);
+ModelWaitlist.query = function (filter, findOpts, callback) {
+    assert.string(filter, 'filter');
+    assert.object(findOpts, 'findOpts');
 
-    function onGet(error, obj) {
-        if (error && VError.hasCauseWithName(error, 'ObjectNotFoundError')) {
-            self.log.error('Ticket %s not found in moray', uuid);
-            callback();
-            return;
-        } else if (error) {
-            self.log.error(error, 'Error fetching ticket from moray');
-            callback(error);
+    // Grab the response values.
+    self.queryWithMeta(filter, findOpts, function (err, responses) {
+        if (err) {
+            callback(err);
             return;
         }
+        var values = responses.map(function (r) {
+            return r.value;
+        });
 
-        callback(null, obj.value);
-    }
+        callback(null, values);
+    });
 };
 
 
