commit 67247492172ed861c1d6a2ec767ad2809fa2aa2c (refs/changes/26/5326/3)
Author: Rui Loura <rui@joyent.com>
Date:   2019-01-09T20:21:04+00:00 (9 months ago)
    
    TRITON-804 cnapi adminIp functions need to be factored out

diff --git a/lib/common.js b/lib/common.js
index e5620e7..645c12c 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var fs = require('fs');
@@ -86,33 +86,6 @@ function isString(obj) {
 }
 
 
-function getAdminIp(sysinfo) {
-    var interfaces;
-    var ip;
-    var admin_tag = 'admin';
-
-    if (sysinfo['Admin NIC Tag']) {
-        admin_tag = sysinfo['Admin NIC Tag'];
-    }
-
-    interfaces = sysinfo['Network Interfaces'];
-
-    for (var iface in interfaces) {
-        if (!interfaces.hasOwnProperty(iface)) {
-            continue;
-        }
-
-        var nic = interfaces[iface]['NIC Names'];
-        var isAdmin = nic.indexOf(admin_tag) !== -1;
-        if (isAdmin) {
-            ip = interfaces[iface]['ip4addr'];
-            return ip;
-        }
-    }
-
-    return ip;
-}
-
 // Take an array and sort it randomly.
 
 function randSort(array) {
@@ -131,7 +104,6 @@ function randSort(array) {
 
 module.exports = {
     genId: genId,
-    getAdminIp: getAdminIp,
     loadConfig: loadConfig,
     timestamp: timestamp,
     isString: isString,
diff --git a/lib/endpoints/allocations.js b/lib/endpoints/allocations.js
index a29d3d1..3ff27d7 100644
--- a/lib/endpoints/allocations.js
+++ b/lib/endpoints/allocations.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -14,10 +14,11 @@
  * space there is on a set of servers.
  */
 
-var assert  = require('assert-plus');
-var async   = require('async');
-var restify = require('restify');
-var zlib    = require('zlib');
+var assert    = require('assert-plus');
+var async     = require('async');
+var netconfig = require('triton-netconfig');
+var restify   = require('restify');
+var zlib      = require('zlib');
 
 var Designation   = require('../designation');
 var ModelServer   = require('../models/server');
@@ -276,7 +277,7 @@ Allocations.allocate = function handlerAllocationsAllocate(req, res, next) {
                 }
 
                 serverDetails.forEach(function (s) {
-                    var adminIp = common.getAdminIp(s.sysinfo);
+                    var adminIp = netconfig.adminIpFromSysinfo(s.sysinfo);
 
                     if (!adminIp || s.images === undefined ||
                         !s.images.length) {
diff --git a/lib/models/server.js b/lib/models/server.js
index 501a723..a6fa7e7 100644
--- a/lib/models/server.js
+++ b/lib/models/server.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -17,6 +17,7 @@
 var async = require('async');
 var assert = require('assert-plus');
 var dns = require('dns');
+var netconfig = require('triton-netconfig');
 var qs = require('qs');
 var restify = require('restify');
 var sprintf = require('sprintf').sprintf;
@@ -1883,17 +1884,12 @@ function (opts) {
             });
         },
         function getCnapiLocationFromSysinfo(wfcb) {
-            if (sysinfo.hasOwnProperty('CN Agent IP')) {
-                // Allow sysinfo to include an IP that we'll use to connect to
-                // instead of trying to fish the IP out of the networks.
-                serverAdminIp = sysinfo['CN Agent IP'];
-            } else {
-                serverAdminIp = common.getAdminIp(sysinfo);
-                if (!serverAdminIp) {
-                    wfcb(new VError('parsing server ip address in sendTaskReq '
-                        + '(No admin NICs detected.)'));
-                    return;
-                }
+            // TODO: need to fix TRITON-821 first
+            serverAdminIp = netconfig.adminIpFromSysinfo(sysinfo);
+            if (!serverAdminIp) {
+                wfcb(new VError('parsing server ip address in sendTaskReq '
+                    + '(No admin NICs detected.)'));
+                return;
             }
 
             if (sysinfo.hasOwnProperty('CN Agent Port')) {
@@ -2092,17 +2088,12 @@ ModelServer.prototype.sendRequest = function (opts, cb) {
             });
         },
         function getCnapiLocationFromSysinfo(wfcb) {
-            if (sysinfo.hasOwnProperty('CN Agent IP')) {
-                // Allow sysinfo to include an IP that we'll use to connect to
-                // instead of trying to fish the IP out of the networks.
-                serverAdminIp = sysinfo['CN Agent IP'];
-            } else {
-                serverAdminIp = common.getAdminIp(sysinfo);
-                if (!serverAdminIp) {
-                    wfcb(new VError('parsing server ip address in sendReq '
-                        + '(No admin NICs detected.)'));
-                    return;
-                }
+            // TODO: TRITON-821 must be done first
+            serverAdminIp = netconfig.adminIpFromSysinfo(sysinfo);
+            if (!serverAdminIp) {
+                wfcb(new VError('parsing server ip address in sendTaskReq '
+                    + '(No admin NICs detected.)'));
+                return;
             }
 
             if (sysinfo.hasOwnProperty('CN Agent Port')) {
diff --git a/package.json b/package.json
index dbdddf4..073da07 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cnapi",
   "description": "SmartDataCenter Compute Node API",
-  "version": "1.18.2",
+  "version": "1.18.3",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
@@ -26,6 +26,7 @@
     "sprintf": "0.1.5",
     "trace-event": "1.3.0",
     "triton-metrics": "1.0.0",
+    "triton-netconfig": "1.1.0",
     "vasync": "1.6.4",
     "verror": "1.9.0",
     "wf-client": "0.2.1",
