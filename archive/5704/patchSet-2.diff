From 854acd65cb9b484948a2ddc55b14856f1e8a9518 Mon Sep 17 00:00:00 2001
From: Marsell Kukuljevic <marsell@joyent.com>
Date: Mon, 4 Mar 2019 21:10:26 +0100
Subject: [PATCH] TRITON-1282 test-vmapi failing since TRITON-962:
 initialize_non_flexible_disk_vm "AssertionError: job.job_uuid (uuid) is
 required"

---
 test/vms.disks.test.js | 25 +++++++++++++++++--------
 1 file changed, 17 insertions(+), 8 deletions(-)

diff --git a/test/vms.disks.test.js b/test/vms.disks.test.js
index 6587f2a..296fac3 100644
--- a/test/vms.disks.test.js
+++ b/test/vms.disks.test.js
@@ -26,6 +26,7 @@ var PCI_SLOTS = [];
 var CUSTOMER_UUID = common.config.ufdsAdminUuid;
 var DISK_UUID = '2de262f8-3aa1-11e9-b79e-d712c1fb6cee';
 var VM_ALIAS_BASE = 'vmapitest-disk';
+var IMAGE_NAME = 'ubuntu-certified-16.04';
 var VM_OPTS = {
     autoboot: false,
     owner_uuid: CUSTOMER_UUID,
@@ -34,8 +35,8 @@ var VM_OPTS = {
     vcpus: 1,
     cpu_cap: 100,
     ram: 1024,
-    disks: [ { image_uuid: '81c0ef69-e9d7-4e93-a15b-efd7ea9c9ee8' } ],
-    networks: [],
+    disks: [],     // filled in later
+    networks: [],  // filled in later
     creator_uuid: CUSTOMER_UUID,
     tags: {
         'triton.placement.exclude_virtual_servers': true
@@ -108,18 +109,26 @@ function deleteVm(t) {
 
 
 exports.setup = function setup(t) {
-    common.setUp(function setUpCb(err, _client) {
-        assert.ifError(err);
+    common.setUp(function setUpCb(setupErr, _client) {
+        assert.ifError(setupErr);
         assert.ok(_client, 'restify client');
         CLIENT = _client;
 
-        CLIENT.napi.get('/networks', function getCb(err2, req, res, networks) {
-            common.ifError(t, err2, 'err2');
-            var admin = common.extractAdminAndExternalNetwork(networks).admin;
+        CLIENT.napi.get('/networks', function getNet(err, req, res, networks) {
+            common.ifError(t, err, 'err');
 
+            var admin = common.extractAdminAndExternalNetwork(networks).admin;
             VM_OPTS.networks.push({ uuid: admin.uuid });
 
-            t.done();
+            CLIENT.imgapi.get('/images?name=' + IMAGE_NAME + '&state=active',
+            function getImg(err2, req2, res2, imgs) {
+                common.ifError(t, err2, 'err2');
+                t.ok(imgs.length, 'imgs.length');
+
+                VM_OPTS.disks.push({ image_uuid: imgs[0].uuid });
+
+                t.done();
+            });
         });
     });
 };
-- 
2.21.0

