{"project":"joyent/moray","branch":"master","id":"I611ebd0fa681e3c8e1b0550e0a31c192df2ccc82","number":"3550","subject":"MORAY-418 moray should queue requests when new PG connections fail MORAY-339 moray needs to use exponential backoff when connection to postgresql MORAY-294 suspect moray doesn\u0027t honor its connection limit properly MORAY-427 moray queuing needs work","owner":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"url":"https://cr.joyent.us/3550","commitMessage":"MORAY-418 moray should queue requests when new PG connections fail\nMORAY-339 moray needs to use exponential backoff when connection to postgresql\nMORAY-294 suspect moray doesn\u0027t honor its connection limit properly\nMORAY-427 moray queuing needs work\n","createdOn":1520374026,"lastUpdated":1523436201,"open":true,"status":"NEW","comments":[{"timestamp":1520374026,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Uploaded patch set 1."},{"timestamp":1520476045,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523022547,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 1:\n\n(26 comments)\n\nA lot of this might come from my inexperience with cueball, so please bear with me a little!\n\nI should also note that I tested this image as part of MORAY-464 and it resolved my issue in that case."},{"timestamp":1523039368,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Patch Set 1:\n\n(19 comments)"},{"timestamp":1523039521,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Uploaded patch set 2."},{"timestamp":1523039572,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523049738,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Patch Set 2:\n\n(5 comments)"},{"timestamp":1523050437,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Patch Set 2:\n\n(3 comments)"},{"timestamp":1523050460,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Uploaded patch set 3."},{"timestamp":1523050505,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523276762,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 3:\n\n(6 comments)"},{"timestamp":1523298966,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Patch Set 3:\n\n(2 comments)"},{"timestamp":1523298969,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Uploaded patch set 4."},{"timestamp":1523299020,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523301758,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Uploaded patch set 5."},{"timestamp":1523301804,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1523436201,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Patch Set 5: Code-Review+1\n\n(2 comments)\n\nThanks for putting this together! I think it would be a good idea to have Cody back on this change request (I can see he had some comments on the old one), perhaps for both CR and IA."},{"timestamp":1553157963,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Removed the following votes:\n\n* Code-Review+1 by Richard Bradley \u003crichard.bradley@joyent.com\u003e\n"}],"currentPatchSet":{"number":"5","revision":"611ebd0fa681e3c8e1b0550e0a31c192df2ccc82","parents":["7b8c682b09ede49af53fb54fa9f40a1c1c907e5f"],"ref":"refs/changes/50/3550/5","uploader":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"createdOn":1523301758,"author":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1523301804,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"lib/manatee.js","type":"MODIFIED","insertions":43,"deletions":-28},{"file":"lib/pg.js","type":"MODIFIED","insertions":227,"deletions":-109},{"file":"lib/standalone.js","type":"MODIFIED","insertions":20,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":292,"sizeDeletions":-143},"patchSets":[{"number":"1","revision":"b618cd52bd7249d5ad5b924e4646368f2cda70ef","parents":["7b8c682b09ede49af53fb54fa9f40a1c1c907e5f"],"ref":"refs/changes/50/3550/1","uploader":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"createdOn":1520374026,"author":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1520476045,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/manatee.js","line":47,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I\u0027m not sure this does the same thing as before, but I haven\u0027t been able to dig into why yet. Previously, if a connection had been destroyed and not yet recreated, all of our counters would be 0. With this change in place, I see the \"available\" counter at 1 in this case.\n\nI\u0027d be happy to work through the example I have, if it helps!"},{"file":"lib/manatee.js","line":47,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I would love to see the example you have."},{"file":"lib/manatee.js","line":47,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Sure thing. I\u0027ll see how\u0027s best to get this written down."},{"file":"lib/manatee.js","line":47,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I\u0027m having a hard time reproducing this one, unfortunately.\n\nIn any case, I think the counter that we\u0027ve got here from cueball will be fine. Even if the connection can\u0027t be made, I guess the connection is still technically open. There\u0027s also a good chance that between the connection attempts that cueball makes that there\u0027s 0 connections, but I haven\u0027t observed that.\n\nUltimately, so long as they\u0027re not showing as \"available\" (which they don\u0027t), then I\u0027d say this is fine."},{"file":"lib/manatee.js","line":257,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"This is also explained in the comment below, so it doesn\u0027t look like we need this here."},{"file":"lib/manatee.js","line":257,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Done"},{"file":"lib/manatee.js","line":259,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I don\u0027t think this log is required any more, at least if we\u0027re not calling \"previous.close()\"."},{"file":"lib/manatee.js","line":259,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Done"},{"file":"lib/manatee.js","line":277,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I don\u0027t think it\u0027s worth keeping the old MORAY-225 comment here. I also tend to work on the advice I got from JoshC previously that is to not make use of ticket IDs in comments. Now that we have commit message formalities in linking to tickets, that tends to show the history well enough."},{"file":"lib/manatee.js","line":277,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"thanks for the feedback, next changeset includes a rewrite of this comment."},{"file":"lib/manatee.js","line":278,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Now that we\u0027re using cueball, do we need to do this updateBackend step if the primary hasn\u0027t actually changed, or will cueball attempt to re-create this connection for us?\n\nBasically, if self._database.url \u003d\u003d\u003d topology[0].url, do we need to updateBackend at all?"},{"file":"lib/manatee.js","line":278,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"the update does emit some messages to cueball. \n\nI think I\u0027d need to do some renewed failover testing before changing this as you suggest. I\u0027ll try to get to that."},{"file":"lib/manatee.js","line":283,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Using the old \"previous\" variable name here made this a little confusing for me to read. What I think this line is doing is just confirming that we already have a database and resolver object created, and if so re-using them. Does that make sense?\n\nI think \"previous\" made sense before (at least on L256) as it read well in the context of always closing the old connection. Can we just use self._database here instead?"},{"file":"lib/manatee.js","line":283,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"yep. agree that is is confusing. thanks!"},{"file":"lib/pg.js","line":96,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Why is PGClient now an EventEmitter? Is it because of the close event later?"},{"file":"lib/pg.js","line":96,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"exactly. it is required by the cueball API (for connect and close):\n\nhttps://joyent.github.io/node-cueball/#code_close_code_required"},{"file":"lib/pg.js","line":154,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"In node-pooling, we set ok to true if ok \u003d\u003d\u003d undefined after pgAssert (https://github.com/mcavage/node-pooling/blob/4b41e369d2292129fad26a7695027cb1fa21eaa5/lib/pool.js#L462). This confuses me, but I think we can get undefined back from pgAssert if we blow one of its assertions, but only because we\u0027re in a try/catch.\n\nWhat I\u0027m trying to get at is: are we sure that ok will always either be true or false after this try/catch? Why was the `ok \u003d\u003d\u003d undefined` check required previously, and now not needed?"},{"file":"lib/pg.js","line":154,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I\u0027m skeptical that ok can ever be undefined; and if it *is* that means the pgAssert() did something strange ? but the node-pooling code assumes that \"something strange\" is OK ?\n\nif I add the check for undefined, should I assume that undefined means that we consider it true ? I\u0027m not honestly sure what to do here.\n\nMy understanding was that either execution would proceed through the assert (where the conditional at the end would set it appropriately), or blow up and set ok in the catch-block."},{"file":"lib/pg.js","line":154,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Yes, this was really confusing in node-pooling. I _think_ we can assign ok to undefined if pgAssert blows an assertion (at least that\u0027s how it looks if I do it in a repl), but you\u0027re right: why would this be \"ok\"?\n\nFrom what I can tell what we have now is fine, but I just wanted to bring it up in case you were able to decipher the node-pooling way of doing things."},{"file":"lib/pg.js","line":161,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Is there a reason for this temporary re-assignment? We seem to do the following patter elsewhere:\n\n    this.handle.close();\n    this.handle \u003d null;\n\nWould that work here, too?"},{"file":"lib/pg.js","line":161,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I think I habitually do it this way in case of weird side-effects in the .close() call (to avoid calling the close() twice?)\n\nanyhow, will fix."},{"file":"lib/pg.js","line":186,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"A+ best block comment style."},{"file":"lib/pg.js","line":186,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Done"},{"file":"lib/pg.js","line":216,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Nit: Any particular reason for moving this? It looks the same, but it\u0027s nice to have gerrit confirm that there are in fact no changes (at least so long as the move isn\u0027t required)."},{"file":"lib/pg.js","line":216,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I think maybe this got moved in one of several rebases. will move it back. :-)"},{"file":"lib/pg.js","line":421,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I think I saw this come up in the previous CR, and I understand that PGClient.close() was only called from pgDestroy (which is what we passed to node-pooling). \n\nIt seems like other pieces (_database, _resolver) use the \"close\" naming convention. It\u0027s also a little surprising that calling the \"destroy\" method would see a \"close\" event get emitted. I\u0027m still working my way through this, but is there a specific reason for the change?"},{"file":"lib/pg.js","line":421,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"this is an attempt to conform to the cueball API (it requires PGClient to have a \"destroy\" method; which emits \"close\")."},{"file":"lib/pg.js","line":430,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Is cueball watching for this event, hence PGClient now being an EventEmitter?"},{"file":"lib/pg.js","line":430,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"exactly."},{"file":"lib/pg.js","line":474,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I think either jsstyle or jslint would usually complain that this isn\u0027t parenthesised."},{"file":"lib/pg.js","line":474,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Done"},{"file":"lib/pg.js","line":477,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Nit: This comment would have been helpful before list() at L469. Perhaps Instead of the resolver comment we have on lib/manatee.js, we should document the single backend thing on the PGResolver declaration above?"},{"file":"lib/pg.js","line":477,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Done"},{"file":"lib/pg.js","line":486,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"This is interesting. Is this a normal thing to do in cueball? Given that our postgres instances are (or should be) unique anyway, do we need to create a UUID here, or can we use their connection string as the key?"},{"file":"lib/pg.js","line":486,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I think I did it this way to distinguish all updates from previous updates. I\u0027m not sure that\u0027s actually useful or not. Updates are only supposed to happen during topology changes."},{"file":"lib/pg.js","line":486,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Good point, I can agree with that. I wonder if we\u0027d lose any information somehow by not encoding the PG URL into the key, but I don\u0027t see this as major. Perhaps worth pinging Alex to see if he has any pointers on keying backends, and if it\u0027s useful at all to have them be useful to humans?"},{"file":"lib/pg.js","line":498,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Nit: I think this reads better when we have the variable we\u0027re asserting first, and the vale we expect second, for example:\n\n    assert.equal(_pg._moray_txn, false, \u0027xxx\u0027);\n\nI see that this has come from the release() method, but I\u0027m not sure of the implications of moving it. Would you be able to help me understand the move?"},{"file":"lib/pg.js","line":498,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"agreed!"},{"file":"lib/pg.js","line":511,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"I think this sentence could be reworded\n\n\u003e ... interface expects does an ..."},{"file":"lib/pg.js","line":511,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"\"expects does\" makes no sense. thanks."},{"file":"lib/pg.js","line":519,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"It looks like previously an err on the callback was expected, but here we want an explicit call to close or release.\n\nThis looks like we could call handle.close() twice; once here and once on end. Do you know if that\u0027s the case? If we see an error event, do we also see the end event? Should we set ok to false in this error event handler instead?"},{"file":"lib/pg.js","line":519,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"this looks sketchy. setting ok to false seems to be the intent."},{"file":"lib/pg.js","line":519,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"actually, it looks like if we get an error on the req, we don\u0027t necessarily get end. so that is why this is like this, I think."},{"file":"lib/pg.js","line":519,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"That makes sense. I looked into this recently with some of my MANATEE-380 work, and I wasn\u0027t sure if it was actually a problem to call close() twice on the same client (I don\u0027t think it is, but I couldn\u0027t convince myself that it would get called twice in the first place).\n\nI wonder if some logging would help if this were ever a problem in the future? A lot of our components do these \"health check\" log messages that can be a pain, but I think if they\u0027re trace of debug level with a good way of identifying them then perhaps that would be good. Not major."},{"file":"lib/pg.js","line":519,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Adding some trace-level stuff here seems like a good idea."},{"file":"lib/pg.js","line":547,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Previously we had this instantiation after the base node-postgres client emitted its \"connect\" event. Is it OK to change this, as we\u0027ve done here?"},{"file":"lib/pg.js","line":547,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I\u0027m trying to use the pgc._handleClientError() for all of the errors, so I need pgc to be bound.\n\nthe construction-path for connections is the largest piece of code that\u0027s changed for cueball.\n\nthe constructor used by cueball is supposed to return the PGClient instance. it may return without being connected, this is a change in the API from how things work with node-pooling.\n\nI can try to clean up the error path, I think."},{"file":"lib/pg.js","line":547,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I think that to conform to the cueball API:\nhttps://joyent.github.io/node-cueball/#code_constructor_backend_code\n\nwe *must* return an object obeying the protocol, so we need a PGClient no matter what. I think making this instance here makes sense -- once we\u0027re called we\u0027ve got to have one."},{"file":"lib/pg.js","line":588,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Could you explain why we pass this function here?"},{"file":"lib/pg.js","line":588,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"I\u0027m not sure I follow. I replaced client.removeAllListeners(\u0027error\u0027) with something more specific. I thought this was correct.\n\nI feel like I must be missing something."},{"file":"lib/pg.js","line":588,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Perhaps I\u0027m missing something, too.\n\nMy understanding here is that we\u0027ve successfully connected so are removing our listeners (I understand that PGClient listens instead). When we remove these listeners it seems that now we\u0027re passing the onError function, which would get called on completion of the listener removal and mean we log the message \"unable to create PG client\", but that\u0027s not my understanding of what\u0027s happened."},{"file":"lib/pg.js","line":588,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"the second arg to removeListener() isn\u0027t a callback afaik, it is the listener to remove.\n\nFrom the docs \"Removes the specified listener from the listener array for the event named eventName.\"\n\nreally, I think that removeAllListeners(...) would be fine, but I was trying to be more specific.\n\nBut that said, I think that removeAllListeners() is the pattern used elsewhere in this code, so I\u0027ll change it to that."},{"file":"lib/pg.js","line":588,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Sorry about this, you\u0027re right! This is indeed the listener to remove, not the callback that will be fired when it is removed.\n\nBeing specific here seems like a good idea. It\u0027s not a pattern I\u0027ve seen much in all honesty, but I have no preference either way."},{"file":"lib/pg.js","line":699,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Could we perhaps group these dummy values? Also, only defaultPort seems to be the only one commented as a dummy value, but domain looks to be dummy, too.\n\nMaybe we could call the dummy values out explicitly in the comment above or something?"},{"file":"lib/pg.js","line":699,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"they are grouped, if I understand you. But you wouldn\u0027t know that since they aren\u0027t commented as dummy. :-)"},{"file":"lib/pg.js","line":772,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Could we name this \"handle\"?"},{"file":"lib/pg.js","line":772,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Done"},{"file":"lib/pg.js","line":779,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Looks like we\u0027re missing a \u0027)\u0027."},{"file":"lib/pg.js","line":779,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"Done"},{"file":"lib/pg.js","line":807,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"Is this required? I can\u0027t find the consumer of this, and it looks like getPoolStats below reaches into this.pool anyway."},{"file":"lib/standalone.js","line":198,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"What is the difference between \"resolver.stop()\" and \"resolver.stopResolver()\" (from lib/manatee.js)?"},{"file":"lib/standalone.js","line":198,"reviewer":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"message":"this appears to be a typo. The function is name stopResolver() but the method is named stop().\n\nThanks!"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"lib/manatee.js","type":"MODIFIED","insertions":46,"deletions":-15},{"file":"lib/pg.js","type":"MODIFIED","insertions":228,"deletions":-119},{"file":"lib/standalone.js","type":"MODIFIED","insertions":20,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":296,"sizeDeletions":-140},{"number":"2","revision":"ab2539a049926f1878cc999b78726aa270326dcd","parents":["7b8c682b09ede49af53fb54fa9f40a1c1c907e5f"],"ref":"refs/changes/50/3550/2","uploader":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"createdOn":1523039521,"author":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1523039572,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"lib/manatee.js","type":"MODIFIED","insertions":43,"deletions":-28},{"file":"lib/pg.js","type":"MODIFIED","insertions":218,"deletions":-110},{"file":"lib/standalone.js","type":"MODIFIED","insertions":20,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":283,"sizeDeletions":-144},{"number":"3","revision":"93e0dfa6941491ce11a7aaff008164aefdacf314","parents":["7b8c682b09ede49af53fb54fa9f40a1c1c907e5f"],"ref":"refs/changes/50/3550/3","uploader":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"createdOn":1523050460,"author":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1523050505,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/manatee.js","line":260,"reviewer":{"name":"Richard Bradley","email":"richard.bradley@joyent.com","username":"chudley"},"message":"\u003e because because ...\n\nof the wonderful things he does?\n\n(sorry)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"lib/manatee.js","type":"MODIFIED","insertions":43,"deletions":-28},{"file":"lib/pg.js","type":"MODIFIED","insertions":219,"deletions":-110},{"file":"lib/standalone.js","type":"MODIFIED","insertions":20,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":284,"sizeDeletions":-144},{"number":"4","revision":"ab9741fbf8ae97a37e82d3e1711317f9eca33803","parents":["7b8c682b09ede49af53fb54fa9f40a1c1c907e5f"],"ref":"refs/changes/50/3550/4","uploader":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"createdOn":1523298969,"author":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1523299020,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"lib/manatee.js","type":"MODIFIED","insertions":43,"deletions":-28},{"file":"lib/pg.js","type":"MODIFIED","insertions":221,"deletions":-109},{"file":"lib/standalone.js","type":"MODIFIED","insertions":20,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":286,"sizeDeletions":-143},{"number":"5","revision":"611ebd0fa681e3c8e1b0550e0a31c192df2ccc82","parents":["7b8c682b09ede49af53fb54fa9f40a1c1c907e5f"],"ref":"refs/changes/50/3550/5","uploader":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"createdOn":1523301758,"author":{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1523301804,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"lib/manatee.js","type":"MODIFIED","insertions":43,"deletions":-28},{"file":"lib/pg.js","type":"MODIFIED","insertions":227,"deletions":-109},{"file":"lib/standalone.js","type":"MODIFIED","insertions":20,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":292,"sizeDeletions":-143}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Tim Kordas","email":"tim.kordas@joyent.com","username":"timkordas"}]}