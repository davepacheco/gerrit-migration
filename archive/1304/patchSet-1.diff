From a66121b660ad1ddbc4a71d83505b5bd69b783f8e Mon Sep 17 00:00:00 2001
From: Richard Kiene <richard.kiene@joyent.com>
Date: Fri, 20 Jan 2017 22:29:30 +0000
Subject: [PATCH] CMON-36 Add 'cmon-agent' target

---
 .gitmodules                            |   2 +-
 Makefile                               | 117 ++++++++++++++-
 configure                              |  35 +----
 package.json                           |   6 +-
 targets.json.in                        | 188 +++++++++----------------
 tools/jenkins/sdc-jenkins/package.json |   4 +-
 tools/prep_dataset_in_jpc.sh           |   6 +-
 tools/purge-mg-builds                  |  40 ++----
 8 files changed, 199 insertions(+), 199 deletions(-)

diff --git a/.gitmodules b/.gitmodules
index 51cf23d..c6774a2 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -1,3 +1,3 @@
 [submodule "deps/restdown"]
 	path = deps/restdown
-	url = https://github.com/trentm/restdown.git
+	url = git://github.com/trentm/restdown.git
diff --git a/Makefile b/Makefile
index c2a37a6..0541afd 100644
--- a/Makefile
+++ b/Makefile
@@ -633,6 +633,46 @@ clean_nat:
 	(cd build/sdc-nat && gmake clean)
 
 
+#---- HOSTVOLUME
+
+_hostvolume_stamp=$(SDC_HOSTVOLUME_BRANCH)-$(TIMESTAMP)-g$(SDC_HOSTVOLUME_SHA)
+HOSTVOLUME_BITS=$(BITS_DIR)/hostvolume/hostvolume-pkg-$(_hostvolume_stamp).tar.bz2
+HOSTVOLUME_IMAGE_BIT=$(BITS_DIR)/hostvolume/hostvolume-zfs-$(_hostvolume_stamp).zfs.gz
+HOSTVOLUME_MANIFEST_BIT=$(BITS_DIR)/hostvolume/hostvolume-zfs-$(_hostvolume_stamp).imgmanifest
+
+.PHONY: hostvolume
+hostvolume: $(HOSTVOLUME_BITS) hostvolume_image
+
+$(HOSTVOLUME_BITS): build/sdc-hostvolume
+	@echo "# Build hostvolume: branch $(SDC_HOSTVOLUME_BRANCH), sha $(SDC_HOSTVOLUME_SHA), time `date -u +%Y%m%dT%H%M%SZ`"
+	mkdir -p $(BITS_DIR)
+	(cd build/sdc-hostvolume && NPM_CONFIG_CACHE=$(MG_CACHE_DIR)/npm TIMESTAMP=$(TIMESTAMP) BITS_DIR=$(BITS_DIR) gmake release test publish)
+	@echo "# Created hostvolume bits (time `date -u +%Y%m%dT%H%M%SZ`):"
+	@ls -l $(HOSTVOLUME_BITS)
+	@echo ""
+
+.PHONY: hostvolume_image
+hostvolume_image: $(HOSTVOLUME_IMAGE_BIT)
+
+$(HOSTVOLUME_IMAGE_BIT): $(HOSTVOLUME_BITS)
+	@echo "# Build hostvolume_image: branch $(SDC_HOSTVOLUME_BRANCH), sha $(SDC_HOSTVOLUME_SHA), time `date -u +%Y%m%dT%H%M%SZ`"
+	./tools/prep_dataset_in_jpc.sh -i "$(HOSTVOLUME_IMAGE_UUID)" -t $(HOSTVOLUME_BITS) \
+		-o "$(HOSTVOLUME_IMAGE_BIT)" -p $(HOSTVOLUME_PKGSRC) -O "$(MG_OUT_PATH)" \
+		-t $(HOSTVOLUME_EXTRA_TARBALLS) -n $(HOSTVOLUME_IMAGE_NAME) \
+		-v $(_hostvolume_stamp) -d $(HOSTVOLUME_IMAGE_DESCRIPTION)
+	@echo "# Created hostvolume image (time `date -u +%Y%m%dT%H%M%SZ`):"
+	@ls -l $$(dirname $(HOSTVOLUME_IMAGE_BIT))
+	@echo ""
+
+hostvolume_publish_image: $(HOSTVOLUME_IMAGE_BIT)
+	@echo "# Publish hostvolume image to SDC Updates repo."
+	$(UPDATES_IMGADM) import -ddd -m $(HOSTVOLUME_MANIFEST_BIT) -f $(HOSTVOLUME_IMAGE_BIT)
+
+clean_hostvolume:
+	$(RM) -rf $(BITS_DIR)/hostvolume
+	(cd build/sdc-hostvolume && gmake clean)
+
+
 #---- DOCKER
 
 _docker_stamp=$(SDC_DOCKER_BRANCH)-$(TIMESTAMP)-g$(SDC_DOCKER_SHA)
@@ -879,6 +919,72 @@ clean_workflow:
 	(cd build/sdc-workflow && gmake clean)
 
 
+#---- CMON
+
+_cmon_stamp=$(TRITON_CMON_BRANCH)-$(TIMESTAMP)-g$(TRITON_CMON_SHA)
+CMON_BITS=$(BITS_DIR)/cmon/cmon-pkg-$(_cmon_stamp).tar.bz2
+CMON_IMAGE_BIT=$(BITS_DIR)/cmon/cmon-zfs-$(_cmon_stamp).zfs.gz
+CMON_MANIFEST_BIT=$(BITS_DIR)/cmon/cmon-zfs-$(_cmon_stamp).imgmanifest
+
+.PHONY: cmon
+cmon: $(CMON_BITS) cmon_image
+
+$(CMON_BITS): build/triton-cmon
+	@echo "# Build cmon: branch $(TRITON_CMON_BRANCH), sha $(TRITON_CMON_SHA), time `date -u +%Y%m%dT%H%M%SZ`"
+	mkdir -p $(BITS_DIR)
+	(cd build/triton-cmon && NPM_CONFIG_CACHE=$(MG_CACHE_DIR)/npm TIMESTAMP=$(TIMESTAMP) BITS_DIR=$(BITS_DIR) gmake release publish)
+	@echo "# Created cmon bits (time `date -u +%Y%m%dT%H%M%SZ`):"
+	@ls -l $(CMON_BITS)
+	@echo ""
+
+.PHONY: cmon_image
+cmon_image: $(CMON_IMAGE_BIT)
+
+$(CMON_IMAGE_BIT): $(CMON_BITS)
+	@echo "# Build cmon_image: branch $(TRITON_CMON_BRANCH), sha $(TRITON_CMON_SHA), time `date -u +%Y%m%dT%H%M%SZ`"
+	./tools/prep_dataset_in_jpc.sh -i "$(CMON_IMAGE_UUID)" -t $(CMON_BITS) \
+		-o "$(CMON_IMAGE_BIT)" -p $(CMON_PKGSRC) -O "$(MG_OUT_PATH)" \
+		-t $(CMON_EXTRA_TARBALLS) -n $(CMON_IMAGE_NAME) \
+		-v $(_cmon_stamp) -d $(CMON_IMAGE_DESCRIPTION)
+	@echo "# Created cmon image (time `date -u +%Y%m%dT%H%M%SZ`):"
+	@ls -l $$(dirname $(CMON_IMAGE_BIT))
+	@echo ""
+
+cmon_publish_image: $(CMON_IMAGE_BIT)
+	@echo "# Publish cmon image to Triton Updates repo."
+	$(UPDATES_IMGADM) import -ddd -m $(CMON_MANIFEST_BIT) -f $(CMON_IMAGE_BIT)
+
+clean_cmon:
+	$(RM) -rf $(BITS_DIR)/cmon
+	(cd build/triton-cmon && gmake clean)
+
+
+#---- cmon agent
+
+_cmon_agent_stamp=$(TRITON_CMON_AGENT_BRANCH)-$(TIMESTAMP)-g$(TRITON_CMON_AGENT_SHA)
+CMON_AGENT_BIT=$(BITS_DIR)/cmon-agent/cmon-agent-$(_cmon_agent_stamp).tgz
+CMON_AGENT_MANIFEST_BIT=$(BITS_DIR)/cmon-agent/cmon-agent-$(_cmon_agent_stamp).manifest
+
+.PHONY: cmon-agent
+cmon-agent: $(CMON_AGENT_BIT)
+
+$(CMON_AGENT_BIT): build/triton-cmon-agent
+	@echo "# Build cmon-agent: branch $(TRITON_CMON_AGENT_BRANCH), sha $(TRITON_CMON_AGENT_SHA), time `date -u +%Y%m%dT%H%M%SZ`"
+	mkdir -p $(BITS_DIR)
+	(cd build/triton-cmon-agent && NPM_CONFIG_CACHE=$(MG_CACHE_DIR)/npm TIMESTAMP=$(TIMESTAMP) BITS_DIR=$(BITS_DIR) gmake release publish)
+	@echo "# Created cmon-agent bits (time `date -u +%Y%m%dT%H%M%SZ`):"
+	@ls -l $(CMON_AGENT_BIT) $(CMON_AGENT_MANIFEST_BIT)
+	@echo ""
+
+cmon-agent_publish_image: $(CMON_AGENT_BIT)
+	@echo "# Publish cmon-agent image to SDC Updates repo."
+	$(UPDATES_IMGADM) import -ddd -m $(CMON_AGENT_MANIFEST_BIT) -f $(CMON_AGENT_BIT)
+
+clean_cmon_agent:
+	$(RM) -rf $(BITS_DIR)/cmon-agent
+	(cd build/sdc-cmon-agent && gmake clean)
+
+
 #---- VMAPI
 
 _vmapi_stamp=$(SDC_VMAPI_BRANCH)-$(TIMESTAMP)-g$(SDC_VMAPI_SHA)
@@ -2291,7 +2397,11 @@ clean_mako:
 
 #---- sdcadm
 
+ifeq ($(TRY_BRANCH),)
 _sdcadm_stamp=$(SDCADM_BRANCH)-$(TIMESTAMP)-g$(SDCADM_SHA)
+else
+_sdcadm_stamp=$(TRY_BRANCH)-$(TIMESTAMP)-g$(SDCADM_SHA)
+endif
 SDCADM_PKG_BIT=$(BITS_DIR)/sdcadm/sdcadm-$(_sdcadm_stamp).sh
 SDCADM_MANIFEST_BIT=$(BITS_DIR)/sdcadm/sdcadm-$(_sdcadm_stamp).imgmanifest
 SDCADM_BITS=$(SDCADM_PKG_BIT) $(SDCADM_MANIFEST_BIT)
@@ -2532,12 +2642,7 @@ BOOT_OUTPUT=$(USB_BITS_DIR)/boot$(HEADNODE_SUFFIX)-$(_headnode_stamp).tgz
 .PHONY: cleanimgcruft
 cleanimgcruft:
 	$(RM) -vf /tmp/*4gb.img
-	for dev in $(shell lofiadm | cut -d ' ' -f1 | grep -v "^Block"); do  \
-		mount | grep "on $${dev}" | cut -d' ' -f1 | while read mntpath; do \
-			umount $${mntpath}; \
-		done; \
-		pfexec lofiadm -d $${dev}; \
-	done
+	for dev in $(shell lofiadm | cut -d ' ' -f1 | grep -v "^Block"); do pfexec lofiadm -d $${dev}; done
 
 .PHONY: boot
 boot: $(BOOT_OUTPUT)
diff --git a/configure b/configure
index 23a5258..6e8c387 100755
--- a/configure
+++ b/configure
@@ -546,9 +546,6 @@ function print_help() {
     echo "  -O PATH      Alternate Manta path for 'make <target>_upload_manta'."
     echo "               The default is '\${MANTA_USER}/stor/builds'."
     echo "  -j           Configure this workspace to build Joyent products."
-    echo "  -P           Ignore the 'build_platform' check that is meant to ensure"
-    echo "               that a component is built on the exact platform version"
-    echo "               specified for it in 'targets.json' for release."
     exit 0
 }
 
@@ -565,25 +562,6 @@ function get_target_repos() {
     done
 }
 
-# Ensure that we are building on the specified build_platform in targets.json.
-function ensure_build_platform() {
-    local target=$1
-    local build_platform
-    local errmsg
-    build_platform=$(cat targets.json | $JSON $target.build_platform)
-    if [[ -n "$build_platform" ]]; then
-        curr_platform=$(uname -v | cut -d_ -f2)
-        if [[ "$curr_platform" != "$build_platform" ]]; then
-            errmsg="current platform, $curr_platform, does not match the expected '$target.build_platform', $build_platform"
-            if [[ $IGNORE_BUILD_PLATFORM_CHECK == "yes" ]]; then
-                echo "warning: $errmsg (ignoring, per '-P' option)"
-            else
-                fatal "$errmsg"
-            fi
-        fi
-    fi
-}
-
 function get_pkgsrc() {
   if [[ -d ${ROOT}/build/usb-headnode ]]; then
     echo "# get pkgsrc packages for build/usb-headnode zones (to build/pkgsrc)"
@@ -664,14 +642,13 @@ function get_pkgsrc() {
 TARGET=
 REGENERATE='false'
 MG_NODE=$(which node) || fatal "node binary not found on PATH"
-IGNORE_BUILD_PLATFORM_CHECK=no
 
 trap 'errexit $? $LINENO' EXIT
 
 if [[ "$1" == "--help" ]]; then
   print_help
 fi
-while getopts "b:B:d:D:O:hrft:c:jJ:P" opt; do
+while getopts "b:B:d:D:O:hrft:c:jJ:" opt; do
     case "$opt" in
         b) BRANCH=$OPTARG ;;
         B) TRY_BRANCH=$OPTARG ;;
@@ -686,7 +663,6 @@ while getopts "b:B:d:D:O:hrft:c:jJ:P" opt; do
         O) MG_OUT_PATH=${OPTARG} ;;
         j) JOYENT_BUILD=true ;;
         J) JOYENT_DEP_PATH=${OPTARG} ;;
-        P) IGNORE_BUILD_PLATFORM_CHECK=yes ;;
         ?) fatal "unknown option: $opt" ;;
     esac
 done
@@ -700,10 +676,9 @@ bash < targets.json.in | json > targets.json
 
 # Pre-condition: must have node >=0.10 first on path (see RELENG-266).
 echo "Ensure have a 'node' >= v0.10."
-NODE_MAJOR_VERSION=$($MG_NODE --version | cut -c2- | awk 'BEGIN{ FS="." } { print $1 }')
-NODE_MINOR_VERSION=$($MG_NODE --version | awk 'BEGIN{ FS="." } { print $2 }')
-if [[ $NODE_MAJOR_VERSION -lt 1 && $NODE_MINOR_VERSION -lt 10 ]]; then
-    fatal "Incorrect node version, '${NODE_MAJOR_VERSION}.${NODE_MINOR_VERSION}'. MG needs a node v0.10 or later on your PATH."
+NODE_VERSION=$($MG_NODE --version | awk 'BEGIN{ FS="." } { print $2 }')
+if [[ $NODE_VERSION -lt 10 ]]; then
+    fatal "Incorrect node version, '${NODE_VERSION}'. MG needs a node v0.10 or later on your PATH."
 fi
 JSON="$MG_NODE $ROOT/tools/json"
 
@@ -739,7 +714,6 @@ if [[ ! -z "$TARGET" ]]; then
     if [[ -z "$(cat targets.json | $JSON $TARGET)" ]]; then
         fatal "Unknown target: $TARGET"
     fi
-    ensure_build_platform $TARGET
     get_target_repos $TARGET
     for dep in `cat targets.json | $JSON $TARGET.deps | $JSON -a`; do
         if [[ -n "$(echo $dep | egrep '^[^/]+/[^/]+$' || true)" ]]; then
@@ -754,7 +728,6 @@ if [[ ! -z "$TARGET" ]]; then
 else
     TARGETS=$(${MG_NODE} -e 'fs=require("fs"); c=fs.readFileSync("targets.json"); console.log(Object.keys(JSON.parse(c)).join("\n"))')
     for targ in $TARGETS; do
-        ensure_build_platform $targ
         get_target_repos $targ
     done
 fi
diff --git a/package.json b/package.json
index f72a187..f58dc08 100644
--- a/package.json
+++ b/package.json
@@ -1,13 +1,13 @@
 {
   "name": "mountain-gorilla",
   "description": "Build SDC components. Eat bamboo.",
-  "version": "2.0.1",
+  "version": "2.0.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-    "manta": "3.1.3",
+    "manta": "3.0.0",
     "smartdc": "7.3.0",
-    "imgapi-cli": "git+https://github.com/joyent/sdc-imgapi-cli.git#38332b1"
+    "imgapi-cli": "git+ssh://git@github.com:joyent/sdc-imgapi-cli.git#38332b1"
   },
   "engines": {
     "node": ">=0.8"
diff --git a/targets.json.in b/targets.json.in
index cc58457..beaa4d0 100644
--- a/targets.json.in
+++ b/targets.json.in
@@ -76,7 +76,6 @@ if [[ "${JOYENT_BUILD}" == "true" ]]; then
   FIRMWARE_TOOLS_DEP='"firmware-tools",'
   FIRMWARE_TOOLS_ENTRY='
   "firmware-tools": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/firmware-tools.git"}
     ],
@@ -94,7 +93,6 @@ fi
 cat <<EOF
 {
   "smartlogin": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-smart-login.git"}
     ],
@@ -103,7 +101,6 @@ cat <<EOF
   },
   "ca": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "ca",
     "image_description": "SDC Cloud Analytics",
     "image_version": "1.0.0",
@@ -133,7 +130,6 @@ cat <<EOF
   },
   "amon": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "amon",
     "image_description": "SDC AMON",
     "image_version": "1.0.0",
@@ -156,7 +152,6 @@ cat <<EOF
   },
   "assets": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "assets",
     "image_description": "SDC Assets",
     "image_version": "1.0.0",
@@ -177,7 +172,6 @@ cat <<EOF
   },
   "cns": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "cns",
     "image_description": "Triton Container Naming Service",
     "image_version": "1.0.0",
@@ -203,7 +197,6 @@ cat <<EOF
   },
   "adminui": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "adminui",
     "image_description": "SDC AdminUI",
     "image_version": "1.0.0",
@@ -227,7 +220,6 @@ cat <<EOF
   },
   "mockcloud": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "mockcloud",
     "image_description": "SDC MOCK CLOUD",
     "image_version": "1.0.0",
@@ -244,7 +236,6 @@ cat <<EOF
   },
   "nfsserver": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "nfsserver",
     "image_description": "SDC NFS Server",
     "image_version": "1.0.0",
@@ -263,7 +254,6 @@ cat <<EOF
   },
   "dhcpd": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "dhcpd",
     "image_description": "SDC DHCPD",
     "image_version": "1.0.0",
@@ -290,7 +280,6 @@ cat <<EOF
   },
   "redis": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "redis",
     "image_description": "SDC Redis",
     "image_version": "1.0.0",
@@ -313,7 +302,6 @@ cat <<EOF
   },
   "amonredis": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "amonredis",
     "image_description": "SDC Amon Redis",
     "image_version": "1.0.0",
@@ -336,7 +324,6 @@ cat <<EOF
   },
   "rabbitmq": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "rabbitmq",
     "image_description": "SDC RabbitMQ",
     "image_version": "1.0.0",
@@ -368,12 +355,10 @@ cat <<EOF
   },
   "cloudapi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "cloudapi",
     "image_description": "SDC CloudAPI",
     "image_version": "1.0.0",
-    "// image_uuid": "sdc-minimal-multiarch-lts@15.4.1",
-    "image_uuid": "18b094b0-eb01-11e5-80c1-175dac7ddf02",
+    "image_uuid": "de411e86-548d-11e4-a4b7-3bb60478632a",
     "repos": [
       {"url": "git@github.com:joyent/sdc-cloudapi.git"}
     ],
@@ -385,15 +370,7 @@ cat <<EOF
       "https://download.joyent.com/pub/build/sdcnode"
     ],
     "pkgsrc": [
-      "coreutils-8.23nb2",
-      "curl-7.47.1",
-      "gsed-4.2.2nb4",
-      "patch-2.7.5",
-      "sudo-1.8.15",
-
-      "openssl-1.0.2j",
-      "stud-0.3p53nb5",
-      "haproxy-1.6.2"
+      "stud-0.3p53"
     ],
     "tarballs": [
       {"tarball": "registrar/registrar-pkg-*.tar.bz2", "sysroot": "/"},
@@ -401,9 +378,9 @@ cat <<EOF
       {"tarball": "config-agent/config-agent-*.tar.bz2", "sysroot": "/opt/smartdc"}
     ]
   },
+
   "nat": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "nat",
     "image_description": "SmartDataCenter per-user NAT zone",
     "image_version": "1.0.0",
@@ -416,14 +393,28 @@ cat <<EOF
     "pkgsrc": [],
     "tarballs": []
   },
+  "hostvolume": {
+    "appliance": "true",
+    "image_name": "hostvolume",
+    "image_description": "SDC Docker host volume support zone",
+    "image_version": "1.1.0",
+    "image_uuid": "1e81e08c-d406-11e4-aac9-6feb515aeb81",
+    "repos": [
+      {"url": "git@github.com:joyent/sdc-hostvolume.git"}
+    ],
+    "public": true,
+    "deps": [],
+    "pkgsrc": [
+        "openssl-1.0.1p"
+    ],
+    "tarballs": []
+  },
   "docker": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "docker",
     "image_description": "SDC Docker Engine",
     "image_version": "1.0.0",
-    "// image_uuid": "sdc-minimal-multiarch-lts@15.4.1",
-    "image_uuid": "18b094b0-eb01-11e5-80c1-175dac7ddf02",
+    "image_uuid": "de411e86-548d-11e4-a4b7-3bb60478632a",
     "repos": [
       {"url": "git@github.com:joyent/sdc-docker.git"}
     ],
@@ -434,13 +425,7 @@ cat <<EOF
       "registrar",
       "https://download.joyent.com/pub/build/sdcnode"
     ],
-    "pkgsrc": [
-        "coreutils-8.23nb2",
-        "curl-7.47.1",
-        "gsed-4.2.2nb4",
-        "patch-2.7.5",
-        "sudo-1.8.15"
-    ],
+    "pkgsrc": [],
     "tarballs": [
       {"tarball": "registrar/registrar-pkg-*.tar.bz2", "sysroot": "/"},
       {"tarball": "amon/amon-agent-*.tgz", "sysroot": "/opt"},
@@ -449,12 +434,10 @@ cat <<EOF
   },
   "volapi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "volapi",
     "image_description": "SDC Volumes API",
     "image_version": "1.0.0",
-    "// image_uuid": "sdc-minimal-multiarch-lts@15.4.1",
-    "image_uuid": "18b094b0-eb01-11e5-80c1-175dac7ddf02",
+    "image_uuid": "de411e86-548d-11e4-a4b7-3bb60478632a",
     "repos": [
       {"url": "git@github.com:joyent/sdc-volapi.git"}
     ],
@@ -465,13 +448,7 @@ cat <<EOF
       "registrar",
       "https://download.joyent.com/pub/build/sdcnode"
     ],
-    "pkgsrc": [
-        "coreutils-8.23nb2",
-        "curl-7.47.1",
-        "gsed-4.2.2nb4",
-        "patch-2.7.5",
-        "sudo-1.8.15"
-    ],
+    "pkgsrc": [],
     "tarballs": [
       {"tarball": "registrar/registrar-pkg-*.tar.bz2", "sysroot": "/"},
       {"tarball": "amon/amon-agent-*.tgz", "sysroot": "/opt"},
@@ -480,7 +457,6 @@ cat <<EOF
   },
   "portolan": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "portolan",
     "image_description": "SDC Portolan Service",
     "image_version": "1.0.0",
@@ -505,7 +481,6 @@ cat <<EOF
 
   "ufds": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "ufds",
     "image_description": "SDC UFDS",
     "image_version": "1.0.0",
@@ -533,7 +508,6 @@ cat <<EOF
 
   "workflow": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "workflow",
     "image_description": "SDC Workflow",
     "image_version": "1.0.0",
@@ -558,21 +532,49 @@ cat <<EOF
     ]
   },
 
-  "vmapi": {
+  "cmon": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
-    "image_name": "vmapi",
-    "image_description": "SDC VMAPI",
+    "image_name": "cmon",
+    "image_description": "Triton Container Monitor",
     "image_version": "1.0.0",
     "// image_uuid": "sdc-minimal-multiarch-lts@15.4.1",
     "image_uuid": "18b094b0-eb01-11e5-80c1-175dac7ddf02",
     "pkgsrc": [
-      "coreutils-8.23nb2",
-      "curl-7.47.1",
-      "gsed-4.2.2nb4",
-      "patch-2.7.5",
-      "sudo-1.8.15"
+        "coreutils-8.23nb2",
+        "gsed-4.2.2nb4"
     ],
+    "repos": [
+        {"url": "git@github.com:joyent/triton-cmon.git"}
+    ],
+    "public": true,
+    "deps": [
+      "config-agent",
+      "registrar",
+      "https://download.joyent.com/pub/build/sdcnode"
+    ],
+    "tarballs": [
+      {"tarball": "registrar/registrar-pkg-*.tar.bz2", "sysroot": "/"},
+      {"tarball": "config-agent/config-agent-*.tar.bz2", "sysroot": "/opt/smartdc"}
+    ]
+  },
+
+  "cmon-agent": {
+    "repos": [
+        {"url": "git@github.com:joyent/triton-cmon-agent.git"}
+    ],
+    "public": true,
+    "deps": [
+      "https://download.joyent.com/pub/build/sdcnode"
+    ]
+  },
+
+  "vmapi": {
+    "appliance": "true",
+    "image_name": "vmapi",
+    "image_description": "SDC VMAPI",
+    "image_version": "1.0.0",
+    "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
+    "pkgsrc": [],
     "repos": [
         {"url": "git@github.com:joyent/sdc-vmapi.git"}
     ],
@@ -592,19 +594,11 @@ cat <<EOF
 
   "papi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "papi",
     "image_description": "SDC PAPI",
     "image_version": "1.0.0",
-    "// image_uuid": "sdc-minimal-multiarch-lts@15.4.1",
-    "image_uuid": "18b094b0-eb01-11e5-80c1-175dac7ddf02",
-    "pkgsrc": [
-      "coreutils-8.23nb2",
-      "curl-7.47.1",
-      "gsed-4.2.2nb4",
-      "patch-2.7.5",
-      "sudo-1.8.15"
-    ],
+    "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
+    "pkgsrc": [],
     "repos": [
         {"url": "git@github.com:joyent/sdc-papi.git"}
     ],
@@ -624,24 +618,11 @@ cat <<EOF
 
   "imgapi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "imgapi",
     "image_description": "SDC IMGAPI",
-    "// image_uuid": "sdc-minimal-multiarch-lts@15.4.1",
-    "image_uuid": "18b094b0-eb01-11e5-80c1-175dac7ddf02",
+    "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
     "pkgsrc": [
-        "coreutils-8.23nb2",
-        "curl-7.47.1",
-        "gsed-4.2.2nb4",
-        "patch-2.7.5",
-        "sudo-1.8.15",
-
-        "dateutils-0.3.1nb1",
-        "haproxy-1.6.2",
-        "openssl-1.0.2j",
-        "stud-0.3p53nb5",
-        "the_silver_searcher-0.31.0",
-        "xz-5.2.2"
+        "xz-5.0.3"
     ],
     "repos": [
       {"url": "git@github.com:joyent/sdc-imgapi.git"}
@@ -662,7 +643,6 @@ cat <<EOF
 
   "sdc": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "sdc",
     "image_description": "SDC tools/ops zone",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -685,7 +665,6 @@ cat <<EOF
   },
 
   "agents_core": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-agents-core.git"}
     ],
@@ -696,7 +675,6 @@ cat <<EOF
   },
 
   "vm-agent": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-vm-agent.git"}
     ],
@@ -707,7 +685,6 @@ cat <<EOF
   },
 
   "net-agent": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-net-agent.git"}
     ],
@@ -718,7 +695,6 @@ cat <<EOF
   },
 
   "cn-agent": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-cn-agent.git"}
     ],
@@ -729,7 +705,6 @@ cat <<EOF
   },
 
   "config-agent": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-config-agent.git"}
     ],
@@ -740,7 +715,6 @@ cat <<EOF
   },
 
   "hagfish-watcher": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-hagfish-watcher.git"}
     ],
@@ -751,7 +725,6 @@ cat <<EOF
   },
 
   "firewaller": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-firewaller-agent.git"}
     ],
@@ -763,7 +736,6 @@ cat <<EOF
 
   "cnapi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "cnapi",
     "image_description": "SDC CNAPI",
     "image_version": "1.0.0",
@@ -788,7 +760,6 @@ cat <<EOF
 
   "fwapi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "fwapi",
     "image_description": "SDC FWAPI",
     "image_version": "1.0.0",
@@ -815,7 +786,6 @@ cat <<EOF
 
   "napi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "napi",
     "image_description": "SDC NAPI",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -841,7 +811,6 @@ cat <<EOF
 
   "sapi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "sapi",
     "image_description": "SDC SAPI",
     "image_version": "1.0.0",
@@ -865,7 +834,6 @@ cat <<EOF
   },
 
   "registrar": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/registrar.git"}
     ],
@@ -876,7 +844,6 @@ cat <<EOF
   },
 
   "minnow": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/manta-minnow.git"}
     ],
@@ -887,7 +854,6 @@ cat <<EOF
   },
 
   "mackerel": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/manta-mackerel.git"}
     ],
@@ -899,7 +865,6 @@ cat <<EOF
 
   "binder": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-nameservice",
     "image_description": "Manta nameservice",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -927,7 +892,6 @@ cat <<EOF
 
   "manta-manatee": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-postgres",
     "image_description": "Manta manatee",
     "image_uuid": "b4bdc598-8939-11e3-bea4-8341f6861379",
@@ -959,7 +923,6 @@ cat <<EOF
 
   "sdc-manatee": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "sdc-postgres",
     "image_description": "SDC manatee",
     "image_uuid": "b4bdc598-8939-11e3-bea4-8341f6861379",
@@ -991,7 +954,6 @@ cat <<EOF
 
   "medusa": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-medusa",
     "image_description": "Manta medusa",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1017,7 +979,6 @@ cat <<EOF
 
   "mahi": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-authcache",
     "image_description": "Manta authcache",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1044,7 +1005,6 @@ cat <<EOF
 
   "moray": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-moray",
     "image_description": "Manta moray",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1072,7 +1032,6 @@ cat <<EOF
 
   "electric-moray": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-electric-moray",
     "image_description": "Manta moray proxy",
     "image_uuid": "b4bdc598-8939-11e3-bea4-8341f6861379",
@@ -1098,13 +1057,12 @@ cat <<EOF
 
   "muppet": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-loadbalancer",
     "image_description": "Manta loadbalancer",
     "image_uuid": "de411e86-548d-11e4-a4b7-3bb60478632a",
     "pkgsrc": [
       "py27-curses",
-      "openssl-1.0.1u",
+      "openssl-1.0.1t",
       "stud-0.3p53nb2",
       "zookeeper-client-3.4.6"
     ],
@@ -1127,7 +1085,6 @@ cat <<EOF
 
   "muskie": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-webapi",
     "image_description": "Manta webapi",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1155,7 +1112,6 @@ cat <<EOF
 
   "mola": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-ops",
     "image_description": "Manta ops",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1184,7 +1140,6 @@ cat <<EOF
 
   "madtom": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-madtom",
     "image_description": "Manta madtom",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1212,7 +1167,6 @@ cat <<EOF
 
   "marlin-dashboard": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-marlin-dashboard",
     "image_description": "Manta marlin dashboard",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1237,7 +1191,6 @@ cat <<EOF
 
   "mako": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-storage",
     "image_description": "Manta storage",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1266,7 +1219,6 @@ cat <<EOF
 
   "marlin": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-jobsupervisor",
     "image_description": "Manta jobsupervisor",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1292,7 +1244,6 @@ cat <<EOF
 
   "wrasse": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-jobpuller",
     "image_description": "Manta Job Puller",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1318,7 +1269,6 @@ cat <<EOF
 
   "propeller": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-propeller",
     "image_description": "Manta propeller",
     "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
@@ -1345,7 +1295,6 @@ cat <<EOF
   },
 
   "sdcadm": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdcadm.git"}
     ],
@@ -1355,7 +1304,6 @@ cat <<EOF
 
   "sdcsso": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "sdcsso",
     "image_description": "SDC SSO",
     "image_version": "1.0.0",
@@ -1384,7 +1332,6 @@ cat <<EOF
   },
 
   "agentsshar": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-agents-installer.git"}
     ],
@@ -1392,6 +1339,7 @@ cat <<EOF
     "deps": [
       "agents_core",
       "hagfish-watcher",
+      "cmon-agent",
       "cn-agent",
       "net-agent",
       "vm-agent",
@@ -1405,7 +1353,6 @@ cat <<EOF
   },
 
   "dockerlogger": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {
             "url": "git@github.com:joyent/sdc-dockerlogger.git",
@@ -1419,7 +1366,6 @@ cat <<EOF
 
   "manta-deployment": {
     "appliance": "true",
-    "build_platform": "20141030T081701Z",
     "image_name": "manta-deployment",
     "image_description": "Manta deployment tools",
     "image_version": "1.0.0",
@@ -1443,7 +1389,6 @@ cat <<EOF
   },
 
   "sdc-system-tests": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdc-system-tests.git"}
     ],
@@ -1454,7 +1399,6 @@ cat <<EOF
   },
 
   "sdcboot": {
-    "build_platform": "20141030T081701Z",
     "repos": [
         {"url": "git@github.com:joyent/sdcboot.git"}
     ],
diff --git a/tools/jenkins/sdc-jenkins/package.json b/tools/jenkins/sdc-jenkins/package.json
index 35f71b9..f5fa1ac 100644
--- a/tools/jenkins/sdc-jenkins/package.json
+++ b/tools/jenkins/sdc-jenkins/package.json
@@ -10,8 +10,8 @@
     "assert-plus": "0.1.5",
     "async": "0.9.0",
     "cheerio": "0.16.0",
-    "cmdln": "git+https://github.com/trentm/node-cmdln.git#5333231da28f9ea659cc56f417513563f261fded",
-    "jenkins": "git+https://github.com/silas/node-jenkins.git#a2145a04b879b8e524f023c71c1e3045214d5968",
+    "cmdln": "git://github.com/trentm/node-cmdln.git#5333231da28f9ea659cc56f417513563f261fded",
+    "jenkins": "git://github.com/silas/node-jenkins.git#a2145a04b879b8e524f023c71c1e3045214d5968",
     "request": "2.36.0",
     "sprintf": "0.1.3",
     "tabula": "1.2.1",
diff --git a/tools/prep_dataset_in_jpc.sh b/tools/prep_dataset_in_jpc.sh
index c8252bc..6d2c5d9 100755
--- a/tools/prep_dataset_in_jpc.sh
+++ b/tools/prep_dataset_in_jpc.sh
@@ -407,9 +407,9 @@ else
 fi
 
 # Image Notes:
-# - requirements.networks: Feels right to have the images saying they need
-#   to be on the admin network. (However, it isn't required for either of
-#   headnode setup or 'sdcadm up'.)
+# - We need to add a requirement on the manifest for networks but CloudAPI does
+#   not allow us to do that, so we have to change locally and push over the
+#   original.
 # - We also set the min_platform to the platform we just built the bits on,
 #   not the platform we created the image on, since that's where the binary
 #   dependency should come from.
diff --git a/tools/purge-mg-builds b/tools/purge-mg-builds
index 55db846..964ec17 100755
--- a/tools/purge-mg-builds
+++ b/tools/purge-mg-builds
@@ -97,8 +97,6 @@ TTL_DAYS_FROM_NAME='{
     "binder": 365,
     "ca": 365,
     "cloudapi": 365,
-    "cmon": 365,
-    "cmon-agent": 365,
     "cn-agent": 365,
     "cnapi": 365,
     "cns": 365,
@@ -113,6 +111,7 @@ TTL_DAYS_FROM_NAME='{
     "gz-tools": 365,
     "hagfish-watcher": 365,
     "heartbeater": 365,
+    "hostvolume": 365,
     "imgapi": 365,
     "mackerel": 365,
     "madtom": 365,
@@ -152,6 +151,7 @@ TTL_DAYS_FROM_NAME='{
     "smartlogin": 365,
     "smartos": 365,
     "ufds": 365,
+    "vapi": 365,
     "vm-agent": 365,
     "vmapi": 365,
     "volapi": 365,
@@ -233,11 +233,7 @@ function purge_dir
     dir="$1"
     log "mrm -r $dir"
     if [[ "$opt_dryrun" == "no" ]]; then
-        if [[ -n "$TRACE" ]]; then
-            mrm -rv "$dir"
-        else
-            mrm -r "$dir"
-        fi
+        mrm -r "$dir"
     fi
 }
 
@@ -299,36 +295,18 @@ function purge_mg_builds
     branches=$(echo "$dirs" | sed -E 's/-[0-9]{8}T[0-9]{6}Z$//' | sort | uniq)
 
     for branch in $branches; do
-        branch_dirs=$(echo "$dirs" | (grep "^$branch-" || true))
-
-        # Determine which dirs for this branch that we will be purging.
-        branch_dirs_to_purge=
+        branch_dirs=$(echo "$dirs" | grep "^$branch-")
+        purged_all_in_branch=yes
         for branch_dir in $branch_dirs; do
             if [[ "$branch_dir" < "$branch-$cutoff" ]]; then
                 #log "# $branch_dir has expired"
-                branch_dirs_to_purge="$branch_dirs_to_purge $branch_dir"
-            fi
-        done
-        branch_dirs_to_purge=$(echo "$branch_dirs_to_purge" | xargs -n1)
-
-        # The "master" branch is special: if we would end up purging *all*
-        # remaining master branch dirs, then save that latest one.
-        purge_all_in_branch=no
-        if [[ "$branch_dirs" == "$branch_dirs_to_purge" ]]; then
-            if [[ "$branch" == "master" ]]; then
-                log "#   retain last master branch build:" \
-                    $(echo "$branch_dirs_to_purge" | tail -1)
-                branch_dirs_to_purge=$(echo "$branch_dirs_to_purge" | sed '$ d')
+                purge_dir $dir/$branch_dir
             else
-                purge_all_in_branch=yes
+                purged_all_in_branch=no
             fi
-        fi
-
-        for branch_dir in $branch_dirs_to_purge; do
-            #log "# $branch_dir has expired"
-            purge_dir $dir/$branch_dir
         done
-        if [[ $purge_all_in_branch == "yes" ]]; then
+
+        if [[ $purged_all_in_branch == "yes" ]]; then
             purge_file_if_exist $dir/$branch-latest
         fi
     done
-- 
2.21.0

