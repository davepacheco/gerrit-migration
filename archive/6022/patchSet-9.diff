commit c156c6177faa36c5859864e0abdc555101683a9a
Author: John Levon <john.levon@joyent.com>
Date:   2019-05-14T19:53:52+00:00 (5 months ago)
    
    OS-7662 need a way to disable SMT
    OS-7684 sysinfo mis-parses bootparams
    Reviewed by: Jerry Jelinek <jerry.jelinek@joyent.com>
    Approved by: Jerry Jelinek <jerry.jelinek@joyent.com>

diff --git a/man/src/sysinfo.1m.md b/man/src/sysinfo.1m.md
index 1a0adb9d..ecf67f92 100644
--- a/man/src/sysinfo.1m.md
+++ b/man/src/sysinfo.1m.md
@@ -75,17 +75,44 @@ making changes.
 
     GZ and NGZ
 
+  "CPU Socket Count"
+
+    Number of physical CPU sockets in this host.
+
+    GZ and NGZ
+
+  "CPU Core Count"
+
+    Number of physical CPU cores in this host.
+
+    GZ and NGZ
+
+  "CPU Online Count"
+
+    Number of online CPUs in this host.
+
+    GZ and NGZ
+
+  "CPU Count"
+
+    Total number of CPUs, including offline and disabled CPUs, in this host.
+
+    GZ and NGZ
+
   "CPU Physical Cores"
 
-    Number of physical CPUs in this host.
+    Number of physical CPU sockets (*not* cores) in this host.
+    Legacy value, set for compatibility only. Prefer "CPU Socket Count".
 
-    GZ only
+    GZ and NGZ
 
   "CPU Total Cores"
 
-    The number of CPU cores in this host.
+    Total number of CPUs, including offline and disabled CPUs, in this host.
+    *Not* the number of cores. Legacy value, set for compatibility only.
+    Prefer "CPU Count" or "CPU Online Count".
 
-    GZ only
+    GZ and NGZ
 
   "CPU Type"
 
diff --git a/overlay/generic/lib/svc/method/smartdc-config b/overlay/generic/lib/svc/method/smartdc-config
index 1308fdc4..510c93ad 100755
--- a/overlay/generic/lib/svc/method/smartdc-config
+++ b/overlay/generic/lib/svc/method/smartdc-config
@@ -19,8 +19,19 @@
 #
 # CDDL HEADER END
 #
+# Copyright 2019 Joyent, Inc.
 #
-# Copyright 2014 Joyent, Inc.  All rights reserved.
+
+#
+# Despite its "smartdc/config" name, this service is used both for SmartOS and
+# Triton. It has two jobs:
+#
+# During an initial setup, this runs through the initial (possibly interactive)
+# configuration.
+#
+# During normal operation, it does some miscellaneous configuration based on
+# /usbkey/config (which, under Triton, will have already been updated from the
+# USB key by svc:/system/filesystem/smartdc:default).
 #
 
 set -o errexit
@@ -160,6 +171,19 @@ case "$1" in
         /usr/bin/loadkeys ${CONFIG_default_keymap}
     fi
 
+    #
+    # In SmartOS, disabling SMT via the boot option is a pain, so we support a
+    # config option in /usbkey/config, the official mechanism for permanent
+    # configuration.  We'd like to do this earlier but we have to wait for
+    # /usbkey to be mounted first. This does imply we've potentially handed out
+    # "too many" interrupts for the set of CPUs remaining online.
+    #
+    if [[ -n $(/bin/bootparams | grep '^smartos=true') ]]; then
+        if [[ "$CONFIG_smt_enabled" = "false" ]]; then
+            psradm -aS || exit $SMF_EXIT_ERR_FATAL
+        fi
+    fi
+
     # Enable virtual terminals to support interactive installation
     vtdaemon="svc:/system/vtdaemon"
     svccfg -s ${vtdaemon} setprop options/hotkeys=true
diff --git a/overlay/generic/smartdc/lib/smartos_prompt_config.sh b/overlay/generic/smartdc/lib/smartos_prompt_config.sh
index 762d6d1c..1f76ed68 100755
--- a/overlay/generic/smartdc/lib/smartos_prompt_config.sh
+++ b/overlay/generic/smartdc/lib/smartos_prompt_config.sh
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2019, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 # XXX - TODO
@@ -1324,6 +1324,9 @@ echo >>$tmp_config
 echo "hostname=$hostname" >> $tmp_config
 echo >>$tmp_config
 
+echo "smt_enabled=true" >>$tmp_config
+echo >>$tmp_config
+
 create_zpools "$DISK_LAYOUT"
 
 mv $tmp_config /usbkey/config || fatal "failed to persist configuration"
diff --git a/src/sysinfo b/src/sysinfo
index 733a059c..e8c76c6b 100644
--- a/src/sysinfo
+++ b/src/sysinfo
@@ -1,6 +1,6 @@
 #!/bin/bash
 #
-# Copyright (c) 2018 Joyent Inc., All rights reserved.
+# Copyright 2019 Joyent, Inc.
 #
 # Output some info representing the system.  Default: JSON
 #
@@ -182,11 +182,6 @@ function get_smartos_cpu_info()
             CPU_Version="Unknown"
         fi
 
-        CPU_Count=`smbios -t SMB_TYPE_PROCESSOR | grep -v "Version: 0000000000" \
-            | grep "Version: " \
-            | wc -l \
-            | tr -d ' '`
-
         isainfo=$(isainfo -x)
         if [[ -n $(echo " ${isainfo} " | /usr/bin/grep " vmx ") ]]; then
             CPU_Virtualization="vmx"
@@ -197,14 +192,21 @@ function get_smartos_cpu_info()
         fi
     fi
 
-    CPU_Cores=`psrinfo \
-        | grep "^[0-9]" \
-        | wc -l \
-        | tr -d ' '`
-
-    #echo "${CPU_Version}"
-    #echo "${CPU_Count}"
-    #echo "${CPU_Cores}"
+    CPU_Socket_Count=$(psrinfo -t -p)
+    CPU_Core_Count=$(psrinfo -t -c)
+    CPU_Count=$(psrinfo -t)
+    CPU_Online_Count=$(( $(psrinfo -t -S "on-line") + $(psrinfo -t -S "no-intr") ))
+
+    #
+    # Below, we also report these two legacy values, both of which are
+    # unfortunately named:
+    #
+    # CPU Physical Cores: this is really $CPU_Socket_Count
+    # CPU Total Cores: this is really $CPU_Count
+    #
+    # Consumers that care about the CPU resources actually available to use
+    # should look to $CPU_Online_Count.
+    #
 }
 
 function get_bhyve_capability()
@@ -607,29 +609,43 @@ function get_aggr_params()
 function get_bootparams()
 {
     WHICH_GREP="/usr/xpg4/bin/grep"
+    ORIGIFS=$IFS
+
+    IFS=`echo -en "\n\b"`
 
     count=1
     for line in $(/usr/bin/bootparams); do
         fields=(${line//=/ })
-        key=$(echo ${fields[0]} | sed -e "s/\-/\_/g")
-        if ! (echo "${key}" | ${WHICH_GREP} \
+        if ! (echo "${fields[0]}" | ${WHICH_GREP} \
           -e "^tty" \
           -e "^atapi" \
-          -e "^ata_dma" \
-          -e "^keyboard_" \
-          -e "^bios_boot_device" \
-          -e "^lba_access_" \
-          -e "^boot_ncpus" \
-          -e "^boot_file" \
+          -e "^ata-dma" \
+          -e "^keyboard-" \
+          -e "^bios-boot-device" \
+          -e "^lba-access-" \
+          -e "^boot-ncpus" \
+          -e "^boot-file" \
           -e "^whoami" \
-          -e "^mfg_name" \
-          -e "^impl_arch_name" \
-          -e "_max_ncpus$" \
+          -e "^mfg-name" \
+          -e "^impl-arch-name" \
+          -e "-max-ncpus$" \
           >/dev/null); then
             Bootparams[${count}]=${line}
             ((count++))
         fi
     done
+
+    IFS=$ORIGIFS
+}
+
+function get_psrinfo()
+{
+    count=1
+    for line in $(/usr/sbin/psrinfo -r all); do
+        fields=(${line//=/ })
+        Psrinfo[${count}]=${line}
+        ((count++))
+    done
 }
 
 function get_boot_time()
@@ -702,7 +718,7 @@ HW_Family='${HW_Family}'
 VM_Capable='${VM_Capable}'
 CPU_Type='${CPU_Version}'
 CPU_Virtualization='${CPU_Virtualization}'
-CPU_Physical_Cores=${CPU_Count}
+CPU_Physical_Cores=${CPU_Socket_Count}
 Bhyve_Capable='${Bhyve_Capable}'
 Bhyve_Max_Vcpus=${Bhyve_Max_Vcpus}
 HVM_API='${HVM_API}'
@@ -718,7 +734,11 @@ END
     cat <<END
 UUID='${UUID}'
 Hostname='${Hostname}'
-CPU_Total_Cores=${CPU_Cores}
+CPU_Total_Cores=${CPU_Count}
+CPU_Socket_Count=${CPU_Socket_Count}
+CPU_Core_Count=${CPU_Core_Count}
+CPU_Online_Count=${CPU_Online_Count}
+CPU_Count=${CPU_Count}
 MiB_of_Memory=${Memory_in_MiB}
 END
 
@@ -784,11 +804,18 @@ END
 
     for entry in "${Bootparams[@]}"; do
         fields=(${entry//=/ })
-        key=$(echo ${fields[0]} | sed -e "s/\-/\_/g")
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
         val=${fields[1]}
         echo "Bootparam_${key}='${val}'"
     done
 
+    for entry in "${Psrinfo[@]}"; do
+        fields=(${entry//=/ })
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
+        val=${fields[1]}
+        echo "Psrinfo_${key}='${val}'"
+    done
+
     if [[ -n "$CompleteAggrs" ]]; then
         echo "Aggregations=$CompleteAggrs"
         for aggr in $(echo "${CompleteAggrs}" | sed -e "s/,/ /g"); do
@@ -845,7 +872,7 @@ END
   "HVM API": ${HVM_API},
   "CPU Type": "${CPU_Version}",
   "CPU Virtualization": "${CPU_Virtualization}",
-  "CPU Physical Cores": ${CPU_Count},
+  "CPU Physical Cores": ${CPU_Socket_Count},
   "Admin NIC Tag": "${Admin_NIC_Tag}",
   "Admin IP": "${Admin_IP}",
 END
@@ -856,7 +883,11 @@ END
 cat <<END
   "UUID": "${UUID}",
   "Hostname": "${Hostname}",
-  "CPU Total Cores": ${CPU_Cores},
+  "CPU Total Cores": ${CPU_Count},
+  "CPU Socket Count": ${CPU_Socket_Count},
+  "CPU Core Count": ${CPU_Core_Count},
+  "CPU Online Count": ${CPU_Online_Count},
+  "CPU Count": ${CPU_Count},
   "MiB of Memory": "${Memory_in_MiB}",
 END
 
@@ -890,7 +921,7 @@ END
     printed=0
     for entry in "${Bootparams[@]}"; do
         fields=(${entry//=/ })
-        key=$(echo ${fields[0]} | sed -e "s/\-/\_/g")
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
         val=${fields[1]}
         ((printed++))
         trailing_comma=","
@@ -899,6 +930,20 @@ END
     done
     cat <<END
   },
+  "Psrinfo": {
+END
+    printed=0
+    for entry in "${Psrinfo[@]}"; do
+        fields=(${entry//=/ })
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
+        val=${fields[1]}
+        ((printed++))
+        trailing_comma=","
+        [[ ${printed} -eq ${#Psrinfo[*]} ]] && trailing_comma=''
+        echo "    \"${key}\": \"$val\"${trailing_comma}"
+    done
+    cat <<END
+  },
 END
 
     if [[ ${ZONENAME} == "global" && -f /.smartdc_version \
@@ -1023,6 +1068,7 @@ if [[ ${ZONENAME} == "global" ]]; then
     get_zpool
     get_disks
     get_bootparams
+    get_psrinfo
     get_sdc_version
     if [[ -n ${SMARTDC_VERSION} ]]; then
         # Setup is SDC specific
