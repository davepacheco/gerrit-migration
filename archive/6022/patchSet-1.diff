commit 331122e6356c3784b0313ec9439f3c640a63e71c
Author: John Levon <john.levon@joyent.com>
Date:   2019-03-26T13:56:23+00:00 (7 months ago)
    
    OS-7662 need a way to disable HT
    OS-7684 sysinfo mis-parses bootparams

diff --git a/overlay/generic/lib/svc/method/smartdc-config b/overlay/generic/lib/svc/method/smartdc-config
index 1308fdc4..4c8f0ab9 100755
--- a/overlay/generic/lib/svc/method/smartdc-config
+++ b/overlay/generic/lib/svc/method/smartdc-config
@@ -19,8 +19,19 @@
 #
 # CDDL HEADER END
 #
+# Copyright 2019, Joyent, Inc.
 #
-# Copyright 2014 Joyent, Inc.  All rights reserved.
+
+#
+# Despite its "smartdc/config" name, this service is used both for SmartOS and
+# Triton. It has two jobs:
+#
+# During an initial setup, this runs through the initial (possibly interactive)
+# configuration.
+#
+# During normal operation, it does some miscellaneous configuration based on
+# /usbkey/config (which, under Triton, will have already been updated from the
+# USB key by svc:/system/filesystem/smartdc:default).
 #
 
 set -o errexit
@@ -160,6 +171,19 @@ case "$1" in
         /usr/bin/loadkeys ${CONFIG_default_keymap}
     fi
 
+    #
+    # In SmartOS, disabling HT via the boot option is a pain, so we support a
+    # config option in /usbkey/config, the official mechanism for permanent
+    # configuration.  We'd like to do this earlier but we have to wait for
+    # /usbkey to be mounted first. This does imply we've potentially handed out
+    # "too many" interrupts for the set of CPUs remaining online.
+    #
+    if [[ -n $(/bin/bootparams | grep '^smartos=true') ]]; then
+        if [[ "$CONFIG_ht_enabled" = "false" ]]; then
+            psradm -Ha || exit $SMF_EXIT_ERR_FATAL
+        fi
+    fi
+
     # Enable virtual terminals to support interactive installation
     vtdaemon="svc:/system/vtdaemon"
     svccfg -s ${vtdaemon} setprop options/hotkeys=true
diff --git a/overlay/generic/smartdc/lib/smartos_prompt_config.sh b/overlay/generic/smartdc/lib/smartos_prompt_config.sh
index 3c49ff1d..d0f9092d 100755
--- a/overlay/generic/smartdc/lib/smartos_prompt_config.sh
+++ b/overlay/generic/smartdc/lib/smartos_prompt_config.sh
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2018, Joyent, Inc.
+# Copyright 2019, Joyent, Inc.
 #
 
 # XXX - TODO
@@ -1318,6 +1318,13 @@ echo >>$tmp_config
 echo "hostname=$hostname" >> $tmp_config
 echo >>$tmp_config
 
+#
+# By default, SmartOS has hyper-threading disabled. This can be re-enabled later
+# by modifying this parameter.
+#
+echo "ht_enabled=false" >>$tmp_config
+echo >>$tmp_config
+
 create_zpools "$DISK_LAYOUT"
 
 mv $tmp_config /usbkey/config || fatal "failed to persist configuration"
diff --git a/src/sysinfo b/src/sysinfo
index 733a059c..f782af25 100644
--- a/src/sysinfo
+++ b/src/sysinfo
@@ -1,6 +1,6 @@
 #!/bin/bash
 #
-# Copyright (c) 2018 Joyent Inc., All rights reserved.
+# Copyright 2019, Joyent, Inc.
 #
 # Output some info representing the system.  Default: JSON
 #
@@ -607,29 +607,43 @@ function get_aggr_params()
 function get_bootparams()
 {
     WHICH_GREP="/usr/xpg4/bin/grep"
+    ORIGIFS=$IFS
+
+    IFS=`echo -en "\n\b"`
 
     count=1
     for line in $(/usr/bin/bootparams); do
         fields=(${line//=/ })
-        key=$(echo ${fields[0]} | sed -e "s/\-/\_/g")
-        if ! (echo "${key}" | ${WHICH_GREP} \
+        if ! (echo "${fields[0]}" | ${WHICH_GREP} \
           -e "^tty" \
           -e "^atapi" \
-          -e "^ata_dma" \
-          -e "^keyboard_" \
-          -e "^bios_boot_device" \
-          -e "^lba_access_" \
-          -e "^boot_ncpus" \
-          -e "^boot_file" \
+          -e "^ata-dma" \
+          -e "^keyboard-" \
+          -e "^bios-boot-device" \
+          -e "^lba-access-" \
+          -e "^boot-ncpus" \
+          -e "^boot-file" \
           -e "^whoami" \
-          -e "^mfg_name" \
-          -e "^impl_arch_name" \
-          -e "_max_ncpus$" \
+          -e "^mfg-name" \
+          -e "^impl-arch-name" \
+          -e "-max-ncpus$" \
           >/dev/null); then
             Bootparams[${count}]=${line}
             ((count++))
         fi
     done
+
+    IFS=$ORIGIFS
+}
+
+function get_psrinfo()
+{
+    count=1
+    for line in $(/usr/sbin/psrinfo -r all); do
+        fields=(${line//=/ })
+        Psrinfo[${count}]=${line}
+        ((count++))
+    done
 }
 
 function get_boot_time()
@@ -784,11 +798,18 @@ END
 
     for entry in "${Bootparams[@]}"; do
         fields=(${entry//=/ })
-        key=$(echo ${fields[0]} | sed -e "s/\-/\_/g")
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
         val=${fields[1]}
         echo "Bootparam_${key}='${val}'"
     done
 
+    for entry in "${Psrinfo[@]}"; do
+        fields=(${entry//=/ })
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
+        val=${fields[1]}
+        echo "Psrinfo_${key}='${val}'"
+    done
+
     if [[ -n "$CompleteAggrs" ]]; then
         echo "Aggregations=$CompleteAggrs"
         for aggr in $(echo "${CompleteAggrs}" | sed -e "s/,/ /g"); do
@@ -890,7 +911,7 @@ END
     printed=0
     for entry in "${Bootparams[@]}"; do
         fields=(${entry//=/ })
-        key=$(echo ${fields[0]} | sed -e "s/\-/\_/g")
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
         val=${fields[1]}
         ((printed++))
         trailing_comma=","
@@ -899,6 +920,20 @@ END
     done
     cat <<END
   },
+  "Psrinfo": {
+END
+    printed=0
+    for entry in "${Psrinfo[@]}"; do
+        fields=(${entry//=/ })
+        key=$(echo ${fields[0]} | sed -e 's+[^A-Za-z0-9_]+_+g')
+        val=${fields[1]}
+        ((printed++))
+        trailing_comma=","
+        [[ ${printed} -eq ${#Psrinfo[*]} ]] && trailing_comma=''
+        echo "    \"${key}\": \"$val\"${trailing_comma}"
+    done
+    cat <<END
+  },
 END
 
     if [[ ${ZONENAME} == "global" && -f /.smartdc_version \
@@ -1023,6 +1058,7 @@ if [[ ${ZONENAME} == "global" ]]; then
     get_zpool
     get_disks
     get_bootparams
+    get_psrinfo
     get_sdc_version
     if [[ -n ${SMARTDC_VERSION} ]]; then
         # Setup is SDC specific
