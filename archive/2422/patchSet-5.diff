commit 0b31819e80010c2fbab04409cf9c9f4d0f792440 (refs/changes/22/2422/5)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-08-18T22:34:47+00:00 (2 years, 2 months ago)
    
    joyent/node-cueball#124 new getPool api method for CueBallAgent

diff --git a/docs/api.adoc b/docs/api.adoc
index 2fbe6ef..e9fc2c8 100644
--- a/docs/api.adoc
+++ b/docs/api.adoc
@@ -61,6 +61,24 @@ held by the pool). The `stop()` method should be used on an Agent if your
 program does not plan to use it again and wishes to be able to exit node
 without calling `process.exit()`.
 
+### `#getPool([host])`
+
+Returns the connection pool this agent has created for the input host,
+or creates one if it doesn't already exist.
+
+Parameters
+
+- `host` -- hostname of the host for which the pool is being requested.
+
+### `#createPool([host])`
+
+Creates and returns a connection pool for the host identified by the
+input host name if one doesn't already exist.
+
+Parameters
+
+- `host` -- hostname of the host for which the pool is being requested.
+
 [[pool]]
 ## ConnectionPool
 
diff --git a/lib/agent.js b/lib/agent.js
index 4c58c65..028b2b8 100644
--- a/lib/agent.js
+++ b/lib/agent.js
@@ -423,6 +423,21 @@ CueBallAgent.prototype.checkSocket = function (host, handle, socket) {
 	req.end();
 };
 
+/* Used by muskie to check for recent shark connections. */
+CueBallAgent.prototype.getPool = function (host) {
+    mod_assert.string(host, 'hostname');
+    return (this.pools[host]);
+};
+
+/* Used by muskie to create a pool if one doesn't already exist. */
+CueBallAgent.prototype.createPool = function (host) {
+    mod_assert.string(host, 'hostname');
+    if (this.pools[host] === undefined) {
+		this.addPool(host, {});
+    }
+    return (this.pools[host]);
+};
+
 /* Only used by UNIX socket connections with "socketPath" set. */
 CueBallAgent.prototype.createConnection = function (options, connectListener) {
 	throw (new Error('UNIX domain sockets not supported'));
