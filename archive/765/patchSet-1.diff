commit 8773a89f6acba3f4bebff7fe223dc93ed0eb19ed (refs/changes/65/765/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2016-10-21T13:14:21-07:00 (3 years ago)
    
    CNS-172 AAAA requests where an A record exists should return NODATA, not NXDOMAIN

diff --git a/lib/dns-server.js b/lib/dns-server.js
index c419715..6993f8e 100644
--- a/lib/dns-server.js
+++ b/lib/dns-server.js
@@ -277,8 +277,8 @@ DNSServer.prototype.handleQuery = function (q, cb) {
 
 		r.hget(k, leaf, function (err, val) {
 			if (!err && val !== null) {
-				var recs = JSON.parse(val);
-				recs = recs.filter(function (rec) {
+				var allRecs = JSON.parse(val);
+				var recs = allRecs.filter(function (rec) {
 					return (rec.constructor === type);
 				});
 				if (recs.length > 0) {
@@ -295,7 +295,13 @@ DNSServer.prototype.handleQuery = function (q, cb) {
 						q.log.info('responded ok');
 					}
 					return;
+				} else if (allRecs.length > 0) {
+					q.setError('noerror');
+				} else {
+					q.setError('nxdomain');
 				}
+			} else {
+				q.setError('nxdomain');
 			}
 			self.makeSOA(z, function (err2, soa) {
 				if (err2) {
@@ -307,7 +313,6 @@ DNSServer.prototype.handleQuery = function (q, cb) {
 					return;
 				}
 
-				q.setError('enoname');
 				q.addAuthority(z, soa, TTL);
 				q.send();
 				q.log.info('responded not found');
diff --git a/test/unit/dns-server.test.js b/test/unit/dns-server.test.js
index 0a94873..5204db0 100644
--- a/test/unit/dns-server.test.js
+++ b/test/unit/dns-server.test.js
@@ -178,6 +178,64 @@ test('serves instance A records', function (t) {
 	req.send();
 });
 
+test('returns NXDOMAIN response for nonexistent name', function (t) {
+	var q = dns.Question({
+		name: 'abc123aaaa.inst.def432.foo',
+		type: 'A'
+	});
+	var req = dns.Request({
+		question: q,
+		server: { address: '127.0.0.1', port: 9953, type: 'udp' },
+		timeout: 1000
+	});
+	req.once('timeout', function () {
+		t.fail('timeout');
+		t.end();
+	});
+	req.on('message', function (err, answer) {
+		t.error(err);
+		t.equal(answer.header.rcode,
+		    dns.consts.NAME_TO_RCODE['NOTFOUND']);
+		t.equal(answer.answer.length, 0);
+		t.equal(answer.authority.length, 1);
+		t.equal(answer.authority[0].type,
+		    dns.consts.NAME_TO_QTYPE['SOA']);
+	});
+	req.once('end', function () {
+		t.end();
+	});
+	req.send();
+});
+
+test('returns NODATA response for no record type match', function (t) {
+	var q = dns.Question({
+		name: 'abc123.inst.def432.foo',
+		type: 'AAAA'
+	});
+	var req = dns.Request({
+		question: q,
+		server: { address: '127.0.0.1', port: 9953, type: 'udp' },
+		timeout: 1000
+	});
+	req.once('timeout', function () {
+		t.fail('timeout');
+		t.end();
+	});
+	req.on('message', function (err, answer) {
+		t.error(err);
+		t.equal(answer.header.rcode,
+		    dns.consts.NAME_TO_RCODE['NOERROR']);
+		t.equal(answer.answer.length, 0);
+		t.equal(answer.authority.length, 1);
+		t.equal(answer.authority[0].type,
+		    dns.consts.NAME_TO_QTYPE['SOA']);
+	});
+	req.once('end', function () {
+		t.end();
+	});
+	req.send();
+});
+
 test('serves instance TXT records', function (t) {
 	var q = dns.Question({
 		name: 'abc123.inst.def432.foo',
