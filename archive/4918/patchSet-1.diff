From dad8a6052b9fd0b22ef7e50140db7da394fd4c54 Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <josh@wilsdon.ca>
Date: Tue, 2 Oct 2018 21:17:05 -0700
Subject: [PATCH] TRITON-822 DAPI should have a filter which can reliably fail
 a provision

---
 docs/index.md                                 |  3 +-
 lib/algorithms/hard-filter-force-failure.js   | 52 +++++++++++++++++
 package.json                                  |  2 +-
 .../hard-filter-force-failure.test.js         | 57 +++++++++++++++++++
 test/allocator.test.js                        |  1 +
 5 files changed, 113 insertions(+), 2 deletions(-)
 create mode 100644 lib/algorithms/hard-filter-force-failure.js
 create mode 100644 test/algorithms/hard-filter-force-failure.test.js

diff --git a/docs/index.md b/docs/index.md
index 8e0b73c..b2f13ac 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -10,7 +10,7 @@ markdown2extras: wiki-tables, code-friendly
 -->
 
 <!--
-    Copyright (c) 2015, Joyent, Inc.
+    Copyright (c) 2018, Joyent, Inc.
 -->
 
 # sdc-designation (formerly known as DAPI)
@@ -427,6 +427,7 @@ aware that you'll need to add the custom file back after any DAPI zone upgrade.
 | calculate-recent-vms            | Adds recent VMs to pipeline if they haven't appeared yet in CNAPI    |
 | calculate-server-unreserved     | Does some free-resource calculations that are used by other plugins  |
 | hard-filter-feature-min-platform| Removes servers that don't pass platform requirements for specific optional features used by the VM being allocated |
+| hard-filter-force-failure       | Removes all servers (forcing the provision to fail) when internal\_metadata.force\_designation\_failure is set. Used by tests to force a failure to ensure proper handling. |
 | hard-filter-headnode            | Removes any headnodes                                       |
 | hard-filter-invalid-servers     | Removes any server objects which don't pass validation      |
 | hard-filter-large-servers       | Removes the top 15% servers with the most available RAM     |
diff --git a/lib/algorithms/hard-filter-force-failure.js b/lib/algorithms/hard-filter-force-failure.js
new file mode 100644
index 0000000..b53b2ae
--- /dev/null
+++ b/lib/algorithms/hard-filter-force-failure.js
@@ -0,0 +1,52 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
+/*
+ * Allows forcing failure for purposes of testing.
+ *
+ * In the payload, specify `dapi_force_failure: true` in order to cause this
+ * provision to fail at DAPI.
+ *
+ * This is especially useful for tests where you want to simulate a DAPI failure
+ * without having to worry about which specific parameters are allowed or not in
+ * your specific environment.
+ */
+
+var assert = require('assert-plus');
+
+function
+filterForcedFailures(servers, opts, cb)
+{
+	assert.arrayOfObject(servers, 'servers');
+	assert.object(opts, 'opts');
+	assert.object(opts.vm, 'opts.vm');
+	assert.func(cb, 'cb');
+
+	var idx;
+	var reasons = {};
+
+	if (opts.vm.internal_metadata &&
+	    opts.vm.internal_metadata.force_designation_failure) {
+
+		for (idx = 0; idx < servers.length; idx++) {
+			reasons[servers[idx].uuid] =
+			    'force_designation_failure set, failing';
+		}
+		cb(null, [], reasons);
+		return;
+	}
+
+	cb(null, servers, {});
+}
+
+module.exports = {
+	name: 'Forced failure',
+	run: filterForcedFailures
+};
diff --git a/package.json b/package.json
index 48ef53f..27b790d 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "dapi",
   "description": "SmartDataCenter Designation API",
-  "version": "8.4.0",
+  "version": "8.5.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/algorithms/hard-filter-force-failure.test.js b/test/algorithms/hard-filter-force-failure.test.js
new file mode 100644
index 0000000..4a6dca5
--- /dev/null
+++ b/test/algorithms/hard-filter-force-failure.test.js
@@ -0,0 +1,57 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2018, Joyent, Inc.
+ */
+
+var test = require('tape');
+var filter = require('../../lib/algorithms/hard-filter-force-failure.js');
+var common = require('./common.js');
+
+
+var SERVERS = [ {
+	uuid: 'f0908343-5410-47b0-b6c4-b724ab4ffda5',
+	vms : {}
+} ];
+
+
+var checkFilter = common.createPluginChecker(filter);
+
+
+test('filterForceFailure() with flag set true', function (t) {
+	var expectServers = [];
+	var expectReasons = {
+		'f0908343-5410-47b0-b6c4-b724ab4ffda5':
+		    'force_designation_failure set, failing'
+	};
+
+	var opts = {
+		vm: {
+			internal_metadata: {
+				force_designation_failure: true
+			}
+		}, pkg: {
+		}
+	};
+
+	checkFilter(t, SERVERS, opts, expectServers, expectReasons);
+});
+
+
+test('filterForceFailure() without flag', function (t) {
+	var expectServers = [ SERVERS[0] ];
+	var expectReasons = {};
+
+	var opts = { vm: {}, pkg: {} };
+
+	checkFilter(t, SERVERS, opts, expectServers, expectReasons);
+});
+
+test('name', function (t) {
+	t.equal(typeof (filter.name), 'string');
+	t.end();
+});
diff --git a/test/allocator.test.js b/test/allocator.test.js
index e08518e..4ce3bc4 100644
--- a/test/allocator.test.js
+++ b/test/allocator.test.js
@@ -794,6 +794,7 @@ test('load available algorithms', function (t) {
 		'calculate-ticketed-vms',
 		'hard-filter-capness',
 		'hard-filter-feature-min-platform',
+		'hard-filter-force-failure',
 		'hard-filter-headnode',
 		'hard-filter-hvm',
 		'hard-filter-invalid-servers',
-- 
2.21.0

