From 6480cfae6b204dc43cc6671b01d7888d3abc0715 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 14 Dec 2018 10:52:14 -0800
Subject: [PATCH] TRITON-1044 cns should use newer redis server and client,
 paginate AXFRs

---
 Makefile                    |  4 +--
 lib/dns-server.js           | 67 +++++++++++++++++++++++--------------
 package.json                | 22 ++++++------
 sapi_manifests/cns/template |  4 ++-
 server.js                   |  7 ++--
 updater.js                  |  4 +--
 6 files changed, 64 insertions(+), 44 deletions(-)

diff --git a/Makefile b/Makefile
index e9a4438..fa319f0 100644
--- a/Makefile
+++ b/Makefile
@@ -16,8 +16,8 @@
 
 NAME			:= cns
 NODE_PREBUILT_TAG	 = zone
-NODE_PREBUILT_VERSION	:= v0.12.9
-NODE_PREBUILT_IMAGE	 = b4bdc598-8939-11e3-bea4-8341f6861379
+NODE_PREBUILT_VERSION	:= v4.9.0
+NODE_PREBUILT_IMAGE	 = 18b094b0-eb01-11e5-80c1-175dac7ddf02
 
 #
 # Tools
diff --git a/lib/dns-server.js b/lib/dns-server.js
index 7a0b064..43a64a8 100644
--- a/lib/dns-server.js
+++ b/lib/dns-server.js
@@ -1230,34 +1230,51 @@ DNSServer.prototype.handleTransfer = function (q, z, cb) {
 				q.addAnswer(z, ns[i], NS_TTL);
 				pushed++;
 			}
-			r.hgetall('zone:' + z, function (err2, zrecs) {
-				if (err2 || zrecs === null) {
-					finish();
-					return;
-				}
-				var names = Object.keys(zrecs);
-				for (i = 0; i < names.length; ++i) {
-					var name = names[i];
-					var recs = JSON.parse(zrecs[name]);
-					assert.arrayOfObject(recs);
-					var trecs;
-					while (recs.length > 0) {
-						trecs = recs.slice(0, 20);
-						recs = recs.slice(20);
-						self.addAnswers(q, trecs,
-						    name + '.' + z);
-						pushed += trecs.length;
-						if (pushed > MAX_ANS_PER_MSG) {
-							if (!q.send()) {
-								finish();
-								return;
-							}
-							pushed = 0;
+			var cursor = '0';
+			var key = 'zone:' + z;
+			function scanNext() {
+				r.hscan(key, cursor, 'COUNT', 50,
+				    function (err2, scanres) {
+					if (err2 || scanres === null) {
+						finish();
+						return;
+					}
+					cursor = scanres[0];
+					var zrecs = scanres[1];
+					if (!processAxfrZrecs(zrecs))
+						return;
+					if (cursor === '0') {
+						finish();
+						return;
+					}
+					scanNext();
+				});
+			}
+			scanNext();
+		}
+
+		function processAxfrZrecs(zrecs) {
+			for (i = 0; i < zrecs.length; i += 2) {
+				var name = zrecs[i];
+				var recs = JSON.parse(zrecs[i + 1]);
+				assert.arrayOfObject(recs);
+				var trecs;
+				while (recs.length > 0) {
+					trecs = recs.slice(0, 20);
+					recs = recs.slice(20);
+					self.addAnswers(q, trecs,
+					    name + '.' + z);
+					pushed += trecs.length;
+					if (pushed > MAX_ANS_PER_MSG) {
+						if (!q.send()) {
+							finish();
+							return (false);
 						}
+						pushed = 0;
 					}
 				}
-				finish();
-			});
+			}
+			return (true);
 		}
 	});
 };
diff --git a/package.json b/package.json
index 8521ef6..909c258 100644
--- a/package.json
+++ b/package.json
@@ -23,26 +23,26 @@
     "tape": "^4.2.1"
   },
   "dependencies": {
-    "assert-plus": "0.1.5",
-    "bunyan": "1.5.1",
-    "changefeed": "1.2.0",
-    "cueball": "2.2.6",
+    "assert-plus": "1.0.0",
+    "bunyan": "1.8.12",
+    "changefeed": "1.4.0",
+    "cueball": "2.9.0",
     "dashdash": "1.10.1",
     "deep-equal": "1.0.1",
     "ipaddr.js": "1.0.3",
-    "jsprim": "1.2.2",
-    "ldapjs": "1.0.0",
+    "jsprim": "2.0.0",
+    "ldapjs": "1.0.2",
     "lru-cache": "4.1.5",
-    "mooremachine": "2.1.0",
-    "mname": "1.3.5",
-    "redis": "2.1.0",
+    "mooremachine": "2.2.1",
+    "mname": "1.5.0",
+    "ioredis": "3.2.2",
     "restify": "4.3.0",
     "restify-clients": "1.6.0",
     "restify-errors": "4.3.0",
     "sdc-scripts": "git+https://github.com/joyent/sdc-scripts.git#deefaef587ed3bee2706cb6e53ee3468e682932e",
     "sprintf-js": "1.0.3",
     "triton-tags": "1.2.2",
-    "uuid": "2.0.1",
-    "vasync": "1.6.3"
+    "uuid": "3.3.2",
+    "vasync": "2.2.0"
   }
 }
diff --git a/sapi_manifests/cns/template b/sapi_manifests/cns/template
index 9497a1d..5c527fc 100644
--- a/sapi_manifests/cns/template
+++ b/sapi_manifests/cns/template
@@ -48,7 +48,9 @@
 	"min_notify_interval": {{{min_notify_interval}}},
 {{/min_notify_interval}}
 
-	"redis_opts": {},
+	"redis_opts": {
+		"dropBufferSupport": true
+	},
 
 	"binder_domain": "binder.{{{datacenter_name}}}.{{{dns_domain}}}",
 
diff --git a/server.js b/server.js
index 84be232..783d177 100644
--- a/server.js
+++ b/server.js
@@ -6,7 +6,7 @@
  * Copyright (c) 2015, Joyent, Inc.
  */
 
-var redis = require('redis');
+var redis = require('ioredis');
 var bunyan = require('bunyan');
 var config = require('./lib/config');
 var DNSServer = require('./lib/dns-server');
@@ -52,8 +52,9 @@ var redisPool = new cueball.ConnectionPool({
 		var c = redis.createClient({
 			host: backend.address,
 			port: backend.port,
-			enable_offline_queue: false,
-			max_attempts: 1
+			enableOfflineQueue: false,
+			connectTimeout: 30000,
+			dropBufferSupport: true
 		});
 		c.destroy = function () {
 			c.end(false);
diff --git a/updater.js b/updater.js
index 279db67..b33e3fb 100644
--- a/updater.js
+++ b/updater.js
@@ -6,7 +6,7 @@
  * Copyright (c) 2015, Joyent, Inc.
  */
 
-var redis = require('redis');
+var redis = require('ioredis');
 var bunyan = require('bunyan');
 var cueball = require('cueball');
 var util = require('util');
@@ -39,7 +39,7 @@ var conf = config.parse(confPath);
 var CF_REAP_TIME = 3600 * 12;
 var FALLBACK_REAP_TIME = 40;
 
-var client = redis.createClient(conf.redis_opts);
+var client = new redis.createClient(conf.redis_opts);
 
 var log = bunyan.createLogger({name: 'cns',
     level: process.env.LOGLEVEL || 'debug'});
-- 
2.21.0

