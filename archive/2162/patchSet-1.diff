commit 7926ac3e7eb3bf0defbb4d15ae9cf8da9d3d6d2e (refs/changes/62/2162/1)
Author: Marsell Kukuljevic <marsell@joyent.com>
Date:   2017-06-29T00:22:17+12:00 (2 years, 3 months ago)
    
    PUBAPI-1412: Stale data left behind between test runs
    PUBAPI-1413: Teardown isn't propagating errors

diff --git a/test/account.test.js b/test/account.test.js
index c1e73a9..c23547d 100644
--- a/test/account.test.js
+++ b/test/account.test.js
@@ -158,7 +158,8 @@ test('PutAccount OK', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/analytics.test.js b/test/analytics.test.js
index e5387fb..c63a5f3 100644
--- a/test/analytics.test.js
+++ b/test/analytics.test.js
@@ -751,7 +751,8 @@ test('DeleteInstrumentation OK - clone', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/auth.test.js b/test/auth.test.js
index 99c22c1..2ae9e3a 100644
--- a/test/auth.test.js
+++ b/test/auth.test.js
@@ -696,27 +696,17 @@ test('get /:account role-tag - other', function (t) {
 });
 
 
-test('cleanup sdcAccountResources', function (t) {
-    var id = CLIENT.account.uuid;
-    CLIENT.ufds.listResources(id, function (err, resources) {
+test('cleanup resources', function (t) {
+    common.deleteResources(CLIENT, function (err) {
         t.ifError(err);
-        vasync.forEachPipeline({
-            inputs: resources,
-            func: function (resource, _cb) {
-                CLIENT.ufds.deleteResource(id, resource.uuid, function (er2) {
-                    return _cb();
-                });
-            }
-        }, function (er3, results) {
-            t.ifError(er3);
-            t.end();
-        });
+        t.end();
     });
 });
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/common.js b/test/common.js
index 128bf13..aaf99d5 100644
--- a/test/common.js
+++ b/test/common.js
@@ -208,24 +208,101 @@ function _ufds() {
 }
 
 
-function clientTeardown(client, cb) {
-    client.close();
-    client.mahi.close();
+/*
+ * Destroy all data associated with a client.
+ */
+function clientDataTeardown(client, cb) {
+    assert.object(client, 'client');
+    assert.func(cb, 'callback');
 
     var ufds = client.ufds;
+    var dc = CONFIG.datacenter_name;
+    var account = client.account;
+    var id = account.uuid;
+    var sub = account.account; // has parent account UUID if this acc a subuser
 
-    // we ignore errors until the end and try to clean up as much as possible
-    ufds.deleteKey(client.login, 'id_rsa', function (err) {
-        ufds.deleteUser(client.login, function (err2) {
-            ufds.client.removeAllListeners('close');
-            ufds.client.removeAllListeners('timeout');
-            ufds.removeAllListeners('timeout');
+    var pollDelay = 500; // in ms
 
-            ufds.close(function () {
-                return cb(err || err2);
-            });
-        });
+    ufds.deleteKey(account, 'id_rsa', function deleteKeyCb(err) {
+        if (err) {
+            cb(err);
+            return;
+        }
+
+        pollKeyDeletion();
     });
+
+    var pollKeyCount = 10;
+    function pollKeyDeletion() {
+        --pollKeyCount;
+        if (pollKeyCount === 0) {
+            cb(new Error('Key failed to delete in time'));
+            return;
+        }
+
+        ufds.getKey(account, 'id_rsa', function getKeyCb(err) {
+            if (err) {
+                if (err.restCode !== 'ResourceNotFound') {
+                    cb(err);
+                    return;
+                }
+
+                if (!sub) {
+                    ufds.deleteDcLocalConfig(id, dc, pollConfigDeletion);
+                } else {
+                    ufds.deleteUser(account, cb);
+                }
+                return;
+            }
+
+            setTimeout(pollKeyDeletion, pollDelay);
+        });
+    }
+
+    var pollConfigCount = 10;
+    function pollConfigDeletion(err) {
+        if (err) {
+            cb(err);
+            return;
+        }
+
+        --pollConfigCount;
+        if (pollConfigCount === 0) {
+            cb(new Error('Config failed to delete in time'));
+            return;
+        }
+
+        ufds.deleteDcLocalConfig(id, dc, function delConfigCb(err2) {
+            if (err2) {
+                if (err2.restCode !== 'ResourceNotFound') {
+                    cb(err2);
+                } else {
+                    ufds.deleteUser(account, cb);
+                }
+                return;
+            }
+
+            setTimeout(pollConfigDeletion, pollDelay);
+        });
+    }
+}
+
+
+/*
+ * Close all client connections.
+ */
+function clientClose(client, cb) {
+    assert.object(client, 'client');
+    assert.func(cb, 'callback');
+
+    client.close();
+    client.mahi.close();
+
+    var ufds = client.ufds;
+    ufds.client.removeAllListeners('close');
+    ufds.client.removeAllListeners('timeout');
+    ufds.removeAllListeners('timeout');
+    ufds.close(cb);
 }
 
 
@@ -450,7 +527,7 @@ function waitForAccountConfigReady(client, cb) {
     assert.func(cb, 'callback');
 
     var nbTries = 0;
-    var MAX_NB_TRIES = 10;
+    var MAX_NB_TRIES = 20;
     var TRY_DELAY_IN_MS = 1000;
 
     function getConfig() {
@@ -659,9 +736,9 @@ function setup(opts, cb) {
 
 
 function teardown(clients, server, cb) {
-    assert.object(clients);
-    assert.object(server);
-    assert.func(cb);
+    assert.object(clients, 'clients');
+    assert.object(server, 'server');
+    assert.func(cb, 'callback');
 
     var userClient      = clients.user;
     var subUserClient   = clients.subuser;
@@ -670,21 +747,40 @@ function teardown(clients, server, cb) {
     var ufds    = userClient.ufds;
     var accUuid = userClient.account.uuid;
 
-    // XXX No! Don't ignore errors. Fix this to handle errors.
-    // ignore all errors; try to clean up as much as possible
-    ufds.deleteRole(accUuid, userClient.role.uuid, function () {
-        ufds.deletePolicy(accUuid, userClient.policy.uuid, function () {
-            deletePackage(userClient, SDC_128_PACKAGE, function () {
-                clientTeardown(subUserClient, function () {
-                    clientTeardown(userClient, function () {
-                        clientTeardown(otherUserClient, function () {
-                            if (server.close) {
-                                server.close(cb);
-                            } else {
-                                cb();
-                            }
-                        });
-                    });
+    vasync.pipeline({ funcs: [
+        function (_, next) {
+            ufds.deleteRole(accUuid, userClient.role.uuid, next);
+        },
+        function (_, next) {
+            ufds.deletePolicy(accUuid, userClient.policy.uuid, next);
+        },
+        function (_, next) {
+            deletePackage(userClient, SDC_128_PACKAGE, next);
+        },
+        function (_, next) {
+            clientDataTeardown(subUserClient, next);
+        },
+        function (_, next) {
+            clientDataTeardown(userClient, next);
+        },
+        function (_, next) {
+            clientDataTeardown(otherUserClient, next);
+        }
+    ]}, function teardownCb(err) {
+        // we defer errors here to finish(), because otherwise it's likely
+        // we'll hang
+        clientClose(subUserClient, function (err2) {
+            clientClose(userClient, function (err3) {
+                clientClose(otherUserClient, function (err4) {
+                    function finish(err5) {
+                        cb(err || err2 || err3 || err4 || err5);
+                    }
+
+                    if (server.close) {
+                        server.close(finish);
+                    } else {
+                        finish();
+                    }
                 });
             });
         });
@@ -740,6 +836,25 @@ function deletePackage(client, pkg, cb) {
 }
 
 
+function deleteResources(client, cb) {
+    var id = client.account.uuid;
+
+    client.ufds.listResources(id, function listResourcesCb(err, resources) {
+        if (err) {
+            cb(err);
+            return;
+        }
+
+        vasync.forEachPipeline({
+            inputs: resources,
+            func: function (resource, next) {
+                client.ufds.deleteResource(id, resource.uuid, next);
+            }
+        }, cb);
+    });
+}
+
+
 function getHeadnode(client, cb) {
     client.cnapi.listServers({ extras: 'sysinfo' }, function (err, servers) {
         if (err) {
@@ -914,6 +1029,8 @@ module.exports = {
     getHeadnode: getHeadnode,
     getTestImage: getTestImage,
 
+    deleteResources: deleteResources,
+
     // Some NAPI client conveniences
     napiDeleteNicTagByName: napiDeleteNicTagByName,
     napiDeleteNetworkByName: napiDeleteNetworkByName,
diff --git a/test/datacenters.test.js b/test/datacenters.test.js
index e5b49da..3516bf9 100644
--- a/test/datacenters.test.js
+++ b/test/datacenters.test.js
@@ -73,7 +73,8 @@ test('GetDatacenter 404', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/fabrics.test.js b/test/fabrics.test.js
index d31d951..f35cd1f 100644
--- a/test/fabrics.test.js
+++ b/test/fabrics.test.js
@@ -1124,7 +1124,8 @@ test('teardown', TEST_OPTS, function (tt) {
     });
 
     tt.test('client and server teardown', function (t) {
-        common.teardown(CLIENTS, SERVER, function () {
+        common.teardown(CLIENTS, SERVER, function (err) {
+            t.ifError(err, 'teardown success');
             t.end();
         });
     });
diff --git a/test/images.70.test.js b/test/images.70.test.js
index c0660b8..f92127f 100644
--- a/test/images.70.test.js
+++ b/test/images.70.test.js
@@ -237,7 +237,8 @@ test('GetImage 404', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/images.80.test.js b/test/images.80.test.js
index 61d483a..03bf04f 100644
--- a/test/images.80.test.js
+++ b/test/images.80.test.js
@@ -149,7 +149,8 @@ test('Search image type, results', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/images.test.js b/test/images.test.js
index 680ad96..12aa442 100644
--- a/test/images.test.js
+++ b/test/images.test.js
@@ -229,7 +229,8 @@ test('GetImage 404', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/keys.test.js b/test/keys.test.js
index a5d6f46..f35778c 100644
--- a/test/keys.test.js
+++ b/test/keys.test.js
@@ -309,7 +309,8 @@ test('GetKey 404', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/machines.70.test.js b/test/machines.70.test.js
index 75b0b8a..238b6f9 100644
--- a/test/machines.70.test.js
+++ b/test/machines.70.test.js
@@ -288,7 +288,8 @@ test('Delete KVM tests', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/machines.71.test.js b/test/machines.71.test.js
index d458b8b..ef8c541 100644
--- a/test/machines.71.test.js
+++ b/test/machines.71.test.js
@@ -356,7 +356,8 @@ test('Delete tests', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/machines.72.test.js b/test/machines.72.test.js
index ef37bb9..175d420 100644
--- a/test/machines.72.test.js
+++ b/test/machines.72.test.js
@@ -456,8 +456,17 @@ test('Delete sub-user machine tests', function (t) {
 });
 
 
+test('cleanup resources', function (t) {
+    common.deleteResources(CLIENT, function (err) {
+        t.ifError(err);
+        t.end();
+    });
+});
+
+
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/machines.73.test.js b/test/machines.73.test.js
index 6113169..7978aa2 100644
--- a/test/machines.73.test.js
+++ b/test/machines.73.test.js
@@ -181,7 +181,8 @@ test('Delete tests', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/machines.80.test.js b/test/machines.80.test.js
index 38f5efe..0c9287b 100644
--- a/test/machines.80.test.js
+++ b/test/machines.80.test.js
@@ -143,7 +143,8 @@ test('Delete tests', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/machines.test.js b/test/machines.test.js
index 2926df1..6516557 100644
--- a/test/machines.test.js
+++ b/test/machines.test.js
@@ -1324,11 +1324,13 @@ test('Delete packageless/nicless machine', deleteMachine);
 
 
 test('teardown', function (t) {
-    common.deletePackage(CLIENT, SDC_256, function () {
-        common.deletePackage(CLIENT, SDC_256_INACTIVE, function () {
-            common.deletePackage(CLIENT, SDC_128_LINUX, function () {
-                common.deletePackage(CLIENT, SDC_512, function () {
-                    common.teardown(CLIENTS, SERVER, function () {
+    common.deletePackage(CLIENT, SDC_256, function (err) {
+        common.deletePackage(CLIENT, SDC_256_INACTIVE, function (err2) {
+            common.deletePackage(CLIENT, SDC_128_LINUX, function (err3) {
+                common.deletePackage(CLIENT, SDC_512, function (err4) {
+                    common.teardown(CLIENTS, SERVER, function (err5) {
+                        t.ifError(err||err2||err3||err4||err5,
+                                'teardown success');
                         t.end();
                     });
                 });
diff --git a/test/nics.test.js b/test/nics.test.js
index c6fa81b..b40b970 100644
--- a/test/nics.test.js
+++ b/test/nics.test.js
@@ -1577,7 +1577,8 @@ test('nics', function (tt) {
         deleteFixtures(t, fixtures, function (err) {
             t.ifError(err, 'deleteFixtures');
 
-            common.teardown(CLIENTS, CLOUDAPI_SERVER, function () {
+            common.teardown(CLIENTS, CLOUDAPI_SERVER, function (err2) {
+                t.ifError(err2, 'teardown success');
                 t.end();
             });
         });
diff --git a/test/packages.test.js b/test/packages.test.js
index 94ed0a9..f51b9e2 100644
--- a/test/packages.test.js
+++ b/test/packages.test.js
@@ -295,7 +295,8 @@ test('teardown', function (t) {
         common.deletePackage(CLIENT, SDC_512_NO_PERMISSION, function (err2) {
             t.ifError(err2);
 
-            common.teardown(CLIENTS, SERVER, function () {
+            common.teardown(CLIENTS, SERVER, function (err3) {
+                t.ifError(err3, 'teardown success');
                 t.end();
             });
         });
diff --git a/test/populate_network.test.js b/test/populate_network.test.js
index c5b7a59..039287c 100644
--- a/test/populate_network.test.js
+++ b/test/populate_network.test.js
@@ -224,7 +224,8 @@ test('teardown', function (t) {
     CLIENT.ufds.deleteKey('admin', KEY_NAME, function (err) {
         t.ifError(err);
 
-        common.teardown(CLIENTS, SERVER, function () {
+        common.teardown(CLIENTS, SERVER, function (err2) {
+            t.ifError(err2, 'teardown success');
             t.end();
         });
     });
diff --git a/test/services.test.js b/test/services.test.js
index 872131b..4b3242f 100644
--- a/test/services.test.js
+++ b/test/services.test.js
@@ -47,7 +47,8 @@ test('ListDatacenters OK', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/tests.test.js b/test/tests.test.js
index 13d53e7..5e8b4a5 100644
--- a/test/tests.test.js
+++ b/test/tests.test.js
@@ -58,7 +58,8 @@ test('uncaughtException handler OK', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
diff --git a/test/users.test.js b/test/users.test.js
index 580ab76..0b9a101 100644
--- a/test/users.test.js
+++ b/test/users.test.js
@@ -1126,7 +1126,8 @@ test('delete another user', function (t) {
 
 
 test('teardown', function (t) {
-    common.teardown(CLIENTS, SERVER, function () {
+    common.teardown(CLIENTS, SERVER, function (err) {
+        t.ifError(err, 'teardown success');
         t.end();
     });
 });
