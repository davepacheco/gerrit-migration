From 50b44d595488e045612e2c6f6ec4dbce1d84ec55 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Mon, 23 Oct 2017 09:15:55 +0200
Subject: [PATCH] AGENT-1084 cn-agent install_agent task creates nested agents
 backups

---
 lib/tasks/agent_install.js | 147 +++++++++++++++++++++++++++++--------
 package.json               |   2 +-
 2 files changed, 118 insertions(+), 31 deletions(-)

diff --git a/lib/tasks/agent_install.js b/lib/tasks/agent_install.js
index 73fecc1..da61b66 100644
--- a/lib/tasks/agent_install.js
+++ b/lib/tasks/agent_install.js
@@ -410,6 +410,14 @@ function start() {
     // of updating an existing one:
     var is_update = true;
 
+    // If install/update fails we want to remove the new agent directory and
+    // eventually restore a previous backup
+    var install_failed = false;
+    // Also, on these cases we want to return the original install error
+    // instead of any eventual errors removing the failed agent directory
+    // or restoring the backup:
+    var install_failed_err;
+
     // If the task has been created by cn-agent and sent to cn-agent-update,
     // it will contain both, package_file and package_name from the previous
     // iteration:
@@ -507,6 +515,43 @@ function start() {
                 return cb();
             });
         },
+        function cleanupPreviousBackup(cb) {
+            var backup_dir = '/opt/smartdc/agents/lib/node_modules/' +
+                    package_name + '.updating-to.' + image_uuid;
+            fs.stat(backup_dir, function (er) {
+                if (er) {
+                    cb(er);
+                    return;
+                }
+
+                var cmd = '/usr/bin/rm';
+                var args = [
+                    '-rf',
+                    backup_dir
+                ];
+
+                self.log.debug({
+                    backup_dir: backup_dir,
+                    cmdline: cmd + ' ' + args.join(' ')
+                }, 'Removing backup dir from previous execution');
+
+                execFile(cmd, args, function (err, stdout, stderr) {
+                    if (err) {
+                        self.log.error({
+                            err: err
+                        }, 'failed to remove backup');
+                        cb(err);
+                        return;
+                    }
+                    self.log.debug({
+                        stdout: stdout,
+                        stderr: stderr
+                    }, 'backup removed');
+                    cb();
+                    return;
+                });
+            });
+        },
         function backupAgent(cb) {
             if (!do_update || !is_update) {
                 return cb();
@@ -535,45 +580,87 @@ function start() {
         },
         function installPackage(cb) {
             if (!do_update) {
-                return cb();
+                cb();
+                return;
             }
             // In the case we have an error during the installPackages phase,
             // we'll restore the agent backup before we bubble the error up:
-            return apm.installPackages([package_file], function (err) {
+            apm.installPackages([package_file], function (err) {
                 if (err) {
                     self.log.error({
                         err: err
                     }, 'failed to install agent package');
-                    if (!is_update) {
-                        return cb(err);
+                    install_failed = true;
+                    install_failed_err = err;
+                }
+                cb();
+            });
+        },
+        function cleanupFailedInstall(cb) {
+            if (!install_failed) {
+                cb();
+                return;
+            }
+            var cmd = '/usr/bin/rm';
+            var args = [
+                '-rf',
+                '/opt/smartdc/agents/lib/node_modules/' + package_name
+            ];
+
+            self.log.debug({
+                cmdline: cmd + ' ' + args.join(' ')
+            }, 'Removing failed install dir');
+
+            execFile(cmd, args, function (err, stdout, stderr) {
+                if (err) {
+                    self.log.error({
+                        err: err
+                    }, 'failed to remove failed install dir');
+                    cb(err);
+                    return;
+                }
+                self.log.debug({
+                    stdout: stdout,
+                    stderr: stderr
+                }, 'failed install dir removed');
+                cb();
+                return;
+            });
+        },
+        function restoreBackup(cb) {
+            if (!install_failed || !is_update) {
+                cb();
+                return;
+            }
+            self.log.info('restoring agent backup');
+            var prefix = '/opt/smartdc/agents/lib/node_modules/';
+            var cmd = '/usr/bin/cp';
+            var args = [
+                '-rP',
+                prefix + package_name + '.updating-to.' + image_uuid,
+                prefix + package_name
+            ];
+            self.log.debug({
+                cmdline: cmd + ' ' + args.join(' ')
+            }, 'executing');
+            execFile(cmd, args, function (er2, stdout, stderr) {
+                if (er2) {
+                    self.log.error({
+                        err: er2
+                    }, 'failed to restore agent backup');
+                    // Still, we'll return the previous error here:
+                    if (install_failed_err) {
+                        cb(install_failed_err);
+                    } else {
+                        cb(er2);
                     }
-                    self.log.info('restoring agent backup');
-                    var prefix = '/opt/smartdc/agents/lib/node_modules/';
-                    var cmd = '/usr/bin/cp';
-                    var args = [
-                        '-rP',
-                        prefix + package_name + '.updating-to.' + image_uuid,
-                        prefix + package_name
-                    ];
-                    self.log.debug({
-                        cmdline: cmd + ' ' + args.join(' ')
-                    }, 'executing');
-                    return execFile(cmd, args, function (er2, stdout, stderr) {
-                        if (er2) {
-                            self.log.error({
-                                err: er2
-                            }, 'failed to restore agent backup');
-                            // Still, we'll return the previous error here:
-                            return cb(err);
-                        }
-                        self.log.debug({
-                            stdout: stdout,
-                            stderr: stderr
-                        }, 'restore agent backup');
-                        return cb(err);
-                    });
+                    return;
                 }
-                return cb();
+                self.log.debug({
+                    stdout: stdout,
+                    stderr: stderr
+                }, 'restore agent backup');
+                cb(install_failed_err);
             });
         },
         function cleanupBackup(cb) {
diff --git a/package.json b/package.json
index 779ada8..8c123f6 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cn-agent",
   "description": "Triton Compute Node Agent",
-  "version": "2.0.0",
+  "version": "2.0.1",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

