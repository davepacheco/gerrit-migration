commit dc56a475a764f91cc6b2d1a4c923ff4f68251a25 (refs/changes/83/2383/1)
Author: Nick Zivkovic <nick.zivkovic@joyent.com>
Date:   2017-08-11T23:31:58+00:00 (2 years, 2 months ago)
    
    joyent/node-vasync#35 pipeline does not pass rv-object to final callback
    joyent/node-vasync#36 should bump version and update changes.md

diff --git a/CHANGES.md b/CHANGES.md
index e25cb15..d8b1f04 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -4,6 +4,12 @@
 
 None yet.
 
+## v2.1.0
+
+* New async-compatible functions (filter, filterLimit, filterSeries).
+
+* Fixed a bug related to pipeline and forEachPipeline.
+
 ## v2.0.0
 
 **Breaking Changes:**
diff --git a/lib/vasync.js b/lib/vasync.js
index b3b7f7e..5676310 100644
--- a/lib/vasync.js
+++ b/lib/vasync.js
@@ -162,7 +162,7 @@ function pipeline(args, callback)
 	    'callback': callback,
 	    'args': { impl: 'pipeline', uarg: args['arg'] },
 	    'stop_when': 'error',
-	    'res_type': 'values'
+	    'res_type': 'rv'
 	};
 	return (waterfall_impl(opts));
 }
@@ -641,7 +641,7 @@ function waterfall_impl(opts)
 	mod_assert.ok(arguments.length == 1,
 	    'Function "waterfall_impl" must take only 1 arg');
 	mod_assert.ok(opts.res_type === 'values' ||
-	    opts.res_type === 'array',
+	    opts.res_type === 'array' || opts.res_type == 'rv',
 	    '"opts.res_type" must either be "value" or "array"');
 	mod_assert.ok(opts.stop_when === 'error' ||
 	    opts.stop_when === 'success',
@@ -697,21 +697,27 @@ function waterfall_impl(opts)
 		    opts.args.impl === 'waterfall') {
 			args = Array.prototype.slice.call(arguments, 2);
 			res_key = 'results';
+			entry['results'] = args;
 		} else if (opts.args.impl === 'pipeline') {
 			args = [ opts.args.uarg ];
 			res_key = 'result';
+			entry['result'] = arguments[2];
 		}
 
 		mod_assert.equal(entry['status'], 'pending',
 		    'status should be pending');
 		entry['status'] = err ? 'fail' : 'ok';
 		entry['err'] = err;
-		entry[res_key] = args;
 
-		if (err)
+		if (err) {
 			rv['nerrors']++;
-		else
-			rv['successes'].push(args);
+		} else {
+			if (opts.args.impl === 'pipeline') {
+				rv['successes'].push(entry[res_key]);
+			} else {
+				rv['successes'].push(args);
+			}
+		}
 
 		if ((opts.stop_when === 'error' && err) ||
 		    (opts.stop_when === 'success' &&
@@ -725,6 +731,8 @@ function waterfall_impl(opts)
 					callback.apply(null, args);
 				} else if (opts.res_type === 'array') {
 					callback(err, args);
+				} else if (opts.res_type === 'rv') {
+					callback(err, rv);
 				}
 			}
 		} else {
diff --git a/package.json b/package.json
index 7f7adb9..cf4acb2 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
 	"name": "vasync",
-	"version": "2.0.0",
+	"version": "2.1.0",
 	"description": "utilities for observable asynchronous control flow",
 	"main": "./lib/vasync.js",
 	"repository": {
