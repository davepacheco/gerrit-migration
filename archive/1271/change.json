{"project":"joyent/electric-moray","branch":"master","topic":"MANTA-2169","id":"I66ccb6343282201b2a99cc021287e575dbc1535b","number":"1271","subject":"MANTA-2169 Support multipart upload of a single file to Manta","owner":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"url":"https://cr.joyent.us/1271","commitMessage":"MANTA-2169 Support multipart upload of a single file to Manta\n","createdOn":1484701840,"lastUpdated":1499796480,"open":false,"status":"ABANDONED","comments":[{"timestamp":1484701840,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Uploaded patch set 1."},{"timestamp":1484701898,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1484846684,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Topic set to MANTA-2169"},{"timestamp":1485195128,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Uploaded patch set 2."},{"timestamp":1485195157,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing-1\n\n(1 comment)\n\n\"make check\" exited with status 2"},{"timestamp":1485195514,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Uploaded patch set 3."},{"timestamp":1485195560,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1485279788,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Uploaded patch set 4."},{"timestamp":1485279824,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1485371835,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 4:\n\n(7 comments)"},{"timestamp":1499796480,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Abandoned\n\nAddressed by MORAY-394."}],"currentPatchSet":{"number":"4","revision":"66ccb6343282201b2a99cc021287e575dbc1535b","parents":["880a41968f9ba22c24060feb3d09864380e1fee3"],"ref":"refs/changes/71/1271/4","uploader":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"createdOn":1485279788,"author":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1485279824,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/schema/manta.js","line":8,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It would be nice to add a comment in this file explaining what it is (which I think is the hash function for each bucket)."},{"file":"lib/schema/manta.js","line":37,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It would be nice to have a comment here referring to the  description of what the keys represent that\u0027s in lib/server.js.\n\nI think you might want to use node-strsplit here.  JavaScript\u0027s split will chop off anything after a second colon.  Since this is non-trivial, it might be worth having a separate parseMultipartKey() function or something."},{"file":"lib/server.js","line":882,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Same note about strsplit() that I mentioned in lib/schema.js."},{"file":"lib/server.js","line":917,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It feels like electric-moray really shouldn\u0027t know about MPU.  I understand why we want a sanity check (and I think we talked about it) so that we find out if we create new dependencies on batch(), but it would be nice if the implementation didn\u0027t assume so much about the consumer.\n\nFor example, I could imagine having batch() work by iterating the requests, making sure they\u0027re all PUTs, pulling out the \"key\", using schema.transformKey(), making sure it gets the same result for all of them, and then running client.batch().  In the future, we could extend this to other operations that batch() supports, not just PUTs.\n\nIt looks like \"schema.js\" is currently wrapped by \"ring.js\".  There\u0027s a Ring.getNode() function that\u0027s close to what you want, but it only takes one bucket and key.  What do you think about adding Ring.getNodeBatch, which takes an array of (bucket, key) pairs, does the transformKey, ensures that they\u0027re all the same, and then gets the node?  This way we\u0027ll ensure those operations all go through Ring, we can commonize logging, etc."},{"file":"lib/server.js","line":937,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"If the return value isn\u0027t used anywhere, I\u0027d suggest leaving it out."},{"file":"lib/server.js","line":952,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"\"debugger\" left in."},{"file":"lib/server.js","line":986,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Is the return value used anywhere?"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/dtrace.js","type":"MODIFIED","insertions":7,"deletions":-1},{"file":"lib/schema/manta.js","type":"MODIFIED","insertions":24,"deletions":-18},{"file":"lib/server.js","type":"MODIFIED","insertions":122,"deletions":-12}],"sizeInsertions":153,"sizeDeletions":-31},"patchSets":[{"number":"1","revision":"3b1b92e9ee130994ce7fabfbf61d0bfc67c9793e","parents":["880a41968f9ba22c24060feb3d09864380e1fee3"],"ref":"refs/changes/71/1271/1","uploader":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"createdOn":1484701840,"author":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1484701898,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":8,"deletions":0},{"file":"lib/server.js","type":"MODIFIED","insertions":54,"deletions":-2}],"sizeInsertions":54,"sizeDeletions":-2},{"number":"2","revision":"0c9aa0839931873ea5e0739c92d98361942aa723","parents":["880a41968f9ba22c24060feb3d09864380e1fee3"],"ref":"refs/changes/71/1271/2","uploader":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"createdOn":1485195128,"author":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1485195157,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/schema/manta.js","line":39,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"warning: identifer path hides an identifier in a parent scope"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/dtrace.js","type":"MODIFIED","insertions":7,"deletions":-1},{"file":"lib/schema/manta.js","type":"MODIFIED","insertions":24,"deletions":-18},{"file":"lib/server.js","type":"MODIFIED","insertions":117,"deletions":-12}],"sizeInsertions":148,"sizeDeletions":-31},{"number":"3","revision":"39754b41041112471f7036088700fdf291e7a602","parents":["880a41968f9ba22c24060feb3d09864380e1fee3"],"ref":"refs/changes/71/1271/3","uploader":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"createdOn":1485195514,"author":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1485195560,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/dtrace.js","type":"MODIFIED","insertions":7,"deletions":-1},{"file":"lib/schema/manta.js","type":"MODIFIED","insertions":24,"deletions":-18},{"file":"lib/server.js","type":"MODIFIED","insertions":117,"deletions":-12}],"sizeInsertions":148,"sizeDeletions":-31},{"number":"4","revision":"66ccb6343282201b2a99cc021287e575dbc1535b","parents":["880a41968f9ba22c24060feb3d09864380e1fee3"],"ref":"refs/changes/71/1271/4","uploader":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"createdOn":1485279788,"author":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1485279824,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/schema/manta.js","line":8,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It would be nice to add a comment in this file explaining what it is (which I think is the hash function for each bucket)."},{"file":"lib/schema/manta.js","line":37,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It would be nice to have a comment here referring to the  description of what the keys represent that\u0027s in lib/server.js.\n\nI think you might want to use node-strsplit here.  JavaScript\u0027s split will chop off anything after a second colon.  Since this is non-trivial, it might be worth having a separate parseMultipartKey() function or something."},{"file":"lib/server.js","line":882,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Same note about strsplit() that I mentioned in lib/schema.js."},{"file":"lib/server.js","line":917,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It feels like electric-moray really shouldn\u0027t know about MPU.  I understand why we want a sanity check (and I think we talked about it) so that we find out if we create new dependencies on batch(), but it would be nice if the implementation didn\u0027t assume so much about the consumer.\n\nFor example, I could imagine having batch() work by iterating the requests, making sure they\u0027re all PUTs, pulling out the \"key\", using schema.transformKey(), making sure it gets the same result for all of them, and then running client.batch().  In the future, we could extend this to other operations that batch() supports, not just PUTs.\n\nIt looks like \"schema.js\" is currently wrapped by \"ring.js\".  There\u0027s a Ring.getNode() function that\u0027s close to what you want, but it only takes one bucket and key.  What do you think about adding Ring.getNodeBatch, which takes an array of (bucket, key) pairs, does the transformKey, ensures that they\u0027re all the same, and then gets the node?  This way we\u0027ll ensure those operations all go through Ring, we can commonize logging, etc."},{"file":"lib/server.js","line":937,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"If the return value isn\u0027t used anywhere, I\u0027d suggest leaving it out."},{"file":"lib/server.js","line":952,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"\"debugger\" left in."},{"file":"lib/server.js","line":986,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Is the return value used anywhere?"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/dtrace.js","type":"MODIFIED","insertions":7,"deletions":-1},{"file":"lib/schema/manta.js","type":"MODIFIED","insertions":24,"deletions":-18},{"file":"lib/server.js","type":"MODIFIED","insertions":122,"deletions":-12}],"sizeInsertions":153,"sizeDeletions":-31}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}]}