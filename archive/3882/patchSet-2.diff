commit 727940cd820dec05191d7c3e6c3f1fe7a1938e59 (refs/changes/82/3882/2)
Author: Brittany Wald <brittany.wald@joyent.com>
Date:   2018-04-27T21:48:21+00:00 (1 year, 5 months ago)
    
    MANTA-3671 clean up unprofessional language

diff --git a/lib/common.js b/lib/common.js
index c4d3aed..36a1645 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 var EventEmitter = require('events').EventEmitter;
@@ -173,8 +173,9 @@ HttpRequest.isRestrictedWrite = function isRestrictedWrite() {
 
 function createMetadata(req, type, cb) {
     var prev = req.metadata || {};
-    // Override the UpdateMetadata type, as this flows in via PUT Object
-    // path (ghetto...)
+    /*
+     * Override the UpdateMetadata type, as this flows in via PUT Object path.
+     */
     if (prev.type === 'directory')
         type = 'directory';
 
@@ -324,13 +325,14 @@ function ensureEntryExists(req, res, next) {
 
 
 function ensureNotDirectory(req, res, next) {
-    // This is super ghetto, but we allow overwrites of directories
-    // (which means we follow the object path) if the request is either
-    // from a marlin proxy or it's only a metadata update.
     if (!req.metadata) {
         next(new DirectoryOperationError(req));
     } else if (req.metadata.type === 'directory') {
         if (req.metadata.marlinSpoof || req.query.metadata) {
+            /*
+             * This is either a metadata update or a request from a Marlin
+             * proxy, so we allow the directory to be overwritten.
+             */
             next();
         } else {
             next(new DirectoryOperationError(req));
diff --git a/lib/obj.js b/lib/obj.js
index 173fee2..af04a2b 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 //
@@ -194,11 +194,12 @@ function getSharkInfo(req, hostname) {
 function parseArguments(req, res, next) {
     if (req.metadata && req.metadata.type === 'directory') {
 
-        // This is ghetto, but clients often inadvertently set the content-type
-        // header on PUT, so if it's a directory we assume them to be
-        // well-intentioned, but stupid. So we just silently ignore that they
-        // changed it. This is not true of objects, so we don't help them out
-        // there.
+        /*
+         * Clients often inadvertently set the content-type header on PUT.  If
+         * it's a request for a directory we assume the client to be
+         * well-intentioned but confused, so we silently ignore that they
+         * changed the content-type header. We do not do this for objects.
+         */
         var _ct = req.headers['content-type'];
         if (_ct && _ct !== 'application/json; type=directory')
             req.headers['content-type'] = 'application/json; type=directory';
