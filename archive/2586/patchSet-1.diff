From ca1c83b283c99034dec48ffbed4d1dbd3e8e44a4 Mon Sep 17 00:00:00 2001
From: David Pacheco <dap@joyent.com>
Date: Fri, 15 Sep 2017 14:27:01 -0700
Subject: [PATCH] MORAY-435 moray-test-suite needs updating after recent
 changes

---
 README.md                    | 12 +++++++++++-
 test/helper.js               |  5 +++--
 test/invalid-buckets.test.js | 24 +++++++++++++++++++++++-
 test/invalid-fast.test.js    | 24 +++++++++++++++++++++++-
 4 files changed, 60 insertions(+), 5 deletions(-)

diff --git a/README.md b/README.md
index 2b8ca26..08117a2 100644
--- a/README.md
+++ b/README.md
@@ -5,7 +5,7 @@
 -->
 
 <!--
-    Copyright (c) 2016, Joyent, Inc.
+    Copyright (c) 2017, Joyent, Inc.
 -->
 
 # Moray test suite
@@ -53,6 +53,16 @@ by hand:
 
 ## Configuration
 
+The test suite supports both a standalone mode, in which the test runner is
+responsible for starting any Moray servers that it needs, and a remote mode, in
+which the test suite runs against an existing Moray server.  The remote mode
+exists primarily for flexibility during development, as it allows you to point
+the test suite at any network endpoint that speaks the Moray protocol.  That
+could be a proxy server, or an instrumented Moray, or a process in a deployed
+Manta system, for example.  However, the remote mode skips some tests that
+require multiple servers.  **Before integration, changes should pass the test
+suite in standalone mode.**
+
 The configuration file specifies:
 
 Property          | Type   | Example         | Meaning
diff --git a/test/helper.js b/test/helper.js
index 6a682fb..54b311f 100644
--- a/test/helper.js
+++ b/test/helper.js
@@ -142,7 +142,8 @@ function createServer(opts, cb) {
 
     env = jsprim.deepCopy(process.env);
     if (opts.portOverride) {
-        env['MORAY_TEST_EXTRA_ARGS'] = '-p ' + opts.portOverride;
+        env['MORAY_TEST_EXTRA_ARGS'] = '-p ' + opts.portOverride +
+            ' -k ' + (opts.portOverride + 1000);
     }
 
     cp = child.spawn('bash', [ '-c', process.env['MORAY_TEST_SERVER_RUN'] ], {
@@ -159,7 +160,7 @@ function createServer(opts, cb) {
 
     pt.on('data', function (c) {
         seen += c.toString('utf8');
-        if (!ready && /moray listening on \d+/.test(seen) &&
+        if (!ready && /moray listening on .*\d+/i.test(seen) &&
             /manatee ready/.test(seen)) {
             cp.stdout.unpipe(pt);
             ready = true;
diff --git a/test/invalid-buckets.test.js b/test/invalid-buckets.test.js
index b980e54..4343cc1 100644
--- a/test/invalid-buckets.test.js
+++ b/test/invalid-buckets.test.js
@@ -17,7 +17,7 @@
 
 var assert = require('assert-plus');
 var jsprim = require('jsprim');
-var test = require('tape');
+var tape = require('tape');
 var vasync = require('vasync');
 var VError = require('verror');
 
@@ -214,6 +214,28 @@ var BAD_BUCKETS = [
     }
 ];
 
+function test(name, setup) {
+    var server;
+
+    tape.test(name + ' - setup', function (t) {
+        helper.createServer(null, function (s) {
+            server = s;
+            t.end();
+        });
+    });
+
+    tape.test(name + ' - main', function (t) {
+        setup(t);
+    });
+
+    tape.test(name + ' - teardown', function (t) {
+        helper.cleanupServer(server, function () {
+            t.pass('closed');
+            t.end();
+        });
+    });
+}
+
 ///--- Tests
 
 
diff --git a/test/invalid-fast.test.js b/test/invalid-fast.test.js
index c79c304..0e29fa7 100644
--- a/test/invalid-fast.test.js
+++ b/test/invalid-fast.test.js
@@ -20,7 +20,7 @@
  */
 
 var assert = require('assert-plus');
-var test = require('tape');
+var tape = require('tape');
 var vasync = require('vasync');
 var VError = require('verror');
 
@@ -289,6 +289,28 @@ var RPC_ARG_COUNTS = [
     { method: 'version', count: 1 }
 ];
 
+function test(name, setup) {
+    var server;
+
+    tape.test(name + ' - setup', function (t) {
+        helper.createServer(null, function (s) {
+            server = s;
+            t.end();
+        });
+    });
+
+    tape.test(name + ' - main', function (t) {
+        setup(t);
+    });
+
+    tape.test(name + ' - teardown', function (t) {
+        helper.cleanupServer(server, function () {
+            t.pass('closed');
+            t.end();
+        });
+    });
+}
+
 
 ///--- Tests
 
-- 
2.21.0

