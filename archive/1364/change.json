{"project":"joyent/node-cueball","branch":"master","id":"I4e7f0d882116635c9c2a7fa50dae037197640393","number":"1364","subject":"joyent/node-cueball#77 ConnectionFSM is too complicated, should be split up joyent/node-cueball#72 \u0027end\u0027 or \u0027close\u0027 during idle state should not be considered an error joyent/node-cueball#73 ConnectionFSM should stop doubling \"timeout\" and \"delay\" after m","owner":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"url":"https://cr.joyent.us/1364","commitMessage":"joyent/node-cueball#77 ConnectionFSM is too complicated, should be split up\njoyent/node-cueball#72 \u0027end\u0027 or \u0027close\u0027 during idle state should not be considered an error\njoyent/node-cueball#73 ConnectionFSM should stop doubling \"timeout\" and \"delay\" after max retries\nReviewed by: Robert Mustacchi \u003crm@joyent.com\u003e\n","createdOn":1485547514,"lastUpdated":1486086441,"open":false,"status":"MERGED","comments":[{"timestamp":1485547514,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Uploaded patch set 1."},{"timestamp":1485547579,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1485805715,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Uploaded patch set 2."},{"timestamp":1485805825,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Patch Set 2:\n\nSo I decided to include the connection FSM part of cueball#26 in this commit. I don\u0027t want to quote the bug id, as it doesn\u0027t really fix the bug, just one particular part of it that we\u0027re already touching here (and that Cody noticed independently while reviewing).\n\nI\u0027ve also added some more comments explaining the relationships between the FSMs in connection-fsm.js"},{"timestamp":1485807389,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1485901910,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 2:\n\n(16 comments)\n\nI\u0027ve found it pretty hard to go through all of this at times, there\u0027s a lot of moving pieces that I think would be helped a lot by having a big theory statement / design document that introduces what all of these different pieces are and how they\u0027re meant to interact with the different levels of abstraction.\n\nIt would also help a lot to have FSMs for the pool and set files. That combined with a big theory statement would make it a bit easier to understand how everything fits together.\n\nI didn\u0027t really feel confident in my understanding of lib/pool.js and lib/set.js at this point. I may need to spend more time reading through everything to get it.\n\nPlease make sure to update the copyrights."},{"timestamp":1485994956,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Patch Set 2:\n\n(9 comments)"},{"timestamp":1485994966,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Uploaded patch set 3."},{"timestamp":1485995025,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1486086037,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 3: Code-Review+1"},{"timestamp":1486086438,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Patch Set 3: Integration-Approval+1"},{"timestamp":1486086441,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Alex Wilson"}],"currentPatchSet":{"number":"3","revision":"4e7f0d882116635c9c2a7fa50dae037197640393","parents":["0f08a7cc2d76f75aa1f4bece718b9c3b923d6896"],"ref":"refs/changes/64/1364/3","uploader":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"createdOn":1485994966,"author":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1485995025,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1486086037,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1486086438,"by":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"}},{"type":"SUBM","value":"1","grantedOn":1486086441,"by":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"CHANGES.adoc","type":"ADDED","insertions":48,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":14,"deletions":-3},{"file":"lib/agent.js","type":"MODIFIED","insertions":13,"deletions":0},{"file":"lib/connection-fsm.js","type":"MODIFIED","insertions":977,"deletions":-544},{"file":"lib/pool-monitor.js","type":"MODIFIED","insertions":6,"deletions":-8},{"file":"lib/pool.js","type":"MODIFIED","insertions":127,"deletions":-129},{"file":"lib/set.js","type":"MODIFIED","insertions":177,"deletions":-95},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1},{"file":"test/cset.test.js","type":"MODIFIED","insertions":44,"deletions":-18},{"file":"test/pool.test.js","type":"MODIFIED","insertions":225,"deletions":-25}],"sizeInsertions":1632,"sizeDeletions":-823},"patchSets":[{"number":"1","revision":"88856b9cc36a39684e32a35566e2cc14fd52fb91","parents":["0f08a7cc2d76f75aa1f4bece718b9c3b923d6896"],"ref":"refs/changes/64/1364/1","uploader":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"createdOn":1485547514,"author":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1485547579,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/connection-fsm.js","line":39,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Can this diagram include an indicator of where the first state is? I\u0027m guessing \u0027connecting, but uncertain."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"CHANGES.adoc","type":"ADDED","insertions":48,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":14,"deletions":-3},{"file":"lib/agent.js","type":"MODIFIED","insertions":13,"deletions":0},{"file":"lib/connection-fsm.js","type":"MODIFIED","insertions":884,"deletions":-546},{"file":"lib/pool-monitor.js","type":"MODIFIED","insertions":6,"deletions":-8},{"file":"lib/pool.js","type":"MODIFIED","insertions":127,"deletions":-129},{"file":"lib/set.js","type":"MODIFIED","insertions":177,"deletions":-95},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1},{"file":"test/cset.test.js","type":"MODIFIED","insertions":44,"deletions":-18},{"file":"test/pool.test.js","type":"MODIFIED","insertions":166,"deletions":-25}],"sizeInsertions":1480,"sizeDeletions":-825},{"number":"2","revision":"3ec4bfe39e378b8dcfa97f07982dd8602163e6f2","parents":["0f08a7cc2d76f75aa1f4bece718b9c3b923d6896"],"ref":"refs/changes/64/1364/2","uploader":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"createdOn":1485805715,"author":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1485807389,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/connection-fsm.js","line":54,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I think it\u0027d be helpful to have a comment describing how things interact with the state machine. It seems like there are two sets of functions, one for the actual state actions and others that cause state transitions. At first, it was a bit surprising to see something like SocketMgrFSM.prototype.connect() which didn\u0027t do the actual connect action, but merely made sure the state made sense and then moved us into that state.\n\nLooking at this more, I think I know understand that these are what actually drive the state transitions and are used by other parts of the system. Perhaps you can elaborate on this relationship somewhere or indicate that it\u0027s these methods that emit certain events that cause us to advance? For example, that to go from init to connecting, requires an outside agent; however, to describe that connect-\u003econnected or error does not.\n\nNow that I\u0027ve spent more time in the code, the distinction between some of the .retry() and events being used in \u0027 characters make some sense, but it required quite some time to intuit."},{"file":"lib/connection-fsm.js","line":54,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"So this is kind of a pattern that originates out of `mooremachine` -- called a \"signal function\". In order to keep all the possible transitions out of a state together in the state entry function, when we need to take in a signal from outside like this we emit an event on ourselves.\n\nI\u0027ll add a note about the difference between \u0027event\u0027 and .signal() at the top of one of these diagrams.\n\nHopefully the \"internals\" doc I\u0027m adding will address some of the other confusion here."},{"file":"lib/connection-fsm.js","line":60,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"It\u0027d really help if this actually talked about the mechanics of what it did with sockets. For example, it talks about the basics, but it should mention that it may represent many different connections. Each time we enter connecting, we use a callback function (given to us at construction time), to actually get the underlying \"socket\"/connection that we\u0027re using."},{"file":"lib/connection-fsm.js","line":64,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"What\u0027s the initial state in this diagram? Where do we enter on construction?"},{"file":"lib/connection-fsm.js","line":338,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"This is the first comment in the file about monitor mode (and more generally about it). It feels like it could be described somewhere or talked about?"},{"file":"lib/connection-fsm.js","line":402,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"It\u0027s worth pointing out in the diagram that construction takes us to waiting."},{"file":"lib/connection-fsm.js","line":404,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I get that this is true, but maybe it\u0027s worth talking more about cancellation and elaborating on it. Importantly, when I read this, I find myself a bit confused about how it\u0027s supposed to fit together and how a user is supposed to consume it. I get that they can potentially set a cancel bit and it doesn\u0027t take effect until .try() is called, but how or why that happens is still a mystery."},{"file":"lib/connection-fsm.js","line":404,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Ok. I think this is actually wrong as it is at the moment.\n\nMy thinking here was to be lazy about removing it from the queue on the Pool\u0027s side -- might as well take it off later when we have an idle backend we\u0027re trying to match up. But that logic doesn\u0027t handle this case properly anyway, and removes the slot from the idle queue before seeing what happens with the claim handle.\n\nI think what we should actually do here is in \"waiting\", if we get the cancel signal, we should transition straight to \"cancelled\". The Pool already double-checks our state when looking at the queue so it\u0027ll pull us off and GC us later.\n\nI apparently got confused with the case where we\u0027ve already started claiming a slot, where we should just set the flag so that we finish the claim process and then immediately stop (the claim handle can\u0027t \"back out\" of the transaction once it\u0027s called .claim() on a slot except by going on through and immediately releasing)."},{"file":"lib/connection-fsm.js","line":428,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"There appears to be a transition from calling .cancel() here. Where does that take us exactly? It seems like it should take us down the .release() path. Perhaps augment that state transition to include .cancel()?"},{"file":"lib/connection-fsm.js","line":428,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Yeah I\u0027ll re-do this diagram for cancellation."},{"file":"lib/connection-fsm.js","line":658,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I think the reason that we don\u0027t call any callback in this state is because the user has explicitly taken an action on this, such as to say they are done with the callback, so we don\u0027t need to call their callback, because we already successfully did and we\u0027re transitioning to this state to come to rest and be consumed by GC, right?"},{"file":"lib/connection-fsm.js","line":658,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Correct. We called the user callback back in \u0027claimed\u0027, and then they called .close() on us. We have no further obligations to them."},{"file":"lib/connection-fsm.js","line":662,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I think the reason that we don\u0027t call any callback in this state is because the user has explicitly taken an action on this, such as to abandon this claim handle FSM (can cancel()), hence why we don\u0027t care about it at this point and don\u0027t need to call their callback?"},{"file":"lib/connection-fsm.js","line":662,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Yes, for better or worse the cueball API has settled on .cancel() causing your callback to not get called at all. Though I guess we\u0027re doing a major rev, maybe we could change this now. Last time I brought it up it was the subject of a long and protracted discussion. :)"},{"file":"lib/connection-fsm.js","line":715,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"This should indicate what the initial state is."},{"file":"lib/connection-fsm.js","line":725,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"It seems that we can go from retrying to stopping based on setting unwanted. Otherwise, this diagram suggests the only thing we can do is to go to failed after we have enough errors from the smgr to tear things down."},{"file":"lib/connection-fsm.js","line":725,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Yeah, you\u0027re right. I added that shortcut after doing the diagram. And now the layout\u0027s gonna be fun. I\u0027ll try to correct it."},{"file":"lib/connection-fsm.js","line":939,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Is there a reason this is declared after all the users of it?"},{"file":"lib/connection-fsm.js","line":939,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Nope."},{"file":"lib/connection-fsm.js","line":971,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I don\u0027t get how the ping check interacts with the broader state machine. What transitions happen if it fails? It seems like that just causes us to close or release the handle, but I\u0027m not sure what actually happens from that and how things then change and how that interacts with how the user gets the handle when they call claim().\n\nI think this is useful for a more explanatory comment or big theory statement as it seems to imply that consumers need to take specific actions."},{"file":"lib/connection-fsm.js","line":989,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I have no idea what this is trying to say."},{"file":"lib/connection-fsm.js","line":989,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"The normal contract for the thing that constructs a ClaimHandle is to listen on its \u0027stateChanged\u0027 event for it to re-enter \u0027waiting\u0027 and then call .try() on it again. We\u0027re disobeying that here because we don\u0027t care about what happens if the claim is rejected (because if it rejected it still did something, which is good enough for us, we only wanted to stop it from being idle for too long)"},{"file":"lib/pool.js","line":274,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I guess it\u0027s okay to always call self.rebalance() because we end up always going through and only having one outstanding rebalance triggered at a given time?"},{"file":"lib/pool.js","line":274,"reviewer":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"message":"Yeah, if we\u0027ve already called it this tick, it\u0027s a no-op (since we\u0027ll rebalance next tick anyway)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"CHANGES.adoc","type":"ADDED","insertions":48,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":14,"deletions":-3},{"file":"lib/agent.js","type":"MODIFIED","insertions":13,"deletions":0},{"file":"lib/connection-fsm.js","type":"MODIFIED","insertions":938,"deletions":-546},{"file":"lib/pool-monitor.js","type":"MODIFIED","insertions":6,"deletions":-8},{"file":"lib/pool.js","type":"MODIFIED","insertions":127,"deletions":-129},{"file":"lib/set.js","type":"MODIFIED","insertions":177,"deletions":-95},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1},{"file":"test/cset.test.js","type":"MODIFIED","insertions":44,"deletions":-18},{"file":"test/pool.test.js","type":"MODIFIED","insertions":166,"deletions":-25}],"sizeInsertions":1534,"sizeDeletions":-825},{"number":"3","revision":"4e7f0d882116635c9c2a7fa50dae037197640393","parents":["0f08a7cc2d76f75aa1f4bece718b9c3b923d6896"],"ref":"refs/changes/64/1364/3","uploader":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"createdOn":1485994966,"author":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1486086037,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1486086438,"by":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"}},{"type":"SUBM","value":"1","grantedOn":1486086441,"by":{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1485995025,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"CHANGES.adoc","type":"ADDED","insertions":48,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":14,"deletions":-3},{"file":"lib/agent.js","type":"MODIFIED","insertions":13,"deletions":0},{"file":"lib/connection-fsm.js","type":"MODIFIED","insertions":977,"deletions":-544},{"file":"lib/pool-monitor.js","type":"MODIFIED","insertions":6,"deletions":-8},{"file":"lib/pool.js","type":"MODIFIED","insertions":127,"deletions":-129},{"file":"lib/set.js","type":"MODIFIED","insertions":177,"deletions":-95},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1},{"file":"test/cset.test.js","type":"MODIFIED","insertions":44,"deletions":-18},{"file":"test/pool.test.js","type":"MODIFIED","insertions":225,"deletions":-25}],"sizeInsertions":1632,"sizeDeletions":-823}],"allReviewers":[{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Alex Wilson","email":"alex@cooperi.net","username":"arekinath"}]}