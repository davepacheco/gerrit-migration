{"project":"joyent/illumos-joyent","branch":"master","id":"I4ff06ef3de4da3187a6599932808d6e674052fad","number":"2918","subject":"OS-6441 netstack_find_by_stackid() drops-and-reacquires Reviewed by: Jason King \u003cjbk@joyent.com\u003e Reviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e Reviewed by: Robert Mustacchi \u003crm@joyent.com\u003e Reviewed by: Ryan Zezeski \u003crpz@joyent.com\u003e Approved by: Ry","owner":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"url":"https://cr.joyent.us/2918","commitMessage":"OS-6441 netstack_find_by_stackid() drops-and-reacquires\nReviewed by: Jason King \u003cjbk@joyent.com\u003e\nReviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\nReviewed by: Robert Mustacchi \u003crm@joyent.com\u003e\nReviewed by: Ryan Zezeski \u003crpz@joyent.com\u003e\nApproved by: Ryan Zezeski \u003crpz@joyent.com\u003e\n","createdOn":1510071745,"lastUpdated":1512752624,"open":false,"status":"MERGED","comments":[{"timestamp":1510071745,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 1."},{"timestamp":1510072864,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 1:\n\nThere may be other places in netstack.c that check for NSF_UNINIT or NSF_CLOSING, but MAYBE should hold the mutex before checking, and do netstack_hold_locked() instead.  Please keep that in mind."},{"timestamp":1510120671,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1510156868,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1510345180,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 2."},{"timestamp":1512577909,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 3."},{"timestamp":1512578139,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 3:\n\nTo address Jason\u0027s prior comment:\n\n1.) The \"counting\" problem where a netstack may get removed and mess up the counting is a distinct bug.\n\n2.) There are more checks for NSF_UNINIT|NSF_CLOSING that don\u0027t check while holding netstack_lock.  Patch set 3 fixes this by introducing netstack_hold_if_active() which does the right thing.  Two places that function needs to be unrolled due to OTHER checks that happen under netstack_lock protection.\n\nALSO --\u003e There are LX functions that would benefit from disappearing and using netstack_hold_if_active().  That will be a distinct fix, so THIS fix can be easily upstreamed."},{"timestamp":1512578238,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 4."},{"timestamp":1512579474,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 4: Code-Review+1"},{"timestamp":1512583149,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 4:\n\n(4 comments)"},{"timestamp":1512586756,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 4:\n\n(3 comments)"},{"timestamp":1512591697,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 4:\n\nUpon further review, the callers are just different enough (some zone_rele(), some don\u0027t, all return NULL if zone !\u003d NULL) as to make factoring out netstack_get_active_byzone() more confusing than helping."},{"timestamp":1512591715,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 5."},{"timestamp":1512591796,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 5: Code-Review+1"},{"timestamp":1512595102,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 5:\n\n(1 comment)"},{"timestamp":1512601133,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 6."},{"timestamp":1512601205,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 6:\n\nGot the .c, missed the .h.  Fixed."},{"timestamp":1512602614,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 6: Code-Review+1"},{"timestamp":1512602657,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 6: Code-Review+1"},{"timestamp":1512602973,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 6:\n\nTesting notes will be forthcoming.  I see a lot of zone reboots, e.g.\n\nIf anyone has pre-used special ways to induce netstack races, I\u0027d love to hear about them.  Otherwise, watch for me to ping here once I\u0027ve done some tests to make sure netstacks don\u0027t leak or do other bad things."},{"timestamp":1512604193,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 6:\n\n(2 comments)"},{"timestamp":1512606078,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 7."},{"timestamp":1512607627,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 7: Code-Review+1\n\nThanks!"},{"timestamp":1512608356,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7:\n\n(1 comment)"},{"timestamp":1512608715,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 7:\n\n(1 comment)"},{"timestamp":1512608962,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7: Code-Review+1\n\n(1 comment)"},{"timestamp":1512609746,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1512749858,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 7:\n\nAdded testing notes to bug report."},{"timestamp":1512751976,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1512752021,"reviewer":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},"message":"Patch Set 7: Integration-Approval+1"},{"timestamp":1512752268,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 8: Patch Set 7 was rebased."},{"timestamp":1512752376,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 9: Commit message was updated."},{"timestamp":1512752570,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Uploaded patch set 10: Commit message was updated."},{"timestamp":1512752624,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Dan McDonald"}],"currentPatchSet":{"number":"10","revision":"4ff06ef3de4da3187a6599932808d6e674052fad","parents":["699314d017543d473e5707e2ff4b1c39eee710ae"],"ref":"refs/changes/18/2918/10","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512752570,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512607627,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512608962,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512609746,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512751976,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1512752021,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"SUBM","value":"1","grantedOn":1512752624,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":12,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":49,"deletions":-33},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":51,"sizeDeletions":-34},"patchSets":[{"number":"1","revision":"7ab807db02972a3c806c28f379fba5add4c2ac27","parents":["8c8d11dbccc63d78788d708dace8248ee6b80733"],"ref":"refs/changes/18/2918/1","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1510071745,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/os/netstack.c","line":1399,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"I\u0027ll mention this if you want to deal with it while the patient is open (I\u0027d also be fine with \u0027new/different bug\u0027).  The netstack_next*() functions also suffer from a similar issue (as seen here -- something could try to tear down a netstack inbetween the check of flags (line 1389) and obtaining the hold.\n\nI wonder though if there isn\u0027t a bigger issue with the way it\u0027s iterating -- if a netstack that\u0027s already been iterated over (i.e. returned) goes away (or even just has NSF_CLOSING set) between calls to netstack_next() with the same handle, it seems like it could cause it to skip over upcoming valid instances because the count is off now. I.e. if you have stacks 1,2,3,4,5 and start iterating, you get to (for example) where netstack_next() returns instance 3, then instance 2 goes away, then netstack_next() is called, it\u0027ll return 5 and never return 4."},{"file":"usr/src/uts/common/os/netstack.c","line":1399,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"This wasn\u0027t QUITE what I alluded to in my earlier comment, but to be honest, this is another good example.  This may get fixed here.  I\u0027ll have to look and see."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":13,"deletions":-4}],"sizeInsertions":13,"sizeDeletions":-4},{"number":"2","revision":"252a41c36ef42d78743691f0f6bcb8829a8ce634","parents":["a5d2534e6a7c00d6d07b25a15157bae43148f887"],"ref":"refs/changes/18/2918/2","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1510345180,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":13,"deletions":-4}],"sizeInsertions":13,"sizeDeletions":-4},{"number":"3","revision":"4460033cb51eeaaf163a87d14b903dc15dce83b5","parents":["48cfa1b7f6b764a5a89379233733e64570a6fc97"],"ref":"refs/changes/18/2918/3","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512577909,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"REWORK","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":51,"deletions":-33},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":1,"deletions":0}],"sizeInsertions":52,"sizeDeletions":-33},{"number":"4","revision":"3e6a2850740ea5741636db2589ae7a34adebcbf6","parents":["48cfa1b7f6b764a5a89379233733e64570a6fc97"],"ref":"refs/changes/18/2918/4","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512578238,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512579474,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"comments":[{"file":"usr/src/uts/common/os/netstack.c","line":25,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"update year"},{"file":"usr/src/uts/common/os/netstack.c","line":25,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Will fix."},{"file":"usr/src/uts/common/os/netstack.c","line":964,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"typo"},{"file":"usr/src/uts/common/os/netstack.c","line":964,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Oops.  Will also fix."},{"file":"usr/src/uts/common/os/netstack.c","line":1176,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"This is a question and not a request for a change. Would it make sense to pass in the zone pointer instead of the netstack? You could consolidate a little more code that way and it seems like you\u0027re always using this function with a netstack that is associated with a zone pointer."},{"file":"usr/src/uts/common/os/netstack.c","line":1176,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Given its name (netstack_hold...()), I\u0027ll keep this as-is.  In this file, though, there are multiple zone-and-netstack callers, so such a taking-a-zone version might be useful in here as a macro.  The LX callers use zone_t ONLY to get to the netstack, BTW."},{"file":"usr/src/uts/common/sys/netstack.h","line":28,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"update year"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":51,"deletions":-33},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":1,"deletions":0}],"sizeInsertions":52,"sizeDeletions":-33},{"number":"5","revision":"a179703e30bad982c89c21a99c25997fb3bb92ce","parents":["48cfa1b7f6b764a5a89379233733e64570a6fc97"],"ref":"refs/changes/18/2918/5","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512591715,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512591796,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"comments":[{"file":"usr/src/uts/common/sys/netstack.h","line":28,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"it looks like you overlooked my previous comment on this file"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":52,"deletions":-34},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":1,"deletions":0}],"sizeInsertions":53,"sizeDeletions":-34},{"number":"6","revision":"63cf8fc7fe684bf29b5f94ce11af8bfcd1499302","parents":["48cfa1b7f6b764a5a89379233733e64570a6fc97"],"ref":"refs/changes/18/2918/6","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512601133,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512602614,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512602657,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"comments":[{"file":"usr/src/uts/common/os/netstack.c","line":1445,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Can we depersonalize this comment?"},{"file":"usr/src/uts/common/os/netstack.c","line":1455,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I realize this wasn\u0027t your code, but is there a reason no to just move this into the if statement and just handle that case there? Simply do the hold inline and then break?\n\nIf I read this correctly, the only case where ns would !\u003d NULL at +1450 would be when we\u0027ve found one that wasn\u0027t closing."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":52,"deletions":-34},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":54,"sizeDeletions":-35},{"number":"7","revision":"a09e7b72c3ef2ae7d53fb3bddd0739a2cdbb27cd","parents":["48cfa1b7f6b764a5a89379233733e64570a6fc97"],"ref":"refs/changes/18/2918/7","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512606078,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512607627,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512608962,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512751976,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1512752021,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512609746,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"comments":[{"file":"usr/src/uts/common/os/netstack.c","line":1455,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"It seems like you\u0027ve completely changes the semantics here. Previously you were doing a netstack_hold on the ns you returned, and not you are doing a netstack_hold, then getting the netstack_next and returning it. Am I misreading this?"},{"file":"usr/src/uts/common/os/netstack.c","line":1455,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"1.) I\u0027m doing the hold_locked in the \"break\" section of the loop above now (that was RM\u0027s suggestion, see his comment prior to changeset 7).\n\n2.) That makes the ns !\u003d NULL check outside the loop superfluous.\n\nNo semantics have changed, AFAICT."},{"file":"usr/src/uts/common/os/netstack.c","line":1455,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Ahh, yes, sorry, I was confused."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":49,"deletions":-33},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":51,"sizeDeletions":-34},{"number":"8","revision":"702eb240f3bb622eb50ae83c5684b18b9b1919b8","parents":["699314d017543d473e5707e2ff4b1c39eee710ae"],"ref":"refs/changes/18/2918/8","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512752268,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512607627,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512608962,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512751976,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1512752021,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512609746,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":49,"deletions":-33},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":51,"sizeDeletions":-34},{"number":"9","revision":"e0d59192347f782e980847fe3c291ea21472df08","parents":["699314d017543d473e5707e2ff4b1c39eee710ae"],"ref":"refs/changes/18/2918/9","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512752376,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512607627,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512608962,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512751976,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1512752021,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512609746,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":49,"deletions":-33},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":51,"sizeDeletions":-34},{"number":"10","revision":"4ff06ef3de4da3187a6599932808d6e674052fad","parents":["699314d017543d473e5707e2ff4b1c39eee710ae"],"ref":"refs/changes/18/2918/10","uploader":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"createdOn":1512752570,"author":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512607627,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512608962,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512751976,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1512752021,"by":{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1512609746,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"SUBM","value":"1","grantedOn":1512752624,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":12,"deletions":0},{"file":"usr/src/uts/common/os/netstack.c","type":"MODIFIED","insertions":49,"deletions":-33},{"file":"usr/src/uts/common/sys/netstack.h","type":"MODIFIED","insertions":2,"deletions":-1}],"sizeInsertions":51,"sizeDeletions":-34}],"allReviewers":[{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Ryan Zezeski","email":"rpz@joyent.com","username":"rzezeski"},{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}]}