From 987fd3d4c4c836d35e34428bbe690f254e042ba6 Mon Sep 17 00:00:00 2001
From: Orlando Vazquez <ovazquez@gmail.com>
Date: Mon, 11 Sep 2017 12:55:02 -0700
Subject: [PATCH] DOCKER-1100 Hung docker cp connections cause sdc-docker
 descriptor growth

---
 lib/endpoints/containers.js | 25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/lib/endpoints/containers.js b/lib/endpoints/containers.js
index 0819881..e28cb34 100644
--- a/lib/endpoints/containers.js
+++ b/lib/endpoints/containers.js
@@ -19,6 +19,9 @@ var getVmInState = common.getVmInState;
 var validate = require('../validate');
 
 
+// How long to wait between docker copy data events.
+var DATA_TIMEOUT_MS = 60 * 2 * 1000;
+
 
 // ---- internal support stuff
 
@@ -760,7 +763,6 @@ function containerReadArchive(req, res, next) {
         var statHeader = new Buffer(JSON.stringify(
             extras.containerPathStat)).toString('base64');
 
-
         readSocket.on('connect', function () {
             res.setHeader('content-type', 'application/tar');
             res.setHeader('x-docker-container-path-stat', statHeader);
@@ -771,8 +773,29 @@ function containerReadArchive(req, res, next) {
                     opts.vm.uuid, e.message);
             });
 
+            /*
+             * If a connection hangs (i.e. it stops emitting 'data' events
+             * without closing) we'll see unwanted growth in the number of used
+             * file descriptors in sdc-docker. In addition, the still-running
+             * tar process on the cn-agent/compute-node side will prevent a
+             * zone from shutting down.
+             *
+             * To mitigate this, we will set a timeout on how long to wait
+             * between data events before giving up.
+             */
+
+            readSocket.setTimeout(DATA_TIMEOUT_MS);
+            readSocket.on('timeout', function () {
+                log.error('onConnectionZoneRunning(read): '
+                        + 'data timeout; terminating archive process');
+                readSocket.destroy();
+            });
+
             readSocket.pipe(res);
             next();
+            return;
+
+
         });
     }
 }
-- 
2.21.0

