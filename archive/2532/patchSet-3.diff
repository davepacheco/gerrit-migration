From 4e4ee7459325a457ff15d5ac0c771b8b57fef0d2 Mon Sep 17 00:00:00 2001
From: Orlando Vazquez <ovazquez@gmail.com>
Date: Mon, 11 Sep 2017 12:44:46 -0700
Subject: [PATCH] DOCKER-1100 Hung docker cp connections cause sdc-docker
 descriptor growth

---
 lib/endpoints/containers.js | 26 +++++++++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

diff --git a/lib/endpoints/containers.js b/lib/endpoints/containers.js
index 0819881..928f655 100644
--- a/lib/endpoints/containers.js
+++ b/lib/endpoints/containers.js
@@ -19,6 +19,9 @@ var getVmInState = common.getVmInState;
 var validate = require('../validate');
 
 
+// How long to wait between docker copy data events.
+var DATA_TIMEOUT_MS = 60 * 2 * 1000;
+
 
 // ---- internal support stuff
 
@@ -760,7 +763,6 @@ function containerReadArchive(req, res, next) {
         var statHeader = new Buffer(JSON.stringify(
             extras.containerPathStat)).toString('base64');
 
-
         readSocket.on('connect', function () {
             res.setHeader('content-type', 'application/tar');
             res.setHeader('x-docker-container-path-stat', statHeader);
@@ -771,8 +773,30 @@ function containerReadArchive(req, res, next) {
                     opts.vm.uuid, e.message);
             });
 
+            /*
+             * Hung connections, i.e. they stop emitting 'data' events without
+             * closing, can not only cause unwanted growth in the number of
+             * used file descriptors but also make the tar process on the
+             * cn-agent/compute-node side to inadvertently prevent a zone from
+             * shutting down.
+             *
+             * To mitigate this, we will create a timer and reset it every time
+             * we receive a data event. If/when the timer fires, we disconnect
+             * the read socket.
+             */
+
+            readSocket.setTimeout(DATA_TIMEOUT_MS);
+            readSocket.on('timeout', function () {
+                log.error('onConnectionZoneRunning(read): '
+                        + 'data timeout; terminating archive process');
+                readSocket.destroy();
+            });
+
             readSocket.pipe(res);
             next();
+            return;
+
+
         });
     }
 }
-- 
2.21.0

