commit 0ecf258e39c2c0429db16f592812b2965dc1cc26 (refs/changes/24/3824/2)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2018-04-17T14:48:35+00:00 (1 year, 6 months ago)
    
    TOOLS-2025 Warden should stop at the first error it hits in the "after" chain
    Reviewed by: Nick Zivkovic <nick.zivkovic@joyent.com>
    Approved by: Nick Zivkovic <nick.zivkovic@joyent.com>

diff --git a/lib/validate.js b/lib/validate.js
index de59628..232f7e0 100644
--- a/lib/validate.js
+++ b/lib/validate.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright (c) 2018 Joyent, Inc.
  */
 
 'use strict';
@@ -226,11 +226,12 @@ function crossValidate(errs, arg, raw, validated, afterFuncs, callback) {
                         errs.push(err);
                     }
                 }
-                return cb();
+
+                cb(err);
             });
         }
     }, function (_err, _results) {
-        return errResult(errs, validated, callback);
+        errResult(errs, validated, callback);
     });
 }
 
diff --git a/package.json b/package.json
index 5b230a7..1159e1d 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "restify-warden",
-  "version": "1.0.0",
+  "version": "1.1.0",
   "description": "Yet another parameter validator",
   "author": "Joyent, Inc",
   "main": "./lib/validate.js",
diff --git a/tests/run.js b/tests/run.js
index ad71394..b95594e 100644
--- a/tests/run.js
+++ b/tests/run.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright (c) 2018 Joyent, Inc.
  */
 
 'use strict';
@@ -1655,6 +1655,27 @@ test('StringOrArray-S-KI-U', function (t) {
     });
 });
 
+test('"after" stops at first error', function (t) {
+    var err1 = util_err.invalidParam('first', 'should be the only error');
+    var err2 = util_err.invalidParam('second', 'should not be included');
+    var opts = {
+        after: [
+            function afterFirst(_opts, _params, _parsed, cb) {
+                cb(err1);
+            },
+            function afterSecond(_opts, _params, _parsed, cb) {
+                cb(err2);
+            }
+        ]
+    };
+
+    validate.params(opts, null, {}, function (err, res) {
+        t.ok(err, 'Expecting error');
+        expErr(util_const.msg.INVALID_PARAMS, [ err1 ], err, t);
+        t.end();
+    });
+});
+
 test('isNotInteger', function (t) {
     var val = '';
     var id = 'str';
