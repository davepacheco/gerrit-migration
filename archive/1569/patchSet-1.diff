commit eb2388171b2315ec3d54f1f6df4f9994a5d5ebb3 (refs/changes/69/1569/1)
Author: Trent Mick <trentm@gmail.com>
Date:   2017-02-24T12:00:35-08:00 (2 years, 7 months ago)
    
    IMGAPI-618 'imgapiadm check-files' shouldn't skip missing local files

diff --git a/lib/adm.js b/lib/adm.js
index 391a520..6d6f1fb 100644
--- a/lib/adm.js
+++ b/lib/adm.js
@@ -190,11 +190,10 @@ function do_check_files(subcmd, opts, args, cb) {
         assert.object(err, 'err');
         assert.object(imgFromUuid, 'imgFromUuid');
         assert.object(imgsFromOrigin, 'imgsFromOrigin');
-        var uuid = img.uuid;
         var i, j;
 
         /*
-         * ff95621f-33c1-84c0-692f-941d478dd8dc
+         *  Image: ff95621f-33c1-84c0-692f-941d478dd8dc (foo@1.2.3)
          *  State: image file corruption
          * Reason: invalid size (...)
          *    See: https://smartos.org/bugview/IMGAPI-???
@@ -205,8 +204,10 @@ function do_check_files(subcmd, opts, args, cb) {
          * Impact: Provisioning with head image $uuid1 will fail
          * Impact: Provisioning with head image $uuid2 will fail
          */
-        var lines = ['image ' + uuid];
+        var lines = [];
         var template = '%s: %s';
+        lines.push(sprintf(template, ' Image', format('%s (%s@%s)',
+            img.uuid, img.name, img.version)));
         lines.push(sprintf(template, ' State', 'image file corruption'));
         lines.push(sprintf(template, 'Reason', err.message));
         lines.push(sprintf(template, '   See',
@@ -257,7 +258,9 @@ function do_check_files(subcmd, opts, args, cb) {
         // If `args` is given *and* there are no errors, then we technically
         // don't need `allImgs`. Not bothering being lazy though.
         function ctxAllImgs(ctx, next) {
-            self.imgapi.listImages({}, function (err, allImgs) {
+            self.imgapi.listImages({}, {
+                inclAdminFields: true
+            }, function (err, allImgs) {
                 if (err) {
                     return next(err);
                 }
@@ -284,7 +287,9 @@ function do_check_files(subcmd, opts, args, cb) {
                 vasync.forEachParallel({
                     inputs: args,
                     func: function imgFromUuid(uuid, nextUuid) {
-                        self.imgapi.getImage(uuid, function (err, img) {
+                        self.imgapi.getImage(uuid, {
+                            inclAdminFields: true
+                        }, function (err, img) {
                             if (!err) {
                                 ctx.imgs.push(img);
                             }
@@ -338,12 +343,17 @@ function do_check_files(subcmd, opts, args, cb) {
             });
             for (var i = 0; i < ctx.imgs.length; i++) {
                 var img = ctx.imgs[i];
-                var localPath = localStor.storPathFromImageUuid(img.uuid,
-                    'file0');
-                if (fs.existsSync(localPath)) {
+                if (!img.files || !img.files[0]) {
+                    log.debug({img: img}, 'skip image: no files');
+                } else if (img.files[0].stor !== 'local') {
+                    log.debug({img: img},
+                        'skip image: file not stor=local (limitation)');
+                } else {
                     ctx.todos.push({
                         img: img,
-                        localPath: localPath
+                        stor: 'local',
+                        path: localStor.storPathFromImageUuid(
+                            img.uuid, 'file0')
                     });
                 }
             }
@@ -363,10 +373,11 @@ function do_check_files(subcmd, opts, args, cb) {
             vasync.forEachPipeline({
                 inputs: ctx.todos,
                 func: function oneTodo(todo, nextTodo) {
+                    assert.equal(todo.stor, 'local'); // current limitation
                     var uuid = todo.img.uuid;
                     self._checkLocalImageFile({
                         manifest: todo.img,
-                        path: todo.localPath
+                        path: todo.path
                     }, function (err) {
                         bar.advance(1);
                         if (err) {
@@ -430,9 +441,9 @@ Adm.prototype.do_check_files.options = [
     }
 ];
 Adm.prototype.do_check_files.help = (
-    'Check (as well as possible) the validity of image files.\n' +
+    'Check integrity of image files.\n' +
     '\n' +
-    'Limitation: Currently this only supports *locally* stored image files.\n' +
+    'Limitation: Currently this only supports stor=local image files.\n' +
     '\n' +
     'Usage:\n' +
     '     {{name}} check-files [<options>]\n' +
