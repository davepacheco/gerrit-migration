From ff1e33f6314a40c728e16cbf1f30cb427230667f Mon Sep 17 00:00:00 2001
From: Jerry Jelinek <jerry.jelinek@joyent.com>
Date: Fri, 7 Oct 2016 18:43:43 +0000
Subject: [PATCH] OS-5702 NFS mount differences when nfs-common pkg is not
 installed

---
 usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c b/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c
index 7c5826b4b5..15d263dcc1 100644
--- a/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c
+++ b/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c
@@ -2269,6 +2269,7 @@ convert_nfs_arg_str(char *srcp, char *mntopts)
 	char tmpbuf[MAX_MNTOPT_STR];
 	char *tbp = tmpbuf;
 	boolean_t no_sec = B_TRUE;
+	boolean_t no_addr = B_TRUE;
 
 	(void) strlcpy(tmpbuf, mntopts, sizeof (tmpbuf));
 	*mntopts = '\0';
@@ -2298,6 +2299,8 @@ convert_nfs_arg_str(char *srcp, char *mntopts)
 				(void) snprintf(srcp,
 				    MAXPATHLEN + LX_NMD_MAXHOSTNAMELEN + 1,
 				    "%s:%s", val, pp);
+
+				no_addr = B_FALSE;
 			} else if (strcmp(key, "clientaddr") == 0) {
 				/*
 				 * Ignore, this is an artifact of the
@@ -2339,6 +2342,19 @@ convert_nfs_arg_str(char *srcp, char *mntopts)
 		}
 	}
 
+	if (no_addr) {
+		/*
+		 * The Linux kernel requires an 'addr' option and will return
+		 * EINVAL if one has not been provided. In particular, this
+		 * behavior can be seen when the package which delivers NFS CLI
+		 * support (e.g. nfs-common on Ubuntu, nfs-utils on Centos,
+		 * etc.) is not installed. The generic mount command will not
+		 * implicitly pass in the 'addr' option, the kernel will return
+		 * EINVAL, and the mount will fail.
+		 */
+		return (-EINVAL);
+	}
+
 	if (no_sec) {
 		/*
 		 * XXX Temporarily work around missing DES auth by defaulting
-- 
2.21.0

