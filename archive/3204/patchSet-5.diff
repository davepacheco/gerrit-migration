commit 43b8335853cf90bb908c9b6887501ca83d046abe (refs/changes/04/3204/5)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2018-01-12T19:28:33+00:00 (1 year, 9 months ago)
    
    MANTA-3547 muskie fails assertion on empty request body for mpu-create
    Reviewed by: Jordan Hendricks <jordan.hendricks@joyent.com>
    Approved by: Jordan Hendricks <jordan.hendricks@joyent.com>

diff --git a/lib/uploads/commit.js b/lib/uploads/commit.js
index 5fb63a9..08f737b 100644
--- a/lib/uploads/commit.js
+++ b/lib/uploads/commit.js
@@ -35,11 +35,14 @@ var hasKey = jsprim.hasKey;
 var shallowCopy = utils.shallowCopy;
 var sprintf = util.format;
 var schemaValidator = ajv.compile({
+    'type': 'object',
     'properties': {
         'parts': {
             'type': 'array',
+            'maxItems': uploadsCommon.MAX_NUM_PARTS,
             'items': {
-                'type': 'string'
+                'type': 'string',
+                'minLength': 1
             }
         }
     },
@@ -235,18 +238,6 @@ function validateParts(req, res, next) {
     var parts = req.body.parts;
     log.debug('validating parts for upload');
 
-    if (!parts) {
-        log.debug('undefined parts array');
-        next(new MultipartUploadCreateError('missing parts array in ' +
-                    'request body'));
-        return;
-    } else if (parts.length > uploadsCommon.MAX_NUM_PARTS) {
-        next(new MultipartUploadInvalidArgumentError(id,
-            sprintf('too many parts provided (%d provided; max is %d)',
-                parts.length, uploadsCommon.MAX_NUM_PARTS)));
-        return;
-    }
-
     var errors = [];
     var sum = 0;
 
@@ -264,13 +255,6 @@ function validateParts(req, res, next) {
         var record = req.upload.uploadMd;
         var key = record.key + '/' + index;
 
-        if (etag === '') {
-            errors.push(new MultipartUploadInvalidArgumentError(id,
-                sprintf('[part %d] no etag provided', index, etag)));
-            cb();
-            return;
-        }
-
         var opts = {
             key: key,
             requestId: req.getId()
diff --git a/lib/uploads/create.js b/lib/uploads/create.js
index f034135..9f7b46c 100644
--- a/lib/uploads/create.js
+++ b/lib/uploads/create.js
@@ -38,9 +38,11 @@ require('../errors');
 var hasKey = jsprim.hasKey;
 var sprintf = util.format;
 var schemaValidator = ajv.compile({
+    'type': 'object',
     'properties': {
         'objectPath': {
-            'type': 'string'
+            'type': 'string',
+            'minLength': 1
         },
         'headers': {
             'type': 'object',
diff --git a/test/mpu/commit.test.js b/test/mpu/commit.test.js
index cad334d..33be978 100644
--- a/test/mpu/commit.test.js
+++ b/test/mpu/commit.test.js
@@ -693,6 +693,42 @@ test('commit upload: empty part etag', function (t) {
 });
 
 
+test('commit upload: multiple empty part etags', function (t) {
+    var self = this;
+    self.createUpload(self.path, null, function (err) {
+        if (ifErr(t, err, 'created upload')) {
+            t.end();
+            return;
+        }
+
+        var pn = 0;
+        self.writeTestObject(self.uploadId, pn, function (err2, res) {
+            if (ifErr(t, err2, 'uploaded part')) {
+                t.end();
+                return;
+            }
+
+            t.ok(res);
+            t.checkResponse(res, 204);
+
+            var etag = res.headers.etag;
+
+            self.commitUpload(self.uploadId, ['', etag, ''], function (err3) {
+                if (!err3) {
+                    t.fail('commit parts 0 and 2 have empty etags');
+                    t.end();
+                    return;
+                }
+
+                t.ok(verror.hasCauseWithName(err3,
+                    'MultipartUploadInvalidArgumentError'));
+                t.end();
+            });
+        });
+    });
+});
+
+
 test('commit upload: incorrect part etag', function (t) {
     var self = this;
     self.createUpload(self.path, null, function (err) {
