{"project":"joyent/smartos-live","branch":"master","id":"Ieeddd78588bfd0a61b521858c72925546a8b20ff","number":"4994","subject":"OS-7320 quick workaround for OS-7313","owner":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"url":"https://cr.joyent.us/4994","commitMessage":"OS-7320 quick workaround for OS-7313\n","createdOn":1540331745,"lastUpdated":1541090646,"open":false,"status":"ABANDONED","comments":[{"timestamp":1540331745,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 1."},{"timestamp":1540331788,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1540397706,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Patch Set 1:\n\n(1 comment)\n\nHow come we aren\u0027t just matching the known-bad SSDs? sd.c is the usual nest, but seems like we could end up sending \"START STOP UNIT\" still, just not with POWER CONDITION handling. Seems like this at risk of unknown consequences on our other LUN types? (I might just not be privy to this conversation, of course)"},{"timestamp":1540398846,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 1:\n\n\u003e (1 comment)\n \u003e \n \u003e How come we aren\u0027t just matching the known-bad SSDs? sd.c is the\n \u003e usual nest, but seems like we could end up sending \"START STOP\n \u003e UNIT\" still, just not with POWER CONDITION handling. Seems like\n \u003e this at risk of unknown consequences on our other LUN types? (I\n \u003e might just not be privy to this conversation, of course)\n\nThe problem is explicitly the POWER CONDITION. Other START-STOP commands cause no problems.\n\nThe reason I\u0027m not limiting this change to this particular model of SSD is that we really don\u0027t know whether a newer model of these devices will identify differently while still suffering from the same problem.\n\nI\u0027ve discussed this with Mike and we came to the conclusion that it\u0027s probably safest to apply this workaround to all devices, and deliver it only in a special PI made for LB. There will be a proper fix for OS-7313 in illumos-joyent, but that can take longer to get done than the time we have to deliver a working PI to LB."},{"timestamp":1540399392,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Patch Set 1:\n\nIf we\u0027re delivering a special PI to only one customer, my inclination would be to do that in isolation, rather than committing the exception to the gate."},{"timestamp":1540401984,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Patch Set 1:\n\nWhat I meant by comment is that applying your change to *ALL* devices means that we\u0027ll potentially start doing full on START/STOP commands where previously we only did POWER CONDITION ones. I don\u0027t think it\u0027s all clear what the impact of that might or might not be (e.g. the spec talks about SYNCHRONIZE CACHE in this case)"},{"timestamp":1540462525,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 1: Integration-Approval-1"},{"timestamp":1540462587,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 1:\n\n\u003e If we\u0027re delivering a special PI to only one customer, my\n \u003e inclination would be to do that in isolation, rather than\n \u003e committing the exception to the gate.\n\nYes, this isn\u0027t going into smartos-live. As we discussed yesterday I\u0027ll build a special PI."},{"timestamp":1540475259,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 1:\n\n\u003e What I meant by comment is that applying your change to *ALL*\n \u003e devices means that we\u0027ll potentially start doing full on START/STOP\n \u003e commands where previously we only did POWER CONDITION ones. I don\u0027t\n \u003e think it\u0027s all clear what the impact of that might or might not be\n \u003e (e.g. the spec talks about SYNCHRONIZE CACHE in this case)\n\nI\u0027ve spent some more time reading in the spec. The use of power conditions isn\u0027t related to NO_FLUSH bit (which I believe we never set anyway). That means it doesn\u0027t really make a difference for cache flush behaviour whether we\u0027ll just start/stop the device or use the more advanced power condition mechanism. I don\u0027t really see what the risk should be by reducing power management functions to the old-fashioned start/stop method, given that we\u0027re probably not even using it at all.\n\nOn the other hand, limiting this workaround to this particular vendor/model string may come back to bite us if the customer decides to use a slightly different model in the future that identifies differently but has the same problem.\n\nI have no strong opinion either way, but for a workaround thats required to make a system functional at all I\u0027d prefer to apply it as broadly as possible, especially as I think the risk is low and power management likely doesn\u0027t get a chance to be used much in our use cases."},{"timestamp":1540477382,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Patch Set 1:\n\nI\u0027m talking about this part:\n\n\"Logical units that contain cache shall write all cached logical blocks to the medium (e.g., as they would do in\nresponse to a SYNCHRONIZE CACHE command (see 5.18 and 5.19) with the SYNC _ NV bit set to zero, the\nLOGICAL BLOCK ADDRESS field set to zero, and the NUMBER OF BLOCKS field set to zero) prior to entering into any\npower condition that prevents accessing the medium (e.g., before the rotating media spindle motor is stopped\nduring transition to the stopped power condition).\"\n\nStating that there\u0027s no risk at all to this change so it doesn\u0027t need testing outside of those particular SSDs, in an area where we *know* there\u0027s historically been all sorts of odd behaviours (like the one we\u0027re talking about!) seems odd to me.\n\nBut if this isn\u0027t going into mainline maybe none of this matters."},{"timestamp":1540479606,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 1:\n\n\u003e I\u0027m talking about this part:\n \u003e \n \u003e \"Logical units that contain cache shall write all cached logical\n \u003e blocks to the medium (e.g., as they would do in\n \u003e response to a SYNCHRONIZE CACHE command (see 5.18 and 5.19) with\n \u003e the SYNC _ NV bit set to zero, the\n \u003e LOGICAL BLOCK ADDRESS field set to zero, and the NUMBER OF BLOCKS\n \u003e field set to zero) prior to entering into any\n \u003e power condition that prevents accessing the medium (e.g., before\n \u003e the rotating media spindle motor is stopped\n \u003e during transition to the stopped power condition).\"\n \u003e \n \u003e Stating that there\u0027s no risk at all to this change so it doesn\u0027t\n \u003e need testing outside of those particular SSDs, in an area where we\n \u003e *know* there\u0027s historically been all sorts of odd behaviours (like\n \u003e the one we\u0027re talking about!) seems odd to me.\n \u003e \n \u003e But if this isn\u0027t going into mainline maybe none of this matters.\n\nThis applies the same way whether power conditions are used or just the start/stop bit.\n\nBut yes, I agree there\u0027s historically been plenty of odd behavior, and still today (which is the reason why we\u0027re doing this). On the other hand I don\u0027t see how I could possibly make any progress here on the assumptions that the standards are pretty much ignored, and how exactly to be sure when or when not or how to test for this.\n\nSo the question really only how we value the risk of there being more or different subtle bugs in various devices when power conditions are not being used, and how do we value the risk that a different model of the same SSD will identify differently while suffering from the same firmware issue.\n\nI really have no idea. I\u0027d prefer to apply the workaround as broadly as possible, but if you insist I\u0027ll limit it to this exact SSD model."},{"timestamp":1540479719,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"Patch Set 1:\n\nI definitely don\u0027t want to insist - I\u0027d be fine with consensus, so I\u0027d be interested in other\u0027s opinions."},{"timestamp":1541090646,"reviewer":{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},"message":"Abandoned\n\nSuperseded by the \"real\" fix."}],"currentPatchSet":{"number":"1","revision":"eeddd78588bfd0a61b521858c72925546a8b20ff","parents":["8aa883ddc180eeb09ec9ec558c9ce73e0d779bd4"],"ref":"refs/changes/94/4994/1","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1540331745,"author":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1540331788,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"-1","grantedOn":1540462525,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"comments":[{"file":"overlay/generic/kernel/drv/sd.conf","line":76,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"I think an explanatory comment on this addition would be a good idea (temporary fixes have a habit of hanging around...)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"overlay/generic/kernel/drv/sd.conf","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":1,"sizeDeletions":-1},"patchSets":[{"number":"1","revision":"eeddd78588bfd0a61b521858c72925546a8b20ff","parents":["8aa883ddc180eeb09ec9ec558c9ce73e0d779bd4"],"ref":"refs/changes/94/4994/1","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1540331745,"author":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1540331788,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"-1","grantedOn":1540462525,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"comments":[{"file":"overlay/generic/kernel/drv/sd.conf","line":76,"reviewer":{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"},"message":"I think an explanatory comment on this addition would be a good idea (temporary fixes have a habit of hanging around...)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"overlay/generic/kernel/drv/sd.conf","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":1,"sizeDeletions":-1}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Patrick Mooney","email":"pmooney@pfmooney.com","username":"pfmooney"},{"name":"John Levon","email":"john.levon@joyent.com","username":"johnlevon"}]}