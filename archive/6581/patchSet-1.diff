commit ad86e38be4db38e713adb3585bb6df04db7bba83
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2019-07-10T00:01:16+00:00 (3 months ago)
    
    TRITON-1808 NAPI returns "deadlock detected" for conflicting requests

diff --git a/lib/models/nic/common.js b/lib/models/nic/common.js
index 9a2185e..2229d78 100644
--- a/lib/models/nic/common.js
+++ b/lib/models/nic/common.js
@@ -38,6 +38,26 @@ var getPoolIntersections = util_intersect.getPoolIntersections;
 
 // --- Internal helpers
 
+/**
+ * When we send a batch request to Moray, it executes the requested operations
+ * in the specified order. Since our transactions acquire row-level locks for
+ * each row that we touch, we need to make sure that they are always acquired
+ * in the same order, so that we don't end up with a lock order violation. If
+ * this happens, Postgres will send back the error "deadlock detected".
+ */
+function compareRequests(a, b) {
+    if (a.bucket < b.bucket) {
+        return -1;
+    } else if (a.bucket > b.bucket) {
+        return 1;
+    } else if (a.key < b.key) {
+        return -1;
+    } else if (a.key > b.key) {
+        return 1;
+    } else {
+        return 0;
+    }
+}
 
 /**
  * If an owner_uuid has been specified, and we haven't been explicitly
@@ -484,6 +504,8 @@ function commitBatch(opts, callback) {
     assert.object(opts.log, 'opts.log');
     assert.arrayOfObject(opts.batch, 'opts.batch');
 
+    opts.batch.sort(compareRequests);
+
     opts.log.info({ batch: opts.batch }, 'commitBatch: enter');
 
     opts.app.moray.batch(opts.batch, function (err, res) {
