commit 6a1344da0b31e9fc66ec1eabe0e99c9c8346d52d (refs/changes/95/1895/2)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2017-05-03T23:31:51+00:00 (2 years, 5 months ago)
    
    NAPI-410 Periodic logging should stop when NAPI is shutting down
    Reviewed by: Alex Wilson <alex.wilson@joyent.com>
    Approved by: Alex Wilson <alex.wilson@joyent.com>

diff --git a/lib/endpoints/manage.js b/lib/endpoints/manage.js
index 97559b0..d0153fb 100644
--- a/lib/endpoints/manage.js
+++ b/lib/endpoints/manage.js
@@ -17,11 +17,6 @@
 var restify = require('restify');
 
 
-// --- Globals
-
-var USAGE_PERIOD = 8 * 60 * 60 * 1000; // 8 hours
-
-
 // --- Internal
 
 function doCollection() {
@@ -42,12 +37,6 @@ function doCollection() {
 }
 
 
-function periodicUsageLog(log) {
-    var info = process.memoryUsage();
-    log.info({ memory: info }, 'Current memory usage');
-}
-
-
 // --- Endpoints
 
 function runGC(req, res, next) {
@@ -60,11 +49,7 @@ function runGC(req, res, next) {
 }
 
 
-function register(http, before, log) {
-    log.info({ period: USAGE_PERIOD },
-        'Starting periodic logging of memory usage');
-    setInterval(periodicUsageLog, USAGE_PERIOD, log);
-
+function register(http, before) {
     http.get({ path: '/manage/gc', name: 'RunGC' },
         before, runGC);
     http.head({ path: '/manage/gc', name: 'RunGC' },
diff --git a/lib/napi.js b/lib/napi.js
index b21f084..75a22d5 100644
--- a/lib/napi.js
+++ b/lib/napi.js
@@ -38,10 +38,19 @@ var verror = require('verror');
 
 
 
+var USAGE_PERIOD = 8 * 60 * 60 * 1000; // 8 hours
 var PKG = require('../package.json');
 var request_seq_id = 0;
 
 
+// --- Internal functions
+
+
+function periodicUsageLog(log) {
+    log.info({ memory: process.memoryUsage() },
+        'Current memory usage');
+}
+
 
 // --- NAPI object and methods
 
@@ -195,6 +204,11 @@ NAPI.prototype.start = function start(callback) {
     if (!this.moray) {
         this.createMorayClient();
     }
+
+
+    this.log.info({ period: USAGE_PERIOD },
+        'Starting periodic logging of memory usage');
+    this.usageTimer = setInterval(periodicUsageLog, USAGE_PERIOD, this.log);
 };
 
 
@@ -208,7 +222,12 @@ NAPI.prototype.stop = function stop(callback) {
             self.moray.close();
         }
 
-        return callback(err);
+        if (self.usageTimer) {
+            clearInterval(self.usageTimer);
+            self.usageTimer = null;
+        }
+
+        callback(err);
     });
 };
 
