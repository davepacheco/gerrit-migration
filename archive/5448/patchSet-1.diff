commit 43ee36be9aecdf06b5ee3e6712d7ecf51bb44e07 (refs/changes/48/5448/1)
Author: Rui Loura <rui@joyent.com>
Date:   2019-01-29T20:31:05+00:00 (8 months ago)
    
    TRITON-811 cloudapi isNet() functions need to be factored out
    TRITON-850 sdc-cloudapi translateNetwork() needs to consider RAN when determining public networks

diff --git a/lib/endpoints/networks.js b/lib/endpoints/networks.js
index 599dd20..638c180 100644
--- a/lib/endpoints/networks.js
+++ b/lib/endpoints/networks.js
@@ -10,6 +10,7 @@
 
 var assert = require('assert-plus');
 var jsprim = require('jsprim');
+var netconfig = require('triton-netconfig');
 var restify = require('restify');
 var schemas = require('joyent-schemas').cloudapi;
 var util = require('util'),
@@ -149,7 +150,7 @@ function translateNetwork(net) {
     } else if (net.fabric) {
         isPublic = false;
     } else {
-        isPublic = (net.nic_tag === modNetworks.EXTERNAL_NIC_TAG);
+        isPublic = netconfig.isNetExternal(net);
     }
 
     obj['public'] = isPublic;
diff --git a/lib/machines.js b/lib/machines.js
index 153afd1..3dc52b8 100644
--- a/lib/machines.js
+++ b/lib/machines.js
@@ -17,6 +17,7 @@ var util = require('util');
 
 var restify = require('restify');
 var libuuid = require('libuuid');
+var netconfig = require('triton-netconfig');
 var semver = require('semver');
 var vasync = require('vasync');
 var jsprim = require('jsprim');
@@ -42,10 +43,10 @@ var MD_RE = /^metadata\.\w/;
 var TAG_RE = /^tag\..+/;
 var BEFORE_NETWORK_VERSION_RE = /^~?7\.0(\.\d+)?$/;
 
-var EXTERNAL_NIC_TAG = 'external';
-var INTERNAL_NIC_TAG = 'internal';
+var EXTERNAL_NETWORK = 'external';
+var INTERNAL_NETWORK = 'internal';
 // networks used if pkg doesn't have any
-var DEFAULT_NETWORKS = [EXTERNAL_NIC_TAG, INTERNAL_NIC_TAG];
+var DEFAULT_NETWORKS = [EXTERNAL_NETWORK, INTERNAL_NETWORK];
 
 var BRAND_NAME_DISALLOWED_CHARS_RE = /[^a-zA-Z0-9\-]/;
 var BRAND_NAME_MAX_LENGTH = 64; // should be enough for anyone
@@ -190,7 +191,7 @@ function translate(machine, req)  {
         // attribute set on their nics, but have an 'external' nic tag.
         if (!primaryNic) {
             primaryNic = machine.nics.filter(function (nic) {
-                return nic.nic_tag === EXTERNAL_NIC_TAG;
+                return netconfig.isNicExternal(nic);
             }).pop();
         }
 
@@ -579,14 +580,16 @@ function getCreateOptions(req) {
 
             var defaultNetworks = params.default_networks || DEFAULT_NETWORKS;
 
+            // 'external_nets' and 'internal_nets' are populated in
+            // lib/middleware/networks.js, which is RAN compatible.
             if (req.external_nets.length &&
-                defaultNetworks.indexOf(EXTERNAL_NIC_TAG) !== -1) {
+                defaultNetworks.indexOf(EXTERNAL_NETWORK) !== -1) {
 
                 networkUuids.push(req.external_nets[0]);
             }
 
             if (req.internal_nets.length &&
-                defaultNetworks.indexOf(INTERNAL_NIC_TAG) !== -1) {
+                defaultNetworks.indexOf(INTERNAL_NETWORK) !== -1) {
 
                 var internalNet = getInternalNetwork(req);
                 if (internalNet) {
diff --git a/lib/middleware/networks.js b/lib/middleware/networks.js
index 64428a9..667641f 100644
--- a/lib/middleware/networks.js
+++ b/lib/middleware/networks.js
@@ -23,9 +23,7 @@
  *                     accessible by the requesting user
  */
 var assert = require('assert-plus');
-
-
-var modNets = require('../networks');
+var netconf = require('triton-netconfig');
 
 
 function loadNetworks(req, res, next) {
@@ -84,7 +82,7 @@ function loadNetworks(req, res, next) {
 
         // Always skip admin network pools:
         pools = pools.filter(function (pool) {
-            return (!modNets.isAdmin(pool));
+            return (!netconf.isNetAdmin(pool));
         });
 
         pools = plugins.filterListNetworks({ account: req.account }, pools);
@@ -100,9 +98,9 @@ function loadNetworks(req, res, next) {
                 }
             });
 
-            if (modNets.isExternal(pool)) {
+            if (netconf.isNetExternal(pool)) {
                 externalNetworks.push(pool.uuid);
-            } else if (modNets.isInternal(pool) || isFabric === true) {
+            } else if (netconf.isNetInternal(pool) || isFabric === true) {
                 internalNetworks.push(pool.uuid);
             }
         });
@@ -117,7 +115,7 @@ function loadNetworks(req, res, next) {
             // Always skip admin networks, and don't add networks which are
             // already in contained pools:
             nets = nets.filter(function (net) {
-                return (!modNets.isAdmin(net) && !networksInPools[net.uuid]);
+                return (!netconf.isNetAdmin(net) && !networksInPools[net.uuid]);
             });
 
             nets = plugins.filterListNetworks({ account: req.account }, nets);
@@ -125,9 +123,9 @@ function loadNetworks(req, res, next) {
             networks = networks.concat(nets);
 
             networks.forEach(function (net) {
-                if (modNets.isExternal(net)) {
+                if (netconf.isNetExternal(net)) {
                     externalNetworks.push(net.uuid);
-                } else if (modNets.isInternal(net) || net.fabric === true) {
+                } else if (netconf.isNetInternal(net) || net.fabric === true) {
                     internalNetworks.push(net.uuid);
                 }
             });
diff --git a/lib/networks.js b/lib/networks.js
index dd4096c..39524e7 100644
--- a/lib/networks.js
+++ b/lib/networks.js
@@ -12,49 +12,6 @@ var assert = require('assert-plus');
 
 var modConfig = require('./config');
 
-var ADMIN_NIC_TAG = 'admin';
-var EXTERNAL_NIC_TAG = 'external';
-var INTERNAL_NIC_TAG = 'internal';
-
-/*
- * Check if a network or pool is named or tagged with the following nictag
- * accounting for rack aware nictag format of "<tag>_rack_<rack id>".
- */
-function _isNetCommon(net, tag) {
-    if (net.name === tag) {
-        return true;
-    }
-
-    var rackTag = new RegExp('^' + tag + '_rack_[a-z0-9_-]+$', 'i');
-
-    if (net.nic_tag === tag || net.nic_tag.search(rackTag) === 0) {
-        return true;
-    }
-
-    /* Is this a network pool? */
-    if (net.nic_tags_present) {
-        var tagsLen = net.nic_tags_present.length;
-
-        if (net.nic_tags_present.indexOf(tag) !== -1) {
-            return true;
-        }
-
-        /*
-         * We could start at i = 1 here because in the case of network pools
-         * the nic_tag property is set to the first element of the
-         * nic_tags_provided array.  But that is some what of an obsecure
-         * assumption that could change in the future.
-         */
-        for (var i = 0; i < tagsLen; i++) {
-            if (net.nic_tags_present[i].search(rackTag) === 0) {
-                return true;
-            }
-        }
-    }
-
-    return false;
-}
-
 function checkFabricNetworks(napiClient, networks, accountUuid, cb) {
     assert.object(napiClient, 'napiClient');
     assert.arrayOfUuid(networks, 'networks');
@@ -146,26 +103,8 @@ function getDefaultFabricNetworkForUser(ufdsClient, dataCenterName, account,
     });
 }
 
-function isAdmin(net) {
-    return _isNetCommon(net, ADMIN_NIC_TAG);
-}
-
-function isExternal(net) {
-    return _isNetCommon(net, EXTERNAL_NIC_TAG);
-}
-
-function isInternal(net) {
-    return _isNetCommon(net, INTERNAL_NIC_TAG);
-}
-
 
 module.exports = {
-    ADMIN_NIC_TAG: ADMIN_NIC_TAG,
     checkFabricNetworks: checkFabricNetworks,
-    EXTERNAL_NIC_TAG: EXTERNAL_NIC_TAG,
-    getDefaultFabricNetworkForUser: getDefaultFabricNetworkForUser,
-    INTERNAL_NIC_TAG: INTERNAL_NIC_TAG,
-    isAdmin: isAdmin,
-    isExternal: isExternal,
-    isInternal: isInternal
+    getDefaultFabricNetworkForUser: getDefaultFabricNetworkForUser
 };
diff --git a/lib/plugin-manager.js b/lib/plugin-manager.js
index 6744a3a..99fa291 100644
--- a/lib/plugin-manager.js
+++ b/lib/plugin-manager.js
@@ -47,7 +47,7 @@
 
 var assert = require('assert-plus');
 var jsprim = require('jsprim');
-var modNets = require('./networks');
+var netconf = require('triton-netconfig');
 var path = require('path');
 var vasync = require('vasync');
 
@@ -105,7 +105,7 @@ function init(app) {
                 var networksInPools = {};
 
                 pools = pools.filter(function (pool) {
-                    return (!modNets.isAdmin(pool));
+                    return (!netconf.isNetAdmin(pool));
                 });
 
                 pools.forEach(function addNets(pool) {
@@ -123,7 +123,7 @@ function init(app) {
                     }
 
                     nets = nets.filter(function (net) {
-                        return (!modNets.isAdmin(net) &&
+                        return (!netconf.isNetAdmin(net) &&
                             !networksInPools[net.uuid]);
                     });
 
diff --git a/package.json b/package.json
index be3362f..3b041ba 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "cloudapi",
     "description": "SmartDataCenter CloudAPI",
-    "version": "9.3.1",
+    "version": "9.3.2",
     "author": "Joyent (joyent.com)",
     "private": true,
     "engines": {
@@ -39,6 +39,7 @@
         "semver": "5.4.1",
         "strsplit": "1.0.0",
         "triton-metrics": "0.1.0",
+        "triton-netconfig": "1.3.0",
         "ufds": "1.5.0",
         "vasync": "2.2.0",
         "verror": "1.10.0",
diff --git a/plugins/filter_owner_networks.js b/plugins/filter_owner_networks.js
index 217f358..121dc63 100644
--- a/plugins/filter_owner_networks.js
+++ b/plugins/filter_owner_networks.js
@@ -46,7 +46,7 @@
  */
 
 var assert = require('assert-plus');
-var modNets = require('../lib/networks');
+var netconf = require('triton-netconfig');
 
 
 /*
@@ -131,7 +131,7 @@ function findOwnerExternalNetwork(api, cfg) {
             });
 
             var external = owned.filter(function filterExternal(network) {
-                return (modNets.isExternal(network));
+                return (netconf.isNetExternal(network));
             });
 
             if (external.length === 0) {
diff --git a/sapi_manifests/cloudapi/template b/sapi_manifests/cloudapi/template
index 1bac06e..887198b 100644
--- a/sapi_manifests/cloudapi/template
+++ b/sapi_manifests/cloudapi/template
@@ -201,13 +201,11 @@
     {{#experimental_cloudapi_automount_nfs_shared_volumes}}
     "experimental_cloudapi_automount_nfs_shared_volumes": {{{experimental_cloudapi_automount_nfs_shared_volumes}}},
     {{/experimental_cloudapi_automount_nfs_shared_volumes}}
+
     {{^CLOUDAPI_TEST_MODE}}
-    "test": false,
+    "test": false
     {{/CLOUDAPI_TEST_MODE}}
     {{#CLOUDAPI_TEST_MODE}}
-    "test": {{{CLOUDAPI_TEST_MODE}}},
+    "test": {{{CLOUDAPI_TEST_MODE}}}
     {{/CLOUDAPI_TEST_MODE}}
-    "admin_nic_tag": "admin",
-    "external_nic_tag": "external",
-    "internal_nic_tag": "internal"
 }
