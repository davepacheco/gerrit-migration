From 43bc914ed3afec37104db88f804fc4762a6767da Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Mon, 8 Aug 2016 20:56:48 +0000
Subject: [PATCH] OS-5582 Use busybox:1.24.0 for example Docker image in tests

---
 src/img/test/docker.test.js      |  7 ++++---
 src/vm/common/vmtest.js          |  2 +-
 src/vm/runtest                   | 16 ++++++++--------
 src/vm/tests/test-docker.js      |  9 +++++----
 src/vm/tests/test-reprovision.js |  4 ++--
 5 files changed, 20 insertions(+), 18 deletions(-)

diff --git a/src/img/test/docker.test.js b/src/img/test/docker.test.js
index 5f46e380..89fc9de5 100644
--- a/src/img/test/docker.test.js
+++ b/src/img/test/docker.test.js
@@ -50,9 +50,10 @@ var WRKDIR = '/var/tmp/img-test-docker';
 var CACHEDIR = '/var/tmp/img-test-cache';
 
 var sourcesHadDockerHub;
-// Use a test image that is ideally small and typically unused. 'alpine'
-// does NOT meet the latter.
-var testImgArg = 'alpine:latest';
+// Use a test image that is ideally small and typically unused. This
+// should be an older image accessible via the v1 Registry API, since
+// that is what imgadm currently supports.
+var testImgArg = 'busybox:1.24.0';
 var testImg;
 
 
diff --git a/src/vm/common/vmtest.js b/src/vm/common/vmtest.js
index bd2a71e6..2bf8d623 100644
--- a/src/vm/common/vmtest.js
+++ b/src/vm/common/vmtest.js
@@ -49,7 +49,7 @@ var DEFAULT_ZFS_PROPERTIES = {
 };
 var IMAGES_SOURCE = 'https://images.joyent.com/';
 
-exports.CURRENT_DOCKER_ALPINE_UUID = process.env['DOCKER_ALPINE_UUID'];
+exports.CURRENT_DOCKER_IMAGE_UUID = process.env['DOCKER_BASE_IMAGE_UUID'];
 exports.CURRENT_SMARTOS_UUID = '01b2c898-945f-11e1-a523-af1afbe22822';
 exports.CURRENT_UBUNTU_UUID = '71101322-43a5-11e1-8f01-cf2a3031a7f4';
 exports.CURRENT_UBUNTU_NAME = 'ubuntu-10.04';
diff --git a/src/vm/runtest b/src/vm/runtest
index 7200a139..159adbb5 100755
--- a/src/vm/runtest
+++ b/src/vm/runtest
@@ -74,17 +74,17 @@ done
 # Special case for docker
 
 imgadm sources --add-docker-hub
-export DOCKER_ALPINE_UUID=$(imgadm list -o uuid,tags \
-    | grep "\"docker:repo\":\"alpine\"" \
+export DOCKER_BASE_IMAGE_UUID=$(imgadm list -o uuid,tags \
+    | grep "\"docker:repo\":\"busybox\"" \
     | cut -d' ' -f1 \
     | head -1)
-if [[ -z ${DOCKER_ALPINE_UUID} ]]; then
-    imgadm import alpine:latest
-    export DOCKER_ALPINE_UUID=$(imgadm list -o uuid,tags \
-        | grep "\"docker:repo\":\"alpine\"" \
+if [[ -z ${DOCKER_BASE_IMAGE_UUID} ]]; then
+    imgadm import busybox:1.24.0
+    export DOCKER_BASE_IMAGE_UUID=$(imgadm list -o uuid,tags \
+        | grep "\"docker:repo\":\"busybox\"" \
         | cut -d' ' -f1)
-    if [[ -z ${DOCKER_ALPINE_UUID} ]]; then
-        echo "Unable to download alpine:latest docker image" >&2
+    if [[ -z ${DOCKER_BASE_IMAGE_UUID} ]]; then
+        echo "Unable to download busybox:1.24.0 docker image" >&2
         exit 1
     fi
 fi
diff --git a/src/vm/tests/test-docker.js b/src/vm/tests/test-docker.js
index 1f795763..a1952d43 100644
--- a/src/vm/tests/test-docker.js
+++ b/src/vm/tests/test-docker.js
@@ -1002,7 +1002,7 @@ test('test log archiving', function (t) {
     payload.archive_on_delete = true;
     payload.brand = 'lx';
     payload.docker = true;
-    payload.image_uuid = vmtest.CURRENT_DOCKER_ALPINE_UUID;
+    payload.image_uuid = vmtest.CURRENT_DOCKER_IMAGE_UUID;
     payload.internal_metadata = {'docker:cmd': '[\"echo\",\"hello world\"]'};
     payload.kernel_version = '3.13.0';
 
@@ -1247,7 +1247,7 @@ test('test restart delay reset', function (t) {
     payload.autoboot = false;
     payload.brand = 'lx';
     payload.docker = true;
-    payload.image_uuid = vmtest.CURRENT_DOCKER_ALPINE_UUID;
+    payload.image_uuid = vmtest.CURRENT_DOCKER_IMAGE_UUID;
 
     // This cmd will 'exit 1' cycles_fail times, then sleep cycle_reset_delay
     // seconds and exit 0, then repeat that pattern. The repeat happens because
@@ -1255,7 +1255,8 @@ test('test restart delay reset', function (t) {
     // 0.
     payload.internal_metadata = {
         'docker:cmd': '[\"/bin/sh\",\"-c\",'
-            + '\"[[ $(ls -1 /var/tmp | wc -l) == ' + cycles_fail + ' ]] '
+            + '\"mkdir -p /var/tmp; '
+            + '[[ $(ls -1 /var/tmp | wc -l) == ' + cycles_fail + ' ]] '
             + '&& (sleep ' + cycle_reset_delay + '; rm -f /var/tmp/*; exit 0) '
             + '|| (touch /var/tmp/$(/native/usr/bin/uuid); exit 1)\"]',
         'docker:restartpolicy': 'always'
@@ -1459,7 +1460,7 @@ test('test reprovision resolv.conf', function (t) {
     payload.autoboot = false;
     payload.brand = 'lx';
     payload.docker = true;
-    payload.image_uuid = vmtest.CURRENT_DOCKER_ALPINE_UUID;
+    payload.image_uuid = vmtest.CURRENT_DOCKER_IMAGE_UUID;
     payload.internal_metadata = {'docker:cmd': '[\"sleep\",\"3600\"]'};
     payload.kernel_version = '3.13.0';
     payload.resolvers = ['8.8.8.8', '8.8.4.4'];
diff --git a/src/vm/tests/test-reprovision.js b/src/vm/tests/test-reprovision.js
index d29482a1..0567b7eb 100644
--- a/src/vm/tests/test-reprovision.js
+++ b/src/vm/tests/test-reprovision.js
@@ -15,7 +15,7 @@ VM.loglevel = 'DEBUG';
 
 var abort = false;
 var bundle_filename;
-var docker_image_uuid = vmtest.CURRENT_DOCKER_ALPINE_UUID;
+var docker_image_uuid = vmtest.CURRENT_DOCKER_IMAGE_UUID;
 var smartos_image_uuid = vmtest.CURRENT_SMARTOS_UUID;
 var kvm_image_uuid = vmtest.CURRENT_UBUNTU_UUID;
 var vmobj;
@@ -283,7 +283,7 @@ function trim(str, chars)
 
 test('create docker VM', function (t) {
     var payload = JSON.parse(JSON.stringify(lxdocker_payload));
-    payload.image_uuid = vmtest.CURRENT_DOCKER_ALPINE_UUID;
+    payload.image_uuid = vmtest.CURRENT_DOCKER_IMAGE_UUID;
 
     VM.create(payload, function (err, obj) {
         if (err) {
-- 
2.21.0

