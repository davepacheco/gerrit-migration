commit 4393f03d6baa510c0773e4dab8de1ff82707fb9a (refs/changes/63/3563/3)
Author: Jeff Emershaw <me@jeffemershaw.com>
Date:   2018-06-25T17:42:03+02:00 (1 year, 3 months ago)
    
    PUBAPI-1378 Provide UpdateFabricNetwork endpoint

diff --git a/docs/index.md b/docs/index.md
index dd5a2ab..eddd50b 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -954,6 +954,54 @@ All parameters are optional.
       "netmask": "255.255.255.0"
     }
 
+## UpdateFabricNetwork (PUT /fabrics/:owner_uuid/vlans/:vlan_id/networks/:network_uuid)
+
+Update a fabric network.
+
+### Inputs
+
+All parameters are optional. Note that `gateway` and `vlan_id` are immutable fields.
+
+| Field              | Type             | Description                                                                               |
+| ------------------ | ---------------- | ----------------------------------------------------------------------------------------- |
+| name               | String           | Network name                                                                              |
+| vlan_id            | Number           | Network ID (immutable)                                                                    |
+| provision_start_ip | IP               | First IP address to allow provisioning on                                                 |
+| provision_end_ip   | IP               | Last IP address to allow provisioning on                                                  |
+| gateway            | IP               | Gateway IP address (immutable)                                                            |
+| internet_nat       | Boolean          | Provision a NAT zone on the gateway address (default: true)                               |
+| resolvers          | Array of IPs     | Resolver IP addresses                                                                     |
+| routes             | Routes Object    | Static routes for hosts on this network                                                   |
+| description        | String           | Description                                                                               |
+| fields             | Array of Strings | Properties to return - see [Fields](#fabric-network-fields) above for the list            |
+
+### Example
+
+    PUT /fabrics/cd1cc2a9-e6ad-4c1c-a6bc-acd14e0d4d11/vlans/44/networks/4944e6d9-d3ee-462c-b5a6-1c953551ffcf
+        description='Updated fabric network description'
+
+    {
+      "mtu": 1400,
+      "nic_tag": "sdc_overlay",
+      "name": "web",
+      "provision_end_ip": "10.0.1.254",
+      "provision_start_ip": "10.0.1.2",
+      "vlan_id": 44,
+      "family": "ipv4",
+      "subnet": "10.0.1.0/24",
+      "uuid": "4944e6d9-d3ee-462c-b5a6-1c953551ffcf",
+      "fabric": true,
+      "vnet_id": 7757106,
+      "gateway_provisioned": false,
+      "resolvers": [
+        "8.8.8.8"
+      ],
+      "gateway": "10.0.1.1",
+      "description": "Updated fabric network description",
+      "owner_uuid": "cd1cc2a9-e6ad-4c1c-a6bc-acd14e0d4d11",
+      "netmask": "255.255.255.0"
+    }
+
 ## DeleteFabricNetwork (DELETE /fabrics/:owner_uuid/vlans/:vlan_id/networks/:network_uuid)
 
 Delete a fabric network.
diff --git a/lib/endpoints/fabrics/common.js b/lib/endpoints/fabrics/common.js
index 43b6e66..b615696 100644
--- a/lib/endpoints/fabrics/common.js
+++ b/lib/endpoints/fabrics/common.js
@@ -16,6 +16,7 @@
 
 var constants = require('../../util/constants');
 var mod_restify = require('restify');
+var mod_networks_common = require('../networks/common');
 
 
 
@@ -38,6 +39,6 @@ function ensureOverlaysEnabled(req, res, next) {
 
 
 module.exports = {
-    ensureOverlaysEnabled: ensureOverlaysEnabled
-
+    ensureOverlaysEnabled: ensureOverlaysEnabled,
+    ensureNetworkExists: mod_networks_common.ensureNetworkExists
 };
diff --git a/lib/endpoints/fabrics/networks.js b/lib/endpoints/fabrics/networks.js
index beb60d5..83719cd 100644
--- a/lib/endpoints/fabrics/networks.js
+++ b/lib/endpoints/fabrics/networks.js
@@ -174,7 +174,7 @@ function listFabricNetworks(req, res, next) {
  * PUT /fabrics/:owner_uuid/vlans/:vlan_id/networks/:uuid - update a
  * fabric Network
  */
-function updateFabricNetwork(req, res, next) { // eslint-disable-line
+function updateFabricNetwork(req, res, next) {
     req.params.fabric = true;
 
     mod_fabric_net.update(reqOpts(req), function (err, net) {
@@ -217,9 +217,8 @@ function register(http, serverBefore) {
     http.del({ path: perObjPath, name: 'delFabricNetwork' },
         fabricNetRequired, delFabricNetwork);
 
-    // XXX: unsupported for now
-    // http.put({ path: perObjPath, name: 'updateFabricNetwork' },
-    //    before, updateFabricNetwork);
+    http.put({ path: perObjPath, name: 'updateFabricNetwork' },
+        fabricNetRequired, updateFabricNetwork);
 }
 
 
diff --git a/package.json b/package.json
index f4c643e..8cb37b7 100644
--- a/package.json
+++ b/package.json
@@ -21,7 +21,7 @@
     "portolan-moray": "git+https://github.com/joyent/sdc-portolan-moray.git#7e2c4ca",
     "restify": "4.3.0",
     "restify-warden": "1.1.0",
-    "sdc-clients": "9.2.0",
+    "sdc-clients": "11.1.0",
     "tape": "4.5.1",
     "trace-event": "1.3.0",
     "triton-metrics": "0.1.1",
diff --git a/test/integration/fabrics.test.js b/test/integration/fabrics.test.js
index e07d9c6..940126e 100644
--- a/test/integration/fabrics.test.js
+++ b/test/integration/fabrics.test.js
@@ -682,24 +682,86 @@ test('create network', function (t) {
 });
 
 
-//
-// XXX: add me later
-//  test('update networks', function (t) {
-//      t.test('resize subnet', function (t2) {
-//          mod_fabric_net.update(t2, {
-//              fillInMissing: true,
-//              params: {
-//                  uuid: NETS[3].uuid,
-//                  vlan_id: NETS[3].vlan_id,
-//                  owner_uuid: NETS[3].owner_uuid,
-//                  provision_start_ip: '192.168.0.1',
-//                  provision_end_ip: '192.168.0.250'
-//              },
-//              exp: NETS[3]
-//          });
-//      });
-//  });
-//
+test('update networks', function (t) {
+    t.test('update NETS[0] routes', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[0].uuid,
+                vlan_id: NETS[0].vlan_id,
+                owner_uuid: NETS[0].owner_uuid,
+                routes: {
+                    '172.16.0.10/24': '10.2.1.1'
+                }
+            },
+            exp: extend(NETS[0], {
+                routes: {
+                    '172.16.0.10/24': '10.2.1.1'
+                }
+            })
+        });
+    });
+    t.test('standardize NETS[0] network', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[0].uuid,
+                vlan_id: NETS[0].vlan_id,
+                owner_uuid: NETS[0].owner_uuid,
+                routes: NETS[0].routes
+            },
+            exp: NETS[0]
+        });
+    });
+    t.test('rename NETS[3] name', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[3].uuid,
+                vlan_id: NETS[3].vlan_id,
+                owner_uuid: NETS[3].owner_uuid,
+                name: NETS[3].name + '-name'
+            },
+            exp: extend(NETS[3], { name: NETS[3].name + '-name' })
+        });
+    });
+
+    t.test('resize NETS[3] subnet', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[3].uuid,
+                vlan_id: NETS[3].vlan_id,
+                owner_uuid: NETS[3].owner_uuid,
+                name: NETS[3].name,
+                provision_start_ip: '192.168.0.1',
+                provision_end_ip: '192.168.0.250'
+            },
+            exp: extend(NETS[3], {
+                provision_start_ip: '192.168.0.1',
+                provision_end_ip: '192.168.0.250'
+            })
+        });
+    });
+    t.test('standardize NETS[3] to pass remaining tests', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[3].uuid,
+                vlan_id: NETS[3].vlan_id,
+                owner_uuid: NETS[3].owner_uuid,
+                name: NETS[3].name,
+                provision_start_ip: '192.168.0.2',
+                provision_end_ip: '192.168.0.254'
+            },
+            exp: extend(NETS[3], {
+                provision_start_ip: '192.168.0.2',
+                provision_end_ip: '192.168.0.254'
+            })
+        });
+    });
+});
+
 
 
 test('list networks', function (t) {
diff --git a/test/lib/fabric-net.js b/test/lib/fabric-net.js
index fc969a9..8791a50 100644
--- a/test/lib/fabric-net.js
+++ b/test/lib/fabric-net.js
@@ -283,11 +283,18 @@ function updateFabricNetwork(t, opts, callback) {
     common.assertArgs(t, opts, callback);
 
     var client = opts.client || mod_client.get();
+    var params = clone(opts.params);
+    var owner = params.owner_uuid;
+    var vlan = params.vlan_id;
+    var network = params.uuid;
 
     opts.type = TYPE;
     opts.reqType = 'update';
 
-    client.updateFabricNetwork(opts.uuid, opts.params,
+    delete params.owner_uuid;
+    delete params.uuid;
+
+    client.updateFabricNetwork(owner, vlan, network, params,
         common.afterAPIcall.bind(null, t, opts, callback));
 }
 
