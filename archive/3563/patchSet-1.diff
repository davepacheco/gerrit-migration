From be21bbaa6fd4203a4227642609aa73f18bf3005c Mon Sep 17 00:00:00 2001
From: Jeff Emershaw <me@jeffemershaw.com>
Date: Thu, 8 Mar 2018 12:06:25 -0500
Subject: [PATCH] PUBAPI-1378 Provide UpdateFabricNetwork endpoint

---
 deps/jsstyle                      |  2 +-
 docs/index.md                     | 23 ++++++++
 lib/endpoints/fabrics/common.js   |  5 +-
 lib/endpoints/fabrics/networks.js | 11 ++--
 package.json                      |  2 +-
 test/integration/fabrics.test.js  | 98 +++++++++++++++++++++++++------
 test/lib/fabric-net.js            |  9 ++-
 7 files changed, 122 insertions(+), 28 deletions(-)

diff --git a/deps/jsstyle b/deps/jsstyle
index b94eb62..ccb145b 160000
--- a/deps/jsstyle
+++ b/deps/jsstyle
@@ -1 +1 @@
-Subproject commit b94eb629ee524d21b563c8b4461caa2bdf1becc6
+Subproject commit ccb145bab281b81e1fbebd45b5d2c084c454df5d
diff --git a/docs/index.md b/docs/index.md
index fec29f4..a8a250e 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -946,6 +946,29 @@ All parameters are optional.
       "netmask": "255.255.255.0"
     }
 
+## UpdateFabricNetwork (PUT /fabrics/:owner_uuid/vlans/:vlan_id/networks/:network_uuid)
+
+Update a fabric network.
+
+### Inputs
+
+All parameters are optional.
+
+| Field              | Type             | Description                                                                               |
+| ------------------ | ---------------- | ----------------------------------------------------------------------------------------- |
+| name               | String           | Network name                                                                              |
+| vlan_id            | Number           | Network ID                                                                                |
+| provision_start_ip | IP               | First IP address to allow provisioning on                                                 |
+| provision_end_ip   | IP               | Last IP address to allow provisioning on                                                  |
+| gateway            | IP               | Gateway IP address (Optional)                                                             |
+| internet_nat       | Boolean          | Provision a NAT zone on the gateway address (Optional) (default: true)                    |
+| resolvers          | Array of IPs     | Resolver IP addresses (Optional)                                                          |
+| routes             | Routes Object    | Static routes for hosts on this network (Optional)                                        |
+| description        | String           | Description (Optional)                                                                    |
+| fields             | Array of Strings | Properties to return - see [Fields](#fabric-network-fields) above for the list (Optional) |
+
+### Example
+
 ## DeleteFabricNetwork (DELETE /fabrics/:owner_uuid/vlans/:vlan_id/networks/:network_uuid)
 
 Delete a fabric network.
diff --git a/lib/endpoints/fabrics/common.js b/lib/endpoints/fabrics/common.js
index 3cd9772..7aea0ed 100644
--- a/lib/endpoints/fabrics/common.js
+++ b/lib/endpoints/fabrics/common.js
@@ -16,6 +16,7 @@
 
 var constants = require('../../util/constants');
 var mod_restify = require('restify');
+var mod_networks_common = require('../networks/common');
 
 
 
@@ -38,6 +39,6 @@ function ensureOverlaysEnabled(req, res, next) {
 
 
 module.exports = {
-    ensureOverlaysEnabled: ensureOverlaysEnabled
-
+    ensureOverlaysEnabled: ensureOverlaysEnabled,
+    ensureNetworkExists: mod_networks_common.ensureNetworkExists
 };
diff --git a/lib/endpoints/fabrics/networks.js b/lib/endpoints/fabrics/networks.js
index db4c5e2..d1d471a 100644
--- a/lib/endpoints/fabrics/networks.js
+++ b/lib/endpoints/fabrics/networks.js
@@ -149,7 +149,7 @@ function listFabricNetworks(req, res, next) {
 function updateFabricNetwork(req, res, next) { // eslint-disable-line
     req.params.fabric = true;
 
-    mod_fabric_net.update(reqOpts(req), function (err, net) {
+    mod_fabric_net.update(req, function (err, net) {
         if (err) {
             return next(err);
         }
@@ -169,6 +169,9 @@ function register(http, serverBefore) {
         mod_common.ensureOverlaysEnabled,
         getParentVLAN
     ]);
+    var netRequired = before.concat([
+        mod_common.ensureNetworkExists.bind(null, 'uuid')
+    ]);
     var path = '/fabrics/:owner_uuid/vlans/:vlan_id/networks';
     var perObjPath = path + '/:uuid';
 
@@ -180,10 +183,8 @@ function register(http, serverBefore) {
         before, getFabricNetwork);
     http.post({ path: path, name: 'createFabricNetwork' },
         before, createFabricNetwork);
-
-    // XXX: unsupported for now
-    // http.put({ path: perObjPath, name: 'updateFabricNetwork' },
-    //    before, updateFabricNetwork);
+    http.put({ path: perObjPath, name: 'updateFabricNetwork' },
+       before, netRequired, updateFabricNetwork);
 }
 
 
diff --git a/package.json b/package.json
index 96fbdeb..783fb7d 100644
--- a/package.json
+++ b/package.json
@@ -20,7 +20,7 @@
     "portolan-moray": "git+https://github.com/joyent/sdc-portolan-moray.git#7e2c4ca",
     "restify": "4.1.1",
     "restify-warden": "0.2.0",
-    "sdc-clients": "9.2.0",
+    "sdc-clients": "git+https://github.com/joyent/node-sdc-clients.git#b811daa832923d66d419d9d22aea4732f664dca3",
     "tape": "4.5.1",
     "trace-event": "1.3.0",
     "vasync": "1.6.4",
diff --git a/test/integration/fabrics.test.js b/test/integration/fabrics.test.js
index cc2f31f..9d770c1 100644
--- a/test/integration/fabrics.test.js
+++ b/test/integration/fabrics.test.js
@@ -550,24 +550,86 @@ test('create network', function (t) {
 });
 
 
-//
-// XXX: add me later
-//  test('update networks', function (t) {
-//      t.test('resize subnet', function (t2) {
-//          mod_fabric_net.update(t2, {
-//              fillInMissing: true,
-//              params: {
-//                  uuid: NETS[3].uuid,
-//                  vlan_id: NETS[3].vlan_id,
-//                  owner_uuid: NETS[3].owner_uuid,
-//                  provision_start_ip: '192.168.0.1',
-//                  provision_end_ip: '192.168.0.250'
-//              },
-//              exp: NETS[3]
-//          });
-//      });
-//  });
-//
+test('update networks', function (t) {
+    t.test('update NETS[0] routes', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[0].uuid,
+                vlan_id: NETS[0].vlan_id,
+                owner_uuid: NETS[0].owner_uuid,
+                routes: {
+                    '172.16.0.10/24': '10.2.1.1'
+                }
+            },
+            exp: extend(NETS[0], {
+                routes: {
+                    '172.16.0.10/24': '10.2.1.1'
+                }
+            })
+        });
+    });
+    t.test('standardize NETS[0] network', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[0].uuid,
+                vlan_id: NETS[0].vlan_id,
+                owner_uuid: NETS[0].owner_uuid,
+                routes: NETS[0].routes
+            },
+            exp: NETS[0]
+        });
+    });
+    t.test('rename NETS[3] name', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[3].uuid,
+                vlan_id: NETS[3].vlan_id,
+                owner_uuid: NETS[3].owner_uuid,
+                name: NETS[3].name + '-name'
+            },
+            exp: extend(NETS[3], { name: NETS[3].name + '-name' })
+        });
+    });
+
+    t.test('resize NETS[3] subnet', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[3].uuid,
+                vlan_id: NETS[3].vlan_id,
+                owner_uuid: NETS[3].owner_uuid,
+                name: NETS[3].name,
+                provision_start_ip: '192.168.0.1',
+                provision_end_ip: '192.168.0.250'
+            },
+            exp: extend(NETS[3], {
+                provision_start_ip: '192.168.0.1',
+                provision_end_ip: '192.168.0.250'
+            })
+        });
+    });
+    t.test('standardize NETS[3] to pass remaining tests', function (t2) {
+        mod_fabric_net.update(t2, {
+            fillInMissing: true,
+            params: {
+                uuid: NETS[3].uuid,
+                vlan_id: NETS[3].vlan_id,
+                owner_uuid: NETS[3].owner_uuid,
+                name: NETS[3].name,
+                provision_start_ip: '192.168.0.2',
+                provision_end_ip: '192.168.0.254'
+            },
+            exp: extend(NETS[3], {
+                provision_start_ip: '192.168.0.2',
+                provision_end_ip: '192.168.0.254'
+            })
+        });
+    });
+});
+
 
 
 test('list networks', function (t) {
diff --git a/test/lib/fabric-net.js b/test/lib/fabric-net.js
index 3c609d3..467a4c9 100644
--- a/test/lib/fabric-net.js
+++ b/test/lib/fabric-net.js
@@ -284,11 +284,18 @@ function updateFabricNetwork(t, opts, callback) {
     common.assertArgs(t, opts, callback);
 
     var client = opts.client || mod_client.get();
+    var params = clone(opts.params);
+    var owner = params.owner_uuid;
+    var vlan = params.vlan_id;
+    var network = params.uuid;
 
     opts.type = TYPE;
     opts.reqType = 'update';
 
-    client.updateFabricNetwork(opts.uuid, opts.params,
+    delete params.owner_uuid;
+    delete params.uuid;
+
+    client.updateFabricNetwork(owner, vlan, network, params,
         common.afterAPIcall.bind(null, t, opts, callback));
 }
 
-- 
2.21.0

