commit 2e3135f7d9df97fecabd67d243876393c956eb73 (refs/changes/87/4587/1)
Author: Trent Mick <trentm@gmail.com>
Date:   2018-07-26T12:19:10-07:00 (1 year, 2 months ago)
    
    TRITON-635 restify-clients usage should use 'contentMd5' option to avoid cross-node version BadDigest errors

diff --git a/CHANGES.md b/CHANGES.md
index ddef754..5671515 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -8,6 +8,11 @@
 
 ## not yet released
 
+## 11.3.1
+
+- TRITON-635 restify-clients usage has been updated to use the new 'contentMd5'
+  option to avoid cross-node version BadDigest errors.
+
 ## 11.3.0
 
 - TRITON-52 Add imgapi.importImageFromDatacenter method, which can be used to
diff --git a/lib/amon.js b/lib/amon.js
index 93e4f34..96d4c2c 100644
--- a/lib/amon.js
+++ b/lib/amon.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -18,6 +18,7 @@ var restifyClients = require('restify-clients');
 
 // --- Exported Amon Client
 
+/* BEGIN JSSTYLED */
 /**
  * Constructor
  *
@@ -26,14 +27,22 @@ var restifyClients = require('restify-clients');
  *
  * @param {Object} options
  *    - url {String} Amon Master location.
+ *    - contentMd5 {Object} Handling of Content-MD5 response header. Per
+ *      https://github.com/joyent/triton/blob/master/docs/developer-guide/coding-guidelines-node.md#restify-clients-contentmd5-option
+ *      this defaults to `{encodings: ['utf8', 'binary']}`.
  *    - ... any other options allowed to `restifyClients.createJsonClient`
- *
  */
+/* END JSSTYLED */
 function Amon(options) {
-    if (!options)
-        throw new TypeError('options required');
-    if (!options.url)
-        throw new TypeError('options.url (String) is required');
+    assert.object(options, 'options');
+    assert.string(options.url, 'options.url');
+    assert.optionalObject(options.contentMd5, 'options.contentMd5');
+
+    if (!options.contentMd5) {
+        options.contentMd5 = {
+            encodings: ['utf8', 'binary']
+        };
+    }
 
     this.client = restifyClients.createJsonClient(options);
 }
diff --git a/lib/imgapi.js b/lib/imgapi.js
index bde4389..db15d13 100644
--- a/lib/imgapi.js
+++ b/lib/imgapi.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -225,6 +225,7 @@ function simpleMerge(a, b) {
 
 // ---- client API
 
+/* BEGIN JSSTYLED */
 /**
  * Create an IMGAPI client.
  *
@@ -245,6 +246,9 @@ function simpleMerge(a, b) {
  *        header in requests to the IMGAPI server. If unspecified this
  *        defaults to '*', meaning that over time you could experience breaking
  *        changes. Specifying a value is strongly recommended. E.g. '~2'.
+ *      - `contentMd5` {Object} Handling of Content-MD5 response header. Per
+ *        https://github.com/joyent/triton/blob/master/docs/developer-guide/coding-guidelines-node.md#restify-clients-contentmd5-option
+ *        this defaults to `{encodings: ['utf8', 'binary']}`.
  *      - ... and any other standard restify client options,
  *        e.g. `options.userAgent`.
  *
@@ -252,6 +256,7 @@ function simpleMerge(a, b) {
  * requests if either the 'password' or 'sign' options are provided. The
  * former implies Basic auth, the latter http-signature auth.
  */
+/* END JSSTYLED */
 function IMGAPI(options) {
     assert.object(options, 'options');
     assert.string(options.url, 'options.url');
@@ -265,6 +270,7 @@ function IMGAPI(options) {
         // Allow options.version=null to avoid default, mainly for testing.
         assert.string(options.version, 'options.version');
     }
+    assert.optionalObject(options.contentMd5, 'options.contentMd5');
     options = objCopy(options);
 
     // `this.url` is the URL with the optional channel query param *removed*.
@@ -301,6 +307,13 @@ function IMGAPI(options) {
     if (options.version === undefined) {
         options.version = '*';
     }
+
+    if (!options.contentMd5) {
+        options.contentMd5 = {
+            encodings: ['utf8', 'binary']
+        };
+    }
+
     this.client = restifyClients.createJsonClient(options);
     // Work around <https://github.com/mcavage/node-restify/pull/291>.
     // Switch to `restify.createHttpClient` when that pull is in.
diff --git a/lib/papi.js b/lib/papi.js
index f8f735d..d66bae4 100644
--- a/lib/papi.js
+++ b/lib/papi.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
@@ -31,21 +31,24 @@ function PAPI(clientOpts) {
         return new PAPI(clientOpts);
     }
 
-    var self = this;
-
-    if (typeof (clientOpts) !== 'object') {
-        throw new TypeError('clientOpts (Object) required');
-    }
+    assert.object(clientOpts, 'clientOpts');
+    assert.string(clientOpts.url, 'clientOpts.url');
+    assert.optionalObject(clientOpts.contentMd5, 'clientOpts.contentMd5');
 
-    if (typeof (clientOpts.url) !== 'string') {
-        throw new TypeError('clientOpts.url (String) required');
+    // JSSTYLED
+    // Per https://github.com/joyent/triton/blob/master/docs/developer-guide/coding-guidelines-node.md#restify-clients-contentmd5-option
+    if (!clientOpts.contentMd5) {
+        clientOpts.contentMd5 = {
+            encodings: ['utf8', 'binary']
+        };
     }
 
     if (!clientOpts['X-Api-Version']) {
         clientOpts['X-Api-Version'] = '~7.0';
     }
 
-    self.client = restifyClients.createJsonClient(clientOpts);
+    this.client = restifyClients.createJsonClient(clientOpts);
+
     return undefined;
 }
 
diff --git a/lib/restifyclient.js b/lib/restifyclient.js
index 0f5d797..b9cd77f 100644
--- a/lib/restifyclient.js
+++ b/lib/restifyclient.js
@@ -5,16 +5,18 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 /*
  * Generic restify client with basic auth
  */
 
+var assert = require('assert-plus');
 var restifyClients = require('restify-clients');
 
 
+/* BEGIN JSSTYLED */
 /**
  * Constructor
  *
@@ -22,17 +24,26 @@ var restifyClients = require('restify-clients');
  * RestClient constructor takes (for example retry/backoff settings).
  *
  * @param {Object} options
+ *    - url {String}
+ *    - contentMd5 {Object} Handling of Content-MD5 response header. Per
+ *      https://github.com/joyent/triton/blob/master/docs/developer-guide/coding-guidelines-node.md#restify-clients-contentmd5-option
+ *      this defaults to `{encodings: ['utf8', 'binary']}`.
  *    - username {String} username for basic auth.
  *    - password {String} password for basic auth.
- *    - url {String} NAPI url.
  *    - ... any other options allowed to `restifyClients.createJsonClient`
  *
  */
+/* END JSSTYLED */
 function RestifyClient(options) {
-    if (!options)
-        throw new TypeError('options required');
-    if (!options.url)
-        throw new TypeError('options.url (String) is required');
+    assert.object(options, 'options');
+    assert.string(options.url, 'options.url');
+    assert.optionalObject(options.contentMd5, 'options.contentMd5');
+
+    if (!options.contentMd5) {
+        options.contentMd5 = {
+            encodings: ['utf8', 'binary']
+        };
+    }
 
     this.client = restifyClients.createJsonClient(options);
 
diff --git a/package.json b/package.json
index 1a3b045..dc3bd55 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdc-clients",
   "description": "node.js client libraries for Triton core REST APIs.",
-  "version": "11.3.0",
+  "version": "11.3.1",
   "homepage": "http://www.joyent.com",
   "repository": {
     "type": "git",
@@ -18,7 +18,7 @@
     "lru-cache": "2.3.0",
     "lomstream": "1.1.0",
     "once": "^1.3.1",
-    "restify-clients": "^1.4.1",
+    "restify-clients": "^1.6.0",
     "restify-errors": "^3.0.0",
     "vasync": "^1.6.2",
     "verror": "^1.6.0",
