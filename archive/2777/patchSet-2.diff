commit d79d7b8275583ce15074d5be1ac3531a1b22b3a9 (refs/changes/77/2777/2)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-10-12T15:16:39-07:00 (2 years ago)
    
    CNS-214 cns-server should not respond to responses

diff --git a/lib/dns-server.js b/lib/dns-server.js
index fca411d..c4c323b 100644
--- a/lib/dns-server.js
+++ b/lib/dns-server.js
@@ -21,6 +21,7 @@ var dns = require('dns');
 var crypto = require('crypto');
 var dgram = require('dgram');
 var net = require('net');
+var os = require('os');
 
 var consts = require('./consts');
 var dnsClients = require('./dns-clients');
@@ -201,6 +202,35 @@ DNSServer.prototype.addPeersFromConfig = function () {
 		this.addPeer(peers[i]);
 };
 
+var NIC_CACHE_TTL = 5*60*1000;
+var nicCache = undefined;
+var nicCacheUpdated = undefined;
+
+function getNics() {
+	var now = new Date();
+	var last = nicCacheUpdated;
+	if (last === undefined ||
+	    now.getTime() - last.getTime() > NIC_CACHE_TTL) {
+		nicCache = os.networkInterfaces();
+		nicCacheUpdated = now;
+	}
+	return (nicCache);
+}
+
+function isLocalAddr(addr) {
+	var nics = getNics();
+	var found = false;
+	if (addr === '0.0.0.0')
+		return (true);
+	Object.keys(nics).forEach(function (k) {
+		nics[k].forEach(function (naddr) {
+			if (naddr.address === addr)
+				found = true;
+		});
+	});
+	return (found);
+}
+
 DNSServer.prototype.handleQuery = function (q, cb) {
 	assert.object(q, 'query');
 
@@ -217,6 +247,18 @@ DNSServer.prototype.handleQuery = function (q, cb) {
 		return;
 	}
 
+	if (isLocalAddr(addr) && q.src.port === this.port) {
+		q.log.debug('ignoring self message');
+		cb();
+		return;
+	}
+
+	if (q.testFlag('qr')) {
+		q.log.debug('ignoring response message');
+		cb();
+		return;
+	}
+
 	var idx = name.indexOf(META_SUFFIX);
 	if (idx !== -1 && idx + META_SUFFIX.length === name.length) {
 		var meta = name.slice(0, idx);
