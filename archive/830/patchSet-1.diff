commit 7cec48f27c15827ae18083b74fbf4909ea911a9b (refs/changes/30/830/1)
Author: Suk Won Choi <sw00.choi@samsung.com>
Date:   2016-11-01T09:40:49+00:00 (2 years, 11 months ago)
    
    joyent/node-docker-registry-client#13 - Add support for no_proxy

diff --git a/lib/registry-client-v1.js b/lib/registry-client-v1.js
index a6c0b7c..49aa169 100644
--- a/lib/registry-client-v1.js
+++ b/lib/registry-client-v1.js
@@ -122,6 +122,7 @@ function login(opts, cb) {
     assert.optionalBool(opts.insecure, 'opts.insecure');
     assert.optionalObject(opts.log, 'opts.log');
     assert.optionalString(opts.userAgent, 'opts.userAgent');
+    assert.optionalString(opts.noProxy, 'opts.noProxy');
     assert.func(cb, 'cb');
 
     var index = opts.index || opts.indexName;
@@ -144,6 +145,7 @@ function login(opts, cb) {
         userAgent: opts.userAgent || common.DEFAULT_USERAGENT,
         agent: opts.agent,
         proxy: opts.proxy,
+        noProxy: opts.noProxy,
         headers: opts.headers,
         rejectUnauthorized: !opts.insecure
     });
@@ -294,6 +296,7 @@ function RegistryClientV1(opts) {
     // opt.agent (optional, bool or object)
     assert.optionalString(opts.userAgent, 'opts.userAgent');
     // opts.proxy (optional, bool or object or string);
+    assert.optionalString(opts.noProxy, 'opts.noProxy');
 
     this.log = opts.log
         ? opts.log.child({
@@ -330,6 +333,7 @@ function RegistryClientV1(opts) {
         log: this.log,
         agent: opts.agent,
         proxy: opts.proxy,
+        noProxy: opts.noProxy,
         rejectUnauthorized: !this.insecure,
         userAgent: opts.userAgent || common.DEFAULT_USERAGENT
     };
diff --git a/lib/registry-client-v2.js b/lib/registry-client-v2.js
index fc22c1a..f8711de 100644
--- a/lib/registry-client-v2.js
+++ b/lib/registry-client-v2.js
@@ -156,6 +156,7 @@ function _getToken(opts, cb) {
     assert.object(opts.log, 'opts.log');
     assert.optionalObject(opts.agent, 'opts.agent');
     // assert.optional object or bool(opts.proxy, 'opts.proxy');
+    assert.optionalString(opts.noProxy, 'opts.noProxy');
     assert.optionalBool(opts.insecure, 'opts.insecure');
     assert.optionalString(opts.userAgent, 'opts.userAgent');
     var log = opts.log;
@@ -202,6 +203,7 @@ function _getToken(opts, cb) {
         log: log,
         agent: opts.agent,
         proxy: opts.proxy,
+        noProxy: opts.noProxy,
         rejectUnauthorized: !opts.insecure,
         userAgent: opts.userAgent || common.DEFAULT_USERAGENT
     });
@@ -613,6 +615,7 @@ function ping(opts, cb) {
     assert.optionalString(opts.userAgent, 'opts.userAgent');
     assert.optionalObject(opts.agent, 'opts.agent');
     // assert.optional object or bool(opts.proxy, 'opts.proxy');
+    assert.optionalString(opts.noProxy, 'opts.noProxy');
 
     var index = opts.index || opts.indexName;
     if (typeof (index) === 'string') {
@@ -673,7 +676,8 @@ function ping(opts, cb) {
         userAgent: opts.userAgent || common.DEFAULT_USERAGENT,
         rejectUnauthorized: rejectUnauthorized,
         agent: opts.agent,
-        proxy: opts.proxy
+        proxy: opts.proxy,
+        noProxy: opts.noProxy
     });
 
     var headers = {};
@@ -763,6 +767,7 @@ function login(opts, cb) {
     assert.optionalString(opts.userAgent, 'opts.userAgent');
     assert.optionalObject(opts.agent, 'opts.agent');
     // assert.optional object or bool(opts.proxy, 'opts.proxy');
+    assert.optionalString(opts.noProxy, 'opts.noProxy');
     assert.func(cb, 'cb');
 
     var index = opts.index || opts.indexName;
@@ -875,6 +880,7 @@ function login(opts, cb) {
                 log: log,
                 agent: opts.agent,
                 proxy: opts.proxy,
+                noProxy: opts.noProxy,
                 userAgent: opts.userAgent,
                 insecure: opts.insecure
             }, function (err, token) {
@@ -980,6 +986,8 @@ function RegistryClientV2(opts) {
     } else {
         assert.optionalString(opts.password, 'opts.password');
     }
+    // assert.optional object or bool(opts.proxy, 'opts.proxy');
+    assert.optionalString(opts.noProxy, 'opts.noProxy');
     assert.optionalString(opts.token, 'opts.token');  // for Bearer auth
     assert.optionalBool(opts.insecure, 'opts.insecure');
     assert.optionalString(opts.scheme, 'opts.scheme');
@@ -1037,6 +1045,7 @@ function RegistryClientV2(opts) {
         log: this.log,
         agent: opts.agent,
         proxy: opts.proxy,
+        noProxy: opts.noProxy,
         rejectUnauthorized: !this.insecure,
         userAgent: opts.userAgent || common.DEFAULT_USERAGENT
     };
