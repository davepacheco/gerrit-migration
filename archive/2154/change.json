{"project":"joyent/illumos-joyent","branch":"master","id":"I3cac99397e8917b53900c46594b5897fa8d68f4a","number":"2154","subject":"OS-6206 nvme: use a semaphore to guard submission queue Reviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e Reviewed by: Jason King \u003cjason.king@joyent.com\u003e Reviewed by: Robert Mustacchi \u003crm@joyent.com\u003e Approved by: Jerry Jelinek \u003cjerry.jelinek@joyent.co","owner":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"url":"https://cr.joyent.us/2154","commitMessage":"OS-6206 nvme: use a semaphore to guard submission queue\nReviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\nReviewed by: Jason King \u003cjason.king@joyent.com\u003e\nReviewed by: Robert Mustacchi \u003crm@joyent.com\u003e\nApproved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\n","createdOn":1498566075,"lastUpdated":1500383915,"open":false,"status":"MERGED","comments":[{"timestamp":1498566075,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 1."},{"timestamp":1498577156,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1498597569,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1:\n\nSo if we end up blocking everything in a semaphore, how do we inherently end up creating backpressure in the system? It seems like this leaves us with no active way of pushing back on the system because commands will just be queued at nvme unless some other part of the system decides that it has too much outstanding work.\n\nIf we look at say NIC drivers, when we fill up queues, we propagate that fact back or drop packets. While I know the storage stack is different, it seems like we want to have something rather than swallowing everything up."},{"timestamp":1498654712,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 2: Patch Set 1 was rebased"},{"timestamp":1498654774,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 3."},{"timestamp":1498655651,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 3: Code-Review+1\n\nThis looks good to me but it would be good to see a response to Robert\u0027s question and perhaps a comment added to explicitly explain that behavior."},{"timestamp":1498660227,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 3:\n\n(1 comment)\n\n\u003e So if we end up blocking everything in a semaphore, how do we\n \u003e inherently end up creating backpressure in the system? It seems\n \u003e like this leaves us with no active way of pushing back on the\n \u003e system because commands will just be queued at nvme unless some\n \u003e other part of the system decides that it has too much outstanding\n \u003e work.\n \u003e \n \u003e If we look at say NIC drivers, when we fill up queues, we propagate\n \u003e that fact back or drop packets. While I know the storage stack is\n \u003e different, it seems like we want to have something rather than\n \u003e swallowing everything up.\n\nBlkdev checks the queue size itself and doesn\u0027t submit packets if the queues are full. The problem is that blkdev keeps one queue size for each instance, which corresponds to the namespace, but nvme queues are shared across namespaces. So the way we calculate the queue size for blkdev doesn\u0027t really reflect reality.\n\nOn the other hand, blkdev doesn\u0027t really support any backpressure back to other layers, it will just add packets to the wait queue as they come in. And if blkdev receives an EAGAIN from nvme, it will finish the I/O request with EAGAIN instead of putting it back on its waitq. Blkdev really needs to be improved here, ideally by supporting multiple queues itself.\n\nI haven\u0027t noticed any problems with the semaphore potentially blocking as I never managed to get even close to full I/O queues in nvme. But still, perhaps there should be a non-blocking variant of nvme_submit_cmd() that uses sema_tryp(). What do you think?"},{"timestamp":1498662279,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 3: Code-Review+1"},{"timestamp":1498774133,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 3:\n\n\u003e (1 comment)\n \u003e \n \u003e \u003e So if we end up blocking everything in a semaphore, how do we\n \u003e \u003e inherently end up creating backpressure in the system? It seems\n \u003e \u003e like this leaves us with no active way of pushing back on the\n \u003e \u003e system because commands will just be queued at nvme unless some\n \u003e \u003e other part of the system decides that it has too much outstanding\n \u003e \u003e work.\n \u003e \u003e\n \u003e \u003e If we look at say NIC drivers, when we fill up queues, we\n \u003e propagate\n \u003e \u003e that fact back or drop packets. While I know the storage stack is\n \u003e \u003e different, it seems like we want to have something rather than\n \u003e \u003e swallowing everything up.\n \u003e \n \u003e Blkdev checks the queue size itself and doesn\u0027t submit packets if\n \u003e the queues are full. The problem is that blkdev keeps one queue\n \u003e size for each instance, which corresponds to the namespace, but\n \u003e nvme queues are shared across namespaces. So the way we calculate\n \u003e the queue size for blkdev doesn\u0027t really reflect reality.\n \u003e \n \u003e On the other hand, blkdev doesn\u0027t really support any backpressure\n \u003e back to other layers, it will just add packets to the wait queue as\n \u003e they come in. And if blkdev receives an EAGAIN from nvme, it will\n \u003e finish the I/O request with EAGAIN instead of putting it back on\n \u003e its waitq. Blkdev really needs to be improved here, ideally by\n \u003e supporting multiple queues itself.\n \u003e \n \u003e I haven\u0027t noticed any problems with the semaphore potentially\n \u003e blocking as I never managed to get even close to full I/O queues in\n \u003e nvme. But still, perhaps there should be a non-blocking variant of\n \u003e nvme_submit_cmd() that uses sema_tryp(). What do you think?\n\nOK. In this case it seems like what we\u0027re really going to need to do is put in more thought at the blkdev level for the time being. In that case, I guess what we have is reasonable and there\u0027s not really a great option at the moment for this. It seems like because of the blkdev layer that does bound the amount that\u0027ll end up queued in the semaphores, so this at least can\u0027t be used to eat up all memory."},{"timestamp":1498774672,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 3: Code-Review+1\n\nSo, all in all, I think the change to use semaphores is reasonable. What I\u0027m not sure or something that you\u0027ll want to think about it is how this looks when we extend more proper FM handling and device reset capabilities to the driver and whether or not the function should return void or not.\n\nFor example, if you look at nvme_submit_cmd() the DMA and register writes should in theory be checked for correctness at some point. It\u0027s not clear in those cases how you\u0027ll want to handle things. However, it may ultimately be fine because that\u0027ll be handled and cleaned up with all the other outstanding commands.\n\nI forgot to note in the last comment, but since we don\u0027t have the async consumer, I see no reason to write it."},{"timestamp":1498835672,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 3: Integration-Approval+1"},{"timestamp":1500382771,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 4: Patch Set 3 was rebased"},{"timestamp":1500383363,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 5: Commit message was updated."},{"timestamp":1500383915,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Hans Rosenfeld"}],"currentPatchSet":{"number":"5","revision":"3cac99397e8917b53900c46594b5897fa8d68f4a","parents":["1664cf63bfb705f16f1f7cd3f265f72911f0be0f"],"ref":"refs/changes/54/2154/5","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1500383363,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498655651,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498662279,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498774672,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1498835672,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1500383915,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":18,"deletions":-59},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-2}],"sizeInsertions":19,"sizeDeletions":-61},"patchSets":[{"number":"1","revision":"f3136887e7aec52d049065aac3dc3e348e19a111","parents":["8aef19f7563fa7e20f072f46202468eb3bda3868"],"ref":"refs/changes/54/2154/1","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1498566075,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":3249,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Is there a reason you changed this from the previous usage of ioq?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":3249,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Just a mismerge, fixed."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":18,"deletions":-59},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-2}],"sizeInsertions":19,"sizeDeletions":-61},{"number":"2","revision":"daaa704e41795b4a630992bfe46ed6c4dd73bf8b","parents":["dbeef7f762c59b1461e27146a764182be5eab8cb"],"ref":"refs/changes/54/2154/2","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1498654712,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"TRIVIAL_REBASE","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":18,"deletions":-59},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-2}],"sizeInsertions":19,"sizeDeletions":-61},{"number":"3","revision":"c32e1cc45e5ba8b332b47f5e552617952fcd79e1","parents":["dbeef7f762c59b1461e27146a764182be5eab8cb"],"ref":"refs/changes/54/2154/3","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1498654774,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498774672,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498655651,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1498835672,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498662279,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":18,"deletions":-59},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-2}],"sizeInsertions":19,"sizeDeletions":-61},{"number":"4","revision":"e93414824b37920f398e73d6f9c91a5a6ebddf43","parents":["1664cf63bfb705f16f1f7cd3f265f72911f0be0f"],"ref":"refs/changes/54/2154/4","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1500382771,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498774672,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498655651,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1498835672,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498662279,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":18,"deletions":-59},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-2}],"sizeInsertions":19,"sizeDeletions":-61},{"number":"5","revision":"3cac99397e8917b53900c46594b5897fa8d68f4a","parents":["1664cf63bfb705f16f1f7cd3f265f72911f0be0f"],"ref":"refs/changes/54/2154/5","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1500383363,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498774672,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498655651,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1498835672,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498662279,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"SUBM","value":"1","grantedOn":1500383915,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":18,"deletions":-59},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-2}],"sizeInsertions":19,"sizeDeletions":-61}],"allReviewers":[{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}]}