commit 822e39a33a6975d651d69c6158b734ba226b0e49 (refs/changes/96/3496/1)
Author: Trent Mick <trentm@gmail.com>
Date:   2018-02-27T11:32:36-08:00 (1 year, 7 months ago)
    
    TRITON-185 add 'server', 'x-request-id', and 'x-server-name' header handling to SAPI

diff --git a/lib/server/sapi.js b/lib/server/sapi.js
index 82700d4..687402f 100644
--- a/lib/server/sapi.js
+++ b/lib/server/sapi.js
@@ -14,13 +14,39 @@
 
 var assert = require('assert-plus');
 var async = require('async');
+var fs = require('fs');
 var http = require('http');
 var https = require('https');
+var os = require('os');
 var restify = require('restify');
 
 var endpoints = require('./endpoints');
 var Model = require('./model');
 
+var VERSION = null;
+var HOSTNAME = os.hostname();
+
+
+// ---- internal helper functions
+
+/**
+ * Returns the current semver version stored in package.json, used for the
+ * "Server" header in responses.
+ *
+ * @return {String} version.
+ */
+function serverVersion() {
+    if (!VERSION) {
+        var pkg = fs.readFileSync(__dirname + '/../../package.json', 'utf8');
+        VERSION = JSON.parse(pkg).version;
+    }
+
+    return VERSION;
+}
+
+
+// ---- SAPI app object
+
 function SAPI(config) {
     assert.object(config.log, 'config.log');
 
@@ -83,7 +109,7 @@ SAPI.prototype.shutdown = function shutdown(cb) {
 
 function createServer(options) {
     var server = restify.createServer({
-        name: 'Services API',
+        name: 'sapi/' + serverVersion(),
         log: options.log,
         version: ['1.0.0', '2.0.0']
     });
@@ -106,6 +132,17 @@ function createServer(options) {
         next();
     });
 
+    // Set stock Triton service headers.
+    server.use(function stdTritonResHeaders(req, res, next) {
+        res.on('header', function onHeader() {
+            res.header('Server', server.name);
+            res.header('x-request-id', req.getId());
+            res.header('x-server-name', HOSTNAME);
+        });
+
+        next();
+    });
+
     server.use(restify.acceptParser(server.acceptable));
     server.use(restify.authorizationParser());
     server.use(restify.dateParser());
