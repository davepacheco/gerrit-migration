commit 447af0cabd112131b5e06710f353f8d4a8fd2ab5 (refs/changes/94/294/1)
Author: Simen Bekkhus <sbekkhus91@gmail.com>
Date:   2016-08-16T09:51:07-07:00 (3 years, 2 months ago)
    
    joyent/node-verror#23 Preserve original stack trace(s)
    Reviewed by: David Pacheco <dap@joyent.com>
    Approved by: David Pacheco <dap@joyent.com>

diff --git a/CHANGES.md b/CHANGES.md
index 4839f1a..c2a1c4f 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -1,4 +1,10 @@
-# v1.7.0
+# Changelog
+
+## Not yet released
+
+* #23 Preserve original stack trace(s)
+
+## v1.7.0
 
 * #10 better support for extra properties on Errors
 * #11 make it easy to find causes of a particular kind
diff --git a/README.md b/README.md
index 5d34a53..b6d13ff 100644
--- a/README.md
+++ b/README.md
@@ -314,6 +314,11 @@ list of resolvers used to resolve it.  The values of these properties should
 generally be plain objects (i.e., consisting only of null, undefined, numbers,
 booleans, strings, and objects and arrays containing only other plain objects).
 
+### `VError.fullStack(err)`
+
+Returns a string containing the full stack trace, with all nested errors recursively
+reported as `'caused by:' + err.stack`.
+
 
 ## Examples
 
@@ -387,6 +392,42 @@ This outputs:
         at Function.Module.runMain (module.js:497:10)
         at startup (node.js:119:16)
         at node.js:935:3
+        
+You can also print the complete stack trace of combined `Error`s by using
+`VError.fullStack(err).`
+
+```javascript
+var err1 = new VError('something bad happened');
+/* ... */
+var err2 = new VError(err1, 'something really bad happened here');
+
+console.log(VError.fullStack(err2));
+```
+
+This outputs:
+
+    VError: something really bad happened here: something bad happened
+        at Object.<anonymous> (/home/dap/node-verror/examples/fullStack.js:5:12)
+        at Module._compile (module.js:409:26)
+        at Object.Module._extensions..js (module.js:416:10)
+        at Module.load (module.js:343:32)
+        at Function.Module._load (module.js:300:12)
+        at Function.Module.runMain (module.js:441:10)
+        at startup (node.js:139:18)
+        at node.js:968:3
+    caused by: VError: something bad happened
+        at Object.<anonymous> (/home/dap/node-verror/examples/fullStack.js:3:12)
+        at Module._compile (module.js:409:26)
+        at Object.Module._extensions..js (module.js:416:10)
+        at Module.load (module.js:343:32)
+        at Function.Module._load (module.js:300:12)
+        at Function.Module.runMain (module.js:441:10)
+        at startup (node.js:139:18)
+        at node.js:968:3
+
+`VError.fullStack` is also safe to use on regular `Error`s, so feel free to use
+it whenever you need to extract the stack trace from an `Error`, regardless if
+it's a `VError` or not.
 
 # Reference: MultiError
 
diff --git a/examples/fullStack.js b/examples/fullStack.js
new file mode 100644
index 0000000..930ffac
--- /dev/null
+++ b/examples/fullStack.js
@@ -0,0 +1,7 @@
+var VError = require('../lib/verror');
+
+var err1 = new VError('something bad happened');
+/* ... */
+var err2 = new VError(err1, 'something really bad happened here');
+
+console.log(VError.fullStack(err2));
diff --git a/lib/verror.js b/lib/verror.js
index 3dfb8b0..013ca26 100644
--- a/lib/verror.js
+++ b/lib/verror.js
@@ -288,6 +288,19 @@ VError.findCauseByName = function (err, name)
 	return (null);
 };
 
+VError.fullStack = function (err)
+{
+	mod_assertplus.ok(mod_isError(err), 'err must be an Error');
+
+	var cause = VError.cause(err);
+
+	if (cause) {
+		return (err.stack + '\ncaused by: ' + VError.fullStack(cause));
+	}
+
+	return (err.stack);
+};
+
 
 /*
  * SError is like VError, but stricter about types.  You cannot pass "null" or
diff --git a/test/tst.common.js b/test/tst.common.js
index 9ae1451..e0355d6 100644
--- a/test/tst.common.js
+++ b/test/tst.common.js
@@ -86,6 +86,23 @@ function runTests(cons, label)
 	mod_assert.equal(err.message, 'my error');
 	mod_assert.ok(err.cause() === undefined);
 
+	/* fullStack */
+	err = new cons('Some error');
+	stack = mod_testcommon.cleanStack(VError.fullStack(err));
+	mod_assert.equal(stack, [
+		stackname + ': Some error',
+		'    at runTests (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack);
+
+	err = new Error('Some error');
+	stack = mod_testcommon.cleanStack(VError.fullStack(err));
+	mod_assert.equal(stack, [
+		'Error: Some error',
+		'    at runTests (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack);
+
 	/* printf-style message */
 	err = new cons('%s error: %3d problems', 'very bad', 15);
 	mod_assert.equal(err.message, 'very bad error:  15 problems');
diff --git a/test/tst.verror.js b/test/tst.verror.js
index 38dfea8..432bb90 100644
--- a/test/tst.verror.js
+++ b/test/tst.verror.js
@@ -97,6 +97,24 @@ function main()
 	err = new VError(suberr, 'top');
 	mod_assert.equal(err.message, 'top: mid');
 	mod_assert.ok(err.cause() === suberr);
+
+	/* fullStack */
+	suberr = new VError(new Error('root cause'), 'mid');
+	err = new VError(suberr, 'top');
+	stack = mod_testcommon.cleanStack(VError.fullStack(err));
+	mod_assert.equal(stack, [
+		'VError: top: mid: root cause',
+		'    at main (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack + '\n' + [
+		'caused by: VError: mid: root cause',
+		'    at main (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack + '\n' + [
+		'caused by: Error: root cause',
+		'    at main (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack);
 }
 
 main();
diff --git a/test/tst.werror.js b/test/tst.werror.js
index 4ca4079..9d7f208 100644
--- a/test/tst.werror.js
+++ b/test/tst.werror.js
@@ -122,6 +122,24 @@ function main()
 	mod_assert.equal(err.toString(),
 	    'WError: top; caused by VError: mid: root cause');
 	mod_assert.ok(err.cause() === suberr);
+
+	/* fullStack */
+	suberr = new WError(new Error('root cause'), 'mid');
+	err = new WError(suberr, 'top');
+	stack = mod_testcommon.cleanStack(VError.fullStack(err));
+	mod_assert.equal(stack, [
+		'WError: top',
+		'    at main (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack + '\n' + [
+		'caused by: WError: mid',
+		'    at main (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack + '\n' + [
+		'caused by: Error: root cause',
+		'    at main (dummy filename)',
+		'    at Object.<anonymous> (dummy filename)'
+	].join('\n') + '\n' + nodestack);
 }
 
 main();
