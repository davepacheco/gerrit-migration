commit 48aeaeb5878b4e860e5adc56c2440afa399c2e57 (refs/changes/07/2207/2)
Author: Kody A Kantor <kody.kantor@gmail.com>
Date:   2017-07-12T22:22:50+00:00 (2 years, 3 months ago)
    
    MANTA-2955 audit jobs report false positives when mako dumps take over 16 hours

diff --git a/lib/common.js b/lib/common.js
index 7a68875..db35d8e 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -106,6 +106,18 @@ function getObjectsInDir(opts, cb) {
         assert.string(dir, 'dir');
         assert.object(client, 'client');
 
+        // For every object that we're going to return, we append the
+        // 'info' structure.
+        var getInfo = function (obj, callback) {
+                client.info(obj.fullPath, {},
+                    function (infoErr, result) {
+                        obj.info = result.headers;
+                        objects.push(obj);
+                        callback(infoErr, obj);
+                    });
+        };
+
+        var queue = vasync.queue(getInfo, 10);
         var objects = [];
         client.ls(dir, {}, function (err, res) {
                 if (err) {
@@ -114,14 +126,16 @@ function getObjectsInDir(opts, cb) {
                 }
 
                 res.on('object', function (obj) {
+                        var path = dir + '/' + obj.name;
                         if (opts.returnObjects) {
-                                objects.push({
-                                        'directory': dir,
-                                        'object': obj,
-                                        'fullPath': dir + '/' + obj.name
+                                // Add the object to the work queue.
+                                queue.push({
+                                    'directory': dir,
+                                    'object': obj,
+                                    'fullPath': path
                                 });
                         } else {
-                                objects.push(dir + '/' + obj.name);
+                                objects.push(path);
                         }
                 });
 
@@ -130,9 +144,14 @@ function getObjectsInDir(opts, cb) {
                 });
 
                 res.once('end', function () {
-                        cb(null, objects);
+                        queue.close();
                 });
         });
+
+        queue.once('end', function () {
+                cb(null, objects);
+        });
+
 }
 
 
@@ -354,25 +373,47 @@ function findLatestMakoObjects(opts, cb) {
                 }
 
                 var earliestDump = null;
+                var oldestDump = null;
                 for (var i = 0; i < objects.length; ++i) {
                         var o = objects[i].object;
+                        var info = objects[i].info;
+                        var startTime, endTime;
+
+                        if (info && info['m-mako-dump-time']) {
+                                // Prevent MANTA-2955 false positive corruption.
+                                startTime = info['m-mako-dump-time'];
+                        } else {
+                                startTime = o.mtime;
+                        }
+                        endTime = o.mtime;
+
                         //We can string compare here since we have an
                         // ISO 8601 date.
-                        if (earliestDump === null || earliestDump > o.mtime) {
-                                earliestDump = o.mtime;
+                        // 'earliestDump' represents the dump which _started_
+                        // least recently.
+                        // 'oldestDump' represents the dump which _finished_
+                        // least recently.
+                        if (earliestDump === null || earliestDump > startTime) {
+                                earliestDump = startTime;
+                        }
+                        if (oldestDump === null || oldestDump > endTime) {
+                                oldestDump = endTime;
                         }
+
                 }
                 if (earliestDump === null) {
                         return (cb(new Error('Couldn\'t determine earliest ' +
                                              'dump from mako dumps.')));
                 }
+                opts.log.info('Earliest Mako dump started at %s', earliestDump);
+                opts.log.info('Oldest Mako dump finished at %s', oldestDump);
 
                 // Mako dumps are too far in the past, then fatal.
                 var now = new Date().getTime();
-                var eTime = new Date(earliestDump).getTime();
+                var eTime = new Date(oldestDump).getTime();
                 if ((now - MAX_MILLIS_MAKO_DUMPS_IN_PAST) > eTime) {
                         var error = new Error('Earliest mako dumps are too ' +
-                                              ' old: ' + earliestDump);
+                                              'old: ' + oldestDump);
                         return (cb(error));
                 }
 
