From 2195eaf4a63d3814ac2cdee3ceeb1df5c716f6bf Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Tue, 25 Apr 2017 12:06:35 +0200
Subject: [PATCH] TOOLS-1642 sdcadm should use cueball HttpAgent to connect to
 Triton HTTP services

---
 CHANGES.md    |  4 ++++
 lib/sdcadm.js | 38 +++++++++++++++++++++++++++++++++-----
 package.json  |  1 +
 3 files changed, 38 insertions(+), 5 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index 8b96829..6d88d63 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -42,11 +42,15 @@
 
 ## 1.15.2
 
+- TOOLS-1642: Use cueball HttpAgent to connect to Triton HTTP services.
+- TOOLS-1648 sdcadm post-setup cmon should setup cmon-agent
 - TOOLS-1662: Fix 'sdcadm experimental add-new-agent-svcs' when adding new
   services.
 
 ## 1.15.1
 
+- TOOLS-1574, TOOLS-1631: Fix `sdcadm experimental update AGENT` when there are
+  no agent instances or missing service image uuids.
 - TOOLS-1633: Fix 'sdcadm up' of the assets zone. It was broken in
   version 1.15.0.
 
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 3b99fbd..f44aeda 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -32,6 +32,7 @@ var vasync = require('vasync');
 var WfClient = require('wf-client');
 var uuid = require('node-uuid');
 var ProgressBar = require('progbar').ProgressBar;
+var cueball = require('cueball');
 
 var common = require('./common');
 var svcadm = require('./svcadm');
@@ -114,12 +115,36 @@ function SdcAdm(options) {
     self._reprovFailLockPath = '/var/sdcadm/reprovFailLock.json';
 
     self.userAgent = UA;
+    Object.defineProperty(this, 'cueballAgent', {
+        get: function () {
+            if (self._cueballAgent === undefined) {
+                self._cueballAgent = new cueball.HttpAgent({
+                    log: self.log,
+                    resolvers: [format('binder.%s.%s',
+                        self.config.datacenter_name, self.config.dns_domain)],
+                    spares: 1,
+                    maximum: 5,
+                    recovery: {
+                        default: {
+                            timeout: 2000,
+                            maxTimeout: 8000,
+                            retries: 3,
+                            delay: 0,
+                            maxDelay: 1000
+                        }
+                    }
+                });
+            }
+
+            return self._cueballAgent;
+        }
+    });
     Object.defineProperty(this, 'sapi', {
         get: function () {
             if (self._sapi === undefined) {
                 self._sapi = new sdcClients.SAPI({
                     url: self.config.sapi.url,
-                    agent: false,
+                    agent: self.cueballAgent,
                     userAgent: self.userAgent,
                     log: self.log,
                     headers: {
@@ -135,7 +160,7 @@ function SdcAdm(options) {
             if (self._cnapi === undefined) {
                 self._cnapi = new sdcClients.CNAPI({
                     url: self.config.cnapi.url,
-                    agent: false,
+                    agent: self.cueballAgent,
                     userAgent: self.userAgent,
                     log: self.log,
                     headers: {
@@ -152,7 +177,7 @@ function SdcAdm(options) {
             if (self._papi === undefined) {
                 self._papi = new sdcClients.PAPI({
                     url: self.config.papi.url,
-                    agent: false,
+                    agent: self.cueballAgent,
                     userAgent: self.userAgent,
                     log: self.log,
                     headers: {
@@ -168,7 +193,7 @@ function SdcAdm(options) {
             if (self._vmapi === undefined) {
                 self._vmapi = new sdcClients.VMAPI({
                     url: self.config.vmapi.url,
-                    agent: false,
+                    agent: self.cueballAgent,
                     userAgent: self.userAgent,
                     log: self.log,
                     headers: {
@@ -251,7 +276,7 @@ function SdcAdm(options) {
             if (self._napi === undefined) {
                 self._napi = new sdcClients.NAPI({
                     url: self.config.napi.url,
-                    agent: false,
+                    agent: self.cueballAgent,
                     userAgent: self.userAgent,
                     log: self.log,
                     headers: {
@@ -397,6 +422,9 @@ SdcAdm.prototype.fini = function fini() {
     if (self.sadm_ur !== null) {
         self.sadm_ur.close();
     }
+    if (self._cueballAgent !== undefined) {
+        self.cueballAgent.stop();
+    }
 };
 
 SdcAdm.prototype._returnUrClients = function _returnUrClients() {
diff --git a/package.json b/package.json
index 8214f3f..64a6586 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,7 @@
     "backoff": "2.5.0",
     "bunyan": "0.23.1",
     "cmdln": "4.2.1",
+    "cueball": "2.2.5",
     "extsprintf": "^1.3.0",
     "kthxbai": "~0.4.0",
     "joyent-schemas": "git+https://github.com/joyent/schemas.git#385e6eb",
-- 
2.21.0

