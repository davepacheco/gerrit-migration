From 797e8d67561e6a505e3d8963fa9ae26c2ba73d1a Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <josh@wilsdon.ca>
Date: Fri, 14 Dec 2018 14:23:39 -0800
Subject: [PATCH] TRITON-985 remove vmadmLogger support from node-vmadm
 Reviewed by: Orlando Vazquez <orlando@joyent.com> Approved by: Orlando
 Vazquez <orlando@joyent.com>

---
 lib/index.sunos.js | 109 +++------------------------------------------
 package.json       |   2 +-
 2 files changed, 7 insertions(+), 104 deletions(-)

diff --git a/lib/index.sunos.js b/lib/index.sunos.js
index c860e70..73f2441 100644
--- a/lib/index.sunos.js
+++ b/lib/index.sunos.js
@@ -38,8 +38,6 @@ function copyEnv() {
  *      - args {Array} cmdline args for vmadm
  *      - log {Logger object}
  *      - req_id {String} request id for this request (to tie to callers)
- *      - vmadmLogger {Object} with a .write() method that takes a single object
- *        as its argument. vmadm evt logs go here.
  * @param callback {Function} `function (result, stdout, stderrLines)`
  *      - called on vmadm exit
  *      - result is an Object that contains code: ..., signal: ...
@@ -78,29 +76,11 @@ function execVmadm(opts, callback) {
     child.stderr.on('data', function _childStderrHandler(data) {
         var chunk;
         var chunks;
-        var logobj;
 
         stderrBuffer += data.toString();
         chunks = stderrBuffer.split('\n');
         while (chunks.length > 1) {
             chunk = chunks.shift();
-
-            // log the record to the vmadmLogger if it's an evt log.
-            logobj = undefined;
-            if (opts.vmadmLogger) {
-                if (chunk[0] === '{' && chunk.indexOf('"evt"') !== -1) {
-                    try {
-                        logobj = JSON.parse(chunk);
-                    } catch (e) {
-                        opts.log.warn({line: chunk, err: e},
-                            'failed to JSON.parse line');
-                    }
-                }
-            }
-            if (logobj) {
-                opts.vmadmLogger.write(logobj);
-            }
-
             stderrLines.push(chunk);
         }
         stderrBuffer = chunks.pop();
@@ -279,7 +259,6 @@ vmadm.exists = function vmExists(opts, callback) {
 vmadm.load = function vmLoad(opts, vmopts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.optionalBool(opts.include_dni, 'opts.include_dni');
@@ -294,10 +273,6 @@ vmadm.load = function vmLoad(opts, vmopts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     opts.log.trace('spawning vmadm for load');
 
     execVmadm(execOpts, function (result, stdout, stderrLines) {
@@ -367,7 +342,6 @@ vmadm.load = function vmLoad(opts, vmopts, callback) {
 vmadm.create = function vmCreate(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
 
     var execOpts = {};
@@ -381,11 +355,8 @@ vmadm.create = function vmCreate(opts, callback) {
     execOpts.args = ['create'];
     execOpts.req_id = opts.req_id;
     delete payload.req_id;
-
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-        delete payload.vmadmLogger;
-    }
+    // Support removed w/ TRITON-985, still deleted for backward compat.
+    delete payload.vmadmLogger;
 
     execOpts.stdinData = JSON.stringify(payload);
 
@@ -434,7 +405,6 @@ vmadm.create = function vmCreate(opts, callback) {
 vmadm.delete = function vmDelete(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalBool(opts.include_dni, 'opts.include_dni');
@@ -447,10 +417,6 @@ vmadm.delete = function vmDelete(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         opts.log.trace('spawning vmadm for delete');
 
@@ -483,7 +449,6 @@ vmadm.delete = function vmDelete(opts, callback) {
 vmadm.update = function vmUpdate(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalBool(opts.include_dni, 'opts.include_dni');
@@ -500,17 +465,14 @@ vmadm.update = function vmUpdate(opts, callback) {
     execOpts.args = ['update', opts.uuid];
     execOpts.req_id = opts.req_id;
     delete payload.req_id;
+    // Support removed w/ TRITON-985, still deleted for backward compat.
+    delete payload.vmadmLogger;
 
     existsOpts.log = log;
     existsOpts.uuid = opts.uuid;
     existsOpts.include_dni = opts.include_dni;
     delete payload.include_dni;
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-        delete payload.vmadmLogger;
-    }
-
     execOpts.stdinData = JSON.stringify(payload);
 
     ifExists(existsOpts, function _ifExistsCb() {
@@ -541,7 +503,6 @@ vmadm.update = function vmUpdate(opts, callback) {
 vmadm.reboot = function vmReboot(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalBool(opts.include_dni, 'opts.include_dni');
@@ -558,10 +519,6 @@ vmadm.reboot = function vmReboot(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         execVmadm(execOpts, function (result, stdout, stderrLines) {
             var err;
@@ -593,7 +550,6 @@ vmadm.reboot = function vmReboot(opts, callback) {
 vmadm.reprovision = function vmReprovision(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalBool(opts.include_dni, 'opts.include_dni');
@@ -604,26 +560,18 @@ vmadm.reprovision = function vmReprovision(opts, callback) {
     var payload = opts;
     delete payload.log;
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-        delete payload.vmadmLogger;
-    }
-
     execOpts.log = log;
     execOpts.args = ['reprovision', opts.uuid];
     execOpts.req_id = opts.req_id;
     delete payload.req_id;
+    // Support removed w/ TRITON-985, still deleted for backward compat.
+    delete payload.vmadmLogger;
 
     existsOpts.log = log;
     existsOpts.uuid = opts.uuid;
     existsOpts.include_dni = opts.include_dni;
     delete payload.include_dni;
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-        delete payload.vmadmLogger;
-    }
-
     execOpts.stdinData = JSON.stringify(payload);
 
     ifExists(existsOpts, function _ifExistsCb() {
@@ -656,7 +604,6 @@ vmadm.lookup = function vmLookup(search, opts, callback) {
     assert.object(search, 'search');
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.optionalBool(opts.include_dni, 'opts.include_dni');
 
@@ -688,10 +635,6 @@ vmadm.lookup = function vmLookup(search, opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     execVmadm(execOpts, function (result, stdout, stderrLines) {
         var err;
         var vms = [];
@@ -737,7 +680,6 @@ vmadm.lookup = function vmLookup(search, opts, callback) {
 vmadm.kill = function vmKill(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalString(opts.signal, 'opts.signal');
@@ -761,10 +703,6 @@ vmadm.kill = function vmKill(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         execVmadm(execOpts, function (result, stdout, stderrLines) {
             var err;
@@ -800,7 +738,6 @@ vmadm.kill = function vmKill(opts, callback) {
 vmadm.info = function vmInfo(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalArrayOfString(opts.types, 'opts.types');
@@ -818,10 +755,6 @@ vmadm.info = function vmInfo(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         execVmadm(execOpts, function (result, stdout, stderrLines) {
             var err;
@@ -854,7 +787,6 @@ vmadm.info = function vmInfo(opts, callback) {
 vmadm.sysrq = function vmSysrq(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.req, 'opts.req');
     assert.string(opts.uuid, 'opts.uuid');
@@ -868,10 +800,6 @@ vmadm.sysrq = function vmSysrq(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         execVmadm(execOpts, function (result, stdout, stderrLines) {
             var err;
@@ -904,7 +832,6 @@ vmadm.sysrq = function vmSysrq(opts, callback) {
 vmadm.create_snapshot = function vmCreateSnapshot(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.snapshot_name, 'opts.snapshot_name');
     assert.string(opts.uuid, 'opts.uuid');
@@ -918,10 +845,6 @@ vmadm.create_snapshot = function vmCreateSnapshot(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         execVmadm(execOpts, function (result, stdout, stderrLines) {
             var err;
@@ -954,7 +877,6 @@ vmadm.create_snapshot = function vmCreateSnapshot(opts, callback) {
 vmadm.rollback_snapshot = function vmRollbackSnapshot(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.snapshot_name, 'opts.snapshot_name');
     assert.string(opts.uuid, 'opts.uuid');
@@ -968,10 +890,6 @@ vmadm.rollback_snapshot = function vmRollbackSnapshot(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         execVmadm(execOpts, function (result, stdout, stderrLines) {
             var err;
@@ -1004,7 +922,6 @@ vmadm.rollback_snapshot = function vmRollbackSnapshot(opts, callback) {
 vmadm.delete_snapshot = function vmDeleteSnapshot(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.snapshot_name, 'opts.snapshot_name');
     assert.string(opts.uuid, 'opts.uuid');
@@ -1018,10 +935,6 @@ vmadm.delete_snapshot = function vmDeleteSnapshot(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         execVmadm(execOpts, function (result, stdout, stderrLines) {
             var err;
@@ -1053,7 +966,6 @@ vmadm.delete_snapshot = function vmDeleteSnapshot(opts, callback) {
 vmadm.start = function vmStart(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.string(opts.uuid, 'opts.uuid');
     assert.optionalBool(opts.include_dni, 'opts.include_dni');
@@ -1081,10 +993,6 @@ vmadm.start = function vmStart(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         opts.log.trace('spawning vmadm for start');
 
@@ -1121,7 +1029,6 @@ vmadm.start = function vmStart(opts, callback) {
 vmadm.stop = function vmStop(opts, callback) {
     assert.object(opts, 'opts');
     assert.object(opts.log, 'opts.log');
-    assert.optionalObject(opts.vmadmLogger, 'opts.vmadmLogger');
     assert.optionalString(opts.req_id, 'opts.req_id');
     assert.optionalNumber(opts.timeout, 'opts.timeout');
     assert.string(opts.uuid, 'opts.uuid');
@@ -1144,10 +1051,6 @@ vmadm.stop = function vmStop(opts, callback) {
         req_id: opts.req_id
     };
 
-    if (opts.vmadmLogger) {
-        execOpts.vmadmLogger = opts.vmadmLogger;
-    }
-
     ifExists(opts, function _ifExistsCb() {
         opts.log.trace('spawning vmadm for stop');
 
diff --git a/package.json b/package.json
index 5f283d4..eea90ce 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "vmadm",
-  "version": "1.3.0",
+  "version": "1.3.1",
   "description": "Node.js wrapper around SmartOS vmadm(1M)",
   "repository": {
     "type": "git",
-- 
2.21.0

