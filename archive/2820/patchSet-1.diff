From 6ab510201f861d8922d8c87cce36d163826de913 Mon Sep 17 00:00:00 2001
From: Kody A Kantor <kody.kantor@gmail.com>
Date: Thu, 19 Oct 2017 15:21:36 +0000
Subject: [PATCH] MORAY-447 strange latency data point in reported moray
 metrics

---
 CHANGES.md         |  4 ++++
 lib/histogram.js   | 13 +++++++------
 package.json       |  2 +-
 test/basic.test.js | 40 ++++++++++++++++++++++++++++++++++++++++
 4 files changed, 52 insertions(+), 7 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index 545f33c..899f6a5 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -3,6 +3,10 @@
 ## Not yet released
 None
 
+## 1.1.1
+* [MORAY-447](https://smartos.org/bugview/MORAY-447) strange latency data point
+    in reported moray metrics
+
 ## 1.1.0
 * #5 Implement set() for Gauge collectors
 * #6 Implement basic triggered metrics
diff --git a/lib/histogram.js b/lib/histogram.js
index 50ce9ef..f8ef86d 100644
--- a/lib/histogram.js
+++ b/lib/histogram.js
@@ -56,6 +56,7 @@ Histogram.prototype.observe = function observe(value, pairs) {
     var buckets;
     var index, count, i, bucket;
     var smaller;
+    var metric;
 
     // For log-linear bucketing, we will produce five linear steps per log jump.
     // At a point in the future, we may allow the user to provide this value,
@@ -109,12 +110,12 @@ Histogram.prototype.observe = function observe(value, pairs) {
             count = counter.labels(pairCopy).value;
             if (count > 0) {
                 for (bucket in buckets) {
-                    // In the case of overlapping buckets, we don't want to
-                    // double the value of the bucket.
-                    if (buckets[bucket] !==
-                            counter.metricVec.buckets[smaller]) {
-                        pairCopy['le'] = buckets[bucket];
-                        counter.add(count, pairCopy); // Set the initial value.
+                    pairCopy['le'] = buckets[bucket];
+                    metric = counter.labels(pairCopy);
+                    if (metric.value === 0) {
+                        // We don't want to double the value of overlapping
+                        // buckets.
+                        counter.add(count, pairCopy);
                     }
                 }
             }
diff --git a/package.json b/package.json
index 0af4aa2..1824afc 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "artedi",
-  "version": "1.1.0",
+  "version": "1.1.1",
   "description": "a metric client library",
   "main": "lib/collector.js",
   "dependencies": {
diff --git a/test/basic.test.js b/test/basic.test.js
index fb5e0da..a1c4127 100644
--- a/test/basic.test.js
+++ b/test/basic.test.js
@@ -568,3 +568,43 @@ mod_tape('basic trigger tests', function (t) {
         t.end();
     });
 });
+
+/*
+ * Make sure log/linear buckets are working properly.
+ */
+mod_tape('log/linear bucket tests', function (t) {
+    var collector = mod_artedi.createCollector();
+    var histo = collector.histogram({
+        name: 'test_histogram',
+        help: 'test help'
+    });
+    var value;
+
+    /*
+     * Make sure we are copying values from lower to upper buckets properly.
+     * This is a result of MORAY-447, where we saw an overlapping bucket have
+     * its value doubled.
+     *
+     * To test the fix, we will:
+     *  - Create a set of small buckets.
+     *  - Create a set of large buckets.
+     *    - This should copy the values from the small buckets to large buckets.
+     *  - Record a value in the bucket below the smallest of the large buckets.
+     *    - Previously this would result in the lower values being re-copied to
+     *      the smallest of the large buckets (6561).
+     *    - Now it should correctly identify that the 6561 bucket already exists
+     *      meaning lower values should not be re-copied to the overlapping
+     *      bucket.
+     */
+    histo.observe(10); // Record three small values.
+    histo.observe(10);
+    histo.observe(10);
+    histo.observe(6562); // Record a value which will create larger buckets.
+    histo.observe(5103); // Record a value below the smallest larger bucket.
+
+    value = histo.defaultCounter().labels({'le': 6561}).value;
+    t.equals(value, 4, 'overlapping bucket values copied correctly');
+
+
+    t.end();
+});
-- 
2.21.0

