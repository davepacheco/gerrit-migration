From bf4a05a488530fe857a43773325ba18a99b5f7cd Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Thu, 11 Apr 2019 16:39:47 -0700
Subject: [PATCH] TRITON-1397 convert node-triton tests to node-tap

---
 Makefile                                      | 10 ++-
 README.md                                     |  2 +-
 package.json                                  |  3 +-
 test/integration/api-images.test.js           | 22 +++---
 test/integration/api-instances.test.js        | 16 +++--
 test/integration/api-ips.test.js              | 18 ++---
 test/integration/api-networks.test.js         | 20 +++---
 test/integration/api-nics.test.js             | 18 ++---
 test/integration/api-packages.test.js         | 16 +++--
 test/integration/api-vlans.test.js            | 18 ++---
 test/integration/cli-account.test.js          | 22 +++---
 test/integration/cli-affinity.test.js         | 28 ++++----
 test/integration/cli-basics.test.js           | 15 ++--
 .../cli-deletion-protection.test.js           | 26 +++----
 test/integration/cli-fwrules.test.js          | 46 ++++++------
 test/integration/cli-image-create-kvm.test.js | 34 ++++-----
 test/integration/cli-image-create.test.js     | 36 +++++-----
 test/integration/cli-instance-tag.test.js     | 45 ++++++------
 test/integration/cli-ips.test.js              | 34 ++++-----
 test/integration/cli-keys.test.js             | 16 +++--
 test/integration/cli-manage-workflow.test.js  | 51 ++++++-------
 test/integration/cli-networks.test.js         | 72 ++++++++++---------
 test/integration/cli-nics.test.js             | 38 +++++-----
 test/integration/cli-profiles.test.js         | 20 +++---
 test/integration/cli-snapshots.test.js        | 26 +++----
 test/integration/cli-subcommands.test.js      | 18 ++---
 test/integration/cli-vlans.test.js            | 71 +++++++++---------
 test/integration/cli-volumes-size.test.js     | 28 ++++----
 test/integration/cli-volumes.test.js          | 37 +++++-----
 test/unit/argvFromLine.test.js                | 10 +--
 test/unit/common.test.js                      |  4 +-
 test/unit/metadataFromOpts.test.js            | 10 +--
 test/unit/parseVolumeSize.test.js             | 12 ++--
 test/unit/tagsFromCreateOpts.test.js          | 10 +--
 test/unit/tagsFromSetArgs.test.js             | 10 +--
 35 files changed, 464 insertions(+), 398 deletions(-)

diff --git a/Makefile b/Makefile
index fa7eb6e..d652f4b 100644
--- a/Makefile
+++ b/Makefile
@@ -31,13 +31,19 @@ all:
 .PHONY: test
 test: test-unit test-integration
 
+.PHONY: ensure-node-v6-or-greater-for-test-suite
+ensure-node-v6-or-greater-for-test-suite:
+	@NODE_VER=$(shell node --version) && \
+		./node_modules/.bin/semver -r '>=6.x' $$NODE_VER >/dev/null || \
+		(echo "error: test suite requires node v6 or greater: you have $$NODE_VER"; exit 1)
+
 .PHONY: test-unit
-test-unit:
+test-unit: ensure-node-v6-or-greater-for-test-suite
 	NODE_NDEBUG= $(TAP_EXEC) --timeout $(TEST_TIMEOUT_S) -j $(TEST_JOBS) \
 		-o ./test-unit.tap test/unit/$(TEST_GLOB).test.js
 
 .PHONY: test-integration
-test-integration:
+test-integration: ensure-node-v6-or-greater-for-test-suite
 	NODE_NDEBUG= $(TAP_EXEC) --timeout $(TEST_TIMEOUT_S) -j $(TEST_JOBS) \
 		-o ./test-integration.tap test/integration/$(TEST_GLOB).test.js
 
diff --git a/README.md b/README.md
index 1d441cf..7fbbffc 100644
--- a/README.md
+++ b/README.md
@@ -407,7 +407,7 @@ There are a few `TEST_...` vars that can tweak how the tests are run.
   where "coal" here refers to a development Triton (a.k.a SDC) ["Cloud On A
   Laptop"](https://github.com/joyent/sdc#getting-started) standup.
 
-- `TEST_GLOB=<glob for test file basename>` - By default all "*.test.js"
+- `TEST_GLOB=<glob for test file basename>` - By default all "\*.test.js"
   in the "test/unit/" and "test/integration" dirs are run. To run just
   those with "image" in the name, use `make test TEST_GLOB=*image*`, or
   to run a specific test file: `make test TEST_GLOB=metadataFromOpts`.
diff --git a/package.json b/package.json
index a4f3451..448c992 100644
--- a/package.json
+++ b/package.json
@@ -32,8 +32,7 @@
     "wordwrap": "1.0.0"
   },
   "devDependencies": {
-    "tap": "11.1.5",
-    "tape": "4.2.0",
+    "tap": "12.6.1",
     "uuid": "3.2.1"
   },
   "main": "./lib",
diff --git a/test/integration/api-images.test.js b/test/integration/api-images.test.js
index a3b8750..68b0f0b 100644
--- a/test/integration/api-images.test.js
+++ b/test/integration/api-images.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 var common = require('../../lib/common');
 
@@ -25,10 +25,10 @@ var common = require('../../lib/common');
 
 // --- Tests
 
-test('TritonApi images', function (tt) {
+test('TritonApi images', function (suite) {
 
     var client;
-    tt.test(' setup: client', function (t) {
+    suite.test(' setup: client', function (t) {
         h.createClient(function (err, client_) {
             t.error(err);
             client = client_;
@@ -38,7 +38,7 @@ test('TritonApi images', function (tt) {
 
     var testOpts = {};
     var img;
-    tt.test(' TritonApi listImages', function (t) {
+    suite.test(' TritonApi listImages', function (t) {
         client.listImages(function (err, images) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -57,7 +57,7 @@ test('TritonApi images', function (tt) {
         });
     });
 
-    tt.test(' TritonApi getImage by uuid', testOpts, function (t) {
+    suite.test(' TritonApi getImage by uuid', testOpts, function (t) {
         client.getImage(img.id, function (err, image) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -66,7 +66,7 @@ test('TritonApi images', function (tt) {
         });
     });
 
-    tt.test(' TritonApi getImage by name', testOpts, function (t) {
+    suite.test(' TritonApi getImage by name', testOpts, function (t) {
         client.getImage(img.name, function (err, image) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -75,7 +75,7 @@ test('TritonApi images', function (tt) {
         });
     });
 
-    tt.test(' TritonApi getImage by name (opts)', testOpts, function (t) {
+    suite.test(' TritonApi getImage by name (opts)', testOpts, function (t) {
         client.getImage({name: img.name}, function (err, image) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -84,7 +84,7 @@ test('TritonApi images', function (tt) {
         });
     });
 
-    tt.test(' TritonApi getImage by shortId', testOpts, function (t) {
+    suite.test(' TritonApi getImage by shortId', testOpts, function (t) {
         var shortId = img.id.split('-')[0];
         client.getImage(shortId, function (err, image) {
             if (h.ifErr(t, err))
@@ -94,8 +94,10 @@ test('TritonApi images', function (tt) {
         });
     });
 
-    tt.test(' teardown: client', function (t) {
+    suite.test(' teardown: client', function (t) {
         client.close();
         t.end();
     });
+
+    suite.end();
 });
diff --git a/test/integration/api-instances.test.js b/test/integration/api-instances.test.js
index 3b62164..885036a 100644
--- a/test/integration/api-instances.test.js
+++ b/test/integration/api-instances.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 
 // --- Globals
@@ -24,9 +24,9 @@ var INST;
 
 // --- Tests
 
-test('TritonApi packages', function (tt) {
+test('TritonApi packages', function (suite) {
 
-    tt.test(' setup', function (t) {
+    suite.test(' setup', function (t) {
         h.createClient(function (err, client_) {
             t.error(err);
             CLIENT = client_;
@@ -34,7 +34,7 @@ test('TritonApi packages', function (tt) {
         });
     });
 
-    tt.test(' setup: inst', function (t) {
+    suite.test(' setup: inst', function (t) {
         CLIENT.cloudapi.listMachines(function (err, insts) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -48,7 +48,7 @@ test('TritonApi packages', function (tt) {
     });
 
 
-    tt.test(' TritonApi getInstance', function (t) {
+    suite.test(' TritonApi getInstance', function (t) {
         if (!INST) {
             return t.end();
         }
@@ -82,8 +82,10 @@ test('TritonApi packages', function (tt) {
     });
 
 
-    tt.test(' teardown: client', function (t) {
+    suite.test(' teardown: client', function (t) {
         CLIENT.close();
         t.end();
     });
+
+    suite.end();
 });
diff --git a/test/integration/api-ips.test.js b/test/integration/api-ips.test.js
index 5609e26..af990c6 100644
--- a/test/integration/api-ips.test.js
+++ b/test/integration/api-ips.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 
 // --- Globals
@@ -25,8 +25,8 @@ var IP;
 
 // --- Tests
 
-test('TritonApi network ips', function (tt) {
-    tt.test(' setup', function (t) {
+test('TritonApi network ips', function (suite) {
+    suite.test(' setup', function (t) {
         h.createClient(function (err, client_) {
             t.error(err);
             CLIENT = client_;
@@ -34,7 +34,7 @@ test('TritonApi network ips', function (tt) {
         });
     });
 
-    tt.test(' setup: net', function (t) {
+    suite.test(' setup: net', function (t) {
         var opts = {
             account: CLIENT.profile.account
         };
@@ -58,7 +58,7 @@ test('TritonApi network ips', function (tt) {
         });
     });
 
-    tt.test(' TritonApi listIps', function (t) {
+    suite.test(' TritonApi listIps', function (t) {
         if (!NET) {
             return t.end();
         }
@@ -76,7 +76,7 @@ test('TritonApi network ips', function (tt) {
     });
 
 
-    tt.test(' TritonApi getIp', function (t) {
+    suite.test(' TritonApi getIp', function (t) {
         if (!NET || !IP) {
             return t.end();
         }
@@ -97,8 +97,10 @@ test('TritonApi network ips', function (tt) {
     });
 
 
-    tt.test(' teardown: client', function (t) {
+    suite.test(' teardown: client', function (t) {
         CLIENT.close();
         t.end();
     });
+
+    suite.end();
 });
diff --git a/test/integration/api-networks.test.js b/test/integration/api-networks.test.js
index 6afc2c0..c62b514 100644
--- a/test/integration/api-networks.test.js
+++ b/test/integration/api-networks.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 
 // --- Globals
@@ -26,8 +26,8 @@ var NET;
 
 // --- Tests
 
-test('TritonApi networks', function (tt) {
-    tt.test(' setup', function (t) {
+test('TritonApi networks', function (suite) {
+    suite.test(' setup', function (t) {
         h.createClient(function (err, client_) {
             t.error(err);
             CLIENT = client_;
@@ -35,13 +35,13 @@ test('TritonApi networks', function (tt) {
         });
     });
 
-    tt.test('  cleanup: rm network ' + NET_NAME + ' if exists', function (t) {
+    suite.test('  cleanup: rm network ' + NET_NAME + ' if exists', function (t) {
         CLIENT.deleteFabricNetwork({id: NET_NAME}, function () {
             t.end();
         });
     });
 
-    tt.test(' setup: net', function (t) {
+    suite.test(' setup: net', function (t) {
         CLIENT.cloudapi.listNetworks({}, function (err, nets) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -55,7 +55,7 @@ test('TritonApi networks', function (tt) {
     });
 
 
-    tt.test(' TritonApi getNetwork', function (t) {
+    suite.test(' TritonApi getNetwork', function (t) {
         if (!NET) {
             return t.end();
         }
@@ -83,7 +83,7 @@ test('TritonApi networks', function (tt) {
     });
 
 
-    tt.test(' TritonApi deleteFabricNetwork', function (t) {
+    suite.test(' TritonApi deleteFabricNetwork', function (t) {
         function check(genId, idType, vlanId, cb) {
             CLIENT.cloudapi.createFabricNetwork({
                 name: NET_NAME,
@@ -138,8 +138,10 @@ test('TritonApi networks', function (tt) {
 
 
 
-    tt.test(' teardown: client', function (t) {
+    suite.test(' teardown: client', function (t) {
         CLIENT.close();
         t.end();
     });
+
+    suite.end();
 });
diff --git a/test/integration/api-nics.test.js b/test/integration/api-nics.test.js
index 38dada6..25e8ac9 100644
--- a/test/integration/api-nics.test.js
+++ b/test/integration/api-nics.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 
 // --- Globals
@@ -25,8 +25,8 @@ var NIC;
 
 // --- Tests
 
-test('TritonApi nics', function (tt) {
-    tt.test(' setup', function (t) {
+test('TritonApi nics', function (suite) {
+    suite.test(' setup', function (t) {
         h.createClient(function onCreate(err, client_) {
             t.error(err);
             CLIENT = client_;
@@ -35,7 +35,7 @@ test('TritonApi nics', function (tt) {
     });
 
 
-    tt.test(' setup: inst', function (t) {
+    suite.test(' setup: inst', function (t) {
         CLIENT.cloudapi.listMachines({}, function onList(err, vms) {
             if (vms.length === 0) {
                 t.end();
@@ -50,7 +50,7 @@ test('TritonApi nics', function (tt) {
     });
 
 
-    tt.test(' TritonApi listNics', function (t) {
+    suite.test(' TritonApi listNics', function (t) {
         if (!INST) {
             t.end();
             return;
@@ -82,7 +82,7 @@ test('TritonApi nics', function (tt) {
     });
 
 
-    tt.test(' TritonApi getNic', function (t) {
+    suite.test(' TritonApi getNic', function (t) {
         if (!NIC) {
             t.end();
             return;
@@ -113,8 +113,10 @@ test('TritonApi nics', function (tt) {
     });
 
 
-    tt.test(' teardown: client', function (t) {
+    suite.test(' teardown: client', function (t) {
         CLIENT.close();
         t.end();
     });
+
+    suite.end();
 });
diff --git a/test/integration/api-packages.test.js b/test/integration/api-packages.test.js
index 1f7d2a3..012ac10 100644
--- a/test/integration/api-packages.test.js
+++ b/test/integration/api-packages.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 var common = require('../../lib/common');
 
@@ -28,8 +28,8 @@ var PKG;
 // --- Tests
 
 
-test('TritonApi packages', function (tt) {
-    tt.test(' setup', function (t) {
+test('TritonApi packages', function (suite) {
+    suite.test(' setup', function (t) {
         h.createClient(function (err, client_) {
             t.error(err);
             CLIENT = client_;
@@ -37,7 +37,7 @@ test('TritonApi packages', function (tt) {
         });
     });
 
-    tt.test(' setup: pkg', function (t) {
+    suite.test(' setup: pkg', function (t) {
         CLIENT.cloudapi.listPackages(function (err, pkgs) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -51,7 +51,7 @@ test('TritonApi packages', function (tt) {
     });
 
 
-    tt.test(' TritonApi getPackage', function (t) {
+    suite.test(' TritonApi getPackage', function (t) {
         if (!PKG) {
             return t.end();
         }
@@ -79,8 +79,10 @@ test('TritonApi packages', function (tt) {
     });
 
 
-    tt.test(' teardown: client', function (t) {
+    suite.test(' teardown: client', function (t) {
         CLIENT.close();
         t.end();
     });
+
+    suite.end();
 });
diff --git a/test/integration/api-vlans.test.js b/test/integration/api-vlans.test.js
index 03c7c5e..5945f25 100644
--- a/test/integration/api-vlans.test.js
+++ b/test/integration/api-vlans.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 
 // --- Globals
@@ -24,8 +24,8 @@ var VLAN;
 
 // --- Tests
 
-test('TritonApi vlan', function (tt) {
-    tt.test(' setup', function (t) {
+test('TritonApi vlan', function (suite) {
+    suite.test(' setup', function (t) {
         h.createClient(function onCreate(err, client_) {
             t.error(err);
             CLIENT = client_;
@@ -34,7 +34,7 @@ test('TritonApi vlan', function (tt) {
     });
 
 
-    tt.test(' setup: vlan', function (t) {
+    suite.test(' setup: vlan', function (t) {
         CLIENT.cloudapi.listFabricVlans({}, function onList(err, vlans) {
             if (vlans.length === 0) {
                 t.end();
@@ -48,7 +48,7 @@ test('TritonApi vlan', function (tt) {
     });
 
 
-    tt.test(' TritonApi getFabricVlan', function (t) {
+    suite.test(' TritonApi getFabricVlan', function (t) {
         if (!VLAN) {
             t.end();
             return;
@@ -75,7 +75,7 @@ test('TritonApi vlan', function (tt) {
     });
 
 
-    tt.test(' TritonApi deleteFabricVlan', function (t) {
+    suite.test(' TritonApi deleteFabricVlan', function (t) {
         function check(genId, idType, cb) {
             CLIENT.cloudapi.createFabricVlan({
                 vlan_id: 3291,
@@ -113,8 +113,10 @@ test('TritonApi vlan', function (tt) {
     });
 
 
-    tt.test(' teardown: client', function (t) {
+    suite.test(' teardown: client', function (t) {
         CLIENT.close();
         t.end();
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-account.test.js b/test/integration/cli-account.test.js
index ff0cf33..416c463 100644
--- a/test/integration/cli-account.test.js
+++ b/test/integration/cli-account.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var h = require('./helpers');
 var format = require('util').format;
-var test = require('tape');
+var test = require('tap').test;
 
 
 
@@ -27,9 +27,9 @@ var writeTestOpts = {
 
 // --- Tests
 
-test('triton account', function (tt) {
+test('triton account', function (suite) {
 
-    tt.test(' triton account -h', function (t) {
+    suite.test(' triton account -h', function (t) {
         h.triton('account -h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -38,7 +38,7 @@ test('triton account', function (tt) {
         });
     });
 
-    tt.test(' triton help account', function (t) {
+    suite.test(' triton help account', function (t) {
         h.triton('help account', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -47,7 +47,7 @@ test('triton account', function (tt) {
         });
     });
 
-    tt.test(' triton account get', function (t) {
+    suite.test(' triton account get', function (t) {
         h.triton('-v account get', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -58,7 +58,7 @@ test('triton account', function (tt) {
     });
 
     var account;
-    tt.test(' triton account get -j', function (t) {
+    suite.test(' triton account get -j', function (t) {
         h.triton('account get -j', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -68,14 +68,14 @@ test('triton account', function (tt) {
         });
     });
 
-    tt.test(' triton account update foo=bar', writeTestOpts, function (t) {
+    suite.test(' triton account update foo=bar', writeTestOpts, function (t) {
         h.triton('account update foo=bar', function (err, stdout, stderr) {
             t.ok(err);
             t.end();
         });
     });
 
-    tt.test(' triton account update companyName=foo', writeTestOpts,
+    suite.test(' triton account update companyName=foo', writeTestOpts,
             function (t) {
         h.triton('account update companyName=foo', function (err, _o, _e) {
             if (h.ifErr(t, err))
@@ -99,7 +99,7 @@ test('triton account', function (tt) {
         });
     });
 
-    tt.test(' triton account update companyName=<oldvalue>', writeTestOpts,
+    suite.test(' triton account update companyName=<oldvalue>', writeTestOpts,
             function (t) {
         h.triton(
             format('account update companyName=\'%s\'',
@@ -110,4 +110,6 @@ test('triton account', function (tt) {
                 t.end();
             });
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-affinity.test.js b/test/integration/cli-affinity.test.js
index d68cca3..4cecb62 100644
--- a/test/integration/cli-affinity.test.js
+++ b/test/integration/cli-affinity.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -18,7 +18,7 @@
 
 var format = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var vasync = require('vasync');
 
 var common = require('../../lib/common');
@@ -36,12 +36,12 @@ var testOpts = {
 
 // --- Tests
 
-test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
-    tt.comment('Add \'"skipAffinityTests":true\' to test/config.json if ' +
+test('affinity (triton create -a RULE ...)', testOpts, function (suite) {
+    suite.comment('Add \'"skipAffinityTests":true\' to test/config.json if ' +
         'this target DC does not have multiple provisionable CNs (e.g. COAL).');
 
     // TODO: `triton rm -f` would be helpful for this
-    tt.test('  setup: rm existing insts ' + ALIAS_PREFIX + '*', function (t) {
+    suite.test('  setup: rm existing insts ' + ALIAS_PREFIX + '*', function (t) {
         // Cheat and use the current SNAFU behaviour that 'name=foo' matches
         // all VMs *prefixed* with "foo".
         h.safeTriton(t, ['inst', 'list', '-j', 'name='+ALIAS_PREFIX],
@@ -61,7 +61,7 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
     });
 
     var imgId;
-    tt.test('  setup: find test image', function (t) {
+    suite.test('  setup: find test image', function (t) {
         h.getTestImg(t, function (err, imgId_) {
             t.ifError(err, 'getTestImg' + (err ? ': ' + err : ''));
             imgId = imgId_;
@@ -70,7 +70,7 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
     });
 
     var pkgId;
-    tt.test('  setup: find test package', function (t) {
+    suite.test('  setup: find test package', function (t) {
         h.getTestPkg(t, function (err, pkgId_) {
             t.ifError(err, 'getTestPkg' + (err ? ': ' + err : ''));
             pkgId = pkgId_;
@@ -80,7 +80,7 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
 
     var db0Alias = ALIAS_PREFIX + '-db0';
     var db0;
-    tt.test('  setup: triton create -n db0', function (t) {
+    suite.test('  setup: triton create -n db0', function (t) {
         var argv = ['create', '-wj', '-n', db0Alias, '-t', 'role=database',
             imgId, pkgId];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -93,7 +93,7 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
     // Test db1 being put on same server as db0.
     var db1Alias = ALIAS_PREFIX + '-db1';
     var db1;
-    tt.test('  triton create -n db1 -a instance==db0', function (t) {
+    suite.test('  triton create -n db1 -a instance==db0', function (t) {
         var argv = ['create', '-wj', '-n', db1Alias, '-a',
             'instance==' + db0Alias, imgId, pkgId];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -109,7 +109,7 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
     // Test db2 being put on a server without a db.
     var db2Alias = ALIAS_PREFIX + '-db2';
     var db2;
-    tt.test('  triton create -n db2 -a \'instance!=db*\'', function (t) {
+    suite.test('  triton create -n db2 -a \'instance!=db*\'', function (t) {
         var argv = ['create', '-wj', '-n', db2Alias, '-a',
             'instance!=' + ALIAS_PREFIX + '-db*',
             imgId, pkgId];
@@ -127,7 +127,7 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
     // Test db3 being put on server *other* than db0.
     var db3Alias = ALIAS_PREFIX + '-db3';
     var db3;
-    tt.test('  triton create -n db3 -a \'instance!=db0\'', function (t) {
+    suite.test('  triton create -n db3 -a \'instance!=db0\'', function (t) {
         var argv = ['create', '-wj', '-n', db3Alias, '-a',
             'instance!='+db0Alias, imgId, pkgId];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -143,7 +143,7 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
     // Test db4 being put on server *other* than db0 (due ot db0's tag).
     var db4Alias = ALIAS_PREFIX + '-db4';
     var db4;
-    tt.test('  triton create -n db4 -a \'role!=database\'', function (t) {
+    suite.test('  triton create -n db4 -a \'role!=database\'', function (t) {
         var argv = ['create', '-wj', '-n', db4Alias, '-a', 'role!=database',
             imgId, pkgId];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -159,10 +159,12 @@ test('affinity (triton create -a RULE ...)', testOpts, function (tt) {
     // Remove instances. Add a test timeout, because '-w' on delete doesn't
     // have a way to know if the attempt failed or if it is just taking a
     // really long time.
-    tt.test('  cleanup: triton rm', {timeout: 10 * 60 * 1000}, function (t) {
+    suite.test('  cleanup: triton rm', {timeout: 10 * 60 * 1000}, function (t) {
         h.safeTriton(t, ['rm', '-w', db0.id, db1.id, db2.id, db3.id, db4.id],
         function () {
             t.end();
         });
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-basics.test.js b/test/integration/cli-basics.test.js
index 6e91c08..6370bd0 100644
--- a/test/integration/cli-basics.test.js
+++ b/test/integration/cli-basics.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 
 
@@ -23,9 +23,9 @@ var test = require('tape');
 
 // --- Tests
 
-test('triton (basics)', function (tt) {
+test('triton (basics)', function (suite) {
 
-    tt.test(' triton --version', function (t) {
+    suite.test(' triton --version', function (t) {
         h.triton('--version', function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton --version'))
                 return t.end();
@@ -36,7 +36,7 @@ test('triton (basics)', function (tt) {
         });
     });
 
-    tt.test(' triton -h', function (t) {
+    suite.test(' triton -h', function (t) {
         h.triton('-h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -47,7 +47,7 @@ test('triton (basics)', function (tt) {
         });
     });
 
-    tt.test(' triton --help', function (t) {
+    suite.test(' triton --help', function (t) {
         h.triton('--help', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -58,7 +58,7 @@ test('triton (basics)', function (tt) {
         });
     });
 
-    tt.test(' triton help', function (t) {
+    suite.test(' triton help', function (t) {
         h.triton('help', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -69,4 +69,5 @@ test('triton (basics)', function (tt) {
         });
     });
 
+    suite.end();
 });
diff --git a/test/integration/cli-deletion-protection.test.js b/test/integration/cli-deletion-protection.test.js
index db01e6f..a7b1e9c 100644
--- a/test/integration/cli-deletion-protection.test.js
+++ b/test/integration/cli-deletion-protection.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -16,7 +16,7 @@
 var h = require('./helpers');
 var f = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 
 // --- Globals
 
@@ -49,13 +49,13 @@ if (OPTS.skip) {
     console.error('** set "allowWriteActions" in test config to enable');
 }
 
-test('triton instance', OPTS, function (tt) {
-    h.printConfig(tt);
+test('triton instance', OPTS, function (suite) {
+    h.printConfig(suite);
 
-    tt.test('  cleanup existing inst with alias ' + INST_ALIAS, cleanup);
+    suite.test('  cleanup existing inst with alias ' + INST_ALIAS, cleanup);
 
 
-    tt.test('  triton create --deletion-protection', function (t) {
+    suite.test('  triton create --deletion-protection', function (t) {
         h.createTestInst(t, INST_ALIAS, {
             extraFlags: ['--deletion-protection']
         }, function onInst(err2, instId) {
@@ -77,7 +77,7 @@ test('triton instance', OPTS, function (tt) {
     });
 
 
-    tt.test('  attempt to delete deletion-protected instance', function (t) {
+    suite.test('  attempt to delete deletion-protected instance', function (t) {
         var cmd = 'instance rm ' + INST + ' -w';
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -89,7 +89,7 @@ test('triton instance', OPTS, function (tt) {
     });
 
 
-    tt.test('  triton instance disable-deletion-protection', function (t) {
+    suite.test('  triton instance disable-deletion-protection', function (t) {
         var cmd = 'instance disable-deletion-protection ' + INST + ' -w';
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -112,7 +112,7 @@ test('triton instance', OPTS, function (tt) {
     });
 
 
-    tt.test('  triton instance disable-deletion-protection (already enabled)',
+    suite.test('  triton instance disable-deletion-protection (already enabled)',
     function (t) {
         var cmd = 'instance disable-deletion-protection ' + INST + ' -w';
 
@@ -136,7 +136,7 @@ test('triton instance', OPTS, function (tt) {
     });
 
 
-    tt.test('  triton instance enable-deletion-protection', function (t) {
+    suite.test('  triton instance enable-deletion-protection', function (t) {
         var cmd = 'instance enable-deletion-protection ' + INST + ' -w';
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -159,7 +159,7 @@ test('triton instance', OPTS, function (tt) {
     });
 
 
-    tt.test('  triton instance enable-deletion-protection (already enabled)',
+    suite.test('  triton instance enable-deletion-protection (already enabled)',
     function (t) {
         var cmd = 'instance enable-deletion-protection ' + INST + ' -w';
 
@@ -187,5 +187,7 @@ test('triton instance', OPTS, function (tt) {
      * Use a timeout, because '-w' on delete doesn't have a way to know if the
      * attempt failed or if it is just taking a really long time.
      */
-    tt.test('  cleanup: triton rm INST', {timeout: 10 * 60 * 1000}, cleanup);
+    suite.test('  cleanup: triton rm INST', {timeout: 10 * 60 * 1000}, cleanup);
+
+    suite.end();
 });
diff --git a/test/integration/cli-fwrules.test.js b/test/integration/cli-fwrules.test.js
index 3b4d775..6f00de1 100644
--- a/test/integration/cli-fwrules.test.js
+++ b/test/integration/cli-fwrules.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,7 @@
 var h = require('./helpers');
 var f = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 
 // --- Globals
 
@@ -36,17 +36,17 @@ if (OPTS.skip) {
     console.error('** set "allowWriteActions" in test config to enable');
 }
 
-test('triton fwrule', OPTS, function (tt) {
-    h.printConfig(tt);
+test('triton fwrule', OPTS, function (suite) {
+    h.printConfig(suite);
 
-    tt.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
+    suite.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
         h.deleteTestInst(t, INST_ALIAS, function (err) {
             t.ifErr(err);
             t.end();
         });
     });
 
-    tt.test('  setup: triton create', function (t) {
+    suite.test('  setup: triton create', function (t) {
         h.createTestInst(t, INST_ALIAS, {}, function onInst(err2, instId) {
             if (h.ifErr(t, err2, 'triton instance create'))
                 return t.end();
@@ -59,7 +59,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule create --disabled', function (t) {
+    suite.test('  triton fwrule create --disabled', function (t) {
         var cmd = f('fwrule create -d "%s"', RULE);
         h.triton(cmd, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton fwrule create --disabled'))
@@ -77,7 +77,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule get (disabled)', function (t) {
+    suite.test('  triton fwrule get (disabled)', function (t) {
         var cmd = 'fwrule get ' + ID;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -91,7 +91,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule create', function (t) {
+    suite.test('  triton fwrule create', function (t) {
         var cmd = f('fwrule create -D "%s" "%s"', DESC, RULE);
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -111,7 +111,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule get', function (t) {
+    suite.test('  triton fwrule get', function (t) {
         var cmd = 'fwrule get ' + ID;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -126,7 +126,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule enable', function (t) {
+    suite.test('  triton fwrule enable', function (t) {
         var cmd = 'fwrule enable ' + ID;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -139,7 +139,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule disable', function (t) {
+    suite.test('  triton fwrule disable', function (t) {
         var cmd = 'fwrule disable ' + ID;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -152,7 +152,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule update', function (t) {
+    suite.test('  triton fwrule update', function (t) {
         var cmd = 'fwrule update ' + ID + ' rule="' + RULE2 + '"';
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -166,7 +166,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule list', function (t) {
+    suite.test('  triton fwrule list', function (t) {
         h.triton('fwrule list -l', function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton fwrule list'))
                 return t.end();
@@ -187,7 +187,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrules', function (t) {
+    suite.test('  triton fwrules', function (t) {
         h.triton('fwrules -l', function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton fwrule list'))
                 return t.end();
@@ -208,7 +208,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule instances', function (t) {
+    suite.test('  triton fwrule instances', function (t) {
         h.triton('fwrule instances -l ' + ID, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton fwrule instances'))
                 return t.end();
@@ -236,7 +236,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance fwrules', function (t) {
+    suite.test('  triton instance fwrules', function (t) {
         h.triton('instance fwrules -l ' + INST, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton fwrule list'))
                 return t.end();
@@ -257,7 +257,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance fwrule list', function (t) {
+    suite.test('  triton instance fwrule list', function (t) {
         h.triton('instance fwrule list -l ' + INST,
             function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton fwrule list'))
@@ -279,7 +279,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton fwrule delete', function (t) {
+    suite.test('  triton fwrule delete', function (t) {
         var cmd = 'fwrule delete ' + ID + ' --force';
         h.triton(cmd, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton fwrule delete'))
@@ -291,7 +291,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance enable-firewall', function (t) {
+    suite.test('  triton instance enable-firewall', function (t) {
         var cmd = 'instance enable-firewall ' + INST + ' -w';
         h.triton(cmd, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton instance enable-firewall'))
@@ -312,7 +312,7 @@ test('triton fwrule', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance disable-firewall', function (t) {
+    suite.test('  triton instance disable-firewall', function (t) {
         var cmd = 'instance disable-firewall ' + INST + ' -w';
         h.triton(cmd, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton instance disable-firewall'))
@@ -337,10 +337,12 @@ test('triton fwrule', OPTS, function (tt) {
      * Use a timeout, because '-w' on delete doesn't have a way to know if the
      * attempt failed or if it is just taking a really long time.
      */
-    tt.test('  cleanup: triton rm INST', {timeout: 10 * 60 * 1000},
+    suite.test('  cleanup: triton rm INST', {timeout: 10 * 60 * 1000},
             function (t) {
         h.deleteTestInst(t, INST_ALIAS, function () {
             t.end();
         });
     });
+   
+    suite.end();
 });
diff --git a/test/integration/cli-image-create-kvm.test.js b/test/integration/cli-image-create-kvm.test.js
index 8269a99..35637f7 100644
--- a/test/integration/cli-image-create-kvm.test.js
+++ b/test/integration/cli-image-create-kvm.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var format = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var vasync = require('vasync');
 
 var common = require('../../lib/common');
@@ -39,19 +39,19 @@ var testOpts = {
 
 // --- Tests
 
-test('triton image ...', testOpts, function (tt) {
+test('triton image ...', testOpts, function (suite) {
     var imgNameVer = IMAGE_DATA.name + '@' + IMAGE_DATA.version;
     var originInst;
     var img;
 
-    tt.comment('Test config:');
+    suite.comment('Test config:');
     Object.keys(h.CONFIG).forEach(function (key) {
         var value = h.CONFIG[key];
-        tt.comment(format('- %s: %j', key, value));
+        suite.comment(format('- %s: %j', key, value));
     });
 
     // TODO: `triton rm -f` would be helpful for this
-    tt.test('  setup: rm existing origin inst ' + ORIGIN_INST_ALIAS,
+    suite.test('  setup: rm existing origin inst ' + ORIGIN_INST_ALIAS,
             function (t) {
         h.deleteTestInst(t, ORIGIN_INST_ALIAS, function onDel() {
             t.end();
@@ -59,21 +59,21 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     // TODO: `triton rm -f` would be helpful for this
-    tt.test('  setup: rm existing derived inst ' + DERIVED_INST_ALIAS,
+    suite.test('  setup: rm existing derived inst ' + DERIVED_INST_ALIAS,
             function (t) {
         h.deleteTestInst(t, DERIVED_INST_ALIAS, function onDel() {
             t.end();
         });
     });
 
-    tt.test('  setup: rm existing img ' + imgNameVer, function (t) {
+    suite.test('  setup: rm existing img ' + imgNameVer, function (t) {
         h.deleteTestImg(t, imgNameVer, function onDel() {
             t.end();
         });
     });
 
     var originImgNameOrId;
-    tt.test('  setup: find origin image', function (t) {
+    suite.test('  setup: find origin image', function (t) {
         h.getTestKvmImg(t, function (err, imgId) {
             t.ifError(err, 'getTestImg' + (err ? ': ' + err : ''));
             originImgNameOrId = imgId;
@@ -82,7 +82,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     var pkgId;
-    tt.test('  setup: find test package', function (t) {
+    suite.test('  setup: find test package', function (t) {
         h.getTestKvmPkg(t, function (err, pkgId_) {
             t.ifError(err, 'getTestPkg' + (err ? ': ' + err : ''));
             pkgId = pkgId_;
@@ -91,7 +91,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     var markerFile = '/nodetritontest-was-here.txt';
-    tt.test('  setup: triton create ... -n ' + ORIGIN_INST_ALIAS, function (t) {
+    suite.test('  setup: triton create ... -n ' + ORIGIN_INST_ALIAS, function (t) {
         var argv = ['create', '-wj', '-n', ORIGIN_INST_ALIAS,
             '-m', 'user-script=touch ' + markerFile,
             originImgNameOrId, pkgId];
@@ -109,7 +109,7 @@ test('triton image ...', testOpts, function (tt) {
     //      tape (don't know why yet). Instead we'll use a user-script to
     //      change the origin as our image change.
     //
-    //tt.test('  setup: add marker to origin', function (t) {
+    //suite.test('  setup: add marker to origin', function (t) {
     //    var argv = ['ssh', originInst.id,
     //        '-o', 'StrictHostKeyChecking=no',
     //        '-o', 'UserKnownHostsFile=/dev/null',
@@ -120,7 +120,7 @@ test('triton image ...', testOpts, function (tt) {
     //    });
     //});
 
-    tt.test('  triton image create ...', function (t) {
+    suite.test('  triton image create ...', function (t) {
         var argv = ['image', 'create', '-j', '-w', '-t', 'foo=bar',
             originInst.id, IMAGE_DATA.name, IMAGE_DATA.version];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -137,7 +137,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     var derivedInst;
-    tt.test('  triton create ... -n ' + DERIVED_INST_ALIAS, function (t) {
+    suite.test('  triton create ... -n ' + DERIVED_INST_ALIAS, function (t) {
         var argv = ['create', '-wj', '-n', DERIVED_INST_ALIAS, img.id, pkgId];
         h.safeTriton(t, argv, function (err, stdout) {
             var lines = h.jsonStreamParse(stdout);
@@ -154,16 +154,18 @@ test('triton image ...', testOpts, function (tt) {
     // Remove instances. Add a test timeout, because '-w' on delete doesn't
     // have a way to know if the attempt failed or if it is just taking a
     // really long time.
-    tt.test('  cleanup: triton rm', {timeout: 10 * 60 * 1000}, function (t) {
+    suite.test('  cleanup: triton rm', {timeout: 10 * 60 * 1000}, function (t) {
         h.safeTriton(t, ['rm', '-w', originInst.id, derivedInst.id],
                 function () {
             t.end();
         });
     });
 
-    tt.test('  cleanup: triton image rm', function (t) {
+    suite.test('  cleanup: triton image rm', function (t) {
         h.safeTriton(t, ['image', 'rm', '-f', img.id], function () {
             t.end();
         });
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-image-create.test.js b/test/integration/cli-image-create.test.js
index 3f63c1d..52f046f 100644
--- a/test/integration/cli-image-create.test.js
+++ b/test/integration/cli-image-create.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var format = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var uuid = require('uuid');
 var vasync = require('vasync');
 
@@ -38,19 +38,19 @@ var testOpts = {
 
 // --- Tests
 
-test('triton image ...', testOpts, function (tt) {
+test('triton image ...', testOpts, function (suite) {
     var imgNameVer = IMAGE_DATA.name + '@' + IMAGE_DATA.version;
     var originInst;
     var img;
 
-    tt.comment('Test config:');
+    suite.comment('Test config:');
     Object.keys(h.CONFIG).forEach(function (key) {
         var value = h.CONFIG[key];
-        tt.comment(format('- %s: %j', key, value));
+        suite.comment(format('- %s: %j', key, value));
     });
 
     // TODO: `triton rm -f` would be helpful for this
-    tt.test('  setup: rm existing origin inst ' + ORIGIN_ALIAS, function (t) {
+    suite.test('  setup: rm existing origin inst ' + ORIGIN_ALIAS, function (t) {
         h.triton(['inst', 'get', '-j', ORIGIN_ALIAS],
                 function (err, stdout, stderr) {
             if (err) {
@@ -72,7 +72,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     // TODO: `triton rm -f` would be helpful for this
-    tt.test('  setup: rm existing derived inst ' + DERIVED_ALIAS, function (t) {
+    suite.test('  setup: rm existing derived inst ' + DERIVED_ALIAS, function (t) {
         h.triton(['inst', 'get', '-j', DERIVED_ALIAS],
                 function (err, stdout, stderr) {
             if (err) {
@@ -93,7 +93,7 @@ test('triton image ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  setup: rm existing img ' + imgNameVer, function (t) {
+    suite.test('  setup: rm existing img ' + imgNameVer, function (t) {
         h.triton(['img', 'get', '-j', imgNameVer],
                 function (err, stdout, stderr) {
             if (err) {
@@ -115,7 +115,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     var originImgNameOrId;
-    tt.test('  setup: find origin image', function (t) {
+    suite.test('  setup: find origin image', function (t) {
         h.getTestImg(t, function (err, imgId) {
             t.ifError(err, 'getTestImg' + (err ? ': ' + err : ''));
             originImgNameOrId = imgId;
@@ -124,7 +124,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     var pkgId;
-    tt.test('  setup: find test package', function (t) {
+    suite.test('  setup: find test package', function (t) {
         h.getTestPkg(t, function (err, pkgId_) {
             t.ifError(err, 'getTestPkg' + (err ? ': ' + err : ''));
             pkgId = pkgId_;
@@ -133,7 +133,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     var markerFile = '/nodetritontest-was-here.txt';
-    tt.test('  setup: triton create ... -n ' + ORIGIN_ALIAS, function (t) {
+    suite.test('  setup: triton create ... -n ' + ORIGIN_ALIAS, function (t) {
         var argv = ['create', '-wj', '-n', ORIGIN_ALIAS,
             '-m', 'user-script=touch ' + markerFile,
             originImgNameOrId, pkgId];
@@ -151,7 +151,7 @@ test('triton image ...', testOpts, function (tt) {
     //      tape (don't know why yet). Instead we'll use a user-script to
     //      change the origin as our image change.
     //
-    //tt.test('  setup: add marker to origin', function (t) {
+    //suite.test('  setup: add marker to origin', function (t) {
     //    var argv = ['ssh', originInst.id,
     //        '-o', 'StrictHostKeyChecking=no',
     //        '-o', 'UserKnownHostsFile=/dev/null',
@@ -162,7 +162,7 @@ test('triton image ...', testOpts, function (tt) {
     //    });
     //});
 
-    tt.test('  triton image create ...', function (t) {
+    suite.test('  triton image create ...', function (t) {
         var argv = ['image', 'create', '-j', '-w', '-t', 'foo=bar',
             originInst.id, IMAGE_DATA.name, IMAGE_DATA.version];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -181,7 +181,7 @@ test('triton image ...', testOpts, function (tt) {
     });
 
     var derivedInst;
-    tt.test('  triton create ... -n ' + DERIVED_ALIAS, function (t) {
+    suite.test('  triton create ... -n ' + DERIVED_ALIAS, function (t) {
         t.ok(img, 'have an img to test');
         if (img) {
             var argv = ['create', '-wj', '-n', DERIVED_ALIAS, img.id, pkgId];
@@ -200,7 +200,7 @@ test('triton image ...', testOpts, function (tt) {
         }
     });
 
-    tt.test('  triton image share ...', function (t) {
+    suite.test('  triton image share ...', function (t) {
         var dummyUuid = uuid.v4();
         var argv = ['image', 'share', img.id, dummyUuid];
         h.safeTriton(t, argv, function (err) {
@@ -262,7 +262,7 @@ test('triton image ...', testOpts, function (tt) {
     // Remove instances. Add a test timeout, because '-w' on delete doesn't
     // have a way to know if the attempt failed or if it is just taking a
     // really long time.
-    tt.test('  cleanup: triton rm', {timeout: 10 * 60 * 1000}, function (t) {
+    suite.test('  cleanup: triton rm', {timeout: 10 * 60 * 1000}, function (t) {
         if (!originInst || !derivedInst) {
             t.end();
             return;
@@ -273,7 +273,7 @@ test('triton image ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  cleanup: triton image rm', function (t) {
+    suite.test('  cleanup: triton image rm', function (t) {
         if (!img) {
             t.end();
             return;
@@ -282,4 +282,6 @@ test('triton image ...', testOpts, function (tt) {
             t.end();
         });
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-instance-tag.test.js b/test/integration/cli-instance-tag.test.js
index 283e023..3363ebf 100644
--- a/test/integration/cli-instance-tag.test.js
+++ b/test/integration/cli-instance-tag.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -16,7 +16,7 @@ var f = require('util').format;
 var os = require('os');
 var path = require('path');
 var tabula = require('tabula');
-var test = require('tape');
+var test = require('tap').test;
 var vasync = require('vasync');
 
 var common = require('../../lib/common');
@@ -38,12 +38,12 @@ if (opts.skip) {
     console.error('** skipping %s tests', __filename);
     console.error('** set "allowWriteActions" in test config to enable');
 }
-test('triton inst tag ...', opts, function (tt) {
-    h.printConfig(tt);
+test('triton inst tag ...', opts, function (suite) {
+    h.printConfig(suite);
 
     var inst;
 
-    tt.test('  cleanup: rm inst ' + INST_ALIAS + ' if exists', function (t) {
+    suite.test('  cleanup: rm inst ' + INST_ALIAS + ' if exists', function (t) {
         h.deleteTestInst(t, INST_ALIAS, function (err) {
             t.ifErr(err);
             t.end();
@@ -51,7 +51,7 @@ test('triton inst tag ...', opts, function (tt) {
     });
 
     var imgId;
-    tt.test('  setup: find test image', function (t) {
+    suite.test('  setup: find test image', function (t) {
         h.getTestImg(t, function (err, imgId_) {
             t.ifError(err, 'getTestImg' + (err ? ': ' + err : ''));
             imgId = imgId_;
@@ -60,7 +60,7 @@ test('triton inst tag ...', opts, function (tt) {
     });
 
     var pkgId;
-    tt.test('  setup: find test package', function (t) {
+    suite.test('  setup: find test package', function (t) {
         h.getTestPkg(t, function (err, pkgId_) {
             t.ifError(err, 'getTestPkg' + (err ? ': ' + err : ''));
             pkgId = pkgId_;
@@ -69,7 +69,7 @@ test('triton inst tag ...', opts, function (tt) {
     });
 
     // create a test machine (blocking) and output JSON
-    tt.test('  setup: triton create ' + INST_ALIAS, function (t) {
+    suite.test('  setup: triton create ' + INST_ALIAS, function (t) {
         var argv = [
             'create',
             '-wj',
@@ -90,7 +90,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag ls INST', function (t) {
+    suite.test('  triton inst tag ls INST', function (t) {
         h.safeTriton(t, ['inst', 'tag', 'ls', inst.name],
                 function (err, stdout) {
             var tags = JSON.parse(stdout);
@@ -99,7 +99,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tags INST', function (t) {
+    suite.test('  triton inst tags INST', function (t) {
         h.safeTriton(t, ['inst', 'tags', inst.name], function (err, stdout) {
             var tags = JSON.parse(stdout);
             t.deepEqual(tags, {blah: 'bling'});
@@ -107,7 +107,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag set -w INST name=value', function (t) {
+    suite.test('  triton inst tag set -w INST name=value', function (t) {
         var argv = ['inst', 'tag', 'set', '-w', inst.id,
             'foo=bar', 'pi=3.14', 'really=true'];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -122,7 +122,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst get INST foo', function (t) {
+    suite.test('  triton inst get INST foo', function (t) {
         h.safeTriton(t, ['inst', 'tag', 'get', inst.id.split('-')[0], 'foo'],
                 function (err, stdout) {
             t.equal(stdout.trim(), 'bar');
@@ -130,7 +130,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst get INST foo -j', function (t) {
+    suite.test('  triton inst get INST foo -j', function (t) {
         h.safeTriton(t, ['inst', 'tag', 'get', inst.id, 'foo', '-j'],
                 function (err, stdout) {
             t.equal(stdout.trim(), '"bar"');
@@ -138,7 +138,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst get INST really -j', function (t) {
+    suite.test('  triton inst get INST really -j', function (t) {
         h.safeTriton(t, ['inst', 'tag', 'get', inst.name, 'really', '-j'],
                 function (err, stdout) {
             t.equal(stdout.trim(), 'true');
@@ -146,7 +146,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag set -w INST -f tags.json', function (t) {
+    suite.test('  triton inst tag set -w INST -f tags.json', function (t) {
         var argv = ['inst', 'tag', 'set', '-w', inst.name, '-f',
             path.resolve(__dirname, 'data', 'tags.json')];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -161,7 +161,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag set -w INST -f tags.kv', function (t) {
+    suite.test('  triton inst tag set -w INST -f tags.kv', function (t) {
         var argv = ['inst', 'tag', 'set', '-w', inst.name, '-f',
             path.resolve(__dirname, 'data', 'tags.kv')];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -178,7 +178,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag rm -w INST key really', function (t) {
+    suite.test('  triton inst tag rm -w INST key really', function (t) {
         var argv = ['inst', 'tag', 'rm', '-w', inst.name, 'key', 'really'];
         h.safeTriton(t, argv, function (err, stdout) {
             var lines = stdout.trim().split(/\n/);
@@ -190,7 +190,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag list INST', function (t) {
+    suite.test('  triton inst tag list INST', function (t) {
         var argv = ['inst', 'tag', 'list', inst.name];
         h.safeTriton(t, argv, function (err, stdout) {
             var tags = JSON.parse(stdout);
@@ -204,7 +204,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag replace-all -w INST ...', function (t) {
+    suite.test('  triton inst tag replace-all -w INST ...', function (t) {
         var argv = ['inst', 'tag', 'replace-all', '-w',
             inst.name, 'whoa=there'];
         h.safeTriton(t, argv, function (err, stdout) {
@@ -216,7 +216,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tag delete -w -a INST', function (t) {
+    suite.test('  triton inst tag delete -w -a INST', function (t) {
         var argv = ['inst', 'tag', 'delete', '-w', '-a', inst.name];
         h.safeTriton(t, argv, function (err, stdout) {
             t.equal(stdout.trim(), 'Deleted all tags on instance ' + inst.name);
@@ -224,7 +224,7 @@ test('triton inst tag ...', opts, function (tt) {
         });
     });
 
-    tt.test('  triton inst tags INST', function (t) {
+    suite.test('  triton inst tags INST', function (t) {
         var argv = ['inst', 'tags', inst.name];
         h.safeTriton(t, argv, function (err, stdout) {
             t.equal(stdout.trim(), '{}');
@@ -236,11 +236,12 @@ test('triton inst tag ...', opts, function (tt) {
      * Use a timeout, because '-w' on delete doesn't have a way to know if the
      * attempt failed or if it is just taking a really long time.
      */
-    tt.test('  cleanup: triton rm INST', {timeout: 10 * 60 * 1000},
+    suite.test('  cleanup: triton rm INST', {timeout: 10 * 60 * 1000},
             function (t) {
         h.safeTriton(t, ['rm', '-w', inst.id], function (err, stdout) {
             t.end();
         });
     });
 
+    suite.end();
 });
diff --git a/test/integration/cli-ips.test.js b/test/integration/cli-ips.test.js
index 2a90a1c..f10f149 100644
--- a/test/integration/cli-ips.test.js
+++ b/test/integration/cli-ips.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 var common = require('../../lib/common');
 
@@ -26,9 +26,9 @@ var ips;
 
 // --- Tests
 
-test('triton network ip list', function (tt) {
+test('triton network ip list', function (suite) {
 
-    tt.test(' triton network ip list -h', function (t) {
+    suite.test(' triton network ip list -h', function (t) {
         h.triton('network ip list -h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -37,7 +37,7 @@ test('triton network ip list', function (tt) {
         });
     });
 
-    tt.test(' triton networks -j', function (t) {
+    suite.test(' triton networks -j', function (t) {
         h.triton('networks -j', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -57,7 +57,7 @@ test('triton network ip list', function (tt) {
         });
     });
 
-    tt.test(' triton network ip list', function (t) {
+    suite.test(' triton network ip list', function (t) {
         h.triton('network ip list', function (err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -65,7 +65,7 @@ test('triton network ip list', function (tt) {
         });
     });
 
-    tt.test(' triton network ip list ID', function (t) {
+    suite.test(' triton network ip list ID', function (t) {
         h.triton('network ip list ' + networks[0].id,
             function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -76,7 +76,7 @@ test('triton network ip list', function (tt) {
         });
     });
 
-    tt.test(' triton network ip list SHORTID', function (t) {
+    suite.test(' triton network ip list SHORTID', function (t) {
         var shortid = networks[0].id.split('-')[0];
         h.triton('network ip list ' + shortid, function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -87,7 +87,7 @@ test('triton network ip list', function (tt) {
         });
     });
 
-    tt.test(' triton network ip list -j', function (t) {
+    suite.test(' triton network ip list -j', function (t) {
         h.triton('network ip list -j ' + networks[0].id,
             function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -105,12 +105,13 @@ test('triton network ip list', function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton network ip get', function (tt) {
+test('triton network ip get', function (suite) {
 
-    tt.test(' triton network ip get -h', function (t) {
+    suite.test(' triton network ip get -h', function (t) {
         h.triton('network ip get -h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -119,7 +120,7 @@ test('triton network ip get', function (tt) {
         });
     });
 
-    tt.test(' triton network ip help get', function (t) {
+    suite.test(' triton network ip help get', function (t) {
         h.triton('network ip help get', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -128,7 +129,7 @@ test('triton network ip get', function (tt) {
         });
     });
 
-    tt.test(' triton network ip get', function (t) {
+    suite.test(' triton network ip get', function (t) {
         h.triton('network ip get', function (err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -136,7 +137,7 @@ test('triton network ip get', function (tt) {
         });
     });
 
-    tt.test(' triton network ip get ID IP', function (t) {
+    suite.test(' triton network ip get ID IP', function (t) {
         h.triton('network ip get ' + networks[0].id + ' ' +
                 ips[0].ip, function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -147,7 +148,7 @@ test('triton network ip get', function (tt) {
         });
     });
 
-    tt.test(' triton network ip get SHORTID IP', function (t) {
+    suite.test(' triton network ip get SHORTID IP', function (t) {
         var shortid = networks[0].id.split('-')[0];
         h.triton('network ip get ' + shortid + ' ' + ips[0].ip,
             function (err, stdout, stderr) {
@@ -159,7 +160,7 @@ test('triton network ip get', function (tt) {
         });
     });
 
-    tt.test(' triton network ip get NAME IP', function (t) {
+    suite.test(' triton network ip get NAME IP', function (t) {
         h.triton('network ip get ' + networks[0].name + ' ' +
                 ips[0].ip, function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -170,4 +171,5 @@ test('triton network ip get', function (tt) {
         });
     });
 
+    suite.end();
 });
diff --git a/test/integration/cli-keys.test.js b/test/integration/cli-keys.test.js
index a7482da..8d18e3e 100644
--- a/test/integration/cli-keys.test.js
+++ b/test/integration/cli-keys.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 var backoff = require('backoff');
 
 
@@ -28,8 +28,8 @@ var MAX_CHECK_KEY_TRIES = 10;
 
 // --- Tests
 
-test('triton key', function (tt) {
-    tt.test(' triton key add', function (t) {
+test('triton key', function (suite) {
+    suite.test(' triton key add', function (t) {
         var cmd = 'key add -n ' + KEY_NAME + ' ' + KEY_PATH;
         h.triton(cmd, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton key add'))
@@ -40,7 +40,7 @@ test('triton key', function (tt) {
         });
     });
 
-    tt.test(' triton key get', function (t) {
+    suite.test(' triton key get', function (t) {
         h.triton('key get ' + KEY_SIG, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton key get'))
                 return t.end();
@@ -50,7 +50,7 @@ test('triton key', function (tt) {
         });
     });
 
-    tt.test(' triton key list', function (t) {
+    suite.test(' triton key list', function (t) {
         h.triton('key list', function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton key list'))
                 return t.end();
@@ -75,7 +75,7 @@ test('triton key', function (tt) {
         });
     });
 
-    tt.test(' triton key delete', function (t) {
+    suite.test(' triton key delete', function (t) {
         var cmd = 'key delete ' + KEY_SIG + ' --yes';
         h.triton(cmd, function (err, stdout, stderr) {
             if (h.ifErr(t, err, 'triton key delete'))
@@ -97,4 +97,6 @@ test('triton key', function (tt) {
             call.start();
         });
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-manage-workflow.test.js b/test/integration/cli-manage-workflow.test.js
index bde2484..1d6e095 100644
--- a/test/integration/cli-manage-workflow.test.js
+++ b/test/integration/cli-manage-workflow.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var f = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var vasync = require('vasync');
 
 var common = require('../../lib/common');
@@ -40,10 +40,10 @@ if (opts.skip) {
     console.error('** skipping %s tests', __filename);
     console.error('** set "allowWriteActions" in test config to enable');
 }
-test('triton manage workflow', opts, function (tt) {
-    h.printConfig(tt);
+test('triton manage workflow', opts, function (suite) {
+    h.printConfig(suite);
 
-    tt.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
+    suite.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
         h.deleteTestInst(t, INST_ALIAS, function (err) {
             t.ifErr(err);
             t.end();
@@ -51,7 +51,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     var imgId;
-    tt.test('  setup: find test image', function (t) {
+    suite.test('  setup: find test image', function (t) {
         h.getTestImg(t, function (err, imgId_) {
             t.ifError(err, 'getTestImg' + (err ? ': ' + err : ''));
             imgId = imgId_;
@@ -60,7 +60,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     var pkgId;
-    tt.test('  setup: find test package', function (t) {
+    suite.test('  setup: find test package', function (t) {
         h.getTestPkg(t, function (err, pkgId_) {
             t.ifError(err, 'getTestPkg' + (err ? ': ' + err : ''));
             pkgId = pkgId_;
@@ -69,7 +69,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     var resizePkgName;
-    tt.test('  setup: find resize test package', function (t) {
+    suite.test('  setup: find resize test package', function (t) {
         h.getResizeTestPkg(t, function (err, pkgName_) {
             t.ifError(err, 'getResizeTestPkg' + (err ? ': ' + err : ''));
             resizePkgName = pkgName_;
@@ -78,7 +78,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // create a test machine (blocking) and output JSON
-    tt.test('  setup: triton create', function (t) {
+    suite.test('  setup: triton create', function (t) {
         var argv = [
             'create',
             '-wj',
@@ -103,7 +103,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // test `triton instance -j` with the UUID, the alias, and the short ID
-    tt.test('  triton instance get', function (t) {
+    suite.test('  triton instance get', function (t) {
         var uuid = instance.id;
         var shortId = common.uuidToShortId(uuid);
         vasync.parallel({
@@ -144,14 +144,14 @@ test('triton manage workflow', opts, function (tt) {
     // Remove instance. Add a test timeout, because '-w' on delete doesn't
     // have a way to know if the attempt failed or if it is just taking a
     // really long time.
-    tt.test('  triton delete', {timeout: 10 * 60 * 1000}, function (t) {
+    suite.test('  triton delete', {timeout: 10 * 60 * 1000}, function (t) {
         h.safeTriton(t, ['delete', '-w', instance.id], function () {
             t.end();
         });
     });
 
     // Test the '410 Gone' handling from CloudAPI GetMachine.
-    tt.test('  triton inst get (deleted)', function (t) {
+    suite.test('  triton inst get (deleted)', function (t) {
         h.triton(['inst', 'get', instance.id], function (err, stdout, stderr) {
             t.ok(err, 'got err: ' + err);
             t.equal(err.code, 3, 'exit status of 3');
@@ -169,7 +169,7 @@ test('triton manage workflow', opts, function (tt) {
     //      verify the user-script worked.
 
     // create a test machine (non-blocking)
-    tt.test('  triton create', function (t) {
+    suite.test('  triton create', function (t) {
         h.safeTriton(t, ['create', '-jn', INST_ALIAS, imgId, pkgId],
             function (err, stdout) {
 
@@ -192,7 +192,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // wait for the machine to start
-    tt.test('  triton inst wait', function (t) {
+    suite.test('  triton inst wait', function (t) {
         h.safeTriton(t, ['inst', 'wait', instance.id],
             function (err, stdout) {
 
@@ -210,7 +210,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // stop the machine
-    tt.test('  triton stop', function (t) {
+    suite.test('  triton stop', function (t) {
         h.safeTriton(t, ['stop', '-w', INST_ALIAS], function (err, stdout) {
             t.ok(stdout.match(/^Stop instance/, 'correct stdout'));
             t.end();
@@ -218,7 +218,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // wait for the machine to stop
-    tt.test('  triton confirm stopped', function (t) {
+    suite.test('  triton confirm stopped', function (t) {
         h.safeTriton(t, {json: true, args: ['inst', 'get', '-j', INST_ALIAS]},
                 function (err, d) {
             instance = d;
@@ -228,14 +228,14 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // start the machine
-    tt.test('  triton start', function (t) {
+    suite.test('  triton start', function (t) {
         h.safeTriton(t, ['start', '-w', INST_ALIAS],
                 function (err, stdout) {
             t.ok(stdout.match(/^Start instance/, 'correct stdout'));
             t.end();
         });
     });
-    tt.test('  confirm running', function (t) {
+    suite.test('  confirm running', function (t) {
         h.safeTriton(t, {json: true, args: ['inst', 'get', '-j', INST_ALIAS]},
                 function (err, d) {
             instance = d;
@@ -245,7 +245,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // reboot the machine
-    tt.test('  triton reboot', function (t) {
+    suite.test('  triton reboot', function (t) {
         h.safeTriton(t, ['reboot', '-w', INST_ALIAS],
                 function (err, stdout) {
             t.ok(stdout.match(/^Rebooting instance/),
@@ -255,7 +255,7 @@ test('triton manage workflow', opts, function (tt) {
             t.end();
         });
     });
-    tt.test('  confirm running', function (t) {
+    suite.test('  confirm running', function (t) {
         h.safeTriton(t, {json: true, args: ['inst', 'get', '-j', INST_ALIAS]},
                 function (err, d) {
             instance = d;
@@ -265,7 +265,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // resize the instance
-    tt.test('  triton inst resize', function (t) {
+    suite.test('  triton inst resize', function (t) {
         var args = ['inst', 'resize', '-w', instance.id, resizePkgName];
         h.safeTriton(t, args, function (err, stdout) {
             t.ok(stdout.match(/^Resizing instance/m),
@@ -276,7 +276,7 @@ test('triton manage workflow', opts, function (tt) {
         });
     });
 
-    tt.test('  confirm resized', function (t) {
+    suite.test('  confirm resized', function (t) {
         h.safeTriton(t, {json: true, args: ['inst', 'get', '-j',
               INST_ALIAS]},
           function (err, inst) {
@@ -286,7 +286,7 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // rename the instance
-    tt.test('  triton inst rename', function (t) {
+    suite.test('  triton inst rename', function (t) {
         var args = ['inst', 'rename', '-w', instance.id, INST_ALIAS_NEWNAME];
         h.safeTriton(t, args, function (err, stdout) {
             t.ok(stdout.match(/^Renaming instance/m),
@@ -297,7 +297,7 @@ test('triton manage workflow', opts, function (tt) {
         });
     });
 
-    tt.test('  confirm renamed', function (t) {
+    suite.test('  confirm renamed', function (t) {
         h.safeTriton(t, {json: true, args: ['inst', 'get', '-j',
             INST_ALIAS_NEWNAME]},
                 function (err, inst) {
@@ -307,10 +307,11 @@ test('triton manage workflow', opts, function (tt) {
     });
 
     // remove test instance
-    tt.test('  cleanup (triton delete)', function (t) {
+    suite.test('  cleanup (triton delete)', function (t) {
         h.safeTriton(t, ['delete', '-w', instance.id], function () {
             t.end();
         });
     });
 
+    suite.end();
 });
diff --git a/test/integration/cli-networks.test.js b/test/integration/cli-networks.test.js
index 6091fa4..db57d9a 100644
--- a/test/integration/cli-networks.test.js
+++ b/test/integration/cli-networks.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var f = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var h = require('./helpers');
 
 var common = require('../../lib/common');
@@ -39,9 +39,9 @@ if (OPTS.skip) {
     console.error('** set "allowWriteActions" in test config to enable');
 }
 
-test('triton networks', function (tt) {
+test('triton networks', function (suite) {
 
-    tt.test('  setup: find a test VLAN', function (t) {
+    suite.test('  setup: find a test VLAN', function (t) {
         h.triton('vlan list -j', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -52,7 +52,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton network list -h', function (t) {
+    suite.test(' triton network list -h', function (t) {
         h.triton('networks -h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -61,7 +61,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton help networks', function (t) {
+    suite.test(' triton help networks', function (t) {
         h.triton('help networks', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -71,7 +71,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton networks', function (t) {
+    suite.test(' triton networks', function (t) {
         h.triton('networks', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -81,7 +81,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton network list', function (t) {
+    suite.test(' triton network list', function (t) {
         h.triton('network list', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -91,7 +91,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton networks public=false', function (t) {
+    suite.test(' triton networks public=false', function (t) {
         h.triton('networks public=false -H -o public',
         function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -107,7 +107,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton network list public=false', function (t) {
+    suite.test(' triton network list public=false', function (t) {
         h.triton('network list public=false -H -o public',
         function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -123,7 +123,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton network list public=true', function (t) {
+    suite.test(' triton network list public=true', function (t) {
         h.triton('network list public=true -H -o public',
         function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -136,14 +136,14 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton network list public=bogus', function (t) {
+    suite.test(' triton network list public=bogus', function (t) {
         h.triton('network list public=bogus', function (err, stdout, stderr) {
             t.ok(err, err);
             t.end();
         });
     });
 
-    tt.test(' triton networks -l', function (t) {
+    suite.test(' triton networks -l', function (t) {
         h.triton('networks -l', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -152,7 +152,7 @@ test('triton networks', function (tt) {
         });
     });
 
-    tt.test(' triton networks -j', function (t) {
+    suite.test(' triton networks -j', function (t) {
         h.triton('networks -j', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -169,12 +169,13 @@ test('triton networks', function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton network get', function (tt) {
+test('triton network get', function (suite) {
 
-    tt.test(' triton network get -h', function (t) {
+    suite.test(' triton network get -h', function (t) {
         h.triton('network get -h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -183,7 +184,7 @@ test('triton network get', function (tt) {
         });
     });
 
-    tt.test(' triton network help get', function (t) {
+    suite.test(' triton network help get', function (t) {
         h.triton('network help get', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -192,7 +193,7 @@ test('triton network get', function (tt) {
         });
     });
 
-    tt.test(' triton network get', function (t) {
+    suite.test(' triton network get', function (t) {
         h.triton('network get', function (err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -200,7 +201,7 @@ test('triton network get', function (tt) {
         });
     });
 
-    tt.test(' triton network get ID', function (t) {
+    suite.test(' triton network get ID', function (t) {
         h.triton('network get ' + networks[0].id,
                 function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -211,7 +212,7 @@ test('triton network get', function (tt) {
         });
     });
 
-    tt.test(' triton network get SHORTID', function (t) {
+    suite.test(' triton network get SHORTID', function (t) {
         var shortid = networks[0].id.split('-')[0];
         h.triton('network get ' + shortid, function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -222,7 +223,7 @@ test('triton network get', function (tt) {
         });
     });
 
-    tt.test(' triton network get NAME', function (t) {
+    suite.test(' triton network get NAME', function (t) {
         h.triton('network get ' + networks[0].name,
                 function (err, stdout, stderr) {
             if (h.ifErr(t, err))
@@ -233,18 +234,19 @@ test('triton network get', function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton network create', OPTS, function (tt) {
+test('triton network create', OPTS, function (suite) {
 
-    tt.test('  cleanup: rm network ' + NET_NAME + ' if exists', function (t) {
+    suite.test('  cleanup: rm network ' + NET_NAME + ' if exists', function (t) {
         h.triton('network delete ' + NET_NAME, function (err, stdout) {
             t.end();
         });
     });
 
-    tt.test(' triton network create -h', function (t) {
+    suite.test(' triton network create -h', function (t) {
         h.triton('network create -h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -253,7 +255,7 @@ test('triton network create', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton network help create', function (t) {
+    suite.test(' triton network help create', function (t) {
         h.triton('network help create', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -262,7 +264,7 @@ test('triton network create', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton network create', function (t) {
+    suite.test(' triton network create', function (t) {
         h.triton('network create', function (err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -270,7 +272,7 @@ test('triton network create', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton network create VLAN', function (t) {
+    suite.test(' triton network create VLAN', function (t) {
         h.triton('network create --name=' + NET_NAME +
                  ' --subnet=192.168.97.0/24 --start_ip=192.168.97.1' +
                  ' --end_ip=192.168.97.254 -j ' + vlan.vlan_id,
@@ -293,12 +295,13 @@ test('triton network create', OPTS, function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton network delete', OPTS, function (tt) {
+test('triton network delete', OPTS, function (suite) {
 
-    tt.test(' triton network delete -h', function (t) {
+    suite.test(' triton network delete -h', function (t) {
         h.triton('network delete -h', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -307,7 +310,7 @@ test('triton network delete', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton network help delete', function (t) {
+    suite.test(' triton network help delete', function (t) {
         h.triton('network help delete', function (err, stdout, stderr) {
             if (h.ifErr(t, err))
                 return t.end();
@@ -316,7 +319,7 @@ test('triton network delete', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton network delete', function (t) {
+    suite.test(' triton network delete', function (t) {
         h.triton('network delete', function (err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -346,23 +349,24 @@ test('triton network delete', OPTS, function (tt) {
         });
     }
 
-    tt.test(' triton network delete ID', function (t) {
+    suite.test(' triton network delete ID', function (t) {
         deleteNetworkTester(t, function (err, network, cb) {
             h.triton('network delete ' + network.id, cb);
         });
     });
 
-    tt.test(' triton network delete NAME', function (t) {
+    suite.test(' triton network delete NAME', function (t) {
         deleteNetworkTester(t, function (err, network, cb) {
             h.triton('network delete ' + network.name, cb);
         });
     });
 
-    tt.test(' triton network delete SHORTID', function (t) {
+    suite.test(' triton network delete SHORTID', function (t) {
         deleteNetworkTester(t, function (err, network, cb) {
             var shortid = network.id.split('-')[0];
             h.triton('network delete ' + shortid, cb);
         });
     });
 
+    suite.end();
 });
diff --git a/test/integration/cli-nics.test.js b/test/integration/cli-nics.test.js
index e4bd17d..7400c1c 100644
--- a/test/integration/cli-nics.test.js
+++ b/test/integration/cli-nics.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,7 @@
 var h = require('./helpers');
 var f = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 
 // --- Globals
 
@@ -37,17 +37,17 @@ if (OPTS.skip) {
     console.error('** set "allowWriteActions" in test config to enable');
 }
 
-test('triton instance nics', OPTS, function (tt) {
-    h.printConfig(tt);
+test('triton instance nics', OPTS, function (suite) {
+    h.printConfig(suite);
 
-    tt.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
+    suite.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
         h.deleteTestInst(t, INST_ALIAS, function onDelete(err) {
             t.ifErr(err);
             t.end();
         });
     });
 
-    tt.test('  setup: triton instance create', function (t) {
+    suite.test('  setup: triton instance create', function (t) {
         h.createTestInst(t, INST_ALIAS, {}, function onInst(err, instId) {
             if (h.ifErr(t, err, 'triton instance create')) {
                 t.end();
@@ -61,7 +61,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  setup: find network for tests', function (t) {
+    suite.test('  setup: find network for tests', function (t) {
         h.triton('network list -j', function onNetworks(err, stdout) {
             if (h.ifErr(t, err, 'triton network list')) {
                 t.end();
@@ -75,7 +75,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic create', function (t) {
+    suite.test('  triton instance nic create', function (t) {
         var cmd = 'instance nic create -j -w ' + INST + ' ' + NETWORK.id;
 
         h.triton(cmd, function onTriton(err, stdout, stderr) {
@@ -91,7 +91,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic get', function (t) {
+    suite.test('  triton instance nic get', function (t) {
         var cmd = 'instance nic get ' + INST + ' ' + NIC.mac;
 
         h.triton(cmd, function onTriton(err, stdout, stderr) {
@@ -109,7 +109,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic list', function (t) {
+    suite.test('  triton instance nic list', function (t) {
         var cmd = 'instance nic list ' + INST;
 
         h.triton(cmd, function onTriton(err, stdout, stderr) {
@@ -135,7 +135,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic list -j', function (t) {
+    suite.test('  triton instance nic list -j', function (t) {
         var cmd = 'instance nic list -j ' + INST;
 
         h.triton(cmd, function onTriton(err, stdout, stderr) {
@@ -160,7 +160,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton instance nic list mac=<...>', function (t) {
+    suite.test(' triton instance nic list mac=<...>', function (t) {
         var cmd = 'instance nic list -j ' + INST + ' mac=' + NIC.mac;
         h.triton(cmd, function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
@@ -180,7 +180,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton nic list mac=<...>', function (t) {
+    suite.test(' triton nic list mac=<...>', function (t) {
         var cmd = 'instance nic list -j ' + INST + ' mac=' + NIC.mac;
 
         h.triton(cmd, function doTriton(err, stdout, stderr) {
@@ -201,7 +201,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic delete', function (t) {
+    suite.test('  triton instance nic delete', function (t) {
         var cmd = 'instance nic delete --force ' + INST + ' ' + NIC.mac;
 
         h.triton(cmd, function doTriton(err, stdout, stderr) {
@@ -216,7 +216,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic create (with NICOPTS)', function (t) {
+    suite.test('  triton instance nic create (with NICOPTS)', function (t) {
         var cmd = 'instance nic create -j -w ' + INST + ' ipv4_uuid=' +
             NETWORK.id;
 
@@ -232,7 +232,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic with ip get', function (t) {
+    suite.test('  triton instance nic with ip get', function (t) {
         var cmd = 'instance nic get ' + INST + ' ' + NIC2.mac;
 
         h.triton(cmd, function onTriton(err, stdout, stderr) {
@@ -250,7 +250,7 @@ test('triton instance nics', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance nic with ip delete', function (t) {
+    suite.test('  triton instance nic with ip delete', function (t) {
         var cmd = 'instance nic delete --force ' + INST + ' ' + NIC2.mac;
 
         h.triton(cmd, function onTriton(err, stdout, stderr) {
@@ -269,10 +269,12 @@ test('triton instance nics', OPTS, function (tt) {
      * Use a timeout, because '-w' on delete doesn't have a way to know if the
      * attempt failed or if it is just taking a really long time.
      */
-    tt.test('  cleanup: triton instance rm INST', {timeout: 10 * 60 * 1000},
+    suite.test('  cleanup: triton instance rm INST', {timeout: 10 * 60 * 1000},
             function (t) {
         h.deleteTestInst(t, INST_ALIAS, function () {
             t.end();
         });
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-profiles.test.js b/test/integration/cli-profiles.test.js
index b1b652c..4430182 100644
--- a/test/integration/cli-profiles.test.js
+++ b/test/integration/cli-profiles.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -16,7 +16,7 @@ var fs = require('fs');
 var path = require('path');
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 var PROFILE_FILE = path.join(__dirname, 'test-profile.json');
 var PROFILE_DATA = JSON.parse(fs.readFileSync(PROFILE_FILE, 'utf8'));
@@ -33,8 +33,8 @@ if (opts.skip) {
     console.error('** set "allowWriteActions" in test config to enable');
 }
 
-test('triton profiles (read only)', function (tt) {
-    tt.test('  triton profile get env', function (t) {
+test('triton profiles (read only)', function (suite) {
+    suite.test('  triton profile get env', function (t) {
         h.safeTriton(t, {json: true, args: ['profile', 'get', '-j', 'env']},
             function (err, p) {
 
@@ -49,11 +49,11 @@ test('triton profiles (read only)', function (tt) {
         });
     });
 
-    tt.end();
+    suite.end();
 });
 
-test('triton profiles (read/write)', opts, function (tt) {
-    tt.test('  triton profile create', function (t) {
+test('triton profiles (read/write)', opts, function (suite) {
+    suite.test('  triton profile create', function (t) {
         /*
          * We need to skip the Docker setup with '--no-docker' because we are
          * using a bogus keyId and CloudAPI url. The Docker setup requires real
@@ -68,7 +68,7 @@ test('triton profiles (read/write)', opts, function (tt) {
         });
     });
 
-    tt.test('  triton profile get', function (t) {
+    suite.test('  triton profile get', function (t) {
         h.safeTriton(t,
             {json: true, args: ['profile', 'get', '-j', PROFILE_DATA.name]},
             function (err, p) {
@@ -78,7 +78,7 @@ test('triton profiles (read/write)', opts, function (tt) {
         });
     });
 
-    tt.test('  triton profile delete', function (t) {
+    suite.test('  triton profile delete', function (t) {
         h.safeTriton(t, ['profile', 'delete', '-f', PROFILE_DATA.name],
             function (err, stdout) {
 
@@ -87,5 +87,5 @@ test('triton profiles (read/write)', opts, function (tt) {
         });
     });
 
-    tt.end();
+    suite.end();
 });
diff --git a/test/integration/cli-snapshots.test.js b/test/integration/cli-snapshots.test.js
index 194424c..54f207d 100644
--- a/test/integration/cli-snapshots.test.js
+++ b/test/integration/cli-snapshots.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,7 @@
 var h = require('./helpers');
 var f = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 
 // --- Globals
 
@@ -33,17 +33,17 @@ if (OPTS.skip) {
     console.error('** set "allowWriteActions" in test config to enable');
 }
 
-test('triton instance snapshot', OPTS, function (tt) {
-    h.printConfig(tt);
+test('triton instance snapshot', OPTS, function (suite) {
+    h.printConfig(suite);
 
-    tt.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
+    suite.test('  cleanup existing inst with alias ' + INST_ALIAS, function (t) {
         h.deleteTestInst(t, INST_ALIAS, function (err) {
             t.ifErr(err);
             t.end();
         });
     });
 
-    tt.test('  setup: triton instance create', function (t) {
+    suite.test('  setup: triton instance create', function (t) {
         h.createTestInst(t, INST_ALIAS, {}, function onInst(err2, instId) {
             if (h.ifErr(t, err2, 'triton instance create'))
                 return t.end();
@@ -54,7 +54,7 @@ test('triton instance snapshot', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance snapshot create', function (t) {
+    suite.test('  triton instance snapshot create', function (t) {
         var cmd = 'instance snapshot create -w -n ' + SNAP_NAME + ' ' + INST;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -68,7 +68,7 @@ test('triton instance snapshot', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance snapshot get', function (t) {
+    suite.test('  triton instance snapshot get', function (t) {
         var cmd = 'instance snapshot get ' + INST + ' ' + SNAP_NAME;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -83,7 +83,7 @@ test('triton instance snapshot', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance snapshot list', function (t) {
+    suite.test('  triton instance snapshot list', function (t) {
         var cmd = 'instance snapshot list ' + INST;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -106,7 +106,7 @@ test('triton instance snapshot', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance start --snapshot', function (t) {
+    suite.test('  triton instance start --snapshot', function (t) {
         var cmd = 'instance start ' + INST + ' -w --snapshot=' + SNAP_NAME;
 
         h.triton(cmd, function (err, stdout, stderr) {
@@ -119,7 +119,7 @@ test('triton instance snapshot', OPTS, function (tt) {
         });
     });
 
-    tt.test('  triton instance snapshot delete', function (t) {
+    suite.test('  triton instance snapshot delete', function (t) {
         var cmd = 'instance snapshot delete  -w --force ' + INST + ' ' +
                   SNAP_NAME;
 
@@ -140,10 +140,12 @@ test('triton instance snapshot', OPTS, function (tt) {
      * Use a timeout, because '-w' on delete doesn't have a way to know if the
      * attempt failed or if it is just taking a really long time.
      */
-    tt.test('  cleanup: triton instance rm INST', {timeout: 10 * 60 * 1000},
+    suite.test('  cleanup: triton instance rm INST', {timeout: 10 * 60 * 1000},
             function (t) {
         h.deleteTestInst(t, INST_ALIAS, function () {
             t.end();
         });
     });
+
+    suite.end();
 });
diff --git a/test/integration/cli-subcommands.test.js b/test/integration/cli-subcommands.test.js
index a36dd21..f260da9 100644
--- a/test/integration/cli-subcommands.test.js
+++ b/test/integration/cli-subcommands.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,7 @@
 var f = require('util').format;
 
 var h = require('./helpers');
-var test = require('tape');
+var test = require('tap').test;
 
 var common = require('../../lib/common');
 
@@ -123,11 +123,11 @@ var subs = [
 
 // --- Tests
 
-test('triton subcommands', function (ttt) {
+test('triton subcommands', function (subcommandsSuite) {
 
     // loop each sub command group
     subs.forEach(function (subcmds) {
-        ttt.test(f('  [%s]', subcmds), function (tt) {
+        subcommandsSuite.test(f('  [%s]', subcmds), function (suite) {
             var out = [];
 
             // loop each individual subcommand to test
@@ -137,7 +137,7 @@ test('triton subcommands', function (ttt) {
                 var helpArgs = subcmd.split(' ');
                 helpArgs.splice(helpArgs.length - 1, 0, 'help');
 
-                tt.test(f('    triton %s', helpArgs.join(' ')), function (t) {
+                suite.test(f('    triton %s', helpArgs.join(' ')), function (t) {
                     h.triton(helpArgs, function (err, stdout, stderr) {
                         if (h.ifErr(t, err, 'no error'))
                             return t.end();
@@ -150,7 +150,7 @@ test('triton subcommands', function (ttt) {
 
                 var flagArgs = subcmd.split(' ').concat('-h');
 
-                tt.test(f('    triton %s', flagArgs.join(' ')), function (t) {
+                suite.test(f('    triton %s', flagArgs.join(' ')), function (t) {
                     h.triton(flagArgs, function (err, stdout, stderr) {
                         if (h.ifErr(t, err, 'no error'))
                             return t.end();
@@ -164,11 +164,11 @@ test('triton subcommands', function (ttt) {
 
             // ensure all stdout output is the same
             out.forEach(function (stdout) {
-                tt.equal(stdout, out[0], 'stdout mismatch');
+                suite.equal(stdout, out[0], 'stdout mismatch');
             });
-            tt.end();
+            suite.end();
         });
     });
 
-    ttt.end();
+    subcommandsSuite.end();
 });
diff --git a/test/integration/cli-vlans.test.js b/test/integration/cli-vlans.test.js
index 3ebf4f2..4db0d00 100644
--- a/test/integration/cli-vlans.test.js
+++ b/test/integration/cli-vlans.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var f = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var h = require('./helpers');
 
 var common = require('../../lib/common');
@@ -39,9 +39,9 @@ if (OPTS.skip) {
     console.error('** set "allowWriteActions" in test config to enable');
 }
 
-test('triton vlan list', function (tt) {
+test('triton vlan list', function (suite) {
 
-    tt.test(' triton vlan list -h', function (t) {
+    suite.test(' triton vlan list -h', function (t) {
         h.triton('vlan list -h', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -54,7 +54,7 @@ test('triton vlan list', function (tt) {
         });
     });
 
-    tt.test(' triton vlan list', function (t) {
+    suite.test(' triton vlan list', function (t) {
         h.triton('vlan list', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -68,7 +68,7 @@ test('triton vlan list', function (tt) {
         });
     });
 
-    tt.test(' triton vlan list -j', function (t) {
+    suite.test(' triton vlan list -j', function (t) {
         h.triton('vlan list -j', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -81,7 +81,7 @@ test('triton vlan list', function (tt) {
         });
     });
 
-    tt.test(' triton vlan list vlan_id=<...>', function (t) {
+    suite.test(' triton vlan list vlan_id=<...>', function (t) {
         var cmd = 'vlan list -j vlan_id=' + VLAN.vlan_id;
         h.triton(cmd, function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
@@ -99,7 +99,7 @@ test('triton vlan list', function (tt) {
         });
     });
 
-    tt.test(' triton vlan list vlan_id=<...> name=<...> (good)', function (t) {
+    suite.test(' triton vlan list vlan_id=<...> name=<...> (good)', function (t) {
         var cmd = 'vlan list -j vlan_id=' + VLAN.vlan_id + ' name=' + VLAN.name;
 
         h.triton(cmd, function onTriton(err, stdout, stderr) {
@@ -118,7 +118,7 @@ test('triton vlan list', function (tt) {
         });
     });
 
-    tt.test(' triton vlan list vlan_id=<...> name=<...> (bad)', function (t) {
+    suite.test(' triton vlan list vlan_id=<...> name=<...> (bad)', function (t) {
         // search for a mismatch, should return nada
         var cmd = 'vlan list -j vlan_id=' + VLAN.vlan_id + ' name=' +
                   VLAN.name + 'a';
@@ -135,12 +135,13 @@ test('triton vlan list', function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton vlan get', function (tt) {
+test('triton vlan get', function (suite) {
 
-    tt.test(' triton vlan get -h', function (t) {
+    suite.test(' triton vlan get -h', function (t) {
         h.triton('vlan get -h', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -153,7 +154,7 @@ test('triton vlan get', function (tt) {
         });
     });
 
-    tt.test(' triton vlan help get', function (t) {
+    suite.test(' triton vlan help get', function (t) {
         h.triton('vlan help get', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -166,7 +167,7 @@ test('triton vlan get', function (tt) {
         });
     });
 
-    tt.test(' triton vlan get', function (t) {
+    suite.test(' triton vlan get', function (t) {
         h.triton('vlan get', function onTriton(err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -174,7 +175,7 @@ test('triton vlan get', function (tt) {
         });
     });
 
-    tt.test(' triton vlan get ID', function (t) {
+    suite.test(' triton vlan get ID', function (t) {
         h.triton('vlan get ' + VLAN.vlan_id,
                 function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
@@ -189,7 +190,7 @@ test('triton vlan get', function (tt) {
         });
     });
 
-    tt.test(' triton vlan get NAME', function (t) {
+    suite.test(' triton vlan get NAME', function (t) {
         h.triton('vlan get ' + VLAN.name,
                 function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
@@ -204,12 +205,13 @@ test('triton vlan get', function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton vlan networks', function (tt) {
+test('triton vlan networks', function (suite) {
 
-    tt.test(' triton vlan networks -h', function (t) {
+    suite.test(' triton vlan networks -h', function (t) {
         h.triton('vlan networks -h', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -222,7 +224,7 @@ test('triton vlan networks', function (tt) {
         });
     });
 
-    tt.test(' triton vlan help networks', function (t) {
+    suite.test(' triton vlan help networks', function (t) {
         h.triton('vlan help networks', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -235,7 +237,7 @@ test('triton vlan networks', function (tt) {
         });
     });
 
-    tt.test(' triton vlan networks', function (t) {
+    suite.test(' triton vlan networks', function (t) {
         h.triton('vlan networks', function onTriton(err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -243,7 +245,7 @@ test('triton vlan networks', function (tt) {
         });
     });
 
-    tt.test(' triton vlan networks ID', function (t) {
+    suite.test(' triton vlan networks ID', function (t) {
         h.triton('vlan networks -j ' + VLAN.vlan_id,
                 function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
@@ -258,7 +260,7 @@ test('triton vlan networks', function (tt) {
         });
     });
 
-    tt.test(' triton vlan networks NAME', function (t) {
+    suite.test(' triton vlan networks NAME', function (t) {
         h.triton('vlan networks -j ' + VLAN.name,
                 function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
@@ -273,18 +275,19 @@ test('triton vlan networks', function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton vlan create', OPTS, function (tt) {
+test('triton vlan create', OPTS, function (suite) {
 
-    tt.test('  cleanup: rm vlan ' + VLAN_NAME + ' if exists', function (t) {
+    suite.test('  cleanup: rm vlan ' + VLAN_NAME + ' if exists', function (t) {
         h.triton('vlan delete ' + VLAN_NAME, function onTriton(err, stdout) {
             t.end();
         });
     });
 
-    tt.test(' triton vlan create -h', function (t) {
+    suite.test(' triton vlan create -h', function (t) {
         h.triton('vlan create -h', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -297,7 +300,7 @@ test('triton vlan create', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton vlan help create', function (t) {
+    suite.test(' triton vlan help create', function (t) {
         h.triton('vlan help create', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -310,7 +313,7 @@ test('triton vlan create', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton vlan create', function (t) {
+    suite.test(' triton vlan create', function (t) {
         h.triton('vlan create', function onTriton(err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -319,7 +322,7 @@ test('triton vlan create', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton vlan create VLAN', function (t) {
+    suite.test(' triton vlan create VLAN', function (t) {
         h.triton('vlan create -j --name=' + VLAN_NAME + ' ' + VLAN_ID,
                  function onTriton(err, stdout) {
             if (h.ifErr(t, err)) {
@@ -339,12 +342,13 @@ test('triton vlan create', OPTS, function (tt) {
         });
     });
 
+    suite.end();
 });
 
 
-test('triton vlan delete', OPTS, function (tt) {
+test('triton vlan delete', OPTS, function (suite) {
 
-    tt.test(' triton vlan delete -h', function (t) {
+    suite.test(' triton vlan delete -h', function (t) {
         h.triton('vlan delete -h', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -357,7 +361,7 @@ test('triton vlan delete', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton vlan help delete', function (t) {
+    suite.test(' triton vlan help delete', function (t) {
         h.triton('vlan help delete', function onTriton(err, stdout, stderr) {
             if (h.ifErr(t, err)) {
                 t.end();
@@ -370,7 +374,7 @@ test('triton vlan delete', OPTS, function (tt) {
         });
     });
 
-    tt.test(' triton vlan delete', function (t) {
+    suite.test(' triton vlan delete', function (t) {
         h.triton('vlan delete', function onTriton(err, stdout, stderr) {
             t.ok(err);
             t.ok(/error \(Usage\)/.test(stderr));
@@ -403,16 +407,17 @@ test('triton vlan delete', OPTS, function (tt) {
         });
     }
 
-    tt.test(' triton vlan delete ID', function (t) {
+    suite.test(' triton vlan delete ID', function (t) {
         deleteNetworkTester(t, function doDelete(err, vlan, cb) {
             h.triton('vlan delete ' + vlan.vlan_id, cb);
         });
     });
 
-    tt.test(' triton vlan delete NAME', function (t) {
+    suite.test(' triton vlan delete NAME', function (t) {
         deleteNetworkTester(t, function doDelete(err, vlan, cb) {
             h.triton('vlan delete ' + vlan.name, cb);
         });
     });
 
+    suite.end();
 });
diff --git a/test/integration/cli-volumes-size.test.js b/test/integration/cli-volumes-size.test.js
index 20a0194..3c1d8fc 100644
--- a/test/integration/cli-volumes-size.test.js
+++ b/test/integration/cli-volumes-size.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var format = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var vasync = require('vasync');
 
 var common = require('../../lib/common');
@@ -33,20 +33,20 @@ if (testOpts.skip) {
         + 'in test config to enable');
 }
 
-test('triton volume create with non-default size...', testOpts, function (tt) {
+test('triton volume create with non-default size...', testOpts, function (suite) {
     var validVolumeName =
             h.makeResourceName('node-triton-test-volume-create-non-default-' +
                 'size');
     var validVolumeSize = '20G';
     var validVolumeSizeInMib = 20 * 1024;
 
-    tt.comment('Test config:');
+    suite.comment('Test config:');
     Object.keys(h.CONFIG).forEach(function (key) {
         var value = h.CONFIG[key];
-        tt.comment(format('- %s: %j', key, value));
+        suite.comment(format('- %s: %j', key, value));
     });
 
-    tt.test('  cleanup leftover resources', function (t) {
+    suite.test('  cleanup leftover resources', function (t) {
         h.triton(['volume', 'delete', '-y', '-w', validVolumeName].join(' '),
             function onDelVolume(delVolErr, stdout, stderr) {
                 // If there was nothing to delete, this will fail so that's the
@@ -55,7 +55,7 @@ test('triton volume create with non-default size...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  triton volume create volume with non-default size',
+    suite.test('  triton volume create volume with non-default size',
         function (t) {
             h.triton([
                 'volume',
@@ -72,7 +72,7 @@ test('triton volume create with non-default size...', testOpts, function (tt) {
             });
         });
 
-    tt.test('  check volume was created', function (t) {
+    suite.test('  check volume was created', function (t) {
         h.safeTriton(t, ['volume', 'get', validVolumeName],
             function onGetVolume(getVolErr, stdout) {
                 var volume;
@@ -88,7 +88,7 @@ test('triton volume create with non-default size...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  delete volume', function (t) {
+    suite.test('  delete volume', function (t) {
         h.safeTriton(t, ['volume', 'delete', '-y', '-w', validVolumeName],
             function onDelVolume(delVolErr, stdout) {
                 t.equal(delVolErr, null,
@@ -97,7 +97,7 @@ test('triton volume create with non-default size...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  check volume was deleted', function (t) {
+    suite.test('  check volume was deleted', function (t) {
         h.triton(['volume', 'get', validVolumeName].join(' '),
             function onGetVolume(getVolErr, stdout, stderr) {
                 t.ok(getVolErr,
@@ -108,14 +108,16 @@ test('triton volume create with non-default size...', testOpts, function (tt) {
                 t.end();
             });
     });
+
+    suite.end();
 });
 
-test('triton volume create with unavailable size...', testOpts, function (tt) {
+test('triton volume create with unavailable size...', testOpts, function (suite) {
     var validVolumeName =
             h.makeResourceName('node-triton-test-volume-create-unavailable-' +
                 'size');
 
-    tt.test('  triton volume create volume with unavailable size',
+    suite.test('  triton volume create volume with unavailable size',
         function (t) {
 
             vasync.pipeline({arg: {}, funcs: [
@@ -186,4 +188,6 @@ test('triton volume create with unavailable size...', testOpts, function (tt) {
                 t.end();
             });
         });
+
+    suite.end();
 });
\ No newline at end of file
diff --git a/test/integration/cli-volumes.test.js b/test/integration/cli-volumes.test.js
index 123c59a..3b3d0c9 100644
--- a/test/integration/cli-volumes.test.js
+++ b/test/integration/cli-volumes.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var format = require('util').format;
 var os = require('os');
-var test = require('tape');
+var test = require('tap').test;
 var vasync = require('vasync');
 
 var common = require('../../lib/common');
@@ -31,18 +31,18 @@ if (testOpts.skip) {
         + 'in test config to enable');
 }
 
-test('triton volume create ...', testOpts, function (tt) {
+test('triton volume create ...', testOpts, function (suite) {
     var currentVolume;
     var validVolumeName =
             h.makeResourceName('node-triton-test-volume-create-default');
 
-    tt.comment('Test config:');
+    suite.comment('Test config:');
     Object.keys(h.CONFIG).forEach(function (key) {
         var value = h.CONFIG[key];
-        tt.comment(format('- %s: %j', key, value));
+        suite.comment(format('- %s: %j', key, value));
     });
 
-    tt.test('  cleanup leftover resources', function (t) {
+    suite.test('  cleanup leftover resources', function (t) {
         h.triton(['volume', 'delete', '-y', '-w', validVolumeName].join(' '),
             function onDelVolume(delVolErr, stdout, stderr) {
                 // If there was nothing to delete, this will fail so that's the
@@ -51,7 +51,7 @@ test('triton volume create ...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  triton volume create with invalid name', function (t) {
+    suite.test('  triton volume create with invalid name', function (t) {
         var invalidVolumeName =
             h.makeResourceName('node-triton-test-volume-create-invalid-name-' +
                 '!foo!');
@@ -72,7 +72,7 @@ test('triton volume create ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  triton volume create with invalid size', function (t) {
+    suite.test('  triton volume create with invalid size', function (t) {
         var invalidSize = 'foobar';
         var expectedErrMsg = 'triton volume create: error: size "' +
             invalidSize + '" is not a valid volume size';
@@ -93,7 +93,7 @@ test('triton volume create ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  triton volume create with invalid type', function (t) {
+    suite.test('  triton volume create with invalid type', function (t) {
         var invalidType = 'foobar';
         var volumeName =
             h.makeResourceName('node-triton-test-volume-create-invalid-type');
@@ -114,7 +114,7 @@ test('triton volume create ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  triton volume create with invalid network', function (t) {
+    suite.test('  triton volume create with invalid network', function (t) {
         var volumeName =
             h.makeResourceName('node-triton-test-volume-create-invalid-' +
                 'network');
@@ -137,7 +137,7 @@ test('triton volume create ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  triton volume create valid volume', function (t) {
+    suite.test('  triton volume create valid volume', function (t) {
         h.triton([
             'volume',
             'create',
@@ -151,7 +151,7 @@ test('triton volume create ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  check volume was created', function (t) {
+    suite.test('  check volume was created', function (t) {
         h.safeTriton(t, ['volume', 'get', validVolumeName],
             function onGetVolume(getVolErr, stdout) {
                 t.equal(getVolErr, null,
@@ -160,7 +160,7 @@ test('triton volume create ...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  delete volume', function (t) {
+    suite.test('  delete volume', function (t) {
         h.triton(['volume', 'delete', '-y', '-w', validVolumeName].join(' '),
             function onDelVolume(delVolErr, stdout, stderr) {
                 t.equal(delVolErr, null,
@@ -169,7 +169,7 @@ test('triton volume create ...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  check volume was deleted', function (t) {
+    suite.test('  check volume was deleted', function (t) {
         h.triton(['volume', 'get', validVolumeName].join(' '),
             function onGetVolume(getVolErr, stdout, stderr) {
                 t.ok(getVolErr,
@@ -184,7 +184,7 @@ test('triton volume create ...', testOpts, function (tt) {
     // Test that we can create a volume with a valid fabric network and the
     // volume ends up on that network.
 
-    tt.test('  find fabric network', function (t) {
+    suite.test('  find fabric network', function (t) {
         h.triton(['network', 'list', '-j'].join(' '),
             function onGetNetworks(getNetworksErr, stdout, stderr) {
                 var resultsObj;
@@ -212,7 +212,7 @@ test('triton volume create ...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  triton volume on fabric network', function (t) {
+    suite.test('  triton volume on fabric network', function (t) {
         h.triton([
             'volume',
             'create',
@@ -231,7 +231,7 @@ test('triton volume create ...', testOpts, function (tt) {
         });
     });
 
-    tt.test('  check volume was created', function (t) {
+    suite.test('  check volume was created', function (t) {
         h.safeTriton(t, ['volume', 'get', currentVolume.name],
             function onGetVolume(getVolErr, stdout) {
                 var volumeObj;
@@ -246,7 +246,7 @@ test('triton volume create ...', testOpts, function (tt) {
             });
     });
 
-    tt.test('  delete volume', function (t) {
+    suite.test('  delete volume', function (t) {
         h.triton(['volume', 'delete', '-y', '-w', currentVolume.name].join(' '),
             function onDelVolume(delVolErr, stdout, stderr) {
                 t.ifError(delVolErr, 'deleting volume should succeed');
@@ -254,4 +254,5 @@ test('triton volume create ...', testOpts, function (tt) {
             });
     });
 
+    suite.end();
 });
diff --git a/test/unit/argvFromLine.test.js b/test/unit/argvFromLine.test.js
index 1348c98..45c146c 100644
--- a/test/unit/argvFromLine.test.js
+++ b/test/unit/argvFromLine.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -14,7 +14,7 @@
 
 var assert = require('assert-plus');
 var format = require('util').format;
-var test = require('tape');
+var test = require('tap').test;
 
 var argvFromLine = require('../../lib/common').argvFromLine;
 
@@ -163,10 +163,10 @@ var cases = [
 
 // ---- test driver
 
-test('argvFromLine', function (tt) {
+test('argvFromLine', function (suite) {
     cases.forEach(function (c, num) {
         var testName = format('case %d: %s', num, c.line);
-        tt.test(testName, function (t) {
+        suite.test(testName, function (t) {
             debug('--', num);
             debug('c: %j', c);
 
@@ -197,4 +197,6 @@ test('argvFromLine', function (tt) {
             t.end();
         });
     });
+
+    suite.end();
 });
diff --git a/test/unit/common.test.js b/test/unit/common.test.js
index 25a79d3..e843a67 100644
--- a/test/unit/common.test.js
+++ b/test/unit/common.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,7 @@
  */
 
 var common = require('../../lib/common');
-var test = require('tape');
+var test = require('tap').test;
 
 
 // ---- globals
diff --git a/test/unit/metadataFromOpts.test.js b/test/unit/metadataFromOpts.test.js
index b26c2b2..d2dba2a 100644
--- a/test/unit/metadataFromOpts.test.js
+++ b/test/unit/metadataFromOpts.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,7 @@
 var assert = require('assert-plus');
 var cmdln = require('cmdln');
 var format = require('util').format;
-var test = require('tape');
+var test = require('tap').test;
 
 var metadataFromOpts = require('../../lib/metadataandtags').metadataFromOpts;
 
@@ -174,10 +174,10 @@ var cases = [
 
 // ---- test driver
 
-test('metadataFromOpts', function (tt) {
+test('metadataFromOpts', function (suite) {
     cases.forEach(function (c, num) {
         var testName = format('case %d: %s', num, c.argv.join(' '));
-        tt.test(testName, function (t) {
+        suite.test(testName, function (t) {
             debug('--', num);
             debug('c: %j', c);
             var parser = new cmdln.dashdash.Parser({options: OPTIONS});
@@ -227,4 +227,6 @@ test('metadataFromOpts', function (tt) {
             });
         });
     });
+
+    suite.end();
 });
diff --git a/test/unit/parseVolumeSize.test.js b/test/unit/parseVolumeSize.test.js
index ab4eb4e..c986019 100644
--- a/test/unit/parseVolumeSize.test.js
+++ b/test/unit/parseVolumeSize.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,12 +13,12 @@
  */
 
 var assert = require('assert-plus');
-var test = require('tape');
+var test = require('tap').test;
 
 var parseVolumeSize = require('../../lib/volumes').parseVolumeSize;
 
-test('parseVolumeSize', function (tt) {
-    tt.test('parsing invalid sizes', function (t) {
+test('parseVolumeSize', function (suite) {
+    suite.test('parsing invalid sizes', function (t) {
         var invalidVolumeSizes = [
             'foo',
             '0',
@@ -61,7 +61,7 @@ test('parseVolumeSize', function (tt) {
         t.end();
     });
 
-    tt.test('parsing valid sizes', function (t) {
+    suite.test('parsing valid sizes', function (t) {
         var validVolumeSizes = [
             {input: '42G', expectedOutput: 42 * 1024}
         ];
@@ -86,4 +86,6 @@ test('parseVolumeSize', function (tt) {
 
         t.end();
     });
+
+    suite.end();
 });
\ No newline at end of file
diff --git a/test/unit/tagsFromCreateOpts.test.js b/test/unit/tagsFromCreateOpts.test.js
index e58f61f..ed071a8 100644
--- a/test/unit/tagsFromCreateOpts.test.js
+++ b/test/unit/tagsFromCreateOpts.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,7 @@
 var assert = require('assert-plus');
 var cmdln = require('cmdln');
 var format = require('util').format;
-var test = require('tape');
+var test = require('tap').test;
 
 var tagsFromCreateOpts
     = require('../../lib/metadataandtags').tagsFromCreateOpts;
@@ -141,10 +141,10 @@ var cases = [
 
 // ---- test driver
 
-test('tagsFromCreateOpts', function (tt) {
+test('tagsFromCreateOpts', function (suite) {
     cases.forEach(function (c, num) {
         var testName = format('case %d: %s', num, c.argv.join(' '));
-        tt.test(testName, function (t) {
+        suite.test(testName, function (t) {
             debug('--', num);
             debug('c: %j', c);
             var parser = new cmdln.dashdash.Parser({options: OPTIONS});
@@ -194,4 +194,6 @@ test('tagsFromCreateOpts', function (tt) {
             });
         });
     });
+
+    suite.end();
 });
diff --git a/test/unit/tagsFromSetArgs.test.js b/test/unit/tagsFromSetArgs.test.js
index e58f61f..ed071a8 100644
--- a/test/unit/tagsFromSetArgs.test.js
+++ b/test/unit/tagsFromSetArgs.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -15,7 +15,7 @@
 var assert = require('assert-plus');
 var cmdln = require('cmdln');
 var format = require('util').format;
-var test = require('tape');
+var test = require('tap').test;
 
 var tagsFromCreateOpts
     = require('../../lib/metadataandtags').tagsFromCreateOpts;
@@ -141,10 +141,10 @@ var cases = [
 
 // ---- test driver
 
-test('tagsFromCreateOpts', function (tt) {
+test('tagsFromCreateOpts', function (suite) {
     cases.forEach(function (c, num) {
         var testName = format('case %d: %s', num, c.argv.join(' '));
-        tt.test(testName, function (t) {
+        suite.test(testName, function (t) {
             debug('--', num);
             debug('c: %j', c);
             var parser = new cmdln.dashdash.Parser({options: OPTIONS});
@@ -194,4 +194,6 @@ test('tagsFromCreateOpts', function (tt) {
             });
         });
     });
+
+    suite.end();
 });
-- 
2.21.0

