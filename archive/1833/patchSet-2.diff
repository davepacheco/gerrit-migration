commit e1c7e8176280aa485dc662e30db91182d12a11d1 (refs/changes/33/1833/2)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-04-24T15:50:29-07:00 (2 years, 5 months ago)
    
    joyent/node-cueball#109 Agent "health check ok" log msg needs domain name of pool

diff --git a/lib/agent.js b/lib/agent.js
index 74e1d07..c9a5721 100644
--- a/lib/agent.js
+++ b/lib/agent.js
@@ -335,7 +335,13 @@ CueBallAgent.prototype.addRequest = function (req, optionsOrHost, port) {
 };
 
 CueBallAgent.prototype.checkSocket = function (host, handle, socket) {
-	var self = this;
+	var t1 = new Date();
+	var log = handle.ch_slot.makeChildLogger({
+		component: 'CueBallAgent',
+		domain: host,
+		localPort: socket.localPort,
+		path: this.cba_ping
+	});
 	var agent = new PingAgent({
 		protocol: this.protocol,
 		socket: socket,
@@ -358,16 +364,29 @@ CueBallAgent.prototype.checkSocket = function (host, handle, socket) {
 		});
 		res.on('end', function () {
 			if (res.statusCode >= 500 && res.statusCode < 600) {
-				self.log.warn('got a 500, closing');
+				var t2 = new Date();
+				log.warn({
+					statusCode: res.statusCode,
+					latency: (t2.getTime() - t1.getTime())
+				}, 'got a 5xx code, closing');
 				handle.close();
 			} else {
-				self.log.debug('health check ok, releasing');
+				log.debug({
+					statusCode: res.statusCode
+				}, 'health check ok, releasing');
 				handle.release();
 			}
 		});
 	});
 	req.once('error', function (e) {
-		self.log.warn(e, 'check failed');
+		var t2 = new Date();
+		log.warn(e, {
+			err: {
+				name: e.name, stack: e.stack,
+				message: e.message
+			},
+			latency: (t2.getTime() - t1.getTime())
+		}, 'check failed');
 		handle.close();
 	});
 	req.end();
