From af895321dff467ac52169f0a507275e476a45970 Mon Sep 17 00:00:00 2001
From: Dan McDonald <danmcd@joyent.com>
Date: Tue, 17 Jul 2018 18:13:00 -0400
Subject: [PATCH] OS-7069 zone hang during shutdown after interface address
 conflict

---
 usr/src/uts/common/inet/ip/ip_if.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/usr/src/uts/common/inet/ip/ip_if.c b/usr/src/uts/common/inet/ip/ip_if.c
index c4b60daa68..fdd7d7bc2e 100644
--- a/usr/src/uts/common/inet/ip/ip_if.c
+++ b/usr/src/uts/common/inet/ip/ip_if.c
@@ -1383,7 +1383,17 @@ ill_capability_probe(ill_t *ill)
 static void
 ill_capability_wait(ill_t *ill)
 {
-	while (ill->ill_capab_pending_cnt != 0) {
+	/*
+	 * I'm in this ill's squeue, aka a writer.  The ILL_CONDEMNED flag can
+	 * only be set by someone who is the writer.  Since we
+	 * drop-and-reacquire the squeue in this loop, we need to check for
+	 * ILL_CONDEMNED, which if set means nothing can signal our capability
+	 * condition variable.
+	 */
+	ASSERT(IAM_WRITER_ILL(ill));
+
+	while (ill->ill_capab_pending_cnt != 0 &&
+	    !(ill->ill_flags & ILL_CONDEMNED)) {
 		mutex_enter(&ill->ill_dlpi_capab_lock);
 		ipsq_exit(ill->ill_phyint->phyint_ipsq);
 		cv_wait(&ill->ill_dlpi_capab_cv, &ill->ill_dlpi_capab_lock);
-- 
2.21.0

