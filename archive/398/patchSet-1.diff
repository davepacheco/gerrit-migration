From 28cfd7326210e57a2eba8a01f662c04898c11d3d Mon Sep 17 00:00:00 2001
From: "Pedro P. Candel" <pedro@joyent.com>
Date: Fri, 2 Sep 2016 17:17:13 +0200
Subject: [PATCH] TOOLS-1541 sdcadm incorrect instantiations of
 errors.InternalError

---
 lib/common.js                       | 15 +++++++++------
 lib/platform.js                     |  5 +++--
 lib/post-setup/ha-binder.js         | 21 +++++++++++++++------
 lib/procedures/shared.js            |  5 +++--
 lib/procedures/update-manatee-v2.js |  4 +++-
 5 files changed, 33 insertions(+), 17 deletions(-)

diff --git a/lib/common.js b/lib/common.js
index a565ceb..4a5bad8 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -908,8 +908,9 @@ function manateeShardStatus(opts, cb) {
         var rawPgSt = JSON.parse(stdout);
         if (!rawPgSt.length || !rawPgSt[0].result ||
                 rawPgSt[0].result.exit_status !== 0) {
-            return cb(new errors.InternalError(
-                'Unexpected manatee-adm pg-status output'));
+            return cb(new errors.InternalError({
+                message: 'Unexpected manatee-adm pg-status output'
+            }));
         }
         var pgSt = rawPgSt[0].result.stdout.trim().split('\n');
         pgSt = pgSt.map(function (m) {
@@ -1109,9 +1110,9 @@ function callConfigAgentSync(opts, cb) {
         var res = JSON.parse(stdout);
         if (!res.length || !res[0].result || !res[0].result.stdout) {
             opts.log.error({res: res}, 'config agent result');
-            return cb(new errors.InternalError(
-                'Unexpected config-agent output' +
-                ' (sdc-oneachnode)'));
+            return cb(new errors.InternalError({
+                message: 'Unexpected config-agent output (sdc-oneachnode)'
+            }));
         }
         var out = res[0].result.stdout.trim();
         opts.log.trace(out, 'Config agent output');
@@ -1453,7 +1454,9 @@ function mountUsbKey(log, cb) {
             log.error({err: err}, 'common.mountUsbKey');
         }
         if (!arg.keyIsMounted) {
-            err = new errors.InternalError('Unable to mount USB key');
+            err = new errors.InternalError({
+                message: 'Unable to mount USB key'
+            });
         }
         return cb(err);
     });
diff --git a/lib/platform.js b/lib/platform.js
index 350533b..49e7804 100644
--- a/lib/platform.js
+++ b/lib/platform.js
@@ -267,8 +267,9 @@ function getPlatformsWithServers(cb) {
                     }
                 }, function (er3, results) {
                     if (er3) {
-                        return cb(new errors.InternalError(
-                                    'Error fetching platforms servers'));
+                        return cb(new errors.InternalError({
+                            message: 'Error fetching platforms servers'
+                        }));
                     }
                     return cb(null, platforms);
                 });
diff --git a/lib/post-setup/ha-binder.js b/lib/post-setup/ha-binder.js
index 490b487..36d8da0 100644
--- a/lib/post-setup/ha-binder.js
+++ b/lib/post-setup/ha-binder.js
@@ -480,8 +480,9 @@ function do_ha_binder(subcmd, opts, args, cb) {
                     return next(err);
                 }
                 if (stderr) {
-                    return next(new errors.InternalError(util.format(
-                                    'Backup failed: %s', stderr)));
+                    return next(new errors.InternalError({
+                        message: util.format('Backup failed: %s', stderr)
+                    }));
                 }
                 return next();
             });
@@ -653,7 +654,9 @@ function do_ha_binder(subcmd, opts, args, cb) {
                             return nextVm(err);
                         }
                         if (stderr) {
-                            return nextVm(new errors.InternalError(stderr));
+                            return nextVm(new errors.InternalError({
+                                message: stderr
+                            }));
                         }
                         return nextVm();
                     });
@@ -732,7 +735,9 @@ function do_ha_binder(subcmd, opts, args, cb) {
                             return nextVm(err);
                         }
                         if (stderr) {
-                            return nextVm(new errors.InternalError(stderr));
+                            return nextVm(new errors.InternalError({
+                                message: stderr
+                            }));
                         }
                         return nextVm();
                     });
@@ -973,7 +978,9 @@ function do_ha_binder(subcmd, opts, args, cb) {
                 if (err) {
                     return next(err);
                 } else if (stder) {
-                    return next(new errors.InternalError(stder));
+                    return next(new errors.InternalError({
+                        message: stder
+                    }));
                 }
                 return next();
             });
@@ -994,7 +1001,9 @@ function do_ha_binder(subcmd, opts, args, cb) {
                     return next(err);
                 }
                 if (stderr) {
-                    return next(new errors.InternalError(stderr));
+                    return next(new errors.InternalError({
+                        message: stderr
+                    }));
                 }
                 return next();
             });
diff --git a/lib/procedures/shared.js b/lib/procedures/shared.js
index a804fd7..b6a2845 100644
--- a/lib/procedures/shared.js
+++ b/lib/procedures/shared.js
@@ -1286,8 +1286,9 @@ function waitForManatee(opts, callback) {
                         return callback(er2);
                     }
                     if (st === 'maintenance') {
-                        return callback(new InternalError(new Error(
-                            'manatee-sitter went into maintenance')));
+                        return callback(new InternalError({
+                            message: 'manatee-sitter went into maintenance'
+                        }));
                     }
                     return setTimeout(_waitForStatus, 5000);
                 });
diff --git a/lib/procedures/update-manatee-v2.js b/lib/procedures/update-manatee-v2.js
index 8bc5039..5d3d34a 100644
--- a/lib/procedures/update-manatee-v2.js
+++ b/lib/procedures/update-manatee-v2.js
@@ -1275,7 +1275,9 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
                     if (err) {
                         return next(err);
                     } else if (stder) {
-                        return next(new errors.InternalError(stder));
+                        return next(new errors.InternalError({
+                            message: stder
+                        }));
                     }
                     return next();
                 });
-- 
2.21.0

