From 8df7a4fa4ce213ca6b0fb616a931eace64b8aa54 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 28 Oct 2016 15:34:20 -0700
Subject: [PATCH] joyent/node-mname#8 want interface on Query for
 checking/setting flag bits

---
 lib/query.js | 32 ++++++++++++++++++++++++++++++++
 package.json |  2 +-
 2 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/lib/query.js b/lib/query.js
index d28178d..b59e8bb 100644
--- a/lib/query.js
+++ b/lib/query.js
@@ -137,6 +137,37 @@ Query.prototype.type = function type() {
         return (queryTypes[this.query.question[0].type]);
 };
 
+var FLAGS = {
+        qr: true, aa: true, rd: true, ra: true, ad: true, cd: true,
+        response: 'qr', authoritative: 'aa', recursionDesired: 'rd',
+        recursionAvailable: 'ra', authenticated: 'ad', noChecking: 'cd',
+        checkingDisabled: 'cd'
+};
+
+Query.prototype.flag = function testFlag(flag) {
+        if (typeof (FLAGS[flag]) === 'string')
+                flag = FLAGS[flag];
+        if (FLAGS[flag] !== true)
+                throw (new Error('Invalid DNS header flag "' + flag + '"'));
+        return (this.query.header.flags[flag] === true);
+};
+
+Query.prototype.setFlag = function setFlag(flag) {
+        if (typeof (FLAGS[flag]) === 'string')
+                flag = FLAGS[flag];
+        if (FLAGS[flag] !== true)
+                throw (new Error('Invalid DNS header flag "' + flag + '"'));
+        this.response.header.flags[flag] = true;
+};
+
+Query.prototype.clearFlag = function clearFlag(flag) {
+        if (typeof (FLAGS[flag]) === 'string')
+                flag = FLAGS[flag];
+        if (FLAGS[flag] !== true)
+                throw (new Error('Invalid DNS header flag "' + flag + '"'));
+        this.response.header.flags[flag] = false;
+};
+
 Query.prototype.ixfrBase = function ixfrBase() {
         var q = this.query;
         assert.strictEqual(q.question[0].type, queryTypes['IXFR']);
@@ -255,6 +286,7 @@ Query.prototype.addAuthority = function (name, record, ttl) {
         var r = this.response;
         r.authority.push(authority);
         r.header.nsCount++;
+        /* This is not great, but is necessary to be backwards compatible. */
         r.header.flags.aa = true;
 };
 Query.prototype.addAdditional = function (name, record, ttl) {
diff --git a/package.json b/package.json
index e5c60f0..4f90dea 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "mname",
   "description": "DNS server library for node.js",
-  "version": "1.1.0",
+  "version": "1.2.0",
   "author": "arekinath <alex@cooperi.net>",
   "contributors": [
     "Mark Cavage",
-- 
2.21.0

