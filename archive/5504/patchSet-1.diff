commit 6b183a32a81a518680364a3193aa1ae8acaf6f31 (refs/changes/04/5504/1)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2019-02-06T18:41:33+00:00 (8 months ago)
    
    TRITON-1189 Upgrade FWAPI to use Moray client v3

diff --git a/lib/app.js b/lib/app.js
index 8de2746..7cdcdbe 100644
--- a/lib/app.js
+++ b/lib/app.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -15,12 +15,12 @@
 'use strict';
 
 var assert = require('assert-plus');
-var clone = require('clone');
 var endpoints = require('./endpoints');
 var EffluentLogger = require('effluent-logger');
 var fs = require('fs');
 var http = require('http');
 var https = require('https');
+var mod_jsprim = require('jsprim');
 var mod_migrate = require('./moray-migration');
 var mod_moray = require('./moray');
 var mod_rule = require('./rule');
@@ -182,7 +182,6 @@ function FWAPI(opts) {
         config: {
             host: os.hostname(),
             pollInterval: self.config.pollInterval,
-            moray: self.config.moray,
             fast: self.config.fast
         },
         log: self.log
@@ -312,7 +311,7 @@ FWAPI.prototype.info = function info() {
  */
 FWAPI.prototype.ufdsClientInit = function ufdsClientInit(cb) {
     var self = this;
-    var conf = clone(this.config.ufds);
+    var conf = mod_jsprim.deepCopy(this.config.ufds);
     conf.log = this.log;
     var client = new UFDS(conf);
 
@@ -334,7 +333,7 @@ FWAPI.prototype.ufdsClientInit = function ufdsClientInit(cb) {
  */
 FWAPI.prototype.vmapiClientInit = function vmapiClientInit(cb) {
     var self = this;
-    var conf = clone(this.config.vmapi);
+    var conf = mod_jsprim.deepCopy(this.config.vmapi);
     conf.log = self.log.child({ component: 'vmapiClient', level: 'trace' });
 
     // XXX: retry here, calling /ping?
@@ -348,7 +347,7 @@ FWAPI.prototype.vmapiClientInit = function vmapiClientInit(cb) {
  */
 FWAPI.prototype.morayClientInit = function morayClientInit(cb) {
     var self = this;
-    var conf = clone(self.config.moray);
+    var conf = mod_jsprim.deepCopy(self.config.moray);
 
     mod_moray.create(conf, self.log, function (err, client) {
         if (client) {
diff --git a/lib/moray.js b/lib/moray.js
index cf8e942..585a151 100644
--- a/lib/moray.js
+++ b/lib/moray.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -34,8 +34,8 @@
 'use strict';
 
 var assert = require('assert-plus');
-var clone = require('clone');
 var constants = require('./util/constants');
+var mod_jsprim = require('jsprim');
 var mod_moray = require('moray');
 var util = require('util');
 var vasync = require('vasync');
@@ -91,7 +91,7 @@ function putBucket(opts, callback) {
     var bucket = opts.bucket;
     var log = opts.log;
 
-    var schema = clone(bucket.schema);
+    var schema = mod_jsprim.deepCopy(bucket.schema);
     schema.options = schema.options || {};
     schema.options.version = bucket.version;
 
@@ -393,24 +393,12 @@ function initializeBucket(opts, callback) {
  */
 function createClient(config, parentLog, callback) {
     // XXX: Determine & enforce a minimum required Moray version.
-    var conf = {
-        connectTimeout: 1000,
-        host: config.host,
-        noCache: true,
-        port: config.port,
-        reconnect: true,
-        retry: {
-            maxTimeout: 6000,
-            minTimeout: 100
-        }
-    };
-
-    conf.log = parentLog.child({
+    config.log = parentLog.child({
         component: 'moray',
         level: config.logLevel || parentLog.level()
     });
-    conf.log.debug(conf, 'Creating moray client');
-    waitForConnect(mod_moray.createClient(conf), callback);
+    config.log.debug(config, 'Creating moray client');
+    waitForConnect(mod_moray.createClient(config), callback);
 }
 
 
diff --git a/lib/update.js b/lib/update.js
index 3940b5b..b804b47 100644
--- a/lib/update.js
+++ b/lib/update.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -68,10 +68,6 @@ function UpdateServer(opts) {
     assert.number(opts.config.pollInterval, 'opts.config.pollInterval');
     assert.string(opts.config.host, 'opts.config.host');
 
-    assert.object(opts.config.moray, 'opts.config.moray');
-    assert.number(opts.config.moray.port, 'opts.config.moray.port');
-    assert.string(opts.config.moray.host, 'opts.config.moray.host');
-
     assert.object(opts.config.fast, 'opts.config.fast');
     assert.number(opts.config.fast.port, 'opts.config.fast.port');
 
diff --git a/package.json b/package.json
index d17c33b..037c09f 100644
--- a/package.json
+++ b/package.json
@@ -5,7 +5,7 @@
   "author": "Joyent",
   "private": true,
   "devDependencies": {
-    "moray-sandbox": "0.1.0",
+    "moray-sandbox": "0.2.1",
     "faucet": "0.0.1",
     "istanbul": "0.4.5",
     "eslint": "2.13.1",
@@ -21,8 +21,8 @@
     "extsprintf": "1.0.2",
     "fast-messages": "1.0.1",
     "fwrule": "2.0.0",
-    "jsprim": "1.3.1",
-    "moray": "2.0.1",
+    "jsprim": "^2.0.0",
+    "moray": "^3.5.0",
     "moray-filter": "1.0.0",
     "tape": "4.2.2",
     "sdc-clients": "9.5.0",
diff --git a/sapi_manifests/fwapi/template b/sapi_manifests/fwapi/template
index ba358a2..d1f898f 100644
--- a/sapi_manifests/fwapi/template
+++ b/sapi_manifests/fwapi/template
@@ -9,9 +9,11 @@
   "fluentd_host": "{{{experimental_fluentd_host}}}",
 {{/experimental_fluentd_host}}
   "moray": {
-    "host": "{{{MORAY_SERVICE}}}",
+    "srvDomain": "{{{MORAY_SERVICE}}}",
     "logLevel": "info",
-    "port": 2020
+    "cueballOptions": {
+        "resolvers": [ "{{{BINDER_SERVICE}}}" ]
+    }
   },
   "pollInterval": 3000,
   "ufds": {
