From b65f3c549325d2c651aee6a3b5356d601f987b11 Mon Sep 17 00:00:00 2001
From: Yang Yong <yy1111.yang@samsung.com>
Date: Wed, 21 Dec 2016 10:46:13 +0900
Subject: [PATCH] joyent/node-triton#80 would be nice if `triton network list
 public=false` worked

---
 lib/do_network/do_list.js | 80 +++++++++++++++++++++++++++++----------
 1 file changed, 59 insertions(+), 21 deletions(-)

diff --git a/lib/do_network/do_list.js b/lib/do_network/do_list.js
index 7cc963c..864aa9d 100644
--- a/lib/do_network/do_list.js
+++ b/lib/do_network/do_list.js
@@ -10,16 +10,15 @@
  * `triton network list ...`
  */
 
-var tabula = require('tabula');
 
 var common = require('../common');
+var vasync = require('vasync');
+var tabula = require('tabula');
+var errors = require('../errors');
 
 // to be passed as query string args to /my/networks
 var validFilters = [
-    'id',
-    'name',
-    'public',
-    'description'
+    'public'
 ];
 
 // columns default without -o
@@ -32,12 +31,10 @@ var columnsDefaultLong = 'id,name,subnet,gateway,fabric,vlan,public';
 var sortDefault = 'name';
 
 function do_list(subcmd, opts, args, callback) {
+    var self = this;
     if (opts.help) {
         this.do_help('help', {}, [subcmd], callback);
         return;
-    } else if (args.length !== 0) {
-        callback(new Error('invalid args: ' + args));
-        return;
     }
 
     var columns = columnsDefault;
@@ -49,18 +46,55 @@ function do_list(subcmd, opts, args, callback) {
     columns = columns.split(',');
 
     var sort = opts.s.split(',');
-    var tritonapi = this.top.tritonapi;
+    var filters;
+    try {
+        filters = common.kvToObj(args, validFilters);
+    } catch (e) {
+        callback(e);
+        return;
+    }
+    if (filters.hasOwnProperty('public')) {
+        filters.public =
+            common.boolFromString(filters.public, null, 'public');
+    }
 
-    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
-        if (setupErr) {
-            callback(setupErr);
-        }
-        tritonapi.cloudapi.listNetworks(function (err, networks) {
-            if (err) {
-                callback(err);
-                return;
+    vasync.pipeline({arg: {cli: this.top}, funcs: [
+        common.cliSetupTritonApi,
+
+        function searchNetworks(arg, next) {
+            self.top.tritonapi.cloudapi.listNetworks(function (err, networks) {
+                 if (err) {
+                     next(err);
+                     return;
+                 }
+                 arg.networks = networks;
+                 next();
+            });
+        },
+
+        function filterNetworks(arg, next) {
+            var filteredNetworks = [];
+            var filterKeys = Object.keys(filters);
+            for (var i = 0; i < arg.networks.length; i++) {
+                var network = arg.networks[i];
+                var keepIt = true;
+                for (var j = 0; j < filterKeys.length; j++) {
+                    var k = filterKeys[j];
+                    if (network[k] !== filters[k]) {
+                        keepIt = false;
+                        break;
+                    }
+                }
+                if (keepIt) {
+                    filteredNetworks.push(network);
+                }
             }
+            arg.filteredNetworks = filteredNetworks;
+            next();
+       },
 
+       function doneNetworks(arg, next) {
+            var networks = arg.filteredNetworks;
             if (opts.json) {
                 common.jsonStream(networks);
             } else {
@@ -75,9 +109,10 @@ function do_list(subcmd, opts, args, callback) {
                     sort: sort
                 });
             }
-            callback();
-        });
-    });
+            next();
+        }
+    ]}, callback
+    );
 }
 
 do_list.options = [
@@ -91,13 +126,16 @@ do_list.options = [
     sortDefault: sortDefault
 }));
 
-do_list.synopses = ['{{name}} {{cmd}}'];
+do_list.synopses = ['{{name}} {{cmd}} [FILTERS...]'];
 
 do_list.help = [
     'List available networks.',
     '',
     '{{usage}}',
     '',
+    'Filters:',
+    '    FIELD=true|false   Boolean filter. Supported fields: public',
+    '',
     '{{options}}',
     'Fields (most are self explanatory, the client adds some for convenience):',
     '    vlan       A shorter alias for "vlan_id".',
-- 
2.21.0

