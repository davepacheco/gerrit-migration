From 37702d783aab3ac8282c170487f0fbd931d9572e Mon Sep 17 00:00:00 2001
From: Dan McDonald <danmcd@joyent.com>
Date: Wed, 30 Aug 2017 15:33:47 -0400
Subject: [PATCH] OS-6319 Fix for OS-6297 forgot smb_ioc_svcenum_t Reviewed by:
 Patrick Mooney <patrick.mooney@joyent.com> Reviewed by: Mike Zeller
 <mike.zeller@joyent.com> Reviewed by: Jason King <jason.king@joyent.com>
 Approved by: Patrick Mooney <patrick.mooney@joyent.com>

---
 usr/src/lib/smbsrv/libsmb/common/smb_kmod.c |  2 +-
 usr/src/uts/common/fs/smbsrv/smb_init.c     | 16 ++++++++++------
 usr/src/uts/common/smbsrv/smb_ioctl.h       |  4 ++++
 3 files changed, 15 insertions(+), 7 deletions(-)

diff --git a/usr/src/lib/smbsrv/libsmb/common/smb_kmod.c b/usr/src/lib/smbsrv/libsmb/common/smb_kmod.c
index 8c330eeb33..3fa1da2a9d 100644
--- a/usr/src/lib/smbsrv/libsmb/common/smb_kmod.c
+++ b/usr/src/lib/smbsrv/libsmb/common/smb_kmod.c
@@ -21,6 +21,7 @@
 /*
  * Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
  * Copyright 2015 Nexenta Systems, Inc.  All rights reserved.
+ * Copyright 2017 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -42,7 +43,6 @@
 #include <smbsrv/libsmb.h>
 
 #define	SMBDRV_DEVICE_PATH		"/dev/smbsrv"
-#define	SMB_IOC_DATA_SIZE		(256 * 1024)
 
 int smb_kmod_ioctl(int, smb_ioc_header_t *, uint32_t);
 
diff --git a/usr/src/uts/common/fs/smbsrv/smb_init.c b/usr/src/uts/common/fs/smbsrv/smb_init.c
index 26ac1c2a5e..1217e61178 100644
--- a/usr/src/uts/common/fs/smbsrv/smb_init.c
+++ b/usr/src/uts/common/fs/smbsrv/smb_init.c
@@ -21,6 +21,7 @@
 /*
  * Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.
  * Copyright 2014 Nexenta Systems, Inc.  All rights reserved.
+ * Copyright 2017 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -260,11 +261,14 @@ smb_drv_ioctl(dev_t drv, int cmd, intptr_t argp, int flags, cred_t *cred,
 	uint32_t	crc;
 	boolean_t	copyout = B_FALSE;
 	int		rc = 0;
+	size_t		ioclen;
 
 	if (ddi_copyin((void *)argp, &ioc_hdr, sizeof (ioc_hdr), flags))
 		return (EFAULT);
+	/* SMB_IOC_SVCENUM can be quite large.  See libsmb's smb_kmod.c. */
+	ioclen = MAX(ioc_hdr.len, sizeof (*ioc));
 	if (ioc_hdr.version != SMB_IOC_VERSION ||
-	    ioc_hdr.len > sizeof (smb_ioc_t))
+	    ioclen > sizeof (smb_ioc_svcenum_t) + SMB_IOC_DATA_SIZE)
 		return (EINVAL);
 
 	crc = ioc_hdr.crc;
@@ -272,9 +276,9 @@ smb_drv_ioctl(dev_t drv, int cmd, intptr_t argp, int flags, cred_t *cred,
 	if (smb_crc_gen((uint8_t *)&ioc_hdr, sizeof (ioc_hdr)) != crc)
 		return (EINVAL);
 
-	ioc = kmem_zalloc(sizeof (*ioc), KM_SLEEP);
-	if (ddi_copyin((void *)argp, ioc, ioc_hdr.len, flags)) {
-		kmem_free(ioc, sizeof (*ioc));
+	ioc = kmem_zalloc(ioclen, KM_SLEEP);
+	if (ddi_copyin((void *)argp, ioc, ioclen, flags)) {
+		kmem_free(ioc, ioclen);
 		return (EFAULT);
 	}
 
@@ -327,10 +331,10 @@ smb_drv_ioctl(dev_t drv, int cmd, intptr_t argp, int flags, cred_t *cred,
 		break;
 	}
 	if ((rc == 0) && copyout) {
-		if (ddi_copyout(ioc, (void *)argp, ioc_hdr.len, flags))
+		if (ddi_copyout(ioc, (void *)argp, ioclen, flags))
 			rc = EFAULT;
 	}
-	kmem_free(ioc, sizeof (*ioc));
+	kmem_free(ioc, ioclen);
 	return (rc);
 }
 
diff --git a/usr/src/uts/common/smbsrv/smb_ioctl.h b/usr/src/uts/common/smbsrv/smb_ioctl.h
index 29cd803c25..6650fafed9 100644
--- a/usr/src/uts/common/smbsrv/smb_ioctl.h
+++ b/usr/src/uts/common/smbsrv/smb_ioctl.h
@@ -21,6 +21,7 @@
 /*
  * Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.
  * Copyright 2015 Nexenta Systems, Inc.  All rights reserved.
+ * Copyright 2017 Joyent, Inc.
  */
 
 #ifndef _SMB_IOCTL_H_
@@ -118,6 +119,9 @@ typedef	struct smb_ioc_opennum {
 #define	SMB_SVCENUM_TYPE_FILE	0x46494C45	/* 'FILE' */
 #define	SMB_SVCENUM_TYPE_SHARE	0x53484152	/* 'SHAR' */
 
+/* The enumeration ioctl needs a LOT of space.  We cap it here. */
+#define	SMB_IOC_DATA_SIZE		(256 * 1024)
+
 typedef struct smb_svcenum {
 	uint32_t	se_type;	/* object type to enumerate */
 	uint32_t	se_level;	/* level of detail being requested */
-- 
2.21.0

