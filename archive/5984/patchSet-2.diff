From aff9a719262dfdc8f1a108fda63659f2df40380d Mon Sep 17 00:00:00 2001
From: Chris Burroughs <chris.burroughs@joyent.com>
Date: Wed, 20 Mar 2019 20:03:06 +0000
Subject: [PATCH] TOOLS-2168 sdcnode builds for minimal-64-18.4.0 Reviewed by:
 Trent Mick <trentm@gmail.com> Approved by: Trent Mick <trentm@gmail.com>

---
 nodeconfigs.json   | 62 ++++++++++++++++++++++++++++++++++++++++++++--
 tools/build-a-node |  9 ++++++-
 2 files changed, 68 insertions(+), 3 deletions(-)

diff --git a/nodeconfigs.json b/nodeconfigs.json
index 2868b38..476108b 100644
--- a/nodeconfigs.json
+++ b/nodeconfigs.json
@@ -1,4 +1,33 @@
 [
+    {
+        "// image": "minimal-64-lts 18.4.0",
+        "image": "c2c31b00-1d60-11e9-9a77-ff9f06554b0f",
+        "version": "v8.15.1",
+        "patch_files": [
+            "patches/http-keepAliveTimeout-default-0-v8.x.patch",
+            "patches/tls-reload-certs-v8.x.patch"
+        ],
+        "configure_flags": "--without-snapshot --dest-cpu=x64 --with-dtrace",
+        "gcc": "/opt/local/gcc7/bin/gcc",
+        "cflags": "-fno-aggressive-loop-optimizations",
+        "rpath": "$ORIGIN/../lib",
+        "include_gcc_runtime_libs": true,
+        "build_tag": "gz"
+    },
+    {
+        "// image": "minimal-64-lts 18.4.0",
+        "image": "c2c31b00-1d60-11e9-9a77-ff9f06554b0f",
+        "comment": "For use by services running in zones. Statically link to OpenSSL and zlib *for now* until OS-1294/TOOLS-130.",
+        "version": "v8.15.1",
+        "patch_files": [
+            "patches/http-keepAliveTimeout-default-0-v8.x.patch",
+            "patches/tls-reload-certs-v8.x.patch"
+        ],
+        "configure_flags": "--without-snapshot --dest-cpu=x64 --with-dtrace",
+        "gcc": "/opt/local/gcc7/bin/gcc",
+        "cflags": "-fno-aggressive-loop-optimizations",
+        "build_tag": "zone64"
+    },
     {
         "// image": "minimal-multiarch 18.1.0",
         "image": "1ad363ec-3b83-11e8-8521-2f68a4a34d5d",
@@ -39,7 +68,6 @@
         "gcc": "/opt/local/gcc49/bin/gcc",
         "build_tag": "zone64"
     },
-
     {
         "// image": "sdc-minimal-multiarch-lts 15.4.1",
         "image": "18b094b0-eb01-11e5-80c1-175dac7ddf02",
@@ -94,7 +122,37 @@
         "gcc": "/opt/local/gcc49/bin/gcc",
         "build_tag": "zone"
     },
-
+    {
+        "// image": "minimal-64-lts 18.4.0",
+        "image": "1ad363ec-3b83-11e8-8521-2f68a4a34d5d",
+        "version": "v6.17.0",
+        "patch_files": [
+            "patches/http-keepAliveTimeout-default-0-v6.17+.patch",
+            "patches/tls-reload-certs-v6.x.patch"
+        ],
+        "configure_flags": "--without-snapshot --dest-cpu=x64 --with-dtrace",
+        "gcc": "/opt/local/gcc7/bin/gcc",
+        "cflags": "-fno-aggressive-loop-optimizations",
+        "rpath": "$ORIGIN/../lib",
+        "include_gcc_runtime_libs": true,
+        "npm_version": "v6.4.1",
+        "build_tag": "gz"
+    },
+    {
+        "// image": "minimal-64-lts 18.4.0",
+        "image": "1ad363ec-3b83-11e8-8521-2f68a4a34d5d",
+        "comment": "For use by services running in zones. Statically link to OpenSSL and zlib *for now* until OS-1294/TOOLS-130.",
+        "version": "v6.17.0",
+        "patch_files": [
+            "patches/http-keepAliveTimeout-default-0-v6.17+.patch",
+            "patches/tls-reload-certs-v6.x.patch"
+        ],
+        "configure_flags": "--without-snapshot --dest-cpu=x64 --with-dtrace",
+        "gcc": "/opt/local/gcc7/bin/gcc",
+        "cflags": "-fno-aggressive-loop-optimizations",
+        "npm_version": "v6.4.1",
+        "build_tag": "zone64"
+    },
     {
         "// image": "minimal-multiarch 18.1.0",
         "image": "1ad363ec-3b83-11e8-8521-2f68a4a34d5d",
diff --git a/tools/build-a-node b/tools/build-a-node
index c663d39..1fcd6fa 100755
--- a/tools/build-a-node
+++ b/tools/build-a-node
@@ -131,11 +131,18 @@ if [[ -n "$buildEnv" ]]; then
     eval "export $buildEnv"
 fi
 
+cflags=$(echo "$buildOpts" | json cflags)
+if [[ -z "$cflags" ]]; then
+    cflags=""
+fi
+
+
 JOBS_ARG=
 if [[ -n ${MAKE_JOBS} ]]; then
     JOBS_ARG="-j${MAKE_JOBS}"
 fi
-make ${JOBS_ARG} V=1 CC=$GCC CXX=$GXX
+make ${JOBS_ARG} V=1 CC=$GCC CXX=$GXX \
+     CFLAGS="${cflags}" CXXFLAGS="${cflags}"
 make V=1 CC=$GCC CXX=$GXX install
 
 # Optionally include GCC runtime libs. If a version of GCC was used to compile
-- 
2.21.0

