From be9445b059df0238ca9e8c35724f2b27f28e4c91 Mon Sep 17 00:00:00 2001
From: Hans Rosenfeld <hans.rosenfeld@joyent.com>
Date: Fri, 16 Feb 2018 15:49:44 +0100
Subject: [PATCH] don't panic on PCIe errors from passthru device

---
 usr/src/uts/common/io/pciex/pcie_fault.c | 10 ++++++++++
 usr/src/uts/common/os/ddifm.c            |  5 +++--
 usr/src/uts/common/sys/ddifm.h           |  8 +++++++-
 usr/src/uts/common/sys/pcie_impl.h       |  1 +
 4 files changed, 21 insertions(+), 3 deletions(-)

diff --git a/usr/src/uts/common/io/pciex/pcie_fault.c b/usr/src/uts/common/io/pciex/pcie_fault.c
index 41c046fe66..585edae3a1 100644
--- a/usr/src/uts/common/io/pciex/pcie_fault.c
+++ b/usr/src/uts/common/io/pciex/pcie_fault.c
@@ -285,6 +285,12 @@ done:
 
 	pf_send_ereport(derr, &impl);
 
+	/*
+	 * Don't panic the system if the device belongs to a virtual machine.
+	 */
+	if (scan_flag & PF_SCAN_PASSTHRU)
+		analyse_flag &= ~PF_ERR_PANIC;
+
 	/*
 	 * Check if any hardened driver's callback reported a panic.
 	 * If so panic.
@@ -918,6 +924,10 @@ pf_default_hdl(dev_info_t *dip, pf_impl_t *impl)
 		goto done;
 	}
 
+	/* Is this is a device used for PCI passthrough? */
+	if ((DEVI(dip)->devi_fmhdl->fh_cap) & DDI_FM_PASSTHRU_FLAG)
+		scan_flag |= PF_SCAN_PASSTHRU;
+
 	/*
 	 * Read vendor/device ID and check with cached data; if it doesn't
 	 * match, it could very well mean that the device is no longer
diff --git a/usr/src/uts/common/os/ddifm.c b/usr/src/uts/common/os/ddifm.c
index 533fa15aed..8797a1c027 100644
--- a/usr/src/uts/common/os/ddifm.c
+++ b/usr/src/uts/common/os/ddifm.c
@@ -797,9 +797,10 @@ ddi_fm_init(dev_info_t *dip, int *fmcap, ddi_iblock_cookie_t *ibcp)
 	}
 
 	/*
-	 * Return the capability support available
-	 * to this driver instance
+	 * Return the capability support available to this driver instance.
+	 * Keep the flags the driver instance set.
 	 */
+	newcap |= (*fmcap & DDI_FM_FLAG_MASK);
 	fmhdl->fh_cap = newcap;
 	*fmcap = newcap;
 
diff --git a/usr/src/uts/common/sys/ddifm.h b/usr/src/uts/common/sys/ddifm.h
index ef2dc453c8..3d90b13029 100644
--- a/usr/src/uts/common/sys/ddifm.h
+++ b/usr/src/uts/common/sys/ddifm.h
@@ -49,8 +49,14 @@ extern int ddi_system_fmcap;
 #define	DDI_FM_ACCCHK_CAPABLE	0x00000002
 #define	DDI_FM_DMACHK_CAPABLE	0x00000004
 #define	DDI_FM_ERRCB_CAPABLE	0x00000008
+#define	DDI_FM_CAPAB_MASK	0x0000ffff
 
-#define	DDI_FM_DEFAULT_CAP(cap)	(cap == DDI_FM_NOT_CAPABLE)
+/* Driver fault management flags */
+#define	DDI_FM_PASSTHRU_FLAG	0x00010000
+#define	DDI_FM_FLAG_MASK	0xffff0000
+
+#define	DDI_FM_DEFAULT_CAP(cap)	\
+	((cap & DDI_FM_CAPAB_MASK) == DDI_FM_NOT_CAPABLE)
 #define	DDI_FM_EREPORT_CAP(cap)	(cap & DDI_FM_EREPORT_CAPABLE)
 #define	DDI_FM_ACC_ERR_CAP(cap)	(cap & DDI_FM_ACCCHK_CAPABLE)
 #define	DDI_FM_DMA_ERR_CAP(cap)	(cap & DDI_FM_DMACHK_CAPABLE)
diff --git a/usr/src/uts/common/sys/pcie_impl.h b/usr/src/uts/common/sys/pcie_impl.h
index 54628f195c..404c08cb7f 100644
--- a/usr/src/uts/common/sys/pcie_impl.h
+++ b/usr/src/uts/common/sys/pcie_impl.h
@@ -439,6 +439,7 @@ typedef struct pf_impl {
 #define	PF_SCAN_IN_DQ		(1 << 3) /* already present in the faultq */
 #define	PF_SCAN_DEADLOCK	(1 << 4) /* deadlock detected */
 #define	PF_SCAN_BAD_RESPONSE	(1 << 5) /* Incorrect device response */
+#define	PF_SCAN_PASSTHRU	(1 << 6) /* device belongs to virtual machine */
 
 /* PCIe fabric error handling severity return flags */
 #define	PF_ERR_NO_ERROR		(1 << 0) /* No error seen */
-- 
2.21.0

