From ad6dea2625b2c71d9bc39a1224a9ef4a87d2d199 Mon Sep 17 00:00:00 2001
From: Jordan Paige Hendricks <jordan.hendricks@joyent.com>
Date: Tue, 3 Sep 2019 15:25:11 +0000
Subject: [PATCH] OS-7962 enable hotplug service by default OS-7971 clean up
 improper use of mdb_getopts

---
 usr/src/cmd/hotplugd/hotplug.xml                 |  4 +++-
 usr/src/cmd/mdb/common/modules/cpc/cpc.c         |  5 ++++-
 usr/src/cmd/mdb/common/modules/fctl/fctl.c       |  7 ++++---
 usr/src/cmd/mdb/common/modules/genunix/fm.c      |  5 ++++-
 usr/src/cmd/mdb/common/modules/pmcs/pmcs.c       |  4 +++-
 usr/src/cmd/mdb/common/modules/qlc/qlc.c         | 16 ++++++++++------
 .../cmd/mdb/common/modules/scsi_vhci/scsi_vhci.c | 16 ++++++++--------
 usr/src/cmd/mdb/common/modules/sctp/sctp.c       |  4 +++-
 usr/src/cmd/mdb/common/modules/sockfs/sockfs.c   |  4 +++-
 usr/src/cmd/mdb/common/modules/xhci/xhci.c       |  2 +-
 usr/src/cmd/mdb/common/modules/zfs/zfs.c         | 10 ++++++----
 usr/src/cmd/mdb/i86pc/modules/unix/i86mmu.c      |  6 +++---
 usr/src/cmd/mdb/intel/mdb/mdb_bhyve.c            |  3 ++-
 usr/src/cmd/mdb/intel/modules/sata/sata.c        |  3 ++-
 14 files changed, 56 insertions(+), 33 deletions(-)

diff --git a/usr/src/cmd/hotplugd/hotplug.xml b/usr/src/cmd/hotplugd/hotplug.xml
index 19b0ad5572..4015776fd4 100644
--- a/usr/src/cmd/hotplugd/hotplug.xml
+++ b/usr/src/cmd/hotplugd/hotplug.xml
@@ -23,6 +23,8 @@
 	Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
 	Use is subject to license terms.
 
+	Copyright 2019 Joyent, Inc.
+
 	NOTE:  This service manifest is not editable; its contents will
 	be overwritten by package or patch operations, including
 	operating system upgrade.  Make customizations in a different
@@ -36,7 +38,7 @@
 	type='service'
 	version='1'>
 
-	<create_default_instance enabled='false' />
+	<create_default_instance enabled='true' />
 
 	<single_instance/>
 
diff --git a/usr/src/cmd/mdb/common/modules/cpc/cpc.c b/usr/src/cmd/mdb/common/modules/cpc/cpc.c
index 7efcd244e6..9fc7835186 100644
--- a/usr/src/cmd/mdb/common/modules/cpc/cpc.c
+++ b/usr/src/cmd/mdb/common/modules/cpc/cpc.c
@@ -22,6 +22,8 @@
 /*
  * Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
+ *
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <sys/mdb_modapi.h>
@@ -57,7 +59,8 @@ cpc(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	int		j;
 	uint_t		opt_v = FALSE;
 
-	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &opt_v) != argc)
+	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &opt_v, NULL) !=
+	    argc)
 		return (DCMD_USAGE);
 
 	if ((flags & DCMD_ADDRSPEC) == 0) {
diff --git a/usr/src/cmd/mdb/common/modules/fctl/fctl.c b/usr/src/cmd/mdb/common/modules/fctl/fctl.c
index 3df25d1527..26a2f948c8 100644
--- a/usr/src/cmd/mdb/common/modules/fctl/fctl.c
+++ b/usr/src/cmd/mdb/common/modules/fctl/fctl.c
@@ -24,7 +24,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <sys/mdb_modapi.h>
@@ -134,7 +134,7 @@ ports(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	}
 
 	if (mdb_getopts(argc, argv,
-	    'l', MDB_OPT_SETBITS, TRUE, &longlist) != argc) {
+	    'l', MDB_OPT_SETBITS, TRUE, &longlist, NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
@@ -1104,7 +1104,8 @@ fc_trace_dump(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 
 	if (mdb_getopts(argc, argv,
 	    's', MDB_OPT_UINTPTR, &pktstart,
-	    'e', MDB_OPT_UINTPTR, &pktend) != argc) {
+	    'e', MDB_OPT_UINTPTR, &pktend,
+	    NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
diff --git a/usr/src/cmd/mdb/common/modules/genunix/fm.c b/usr/src/cmd/mdb/common/modules/genunix/fm.c
index be67161908..ada10de4bf 100644
--- a/usr/src/cmd/mdb/common/modules/genunix/fm.c
+++ b/usr/src/cmd/mdb/common/modules/genunix/fm.c
@@ -21,6 +21,8 @@
 /*
  * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
+ *
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -158,7 +160,8 @@ ereport(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	if (!(flags & DCMD_ADDRSPEC))
 		return (DCMD_USAGE);
 
-	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &opt_v) != argc)
+	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &opt_v, NULL) !=
+	    argc)
 		return (DCMD_USAGE);
 
 	if (mdb_vread(&nvl, sizeof (nvl), addr) == -1) {
diff --git a/usr/src/cmd/mdb/common/modules/pmcs/pmcs.c b/usr/src/cmd/mdb/common/modules/pmcs/pmcs.c
index f88400048e..4ff1bc068f 100644
--- a/usr/src/cmd/mdb/common/modules/pmcs/pmcs.c
+++ b/usr/src/cmd/mdb/common/modules/pmcs/pmcs.c
@@ -21,6 +21,7 @@
 /*
  * Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
  * Copyright 2012 Milan Jurik. All rights reserved.
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <limits.h>
@@ -2646,7 +2647,8 @@ pmcs_tag(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	if (mdb_getopts(argc, argv,
 	    'i', MDB_OPT_UINT64, &index,
 	    's', MDB_OPT_UINT64, &snum,
-	    't', MDB_OPT_UINT64, &tag_type) != argc)
+	    't', MDB_OPT_UINT64, &tag_type,
+	    NULL) != argc)
 		return (DCMD_USAGE);
 
 	/*
diff --git a/usr/src/cmd/mdb/common/modules/qlc/qlc.c b/usr/src/cmd/mdb/common/modules/qlc/qlc.c
index 88bb0adaf2..f01b1630df 100644
--- a/usr/src/cmd/mdb/common/modules/qlc/qlc.c
+++ b/usr/src/cmd/mdb/common/modules/qlc/qlc.c
@@ -34,6 +34,10 @@
  *
  */
 
+/*
+ * Copyright 2019 Joyent, Inc.
+ */
+
 #pragma ident	"Copyright 2010 QLogic Corporation; ql_mdb.c"
 
 #include <sys/mdb_modapi.h>
@@ -1099,8 +1103,8 @@ qlcstate_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 		return (DCMD_USAGE);
 	}
 
-	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &verbose) !=
-	    argc) {
+	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &verbose,
+	    NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
@@ -1741,8 +1745,8 @@ qlc_getdump_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 		return (DCMD_USAGE);
 	}
 
-	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &verbose) !=
-	    argc) {
+	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &verbose,
+	    NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
@@ -3193,8 +3197,8 @@ qlc_gettrace_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 		return (DCMD_USAGE);
 	}
 
-	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &verbose) !=
-	    argc) {
+	if (mdb_getopts(argc, argv, 'v', MDB_OPT_SETBITS, TRUE, &verbose,
+	    NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
diff --git a/usr/src/cmd/mdb/common/modules/scsi_vhci/scsi_vhci.c b/usr/src/cmd/mdb/common/modules/scsi_vhci/scsi_vhci.c
index 486dcd82b1..89e3867f9b 100644
--- a/usr/src/cmd/mdb/common/modules/scsi_vhci/scsi_vhci.c
+++ b/usr/src/cmd/mdb/common/modules/scsi_vhci/scsi_vhci.c
@@ -21,10 +21,10 @@
 /*
  * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
+ *
+ * Copyright 2019 Joyent, Inc.
  */
 
-#pragma ident	"%Z%%M%	%I%	%E% SMI"
-
 #include <sys/kmem.h>
 #include <sys/proc.h>
 #include <sys/time.h>
@@ -193,10 +193,10 @@ mdiclient(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	dump_condvar(value.ct_failover_cv, "ct_failover_cv");
 
 	mdb_printf("\n");
-	mdb_printf("ct_failover_flags TEMP_VAR: %8d\n", value.ct_failover_flags)
-;
-	mdb_printf("ct_failover_status UNUSED: %9d\n", value.ct_failover_status)
-;
+	mdb_printf("ct_failover_flags TEMP_VAR: %8d\n",
+	    value.ct_failover_flags);
+	mdb_printf("ct_failover_status UNUSED: %9d\n",
+	    value.ct_failover_status);
 
 	return (DCMD_OK);
 }
@@ -250,7 +250,7 @@ vhciguid(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 
 
 	if (flags & DCMD_ADDRSPEC)
-	    mdb_warn("This command doesn't use an address\n");
+		mdb_warn("This command doesn't use an address\n");
 
 	if (i_vhci_states(0, 0, 0, 0, &ss) != DCMD_OK)
 		return (DCMD_ERR);
@@ -517,7 +517,7 @@ i_vhci_states(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv,
 	}
 	if (sp == NULL) {
 		if (mdb_getopts(argc, argv,
-		    'v', MDB_OPT_SETBITS, TRUE, &verbose) != argc) {
+		    'v', MDB_OPT_SETBITS, TRUE, &verbose, NULL) != argc) {
 			return (DCMD_USAGE);
 		}
 	}
diff --git a/usr/src/cmd/mdb/common/modules/sctp/sctp.c b/usr/src/cmd/mdb/common/modules/sctp/sctp.c
index 65f3bf11e6..aa4da4caf0 100644
--- a/usr/src/cmd/mdb/common/modules/sctp/sctp.c
+++ b/usr/src/cmd/mdb/common/modules/sctp/sctp.c
@@ -21,6 +21,7 @@
 
 /*
  * Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -726,7 +727,8 @@ sctp(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	    'c', MDB_OPT_SETBITS, MDB_SCTP_SHOW_CLOSE, &opts,
 	    'e', MDB_OPT_SETBITS, MDB_SCTP_SHOW_EXT, &opts,
 	    'P', MDB_OPT_SETBITS, 1, &paddr,
-	    'd', MDB_OPT_SETBITS, MDB_SCTP_DUMP_ADDRS, &opts) != argc) {
+	    'd', MDB_OPT_SETBITS, MDB_SCTP_DUMP_ADDRS, &opts,
+	    NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
diff --git a/usr/src/cmd/mdb/common/modules/sockfs/sockfs.c b/usr/src/cmd/mdb/common/modules/sockfs/sockfs.c
index 3bc0b264d0..01e888657f 100644
--- a/usr/src/cmd/mdb/common/modules/sockfs/sockfs.c
+++ b/usr/src/cmd/mdb/common/modules/sockfs/sockfs.c
@@ -21,6 +21,8 @@
 /*
  * Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
+ *
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -78,7 +80,7 @@ sockparams_prt(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 		 */
 		if (mdb_getopts(argc, argv,
 		    'e', MDB_OPT_SETBITS, 1, &opt_e,
-		    'E', MDB_OPT_SETBITS, 1, &opt_E) != argc)
+		    'E', MDB_OPT_SETBITS, 1, &opt_E, NULL) != argc)
 			return (DCMD_USAGE);
 
 		if (!opt_E) {
diff --git a/usr/src/cmd/mdb/common/modules/xhci/xhci.c b/usr/src/cmd/mdb/common/modules/xhci/xhci.c
index e6f9ed339a..1a1882e738 100644
--- a/usr/src/cmd/mdb/common/modules/xhci/xhci.c
+++ b/usr/src/cmd/mdb/common/modules/xhci/xhci.c
@@ -665,7 +665,7 @@ xhci_mdb_find(uintptr_t addr, uint_t flags, int argc,
 
 	ep_set = slot_set = B_FALSE;
 	if (mdb_getopts(argc, argv, 'e', MDB_OPT_UINTPTR_SET, &ep_set, &ep,
-	    's', MDB_OPT_UINTPTR_SET, &slot_set, &slot) != argc)
+	    's', MDB_OPT_UINTPTR_SET, &slot_set, &slot, NULL) != argc)
 		return (DCMD_USAGE);
 
 	if (!slot_set) {
diff --git a/usr/src/cmd/mdb/common/modules/zfs/zfs.c b/usr/src/cmd/mdb/common/modules/zfs/zfs.c
index 89b3a4873e..c536a0d399 100644
--- a/usr/src/cmd/mdb/common/modules/zfs/zfs.c
+++ b/usr/src/cmd/mdb/common/modules/zfs/zfs.c
@@ -22,7 +22,7 @@
  * Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
  * Copyright 2011 Nexenta Systems, Inc. All rights reserved.
  * Copyright (c) 2011, 2018 by Delphix. All rights reserved.
- * Copyright (c) 2019 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /* Portions Copyright 2010 Robert Milkowski */
@@ -948,7 +948,8 @@ dbufs(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	    'n', MDB_OPT_STR, &data.osname,
 	    'o', MDB_OPT_STR, &object,
 	    'l', MDB_OPT_UINT64, &data.level,
-	    'b', MDB_OPT_STR, &blkid) != argc) {
+	    'b', MDB_OPT_STR, &blkid,
+	    NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
@@ -3499,7 +3500,7 @@ zfs_acl_dump(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 		return (DCMD_USAGE);
 
 	if (mdb_getopts(argc, argv,
-	    'v', MDB_OPT_SETBITS, TRUE, &verbose, TRUE, NULL) != argc)
+	    'v', MDB_OPT_SETBITS, TRUE, &verbose, NULL) != argc)
 		return (DCMD_USAGE);
 
 	if (mdb_vread(&zacl, sizeof (zfs_acl_t), addr) == -1) {
@@ -3932,7 +3933,8 @@ arc_compression_stats(uintptr_t addr, uint_t flags, int argc,
 	    'a', MDB_OPT_SETBITS, ARC_CFLAG_ANON, &data.arc_cflags,
 	    'b', MDB_OPT_SETBITS, ARC_CFLAG_BUFS, &data.arc_cflags,
 	    'r', MDB_OPT_SETBITS, ARC_CFLAG_MRU, &data.arc_cflags,
-	    'f', MDB_OPT_SETBITS, ARC_CFLAG_MFU, &data.arc_cflags) != argc)
+	    'f', MDB_OPT_SETBITS, ARC_CFLAG_MFU, &data.arc_cflags,
+	    NULL) != argc)
 		return (DCMD_USAGE);
 
 	if (mdb_lookup_by_obj(ZFS_OBJ_NAME, "ARC_anon", &data.anon_sym) ||
diff --git a/usr/src/cmd/mdb/i86pc/modules/unix/i86mmu.c b/usr/src/cmd/mdb/i86pc/modules/unix/i86mmu.c
index 7aaa5d0924..b938192648 100644
--- a/usr/src/cmd/mdb/i86pc/modules/unix/i86mmu.c
+++ b/usr/src/cmd/mdb/i86pc/modules/unix/i86mmu.c
@@ -22,7 +22,7 @@
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
  *
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -491,7 +491,7 @@ pte_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 		return (DCMD_USAGE);
 
 	if (mdb_getopts(argc, argv,
-	    'l', MDB_OPT_UINT64, &level) != argc)
+	    'l', MDB_OPT_UINT64, &level, NULL) != argc)
 		return (DCMD_USAGE);
 
 	if (level > mmu.max_level) {
@@ -647,7 +647,7 @@ va2pfn_dcmd(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 		return (DCMD_ERR);
 
 	if (mdb_getopts(argc, argv,
-	    'a', MDB_OPT_STR, &addrspace_str) != argc)
+	    'a', MDB_OPT_STR, &addrspace_str, NULL) != argc)
 		return (DCMD_USAGE);
 
 	if ((flags & DCMD_ADDRSPEC) == 0)
diff --git a/usr/src/cmd/mdb/intel/mdb/mdb_bhyve.c b/usr/src/cmd/mdb/intel/mdb/mdb_bhyve.c
index 374768efc5..9477bf5056 100644
--- a/usr/src/cmd/mdb/intel/mdb/mdb_bhyve.c
+++ b/usr/src/cmd/mdb/intel/mdb/mdb_bhyve.c
@@ -408,7 +408,8 @@ bhyve_cpustack_dcmd(uintptr_t addr, uint_t flags, int argc,
 
 	i = mdb_getopts(argc, argv,
 	    'c', MDB_OPT_UINT64, &cpu,
-	    'v', MDB_OPT_SETBITS, 1, &verbose);
+	    'v', MDB_OPT_SETBITS, 1, &verbose,
+	    NULL);
 
 	argc -= i;
 	argv += i;
diff --git a/usr/src/cmd/mdb/intel/modules/sata/sata.c b/usr/src/cmd/mdb/intel/modules/sata/sata.c
index 1829ed2f19..5186aae7cc 100644
--- a/usr/src/cmd/mdb/intel/modules/sata/sata.c
+++ b/usr/src/cmd/mdb/intel/modules/sata/sata.c
@@ -24,6 +24,7 @@
  */
 /*
  * Copyright 2013 Nexenta Systems, Inc.  All rights reserved.
+ * Copyright 2019 Joyent, Inc.
  */
 
 #include <sys/mdb_modapi.h>
@@ -216,7 +217,7 @@ sata_rbuf_dump(uintptr_t addr, uint_t flags, int argc, const mdb_arg_t *argv)
 	}
 
 	if (mdb_getopts(argc, argv,
-	    'a', MDB_OPT_SETBITS, TRUE, &print_pathname) != argc) {
+	    'a', MDB_OPT_SETBITS, TRUE, &print_pathname, NULL) != argc) {
 		return (DCMD_USAGE);
 	}
 
-- 
2.21.0

