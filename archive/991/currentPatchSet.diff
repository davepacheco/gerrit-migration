commit 8e9a064f6e32dde19799723d36a7d95ba9366301 (refs/changes/91/991/1)
Author: Chris Burroughs <chris.burroughs@joyent.com>
Date:   2016-11-30T13:56:05-05:00 (2 years, 10 months ago)
    
    ./bin/triton fwrule list

diff --git a/lib/do_fwrule/do_list.js b/lib/do_fwrule/do_list.js
index 108d4f0..bf6f7e2 100644
--- a/lib/do_fwrule/do_list.js
+++ b/lib/do_fwrule/do_list.js
@@ -35,40 +35,45 @@ function do_list(subcmd, opts, args, cb) {
         return;
     }
 
-    var cli = this.top;
-    cli.tritonapi.cloudapi.listFirewallRules({}, function onRules(err, rules) {
-        if (err) {
-            cb(err);
-            return;
+    var tritonapi = this.top.tritonapi;
+    common.cliSetupTritonApi({cli: this.top}, function onSetup(setupErr) {
+        if (setupErr) {
+            cb(setupErr);
         }
-
-        if (opts.json) {
-            common.jsonStream(rules);
-        } else {
-            var columns = COLUMNS_DEFAULT;
-
-            if (opts.o) {
-                columns = opts.o;
-            } else if (opts.long) {
-                columns = COLUMNS_LONG;
+        tritonapi.cloudapi.listFirewallRules({}, function onRules(err, rules) {
+            if (err) {
+                cb(err);
+                return;
             }
 
-            columns = columns.toLowerCase().split(',');
-            var sort = opts.s.toLowerCase().split(',');
-
-            if (columns.indexOf('shortid') !== -1) {
-                rules.forEach(function (rule) {
-                    rule.shortid = common.uuidToShortId(rule.id);
+            if (opts.json) {
+                common.jsonStream(rules);
+            } else {
+                var columns = COLUMNS_DEFAULT;
+
+                if (opts.o) {
+                    columns = opts.o;
+                } else if (opts.long) {
+                    columns = COLUMNS_LONG;
+                }
+
+                columns = columns.toLowerCase().split(',');
+                var sort = opts.s.toLowerCase().split(',');
+
+                if (columns.indexOf('shortid') !== -1) {
+                    rules.forEach(function (rule) {
+                        rule.shortid = common.uuidToShortId(rule.id);
+                    });
+                }
+
+                tabula(rules, {
+                    skipHeader: opts.H,
+                    columns: columns,
+                    sort: sort
                 });
-            }
-
-            tabula(rules, {
-                skipHeader: opts.H,
-                columns: columns,
-                sort: sort
-            });
         }
-        cb();
+            cb();
+        });
     });
 }
 
