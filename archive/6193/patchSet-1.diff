From 7c0135ae2f2a77b6544ea390674053ccb0036096 Mon Sep 17 00:00:00 2001
From: Robert Mustacchi <rm@joyent.com>
Date: Fri, 3 May 2019 20:33:00 +0000
Subject: [PATCH] OS-7786 xhci dma segment comment needs work

---
 usr/src/uts/common/io/usb/hcd/xhci/xhci_dma.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/usr/src/uts/common/io/usb/hcd/xhci/xhci_dma.c b/usr/src/uts/common/io/usb/hcd/xhci/xhci_dma.c
index e7d028a384..6445b6a8a5 100644
--- a/usr/src/uts/common/io/usb/hcd/xhci/xhci_dma.c
+++ b/usr/src/uts/common/io/usb/hcd/xhci/xhci_dma.c
@@ -10,7 +10,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019, Joyent, Inc.
  */
 
 /*
@@ -78,9 +78,10 @@ xhci_dma_transfer_attr(xhci_t *xhcip, ddi_dma_attr_t *attrp, uint_t sgl)
 	/*
 	 * The alignment and segment are related. The alignment describes the
 	 * alignment of the PA. The segment describes a boundary that the DMA
-	 * allocation cannot cross. In other words, for a given chunk of memory
-	 * it cannot cross a 64-byte boundary. However, the physical address
-	 * only needs to be aligned to align bytes.
+	 * allocation cannot cross. In other words, for a given chunk of
+	 * allcoated DMA memory, the allocated buffer cannot cross a 64k aligned
+	 * boundary. However, the physical address only needs to be aligned to
+	 * 64 bytes.
 	 */
 	attrp->dma_attr_align = XHCI_DMA_ALIGN;
 	attrp->dma_attr_seg = XHCI_TRB_MAX_TRANSFER - 1;
-- 
2.21.0

