From 2709e0a6b88d8c1098a04846b81e3358ab46174a Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Fri, 5 Apr 2019 12:15:39 -0700
Subject: [PATCH] TRITON-897 RFD 34 Triton instance migration Reviewed by:
 Orlando Vazquez <orlando@joyent.com> Approved by: Orlando Vazquez
 <orlando@joyent.com>

---
 docs/index.md               |  7 ++++---
 lib/endpoints/vms.js        | 38 ++++++++++++++++++++++++++++++++-
 lib/models/vm.js            |  8 ++++++-
 lib/validation/endpoints.js | 13 ++++++------
 lib/validation/migration.js | 42 +++++++++++++++++++++++++++++++++++++
 5 files changed, 97 insertions(+), 11 deletions(-)
 create mode 100644 lib/validation/migration.js

diff --git a/docs/index.md b/docs/index.md
index 455006d..778fd27 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -1494,9 +1494,10 @@ Query the server for the VM's details.
 
 ### Inputs
 
-| Param | Type   | Description                               |
-| ----- | ------ | ----------------------------------------- |
-| jobid | String | Post information to workflow with this id |
+| Param       | Type    | Description                                   |
+| ----------- | ------- | --------------------------------------------- |
+| jobid       | String  | Post information to workflow with this id     |
+| include_dni | Boolean | Allow a VM with the do_not_inventory flag set |
 
 
 ### Responses
diff --git a/lib/endpoints/vms.js b/lib/endpoints/vms.js
index 56209d8..164003d 100644
--- a/lib/endpoints/vms.js
+++ b/lib/endpoints/vms.js
@@ -21,6 +21,7 @@ var VError = require('verror');
 var sdcClients = require('sdc-clients');
 
 var validation = require('../validation/endpoints');
+var migrationValidation = require('../validation/migration');
 var errors = require('../errors');
 var ModelVM = require('../models/vm');
 
@@ -36,7 +37,6 @@ var vmValidationRules = {
 };
 
 
-
 /**
  * Query the server for a list of VMs.
  *
@@ -1201,6 +1201,29 @@ VM.dockerBuild = function handlerVmDockerBuild(req, res, next) {
 };
 
 
+/**
+ * Start migrating the instance to a new server.
+ *
+ * @name VmMigrate
+ * @endpoint POST /servers/:server\_uuid/vms/:uuid/migrate
+ * @section Virtual Machine API
+ *
+ * @response 204 None Task was sent to server
+ * @response 404 Error No such server
+ * @response 500 Error Error encountered while attempting to fulfill request
+ *
+ * @example POST /servers/<server-uuid>/vms/<uuid>/migrate
+ */
+
+VM.migrate = function handlerVmMigrate(req, res, next) {
+    if (!migrationValidation.validateReq(req, res)) {
+        next();
+        return;
+    }
+
+    req.stash.vm.performVmTask('machine_migrate', true, req, res, next);
+};
+
 
 function attachTo(http, app) {
     VM.init();
@@ -1381,6 +1404,19 @@ function attachTo(http, app) {
         }),
         VM.destroy);
 
+    // Migrate VM
+    http.post(
+        { path: '/servers/:server_uuid/vms/:uuid/migrate',
+            name: 'VmMigrate' },
+        ensure({
+            connectionTimeoutSeconds: 60 * 60,
+            app: app,
+            serverRunning: true,
+            prepopulate: ['server', 'vm'],
+            connected: ['moray']
+        }),
+        VM.migrate);
+
 
     /**
      *
diff --git a/lib/models/vm.js b/lib/models/vm.js
index f7df789..c7b2d9e 100644
--- a/lib/models/vm.js
+++ b/lib/models/vm.js
@@ -60,6 +60,12 @@ ModelVM.init = function (app) {
 ModelVM.prototype.load = function (opts, callback) {
     var self = this;
 
+    var params = {uuid: self.uuid};
+
+    if (opts.req && opts.req.params && opts.req.params.include_dni) {
+        params.include_dni = (opts.req.params.include_dni === 'true');
+    }
+
     ModelServer.get(self.serverUuid, function (err, servermodel) {
         var request = {
             log: opts.req.log,
@@ -71,7 +77,7 @@ ModelVM.prototype.load = function (opts, callback) {
                 callback(error, result);
             },
             req_id: opts.req_id,
-            params: { uuid: self.uuid }
+            params: params
         };
 
         servermodel.sendTaskRequest(request);
diff --git a/lib/validation/endpoints.js b/lib/validation/endpoints.js
index f779c79..91ed3c2 100644
--- a/lib/validation/endpoints.js
+++ b/lib/validation/endpoints.js
@@ -1,5 +1,5 @@
-/*!
- * Copyright (c) 2018, Joyent, Inc. All rights reserved.
+/*
+ * Copyright (c) 2019, Joyent, Inc. All rights reserved.
  *
  * HTTP endpoints validation routines.
  *
@@ -45,13 +45,14 @@ restify_validator.Validator.prototype.check = function (str, fail_msg) {
 };
 
 function ensureParamsValid(req, res, paramRules, opts) {
+    var params = opts && opts.params || req.params;
     var rule;
     var skip = false;
 
     opts = opts || {};
 
     if (opts.strict) {
-        for (var param in req.params) {
+        for (var param in params) {
             if (!paramRules.hasOwnProperty(param)) {
                 var error = new restify.InvalidArgumentError(
                     param + ' is not an explicitly defined parameter');
@@ -90,11 +91,11 @@ function ensureParamsValid(req, res, paramRules, opts) {
                             ruleIdx);
                     }
 
-                    if (!req.params.hasOwnProperty(paramName) ||
-                        req.params[paramName] === undefined) {
+                    if (!params.hasOwnProperty(paramName) ||
+                        params[paramName] === undefined) {
 
                         skip = true;
-                        req.params[paramName] = rule[1];
+                        params[paramName] = rule[1];
                         break;
                     }
                     break;
diff --git a/lib/validation/migration.js b/lib/validation/migration.js
new file mode 100644
index 0000000..731043b
--- /dev/null
+++ b/lib/validation/migration.js
@@ -0,0 +1,42 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
+/*
+ * Overview: HTTP migration endpoint validation.
+ */
+
+var validation = require('./endpoints');
+
+
+var vmMigrationRules = {
+    jobid: ['optional', 'isStringType'],
+    migrationTask: ['isObjectType'],
+    uuid: ['isStringType'],
+    'migrationTask.action': ['isStringType'],
+    'migrationTask.record': ['isObjectType']
+};
+var migrationTaskRules = {
+};
+
+
+/**
+ * Validate that the action requested is valid for the vm migration state.
+ */
+function validateReq(req, res) {
+    if (validation.ensureParamsValid(req, res, vmMigrationRules)) {
+        return false;
+    }
+
+    return true;
+}
+
+module.exports = {
+    validateReq: validateReq
+};
-- 
2.21.0

