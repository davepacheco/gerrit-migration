From 45ba609f63de5fb74c0b0e2b35cc006bbaf440a5 Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <josh@wilsdon.ca>
Date: Wed, 21 Feb 2018 12:13:57 -0800
Subject: [PATCH] TRITON-166 CloudAPI ListMachines endpoint errors with a
 JSON.parse error Reviewed by: Trent Mick <trentm@gmail.com> Approved by:
 Trent Mick <trentm@gmail.com>

---
 lib/machines.js       | 16 ++++++++--------
 package.json          |  2 +-
 test/machines.test.js | 10 +++++++---
 3 files changed, 16 insertions(+), 12 deletions(-)

diff --git a/lib/machines.js b/lib/machines.js
index 638c244..efdc628 100644
--- a/lib/machines.js
+++ b/lib/machines.js
@@ -275,16 +275,16 @@ function getListOptions(req) {
 
     switch (req.params.type) {
     case 'smartmachine':
-        opts.predicate = '{ "and" [ ' +
-            '{ "ne": [ "brand", "kvm" ] }, ' +
-            '{ "ne": [ "brand", "bhyve" ] }' +
-            ' ] }';
+        opts.predicate = JSON.stringify({ and: [
+            { ne: [ 'brand', 'kvm' ] },
+            { ne: [ 'brand', 'bhyve' ] }
+        ] });
         break;
     case 'virtualmachine':
-        opts.predicate = '{ "or": [ ' +
-                '{ "eq": [ "brand", "kvm" ] }, ' +
-                '{ "eq": [ "brand", "bhyve" ] }' +
-                ' ] }';
+        opts.predicate = JSON.stringify({ or: [
+            { eq: [ 'brand', 'kvm' ] },
+            { eq: [ 'brand', 'bhyve' ] }
+        ] });
         break;
     case undefined:
         break;
diff --git a/package.json b/package.json
index bf7ba42..3582e97 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "cloudapi",
     "description": "SmartDataCenter CloudAPI",
-    "version": "8.6.0",
+    "version": "8.6.1",
     "author": "Joyent (joyent.com)",
     "private": true,
     "engines": {
diff --git a/test/machines.test.js b/test/machines.test.js
index f5eba9a..141cc58 100644
--- a/test/machines.test.js
+++ b/test/machines.test.js
@@ -908,9 +908,13 @@ test('ListMachines (filter by docker true)', function (t) {
         t.equal(res.statusCode, 200);
         common.checkHeaders(t, res.headers);
 
-        body.forEach(function (vm) {
-            t.equal(vm.docker, true);
-        });
+        t.ok(body, 'should have a body');
+
+        if (body) {
+            body.forEach(function (vm) {
+                t.equal(vm.docker, true);
+            });
+        }
 
         t.end();
     });
-- 
2.21.0

