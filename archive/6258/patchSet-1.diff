commit 00cf5b4270a02801bd57e44b815d70f90abcfbe6
Author: Kelly McLaughlin <kelly.mclaughlin@joyent.com>
Date:   2019-05-15T16:17:10-06:00 (5 months ago)
    
    MANTA-4280 Plumb through object id RPC parameter for createobject function in node-boray's client module

diff --git a/lib/client.js b/lib/client.js
index f8b5d81..61d86f5 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -725,6 +725,7 @@ BorayClient.prototype.deleteBucketNoVnode =
  * @param {String} owner           - Account owner
  * @param {String} bucket_id       - Bucket id
  * @param {String} name            - Object key name
+ * @param {String} object_id       - Object id
  * @param {Number} content_length  - The size of the object
  * @param {String} content_md5     - MD5 digest of the object
  * @param {String} content_type    - Content-Type of the object
@@ -741,8 +742,8 @@ BorayClient.prototype.deleteBucketNoVnode =
  * @param {Function} cb            - callback
  */
 BorayClient.prototype.createObject = function createObject(owner, bucket_id,
-    name, content_length, content_md5, content_type, headers, sharks, props,
-    vnode, cb) {
+    name, object_id, content_length, content_md5, content_type, headers,
+    sharks, props, vnode, cb) {
     assert.string(owner, 'owner');
     assert.string(bucket_id, 'bucket_id');
     assert.string(name, 'name');
@@ -757,7 +758,7 @@ BorayClient.prototype.createObject = function createObject(owner, bucket_id,
 
     var rpcctx = this.ctxCreateForCallback(cb);
     if (rpcctx) {
-        objects.createObject(rpcctx, owner, bucket_id, name,
+        objects.createObject(rpcctx, owner, bucket_id, name, object_id,
             content_length, content_md5, content_type, headers, sharks, props,
             vnode, this.makeReleaseCb(rpcctx, cb));
     }
@@ -773,6 +774,7 @@ BorayClient.prototype.createObject = function createObject(owner, bucket_id,
  * @param {String} owner           - Account owner
  * @param {String} bucket_id       - Bucket id
  * @param {String} name            - Object key name
+ * @param {String} object_id       - Object id
  * @param {Number} content_length  - The size of the object
  * @param {String} content_md5     - MD5 digest of the object
  * @param {String} content_type    - Content-Type of the object
@@ -788,12 +790,13 @@ BorayClient.prototype.createObject = function createObject(owner, bucket_id,
  * @param {Function} cb            - callback
  */
 BorayClient.prototype.createObjectNoVnode = function createObjectNoVnode(owner,
-    bucket_id, name, content_length, content_md5, content_type, headers,
-    sharks, props, cb) {
+    bucket_id, name, object_id, content_length, content_md5, content_type,
+    headers, sharks, props, cb) {
 
     assert.string(owner, 'owner');
     assert.string(bucket_id, 'bucket_id');
     assert.string(name, 'name');
+    assert.string(object_id, 'object_id');
     assert.number(content_length, 'content_length');
     assert.string(content_md5, 'content_md5');
     assert.string(content_type, 'content_type');
@@ -804,7 +807,7 @@ BorayClient.prototype.createObjectNoVnode = function createObjectNoVnode(owner,
 
     var rpcctx = this.ctxCreateForCallback(cb);
     if (rpcctx) {
-        objects.createObjectNoVnode(rpcctx, owner, bucket_id, name,
+        objects.createObjectNoVnode(rpcctx, owner, bucket_id, name, object_id,
             content_length, content_md5, content_type, headers, sharks, props,
             this.makeReleaseCb(rpcctx, cb));
     }
diff --git a/lib/objects.js b/lib/objects.js
index abd9268..5b5e54e 100644
--- a/lib/objects.js
+++ b/lib/objects.js
@@ -89,6 +89,7 @@ function createObjectNoVnode(rpcctx, owner, bucket_id, name, object_id,
     assert.string(owner, 'owner');
     assert.string(bucket_id, 'bucket_id');
     assert.string(name, 'name');
+    assert.string(object_id, 'object_id');
     assert.number(content_length, 'content_length');
     assert.string(content_md5, 'content_md5');
     assert.string(content_type, 'content_type');
