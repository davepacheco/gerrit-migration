commit 5af0b14c96ace9624a66d5c5b020646281866706
Author: Brian Bennett <brian.bennett@joyent.com>
Date:   2019-07-03T11:56:02-07:00 (3 months ago)
    
    TRITON-1789 cns should automatically publish names for manta_role just like it does for smartdc_role

diff --git a/lib/flag-filter.js b/lib/flag-filter.js
index 07e6cbd..a33f496 100644
--- a/lib/flag-filter.js
+++ b/lib/flag-filter.js
@@ -34,6 +34,9 @@ var PTR_REGEX = /^[a-z0-9][a-z0-9\-]{0,62}(?:\.[a-z0-9][a-z0-9\-]{0,62})*$/i;
  */
 var SMARTDC_ROLE_BLACKLIST = ['nat'];
 
+/* For manta, whitelist only loadbalancer. */
+var MANTA_ROLE_WHITELIST = ['loadbalancer'];
+
 /*
  * The FlagFilter transform stream takes in a VM object that has been annotated
  * with "owner" and "server" objects (by UfdsFilter, CnFilter and NetFilter),
@@ -116,6 +119,14 @@ FlagFilter.prototype._transform = function (vm, enc, cb) {
 				ports: []
 			});
 		}
+		tag = vm.tags['manta_role'];
+		if (vm.owner.login === 'poseidon' && tag && tag.length > 0 &&
+		    MANTA_ROLE_WHITELIST.indexOf(tag) !== -1) {
+			vm.services.push({
+				name: tag,
+				ports: []
+			});
+		}
 	}
 
 	/* Set default: list in both instance and service records. */
diff --git a/test/unit/flag-filter.test.js b/test/unit/flag-filter.test.js
index b20eb1c..2e19f4f 100644
--- a/test/unit/flag-filter.test.js
+++ b/test/unit/flag-filter.test.js
@@ -346,6 +346,70 @@ test('does not accept smartdc_role tag on non-admin', function (t) {
 	t.end();
 });
 
+test('accepts manta_role==loadbalancer tag on poseidon VMs', function (t) {
+	var s = new FlagFilter({});
+	s.write({
+		uuid: 'abc123',
+		state: 'running',
+		owner: {
+			login: 'poseidon',
+			triton_cns_enabled: true,
+			approved_for_provisioning: true
+		},
+		server: {status: 'running'},
+		customer_metadata: {},
+		tags: {'manta_role': 'loadbalancer'}
+	});
+	var out = s.read();
+	t.strictEqual(typeof (out), 'object');
+	t.deepEqual(out.services, [ { name: 'loadbalancer', ports: [] } ]);
+	t.strictEqual(out.listInstance, true);
+	t.strictEqual(out.listServices, true);
+	t.end();
+});
+
+test('accepts only whitelisted manta_role tag on poseidon VMs', function (t) {
+	var s = new FlagFilter({});
+	s.write({
+		uuid: 'abc123',
+		state: 'running',
+		owner: {
+			login: 'poseidon',
+			approved_for_provisioning: true
+		},
+		server: {status: 'running'},
+		customer_metadata: {},
+		tags: {'manta_role': 'authcache'}
+	});
+	var out = s.read();
+	t.strictEqual(typeof (out), 'object');
+	t.deepEqual(out.services, [ ]);
+	t.strictEqual(out.listInstance, false);
+	t.strictEqual(out.listServices, false);
+	t.end();
+});
+
+test('does not accept manta_role tag on non-poseidon', function (t) {
+	var s = new FlagFilter({});
+	s.write({
+		uuid: 'abc123',
+		state: 'running',
+		owner: {
+			login: 'george',
+			approved_for_provisioning: true
+		},
+		server: {status: 'running'},
+		customer_metadata: {},
+		tags: {'manta_role': 'loadbalancer'}
+	});
+	var out = s.read();
+	t.strictEqual(typeof (out), 'object');
+	t.deepEqual(out.services, [ ]);
+	t.strictEqual(out.listInstance, false);
+	t.strictEqual(out.listServices, false);
+	t.end();
+});
+
 test('removes all records when vm is destroyed', function (t) {
 	var s = new FlagFilter({});
 	s.write({
