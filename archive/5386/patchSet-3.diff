commit 32b9d45eca76999149e098b0aec402f5e12cd8ac (refs/changes/86/5386/3)
Author: Rui Loura <rui@joyent.com>
Date:   2019-01-22T14:04:07-05:00 (9 months ago)
    
    TRITON-1094 isNet() functions should be more compatible with network pools
    TRITON-1100 triton-netconfig should prefer "CN Agent IP" over "Admin IP" for mockcloud "Virtual" servers

diff --git a/CHANGES.md b/CHANGES.md
index e710887..3239c8b 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -4,6 +4,10 @@
 
 (nothing yet)
 
+## 1.2.0
+
+* TRITON-1094 isNet() functions should be more compatible with network pools
+
 ## 1.1.0
 
 * TRITON-1073 adminIpFromNicsArray in node-triton-netconfig
diff --git a/lib/index.js b/lib/index.js
index 3fbc6ce..4ce18ed 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -46,6 +46,39 @@ function _isNetNicCommon(nic, network) {
     return re.test(nic.nic_tag);
 }
 
+/*
+ * Ideally we'd use RFD117 traits here, but until then this function will
+ * return true if one or more of the folllowing conditions are met:
+ *
+ *    1. Network name is the same as the network being tested.
+ *    2. nic_tag matches the form "<network name>_rack_<rack id>"
+ *       (see RACK_RE above).
+ *    3. If it is a network pool and one of the nictags in the nic_tags_present
+ *       array matches the RACK_RE.
+ */
+function _isNetCommon(net, name) {
+    if (net.name === name) {
+        return true;
+    }
+
+    if (_isNetNicCommon(net, name)) {
+        return true;
+    }
+
+    if (net.nic_tags_present) {
+        var re = new RegExp('^' + name + RACK_RE, 'i');
+        var tagsLen = net.nic_tags_present.length;
+
+        for (var i = 0; i < tagsLen; i++) {
+            if (re.test(net.nic_tags_present[i])) {
+                return true;
+            }
+        }
+    }
+
+    return false;
+}
+
 // ---- Exports
 
 /*
@@ -78,9 +111,19 @@ function adminNicFromSysinfo(sysinfo) {
 }
 
 /*
- * Given a CN's sysinfo in JSON format return the admin IP.
+ * Given a CN's sysinfo in JSON format return the admin IP.  Methods for
+ * determing the admin IP in order of preference below:
+ *
+ *     1. If the CN is 'Virtual' (mockcloud) then use the 'CN Agent IP'.
+ *     2. If the 'Admin IP' property is present use that.
+ *     3. Find the admin IP the legacy way, from the list of interfaces.
  */
 function adminIpFromSysinfo(sysinfo) {
+    if (sysinfo['System Type'] === 'Virtual' &&
+        sysinfo.hasOwnProperty('CN Agent IP')) {
+        return sysinfo['CN Agent IP'];
+    }
+
     if (sysinfo['Admin IP']) {
         return sysinfo['Admin IP'];
     }
@@ -136,15 +179,15 @@ function isNicExternal(nic) {
 // ---- isNet
 
 function isNetAdmin(net) {
-    return _isNetNicCommon(net, ADMIN_NAME);
+    return _isNetCommon(net, ADMIN_NAME);
 }
 
 function isNetExternal(net) {
-    return _isNetNicCommon(net, EXTERNAL_NAME);
+    return _isNetCommon(net, EXTERNAL_NAME);
 }
 
 function isNetInternal(net) {
-    return _isNetNicCommon(net, INTERNAL_NAME);
+    return _isNetCommon(net, INTERNAL_NAME);
 }
 
 module.exports = {
diff --git a/package.json b/package.json
index 17e6138..051280c 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "triton-netconfig",
-  "version": "1.1.0",
+  "version": "1.2.0",
   "description": "Common methods for managing Triton network configuration",
   "repository": {
     "type": "git",
diff --git a/test/unit/main.test.js b/test/unit/main.test.js
index 115d57b..68b7ad3 100644
--- a/test/unit/main.test.js
+++ b/test/unit/main.test.js
@@ -1,4 +1,5 @@
 /*
+ * d
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/.
@@ -16,6 +17,7 @@ const jsprim = require('jsprim');
 
 const VMS = data['vms'];
 const NETS = data['nets'];
+const POOLS = data['pools'];
 const SYSINFO = data['sysinfo'];
 const NICS = data['nics'];
 
@@ -42,6 +44,33 @@ tap.test('nets', function (tt) {
     tt.end();
 });
 
+tap.test('pools', function (tt) {
+    tt.test('isNet', function (t) {
+        const basic = POOLS['basic_external'];
+        const rack_reg_external = POOLS['rack_with_reg_pool'];
+        const tags_present = POOLS['tags_present_external'];
+        const rack_tags_present = POOLS['tags_present_rack_external'];
+        const not_external = POOLS['not_external'];
+
+        t.ok(netconf.isNetExternal(basic));
+        t.ok(netconf.isNetExternal(rack_reg_external));
+        t.ok(netconf.isNetExternal(tags_present));
+        t.ok(netconf.isNetExternal(rack_tags_present));
+
+        t.notOk(netconf.isNetAdmin(basic));
+        t.notOk(netconf.isNetAdmin(rack_reg_external));
+        t.notOk(netconf.isNetAdmin(tags_present));
+        t.notOk(netconf.isNetAdmin(rack_tags_present));
+
+        t.notOk(netconf.isNetExternal(not_external));
+        t.notOk(netconf.isNetInternal(basic));
+
+        t.end();
+    });
+
+    tt.end();
+});
+
 tap.test('vms', function (tt) {
     tt.test('main', function (t) {
         const main_vm = VMS['main'];
@@ -152,6 +181,17 @@ tap.test('sysinfo', function (tt) {
 
         t.end();
     });
+
+    tt.test('virtual',function (t) {
+        const sysinfo = SYSINFO['virtual'];
+        const cn_agent_ip = sysinfo['CN Agent IP'];
+        const admin_ip = sysinfo['Admin IP'];
+
+        t.equal(netconf.adminIpFromSysinfo(sysinfo), cn_agent_ip);
+        t.notEqual(netconf.adminIpFromSysinfo(sysinfo), admin_ip);
+
+        t.end();
+    });
     tt.end();
 });
 
diff --git a/test/unit/testdata.json b/test/unit/testdata.json
index e2a4c13..99a564a 100644
--- a/test/unit/testdata.json
+++ b/test/unit/testdata.json
@@ -424,8 +424,181 @@
             },
             "Link Aggregations": {
             }
+        },
+        "virtual": {
+            "System Type": "Virtual",
+            "SDC Version": "7.0",
+            "Manufacturer": "Joyent",
+            "Product": "Joyent-Virtual-CN-0001",
+            "SKU Number": "90210 rev 42",
+            "HW Version": "1.0",
+            "HW Family": "JXX-0001",
+            "Setup": "true",
+            "VM Capable": true,
+            "Bhyve Capable": true,
+            "Bhyve Max Vcpus": 32,
+            "CPU Type": "Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz",
+            "CPU Virtualization": "vmx",
+            "CPU Physical Cores": 2,
+            "CPU Total Cores": 32,
+            "MiB of Memory": "262111",
+            "Zpool": "zones",
+            "Zpool Disks": "c0t5000DB7409d0,c1t50004A7D86d0,c2t50004A3CA5d0,c3t5000CF2852d0,c4t5000B5BFE9d0,c5t5000F6A850d0,c6t5000A85F37d0,c7t500084CCBDd0,c8t5000F27A01d0,c9t5000FB8F80d0,c10t5000B2A748d0,c11t50007017B5d0,c12t500084B60Ad0,c13t50001B17CCd0,c14t500078BA5Fd0,c15t5000BFA4E6d0",
+            "Zpool Profile": "mirror",
+            "Disks": {
+              "c0t5000DB7409d0": {
+                "Size in GB": 600
+              },
+              "c1t50004A7D86d0": {
+                "Size in GB": 600
+              },
+              "c2t50004A3CA5d0": {
+                "Size in GB": 600
+              },
+              "c3t5000CF2852d0": {
+                "Size in GB": 600
+              },
+              "c4t5000B5BFE9d0": {
+                "Size in GB": 600
+              },
+              "c5t5000F6A850d0": {
+                "Size in GB": 600
+              },
+              "c6t5000A85F37d0": {
+                "Size in GB": 600
+              },
+              "c7t500084CCBDd0": {
+                "Size in GB": 600
+              },
+              "c8t5000F27A01d0": {
+                "Size in GB": 600
+              },
+              "c9t5000FB8F80d0": {
+                "Size in GB": 600
+              },
+              "c10t5000B2A748d0": {
+                "Size in GB": 600
+              },
+              "c11t50007017B5d0": {
+                "Size in GB": 600
+              },
+              "c12t500084B60Ad0": {
+                "Size in GB": 600
+              },
+              "c13t50001B17CCd0": {
+                "Size in GB": 600
+              },
+              "c14t500078BA5Fd0": {
+                "Size in GB": 600
+              },
+              "c15t5000BFA4E6d0": {
+                "Size in GB": 600
+              }
+            },
+            "Boot Parameters": {
+              "console": "ttyb",
+              "boot_args": "",
+              "bootargs": ""
+            },
+            "SDC Agents": [],
+            "Network Interfaces": {
+              "dnet0": {
+                "ip4addr": "10.99.99.66",
+                "Link Status": "up",
+                "NIC Names": [
+                  "admin"
+                ],
+                "MAC Address": "00:10:fe:f7:aa:cb"
+              },
+              "dnet1": {
+                "ip4addr": "",
+                "Link Status": "up",
+                "NIC Names": [],
+                "MAC Address": "00:10:fe:64:66:38"
+              }
+            },
+            "Virtual Network Interfaces": {},
+            "Link Aggregations": {},
+            "Datacenter Name": "ruidc",
+            "UUID": "1de6427f-37bb-45a3-bd98-257b2caaebc1",
+            "Admin IP": "10.99.99.66",
+            "Zpool Size in GiB": 3770,
+            "Live Image": "20181012T154011Z",
+            "Boot Time": "1547498443",
+            "Hostname": "VC1DE6427F",
+            "Serial Number": "1DE6427F",
+            "Zpool Creation": 1547498443,
+            "CN Agent Port": 43296,
+            "CN Agent IP": "10.99.99.63"
         }
     },
+    "pools": {
+      "rack_with_reg_pool": {
+        "family": "ipv4",
+        "uuid": "ff4e2059-dfec-44ea-a735-c9efdded98c6",
+        "name": "external",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5",
+          "f769454f-31f1-4e4b-b191-c2876b6814bb"
+        ],
+        "nic_tags_present": [
+          "external",
+          "external_rack_e50"
+        ],
+        "nic_tag": "external"
+      },
+      "basic_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "external"
+        ],
+        "nic_tag": "external"
+      },
+      "tags_present_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "foo",
+          "external"
+        ],
+        "nic_tag": "foo"
+      },
+      "tags_present_rack_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "foo",
+          "external_rack_e20"
+        ],
+        "nic_tag": "foo"
+      },
+      "not_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "foo",
+          "rack_e20"
+        ],
+        "nic_tag": "foo"
+      }
+    },
     "nets": {
         "external_mainnet": {
             "family": "ipv4",
