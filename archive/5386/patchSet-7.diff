From ce3c20b11b84dd44ef35df9b478bdb61dcf03855 Mon Sep 17 00:00:00 2001
From: Rui Loura <rui@joyent.com>
Date: Fri, 18 Jan 2019 15:39:42 -0500
Subject: [PATCH] TRITON-1094 isNet() functions should be more compatible with
 network pools TRITON-1157 add agentIpFromSysinfo to node-triton-netconfig

---
 CHANGES.md              |   5 ++
 lib/index.js            |  55 +++++++++++-
 package.json            |   2 +-
 test/unit/main.test.js  |  32 +++++++
 test/unit/testdata.json | 187 ++++++++++++++++++++++++++++++++++++++++
 5 files changed, 277 insertions(+), 4 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index ad51f1e..8153a7b 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -4,6 +4,11 @@
 
 (nothing yet)
 
+## 1.3.0
+
+* TRITON-1094 isNet() functions should be more compatible with network pools
+* TRITON-1157 add agentIpFromSysinfo to node-triton-netconfig
+
 ## 1.2.0
 
 * TRITON-1160 node-triton-netconfig adminIpFromSysinfo should account for "dhcp" value
diff --git a/lib/index.js b/lib/index.js
index bbd6cd6..c4c269c 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -57,6 +57,39 @@ function _isValidIpAddress(ip) {
     }
 }
 
+/*
+ * Ideally we'd use RFD117 traits here, but until then this function will
+ * return true if one or more of the folllowing conditions are met:
+ *
+ *    1. Network name is the same as the network being tested.
+ *    2. nic_tag matches the form "<network name>_rack_<rack id>"
+ *       (see RACK_RE above).
+ *    3. If it is a network pool and one of the nictags in the nic_tags_present
+ *       array matches the RACK_RE.
+ */
+function _isNetCommon(net, name) {
+    if (net.name === name) {
+        return true;
+    }
+
+    if (_isNetNicCommon(net, name)) {
+        return true;
+    }
+
+    if (net.nic_tags_present) {
+        var re = new RegExp('^' + name + RACK_RE, 'i');
+        var tagsLen = net.nic_tags_present.length;
+
+        for (var i = 0; i < tagsLen; i++) {
+            if (re.test(net.nic_tags_present[i])) {
+                return true;
+            }
+        }
+    }
+
+    return false;
+}
+
 // ---- Exports
 
 /*
@@ -110,6 +143,21 @@ function adminIpFromSysinfo(sysinfo) {
     return null;
 }
 
+/*
+ * This function is for use with components that need to be Mockcloud
+ * compatible.  To get the standard admin IP for a given CN from its sysinfo
+ * use adminIpFromSysinfo() directly.
+ */
+function agentIpFromSysinfo(sysinfo) {
+    if (sysinfo['System Type'] === 'Virtual' &&
+        sysinfo.hasOwnProperty('CN Agent IP')) {
+
+        return sysinfo['CN Agent IP'];
+    }
+
+    return adminIpFromSysinfo(sysinfo);
+}
+
 // ---- From VM Metadata
 
 /*
@@ -152,15 +200,15 @@ function isNicExternal(nic) {
 // ---- isNet
 
 function isNetAdmin(net) {
-    return _isNetNicCommon(net, ADMIN_NAME);
+    return _isNetCommon(net, ADMIN_NAME);
 }
 
 function isNetExternal(net) {
-    return _isNetNicCommon(net, EXTERNAL_NAME);
+    return _isNetCommon(net, EXTERNAL_NAME);
 }
 
 function isNetInternal(net) {
-    return _isNetNicCommon(net, INTERNAL_NAME);
+    return _isNetCommon(net, INTERNAL_NAME);
 }
 
 module.exports = {
@@ -168,6 +216,7 @@ module.exports = {
     adminIpFromNicsArray: adminIpFromNicsArray,
     adminIpFromSysinfo: adminIpFromSysinfo,
     adminIpFromVmMetadata: adminIpFromVmMetadata,
+    agentIpFromSysinfo: agentIpFromSysinfo,
     externalIpFromVmMetadata: externalIpFromVmMetadata,
     mantaIpFromVmMetadata: mantaIpFromVmMetadata,
     adminMacFromVmMetadata: adminMacFromVmMetadata,
diff --git a/package.json b/package.json
index 8ce53f6..bff77d6 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "triton-netconfig",
-  "version": "1.2.0",
+  "version": "1.3.0",
   "description": "Common methods for managing Triton network configuration",
   "repository": {
     "type": "git",
diff --git a/test/unit/main.test.js b/test/unit/main.test.js
index 3142471..a87eaa6 100644
--- a/test/unit/main.test.js
+++ b/test/unit/main.test.js
@@ -16,6 +16,7 @@ const jsprim = require('jsprim');
 
 const VMS = data['vms'];
 const NETS = data['nets'];
+const POOLS = data['pools'];
 const SYSINFO = data['sysinfo'];
 const NICS = data['nics'];
 
@@ -42,6 +43,36 @@ tap.test('nets', function (tt) {
     tt.end();
 });
 
+tap.test('pools', function (tt) {
+    tt.test('isNet', function (t) {
+        const basic = POOLS['basic_external'];
+        const rack_reg_external = POOLS['rack_with_reg_pool'];
+        const tags_present = POOLS['tags_present_external'];
+        const rack_tags_present = POOLS['tags_present_rack_external'];
+        const not_external = POOLS['not_external'];
+        const admin_rack = POOLS['admin_rack'];
+
+        t.ok(netconf.isNetExternal(basic));
+        t.ok(netconf.isNetExternal(rack_reg_external));
+        t.ok(netconf.isNetExternal(tags_present));
+        t.ok(netconf.isNetExternal(rack_tags_present));
+        t.notOk(netconf.isNetExternal(admin_rack));
+
+        t.ok(netconf.isNetAdmin(admin_rack));
+        t.notOk(netconf.isNetAdmin(basic));
+        t.notOk(netconf.isNetAdmin(rack_reg_external));
+        t.notOk(netconf.isNetAdmin(tags_present));
+        t.notOk(netconf.isNetAdmin(rack_tags_present));
+
+        t.notOk(netconf.isNetExternal(not_external));
+        t.notOk(netconf.isNetInternal(basic));
+
+        t.end();
+    });
+
+    tt.end();
+});
+
 tap.test('vms', function (tt) {
     tt.test('main', function (t) {
         const main_vm = VMS['main'];
@@ -160,6 +191,7 @@ tap.test('sysinfo', function (tt) {
 
         t.end();
     });
+
     tt.end();
 });
 
diff --git a/test/unit/testdata.json b/test/unit/testdata.json
index e2a4c13..a724814 100644
--- a/test/unit/testdata.json
+++ b/test/unit/testdata.json
@@ -424,8 +424,195 @@
             },
             "Link Aggregations": {
             }
+        },
+        "virutal": {
+          "System Type": "Virtual",
+          "SDC Version": "7.0",
+          "Manufacturer": "Joyent",
+          "Product": "Joyent-Virtual-CN-0001",
+          "SKU Number": "90210 rev 42",
+          "HW Version": "1.0",
+          "HW Family": "JXX-0001",
+          "Setup": "true",
+          "VM Capable": true,
+          "Bhyve Capable": true,
+          "Bhyve Max Vcpus": 32,
+          "CPU Type": "Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz",
+          "CPU Virtualization": "vmx",
+          "CPU Physical Cores": 2,
+          "CPU Total Cores": 32,
+          "MiB of Memory": "262111",
+          "Zpool": "zones",
+          "Zpool Disks": "c0t50006D696Bd0,c1t5000CB9E23d0,c2t500086A21Fd0,c3t5000FDF133d0,c4t5000BF36BEd0,c5t500022DB67d0,c6t5000C625CEd0,c7t500011B65Fd0,c8t5000F5E76Ad0,c9t50009ECD46d0,c10t5000DB96ECd0,c11t50009845ACd0,c12t5000C5EE9Ad0,c13t5000E7C50Dd0,c14t5000C941C2d0,c15t5000FB0668d0",
+          "Zpool Profile": "mirror",
+          "Disks": {
+            "c0t50006D696Bd0": {
+              "Size in GB": 600
+            },
+            "c1t5000CB9E23d0": {
+              "Size in GB": 600
+            },
+            "c2t500086A21Fd0": {
+              "Size in GB": 600
+            },
+            "c3t5000FDF133d0": {
+              "Size in GB": 600
+            },
+            "c4t5000BF36BEd0": {
+              "Size in GB": 600
+            },
+            "c5t500022DB67d0": {
+              "Size in GB": 600
+            },
+            "c6t5000C625CEd0": {
+              "Size in GB": 600
+            },
+            "c7t500011B65Fd0": {
+              "Size in GB": 600
+            },
+            "c8t5000F5E76Ad0": {
+              "Size in GB": 600
+            },
+            "c9t50009ECD46d0": {
+              "Size in GB": 600
+            },
+            "c10t5000DB96ECd0": {
+              "Size in GB": 600
+            },
+            "c11t50009845ACd0": {
+              "Size in GB": 600
+            },
+            "c12t5000C5EE9Ad0": {
+              "Size in GB": 600
+            },
+            "c13t5000E7C50Dd0": {
+              "Size in GB": 600
+            },
+            "c14t5000C941C2d0": {
+              "Size in GB": 600
+            },
+            "c15t5000FB0668d0": {
+              "Size in GB": 600
+            }
+          },
+          "Boot Parameters": {
+            "console": "ttyb",
+            "boot_args": "",
+            "bootargs": ""
+          },
+          "SDC Agents": [],
+          "Network Interfaces": {
+            "dnet0": {
+              "ip4addr": "10.99.99.67",
+              "Link Status": "up",
+              "NIC Names": [
+                "admin"
+              ],
+              "MAC Address": "00:10:fe:83:8b:66"
+            },
+            "dnet1": {
+              "ip4addr": "",
+              "Link Status": "up",
+              "NIC Names": [],
+              "MAC Address": "00:10:fe:f5:35:7f"
+            }
+          },
+          "Virtual Network Interfaces": {},
+          "Link Aggregations": {},
+          "Datacenter Name": "ruidc",
+          "UUID": "32dc97c7-4fab-4f7e-82b8-71009a2320f9",
+          "Admin IP": "10.99.99.67",
+          "Zpool Size in GiB": 3770,
+          "Live Image": "20181012T154011Z",
+          "Boot Time": "1547498499",
+          "Hostname": "VC32DC97C7",
+          "Serial Number": "32DC97C7",
+          "Zpool Creation": 1547498499,
+          "CN Agent Port": 36255,
+          "CN Agent IP": "10.99.99.63"
         }
     },
+    "pools": {
+      "rack_with_reg_pool": {
+        "family": "ipv4",
+        "uuid": "ff4e2059-dfec-44ea-a735-c9efdded98c6",
+        "name": "external",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5",
+          "f769454f-31f1-4e4b-b191-c2876b6814bb"
+        ],
+        "nic_tags_present": [
+          "external",
+          "external_rack_e50"
+        ],
+        "nic_tag": "external"
+      },
+      "basic_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "external"
+        ],
+        "nic_tag": "external"
+      },
+      "tags_present_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "foo",
+          "external"
+        ],
+        "nic_tag": "foo"
+      },
+      "tags_present_rack_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "foo",
+          "external_rack_e20"
+        ],
+        "nic_tag": "foo"
+      },
+      "not_external": {
+        "family": "ipv4",
+        "uuid": "5065943d-fa70-4eb3-8b74-2b1ecbbfe51e",
+        "name": "sdc_nat",
+        "networks": [
+          "2c606372-fa8d-452d-a93c-e4e98b98bda5"
+        ],
+        "nic_tags_present": [
+          "foo",
+          "rack_e20"
+        ],
+        "nic_tag": "foo"
+      },
+      "admin_rack": {
+        "family": "ipv4",
+        "uuid": "7dfa5ff8-2c59-4c7b-bfa4-d2c243e098af",
+        "name": "admin",
+        "networks": [
+          "0a4d08a1-8e7f-48aa-9a68-91bdf2edd93e",
+          "ef5461db-7a70-4920-b6fb-e5c4b9918de2"
+        ],
+        "nic_tags_present": [
+          "admin",
+          "admin_rack_e50"
+        ],
+        "nic_tag": "admin"
+      }
+    },
     "nets": {
         "external_mainnet": {
             "family": "ipv4",
-- 
2.21.0

