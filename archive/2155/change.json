{"project":"joyent/illumos-joyent","branch":"master","id":"I272c95e54418d329ab3aa41d6b1b658f174e152c","number":"2155","subject":"OS-6207 nvme: rework command abortion Reviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e Reviewed by: Jason King \u003cjason.king@joyent.com\u003e Reviewed by: Robert Mustacchi \u003crm@joyent.com\u003e Approved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e","owner":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"url":"https://cr.joyent.us/2155","commitMessage":"OS-6207 nvme: rework command abortion\nReviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\nReviewed by: Jason King \u003cjason.king@joyent.com\u003e\nReviewed by: Robert Mustacchi \u003crm@joyent.com\u003e\nApproved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\n","createdOn":1498566202,"lastUpdated":1500385361,"open":false,"status":"MERGED","comments":[{"timestamp":1498566202,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 1."},{"timestamp":1498579385,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 1:\n\n(1 comment)"},{"timestamp":1498655241,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1:\n\n(3 comments)"},{"timestamp":1498657785,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 2."},{"timestamp":1498657821,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 1:\n\n(4 comments)"},{"timestamp":1498658252,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1498666887,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1498776916,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 2:\n\n(6 comments)"},{"timestamp":1499169463,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 3."},{"timestamp":1499169502,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 3:\n\n(6 comments)"},{"timestamp":1499266486,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 3:\n\n(7 comments)"},{"timestamp":1499267501,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 4."},{"timestamp":1499267516,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 3:\n\n(7 comments)"},{"timestamp":1499365397,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 4: Code-Review+1"},{"timestamp":1499369099,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 4: Code-Review+1"},{"timestamp":1499461963,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 4:\n\n(5 comments)"},{"timestamp":1499702549,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 5."},{"timestamp":1499702608,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 2:\n\n(3 comments)"},{"timestamp":1499776172,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 5:\n\n(3 comments)\n\nYou have added the new lost commands list, but it is not very obvious what the overall intent is for that list. Can you add  a comment explaining the purpose of the list and the overall expected behavior."},{"timestamp":1499872119,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 6."},{"timestamp":1499872274,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 6:\n\n(2 comments)\n\n\u003e (3 comments)\n \u003e \n \u003e You have added the new lost commands list, but it is not very\n \u003e obvious what the overall intent is for that list. Can you add  a\n \u003e comment explaining the purpose of the list and the overall expected\n \u003e behavior.\n\nI added block comments and also added a paragraph to the theory statement."},{"timestamp":1499872426,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 6: Code-Review+1"},{"timestamp":1499892266,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 6:\n\n(3 comments)"},{"timestamp":1499937980,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 7."},{"timestamp":1499938070,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 6:\n\n(3 comments)"},{"timestamp":1499950945,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1499956380,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1499957531,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1500381554,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 7: Integration-Approval+1"},{"timestamp":1500384657,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 8: Patch Set 7 was rebased"},{"timestamp":1500385276,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 9: Commit message was updated."},{"timestamp":1500385361,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Hans Rosenfeld"}],"currentPatchSet":{"number":"9","revision":"272c95e54418d329ab3aa41d6b1b658f174e152c","parents":["3cac99397e8917b53900c46594b5897fa8d68f4a"],"ref":"refs/changes/55/2155/9","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1500385276,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499950945,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499956380,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499957531,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1500381554,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1500385361,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":232,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":4,"deletions":-1}],"sizeInsertions":236,"sizeDeletions":-211},"patchSets":[{"number":"1","revision":"b45d9194faed4c614aff9fd6c90b2202c3e922a4","parents":["f3136887e7aec52d049065aac3dc3e348e19a111"],"ref":"refs/changes/55/2155/1","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1498566202,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":845,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Are there any locks that need to be held when this is called?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":845,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I agree with Jason on this question. It looks like a mutex is being held when this function is called, but it seems like different mutexes are being held by different callers or when a cmd is being submitted."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":845,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Yes, the nq_mutex of the queue pair needs to be held. I added an assert to make sure it is."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":845,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"There is really only one, and thats nq_mutex. I noticed that I originally had that in nvme_wait_cmd() around the call to nvme_unqueue_cmd(), and it got lost in a mismerge. That code path is rarely taken so I didn\u0027t notice in testing."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1258,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"This comment should be fixed since the function is void now"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1258,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1936,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Although it is consistent with how you\u0027ve done this elsewhere, this goto seems jarring at this point."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1936,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"I\u0027d rather leave that as is for consistency, and to make the live easier for whoever may one day add more code before the fail: label."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":154,"deletions":-200},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":155,"sizeDeletions":-201},{"number":"2","revision":"ee3da23f37c4d1473517fefaa7e7743c18a085ac","parents":["c32e1cc45e5ba8b332b47f5e552617952fcd79e1"],"ref":"refs/changes/55/2155/2","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1498657785,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498658252,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1498666887,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1247,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So if the command hasn\u0027t aborted successfully doesn\u0027t that mean that it\u0027s still processing? In that case, is it safe to return zero? Won\u0027t we then be waiting in the place of other callers for a command completion that may never happen? Or is the theory that an abort command would only ever fail because it raced with a command completion?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1247,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"From what I\u0027ve seen in my tests an unsuccessful abort means that the command to be aborted has indeed completed normally. The only commands running long enough to be aborted in my tests were FORMAT commands on the Intel P3700 (taking a few seconds), and they always completed successfully and the abort command completed with error.\n\nWhat I\u0027ve concluded from those tests (which I understand are a bit limited) is that the command that is aborted completes first (one way or another), and the abort itself completes then.\n\nSo that means that an unsuccessful abort isn\u0027t an error that we have to recover from in any way. Logging it makes sense, though, as we also log the original command timeout triggering the abort."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1247,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So, I think based on reading the spec, we should not assume anything about the aborted command in this case, but we can assume that the abort command is free. I think the only important thing that callers realize is that we could possibly still spin on the parent command in some way, which I think is what Jason was trying to point out."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1311,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Can we please make sure that the lock order is written up in the big theory statement?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1311,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"I added a short section about locking to the theory statement. Please let me know if this is still unclear or needs to be more detailed."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1312,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"If we\u0027re here, that means that we had a command that has failed to timeout and have declared the device dead or alternatively, we have an abort command that didn\u0027t return 0 for some reason. If we\u0027re coming here because nvme_cmd_abort() failed, do we have a guarantee that the device is marked dead?\n\nIn general, I think there\u0027s a challenge with the assumptions that this is making on what it\u0027s safe to still do with the memory and contents of the command at this state. If the command abort failed, we need to assume that we can\u0027t do anything with the underlying command that we tried to abort or in this case, the command in question, because it may have timed out.\n\nHowever, the device may still be operating and injecting interrupts at us which we\u0027ll keep operating on. In that case, if we\u0027ve removed this entry our logical view of the queue, but we haven\u0027t removed it from the hardware\u0027s view of the queue. Couldn\u0027t the hardware decide to complete the command and inject an interrupt to us? I know that there\u0027s the check for the device being marked dead in the interrupt now to try and deal with this.\n\nHowever, that doesn\u0027t solve the whole problem. Whether we\u0027re here because this is the abort command or another command, that failed to abort, it\u0027s not safe to return to callers with that command and let them free the command because the DMA memory is still owned by the card itself. We could very easily free the memory, resuse it, and then get it DMA\u0027d to by the device.\n\nAll that said, I may be confusing the way that everything is rigged up here and missing something."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1312,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"This is indeed a bit tricky. We end up here because the command timed out _and_ the controller reported fatal status, or we got errors from the register or DMA handles, or the abort timed out as well.\n\nIn any of those cases the controller is declared dead, which is checked in the interrupt handler and this way also prevents interrupts from being processed. This means that we can safely remove the command from the queue pair as nothing else will ever try to touch it again.\n\nThe DMA thing may indeed be an issue. The device may be dead from a driver perspective, but who knows what is it still doing. The risk of it writing to the DMA memory some time later is there. Perhaps we should just leak the DMA memory, then?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1312,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"We must not hand back the DMA engine to the OS until we\u0027ve reset the device. Since we don\u0027t do that now, I\u0027d suggest having a global list of commands that we\u0027ve leaked so we can inspect that in the dump."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1312,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1865,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Small style nit, but generally I think we end up having the continuation be for the arguments rather than the whole expression unless it doesn\u0027t fit."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1865,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1883,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So, can we add some kind of comment here further describing how if nvme_set_features fails, that it\u0027s still safe to trust the values in nq.r? It seems very weird to me that we would trust the data and update *nqueues on failure."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1883,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"You\u0027re right, it\u0027s pointless to update *nqueues on failure, even though it\u0027s ignored by the caller. Fixed."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2537,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"It\u0027s incorrect to claim an interrupt when using fixed interrupts (INTx) without checking if we can use it in some way."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2537,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Oh right. I think the right thing to do would be to always assume it\u0027s not meant for us?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2537,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I think that\u0027s probably the safest option. Unfortunately it may actually have been for us, but if it ends up unclaimed, the system will handle that which is better than us mistakenly claiming it."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":158,"deletions":-203},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":159,"sizeDeletions":-204},{"number":"3","revision":"3171749517f8906bf77739e3ce287325594286b0","parents":["c32e1cc45e5ba8b332b47f5e552617952fcd79e1"],"ref":"refs/changes/55/2155/3","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1499169463,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":157,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Nit: run"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":157,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":868,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Any chance of using ASSERT3S here instead?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":868,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":872,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Similar as above, but ASSERT3U?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":872,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":876,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Similar, but ASSERT3P?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":876,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":877,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Same as above"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":877,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":878,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Similar, but ASSERT3S"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":878,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1320,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Is there any chance some error could leave us blocked here forever?"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1320,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"The abort only completes after the command to be aborted completed (at least thats what I observed), so I don\u0027t think there is a chance that we could be blocked forever."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1320,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So, one thing that the spec says is implementation defined is when the abort will return when say there\u0027s an error. So hopefully the only reason we ever have for this failing is because the command already finished and not because of a logic bug somewhere that causes us to have a bad entry. Otherwise we will end up spinning here forever."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":1320,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"The only reason I can see for us spinning there forever is:\nWe have a very long running command, for which our timeouts are too low, and we abort it. The device returns the abort successful and within our timeouts, but it still doesn\u0027t return the original command.\n\nThat would seem like a firmware bug. Perhaps I could make this another cv_timedwait() and assume the controller is dead if it fails, even though that seems quite drastic. But it would completely avoid the risk of spinning here forever."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":186,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":187,"sizeDeletions":-211},{"number":"4","revision":"63b9ba3e79a76e56472e146a8694547f11503cff","parents":["c32e1cc45e5ba8b332b47f5e552617952fcd79e1"],"ref":"refs/changes/55/2155/4","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1499267501,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499365397,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499369099,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":163,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"We should probably state that it\u0027s an error to have more than one nc_mutex at any given time. If that\u0027s not the case, then we have to think about the lock ordering more."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":163,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"There is only one situation where we hold two nc_mutex\u0027es, and thats during command abortion. We still hold the nc_mutex of the command to be aborted (to make sure it\u0027s not completed behind our backs), and of course we\u0027ll also hold the nc_mutex of the abort command up until we start waiting for its completion.\n\nAs nc_mutex is only used in waiting for admin commands I see no reason why two of them should be held at the same time."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":163,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":163,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"OK, then we should make sure that that is written up here and the ordering such that we can\u0027t ever end up deadlocking."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":163,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":186,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":187,"sizeDeletions":-211},{"number":"5","revision":"2ccb61e31cd34a0d3695184ad567624644f82f29","parents":["c32e1cc45e5ba8b332b47f5e552617952fcd79e1"],"ref":"refs/changes/55/2155/5","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1499702549,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":510,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I don\u0027t see anyplace where you take things off this list, so I am not sure what the right behavior is supposed to be here."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":510,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Commands are never taken off that list. The list exists to keep references to any commands using DMA memory that were involved in timeouts leading to the driver to fault the device."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":830,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"I\u0027m not clear how this comment and code are related to the nvm_lost_cmds list."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":830,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"I thought it\u0027s much easier and cleaner to put this check here rather than to all callers of nvme_admin_cmd(). If a command was timed out and was put on the nvme_lost_cmds list, then we really don\u0027t want to free ist -- the whole point is that we keep it around so its DMA memory can\u0027t be reused."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":209,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":4,"deletions":-1}],"sizeInsertions":213,"sizeDeletions":-211},{"number":"6","revision":"3427c2c1e827dac2326198ca6557f1f9cce1519a","parents":["c32e1cc45e5ba8b332b47f5e552617952fcd79e1"],"ref":"refs/changes/55/2155/6","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1499872119,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499872426,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":840,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"We should use list_link_active(9F) for this rather than encoding the implementation."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":840,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2600,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Returning UNCLAIMED should only happen if we\u0027re using INTx. For non-INTx it is appropriate to claim it."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2600,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":227,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":4,"deletions":-1}],"sizeInsertions":231,"sizeDeletions":-211},{"number":"7","revision":"b4db4e684ba034f9a4d19a0b456e913f95c2afe2","parents":["c32e1cc45e5ba8b332b47f5e552617952fcd79e1"],"ref":"refs/changes/55/2155/7","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1499937980,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499957531,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499950945,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1500381554,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499956380,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":232,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":4,"deletions":-1}],"sizeInsertions":236,"sizeDeletions":-211},{"number":"8","revision":"c339d61a2b495de1fff499a48480054ada95d5fb","parents":["3cac99397e8917b53900c46594b5897fa8d68f4a"],"ref":"refs/changes/55/2155/8","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1500384657,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499957531,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499950945,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1500381554,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499956380,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":232,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":4,"deletions":-1}],"sizeInsertions":236,"sizeDeletions":-211},{"number":"9","revision":"272c95e54418d329ab3aa41d6b1b658f174e152c","parents":["3cac99397e8917b53900c46594b5897fa8d68f4a"],"ref":"refs/changes/55/2155/9","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1500385276,"author":{"name":"Hans Rosenfeld","email":"rosenfeld@grumpf.hope-2000.org","username":""},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499957531,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499950945,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1500381554,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1499956380,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"SUBM","value":"1","grantedOn":1500385361,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":11,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":232,"deletions":-210},{"file":"usr/src/uts/common/io/nvme/nvme_var.h","type":"MODIFIED","insertions":4,"deletions":-1}],"sizeInsertions":236,"sizeDeletions":-211}],"allReviewers":[{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}]}