commit 53ae82c911d03445b95b7b400cf556fa9cf8718b (refs/changes/78/2678/1)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2017-09-28T18:22:36+02:00 (2 years ago)
    
    SAPI-291 Update moray-client to latest

diff --git a/etc/config.coal.json b/etc/config.coal.json
index ca94146..8e481a4 100644
--- a/etc/config.coal.json
+++ b/etc/config.coal.json
@@ -6,8 +6,10 @@
 	"mode": "proto",
 	"datacenter_name": "coal",
 	"moray": {
-		"host": "10.99.99.13",
-		"port": 2020
+		"srvDomain": "10.99.99.13",
+		"cueballOptions": {
+			"resolvers": ["10.99.99.11"]
+		}
 	},
 	"vmapi": {
 		"url": "http://10.99.99.23"
diff --git a/lib/server/attributes.js b/lib/server/attributes.js
index 856fd33..7231f70 100644
--- a/lib/server/attributes.js
+++ b/lib/server/attributes.js
@@ -28,6 +28,7 @@ var assert = require('assert-plus');
 var async = require('async');
 var util = require('util');
 var vasync = require('vasync');
+var verror = require('verror');
 
 var sprintf = require('util').format;
 
@@ -285,7 +286,8 @@ function generateZoneParams(uuid, cb) {
             if (objs.instance.type === 'agent') {
                 log.info('no generateZoneParams for %s, ' +
                     'service type agent', uuid);
-                return (subcb(null, {}));
+                subcb(null, {});
+                return;
             }
 
             var attributes = assembleAttributes(
@@ -310,16 +312,18 @@ function generateZoneParams(uuid, cb) {
             params.customer_metadata =
                 sanitizeMetadata(attributes.metadata);
 
-            if (!params.networks)
-                return (subcb(null, params));
+            if (!params.networks) {
+                subcb(null, params);
+                return;
+            }
 
             resolveNetworks.call(self, params.networks, params.owner_uuid,
                 function (err, uuids) {
-                if (err &&
-                    err.name !== 'UnsupportedOperationError') {
-                    log.error(err, 'failed to resolve ' +
-                        'networks');
-                    return (subcb(err));
+                if (err && !verror.hasCauseWithName(
+                    err, 'UnsupportedOperationError')) {
+                        log.error(err, 'failed to resolve networks');
+                        subcb(err);
+                        return;
                 }
 
                 /*
@@ -328,16 +332,17 @@ function generateZoneParams(uuid, cb) {
                  * UUIDs.  In proto mode, the zone won't
                  * actually be created.
                  */
-                if (err &&
-                    err.name === 'UnsupportedOperationError') {
-                    assert.ok(self.model.proto_mode);
-                    return (subcb(null, params));
+                if (err && verror.hasCauseWithName(
+                    err, 'UnsupportedOperationError')) {
+                        assert.ok(self.model.proto_mode);
+                        subcb(null, params);
+                        return;
                 }
 
                 delete params.networks;
                 params.networks = uuids;
 
-                return (subcb(null, params));
+                subcb(null, params);
             });
         }
     ], cb);
@@ -437,7 +442,7 @@ function validParams(params, cb) {
     resolveNetworks.call(self, params.networks, params.owner_uuid,
         function (err) {
         if (err &&
-            err.name === 'UnsupportedOperationError' &&
+            verror.hasCauseWithName(err, 'UnsupportedOperationError') &&
             self.model.proto_mode) {
             log.info('skipping validation of ' +
                 'network names in proto mode');
diff --git a/lib/server/endpoints/applications.js b/lib/server/endpoints/applications.js
index 9253b5c..e5ad74d 100644
--- a/lib/server/endpoints/applications.js
+++ b/lib/server/endpoints/applications.js
@@ -5,15 +5,15 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
  * lib/endpoints/applications.js: SAPI endpoints to manage applications
  */
 
-var assert = require('assert-plus');
 var restify = require('restify');
+var verror = require('verror');
 
 var validateParams =
     require('./validation').validateParams;
@@ -49,14 +49,14 @@ Applications.create = function (req, res, next) {
     model.createApplication(params, function (err, app) {
         if (err) {
             model.log.error(err, 'failed to create application');
-            return (next(err));
+            (next(err));
+            return;
         }
 
         res.send(app);
-        return (next());
+        (next());
+        return;
     });
-
-    return (null);
 };
 
 Applications.list = function (req, res, next) {
@@ -139,16 +139,18 @@ Applications.del = function (req, res, next) {
     var model = this.model;
 
     model.delApplication(req.params.uuid, function (err) {
-        if (err && err.name === 'ObjectNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'ObjectNotFoundError')) {
             res.send(404);
-            return (next());
+            next();
+            return;
         } else if (err) {
             model.log.error(err, 'failed to delete application');
-            return (next(err));
+            next(err);
+            return;
         }
 
         res.send(204);
-        return (next());
+        next();
     });
 };
 
diff --git a/lib/server/endpoints/history.js b/lib/server/endpoints/history.js
index c50c0e1..2ee9d98 100644
--- a/lib/server/endpoints/history.js
+++ b/lib/server/endpoints/history.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -13,8 +13,8 @@
  */
 
 var util = require('util');
-var assert = require('assert-plus');
 var restify = require('restify');
+var verror = require('verror');
 
 var validateParams =
     require('./validation').validateParams;
@@ -132,16 +132,18 @@ History.del = function (req, res, next) {
     var model = this.model;
 
     model.delHistory(req.params.uuid, function (err) {
-        if (err && err.name === 'ObjectNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'ObjectNotFoundError')) {
             res.send(404);
-            return (next());
+            next();
+            return;
         } else if (err) {
             model.log.error(err, 'failed to delete history item');
-            return (next(err));
+            next(err);
+            return;
         }
 
         res.send(204);
-        return (next());
+        next();
     });
 };
 
diff --git a/lib/server/endpoints/instances.js b/lib/server/endpoints/instances.js
index b479630..4f9cf43 100644
--- a/lib/server/endpoints/instances.js
+++ b/lib/server/endpoints/instances.js
@@ -5,16 +5,15 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
  * lib/server/endpoints/instances.js: SAPI endpoints to manage instances
  */
 
-var assert = require('assert-plus');
-var async = require('async');
 var restify = require('restify');
+var verror = require('verror');
 
 var semverGter = require('../../common/util').semverGter;
 var validateParams =
@@ -251,16 +250,18 @@ Instances.del = function (req, res, next) {
     req.connection.setTimeout(10 * 60 * 1000);
 
     model.delInstance(req.params.uuid, function (err) {
-        if (err && err.name === 'ObjectNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'ObjectNotFoundError')) {
             res.send(404);
-            return (next());
+            next();
+            return;
         } else if (err) {
             model.log.error(err, 'failed to delete instance');
-            return (next(err));
+            next(err);
+            return;
         }
 
         res.send(204);
-        return (next());
+        next();
     });
 };
 
diff --git a/lib/server/endpoints/manifests.js b/lib/server/endpoints/manifests.js
index 321ca68..6a2d62c 100644
--- a/lib/server/endpoints/manifests.js
+++ b/lib/server/endpoints/manifests.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -13,9 +13,9 @@
  *     manifests
  */
 
-var assert = require('assert-plus');
 var restify = require('restify');
 var semver = require('semver');
+var verror = require('verror');
 
 var validateParams =
     require('./validation').validateParams;
@@ -100,16 +100,18 @@ Manifests.del = function (req, res, next) {
     var model = this.model;
 
     model.delManifest(req.params.uuid, function (err) {
-        if (err && err.name === 'ObjectNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'ObjectNotFoundError')) {
             res.send(404);
-            return (next());
+            next();
+            return;
         } else if (err) {
             model.log.error(err, 'failed to delete manifest');
-            return (next(err));
+            next(err);
+            return;
         }
 
         res.send(204);
-        return (next());
+        next();
     });
 };
 
diff --git a/lib/server/endpoints/services.js b/lib/server/endpoints/services.js
index f01fa5d..46a6b82 100644
--- a/lib/server/endpoints/services.js
+++ b/lib/server/endpoints/services.js
@@ -5,15 +5,15 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
  * lib/server/endpoints/services.js: SAPI endpoints to manage services
  */
 
-var assert = require('assert-plus');
 var restify = require('restify');
+var verror = require('verror');
 
 var semverGter = require('../../common/util').semverGter;
 var validateParams =
@@ -86,14 +86,13 @@ Services.create = function (req, res, next) {
     model.createService(params, function (err, svc) {
         if (err) {
             model.log.error(err, 'failed to create service');
-            return (next(err));
+            next(err);
+            return;
         }
 
         res.send(serialize(svc, req.getVersion()));
-        return (next());
+        next();
     });
-
-    return (null);
 };
 
 Services.list = function (req, res, next) {
@@ -183,16 +182,18 @@ Services.del = function (req, res, next) {
     var model = this.model;
 
     model.delService(req.params.uuid, function (err) {
-        if (err && err.name === 'ObjectNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'ObjectNotFoundError')) {
             res.send(404);
-            return (next());
+            next();
+            return;
         } else if (err) {
             model.log.error(err, 'failed to delete service');
-            return (next(err));
+            next(err);
+            return;
         }
 
         res.send(204);
-        return (next());
+        next();
     });
 };
 
diff --git a/lib/server/model.js b/lib/server/model.js
index 05c4e35..b706659 100644
--- a/lib/server/model.js
+++ b/lib/server/model.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -15,13 +15,12 @@
 
 var async = require('async');
 var assert = require('assert-plus');
-var fs = require('fs');
-var jsprim = require('jsprim');
 var once = require('once');
 var restify = require('restify');
 var sdc = require('sdc-clients');
 var node_uuid = require('node-uuid');
 var vasync = require('vasync');
+var verror = require('verror');
 
 var Attributes = require('./attributes');
 var VMAPIPlus = require('./vmapiplus');
@@ -60,7 +59,8 @@ function Model(config) {
     assert.object(config.log, 'config.log');
 
     assert.object(config.moray, 'config.moray');
-    assert.string(config.moray.host, 'config.moray.host');
+    assert.optionalString(config.moray.host, 'config.moray.host');
+    assert.optionalString(config.moray.srvDomain, 'config.moray.srvDomain');
 
     assert.object(config.cnapi, 'config.cnapi');
     assert.string(config.cnapi.url, 'config.cnapi.url');
@@ -304,7 +304,7 @@ function updateObject(bucket, uuid, change, action, tries, cb) {
 
             self.stor.putObject(bucket, uuid, obj, opts,
                 function (err) {
-                if (err && err.name === 'EtagConflictError' &&
+                if (err && verror.hasCauseWithName(err, 'EtagConflictError') &&
                     tries > 0) {
                     log.info('put of %s failed with ' +
                         'etag conflict; retrying',
@@ -318,13 +318,14 @@ function updateObject(bucket, uuid, change, action, tries, cb) {
                     setTimeout(updateObject.bind(self,
                         bucket, uuid, change, action,
                         tries - 1, cb), 1000);
-                    return (null);
+                    return;
                 } else if (err) {
                     log.error(err, 'failed to put object');
-                    return (subcb(err));
+                    subcb(err);
+                    return;
                 }
 
-                return (subcb(null));
+                subcb();
             });
         },
         function (subcb) {
@@ -335,12 +336,13 @@ function updateObject(bucket, uuid, change, action, tries, cb) {
     ], function (err, obj) {
         if (err) {
             log.error(err, 'failed to update object');
-            return (cb(err));
+            cb(err);
+            return;
         }
 
         log.debug('updated object %s', uuid);
 
-        return (cb(null, obj));
+        cb(null, obj);
     });
 }
 
@@ -1085,26 +1087,27 @@ function verifyZoneExists(uuid, cb) {
     if (self.proto_mode) {
         log.info('skipping verification of %s since in proto mode',
             uuid);
-        return (cb(null, true));
+        cb(null, true);
+        return;
     }
 
     log.info('checking to ensure zone %s exists', uuid);
 
     self.vmapi.getVm({ uuid: uuid }, function (err, vm) {
-        if (err && err.name === 'ResourceNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'ResourceNotFoundError')) {
             var msg = sprintf('no such zone: %s', uuid);
             log.warn(msg);
-            return (cb(new restify.InvalidArgumentError(msg)));
+            cb(new restify.InvalidArgumentError(msg));
+            return;
         } else if (err) {
             log.error(err, 'failed to get VM %s', uuid);
-            return (cb(err));
+            cb(err);
+            return;
         }
 
         log.info('VM %s exists', uuid);
-        return (cb(null, vm));
+        cb(null, vm);
     });
-
-    return (null);
 }
 
 function provisionZone(params, opts, cb) {
@@ -1118,26 +1121,26 @@ function provisionZone(params, opts, cb) {
     if (self.proto_mode) {
         log.info('skipping provision of %s since in proto mode',
             params.uuid);
-        return (cb(null));
+        cb(null);
+        return;
     }
 
     log.info('checking to see if %s already exists', params.uuid);
 
     self.vmapi.getVm({ uuid: params.uuid }, function (err, vm) {
-        if (err && err.name === 'ResourceNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'ResourceNotFoundError')) {
             log.debug({ params: params, opts: opts }, 'provisioning zone');
             self.vmapiplus.createVm(params, opts, cb);
             return;
         } else if (err) {
             log.error(err, 'failed to get zone %s', params.uuid);
-            return (cb(err));
+            cb(err);
+            return;
         }
 
-        log.info('zone %s already exists', params.uuid);
-        return (cb(null));
+        log.info('zone %s already exists', vm.uuid);
+        cb(null);
     });
-
-    return (null);
 }
 
 
diff --git a/lib/server/stor/moray.js b/lib/server/stor/moray.js
index 8884ad7..4e5f355 100644
--- a/lib/server/stor/moray.js
+++ b/lib/server/stor/moray.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -20,6 +20,7 @@ var LRU = require('lru-cache');
 var moray = require('moray');
 var once = require('once');
 var vasync = require('vasync');
+var verror = require('verror');
 
 var mod_errors = require('../errors');
 
@@ -57,7 +58,8 @@ MorayStorage.prototype.init = function init(cb) {
     setTimeout(function initTimeout() {
         if (!cb.called) {
             log.error('MorayStorage init timeout.');
-            return (cb());
+            cb();
+            return;
         }
     }, 10000);
 
@@ -68,20 +70,27 @@ MorayStorage.prototype.init = function init(cb) {
         cb();
     });
 
-    config.port = config.port ? parseInt(config.port, 10) : 2020;
-
-    var retry = config.retry || {};
-    this.local = moray.createClient({
-        connectTimeout: config.connectTimeout,
-        log: log,
-        host: config.host,
-        port: config.port,
-        retry: (config.retry === false ? false : {
-            retries: retry.retries || Infinity,
-            minTimeout: retry.minTimeout || 1000,
-            maxTimeout: retry.maxTimeout || 60000
-        })
-    });
+    var localMorayCfg;
+
+    if (config.srvDomain) {
+        localMorayCfg = {
+            srvDomain: config.srvDomain,
+            log: log
+        };
+
+        if (config.cueballOptions) {
+            localMorayCfg.cueballOptions = config.cueballOptions;
+        }
+    } else {
+        config.port = config.port ? parseInt(config.port, 10) : 2020;
+        localMorayCfg = {
+            port: config.port,
+            host: config.host,
+            log: log
+        };
+    }
+
+    this.local = moray.createClient(localMorayCfg);
 
     init_barrier.start('local_moray');
 
@@ -95,12 +104,7 @@ MorayStorage.prototype.init = function init(cb) {
             connectTimeout: config.connectTimeout,
             log: log,
             host: config.master_host,
-            port: config.master_port,
-            retry: (config.retry === false ? false : {
-                retries: retry.retries || Infinity,
-                minTimeout: retry.minTimeout || 1000,
-                maxTimeout: retry.maxTimeout || 60000
-            })
+            port: config.master_port
         });
 
         log.info('initializing master moray client');
@@ -121,8 +125,10 @@ MorayStorage.prototype.init = function init(cb) {
             'moray: setting up');
 
         initBuckets.call(self, client, function (err) {
-            if (err)
-                return (cb(err));
+            if (err) {
+                cb(err);
+                return;
+            }
 
             log.info({ tag: tag, client: client.toString() },
                 'moray: all buckets created');
@@ -289,20 +295,22 @@ function createBucket(client, name, cfg, cb) {
         if (!err) {
             log.info({ client: client.toString() },
                 'moray: bucket %s already exists', name);
-            return (cb(null));
+            cb(null);
+            return;
         }
 
-        if (err && err.name !== 'BucketNotFoundError') {
+        if (err && verror.hasCauseWithName(err, 'BucketNotFoundError')) {
             log.error(err, 'failed to get bucket %s', name);
-            return (cb(err));
+            cb(err);
+            return;
         }
 
         client.createBucket(name, cfg, function (suberr) {
             if (suberr) {
                 log.error(suberr,
                     'failed to create bucket %s', name);
-                return (cb(
-                    new Error('failed to create bucket')));
+                cb(new Error('failed to create bucket'));
+                return;
             }
 
             log.info({ client: client.toString() },
@@ -317,10 +325,8 @@ function createBucket(client, name, cfg, cb) {
                 length: function (item) { return (1); }
             });
 
-            return (cb(null));
+            cb();
         });
-
-        return (null);
     });
 }
 
@@ -361,7 +367,7 @@ function putObject(bucket, uuid, obj, opts, cb) {
     client.putObject(bucket, uuid, obj, opts, function (err, res) {
         if (err) {
             log.error(err, 'failed to put object %s', uuid);
-            return (cb(err));
+            cb(err);
         }
 
         var record = {};
@@ -427,21 +433,25 @@ MorayStorage.prototype.delObject = function delObject(bucket, uuid, cb) {
             log.debug('deleting object %s from cache', uuid);
             self.object_caches[bucket].del(uuid);
         }
-        cb(null);
+        cb();
     };
 
     this.local.delObject(bucket, uuid, function (err) {
-        if (err && err.name !== 'ObjectNotFoundError')
-            return (cb(err));
+        if (err && verror.hasCauseWithName(err, 'ObjectNotFoundError')) {
+            cb(err);
+            return;
+        }
 
-        if (!err)
-            return (onFinish());
+        if (!err) {
+            onFinish();
+            return;
+        }
 
-        assert.ok(err && err.name === 'ObjectNotFoundError');
+        assert.ok(err && verror.hasCauseWithName(err, 'ObjectNotFoundError'));
 
         if (!self.master) {
-            return (cb(new mod_errors.ObjectNotFoundError(
-                err.message)));
+            cb(new mod_errors.ObjectNotFoundError(err.message));
+            return;
         }
 
         log.debug('deleting object %s from master', uuid);
@@ -452,14 +462,17 @@ MorayStorage.prototype.delObject = function delObject(bucket, uuid, cb) {
          */
         self.master.delObject(bucket, uuid, function (suberr) {
             if (suberr &&
-                suberr.name !== 'ObjectNotFoundError')
-                return (cb(suberr));
+                verror.hasCauseWithName(suberr, 'ObjectNotFoundError')) {
+                cb(suberr);
+                return;
+            }
 
-            if (!suberr)
-                return (onFinish());
+            if (!suberr) {
+                onFinish();
+                return;
+            }
 
-            return (cb(new mod_errors.ObjectNotFoundError(
-                err.message)));
+            cb(new mod_errors.ObjectNotFoundError(err.message));
         });
     });
 };
diff --git a/lib/server/stor/moray_local.js b/lib/server/stor/moray_local.js
index e0a7b30..7dc57ae 100644
--- a/lib/server/stor/moray_local.js
+++ b/lib/server/stor/moray_local.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -15,6 +15,8 @@
 
 var assert = require('assert-plus');
 var vasync = require('vasync');
+var verror = require('verror');
+
 var util = require('../../common/util');
 
 module.exports = MorayLocalStorage;
@@ -55,7 +57,10 @@ function is500(err) {
     while (err && err.cause && err.cause()) {
         err = err.cause();
     }
-    return (names.indexOf(err.name) !== -1);
+
+    return (names.some(function (name) {
+        return (verror.hasCauseWithName(err, name));
+    }));
 }
 
 function findHistory(uuid, cb) {
diff --git a/package.json b/package.json
index 2c22464..c789b8c 100644
--- a/package.json
+++ b/package.json
@@ -15,7 +15,7 @@
     "ldapjs": "git+https://github.com/mcavage/node-ldapjs.git#0a88109",
     "lru-cache": "2.3.0",
     "mkdirp": "0.3.4",
-    "moray": "git+https://github.com/joyent/node-moray.git#b84ef0e",
+    "moray": "3.2.1",
     "node-uuid": "1.4.0",
     "once": "1.3.0",
     "optimist": "0.3.5",
@@ -23,8 +23,8 @@
     "sdc-clients": "9.2.0",
     "semver": "3.0.1",
     "sprintf-js": "0.0.7",
-    "vasync": "1.5.0",
-    "verror": "^1.6.1"
+    "vasync": "^1.6.3",
+    "verror": "^1.10.0"
   },
   "devDependencies": {
     "nodeunit": "0.9.1",
diff --git a/sapi_manifests/sapi/template b/sapi_manifests/sapi/template
index 7765f83..3aea439 100644
--- a/sapi_manifests/sapi/template
+++ b/sapi_manifests/sapi/template
@@ -5,8 +5,10 @@
 	},
 	"datacenter_name": "{{{datacenter_name}}}",
 	"moray": {
-		"host": "{{{MORAY_SERVICE}}}",
-		"port": 2020,
+		"srvDomain": "{{MORAY_SERVICE}}",
+		"cueballOptions": {
+			"resolvers": ["{{{BINDER_SERVICE}}}"]
+		},
 		"master_host": "{{{MASTER_MORAY_IP}}}",
 		"master_port": "{{{MASTER_MORAY_PORT}}}"
 	},
