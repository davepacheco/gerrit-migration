From 749c6adbdc46c56ad765fdee15f149d266e0e6f2 Mon Sep 17 00:00:00 2001
From: Ryan Zezeski <rpz@joyent.com>
Date: Tue, 25 Jul 2017 10:03:07 -0600
Subject: [PATCH] OS-6245 Incorrect comments in DLS Rx functions Reviewed by:
 Robert Mustacchi <rm@joyent.com> Approved by: Robert Mustacchi
 <rm@joyent.com>

---
 usr/src/uts/common/io/dls/dls_link.c | 32 +++++++++++++---------------
 1 file changed, 15 insertions(+), 17 deletions(-)

diff --git a/usr/src/uts/common/io/dls/dls_link.c b/usr/src/uts/common/io/dls/dls_link.c
index 4a735d870e..6c318b9752 100644
--- a/usr/src/uts/common/io/dls/dls_link.c
+++ b/usr/src/uts/common/io/dls/dls_link.c
@@ -21,7 +21,7 @@
 /*
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright 2015 Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 /*
@@ -47,7 +47,7 @@ static uint_t		i_dls_link_count;
 #define		IMPL_HASHSZ	67	/* prime */
 
 /*
- * Construct a hash key encompassing both DLSAP value and VLAN idenitifier.
+ * Construct a hash key from the DLSAP value.
  */
 #define	MAKE_KEY(_sap)						\
 	((mod_hash_key_t)(uintptr_t)((_sap) << VLAN_ID_SIZE))
@@ -266,10 +266,10 @@ i_dls_head_free(dls_head_t *dhp)
 }
 
 /*
- * Try to send mp up to the streams of the given sap and vid. Return B_TRUE
- * if this message is sent to any streams.
- * Note that this function will copy the message chain and the original
- * mp will remain valid after this function
+ * Try to send mp up to the streams of the given sap. Return B_TRUE if
+ * this message is sent to any streams. Note that this function will
+ * copy the message chain and the original mp will remain valid after
+ * this function
  */
 static uint_t
 i_dls_link_rx_func(dls_link_t *dlp, mac_resource_handle_t mrh,
@@ -287,17 +287,16 @@ i_dls_link_rx_func(dls_link_t *dlp, mac_resource_handle_t mrh,
 	int		rval;
 
 	/*
-	 * Construct a hash key from the VLAN identifier and the
-	 * DLSAP that represents dld_str_t in promiscuous mode.
+	 * Construct a hash key from the DLSAP.
 	 */
 	key = MAKE_KEY(sap);
 
 	/*
-	 * Search the hash table for dld_str_t eligible to receive
-	 * a packet chain for this DLSAP/VLAN combination. The mod hash's
-	 * internal lock serializes find/insert/remove from the mod hash list.
-	 * Incrementing the dh_ref (while holding the mod hash lock) ensures
-	 * dls_link_remove will wait for the upcall to finish.
+	 * Search the hash table for dld_str_t eligible to receive a
+	 * packet chain for this DLSAP. The mod hash's internal lock
+	 * serializes find/insert/remove from the mod hash list.
+	 * Incrementing the dh_ref (while holding the mod hash lock)
+	 * ensures dls_link_remove will wait for the upcall to finish.
 	 */
 	if (mod_hash_find_cb_rval(hash, key, (mod_hash_val_t *)&dhp,
 	    i_dls_head_hold, &rval) != 0 || (rval != 0)) {
@@ -411,14 +410,13 @@ i_dls_link_rx(void *arg, mac_resource_handle_t mrh, mblk_t *mp,
 		}
 
 		/*
-		 * Construct a hash key from the VLAN identifier and the
-		 * DLSAP.
+		 * Construct a hash key from the DLSAP.
 		 */
 		key = MAKE_KEY(mhi.mhi_bindsap);
 
 		/*
-		 * Search the has table for dld_str_t eligible to receive
-		 * a packet chain for this DLSAP/VLAN combination.
+		 * Search the hash table for dld_str_t eligible to receive
+		 * a packet chain for this DLSAP.
 		 */
 		if (mod_hash_find_cb_rval(hash, key, (mod_hash_val_t *)&dhp,
 		    i_dls_head_hold, &rval) != 0 || (rval != 0)) {
-- 
2.21.0

