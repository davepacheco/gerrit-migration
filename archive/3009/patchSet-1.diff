From 15a7092d3db06fff46ecaf30f781055ee4993d58 Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Wed, 29 Nov 2017 19:23:57 +0000
Subject: [PATCH] joyent/v8plus#20 ACF_NOREPLY results in use after free

---
 package.json  | 2 +-
 v8plus_csup.c | 8 ++++++--
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/package.json b/package.json
index ce6d62f..bfc40cc 100644
--- a/package.json
+++ b/package.json
@@ -2,7 +2,7 @@
 	"author": "Keith 'The Mayor' Wesolowski <keith.wesolowski@joyent.com>",
 	"name": "v8plus",
 	"description": "utility environment for writing addons in C",
-	"version": "1.0.2",
+	"version": "1.0.3",
 	"contributors": [
 		"Joshua M. Clulow <jmc@joyent.com>",
 		"Bryan Cantrill <bryan@joyent.com>"
diff --git a/v8plus_csup.c b/v8plus_csup.c
index 486a067..62843e5 100644
--- a/v8plus_csup.c
+++ b/v8plus_csup.c
@@ -51,6 +51,7 @@ static STAILQ_HEAD(v8plus_callq_head, v8plus_async_call) _v8plus_callq =
 static pthread_mutex_t _v8plus_callq_mtx;
 static pthread_t _v8plus_uv_event_thread;
 static uv_async_t _v8plus_uv_async;
+static char _v8plus_panic_buf[1024];
 
 static int _v8plus_eventloop_refcount;
 
@@ -184,9 +185,9 @@ v8plus_async_callback(uv_async_t *async __UNUSED, int status __UNUSED)
 			 * on a reply.  Just free the call structure and move
 			 * on.
 			 */
-			free(vac);
 			if (vac->vac_lp != NULL)
 				nvlist_free((nvlist_t *)vac->vac_lp);
+			free(vac);
 			continue;
 		}
 
@@ -221,6 +222,7 @@ v8plus_async_callback(uv_async_t *async __UNUSED, int status __UNUSED)
 static nvlist_t *
 v8plus_cross_thread_call(v8plus_async_call_t *vac)
 {
+	boolean_t noreply = (vac->vac_flags & ACF_NOREPLY);
 	int err;
 
 	/*
@@ -254,7 +256,7 @@ v8plus_cross_thread_call(v8plus_async_call_t *vac)
 	}
 	uv_async_send(&_v8plus_uv_async);
 
-	if (vac->vac_flags & ACF_NOREPLY) {
+	if (noreply) {
 		/*
 		 * The caller does not care about the reply, and has allocated
 		 * the v8plus_async_call_t structure from the heap.  The
@@ -559,6 +561,8 @@ static void __NORETURN
 v8plus_vpanic(const char *fmt, va_list ap)
 {
 	(void) fprintf(stderr, "v8plus: ");
+	(void) vsnprintf(_v8plus_panic_buf, sizeof (_v8plus_panic_buf),
+	    fmt, ap);
 	(void) vfprintf(stderr, fmt, ap);
 	(void) fflush(stderr);
 	abort();
-- 
2.21.0

