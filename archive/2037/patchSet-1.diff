commit d5cb5ce13a4e4c1771beb20fd292d729b19a890a (refs/changes/37/2037/1)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2017-05-31T05:33:40+00:00 (2 years, 4 months ago)
    
    FWAPI-282 FWAPI should dump core when an uncaught error is thrown

diff --git a/Makefile b/Makefile
index 4f9a6f1..ab2c976 100644
--- a/Makefile
+++ b/Makefile
@@ -36,7 +36,7 @@ ESLINT_CONF	= tools/eslint.node.conf
 ESLINT_FILES	= $(JS_FILES)
 JSON_FILES	:= config.json.sample package.json
 JSSTYLE_FILES	 = $(JS_FILES)
-JSSTYLE_FLAGS    = -o indent=4,doxygen,unparenthesized-return=0
+JSSTYLE_FLAGS    = -o indent=2,doxygen,unparenthesized-return=0,strict-indent=true
 SMF_MANIFESTS_IN = smf/manifests/fwapi.xml.in
 
 
diff --git a/lib/app.js b/lib/app.js
index 8c89297..8de2746 100644
--- a/lib/app.js
+++ b/lib/app.js
@@ -113,6 +113,7 @@ function FWAPI(opts) {
     var server = this.server = restify.createServer({
         log: opts.log,
         name: 'SmartDC Firewall API',
+        handleUncaughtExceptions: false,
         version: VERSION
     });
     server.use(restify.acceptParser(server.acceptable));
diff --git a/lib/update.js b/lib/update.js
index 5ef72ac..92ea130 100644
--- a/lib/update.js
+++ b/lib/update.js
@@ -15,7 +15,7 @@
 'use strict';
 
 var assert = require('assert-plus');
-var stream = require('fast-stream');
+var stream = require('fast-messages');
 var util = require('util');
 var uuid = require('node-uuid');
 
diff --git a/package.json b/package.json
index bd5dd63..19bead5 100644
--- a/package.json
+++ b/package.json
@@ -9,18 +9,18 @@
     "faucet": "0.0.1",
     "istanbul": "0.4.5",
     "eslint": "2.13.1",
-    "eslint-plugin-joyent": "1.0.1",
+    "eslint-plugin-joyent": "1.1.0",
     "mockery": "1.4.0"
   },
   "dependencies": {
     "assert-plus": "1.0.0",
     "async": "0.1",
-    "bunyan": "1.2.3",
+    "bunyan": "1.8.10",
     "clone": "0.1",
     "cmdln": "1.1.1",
     "effluent-logger": "git+https://github.com/joshwilsdon/effluent-logger.git#d662f161a07f94045ad2afb45442931511c40e51",
     "extsprintf": "1.0.2",
-    "fast-stream": "git+https://github.com/joyent/sdc-fast-stream.git#893d59d",
+    "fast-messages": "1.0.1",
     "fwrule": "1.4.0",
     "jsprim": "1.3.1",
     "moray": "2.0.1",
@@ -29,7 +29,7 @@
     "node-uuid": "1.2.0",
     "sdc-clients": "9.5.0",
     "ufds": "1.2.0",
-    "restify": "git+https://github.com/mcavage/node-restify.git#0d7b4ba",
+    "restify": "4.3.0",
     "trace-event": "1.3.0",
     "vasync": "1.6.4",
     "verror": "1.9.0",
diff --git a/test/integration/invalid.test.js b/test/integration/invalid.test.js
index 27872fa..16f3444 100644
--- a/test/integration/invalid.test.js
+++ b/test/integration/invalid.test.js
@@ -100,7 +100,7 @@ function createPayload(ruleTxt) {
 
     [ 'rule: bad ICMP type',
       createPayload('FROM all vms TO ip 192.168.5.4 BLOCK ICMP TYPE 260'),
-      [ mod_err.invalidParam('rule', 'ICMP type \"260\" is invalid') ] ]
+      [ mod_err.invalidParam('rule', 'ICMP type "260" is invalid') ] ]
 ].forEach(function (cfg) {
     test('Invalid rule: ' + cfg[0], function (t) {
         mod_rule.create(t, {
