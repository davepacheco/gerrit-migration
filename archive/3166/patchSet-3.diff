commit d79bf5f4d8ae80bab3b8e87506ac88e895190ecf (refs/changes/66/3166/3)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2018-01-07T20:13:56+00:00 (1 year, 9 months ago)
    
    MANTA-3536 registrar broken by MANTA-3223

diff --git a/README.md b/README.md
index 050e749..f8065af 100644
--- a/README.md
+++ b/README.md
@@ -188,9 +188,9 @@ not recommended.
 **zookeeper:** Service discovery records are maintained in a
 ZooKeeper cluster.  The `"zookeeper"` top-level property describes how to reach
 that cluster.  This should be a configuration block appropriate for
-[node-zkplus](http://github.com/mcavage/node-zkplus).  See that project for
-details, but there's an example below that includes `"timeout"` and `"servers"`
-properties.
+[node-zkstream](http://github.com/joyent/node-zkstream).  See that project for
+details, but there's an example below that includes `"sessionTimeout"` and
+`"servers"` properties.
 
 **registration:** The `"registration"` object describes the service discovery
 records that will be inserted into ZooKeeper.  These control the DNS names that
@@ -320,10 +320,10 @@ record.  This is not common.
         },
         "adminIp": "172.27.10.72",
         "zookeeper": {
-            "timeout": 60000,
-            "servers": [ { "host": "172.27.10.35", "port": 2181 },
-                         { "host": "172.27.10.32", "port": 2181 },
-                         { "host": "172.27.10.33", "port": 2181 } ]
+            "sessionTimeout": 60000,
+            "servers": [ { "address": "172.27.10.35", "port": 2181 },
+                         { "address": "172.27.10.32", "port": 2181 },
+                         { "address": "172.27.10.33", "port": 2181 } ]
         }
     }
 
@@ -392,10 +392,10 @@ Let's augment the configuration above to specify a service record:
         },
         "adminIp": "172.27.10.72",
         "zookeeper": {
-            "timeout": 60000,
-            "servers": [ { "host": "172.27.10.35", "port": 2181 },
-                         { "host": "172.27.10.32", "port": 2181 },
-                         { "host": "172.27.10.33", "port": 2181 } ]
+            "sessionTimeout": 60000,
+            "servers": [ { "address": "172.27.10.35", "port": 2181 },
+                         { "address": "172.27.10.32", "port": 2181 },
+                         { "address": "172.27.10.33", "port": 2181 } ]
         }
     }
 
diff --git a/etc/config.coal.json b/etc/config.coal.json
index 4be4862..e7e3cb8 100644
--- a/etc/config.coal.json
+++ b/etc/config.coal.json
@@ -9,10 +9,10 @@
     "zookeeper": {
         "connectTimeout": 1000,
         "servers": [ {
-            "host": "10.99.99.11",
+            "address": "10.99.99.11",
             "port": 2181
         } ],
-        "timeout": 6000
+        "sessionTimeout": 30000
     },
     "maxAttempts": 10
 }
diff --git a/main.js b/main.js
index de2da5f..4567ea1 100644
--- a/main.js
+++ b/main.js
@@ -78,6 +78,29 @@ function configure(argv) {
     assert.object(cfg.zookeeper, 'config.zookeeper');
     assert.optionalObject(cfg.healthCheck, 'config.healthCheck');
 
+    /*
+     * MANTA-3536 - if registrar is passed a config that specifies the ip
+     * address of zookeeper server(s) with the 'host' field, copy the value into
+     * a new 'address' field, which is what node-zkstream expects.
+     */
+    var servers = cfg.zookeeper.servers;
+
+    if (servers) {
+        servers.forEach(function (server) {
+            if (!server.address) {
+                LOG.warn('read configuration that specifies zookeeper ' +
+                    'servers without an \'address\' field.');
+                server.address = server.host;
+            }
+        });
+    } else {
+        if (!cfg.zookeeper.address) {
+            LOG.warn('read configuration that specifies zookeeper ' +
+                'servers without an \'address\' field.');
+            cfg.zookeeper.address = cfg.zookeeper.host;
+        }
+    }
+
     cfg.zookeeper.log = LOG;
 
     return (cfg);
