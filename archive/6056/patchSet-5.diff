From 2deb822d7f584df9a3a81f29cabb6592c7859482 Mon Sep 17 00:00:00 2001
From: Kody Kantor <kody@kkantor.com>
Date: Fri, 17 May 2019 14:28:00 +0000
Subject: [PATCH] joyent/pgstatsmon#25 distinguish between vacuum and vacuum to
 prevent wraparound joyent/pgstatsmon#26 vacuum progress function should use
 SETOF Reviewed by: Isaac Davis <isaac.davis@joyent.com> Approved by: Isaac
 Davis <isaac.davis@joyent.com>

---
 CHANGES.md     |  2 ++
 lib/dbinit.js  | 16 +++++++++++++++-
 lib/queries.js |  4 ++--
 3 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index e9821ae..4570399 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -1,6 +1,8 @@
 # pgstatsmon Changelog
 
 ## Not yet released
+* #26 vacuum progress function should use SETOF
+* #25 distinguish between vacuum and vacuum to prevent wraparound
 * #24 track vacuum start time
 
 ## 1.1.0
diff --git a/lib/dbinit.js b/lib/dbinit.js
index e86ac70..c90793a 100644
--- a/lib/dbinit.js
+++ b/lib/dbinit.js
@@ -236,6 +236,7 @@ function create_progress_vacuum_function(args, callback) {
 	query = 'DROP FUNCTION IF EXISTS get_stat_progress_vacuum(); '
 	+ 'CREATE FUNCTION public.get_stat_progress_vacuum('
 	+ 'out relname name, '
+	+ 'out vacuum_mode text, '
 	+ 'out query_start double precision, '
 	+ 'out phase bigint, '
 	+ 'out heap_blks_total bigint, '
@@ -243,9 +244,22 @@ function create_progress_vacuum_function(args, callback) {
 	+ 'out heap_blks_vacuumed bigint, '
 	+ 'out index_vacuum_count bigint, '
 	+ 'out max_dead_tuples bigint, '
-	+ 'out num_dead_tuples bigint)'
+	+ 'out num_dead_tuples bigint) '
+	+ ' RETURNS SETOF record'
 	+ ' AS $$'
 	+ ' SELECT T.relname AS relname,'
+	+ '	  CASE'
+	+ '	    WHEN'
+	+ '	      A.query ~ \'^autovacuum.*(to prevent wraparound)\''
+	+ '	    THEN \'aggressive_autovacuum\''
+	+ '	    WHEN'
+	+ '	      A.query ~ \'^autovacuum\''
+	+ '	    THEN \'autovacuum\''
+	+ '	    WHEN'
+	+ '	      A.query ~* \'^vacuum\''
+	+ '	    THEN \'manual_vacuum\''
+	+ '	    ELSE \'unknown\''
+	+ '	  END AS vacuum_mode,'
 	+ '	  EXTRACT (EPOCH FROM A.query_start) AS query_start,'
 	+ '	  S.param1+1 AS phase,'
 	+ '	  S.param2 AS heap_blks_total,'
diff --git a/lib/queries.js b/lib/queries.js
index 52e5187..b6419ae 100644
--- a/lib/queries.js
+++ b/lib/queries.js
@@ -318,7 +318,7 @@ function getQueries(config) {
 	}, {
 	     'name': 'pg_stat_progress_vacuum',
 	     'statkey': 'relname',
-	     'metadata': [ 'relname'],
+	     'metadata': [ 'relname', 'vacuum_mode' ],
 	     'sql': [
 	         'SELECT * FROM get_stat_progress_vacuum()'
 	     ].join('\n'),
@@ -327,7 +327,7 @@ function getQueries(config) {
 	           'vacuum', 'expires': true, 'expiryPeriod': expiryPeriod },
 	         { 'attr': 'query_start', 'help': 'unix epoch timestamp of ' +
 	           'the vacuum began', 'expires': true,
-		    'expiryPeriod': expiryPeriod },
+	           'expiryPeriod': expiryPeriod },
 	         { 'attr': 'heap_blks_total', 'help': 'total number of heap ' +
 	           'blocks in the table as of the beginning of the scan',
 	           'expires': true, 'expiryPeriod': expiryPeriod },
-- 
2.21.0

