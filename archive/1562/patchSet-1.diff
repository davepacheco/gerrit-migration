From c3ac35f0adb3b56241ededdd98b5caf0725aa413 Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Thu, 23 Feb 2017 14:26:17 -0800
Subject: [PATCH] TOOLS-1705 sdcadm: creating another moray instance fails with
 Error('TODO')

---
 lib/sdcadm.js | 35 +++++++++++++++++++++++++++--------
 1 file changed, 27 insertions(+), 8 deletions(-)

diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 8387569..2cca542 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -3641,7 +3641,16 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
                     checkMinPlatform(ch.instance, ch);
                 } else if (ch.type === 'create-instance') {
                     server = serverFromUuidOrHostname[ch.server];
-                    throw new Error('TODO');
+                    if (server.current_platform <
+                        self.config.vmMinPlatform)
+                    {
+                        errs.push(new errors.UpdateError(format(
+                            'insufficient platform for a new service "%s" ' +
+                            'instance on server "%s" (current ' +
+                            'platform is "%s", require minimum "%s")',
+                            ch.service.name, ch.server, server.current_platform,
+                            self.config.vmMinPlatform)));
+                    }
                 }
             }
             if (errs.length) {
@@ -3657,10 +3666,10 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
             if (options.forceBypassMinImage) {
                 return next();
             }
-            var ch, server;
+            var ch;
             var errs = [];
 
-            function checkMinImageBuidDate(ins) {
+            function checkMinImageBuildDate(ins) {
                 var minImg = self.config.svcMinImages[ins.service];
                 if (!ins.version) {
                     var msg = format('Unknown image ' +
@@ -3692,6 +3701,12 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
             for (var i = 0; i < changes.length; i++) {
                 ch = changes[i];
                 if (ch.service.type !== 'vm') {
+                    /*
+                     * We only exclude other service types because we know all
+                     * entries in `svcMinImages` are VM services, and because
+                     * current agent image "version" field values often don't
+                     * have the build timestamp for comparison.
+                     */
                     continue;
                 }
                 if (ch.type === 'update-service') {
@@ -3703,16 +3718,20 @@ SdcAdm.prototype.genUpdatePlan = function genUpdatePlan(options, cb) {
                         if (!self.config.svcMinImages[inst.service]) {
                             continue;
                         }
-                        checkMinImageBuidDate(inst);
+                        checkMinImageBuildDate(inst);
                     }
                 } else if (ch.type === 'update-instance') {
                     if (self.config.svcMinImages[ch.instance.service]) {
-                        checkMinImageBuidDate(ch.instance);
+                        checkMinImageBuildDate(ch.instance);
                     }
                 } else if (ch.type === 'create-instance') {
-                    server = serverFromUuidOrHostname[ch.server];
-                    console.log(server); // shut make check up about unused var
-                    throw new Error('TODO');
+                    if (self.config.svcMinImages[ch.service.name]) {
+                        checkMinImageBuildDate({
+                            service: ch.service.name,
+                            version: ch.image.version,
+                            image: ch.image.uuid
+                        });
+                    }
                 }
 
             }
-- 
2.21.0

