From 49f0ce8f740ec1da3708c650e721bdcfce6dcbc5 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Wed, 7 Sep 2016 17:45:39 -0700
Subject: [PATCH] joyent/node-cueball#17 should only resort to calling
 .destroy() on connections in error

---
 lib/pool.js | 31 +++++++++++++++++++++++++++++--
 1 file changed, 29 insertions(+), 2 deletions(-)

diff --git a/lib/pool.js b/lib/pool.js
index b40e967..00c1066 100644
--- a/lib/pool.js
+++ b/lib/pool.js
@@ -235,6 +235,33 @@ ConnectionFSM.prototype.state_connect = function (on, once, timeout) {
 	});
 };
 
+ConnectionFSM.prototype.state_closing = function (on, once, timeout) {
+	var self = this;
+	/*
+	 * If we have a .end() method on the connection, try to close it
+	 * nicely, only resorting to .destroy() if this times out or
+	 * produces an error.
+	 */
+	if (this.cf_conn.end) {
+		timeout(this.cf_timeout, function () {
+			self.gotoState('closed');
+		});
+		on(this.cf_conn, 'close', function () {
+			self.cf_conn = undefined;
+			self.gotoState('closed');
+		});
+		on(this.cf_conn, 'error', function () {
+			self.gotoState('closed');
+		});
+		on(this.cf_conn, 'timeout', function () {
+			self.gotoState('closed');
+		});
+		this.cf_conn.end();
+	} else {
+		this.gotoState('closed');
+	}
+};
+
 ConnectionFSM.prototype.state_closed = function () {
 	if (this.cf_conn && this.cf_conn.destroy)
 		this.cf_conn.destroy();
@@ -332,7 +359,7 @@ ConnectionFSM.prototype.state_idle = function (on, once, timeout) {
 	if (this.cf_closeAfter === true) {
 		this.cf_closeAfter = false;
 		this.cf_lastError = undefined;
-		this.gotoState('closed');
+		this.gotoState('closing');
 		return;
 	}
 
@@ -350,7 +377,7 @@ ConnectionFSM.prototype.state_idle = function (on, once, timeout) {
 		self.gotoState('error');
 	});
 	once(this, 'closeAsserted', function () {
-		self.gotoState('closed');
+		self.gotoState('closing');
 	});
 	if (this.cf_checkTimeout !== undefined) {
 		var now = new Date();
-- 
2.21.0

