From f61a41b893d2698b4eb4d4933dfd921745371f10 Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Tue, 6 Nov 2018 00:04:01 +0000
Subject: [PATCH] MANTA-4014 store snaplinkDisabled flag as ufds attribute

---
 etc/config.coal.json           |   1 -
 etc/config.json                | 139 +++++++++++++++++++++++++++++++++
 lib/audit.js                   |  19 ++---
 lib/common.js                  |  41 ++--------
 lib/link.js                    |  10 +--
 lib/obj.js                     |  18 ++---
 sapi_manifests/muskie/template |   5 --
 7 files changed, 162 insertions(+), 71 deletions(-)
 create mode 100644 etc/config.json

diff --git a/etc/config.coal.json b/etc/config.coal.json
index dff7e7d..9b075c4 100644
--- a/etc/config.coal.json
+++ b/etc/config.coal.json
@@ -27,7 +27,6 @@
         "maxTranslationCacheSize": 1000,
         "maxTranslationCacheAgeMs": 300
     },
-    "accountsSnaplinksDisabled": [],
     "moray": {
         "morayOptions": {
             "srvDomain": "electric-moray.coal.joyent.us",
diff --git a/etc/config.json b/etc/config.json
new file mode 100644
index 0000000..86e74d6
--- /dev/null
+++ b/etc/config.json
@@ -0,0 +1,139 @@
+{
+    "clearProxyPort": 9080,
+    "bunyan": {
+        "level": "debug",
+        "syslog": {
+            "facility": "local0",
+            "type": "udp"
+        }
+    },
+    "throttle": {
+        "enabled": false,
+        "concurrency": 32,
+        "queueTolerance": 32,
+        "reapInterval": 5000
+    },
+    "maxObjectCopies": 6,
+    "maxRequestAge": 600,
+    "enableMPU": true,
+    "multipartUpload": {
+        "prefixDirLen": 1
+    },
+    "numWorkers": 4,
+    "port": 8080,
+    "auth": {
+        "url": "http://authcache.orbit.example.com",
+        "maxAuthCacheSize": 1000,
+        "maxAuthCacheAgeMs": 300,
+        "maxTranslationCacheSize": 1000,
+        "maxTranslationCacheAgeMs": 300
+    },
+    "moray": {
+        "morayOptions": {
+            "srvDomain": "electric-moray.orbit.example.com",
+            "cueballOptions": {
+                "resolvers": [ "nameservice.orbit.example.com" ]
+            }
+        }
+    },
+    "marlin": {
+	"moray": {
+            "srvDomain": "1.moray.orbit.example.com",
+            "cueballOptions": {
+                "resolvers": [ "nameservice.orbit.example.com" ]
+            }
+	},
+    "jobCache": {
+            "size": 500,
+            "expiry": 30
+        }
+    },
+    "cueballHttpAgent": {
+        "resolvers": ["nameservice.orbit.example.com"],
+        "initialDomains": [
+          "authcache.orbit.example.com"
+        ],
+        "ping": "/ping",
+        "pingInterval": 60000,
+        "tcpKeepAliveInitialDelay": 10000,
+        "spares": 8,
+        "maximum": 200,
+        "recovery": {
+          "default": {
+            "timeout": 2000,
+            "maxTimeout": 10000,
+            "retries": 5,
+            "delay": 250,
+            "maxDelay": 2000
+          },
+          "dns_srv": {
+            "timeout": 2000,
+            "maxTimeout": 10000,
+            "retries": 1,
+            "delay": 0,
+            "maxDelay": 0
+          }
+        }
+    },
+    "medusa": {
+        "moray": {
+          "srvDomain": "electric-moray.orbit.example.com",
+          "cueballOptions": {
+              "resolvers": ["nameservice.orbit.example.com"]
+          }
+        },
+        "reflector": {
+            "host": "medusa.orbit.example.com",
+            "port": 8381
+        }
+    },
+    "storage": {
+        "lag": 86400,
+        "multiDC": false,
+        "moray": {
+            "srvDomain": "1.moray.orbit.example.com",
+            "cueballOptions": {
+                "resolvers": ["nameservice.orbit.example.com"]
+            }
+        },
+	    "defaultMaxStreamingSizeMB": 5120
+    },
+    "sharkConfig": {
+        "connectTimeout": 2000,
+        "maxTimeout": 10000,
+        "delay": 250,
+        "maxIdleTime": 10000,
+        "maxClients": 50,
+        "ping": "/ping",
+        "pingInterval": 14400000,
+        "retry": {
+          "retries": 2
+        },
+        "spares": 2,
+        "maximum": 2000,
+        "resolvers": ["nameservice.orbit.example.com"]
+    },
+    "authToken": {
+        "salt": "A31551338D38BD4A",
+        "key": "9DC84553DB4A1BB2142BBCB4E045A506",
+        "iv": "DDF9D45016B283D2B2AA07C5A93C80D2",
+        "maxAge": 604800000
+    },
+    "ufds": {
+        "url": "ldaps://ufds.orbit.example.com",
+        "bindDN": "cn=root",
+        "bindPassword": "secret",
+        "cache": {
+            "size": 5000,
+            "expiry": 60
+        },
+        "maxConnections": 1,
+        "retry": {
+            "initialDelay": 1000
+        },
+        "clientTimeout": 120000
+    },
+    "datacenter": "orbit.example.com",
+    "server_uuid": "f5c4d446-7639-11e7-8ded-c35deca5b8cc",
+    "zone_uuid": "dbb27e00-7639-11e7-bdd5-53e6dcb96c7f"
+}
diff --git a/lib/audit.js b/lib/audit.js
index fcfee03..50489ce 100644
--- a/lib/audit.js
+++ b/lib/audit.js
@@ -309,18 +309,13 @@ function auditLogger(options) {
              * the deleted object was processed by the accelerated deletion
              * pipeline.
              */
-            if (owner) {
-                common.checkAccountSnaplinksEnabled(req, owner,
-                    function (enabled) {
-                    if (md.type === 'object' && md.contentLength > 0) {
-                        var storage = md.contentLength * md.sharks.length;
-                        labels = {
-                            accelerated_gc: !enabled,
-                            owner: owner
-                        };
-                        deleted_data_counter.add(storage, labels);
-                    }
-                });
+            if (owner && md.type === 'object' && md.contentLength > 0) {
+                var storage = md.contentLength * md.sharks.length;
+                labels = {
+                    accelerated_gc: req.owner.snaplinks_disabled,
+                    owner: owner
+                };
+                deleted_data_counter.add(storage, labels);
             }
         }
 
diff --git a/lib/common.js b/lib/common.js
index 5df530b..6547f65 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -325,38 +325,12 @@ function ensureEntryExists(req, res, next) {
 }
 
 
-/*
- * This function is used to abstract away the logic involved in checking
- * that a particular account uuid has snaplinks enabled. Today, it is
- * called in the `ensureSnaplinksEnabled` method defined in this module
- * and in the putlinkHandler chain to verify that the source object (the
- * object being linked to) is not owned by an account for which snaplinks
- * are enabled.
- */
-function checkAccountSnaplinksEnabled(req, uuid, next) {
-    for (var i = 0; i < req.accountsSnaplinksDisabled.length; i++) {
-        var account = req.accountsSnaplinksDisabled[i];
-        assert.string(account.uuid, 'account.uuid');
-        assert.string(req.caller.account.uuid, 'req.caller.account.uuid');
-
-        if (account.uuid === uuid) {
-            next(false);
-            return;
-        }
-    }
-    next(true);
-}
-
-
 function ensureSnaplinksEnabled(req, res, next) {
-    checkAccountSnaplinksEnabled(req, req.caller.account.uuid,
-        function (enabled) {
-        if (!enabled) {
-            next(new SnaplinksDisabledError('snaplinks have been disabled ' +
-                'for this account'));
-            return;
-        }
-    });
+    if (req.owner.snaplinks_disabled) {
+        next(new SnaplinksDisabledError('snaplinks have been disabled ' +
+            'for this account'));
+        return;
+    }
     next();
 }
 
@@ -953,8 +927,6 @@ module.exports = {
         return (getMetadata);
     },
 
-    checkAccountSnaplinksEnabled: checkAccountSnaplinksEnabled,
-
     setupHandler: function (options, clients) {
         assert.object(options, 'options');
         assert.object(options.jobCache, 'options.jobCache');
@@ -973,8 +945,6 @@ module.exports = {
         assert.object(options.multipartUpload, 'options.multipartUpload');
         assert.number(options.multipartUpload.prefixDirLen,
             'options.multipartUpload.prefixDirLen');
-        assert.arrayOfObject(options.accountsSnaplinksDisabled,
-            'options.accountsSnaplinksDisabled');
 
         function setup(req, res, next) {
             req.config = options;
@@ -1008,7 +978,6 @@ module.exports = {
                     1024 * 1024,
                 mpuPrefixDirLen: options.multipartUpload.prefixDirLen
             };
-            req.accountsSnaplinksDisabled = options.accountsSnaplinksDisabled;
 
             var _opts = {
                 account: req.owner.account,
diff --git a/lib/link.js b/lib/link.js
index 537577c..67c9718 100644
--- a/lib/link.js
+++ b/lib/link.js
@@ -126,10 +126,8 @@ function resolveOwner(req, res, next) {
 
 function ensureSourceOwnerSnaplinksEnabled(req, res, next) {
     var log = req.log;
-    var uuid = req.link.owner.account.uuid;
 
-    common.checkAccountSnaplinksEnabled(req, uuid, function (enabled) {
-        if (!enabled) {
+    if (req.link.owner.snaplinks_disabled) {
             log.debug({
                 link: req.link,
                 owner: req.link.owner
@@ -138,9 +136,9 @@ function ensureSourceOwnerSnaplinksEnabled(req, res, next) {
             next(new SnaplinksDisabledError('owner of source object has ' +
                 'snaplinks disabled'));
             return;
-        }
-        next();
-    });
+    }
+
+    next();
 }
 
 
diff --git a/lib/obj.js b/lib/obj.js
index 7d82bb9..720397c 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -931,17 +931,13 @@ function deletePointer(req, res, next) {
      * Let the delete mechanism know that snaplinks are disabled for this
      * account, so it can treat the object differently
      */
-    var uuid = req.owner.account.uuid;
-    common.checkAccountSnaplinksEnabled(req, uuid, function (enabled) {
-        // Pass in a special header if they are not enabled
-        if (!enabled) {
-            log.debug({
-                link: req.link,
-                owner: req.owner.account
-            }, 'deletePointer: owner of object has snaplinks disabled');
-            opts.snapLinksDisabled = true;
-        }
-    });
+    if (req.owner.snaplinks_disabled) {
+        log.debug({
+            link: req.link,
+            owner: req.owner.account
+        }, 'deletePointer: owner of object has snaplinks disabled');
+        opts.snapLinksDisabled = true;
+    }
     req.moray.delMetadata(opts, function (err) {
         if (err) {
             next(err);
diff --git a/sapi_manifests/muskie/template b/sapi_manifests/muskie/template
index 1d5827f..43083bb 100644
--- a/sapi_manifests/muskie/template
+++ b/sapi_manifests/muskie/template
@@ -38,11 +38,6 @@
     "maxTranslationCacheSize": 1000,
     "maxTranslationCacheAgeMs": 300000
   },
-  "accountsSnaplinksDisabled": [ {{#ACCOUNTS_SNAPLINKS_DISABLED}}
-    {
-      "uuid": "{{uuid}}"
-    }{{^last}},{{/last}}{{/ACCOUNTS_SNAPLINKS_DISABLED}}
-  ],
   "moray": {
     "morayOptions": {
         "srvDomain": "{{ELECTRIC_MORAY}}",
-- 
2.17.2 (Apple Git-113)

