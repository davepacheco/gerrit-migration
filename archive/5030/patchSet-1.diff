From 94798a63aab62295077e6290ac9767bcd71f12a8 Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Tue, 6 Nov 2018 00:04:01 +0000
Subject: [PATCH] MANTA-4014 store snaplinkDisabled flag as ufds attribute

---
 lib/audit.js  | 19 +++++++------------
 lib/common.js | 38 +++++---------------------------------
 lib/link.js   | 10 ++++------
 lib/obj.js    | 18 +++++++-----------
 4 files changed, 23 insertions(+), 62 deletions(-)

diff --git a/lib/audit.js b/lib/audit.js
index fcfee03..b2707bd 100644
--- a/lib/audit.js
+++ b/lib/audit.js
@@ -309,18 +309,13 @@ function auditLogger(options) {
              * the deleted object was processed by the accelerated deletion
              * pipeline.
              */
-            if (owner) {
-                common.checkAccountSnaplinksEnabled(req, owner,
-                    function (enabled) {
-                    if (md.type === 'object' && md.contentLength > 0) {
-                        var storage = md.contentLength * md.sharks.length;
-                        labels = {
-                            accelerated_gc: !enabled,
-                            owner: owner
-                        };
-                        deleted_data_counter.add(storage, labels);
-                    }
-                });
+            if (owner && md.type === 'object' && md.contentLength > 0) {
+                var storage = md.contentLength * md.sharks.length;
+                labels = {
+                    accelerated_gc: req.owner.snaplinksDisabled,
+                    owner: owner
+                };
+                deleted_data_counter.add(storage, labels);
             }
         }
 
diff --git a/lib/common.js b/lib/common.js
index 5df530b..f223642 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -325,38 +325,12 @@ function ensureEntryExists(req, res, next) {
 }
 
 
-/*
- * This function is used to abstract away the logic involved in checking
- * that a particular account uuid has snaplinks enabled. Today, it is
- * called in the `ensureSnaplinksEnabled` method defined in this module
- * and in the putlinkHandler chain to verify that the source object (the
- * object being linked to) is not owned by an account for which snaplinks
- * are enabled.
- */
-function checkAccountSnaplinksEnabled(req, uuid, next) {
-    for (var i = 0; i < req.accountsSnaplinksDisabled.length; i++) {
-        var account = req.accountsSnaplinksDisabled[i];
-        assert.string(account.uuid, 'account.uuid');
-        assert.string(req.caller.account.uuid, 'req.caller.account.uuid');
-
-        if (account.uuid === uuid) {
-            next(false);
-            return;
-        }
-    }
-    next(true);
-}
-
-
 function ensureSnaplinksEnabled(req, res, next) {
-    checkAccountSnaplinksEnabled(req, req.caller.account.uuid,
-        function (enabled) {
-        if (!enabled) {
-            next(new SnaplinksDisabledError('snaplinks have been disabled ' +
-                'for this account'));
-            return;
-        }
-    });
+    if (req.owner.snaplinksDisabled) {
+        next(new SnaplinksDisabledError('snaplinks have been disabled ' +
+            'for this account'));
+        return;
+    }
     next();
 }
 
@@ -953,8 +927,6 @@ module.exports = {
         return (getMetadata);
     },
 
-    checkAccountSnaplinksEnabled: checkAccountSnaplinksEnabled,
-
     setupHandler: function (options, clients) {
         assert.object(options, 'options');
         assert.object(options.jobCache, 'options.jobCache');
diff --git a/lib/link.js b/lib/link.js
index 537577c..aaffe74 100644
--- a/lib/link.js
+++ b/lib/link.js
@@ -126,10 +126,8 @@ function resolveOwner(req, res, next) {
 
 function ensureSourceOwnerSnaplinksEnabled(req, res, next) {
     var log = req.log;
-    var uuid = req.link.owner.account.uuid;
 
-    common.checkAccountSnaplinksEnabled(req, uuid, function (enabled) {
-        if (!enabled) {
+    if (req.owner.snaplinksDisabled) {
             log.debug({
                 link: req.link,
                 owner: req.link.owner
@@ -138,9 +136,9 @@ function ensureSourceOwnerSnaplinksEnabled(req, res, next) {
             next(new SnaplinksDisabledError('owner of source object has ' +
                 'snaplinks disabled'));
             return;
-        }
-        next();
-    });
+    }
+
+    next();
 }
 
 
diff --git a/lib/obj.js b/lib/obj.js
index 7d82bb9..40dea84 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -931,17 +931,13 @@ function deletePointer(req, res, next) {
      * Let the delete mechanism know that snaplinks are disabled for this
      * account, so it can treat the object differently
      */
-    var uuid = req.owner.account.uuid;
-    common.checkAccountSnaplinksEnabled(req, uuid, function (enabled) {
-        // Pass in a special header if they are not enabled
-        if (!enabled) {
-            log.debug({
-                link: req.link,
-                owner: req.owner.account
-            }, 'deletePointer: owner of object has snaplinks disabled');
-            opts.snapLinksDisabled = true;
-        }
-    });
+    if (req.owner.snaplinksDisabled) {
+        log.debug({
+            link: req.link,
+            owner: req.owner.account
+        }, 'deletePointer: owner of object has snaplinks disabled');
+        opts.snapLinksDisabled = true;
+    }
     req.moray.delMetadata(opts, function (err) {
         if (err) {
             next(err);
-- 
2.21.0

