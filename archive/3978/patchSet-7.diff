commit 9969fb2747e1a29f12ded893b93dc83f1f1a2a09 (refs/changes/78/3978/7)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2018-06-27T17:38:32-07:00 (1 year, 3 months ago)
    
    TRITON-52 x-DC image copy

diff --git a/docs/index.md b/docs/index.md
index c50ab7e..0a5de6d 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -918,6 +918,11 @@ The set of supported *API versions* is given in the ping endpoint:
 
 The section describes API changes in CloudAPI versions.
 
+## 9.2.0
+
+- Added new ImportImageFromDatacenter API method to allow an image to be copied
+  to another datacenter in the same cloud.
+
 ## 9.1.0
 
 - Added [Clone Image](#CloneImage). This can be used to create a your own copy
@@ -3837,6 +3842,97 @@ or
     }
 
 
+## ImportImageFromDatacenter (POST /:login/images?action=import-from-datacenter)
+
+This will copy the image with `id` from the source `datacenter` into this
+datacenter. The copied image will retain all fields (e.g. id, published_at) as
+the original image. All incremental images in the origin chain will also be
+copied.
+
+You can use [triton datacenters](#ListDatacenters) to view the list of
+datacenter names in the current cloud.
+
+### Inputs
+
+The following query parameters are required, these parameters will be used to
+identify the image to be copied.
+
+**Field**  | **Type** | **Description**
+---------  | -------- | ---------------
+datacenter | String   | The datacenter name from where the image will be copied from.
+id         | UUID     | The id of the image to be copied.
+
+### Returns
+
+On success, an Image object is returned. See [GetImage](#GetImage) for the
+fields that are returned in the image object.
+
+### Errors
+
+For general errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
+Some typical and specific errors for this endpoint:
+
+**Error Code** | **Description**
+-------------- | ---------------
+ImageUuidAlreadyExistsError | The image with `id` already exists in this datacenter.
+UnauthorizedError | If the source image is owned by the admin.
+OriginIsNotActiveError | If one of the incremental (origin) images is not activated.
+
+
+<!-- TODO: integrate these errors into the general table above -->
+
+### Example CLI Command
+
+    $ triton image copy 7eed8e50-e452-428d-9131-bf056aa911bd us-west-1
+
+#### Example HTTP Request
+
+    POST /my/images?action=import-from-datacenter&datacenter=us-west-1&id=7eed8e50-e452-428d-9131-bf056aa911bd HTTP/1.1
+    Authorization: ...
+    Host: api.example.com
+    Accept: application/json
+    Api-Version: ~9
+
+    {}
+
+#### Example HTTP Response
+
+    HTTP/1.1 201 Created
+    Content-Type: application/json
+    Content-Length: 125
+    Access-Control-Allow-Origin: *
+    Access-Control-Allow-Headers: Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, Api-Version, Response-Time
+    Access-Control-Allow-Methods: GET, HEAD, POST
+    Access-Control-Expose-Headers: Api-Version, Request-Id, Response-Time
+    Connection: Keep-Alive
+    Content-MD5: 2sEZ45LmhRiretMPn5sqVA==
+    Date: Thu, 21 Jan 2018 08:00:09 GMT
+    Server: Joyent Triton 9.1.0
+    Api-Version: 9.0.0
+    Request-Id: 49af23b0-f952-11e2-8f2c-fff0ec35f4ce
+    Response-Time: 460
+
+    {
+      "id": "7eed8e50-e452-428d-9131-bf056aa911bd",
+      "name": "myimage",
+      "version": "1.4.0",
+      "os": "smartos",
+      "requirements": {},
+      "type": "zone-dataset",
+      "description": "A custom image used to test stuff.",
+      "files": [
+        {
+          "compression": "gzip",
+          "sha1": "3bebb6ae2cdb26eef20cfb30fdc4a00a059a0b7b",
+          "size": 110742036
+        }
+      ],
+      "published_at": "2015-02-28T10:50:42Z",
+      "owner": "930896af-bf8c-48d4-885c-6573a94b1853",
+      "public": false,
+      "state": "active"
+    }
+
 ## UpdateImage (POST /:login/images/:id?action=update)
 
 Updates metadata about an image.
@@ -10609,6 +10705,7 @@ Sample code for generating the `Authorization` header (and `Date` header):
 [sdc-updatemachinemetadata](#UpdateMachineMetadata)|-|Allows you to update the metadata for a given instance.
 [sdc-user](#users)|-|Add, update and remove account users and their keys.
 -|trion image clone|Clone a shared image.
+-|[triton image copy](#ImportImageFromDC)|Copy an image into another DC.
 -|triton info|Print an account summary.
 -|triton instance ip|Print the primary IP of the given instance.
 -|triton instance ssh|SSH to the primary IP of an instance.
diff --git a/lib/datasets.js b/lib/datasets.js
index 534a838..4dafe82 100644
--- a/lib/datasets.js
+++ b/lib/datasets.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 //
@@ -442,6 +442,12 @@ function get(req, res, next) {
 
 function create(req, res, next) {
     var log = req.log;
+    var action = req.params.action;
+
+    if (action) {
+        return next();
+    }
+
     if (!req.params.machine) {
         return next(new MissingParameterError(
                     'machine is a required argument'));
@@ -556,6 +562,50 @@ function update(req, res, next) {
 }
 
 
+function importFromDatacenter(req, res, next) {
+    var datacenter = req.params.datacenter;
+    var imageUUID = req.params.id;
+    var log = req.log;
+
+    if (req.params.action !== 'import-from-datacenter') {
+        next();
+        return;
+    }
+
+    if (!datacenter) {
+        next(new MissingParameterError('datacenter is a required argument'));
+        return;
+    }
+
+    if (!UUID_RE.test(imageUUID)) {
+        next(new MissingParameterError('id is a required argument'));
+        return;
+    }
+
+    var importOpts = {
+        datacenter: datacenter,
+        headers: {
+            'x-request-id': req.getId()
+        }
+    };
+
+    req.sdc.imgapi.importImageFromDatacenterAndWait(imageUUID, req.account.uuid,
+            importOpts,
+            function _importImageFromDatacenterAndWaitCb(err, img) {
+        if (err) {
+            next(err);
+            return;
+        }
+
+        var dataset = translate(req, img);
+        log.debug('ImportImageFromDatacenter(%s) => %s %s',
+            req.account.login, imageUUID, datacenter);
+        res.send(dataset);
+        next(false);
+    });
+}
+
+
 function exportImage(req, res, next) {
     var log = req.log;
     var action = req.params.action;
@@ -676,7 +726,7 @@ function mount(server, before, config) {
         path: '/:account/images',
         name: 'CreateImageFromMachine',
         version: ['7.0.0', '7.1.0', '7.2.0', '7.3.0', '8.0.0', '9.0.0']
-    }, before, create, resources.updateResource);
+    }, before, create, importFromDatacenter, resources.updateResource);
 
     server.post({
         path: '/:account/images/:dataset',
diff --git a/package.json b/package.json
index 40d705e..7196e93 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "cloudapi",
     "description": "SmartDataCenter CloudAPI",
-    "version": "9.1.0",
+    "version": "9.2.0",
     "author": "Joyent (joyent.com)",
     "private": true,
     "engines": {
@@ -35,7 +35,7 @@
         "nodemailer": "0.7.1",
         "nopt": "2.0.0",
         "restify": "4.3.3",
-        "sdc-clients": "11.2.0",
+        "sdc-clients": "11.3.0",
         "semver": "5.4.1",
         "strsplit": "1.0.0",
         "triton-metrics": "0.1.0",
