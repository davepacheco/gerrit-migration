commit f2a5119078364ab78059c54158ae2f5f849da54e (refs/changes/80/3780/1)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2018-04-06T16:20:41-07:00 (1 year, 6 months ago)
    
    OS-5979 imgadm should use the same req_id for requests

diff --git a/src/img/CHANGES.md b/src/img/CHANGES.md
index 3855d6b9..b3260374 100644
--- a/src/img/CHANGES.md
+++ b/src/img/CHANGES.md
@@ -5,6 +5,10 @@ Known issues:
 - Docker image imports are experimental. Docker image import also only supports
   Docker Registry v2.
 
+## 3.9.1
+
+- OS-5979 ensure imgadm uses the provided req_id
+
 ## 3.9.0
 
 - TRITON-178 add support for image creation for bhyve VMs. Also includes a
diff --git a/src/img/lib/imgadm.js b/src/img/lib/imgadm.js
index 62a750a1..296e398a 100644
--- a/src/img/lib/imgadm.js
+++ b/src/img/lib/imgadm.js
@@ -4110,9 +4110,16 @@ IMGADM.prototype.publishImage = function publishImage(opts, callback) {
     var rollbackImage;
     var activatedImage;
 
+    // Set x-request-id on all IMGAPI calls.
+    var headers = {};
+    if (self.log.fields && self.log.fields.req_id) {
+        headers['x-request-id'] = self.log.fields.req_id;
+    }
+
     async.series([
         function importIt(next) {
-            client.adminImportImage(manifest, {}, function (err, image, res) {
+            client.adminImportImage(manifest,  {headers: headers},
+                    function (err, image, res) {
                 self.log.trace({err: err, image: image, res: res},
                     'AdminImportImage');
                 if (err) {
@@ -4148,6 +4155,7 @@ IMGADM.prototype.publishImage = function publishImage(opts, callback) {
             var fopts = {
                 uuid: uuid,
                 file: stream,
+                headers: headers,
                 size: manifestFile.size,
                 compression: manifestFile.compression,
                 sha1: manifestFile.sha1
@@ -4185,7 +4193,8 @@ IMGADM.prototype.publishImage = function publishImage(opts, callback) {
             });
         },
         function activateIt(next) {
-            client.activateImage(uuid, function (err, image, res) {
+            client.activateImage(uuid, undefined, {headers: headers},
+                    function (err, image, res) {
                 self.log.trace({err: err, image: image, res: res},
                     'ActivateImage');
                 if (err) {
@@ -4203,7 +4212,8 @@ IMGADM.prototype.publishImage = function publishImage(opts, callback) {
                 self.log.debug({err: err, rollbackImage: rollbackImage},
                     'rollback partially imported image');
                 var delUuid = rollbackImage.uuid;
-                client.deleteImage(uuid, function (delErr, res) {
+                client.deleteImage(uuid, undefined, {headers: headers},
+                        function (delErr, res) {
                     self.log.trace({err: delErr, res: res}, 'DeleteImage');
                     if (delErr) {
                         self.log.debug({err: delErr}, 'error rolling back');
diff --git a/src/img/lib/sources/imgapi.js b/src/img/lib/sources/imgapi.js
index 270e93ff..1bdf6555 100644
--- a/src/img/lib/sources/imgapi.js
+++ b/src/img/lib/sources/imgapi.js
@@ -57,6 +57,11 @@ function ImgapiSource(opts) {
     });
 
     Source.call(this, opts);
+
+    this.headers = {};
+    if (this.log.fields && this.log.fields.req_id) {
+        this.headers['x-request-id'] = this.log.fields.req_id;
+    }
 }
 util.inherits(ImgapiSource, Source);
 
@@ -87,7 +92,8 @@ ImgapiSource.prototype.listImages = function listImages(cb) {
     var self = this;
     assert.func(cb, 'cb');
 
-    self.client.listImages({}, function (err, images) {
+    self.client.listImages({}, {headers: self.headers},
+            function (err, images) {
         if (err) {
             cb(self._errorFromClientError(err));
             return;
@@ -122,7 +128,8 @@ ImgapiSource.prototype.getImportInfo = function getImportInfo(opts, cb) {
     }
 
     var importInfo = null;
-    self.client.getImage(opts.arg, function (err, manifest) {
+    self.client.getImage(opts.arg, undefined, {headers: self.headers},
+            function (err, manifest) {
         if (err) {
             if (err.statusCode !== 404 || errOn404) {
                 cb(err);
@@ -178,7 +185,8 @@ ImgapiSource.prototype.getImgMeta = function getImgMeta(opts, cb) {
         return;
     }
 
-    self.client.getImage(opts.uuid, function (err, manifest) {
+    self.client.getImage(opts.uuid, undefined, {headers: self.headers},
+            function (err, manifest) {
         if (err) {
             cb(err);
             return;
@@ -257,7 +265,8 @@ ImgapiSource.prototype.getImgFileStream = function getImgFileStream(opts, cb) {
     assert.string(opts.uuid, 'opts.uuid');
     assert.func(cb, 'cb');
 
-    this.client.getImageFileStream(opts.uuid, cb);
+    this.client.getImageFileStream(opts.uuid, undefined,
+        {headers: this.headers}, cb);
 };
 
 
diff --git a/src/img/package.json b/src/img/package.json
index 84e2d61f..2b968dfe 100644
--- a/src/img/package.json
+++ b/src/img/package.json
@@ -1,7 +1,7 @@
 {
   "name": "imgadm",
   "description": "Manage SmartOS virtual machine images.",
-  "version": "3.9.0",
+  "version": "3.9.1",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
