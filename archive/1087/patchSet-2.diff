From a32b4b6fe5b2333e8d8ea7c5bea783c3659595a4 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Wed, 7 Dec 2016 15:42:41 -0800
Subject: [PATCH] joyent/node-cueball#60 require responses from all bootstrap
 nameservers before returning error joyent/node-cueball#58 drop excess
 nameservers from bootstrap

---
 lib/resolver.js | 41 ++++++++++++++++++++++++++++++++---------
 package.json    |  4 ++--
 2 files changed, 34 insertions(+), 11 deletions(-)

diff --git a/lib/resolver.js b/lib/resolver.js
index 956668d..02e0f05 100644
--- a/lib/resolver.js
+++ b/lib/resolver.js
@@ -183,11 +183,22 @@ function CueBallDNSResolver(options) {
 	    'options.maxDNSConcurrency');
 	mod_assert.optionalNumber(options.defaultPort, 'options.defaultPort');
 
+	mod_assert.optionalBool(options._isBootstrap, 'options._isBootstrap');
+
 	this.r_resolvers = options.resolvers || [];
 	this.r_domain = options.domain;
 	this.r_service = options.service || '_http._tcp';
 	this.r_maxres = options.maxDNSConcurrency || 3;
 	this.r_defport = options.defaultPort || 80;
+	this.r_isBootstrap = false;
+	if (options._isBootstrap === true)
+		this.r_isBootstrap = true;
+
+	if (this.r_isBootstrap) {
+		this.r_service = '_dns._udp';
+		this.r_defport = 53;
+		this.r_maxres = 10;
+	}
 
 	mod_assert.optionalObject(options.log, 'options.log');
 	this.r_log = options.log || mod_bunyan.createLogger({
@@ -307,11 +318,9 @@ CueBallDNSResolver.prototype.state_check_ns = function (S) {
 		if (this.r_bootstrap === undefined) {
 			var res = new CueBallDNSResolver({
 				domain: notIp[0],
-				service: '_dns._udp',
-				defaultPort: 53,
 				log: this.r_log,
 				recovery: this.r_recovery,
-				maxDNSConcurrency: 10
+				_isBootstrap: true
 			});
 			this.r_bootstrap = res.r_fsm;
 			CueBallDNSResolver.bootstrapResolvers[notIp[0]] =
@@ -344,8 +353,6 @@ CueBallDNSResolver.prototype.state_bootstrap_ns = function (S) {
 	this.r_bootstrap.on('added', function (k, srv) {
 		self.r_bootstrapRes[k] = srv;
 		self.r_resolvers.push(srv.address);
-		if (self.r_bootstrap.r_resolvers.indexOf(srv.address) === -1)
-			self.r_bootstrap.r_resolvers.push(srv.address);
 	});
 	this.r_bootstrap.on('removed', function (k) {
 		var srv = self.r_bootstrapRes[k];
@@ -354,10 +361,6 @@ CueBallDNSResolver.prototype.state_bootstrap_ns = function (S) {
 		var idx = self.r_resolvers.indexOf(srv.address);
 		mod_assert.ok(idx !== -1);
 		self.r_resolvers.splice(idx, 1);
-
-		idx = self.r_bootstrap.r_resolvers.indexOf(srv.address);
-		if (idx !== -1)
-			self.r_bootstrap.r_resolvers.splice(idx, 1);
 	});
 	if (this.r_bootstrap.count() > 0) {
 		var srvs = this.r_bootstrap.list();
@@ -694,6 +697,7 @@ CueBallDNSResolver.prototype.state_process = function (S) {
 
 	var oldBackends = this.r_backends;
 	var newBackends = {};
+	var allAddrs = [];
 	this.r_srvs.forEach(function (srv) {
 		srv.addresses = [].
 		    concat(srv.addresses_v6 || []).
@@ -704,6 +708,7 @@ CueBallDNSResolver.prototype.state_process = function (S) {
 				port: srv.port,
 				address: addr
 			};
+			allAddrs.push(addr);
 			newBackends[srvKey(finalSrv)] = finalSrv;
 		});
 	});
@@ -744,6 +749,20 @@ CueBallDNSResolver.prototype.state_process = function (S) {
 		self.emit('added', k, newBackends[k]);
 	});
 
+	if (this.r_isBootstrap) {
+		var gone = [];
+		this.r_resolvers.forEach(function (r) {
+			if (allAddrs.indexOf(r) === -1)
+				gone.push(r);
+		});
+		this.r_resolvers = allAddrs;
+		if (gone.length > 0) {
+			this.r_log.debug(
+			    'removed %d resolvers from bootstrap: %j',
+			    gone.length, gone);
+		}
+	}
+
 	this.emit('updated');
 	S.gotoState('sleep');
 };
@@ -841,6 +860,10 @@ CueBallDNSResolver.prototype.resolve = function (domain, type, timeout) {
 	opts.type = type;
 	opts.timeout = timeout;
 	opts.resolvers = this.r_resolvers;
+	if (this.r_isBootstrap) {
+		opts.errorThreshold = Math.min(
+		    this.r_maxres, opts.resolvers.length);
+	}
 
 	var self = this;
 	var em = new EventEmitter();
diff --git a/package.json b/package.json
index dd858fb..61a1eb0 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "cueball",
-  "version": "1.1.8",
+  "version": "1.1.9",
   "description": "",
   "main": "lib/index.js",
   "dependencies": {
@@ -10,7 +10,7 @@
     "extsprintf": ">=1.3.0 <2.0.0",
     "ipaddr.js": ">=1.1.0 <2.0.0",
     "mooremachine": ">=2.0.0 <3.0.0",
-    "mname-client": ">=0.3.6 <0.4.0",
+    "mname-client": ">=0.5.0 <0.6.0",
     "node-uuid": ">=1.4.7 <2.0.0",
     "posix-getopt": ">=1.2.0 <2.0.0",
     "restify-clients": ">=1.1.2 <2.0.0",
-- 
2.21.0

