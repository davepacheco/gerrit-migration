From b35352821a2f30d18fa298f3474a65ec5cc881fa Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Mon, 14 Mar 2016 06:03:22 +0000
Subject: [PATCH] TOOLS-1459 spring cleaning in sdcadm

---
 lib/channel.js                                |  19 +--
 lib/cli/do_avail.js                           |   5 -
 lib/cli/do_cns.js                             |   2 -
 lib/cli/experimental.js                       |  29 +----
 lib/cli/index.js                              |  13 +-
 lib/common.js                                 |  18 +--
 lib/dc-maint.js                               |  18 +--
 lib/default-fabric.js                         |   2 -
 lib/errors.js                                 |  30 ++---
 lib/history.js                                |   6 -
 lib/logging.js                                |  91 +------------
 lib/platform.js                               |  12 +-
 lib/post-setup/cloudapi.js                    |   1 -
 lib/post-setup/common-external-nics.js        |   1 -
 lib/post-setup/dev-headnode-prov.js           |   6 -
 lib/post-setup/dev-sample-data.js             |   6 -
 lib/post-setup/fabrics.js                     |   1 -
 lib/post-setup/ha-manatee.js                  |  64 ---------
 lib/post-setup/index.js                       |   3 -
 lib/post-setup/underlay-nics.js               |   1 -
 lib/procedures/create-service-instance-v1.js  |   4 +-
 lib/procedures/download-images.js             |   3 +-
 lib/procedures/index.js                       |  15 +--
 lib/procedures/update-agent-v1.js             |  14 +-
 lib/procedures/update-binder-v2.js            |  17 +--
 lib/procedures/update-dockerlogger.js         |  13 +-
 lib/procedures/update-mahi-v2.js              |   4 +-
 lib/procedures/update-manatee-v2.js           | 123 +-----------------
 lib/procedures/update-moray-v2.js             |  14 +-
 .../update-single-headnode-imgapi.js          |  14 +-
 lib/procedures/update-single-hn-sapi-v1.js    |  13 +-
 .../update-stateless-services-v1.js           |   4 +-
 lib/procedures/update-ufds-service-v1.js      |  13 +-
 lib/sdcadm.js                                 |  10 +-
 lib/svcadm.js                                 |  14 +-
 lib/ur.js                                     |   4 -
 lib/vmadm.js                                  |   1 -
 37 files changed, 64 insertions(+), 544 deletions(-)

diff --git a/lib/channel.js b/lib/channel.js
index 5ffff57..23031ab 100644
--- a/lib/channel.js
+++ b/lib/channel.js
@@ -16,25 +16,12 @@
  * of fall back into remote updates server default.
  */
 
-var p = console.log;
-var util = require('util'),
-    format = util.format;
-var fs = require('fs');
-var cp = require('child_process');
-var execFile = cp.execFile;
-var spawn = cp.spawn;
-var sprintf = require('extsprintf').sprintf;
+var util = require('util');
 var tabula = require('tabula');
 
-var vasync = require('vasync');
-var read = require('read');
-var assert = require('assert-plus');
-var cmdln = require('cmdln'),
-    Cmdln = cmdln.Cmdln;
+var cmdln = require('cmdln');
+var Cmdln = cmdln.Cmdln;
 
-
-var common = require('./common');
-var svcadm = require('./svcadm');
 var errors = require('./errors');
 
 // --- Channel CLI class
diff --git a/lib/cli/do_avail.js b/lib/cli/do_avail.js
index 7288b8d..aeae126 100644
--- a/lib/cli/do_avail.js
+++ b/lib/cli/do_avail.js
@@ -12,15 +12,10 @@
  * The 'sdcadm avail' CLI subcommand.
  */
 
-var p = console.log;
-
 var assert = require('assert-plus');
 var vasync = require('vasync');
 var tabula = require('tabula');
 
-var errors = require('../errors');
-var common = require('../common');
-
 // --- Internal support stuff which can be shared between
 // 'sdcadm avail' and 'sdcadm experimental avail'
 
diff --git a/lib/cli/do_cns.js b/lib/cli/do_cns.js
index 0c6a2db..2af875c 100644
--- a/lib/cli/do_cns.js
+++ b/lib/cli/do_cns.js
@@ -16,11 +16,9 @@ var util = require('util'),
     format = util.format;
 var vasync = require('vasync');
 
-var common = require('../common');
 var errors = require('../errors');
 var DownloadImages = require('../procedures/download-images').DownloadImages;
 var shared = require('../procedures/shared');
-var steps = require('../steps');
 
 
 function do_cns(subcmd, opts, args, cb) {
diff --git a/lib/cli/experimental.js b/lib/cli/experimental.js
index 5d0e28d..770e69d 100644
--- a/lib/cli/experimental.js
+++ b/lib/cli/experimental.js
@@ -15,33 +15,12 @@
  * the grand plan of 'sdcadm update' fully handling updates is complete.
  */
 
-var p = console.log;
-var util = require('util'),
-    format = util.format;
-var fs = require('fs');
-var cp = require('child_process');
-var execFile = cp.execFile;
-var spawn = cp.spawn;
-
-var jsprim = require('jsprim');
-var schemas = require('joyent-schemas');
-var vasync = require('vasync');
-var read = require('read');
-var assert = require('assert-plus');
-var cmdln = require('cmdln'),
-    Cmdln = cmdln.Cmdln;
-
-var common = require('../common');
-var errors = require('../errors');
-var DownloadImages = require('../procedures/download-images').DownloadImages;
-var shared = require('../procedures/shared');
-var steps = require('../steps');
-var svcadm = require('../svcadm');
-
-var DCMaintCLI = require('../dc-maint').DCMaintCLI;
+var util = require('util');
 
+var cmdln = require('cmdln');
+var Cmdln = cmdln.Cmdln;
 
-//---- globals
+var DCMaintCLI = require('../dc-maint').DCMaintCLI;
 
 
 //---- Experimental CLI class
diff --git a/lib/cli/index.js b/lib/cli/index.js
index 8483db2..b72ffa5 100644
--- a/lib/cli/index.js
+++ b/lib/cli/index.js
@@ -13,20 +13,13 @@
  */
 
 var p = console.log;
-var util = require('util'),
-    format = util.format;
-var child_process = require('child_process'),
-    spawn = child_process.spawn,
-    exec = child_process.exec;
+var util = require('util');
 var fs = require('fs');
 var path = require('path');
 
-var assert = require('assert-plus');
-var cmdln = require('cmdln'),
-    Cmdln = cmdln.Cmdln;
-var sprintf = require('extsprintf').sprintf;
+var cmdln = require('cmdln');
+var Cmdln = cmdln.Cmdln;
 var strsplit = require('strsplit');
-var tabula = require('tabula');
 var vasync = require('vasync');
 var uuid = require('node-uuid');
 
diff --git a/lib/common.js b/lib/common.js
index 94cd09a..a6e3f99 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -8,7 +8,6 @@
  * Copyright 2016 Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var child_process = require('child_process'),
     exec = child_process.exec,
@@ -18,16 +17,13 @@ var format = require('util').format;
 var fs = require('fs');
 var path = require('path');
 var tty = require('tty');
-var url = require('url');
 var util = require('util');
 var vasync = require('vasync');
-var verror = require('verror');
 var backoff = require('backoff');
 var once = require('once');
 
-var errors = require('./errors'),
-    InternalError = errors.InternalError;
-var vmadm = require('./vmadm');
+var errors = require('./errors');
+var InternalError = errors.InternalError;
 
 
 //---- globals
@@ -223,13 +219,6 @@ function deepObjCopy(obj) {
 }
 
 
-function zeroPad(n, width) {
-    var s = String(n);
-    while (s.length < width) {
-        s = '0' + s;
-    }
-    return s;
-}
 /**
  * Attempt to split string into the given chars sub-sets
  *
@@ -1220,7 +1209,7 @@ function execWithRetries(opts) {
         var msg = util.format('Attempt #%d failed with error %s. ' +
                 'Retrying again in %d msecs',
                 number + 1, err, delay);
-        p(msg);
+        console.log(msg);
         opts.log.debug({
             err: err
         }, msg);
@@ -1300,7 +1289,6 @@ module.exports = {
     cmp: cmp,
     objCopy: objCopy,
     deepObjCopy: deepObjCopy,
-    zeroPad: zeroPad,
     splitStr: splitStr,
     promptYesNo: promptYesNo,
     sortArrayOfObjects: sortArrayOfObjects,
diff --git a/lib/dc-maint.js b/lib/dc-maint.js
index 2ca5056..28125c2 100644
--- a/lib/dc-maint.js
+++ b/lib/dc-maint.js
@@ -15,24 +15,12 @@
  */
 
 
-var p = console.log;
-var util = require('util'),
-    format = util.format;
-var fs = require('fs');
-var cp = require('child_process');
-var execFile = cp.execFile;
-var spawn = cp.spawn;
-var sprintf = require('extsprintf').sprintf;
-var tabula = require('tabula');
-
-var vasync = require('vasync');
-var assert = require('assert-plus');
-var cmdln = require('cmdln'),
-    Cmdln = cmdln.Cmdln;
+var util = require('util');
 
+var cmdln = require('cmdln');
+var Cmdln = cmdln.Cmdln;
 
 var common = require('./common');
-var svcadm = require('./svcadm');
 var errors = require('./errors');
 
 
diff --git a/lib/default-fabric.js b/lib/default-fabric.js
index 39ca208..3a88ce3 100644
--- a/lib/default-fabric.js
+++ b/lib/default-fabric.js
@@ -16,8 +16,6 @@
 var assert = require('assert-plus');
 var common = require('./common');
 var errors = require('./errors');
-var fmt = require('util').format;
-var mod_uuid = require('node-uuid');
 var vasync = require('vasync');
 
 
diff --git a/lib/errors.js b/lib/errors.js
index c02f60d..d01da48 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -12,26 +12,11 @@
  * Error classes that sdcadm may produce.
  */
 
-var p = console.log;
-var util = require('util'),
-    format = util.format;
+var util = require('util');
+var format = util.format;
 var assert = require('assert-plus');
-var verror = require('verror'),
-    WError = verror.WError,
-    VError = verror.VError;
-
-
-
-// ---- internal support stuff
-
-function _indent(s, indent) {
-    if (!indent) {
-        indent = '    ';
-    }
-    var lines = s.split(/\r?\n/g);
-    return indent + lines.join('\n' + indent);
-}
-
+var verror = require('verror');
+var WError = verror.WError;
 
 
 // ---- error classes
@@ -219,10 +204,11 @@ util.inherits(MultiError, SdcAdmError);
  */
 function sdcClientErrWrap(cb, clientName) {
     return function sdcClientCb() {
-        if (arguments[0]) {
-            arguments[0] = new SDCClientError(arguments[0], clientName);
+        var args = Array.prototype.slice.call(arguments);
+        if (args[0]) {
+            args[0] = new SDCClientError(args[0], clientName);
         }
-        cb.apply(null, arguments);
+        cb.apply(null, args);
     };
 }
 
diff --git a/lib/history.js b/lib/history.js
index 666cf76..2250be3 100644
--- a/lib/history.js
+++ b/lib/history.js
@@ -16,21 +16,15 @@
  *
  */
 
-var util = require('util'),
-    format = util.format;
 var fs = require('fs');
 var path = require('path');
 
 var mkdirp = require('mkdirp');
-var cmdln = require('cmdln'),
-    Cmdln = cmdln.Cmdln;
 var assert = require('assert-plus');
 var uuid = require('node-uuid');
 var vasync = require('vasync');
-var tabula = require('tabula');
 
 var errors = require('./errors');
-var common = require('./common');
 
 var UUID_RE = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
 
diff --git a/lib/logging.js b/lib/logging.js
index ea436e8..93a98f9 100644
--- a/lib/logging.js
+++ b/lib/logging.js
@@ -59,19 +59,15 @@
  *
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var bunyan = require('bunyan');
 var events = require('events');
 var fs = require('fs');
 var mkdirp = require('mkdirp');
 var mod_uuid = require('node-uuid');
-var path = require('path');
 var restify = require('sdc-clients/node_modules/restify');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
-var vasync = require('vasync');
+var util = require('util');
 
 
 
@@ -83,91 +79,6 @@ var LOG_DIR = '/var/log/sdcadm/logs';
 
 // --- Internal helper functions
 
-/**
- * Bunyan serializer for a firewall rule
- */
-function fullRuleSerializer(rules) {
-    var res = {};
-    for (var r in rules) {
-        res[rules[r].uuid] = rules[r].toString();
-    }
-
-    return Object.keys(res).map(function (u) {
-        return res[u];
-    });
-}
-
-
-/**
- * Returns true if the bunyan stream is logging to LOG_DIR
- */
-function isLoggingToFile(str) {
-    if (str.type === 'file' && str.stream &&
-        startsWith(str.path, LOG_DIR))
-    {
-        return true;
-    }
-
-    return false;
-}
-
-
-/**
- * Returns true if the bunyan stream is an OpenOnErrorFileStream
- */
-function isOnErrorStream(str) {
-    if (str.type === 'raw' && str.stream &&
-        str.stream instanceof OpenOnErrorFileStream)
-    {
-        return true;
-    }
-
-    return false;
-}
-
-
-/**
- * Bunyan serializer for just the rule UUID
- */
-function ruleSerializer(rules) {
-    var res = {};
-    for (var r in rules) {
-        res[rules[r].uuid] = rules[r].toString();
-    }
-
-    return Object.keys(res);
-}
-
-
-/**
- * Taken from jsprim
- */
-function startsWith(str, prefix)
-{
-    return (str.substr(0, prefix.length) == prefix);
-}
-
-
-/**
- * Bunyan serializer for just the VM UUID
- */
-function vmSerializer(vms) {
-    // Returning from add, update, etc, vms is a list of VM UUIDs
-    if (util.isArray(vms)) {
-        if (typeof (vms[0]) === 'string') {
-            return vms;
-        }
-
-        return vms.map(function (v) {
-            return v.hasOwnProperty('uuid') ? v.uuid : v;
-        });
-    }
-
-    return Object.keys(vms);
-}
-
-
-
 /**
  * --- OpenOnErrorFileStream (originally from VM.js)
  *
diff --git a/lib/platform.js b/lib/platform.js
index 033c6a2..76774a8 100644
--- a/lib/platform.js
+++ b/lib/platform.js
@@ -17,24 +17,20 @@
  */
 
 var p = console.log;
-var util = require('util'),
-    format = util.format;
+var util = require('util');
+var format = util.format;
 var fs = require('fs');
 var cp = require('child_process');
-var execFile = cp.execFile;
 var spawn = cp.spawn;
-var sprintf = require('extsprintf').sprintf;
 var tabula = require('tabula');
-var backoff = require('backoff');
 
 var vasync = require('vasync');
 var assert = require('assert-plus');
-var cmdln = require('cmdln'),
-    Cmdln = cmdln.Cmdln;
+var cmdln = require('cmdln');
+var Cmdln = cmdln.Cmdln;
 
 
 var common = require('./common');
-var svcadm = require('./svcadm');
 var errors = require('./errors');
 
 // --- globals
diff --git a/lib/post-setup/cloudapi.js b/lib/post-setup/cloudapi.js
index ae7986d..e57cb49 100644
--- a/lib/post-setup/cloudapi.js
+++ b/lib/post-setup/cloudapi.js
@@ -12,7 +12,6 @@
  * 'sdcadm post-setup cloudapi'
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 
 var common = require('../common');
diff --git a/lib/post-setup/common-external-nics.js b/lib/post-setup/common-external-nics.js
index 78b78db..ab9bc7a 100644
--- a/lib/post-setup/common-external-nics.js
+++ b/lib/post-setup/common-external-nics.js
@@ -12,7 +12,6 @@
  * 'sdcadm post-setup common-external-nics'
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 
 
diff --git a/lib/post-setup/dev-headnode-prov.js b/lib/post-setup/dev-headnode-prov.js
index eb72b39..ed6c8a6 100644
--- a/lib/post-setup/dev-headnode-prov.js
+++ b/lib/post-setup/dev-headnode-prov.js
@@ -19,12 +19,6 @@ var errors = require('../errors');
 var svcadm = require('../svcadm');
 
 
-
-//---- globals
-
-var p = console.log;
-
-
 //---- internal support stuff
 
 function makeHeadnodeProvisionable(opts, cb) {
diff --git a/lib/post-setup/dev-sample-data.js b/lib/post-setup/dev-sample-data.js
index 16ef807..aeda52b 100644
--- a/lib/post-setup/dev-sample-data.js
+++ b/lib/post-setup/dev-sample-data.js
@@ -23,12 +23,6 @@ var DownloadImages = require('../procedures/download-images').DownloadImages;
 var errors = require('../errors');
 
 
-
-//---- globals
-
-var p = console.log;
-
-
 //---- internal support stuff
 
 function addDevSampleData(opts, cb) {
diff --git a/lib/post-setup/fabrics.js b/lib/post-setup/fabrics.js
index 3d389d5..504eb87 100644
--- a/lib/post-setup/fabrics.js
+++ b/lib/post-setup/fabrics.js
@@ -26,7 +26,6 @@
  *   config argument, ask her to confirm if want to use default coal cfg?.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var vasync = require('vasync');
 var util = require('util');
diff --git a/lib/post-setup/ha-manatee.js b/lib/post-setup/ha-manatee.js
index d452ef0..812cce1 100644
--- a/lib/post-setup/ha-manatee.js
+++ b/lib/post-setup/ha-manatee.js
@@ -13,10 +13,6 @@
  */
 
 var p = console.log;
-var util = require('util'),
-    format = util.format;
-var cp = require('child_process');
-var spawn = cp.spawn;
 var sprintf = require('extsprintf').sprintf;
 var vasync = require('vasync');
 var assert = require('assert-plus');
@@ -55,46 +51,6 @@ function do_ha_manatee(subcmd, opts, args, cb) {
     }
 
 
-    function waitForDisabled(server, zuuid, flag, callback) {
-        var counter = 0;
-        var limit = 12;
-        function _waitForDisabled() {
-            var argv = [
-                '/opt/smartdc/bin/sdc-oneachnode',
-                '-j',
-                '-n',
-                server,
-                /* JSSTYLED */
-                format('/usr/sbin/zlogin %s "json %s < /opt/smartdc/manatee/etc/sitter.json"', zuuid, flag)
-            ];
-            common.execFilePlus({
-                argv: argv,
-                log: self.log
-            }, function (err, stdout, stderr) {
-                if (err) {
-                    callback(err);
-                } else {
-                    var res = JSON.parse(stdout.trim());
-                    counter += 1;
-                    if (res[0].result.stdout.trim() === 'false') {
-                        callback();
-                    } else {
-                        if (counter < limit) {
-                            return setTimeout(_waitForDisabled, 5000);
-                        } else {
-                            return callback(format(
-                                'Timeout (60s) waiting for config flag' +
-                                ' %s to be disabled', flag));
-                        }
-
-                    }
-                }
-            });
-        }
-        _waitForDisabled();
-    }
-
-
     // Run the manatee-adm subcommand given by "cmd" into the provided server.
     // We assume that there will be a manatee VM with UUID vmUUID into the
     // given server.
@@ -172,26 +128,6 @@ function do_ha_manatee(subcmd, opts, args, cb) {
     }
 
 
-    function disableSitter(server, zone, callback) {
-        shared.disableRemoteSvc({
-            server: server,
-            zone: zone,
-            fmri: 'manatee-sitter',
-            log: self.log
-        }, callback);
-    }
-
-
-    function enableSitter(server, zone, callback) {
-        shared.enableRemoteSvc({
-            server: server,
-            zone: zone,
-            fmri: 'manatee-sitter',
-            log: self.log
-        }, callback);
-    }
-
-
     var app = self.sdcadm.sdc;
     // This is the primary instance VM:
     var pri;
diff --git a/lib/post-setup/index.js b/lib/post-setup/index.js
index ad8d296..b1409d1 100644
--- a/lib/post-setup/index.js
+++ b/lib/post-setup/index.js
@@ -12,8 +12,6 @@
  * 'sdcadm post-setup ...' CLI commands.
  */
 
-var p = console.log;
-
 var cmdln = require('cmdln'),
     Cmdln = cmdln.Cmdln;
 var util = require('util');
@@ -63,7 +61,6 @@ PostSetupCLI.prototype.do_common_external_nics =
     require('./common-external-nics').do_common_external_nics;
 PostSetupCLI.prototype.do_underlay_nics =
     require('./underlay-nics').do_underlay_nics;
-var haBinder = require('./ha-binder');
 PostSetupCLI.prototype.do_ha_binder = require('./ha-binder').do_ha_binder;
 PostSetupCLI.prototype.do_ha_binder.hiddenAliases = ['zookeeper'];
 PostSetupCLI.prototype.do_ha_manatee = require('./ha-manatee').do_ha_manatee;
diff --git a/lib/post-setup/underlay-nics.js b/lib/post-setup/underlay-nics.js
index f886d7f..4b319be 100644
--- a/lib/post-setup/underlay-nics.js
+++ b/lib/post-setup/underlay-nics.js
@@ -12,7 +12,6 @@
  * 'sdcadm post-setup underlay-nics'
  */
 
-var p = console.log;
 var util = require('util');
 
 var assert = require('assert-plus');
diff --git a/lib/procedures/create-service-instance-v1.js b/lib/procedures/create-service-instance-v1.js
index 97f5822..aa1b8f0 100644
--- a/lib/procedures/create-service-instance-v1.js
+++ b/lib/procedures/create-service-instance-v1.js
@@ -8,11 +8,9 @@
  * Copyright (c) 2014, Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
+var util = require('util');
 
 var vasync = require('vasync');
 
diff --git a/lib/procedures/download-images.js b/lib/procedures/download-images.js
index 943f6d5..8a36175 100644
--- a/lib/procedures/download-images.js
+++ b/lib/procedures/download-images.js
@@ -16,8 +16,7 @@ var util = require('util'),
 var vasync = require('vasync');
 
 var common = require('../common');
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
+var errors = require('../errors');
 
 var Procedure = require('./procedure').Procedure;
 
diff --git a/lib/procedures/index.js b/lib/procedures/index.js
index 3805803..0dacc0b 100644
--- a/lib/procedures/index.js
+++ b/lib/procedures/index.js
@@ -13,26 +13,13 @@
  * an update plan (i.e. for `sdcadm update`).
  */
 
-var p = console.log;
 var assert = require('assert-plus');
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
-var fs = require('fs');
-var once = require('once');
 var os = require('os');
-var path = require('path');
-var sprintf = require('extsprintf').sprintf;
 var util = require('util'),
     format = util.format;
 var vasync = require('vasync');
-var verror = require('verror');
 
-var common = require('../common');
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
-var svcadm = require('../svcadm');
-var vmadm = require('../vmadm');
+var errors = require('../errors');
 
 
 
diff --git a/lib/procedures/update-agent-v1.js b/lib/procedures/update-agent-v1.js
index 5b684a6..3190ebd 100644
--- a/lib/procedures/update-agent-v1.js
+++ b/lib/procedures/update-agent-v1.js
@@ -9,33 +9,23 @@
  */
 
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
-var fs = require('fs');
-var path = require('path');
+var util = require('util');
+var format = util.format;
 var vasync = require('vasync');
 var semver = require('semver');
 var ProgressBar = require('progbar').ProgressBar;
 
 var errors = require('../errors'),
-    InternalError = errors.InternalError,
     SDCClientError = errors.SDCClientError,
     UpdateError = errors.UpdateError,
     MultiError = errors.MultiError;
 
 var common = require('../common');
-var vmadm = require('../vmadm');
-var svcadm = require('../svcadm');
 var steps = require('../steps');
 
 var Procedure = require('./procedure').Procedure;
-var s = require('./shared');
 
 /**
  * Procedure for updating the different agent services.
diff --git a/lib/procedures/update-binder-v2.js b/lib/procedures/update-binder-v2.js
index 35ca24b..4e130b8 100644
--- a/lib/procedures/update-binder-v2.js
+++ b/lib/procedures/update-binder-v2.js
@@ -8,23 +8,16 @@
  * Copyright 2016 Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
-var fs = require('fs');
-var path = require('path');
+var util = require('util');
+var format = util.format;
+var child_process = require('child_process');
+var execFile = child_process.execFile;
 var vasync = require('vasync');
 
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
+var errors = require('../errors');
 var common = require('../common');
-var vmadm = require('../vmadm');
-var svcadm = require('../svcadm');
 
 var Procedure = require('./procedure').Procedure;
 var s = require('./shared');
diff --git a/lib/procedures/update-dockerlogger.js b/lib/procedures/update-dockerlogger.js
index f5cd19e..85054ae 100644
--- a/lib/procedures/update-dockerlogger.js
+++ b/lib/procedures/update-dockerlogger.js
@@ -9,11 +9,10 @@
  */
 
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
+var util = require('util');
+var format = util.format;
 var path = require('path');
 var fs = require('fs');
 
@@ -23,17 +22,13 @@ var mkdirp = require('mkdirp');
 var uuid = require('node-uuid');
 var ProgressBar = require('progbar').ProgressBar;
 
-var errors = require('../errors'),
-    InternalError = errors.InternalError,
-    SDCClientError = errors.SDCClientError,
-    UpdateError = errors.UpdateError,
-    MultiError = errors.MultiError;
+var errors = require('../errors');
+var UpdateError = errors.UpdateError;
 
 var common = require('../common');
 var ur = require('../ur');
 
 var Procedure = require('./procedure').Procedure;
-var s = require('./shared');
 
 /**
  * Procedure for updating the different agent services.
diff --git a/lib/procedures/update-mahi-v2.js b/lib/procedures/update-mahi-v2.js
index f806e56..53ac0ee 100644
--- a/lib/procedures/update-mahi-v2.js
+++ b/lib/procedures/update-mahi-v2.js
@@ -8,11 +8,9 @@
  * Copyright 2016 Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
+var util = require('util');
 var vasync = require('vasync');
 
 var common = require('../common');
diff --git a/lib/procedures/update-manatee-v2.js b/lib/procedures/update-manatee-v2.js
index a561355..3db8576 100644
--- a/lib/procedures/update-manatee-v2.js
+++ b/lib/procedures/update-manatee-v2.js
@@ -9,23 +9,15 @@
  */
 
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
 var util = require('util'),
     format = util.format;
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
-var fs = require('fs');
-var path = require('path');
 var os = require('os');
 var vasync = require('vasync');
 
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
+var errors = require('../errors');
 var common = require('../common');
-var vmadm = require('../vmadm');
 var svcadm = require('../svcadm');
 var steps = require('../steps');
 
@@ -142,39 +134,6 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
     }
 
 
-    function restartSitter(server, zone, callback) {
-        log.trace({
-            server: server,
-            zone: zone
-        }, 'Restarting manatee sitter (sdc-oneachnode)');
-        var argv = [
-            '/opt/smartdc/bin/sdc-oneachnode',
-            '-n',
-            server,
-            format('/usr/sbin/svcadm -z %s restart manatee-sitter', zone)
-        ];
-        common.execFilePlus({
-            argv: argv,
-            log: log
-        }, function (err, stdout, stderr) {
-            if (err) {
-                callback(err);
-            } else {
-                callback();
-            }
-        });
-
-    }
-
-
-    function checkSitterStatus(server, zone, callback) {
-        return s.manateeSitterSvcStatus({
-            log: log,
-            server: server,
-            vm: zone
-        }, callback);
-    }
-
     function getCanmount(server, zone, callback) {
         log.trace({
             server: server,
@@ -254,86 +213,6 @@ UpdateManateeV2.prototype.execute = function manateev2Execute(opts, cb) {
     }
 
 
-    function waitForDisabled(server, inst, flag, callback) {
-        var counter = 0;
-        var limit = 12;
-        function _waitForDisabled() {
-            var argv = [
-                '/opt/smartdc/bin/sdc-oneachnode',
-                '-j',
-                '-n',
-                server,
-                /* JSSTYLED */
-                format('/usr/sbin/zlogin %s \'json %s < /opt/smartdc/manatee/etc/sitter.json\'', inst, flag)
-            ];
-            common.execFilePlus({
-                argv: argv,
-                log: log
-            }, function (err, stdout, stderr) {
-                if (err) {
-                    callback(err);
-                } else {
-                    var res = JSON.parse(stdout.trim());
-                    counter += 1;
-                    if (res[0].result.stdout.trim() === 'false') {
-                        callback();
-                    } else {
-                        if (counter < limit) {
-                            return setTimeout(_waitForDisabled, 5000);
-                        } else {
-                            return callback(format(
-                                'Timeout (60s) waiting for config flag' +
-                                ' %s to be disabled', flag));
-                        }
-
-                    }
-                }
-            });
-        }
-        _waitForDisabled();
-    }
-
-
-    function waitForEnabled(server, zuuid, flag, callback) {
-        var counter = 0;
-        var limit = 12;
-        function _waitForEnabled() {
-            var argv = [
-                '/opt/smartdc/bin/sdc-oneachnode',
-                '-j',
-                '-n',
-                server,
-                /* JSSTYLED */
-                format('/usr/sbin/zlogin %s \'json %s < /opt/smartdc/manatee/etc/sitter.json\'', zuuid, flag)
-            ];
-            common.execFilePlus({
-                argv: argv,
-                log: self.log
-            }, function (err, stdout, stderr) {
-                if (err) {
-                    callback(err);
-                } else {
-                    var res = JSON.parse(stdout.trim());
-                    counter += 1;
-                    if (res[0].result.stdout.trim() === 'true') {
-                        callback();
-                    } else {
-                        if (counter < limit) {
-                            return setTimeout(_waitForEnabled, 5000);
-                        } else {
-                            return callback(format(
-                                'Timeout (60s) waiting for config flag' +
-                                ' %s to be enabled', flag));
-                        }
-
-                    }
-                }
-            });
-        }
-        _waitForEnabled();
-    }
-
-
     function updateManatee(change, nextSvc) {
         var arg = {
             change: change,
diff --git a/lib/procedures/update-moray-v2.js b/lib/procedures/update-moray-v2.js
index 7de3e9b..0981777 100644
--- a/lib/procedures/update-moray-v2.js
+++ b/lib/procedures/update-moray-v2.js
@@ -8,23 +8,13 @@
  * Copyright 2016 Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
-var fs = require('fs');
-var path = require('path');
+var util = require('util');
 var vasync = require('vasync');
 
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
+var errors = require('../errors');
 var common = require('../common');
-var vmadm = require('../vmadm');
-var svcadm = require('../svcadm');
 
 var Procedure = require('./procedure').Procedure;
 var s = require('./shared');
diff --git a/lib/procedures/update-single-headnode-imgapi.js b/lib/procedures/update-single-headnode-imgapi.js
index a723b33..19180ae 100644
--- a/lib/procedures/update-single-headnode-imgapi.js
+++ b/lib/procedures/update-single-headnode-imgapi.js
@@ -8,20 +8,14 @@
  * Copyright (c) 2014, Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
-var fs = require('fs');
-var path = require('path');
+var util = require('util');
+var format = util.format;
+var child_process = require('child_process');
 var vasync = require('vasync');
 
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
+var errors = require('../errors');
 var common = require('../common');
 var vmadm = require('../vmadm');
 var svcadm = require('../svcadm');
diff --git a/lib/procedures/update-single-hn-sapi-v1.js b/lib/procedures/update-single-hn-sapi-v1.js
index bc8a1ea..e9288df 100644
--- a/lib/procedures/update-single-hn-sapi-v1.js
+++ b/lib/procedures/update-single-hn-sapi-v1.js
@@ -8,23 +8,14 @@
  * Copyright (c) 2015, Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
-var fs = require('fs');
-var path = require('path');
+var util = require('util');
 var vasync = require('vasync');
 
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
+var errors = require('../errors');
 var common = require('../common');
 var vmadm = require('../vmadm');
-var svcadm = require('../svcadm');
 
 var Procedure = require('./procedure').Procedure;
 var s = require('./shared');
diff --git a/lib/procedures/update-stateless-services-v1.js b/lib/procedures/update-stateless-services-v1.js
index ea31d39..8b4ae26 100644
--- a/lib/procedures/update-stateless-services-v1.js
+++ b/lib/procedures/update-stateless-services-v1.js
@@ -8,11 +8,9 @@
  * Copyright (c) 2016, Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
+var util = require('util');
 
 var vasync = require('vasync');
 
diff --git a/lib/procedures/update-ufds-service-v1.js b/lib/procedures/update-ufds-service-v1.js
index f257053..3fd7eb3 100644
--- a/lib/procedures/update-ufds-service-v1.js
+++ b/lib/procedures/update-ufds-service-v1.js
@@ -8,23 +8,14 @@
  * Copyright (c) 2015, Joyent, Inc.
  */
 
-var p = console.log;
 var assert = require('assert-plus');
 var sprintf = require('extsprintf').sprintf;
-var util = require('util'),
-    format = util.format;
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
+var util = require('util');
+var format = util.format;
 var fs = require('fs');
-var path = require('path');
 var vasync = require('vasync');
 
-var errors = require('../errors'),
-    InternalError = errors.InternalError;
 var common = require('../common');
-var vmadm = require('../vmadm');
-var svcadm = require('../svcadm');
 
 var Procedure = require('./procedure').Procedure;
 var s = require('./shared');
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 5d2cac9..2f71974 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -13,18 +13,16 @@
  */
 
 var assert = require('assert-plus');
-var child_process = require('child_process'),
-    spawn = child_process.spawn,
-    exec = child_process.exec;
-var util = require('util'),
-    format = util.format;
+var child_process = require('child_process');
+var exec = child_process.exec;
+var util = require('util');
+var format = util.format;
 var fs = require('fs');
 var http  = require('http');
 var https = require('https');
 var path = require('path');
 var crypto = require('crypto');
 var mkdirp = require('mkdirp');
-var once = require('once');
 var sdcClients = require('sdc-clients');
 var semver = require('semver');
 var sprintf = require('extsprintf').sprintf;
diff --git a/lib/svcadm.js b/lib/svcadm.js
index 71a9c39..82622a9 100644
--- a/lib/svcadm.js
+++ b/lib/svcadm.js
@@ -12,20 +12,14 @@
  * A library to exec `svcadm` commands.
  */
 
-var p = console.log;
-
 var assert = require('assert-plus');
-var async = require('async');
 var ur = require('./ur');
-var child_process = require('child_process'),
-    execFile = child_process.execFile,
-    spawn = child_process.spawn;
 var format = require('util').format;
 
-var common = require('./common'),
-    execFilePlus = common.execFilePlus;
-var errors = require('./errors'),
-    InternalError = errors.InternalError;
+var common = require('./common');
+var execFilePlus = common.execFilePlus;
+var errors = require('./errors');
+var InternalError = errors.InternalError;
 
 /**
  * Call `svcadm <command> FMRI`.
diff --git a/lib/ur.js b/lib/ur.js
index 2ba3f2c..0900b2a 100644
--- a/lib/ur.js
+++ b/lib/ur.js
@@ -19,16 +19,12 @@ var assert = require('assert-plus');
 var format = require('util').format;
 var once = require('once');
 var urclient = require('urclient');
-var vasync = require('vasync');
 var events = require('events');
 
 var common = require('./common');
 var errors = require('./errors');
 
 
-var p = console.log;
-
-
 /**
  * HACK: This uses `sdc-oneachnode` directly. That should be changed to use
  * urclient via sdcadm.getUrConnection().
diff --git a/lib/vmadm.js b/lib/vmadm.js
index ed9bfde..edb966d 100644
--- a/lib/vmadm.js
+++ b/lib/vmadm.js
@@ -14,7 +14,6 @@
  * TODO: set REQ_ID for these invocations for connection in vmadm logs?
  */
 
-var p = console.log;
 var child_process = require('child_process'),
     exec = child_process.exec,
     spawn = child_process.spawn;
-- 
2.21.0

