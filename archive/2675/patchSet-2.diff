commit 788434021be34b66f46205b91178759a197a757f (refs/changes/75/2675/2)
Author: Richard Bradley <richard.bradley@joyent.com>
Date:   2017-10-06T16:13:58+00:00 (2 years ago)
    
    MANATEE-359 manatee reports primary to sync replication as async

diff --git a/lib/postgresMgr.js b/lib/postgresMgr.js
index be7f693..20bff3e 100644
--- a/lib/postgresMgr.js
+++ b/lib/postgresMgr.js
@@ -42,6 +42,7 @@ var url = require('url');
 var util = require('util');
 var vasync = require('vasync');
 var verror = require('verror');
+var xlog = require('xlog');
 
 
 // --- Globals
@@ -2175,21 +2176,23 @@ PostgresMgr.prototype._checkRepl = function (stdby) {
             }
             if (err) {
                 /*
-                 * If we can't query the replication state, we just keep
-                 * trying.  Importantly we do not count this as part of the
+                 * If we can't query the replication state (or if we've failed
+                 * to validate the xlog locations provided by postgres), we just
+                 * keep trying.  Importantly we do not count this as part of the
                  * replication timeout.  Generally this means the standby
                  * hasn't started or is unable to start.  This means that the
                  * standby will eventually time itself out and we will exit the
                  * loop since a new event will be emitted when the standby
                  * leaves the election.
                  */
-                log.info({err: err}, 'unable to query replication status');
+                log.info({err: err}, 'error while querying replication status');
                 // reset the start time when we get error since we haven't
                 // gotten any real replication information yet.
                 replStartTime = Date.now();
                 timeoutId = setTimeout(checkReplication, 1000);
                 return;
-            } else if (!replReplayLoc || replayLoc > replReplayLoc) {
+            } else if (!replReplayLoc ||
+                xlog.xlogCompare(replayLoc, replReplayLoc) > 0) {
                 log.info({
                     oldReplayLoc: replReplayLoc,
                     currReplLoc: replayLoc
@@ -2259,19 +2262,41 @@ PostgresMgr.prototype._checkReplStatus = function (stdby, callback) {
             return callback(err2);
         }
 
-        //TODO: This works by accident.  The format for these is log/offset
-        // It is possible for the offset to be the same in two different logs.
-        var sentLocation = result.sent_location.split('/')[1];
-        sentLocation = parseInt(sentLocation, 16);
-        var flushLocation = result.flush_location.split('/')[1];
-        flushLocation = parseInt(flushLocation, 16);
+        /*
+         * We should now have enough information to compare the reported
+         * locations, but first some validation on the response from postgres.
+         */
+        var xlogValidationErrors = [];
+        [ 'sent_location', 'flush_location' ].forEach(function (location) {
+            var validation = xlog.xlogValidate(result[location]);
+            if (validation instanceof Error) {
+                xlogValidationErrors.push(new verror.VError(validation,
+                    '%s is invalid', location));
+            }
+        });
+        if (xlogValidationErrors.length > 0) {
+            var xlogMultiError = new verror.MultiError(xlogValidationErrors);
+            callback(new verror.VError(xlogMultiError,
+                'failed to validate xlog locations returned by postgres'));
+            return;
+        }
+
+        var sentLocation = result.sent_location;
+        var flushLocation = result.flush_location;
 
         log.info({
             primary: sentLocation,
             standby: flushLocation
         }, 'PostgresMgr.checkReplStatus: xlog locations are');
 
-        if (sentLocation === flushLocation) {
+        var xlogComparison = xlog.xlogCompare(sentLocation, flushLocation);
+        /*
+         * There is still the case where we may find that the sync is ahead
+         * of the primary. Manatee doesn't act on this scenario (instead
+         * opting to treat it as the sync not making forward progress), so
+         * we only report whether we've found a match in xlog locations or not.
+         */
+        if (xlogComparison === 0) {
             log.info('exiting checkReplStatus: synchronous standby caught up');
             return callback(null, true, flushLocation);
         } else {
diff --git a/package.json b/package.json
index 1ade043..a4f9a95 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
         "iniparser": "1.0.5",
         "forkexec": "1.1.0",
         "jsprim": "1.4.0",
-        "manatee-state-machine": "git://github.com/joyent/manatee-state-machine#master",
+        "manatee-state-machine": "git+https://github.com/joyent/manatee-state-machine.git#dev-MANATEE-359",
         "manta": "1.2.6",
         "node-uuid": "1.4.1",
         "joyent-zookeeper-client": "0.2.2",
@@ -43,6 +43,7 @@
         "tab": "0.1.0",
         "vasync": "1.6.2",
         "verror": "1.6.0",
+        "xlog": "git+https://github.com/chudley/node-xlog.git#42d762d84192fd5282b4317f8ba364a14d9a2d64",
         "xtend": "1.0.3"
     },
     "devDependencies": {
