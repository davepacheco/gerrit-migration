From 15fb9d62e35e0ade3cbed7947cbc34484b2d1077 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Wed, 19 Oct 2016 15:15:43 -0700
Subject: [PATCH] joyent/node-cueball#40 want high-water mark stats about
 busyness and queue length Reviewed by: Cody Peter Mello
 <cody.mello@joyent.com>

---
 lib/pool.js  | 17 +++++++++++++++++
 package.json |  2 +-
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/lib/pool.js b/lib/pool.js
index 25de239..fad1a11 100644
--- a/lib/pool.js
+++ b/lib/pool.js
@@ -154,6 +154,15 @@ CueBallConnectionPool.prototype._incrCounter = function (counter) {
 	++this.p_counters[counter];
 };
 
+CueBallConnectionPool.prototype._hwmCounter = function (counter, val) {
+	if (this.p_counters[counter] === undefined) {
+		this.p_counters[counter] = val;
+		return;
+	}
+	if (this.p_counters[counter] < val)
+		this.p_counters[counter] = val;
+};
+
 CueBallConnectionPool.prototype.on_resolver_added = function (k, backend) {
 	backend.key = k;
 	var idx = Math.floor(Math.random() * (this.p_keys.length + 1));
@@ -220,6 +229,7 @@ CueBallConnectionPool.prototype.state_starting = function (S) {
 
 	S.on(this, 'closedBackend', function (fsm) {
 		var dead = Object.keys(self.p_dead).length;
+		this._hwmCounter('max-dead-backends', dead);
 		if (dead >= self.p_keys.length) {
 			self.p_log.error(
 			    { dead: dead },
@@ -251,6 +261,8 @@ CueBallConnectionPool.prototype.state_failed = function (S) {
 	S.on(this, 'stopAsserted', function () {
 		S.gotoState('stopping');
 	});
+
+	this._incrCounter('failed-state');
 };
 
 CueBallConnectionPool.prototype.state_running = function (S) {
@@ -263,6 +275,7 @@ CueBallConnectionPool.prototype.state_running = function (S) {
 
 	S.on(this, 'closedBackend', function (fsm) {
 		var dead = Object.keys(self.p_dead).length;
+		this._hwmCounter('max-dead-backends', dead);
 		if (dead >= self.p_keys.length) {
 			self.p_log.error(
 			    { dead: dead },
@@ -659,6 +672,10 @@ CueBallConnectionPool.prototype.claim = function (options, cb) {
 	};
 	waiter.stack = e.stack;
 	var qnode = this.p_waiters.push(waiter);
+
+	this._hwmCounter('max-claim-queue', this.p_waiters.length);
+	this._incrCounter('queued-claim');
+
 	if (timeout !== Infinity) {
 		timer = setTimeout(function () {
 			if (timer === undefined)
diff --git a/package.json b/package.json
index f9dad64..f86c575 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "cueball",
-  "version": "1.1.1",
+  "version": "1.1.2",
   "description": "",
   "main": "lib/index.js",
   "dependencies": {
-- 
2.21.0

