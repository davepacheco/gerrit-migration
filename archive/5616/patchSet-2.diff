commit d73d4b650fa5e6668a8c872ed93ddaefaedc396e (refs/changes/16/5616/2)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2019-02-20T13:28:01-08:00 (8 months ago)
    
    TRITON-1242 Create DAPI filter to allow filtering out virtual servers

diff --git a/docs/index.md b/docs/index.md
index 95b29dc..99950fd 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -445,6 +445,7 @@ aware that you'll need to add the custom file back after any DAPI zone upgrade.
 | hard-filter-traits              | Removes CNs with traits that cannot fulfill VM traits.       |
 | hard-filter-vlans               | Removes CNs which do not have required nic tags.             |
 | hard-filter-vm-count            | Removes CNs with more than 223 (default) VMs.                |
+| hard-filter-virtual-servers     | Removes CNs which are virtual servers (e.g. mockcloud).      |
 | hard-filter-volumes-from        | Removes CNs which do not contain VMs listed in docker:volumesfrom metadata, if provided. |
 | identity                        | Returns the same servers it received.                        |
 | load-server-vms                 | Populates all server.vms with VM information if sys.getServerVms was passed to allocator constructor. |
diff --git a/lib/algorithms/hard-filter-virtual-servers.js b/lib/algorithms/hard-filter-virtual-servers.js
new file mode 100644
index 0000000..2f9dc45
--- /dev/null
+++ b/lib/algorithms/hard-filter-virtual-servers.js
@@ -0,0 +1,70 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
+/*
+ * TRITON-1242: Returns servers which are not virtual (mockcloud) servers.
+ *
+ * This filter is only needed in test enviroments where virtual testing CNs
+ * are being used.
+ *
+ * This filter is enabled when any one of the following conditions are met:
+ *  - vm is a docker container
+ *  - the vm has the 'triton.placement.exclude_virtual_servers' tag set to true
+ */
+
+var assert = require('assert-plus');
+
+var EXCLUDE_VIRTUAL_SERVERS_TAG = 'triton.placement.exclude_virtual_servers';
+
+function
+filterVirtualServers(servers, opts, cb)
+{
+	assert.arrayOfObject(servers, 'servers');
+	assert.object(opts, 'opts');
+	assert.object(opts.vm, 'opts.vm');
+	assert.object(opts.log, 'opts.log');
+	assert.func(cb, 'cb');
+
+	var log = opts.log;
+	var vm = opts.vm;
+
+	// Check if we need to exclude virtual servers. Currently we exclude
+	// virtual servers for *all* docker provisions and for provisions that
+	// have asked nicely (have the exclude virtual tag set).
+	var excludeVirtualServers = vm.docker || (vm.tags &&
+		vm.tags[EXCLUDE_VIRTUAL_SERVERS_TAG]);
+
+	var reasons = {};
+	var adequateServers;
+
+	if (!excludeVirtualServers) {
+		cb(null, servers, reasons);
+		return;
+	}
+
+	log.trace('Filtering virtual servers');
+
+	adequateServers = servers.filter(function _filterVC(server) {
+		if (server.sysinfo &&
+				server.sysinfo['System Type'] === 'Virtual') {
+			reasons[server.uuid] =
+				'Server is a virtual server - excluding';
+			return (false);
+		}
+		return (true);
+	});
+
+	cb(null, adequateServers, reasons);
+}
+
+module.exports = {
+	name: 'Servers which are not virtial servers',
+	run: filterVirtualServers
+};
diff --git a/package.json b/package.json
index c764497..55beddb 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "dapi",
   "description": "SmartDataCenter Designation API",
-  "version": "8.5.0",
+  "version": "8.6.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/algorithms/hard-filter-virtual-servers.test.js b/test/algorithms/hard-filter-virtual-servers.test.js
new file mode 100644
index 0000000..eaec7fa
--- /dev/null
+++ b/test/algorithms/hard-filter-virtual-servers.test.js
@@ -0,0 +1,80 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2019, Joyent, Inc.
+ */
+
+var test = require('tape');
+var filter = require('../../lib/algorithms/hard-filter-virtual-servers.js');
+var common = require('./common.js');
+
+
+var REASON_EXCLUDE_VIRTUAL_SERVER = 'Server is a virtual server - excluding';
+var SERVERS = [
+	{
+	uuid: 'f0908343-5410-47b0-b6c4-b724a14ffda5',
+	vms: {},
+	sysinfo: {
+		'System Type': 'Virtual'
+	}
+	},
+	{
+	uuid: '00C081e8-9577-87b1-e6c8-c624a14afbd5',
+	vms : {}
+	}
+];
+
+
+var checkFilter = common.createPluginChecker(filter);
+
+
+test('filterVirtualServers() without flag', function _testVSNoFlag(t) {
+	var expectServers = [ SERVERS[0], SERVERS[1] ];
+	var expectReasons = {};
+
+	var opts = { vm: {}, pkg: {} };
+
+	checkFilter(t, SERVERS, opts, expectServers, expectReasons);
+});
+
+test('filterVirtualServers() with exclude_virtual_servers tag set',
+	function _testVSWithFlagSet(t) {
+	var expectServers = [SERVERS[1]];
+	var expectReasons = {};
+	expectReasons[SERVERS[0].uuid] = REASON_EXCLUDE_VIRTUAL_SERVER;
+
+	var opts = {
+	vm: {
+		tags: {
+		'triton.placement.exclude_virtual_servers': true
+		}
+	}, pkg: {
+	}
+	};
+
+	checkFilter(t, SERVERS, opts, expectServers, expectReasons);
+});
+
+test('filterVirtualServers() for docker vm', function _testVSForDockerVm(t) {
+	var expectServers = [SERVERS[1]];
+	var expectReasons = {};
+	expectReasons[SERVERS[0].uuid] = REASON_EXCLUDE_VIRTUAL_SERVER;
+
+	var opts = {
+	vm: {
+		docker: true
+	}, pkg: {
+	}
+	};
+
+	checkFilter(t, SERVERS, opts, expectServers, expectReasons);
+});
+
+test('name', function _testName(t) {
+	t.equal(typeof (filter.name), 'string');
+	t.end();
+});
