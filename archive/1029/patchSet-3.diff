From ac6186891fd6ed82c638915835ca1ceb28ad9df5 Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <jwilsdon@joyent.com>
Date: Wed, 1 Feb 2017 14:24:48 -0800
Subject: [PATCH] AGENT-1049 vm-agent blows up when VM is deleted while loading
 Reviewed by: Orlando Vazquez <orlando@joyent.com>

---
 lib/vm-agent.js | 34 ++++++++++++++++++++++++----------
 1 file changed, 24 insertions(+), 10 deletions(-)

diff --git a/lib/vm-agent.js b/lib/vm-agent.js
index ee5dd4c..fd20685 100644
--- a/lib/vm-agent.js
+++ b/lib/vm-agent.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -268,15 +268,25 @@ VmAgent.prototype.updateVmapiVm = function updateVmapiVm(vmUuid, callback) {
 
                     // We need the VM to have been seen either when it was
                     // created, or when we initially started up. Otherwise, we
-                    // don't have the VM object to post to VMAPI.
-                    assert.ok(self.lastSeenVms.hasOwnProperty(_vmUuid),
-                        'VM ' + _vmUuid + ' not seen before');
+                    // don't have the VM object to post to VMAPI. If we don't
+                    // have a VM object we can't tell VMAPI anything about this
+                    // VM. The only thing we *could* do, is query VMAPI to see
+                    // if *it* knows anything about this VM and if so, swap in
+                    // 'destroyed' for the state and PUT it back, but we don't
+                    // currently do that.
+                    if (self.lastSeenVms.hasOwnProperty(_vmUuid)) {
+                        self.lastSeenVms[_vmUuid].state = 'destroyed';
+                        self.lastSeenVms[_vmUuid].zone_state = 'destroyed';
+                        stash.vmobj = self.lastSeenVms[_vmUuid];
+                    } else {
+                        self.log.warn({vmUuid: _vmUuid}, 'no VM object for VM '
+                            + _vmUuid + ' and no longer exists.');
 
-                    self.lastSeenVms[_vmUuid].state = 'destroyed';
-                    self.lastSeenVms[_vmUuid].zone_state = 'destroyed';
-                    stash.vmobj = self.lastSeenVms[_vmUuid];
+                        loadErr = new Error('VM no longer exists');
+                        loadErr.restCode = 'VmNotFound';
+                    }
 
-                    next();
+                    next(loadErr);
                     return;
                 }
 
@@ -351,8 +361,12 @@ VmAgent.prototype.updateVmapiVm = function updateVmapiVm(vmUuid, callback) {
     ]}, function _updateVmComplete(err) {
         var ignore = false;
 
-        // We don't sent updates for VMs that have do_not_inventory set
-        if (err && err.restCode === 'VmNotInventoriable') {
+        // We don't sent updates for VMs that have do_not_inventory set or which
+        // disappeared while loading.
+        if (err && [
+            'VmNotFound',
+            'VmNotInventoriable'
+        ].indexOf(err.restCode) !== -1) {
             ignore = true;
         }
 
-- 
2.21.0

