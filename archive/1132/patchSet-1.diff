From cebd6340cb2b0cc384d31bde9687e61d905c3273 Mon Sep 17 00:00:00 2001
From: Jerry Jelinek <jerry.jelinek@joyent.com>
Date: Fri, 16 Dec 2016 16:31:45 +0000
Subject: [PATCH] OS-5844 chromium error: FATAL:thread_helpers.cc(44)] Check
 failed: 3UL <= task_stat.st_nlink (3 vs. 1)

---
 .../uts/common/brand/lx/procfs/lx_prvnops.c   | 35 +++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/usr/src/uts/common/brand/lx/procfs/lx_prvnops.c b/usr/src/uts/common/brand/lx/procfs/lx_prvnops.c
index edfada483c..cb9a2e2044 100644
--- a/usr/src/uts/common/brand/lx/procfs/lx_prvnops.c
+++ b/usr/src/uts/common/brand/lx/procfs/lx_prvnops.c
@@ -5404,6 +5404,37 @@ lxpr_read_filesystems(lxpr_node_t *lxpnp, lxpr_uiobuf_t *uiobuf)
 	lxpr_uiobuf_printf(uiobuf, "%s\t%s\n", "nodev", "tmpfs");
 }
 
+/*
+ * Calculate the number of links in the task dir. Some code (e.g. chromium)
+ * depends on this value being accurate.
+ */
+static int
+lxpr_count_taskdir(lxpr_node_t *lxpnp)
+{
+	proc_t *p;
+	int cnt;
+
+	ASSERT(lxpnp->lxpr_type == LXPR_PID_TASKDIR);
+
+	p = lxpr_lock(lxpnp, ZOMB_OK);
+	if (p == NULL)
+		return (0);
+
+	/* Just count "." and ".." for system processes and zombies. */
+	if ((p->p_stat == SZOMB) || (p->p_flag & (SSYS | SEXITING)) ||
+	    (p->p_as == &kas)) {
+		lxpr_unlock(p);
+		return (2);
+	}
+
+	cnt = p->p_lwpcnt;
+	lxpr_unlock(p);
+
+	/* Add the fixed entries ("." & "..") */
+	cnt += 2;
+	return (cnt);
+}
+
 /*
  * lxpr_getattr(): Vnode operation for VOP_GETATTR()
  */
@@ -5472,6 +5503,10 @@ lxpr_getattr(vnode_t *vp, vattr_t *vap, int flags, cred_t *cr,
 		vap->va_nlink = PIDDIRFILES;
 		vap->va_size = PIDDIRFILES * LXPR_SDSIZE;
 		break;
+	case LXPR_PID_TASKDIR:
+		vap->va_nlink = lxpr_count_taskdir(lxpnp);
+		vap->va_size = vap->va_nlink * LXPR_SDSIZE;
+		break;
 	case LXPR_PID_TASK_IDDIR:
 		vap->va_nlink = TIDDIRFILES;
 		vap->va_size = TIDDIRFILES * LXPR_SDSIZE;
-- 
2.21.0

