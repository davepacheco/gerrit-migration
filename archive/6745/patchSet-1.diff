commit 60f45a87158233718ae328229c3ee349226347af
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2019-08-02T13:56:28-07:00 (9 weeks ago)
    
    TRITON-1858 move instance migration quota handling to the begin/switch phases

diff --git a/lib/workflows/migrate-begin.js b/lib/workflows/migrate-begin.js
index d770557..a9f6057 100644
--- a/lib/workflows/migrate-begin.js
+++ b/lib/workflows/migrate-begin.js
@@ -68,6 +68,10 @@ var workflow = module.exports = {
         migrationCommon.tasks.removeTargetZfsQuota,
         common.tasks.waitTask,
 
+        common.tasks.setupForWaitTask,
+        migrationCommon.tasks.removeSourceZfsQuota,
+        common.tasks.waitTask,
+
         migrationCommon.tasks.storeSuccess,
 
         migrationBegin.tasks.startSyncWhenAutomatic
diff --git a/lib/workflows/migrate-sync.js b/lib/workflows/migrate-sync.js
index c04b1c2..795b66f 100644
--- a/lib/workflows/migrate-sync.js
+++ b/lib/workflows/migrate-sync.js
@@ -42,10 +42,6 @@ var workflow = module.exports = {
         /* Other vm actions are allowed now. */
         common.tasks.releaseVMTicket,
 
-        common.tasks.setupForWaitTask,
-        migrationCommon.tasks.removeSourceZfsQuota,
-        common.tasks.waitTask,
-
         /* Start source migration listener process. */
         common.tasks.setupForWaitTask,
         migrationCommon.tasks.setupCnapiSource,
@@ -61,10 +57,6 @@ var workflow = module.exports = {
         /* Do the sync */
         migrationSync.tasks.sync,
 
-        common.tasks.setupForWaitTask,
-        migrationCommon.tasks.restoreSourceZfsQuota,
-        common.tasks.waitTask,
-
         migrationCommon.tasks.storeSuccess,
 
         migrationSync.tasks.startSyncOrSwitchWhenAutomatic
@@ -73,7 +65,6 @@ var workflow = module.exports = {
     onerror: [
         cleanupSource,
         cleanupTarget,
-        migrationCommon.tasks.restoreSourceZfsQuota,
         migrationCommon.tasks.storeFailure,
         common.tasks.releaseVMTicketIgnoringErr
     ],
@@ -81,7 +72,6 @@ var workflow = module.exports = {
     oncancel: [
         cleanupSource,
         cleanupTarget,
-        migrationCommon.tasks.restoreSourceZfsQuota,
         migrationCommon.tasks.storeFailure,
         common.tasks.releaseVMTicketIgnoringErr
     ]
diff --git a/package.json b/package.json
index edc6f64..5f5efe5 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "vmapi",
   "description": "VMs API",
-  "version": "9.8.14",
+  "version": "9.8.15",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/lib/migration.js b/test/lib/migration.js
index cfc414c..612825e 100644
--- a/test/lib/migration.js
+++ b/test/lib/migration.js
@@ -14,6 +14,7 @@ var util = require('util');
 var assert = require('assert-plus');
 var byline = require('byline');
 var jsprim = require('jsprim');
+var libuuid = require('libuuid');
 var restify = require('restify');
 var vasync = require('vasync');
 
@@ -488,9 +489,10 @@ function TestMigrationCfg(test, cfg) {
 
         if (migrationUuidOverride) {
             // Change the uuid to allow on the same CN.
+            var uuidEnd = '-ab0' + libuuid.create().slice(-9);
             params = {
-                override_uuid: sourceVm.uuid.slice(0, -6) + 'ab0ab0',
-                override_alias: cfg.vm.alias + '-abort'
+                override_uuid: sourceVm.uuid.slice(0, -13) + uuidEnd,
+                override_alias: cfg.vm.alias + uuidEnd
             };
         }
 
@@ -611,9 +613,10 @@ function TestMigrationCfg(test, cfg) {
 
         if (migrationUuidOverride) {
             // Change the uuid to allow on the same CN.
+            var uuidEnd = '-abc' + libuuid.create().slice(-9);
             params = {
-                override_uuid: sourceVm.uuid.slice(0, -6) + 'aaaaaa',
-                override_alias: cfg.vm.alias + '-aaaaaa'
+                override_uuid: sourceVm.uuid.slice(0, -13) + uuidEnd,
+                override_alias: cfg.vm.alias + uuidEnd
             };
         }
 
@@ -1330,8 +1333,9 @@ function TestMigrationCfg(test, cfg) {
 
         if (migrationUuidOverride) {
             // Change the uuid to allow on the same CN.
-            params.override_uuid = sourceVm.uuid.slice(0, -6) + 'bbbbbb';
-            params.override_alias = sourceVm.uuid.slice(0, -6) + 'bbbbbb';
+            var uuidEnd = '-bbb' + libuuid.create().slice(-9);
+            params.override_uuid = sourceVm.uuid.slice(0, -13) + uuidEnd;
+            params.override_alias = cfg.vm.alias + uuidEnd;
         }
 
         client.post({path: format('/vms/%s', sourceVm.uuid)},
