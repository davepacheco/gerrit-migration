{"project":"joyent/node-sdc-clients","branch":"master","id":"I34c5a64b58e7c54477bfc8245880cf29a6842215","number":"6232","subject":"TRITON-1659 32-bit config-agent should be buildable on x86_64 Reviewed by: Trent Mick \u003ctrentm@gmail.com\u003e Approved by: Trent Mick \u003ctrentm@gmail.com\u003e","owner":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"url":"https://cr.joyent.us/6232","commitMessage":"TRITON-1659 32-bit config-agent should be buildable on x86_64\nReviewed by: Trent Mick \u003ctrentm@gmail.com\u003e\nApproved by: Trent Mick \u003ctrentm@gmail.com\u003e\n","createdOn":1557518570,"lastUpdated":1557769225,"open":false,"status":"MERGED","comments":[{"timestamp":1557518570,"reviewer":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"message":"Uploaded patch set 1."},{"timestamp":1557518596,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1557518608,"reviewer":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"message":"Patch Set 1:\n\nOut put from passing tests:\n\n[root@headnode (nightly-4) /var/tmp/client]# ./test/runtests \n\n# Datacenter config:\n#     AMON_IP is 172.25.6.24\n#     CNAPI_IP is 172.25.6.22\n#     CNS_IP is 172.25.6.39\n#     IMGAPI_IP is 172.25.6.21\n#     MORAY_IP is 172.25.6.17\n#     NAPI_IP is 172.25.6.10\n#     PAPI_IP is 172.25.6.28\n#     UFDS_ADMIN_UUID is 930896af-bf8c-48d4-885c-6573a94b1853\n#     VMAPI_IP is 172.25.6.26\n#     VOLAPI_IP is 172.25.6.42\n\nTAP version 13\n# cnapi\n#  setup\n#  list servers (paging)\nok 1\nok 2 got an array of servers\nok 3 got at least one server\nok 4 listServers returned the first req\nok 5 listServers returned the first res\n#  list servers (limit\u003d1, one request)\nok 6\nok 7 got an array of servers\nok 8 limit\u003d1 returned exactly one server\nok 9 listServers returned the first req\nok 10 listServers returned the first res\n#  find server with which to test\nok 11\n#  get server\nok 12 null\nok 13 should be truthy\n#  create vm\nok 14 null\nok 15 should be truthy\n#  get task\nok 16 null\n#  wait for running\nok 17 undefined\n#  stop vm\nok 18 null\nok 19 should be truthy\n#  wait for stopped\nok 20 undefined\n#  start vm\nok 21 null\nok 22 should be truthy\n#  wait for running\nok 23 undefined\n#  reboot vm\nok 24 null\nok 25 should be truthy\n#  wait for running\nok 26 undefined\n#  delete vm\nok 27 null\nok 28 should be truthy\n#  wait for deleted\nok 29 null\n#  command execute\nok 30 null\n#  command execute with env\nok 31 null\n#  capacity 1\nok 32 null\nok 33 body\nok 34 body.capacities\nok 35 exactly one body.capacities entry\nok 36 server.cpu\nok 37 server.ram\nok 38 server.disk\n#  capacity 2\nok 39 null\nok 40 body\nok 41 body.capacities\nok 42 at least one body.capacities\nok 43 server.cpu\nok 44 server.ram\nok 45 server.disk\nok 46 server.cpu\nok 47 server.ram\nok 48 server.disk\nok 49 server.cpu\nok 50 server.ram\nok 51 server.disk\nok 52 server.cpu\nok 53 server.ram\nok 54 server.disk\nok 55 server.cpu\nok 56 server.ram\nok 57 server.disk\nok 58 server.cpu\nok 59 server.ram\nok 60 server.disk\nok 61 server.cpu\nok 62 server.ram\nok 63 server.disk\nok 64 server.cpu\nok 65 server.ram\nok 66 server.disk\nok 67 server.cpu\nok 68 server.ram\nok 69 server.disk\nok 70 server.cpu\nok 71 server.ram\nok 72 server.disk\nok 73 server.cpu\nok 74 server.ram\nok 75 server.disk\n#  teardown\n# cns\n#  setup\n#  ping\nok 76 null\n#  list zones\nok 77 null\nok 78 should be truthy\nok 79 should be truthy\nok 80 should be truthy\nok 81 should be truthy\nok 82 should be truthy\n#  teardown\n# imgapi\n#  setup\n# ping\nok 83 pinging IMGAPI should be successful\n# teardown\n# napi\n#  setup\n#  list networks\nok 84 listNetworks does not error\nok 85 listNetworks returns results\nok 86 listNetworks non-empty\nok 87 NAPI GET /networks name OK\nok 88 NAPI GET /networks name OK\nok 89 NAPI GET /networks name OK\nok 90 NAPI GET /networks name OK\nok 91 NAPI GET /networks name OK\nok 92 NAPI GET /networks name OK\nok 93 NAPI GET /networks name OK\nok 94 NAPI GET /networks name OK\nok 95 NAPI GET /networks name OK\nok 96 NAPI GET /networks name OK\nok 97 NAPI GET /networks name OK\nok 98 NAPI GET /networks name OK\nok 99 NAPI GET /networks name OK\nok 100 NAPI GET /networks name OK\nok 101 NAPI GET /networks name OK\nok 102 NAPI GET /networks name OK\nok 103 NAPI GET /networks name OK\nok 104 NAPI GET /networks name OK\nok 105 NAPI GET /networks name OK\nok 106 NAPI GET /networks name OK\nok 107 NAPI GET /networks name OK\nok 108 NAPI GET /networks name OK\nok 109 NAPI GET /networks name OK\nok 110 NAPI GET /networks name OK\nok 111 NAPI GET /networks name OK\nok 112 NAPI GET /networks name OK\nok 113 NAPI GET /networks name OK\nok 114 NAPI GET /networks name OK\nok 115 NAPI GET /networks name OK\nok 116 NAPI GET /networks name OK\nok 117 NAPI GET /networks name OK\nok 118 NAPI GET /networks name OK\nok 119 NAPI GET /networks name OK\nok 120 NAPI GET /networks name OK\nok 121 NAPI GET /networks name OK\nok 122 NAPI GET /networks name OK\nok 123 NAPI GET /networks name OK\nok 124 NAPI GET /networks name OK\nok 125 NAPI GET /networks name OK\nok 126 NAPI GET /networks name OK\nok 127 NAPI GET /networks name OK\nok 128 NAPI GET /networks name OK\nok 129 NAPI GET /networks name OK\nok 130 NAPI GET /networks name OK\nok 131 NAPI GET /networks name OK\nok 132 NAPI GET /networks name OK\nok 133 NAPI GET /networks name OK\nok 134 NAPI GET /networks name OK\nok 135 NAPI GET /networks name OK\nok 136 NAPI GET /networks name OK\nok 137 NAPI GET /networks name OK\nok 138 NAPI GET /networks name OK\nok 139 NAPI GET /networks name OK\nok 140 NAPI GET /networks name OK\nok 141 NAPI GET /networks name OK\nok 142 NAPI GET /networks name OK\nok 143 NAPI GET /networks name OK\nok 144 NAPI GET /networks name OK\nok 145 NAPI GET /networks name OK\nok 146 NAPI GET /networks name OK\nok 147 NAPI GET /networks name OK\nok 148 NAPI GET /networks name OK\nok 149 NAPI GET /networks name OK\nok 150 NAPI GET /networks name OK\nok 151 NAPI GET /networks name OK\nok 152 NAPI GET /networks name OK\nok 153 NAPI GET /networks name OK\nok 154 NAPI GET /networks name OK\nok 155 NAPI GET /networks name OK\nok 156 NAPI GET /networks name OK\nok 157 NAPI GET /networks name OK\nok 158 NAPI GET /networks name OK\nok 159 NAPI GET /networks name OK\nok 160 NAPI GET /networks name OK\nok 161 NAPI GET /networks name OK\nok 162 NAPI GET /networks name OK\nok 163 NAPI GET /networks name OK\nok 164 NAPI GET /networks name OK\nok 165 NAPI GET /networks name OK\nok 166 NAPI GET /networks name OK\nok 167 NAPI GET /networks name OK\nok 168 NAPI GET /networks name OK\nok 169 NAPI GET /networks name OK\nok 170 NAPI GET /networks name OK\nok 171 NAPI GET /networks name OK\nok 172 NAPI GET /networks name OK\nok 173 NAPI GET /networks name OK\nok 174 NAPI GET /networks name OK\nok 175 NAPI GET /networks name OK\nok 176 NAPI GET /networks name OK\nok 177 NAPI GET /networks name OK\nok 178 NAPI GET /networks name OK\nok 179 NAPI GET /networks name OK\nok 180 NAPI GET /networks name OK\nok 181 NAPI GET /networks name OK\nok 182 NAPI GET /networks name OK\nok 183 NAPI GET /networks name OK\nok 184 NAPI GET /networks name OK\nok 185 NAPI GET /networks name OK\nok 186 NAPI GET /networks name OK\nok 187 NAPI GET /networks name OK\nok 188 NAPI GET /networks name OK\nok 189 NAPI GET /networks name OK\n#  get network by uuid\nok 190 getNetwork does not error\nok 191 getNetwork returns a result\nok 192 getNetwork result lacks a uuid\nok 193 should be equal\n#  get unprovisionable network\nok 194 getNetwork should err with invalid provisionable_by\nok 195 err message as expected\n#  ping\nok 196 null\n#  list network ips\nok 197 null\nok 198 should be truthy\nok 199 should be truthy\nok 200 should be truthy\nok 201 should be truthy\nok 202 should be truthy\nok 203 should be truthy\nok 204 should be truthy\n#  get ip\nok 205 null\nok 206 should be truthy\nok 207 should be equivalent\n#  list nics\nok 208 null\nok 209 should be truthy\nok 210 should be truthy\nok 211 should be truthy\nok 212 should be truthy\nok 213 should be truthy\nok 214 should be truthy\n#  provision nic\nok 215 null\nok 216 should be truthy\nok 217 should be truthy\nok 218 should be equal\nok 219 should be equal\nok 220 should be equal\n#  create new\nok 221 null\nok 222 should be truthy\nok 223 should be truthy\nok 224 should be equal\nok 225 should be equal\nok 226 should be equal\n#  get nic\nok 227 null\nok 228 should be truthy\n#  update nic\nok 229 null\nok 230 should be truthy\n#  get nics by owner\nok 231 null\nok 232 should be truthy\nok 233 should be truthy\nok 234 should be truthy\n#  delete nic\nok 235 null\n#  delete nic 2\nok 236 null\n#  teardown\n# papi\n#  setup\n#  cleanup stale packages\nok 237 null\n#  create package\nok 238 null\nok 239 should be truthy\nok 240 should be truthy\nok 241 should be equal\nok 242 should be equal\nok 243 should be equal\nok 244 should be truthy\nok 245 should be equal\nok 246 should be equivalent\nok 247 should be equal\n#  get package by uuid\nok 248 null\nok 249 should be truthy\nok 250 should be equal\n#  client created without \"new PAPI\"\nok 251 null\nok 252 should be truthy\nok 253 should be equal\n#  get package by uuid with owner\nok 254 null\nok 255 should be truthy\nok 256 should be truthy\nok 257 null\nok 258 should be truthy\nok 259 should be equal\n#  get package by uuid with bad owner\nok 260 should be truthy\n#  modify mutable attribute\nok 261 null\nok 262 should be truthy\nok 263 should be equal\nok 264 should be equal\nok 265 should be equal\nok 266 should be equal\nok 267 networks is array\n#  modify immutable attribute\nok 268 should be truthy\nok 269 should be truthy\nok 270 should be equivalent\n#  delete package\nok 271 should be truthy\nok 272 should be equal\nok 273 should be equal\n#  list packages\nok 274 null\nok 275 should be truthy\nok 276 should be truthy\nok 277 null\nok 278 should be truthy\n#  list packages using wildcards with escaping\nok 279 null\nok 280 should be truthy\nok 281 should be truthy\n#  list packages using wildcards without escaping\nok 282 null\nok 283 should be truthy\nok 284 should be truthy\n#  search packages\nok 285 null\nok 286 should be truthy\nok 287 should be equal\nok 288 should be equal\nok 289 should be equal\n#  cleanup leftover packages\nok 290 null\n#  teardown\n# vmapi\n#  setup\n#  list networks\nok 291 null\nok 292 should be truthy\nok 293 null\nok 294 should be truthy\n#  cleanup leftover test vms\nok 295 null\n#  create test list pagination vms\nok 296 null\n#  list pagination vms\nok 297 undefined\nok 298 should be truthy\nok 299 listVms should return 2001 VMs, but instead returned 2001\n#  test list pagination vms\nok 300 null\n#  list vms\nok 301 undefined\nok 302 should be truthy\n#  list vms by owner\nok 303 CUSTOMER is set\nok 304 undefined\nok 305 should be truthy\n#  count vms\nok 306 null\nok 307 should be truthy\n#  get vm\nok 308 null\nok 309 should be truthy\n#  sync vm\nok 310 null\nok 311 should be truthy\n#  find headnode\nok 312 null\nok 313 should be truthy\nok 314 should be truthy\nok 315 should be truthy\nok 316 should be truthy\nok 317 should be truthy\n#  create zone\nok 318 null\nok 319 should be truthy\n#  wait for running job\nok 320 job is 2f262a39-bc95-4f61-999c-1c850039b122\nok 321 null\n#  wait for running\nok 322 null\n#  get new vm\nok 323 null\nok 324 should be truthy\n#  update zone\nok 325 null\nok 326 should be truthy\n#  wait for updated job\nok 327 null\n#  wait for updated\nok 328 null\n#  add metadata\nok 329 null\nok 330 should be truthy\n#  wait for add metadata job\nok 331 null\n#  wait for add metadata\nok 332 null\n#  list metadata\nok 333 null\nok 334 should be truthy\n#  get metadata\nok 335 null\nok 336 should be truthy\n#  set metadata\nok 337 null\nok 338 should be truthy\n#  wait for set metadata job\nok 339 null\n#  wait for set metadata\nok 340 null\n#  delete metadata\nok 341 null\nok 342 should be truthy\n#  wait for no metadata job\nok 343 null\n#  wait for no metadata\nok 344 null\n#  add role tags\nok 345 null\nok 346 should be truthy\nok 347 should be equal\nok 348 should be equal\n#  list role tags\nok 349 null\nok 350 should be truthy\n#  set role tags\nok 351 null\nok 352 should be truthy\nok 353 should be equal\nok 354 should be equal\n#  delete role tag\nok 355 null\nok 356 should be truthy\n#  delete role tags\nok 357 null\nok 358 should be truthy\n#  stop zone\nok 359 null\nok 360 should be truthy\n#  wait for stopped job\nok 361 null\n#  wait for stopped\nok 362 null\n#  start zone\nok 363 null\nok 364 should be truthy\n#  wait for started job\nok 365 null\n#  wait for started\nok 366 null\n#  reboot zone\nok 367 null\nok 368 should be truthy\n#  wait for reboot job\nok 369 null\n#  wait for reboot\nok 370 null\n#  add nics using networks\nok 371 null\nok 372 should be truthy\nok 373 JOB_UUID is e31c36fe-be83-4142-aac3-988ee0c0cfac\n#  wait for add nics using networks job\nok 374 null\n#  wait for add nics using networks running\nok 375 null\n#  add nics using macs\nok 376 null\nok 377 null\nok 378 should be truthy\n#  wait for add nics using macs job\nok 379 null\n#  wait for add nics using macs running\nok 380 null\n#  get new vm nics\nok 381 null\nok 382 should be truthy\n#  update nics\nok 383 null\nok 384 should be truthy\n#  wait for update nics job\nok 385 null\n#  wait for update nics running\nok 386 null\n#  remove nics\nok 387 null\nok 388 should be truthy\n#  wait for remove nics job\nok 389 null\n#  wait for remove nics running\nok 390 null\n#  snapshot zone\nok 391 null\nok 392 should be truthy\n#  wait for snapshot job\nok 393 null\n#  wait for snapshotted\nok 394 null\n#  rollback zone\nok 395 null\nok 396 should be truthy\n#  wait for rollback job\nok 397 null\n#  wait for rolled back\nok 398 null\n#  delete snapshot\nok 399 null\nok 400 should be truthy\n#  delete snapshot job\nok 401 null\n#  reprovision zone\nok 402 null\nok 403 should be truthy\n#  wait for reprovision job\nok 404 null\n#  wait for reprovision running\nok 405 null\n#  destroy zone\nok 406 null\nok 407 should be truthy\n#  wait for destroyed job\nok 408 null\n#  wait for destroyed\nok 409 null\n#  list jobs\nok 410 null\nok 411 should be truthy\n#  get job\nok 412 null\nok 413 should be truthy\n#  check expected jobs\nok 414 null\nok 415 should be truthy\nok 416 should be equivalent\nok 417 should be truthy\nok 418 should be equivalent\nok 419 should be truthy\nok 420 should be equivalent\nok 421 should be truthy\nok 422 should be equivalent\nok 423 should be truthy\nok 424 should be equivalent\nok 425 should be truthy\nok 426 should be equivalent\nok 427 should be truthy\nok 428 should be equivalent\nok 429 should be truthy\nok 430 should be equivalent\nok 431 should be truthy\nok 432 should be equivalent\nok 433 should be truthy\nok 434 should be equivalent\nok 435 should be truthy\nok 436 should be equivalent\nok 437 should be truthy\nok 438 should be equivalent\nok 439 should be truthy\nok 440 should be equivalent\nok 441 should be truthy\nok 442 should be equivalent\nok 443 should be truthy\nok 444 should be equivalent\nok 445 should be truthy\nok 446 should be equivalent\nok 447 should be truthy\nok 448 should be equivalent\n#  teardown\n# volapi\n#  setup\nok 449 created volapi client\n#  ping\nok 450 ping should succeed\n#  get admin\u0027s fabric network\nok 451 listing fabric networks for the admin user should not error\nok 452 listing fabric networks for the admin user should not return an empty list of networks\nok 453 admin user should have at least one fabric network\n#  create volume\nok 454 creating volume node-sdc-clients-test-volapi-b39710eb-7c93-4e13-8252-4708c10fa1dbshould not error, got error: null\nok 455 createVolumeAndWait should return a volume\nok 456 newly created volume should have a non-empty \"uuid\" property\nok 457 newly created volume\u0027s state should be ready\n#  list volumes\nok 458 listVolumes should succeed\nok 459 listVolumes should return object\nok 460 listVolumes object should be an array\nok 461 listing volume with params [object Object] should output exactly one volume\nok 462 listed volume should have name node-sdc-clients-test-volapi-b39710eb-7c93-4e13-8252-4708c10fa1db\nok 463 listed volume should have type tritonnfs\n#  delete volumes\nok 464 deleting volume with params [object Object]should not error\n#  list volume sizes\nok 465 ListVolumeSizes should succeed\nok 466 should have received object from ListVolumeSizes\nok 467 volume sizes object should be array\nok 468 volume sizes array should have at least 1 size object\nok 469 expected value for size, got: 10240\nok 470 description should be tritonnfs, got: tritonnfs\n#  create volume reservation\nok 471 creating volume reservation should not error\nok 472 response should be an object\nok 473 reservation object should have a uuid property\nok 474 reservation object should have a volume_name property\nok 475 reservation object should have a vm_uuid property\nok 476 reservation object should have a job_uuid property\nok 477 reservation object should have a owner_uuid property\nok 478 reservation object should have a create_timestamp property\n#  delete volume reservation\nok 479 deleting volume reservation with UUID 3645c0b9-bcc7-e456-9b28-ace985c3caf5 should not error\n#  teardown\n\n1..479\n# tests 479\n# pass  479\n\n# ok"},{"timestamp":1557518668,"reviewer":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"message":"Patch Set 1:\n\nNOTE: There are still devDeps on older versions by way of moray, but that does not matter for this exercise.\n\n[root@headnode (nightly-4) /var/tmp/client]# npm ls | grep dtrace\n│ ├─┬ dtrace-provider@0.8.7\n│ │ ├─┬ dtrace-provider@0.6.0\n│ ├── dtrace-provider@0.8.7 deduped\n│ │ │ └── dtrace-provider@0.8.7 deduped"},{"timestamp":1557518780,"reviewer":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"message":"Uploaded patch set 2."},{"timestamp":1557518806,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1557522383,"reviewer":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},"message":"Patch Set 2: Code-Review+1 Integration-Approval+1"},{"timestamp":1557769211,"reviewer":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"message":"Uploaded patch set 3: Commit message was updated."},{"timestamp":1557769225,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Chris Burroughs"}],"currentPatchSet":{"number":"3","revision":"34c5a64b58e7c54477bfc8245880cf29a6842215","parents":["5dd2d17e8ab8e2eccb49b3fa3384cbf2f25562eb"],"ref":"refs/changes/32/6232/3","uploader":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"createdOn":1557769211,"author":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1557518806,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1557522383,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1557522383,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"SUBM","value":"1","grantedOn":1557769225,"by":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":5,"deletions":0},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":7,"sizeDeletions":-2},"patchSets":[{"number":"1","revision":"8619e3f5295f00087a158e280268e26d4bd8e24a","parents":["5dd2d17e8ab8e2eccb49b3fa3384cbf2f25562eb"],"ref":"refs/changes/32/6232/1","uploader":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"createdOn":1557518570,"author":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1557518596,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":1,"sizeDeletions":-1},{"number":"2","revision":"be9577876e74eff4532cc6cb5e1240a0d63b6270","parents":["5dd2d17e8ab8e2eccb49b3fa3384cbf2f25562eb"],"ref":"refs/changes/32/6232/2","uploader":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"createdOn":1557518780,"author":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1557518806,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1557522383,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1557522383,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":5,"deletions":0},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":7,"sizeDeletions":-2},{"number":"3","revision":"34c5a64b58e7c54477bfc8245880cf29a6842215","parents":["5dd2d17e8ab8e2eccb49b3fa3384cbf2f25562eb"],"ref":"refs/changes/32/6232/3","uploader":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"createdOn":1557769211,"author":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1557518806,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1557522383,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1557522383,"by":{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"}},{"type":"SUBM","value":"1","grantedOn":1557769225,"by":{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"CHANGES.md","type":"MODIFIED","insertions":5,"deletions":0},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":7,"sizeDeletions":-2}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Trent Mick","email":"trentm@gmail.com","username":"trentm"},{"name":"Chris Burroughs","email":"chris.burroughs@joyent.com","username":"cburroughs"}]}