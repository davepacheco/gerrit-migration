{"project":"joyent/moray-test-suite","branch":"master","topic":"MORAY-346","id":"I03b0090c7b433aead4261c889a934d07db37a28d","number":"682","subject":"MORAY-346 moray client needs work MORAY-361 moray client tools hang forever while moray is down MORAY-325 node-moray client emits \u0027close\u0027 event even if some connections are still open Reviewed by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e Reviewed by: Cody P","owner":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"url":"https://cr.joyent.us/682","commitMessage":"MORAY-346 moray client needs work\nMORAY-361 moray client tools hang forever while moray is down\nMORAY-325 node-moray client emits \u0027close\u0027 event even if some connections are still open\nReviewed by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e\nReviewed by: Cody Peter Mello \u003ccody.mello@joyent.com\u003e\nApproved by: Julien Gilli \u003cjulien.gilli@joyent.com\u003e\n","createdOn":1476392376,"lastUpdated":1476493235,"open":false,"status":"MERGED","comments":[{"timestamp":1476392376,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Uploaded patch set 1."},{"timestamp":1476392407,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1476466277,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 1: Code-Review+1\n\n(9 comments)"},{"timestamp":1476467578,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\n(4 comments)\n\nThanks for taking a look.  I\u0027ve got a meeting shortly, but I will submit an updated patchset later today."},{"timestamp":1476477537,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Uploaded patch set 2."},{"timestamp":1476477704,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 1:\n\n(1 comment)\n\nJulien, I believe I\u0027ve addressed your comments in the latest patchset.  Thanks!"},{"timestamp":1476489035,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1476489253,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Patch Set 2: Integration-Approval+1"},{"timestamp":1476490748,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"Patch Set 2: Code-Review+1\n\n(1 comment)"},{"timestamp":1476491883,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1476492870,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Uploaded patch set 3: Commit message was updated."},{"timestamp":1476493235,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by David Pacheco"}],"currentPatchSet":{"number":"3","revision":"03b0090c7b433aead4261c889a934d07db37a28d","parents":["478fa1b782d1f535b339716463d4550439be0083"],"ref":"refs/changes/82/682/3","uploader":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"createdOn":1476492870,"author":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1476489035,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1476489253,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1476490748,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"SUBM","value":"1","grantedOn":1476493235,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":12,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/cli-sanity.test.js","type":"ADDED","insertions":421,"deletions":0},{"file":"test/close-handles.test.js","type":"ADDED","insertions":72,"deletions":0},{"file":"test/stress-client.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/translate-legacy.test.js","type":"ADDED","insertions":323,"deletions":0}],"sizeInsertions":822,"sizeDeletions":0},"patchSets":[{"number":"1","revision":"5b21a99be8c9515a1c1cc2a6fd24f56b76fcfdf8","parents":["478fa1b782d1f535b339716463d4550439be0083"],"ref":"refs/changes/82/682/1","uploader":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"createdOn":1476392376,"author":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1476392407,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1476466277,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"comments":[{"file":"test/cli-sanity.test.js","line":132,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Why is \"err\" ignored?"},{"file":"test/cli-sanity.test.js","line":132,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"The underlying interface always provides both \"err\" and \"info\".  The \"info\" describes completely what happened (including status code, fatal signal, stdout, and stderr of the child process).  The error is a convenience for reporting what went wrong for the common case where a signal or non-zero exit status constitutes a failure.  If we were going to check anything here, I think it would be the status code.\n\nThis whole test was really intended to be just a sanity check that the commands basically seem to work (because there was nothing before).  An exhaustive CLI test suite is beyond the scope of this change, but I could certainly add simple checks like the status code."},{"file":"test/cli-sanity.test.js","line":135,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What happens if JSON.parse throws? Does the whole process abort? Do other tests  in this file run?"},{"file":"test/cli-sanity.test.js","line":135,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"That\u0027s a good question, and I\u0027m not sure, but I consider either outcome acceptable, as long as the test program itself exits with a non-zero code (or fatal signal)."},{"file":"test/cli-sanity.test.js","line":135,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I\u0027ve tested and confirmed that the whole process exits immediately due to the thrown exception."},{"file":"test/cli-sanity.test.js","line":151,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Why is \"err\" ignored?"},{"file":"test/cli-sanity.test.js","line":152,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What happens if JSON.parse throws? Does the whole process abort? Do other tests  in this file run?"},{"file":"test/cli-sanity.test.js","line":195,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"What happens if JSON.parse throws? Does the whole process abort? Do other tests  in this file run?"},{"file":"test/cli-sanity.test.js","line":310,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is it worth it to assert on \"t\" and \"stdout\"? It seems we assume e.g that \"stdout\" is a string."},{"file":"test/cli-sanity.test.js","line":310,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Sure, I can add those."},{"file":"test/cli-sanity.test.js","line":320,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same question as before regarding JSON.parse and exceptions."},{"file":"test/translate-legacy.test.js","line":212,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Is it expected that \"checkInterval\" is not in the output? If so maybe a comment would be helpful to make it clear."},{"file":"test/translate-legacy.test.js","line":212,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Yes, it\u0027s expected.  I\u0027m not sure it\u0027s important that we provide it at all in the test, though.  I will update this to remove it."},{"file":"test/translate-legacy.test.js","line":284,"reviewer":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},"message":"Same comment as above for \"checkInterval\"."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/cli-sanity.test.js","type":"ADDED","insertions":415,"deletions":0},{"file":"test/close-handles.test.js","type":"ADDED","insertions":72,"deletions":0},{"file":"test/stress-client.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/translate-legacy.test.js","type":"ADDED","insertions":321,"deletions":0}],"sizeInsertions":814,"sizeDeletions":0},{"number":"2","revision":"b050d2d8d222e0245206def0067d9d0fcf14f47a","parents":["478fa1b782d1f535b339716463d4550439be0083"],"ref":"refs/changes/82/682/2","uploader":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"createdOn":1476477537,"author":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1476490748,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1476489035,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1476489253,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"comments":[{"file":"test/cli-sanity.test.js","line":34,"reviewer":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},"message":"runNormalSequence() runs before generateFailureTests(), so by the time generateFailureTests() runs, the bucket has already been deleted. Should you recreate the bucket at the end of runNormalSequence() so that the tests are sure to fail because of bad flags and not a missing bucket?"},{"file":"test/cli-sanity.test.js","line":34,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"For the failure cases, we deliberately specify a server that should not be running, and then we check (based on the test case definition at lines 363 and 373) that the error message reflects a failure to establish the connection rather than a missing bucket.  So I think this is okay as is."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/cli-sanity.test.js","type":"ADDED","insertions":421,"deletions":0},{"file":"test/close-handles.test.js","type":"ADDED","insertions":72,"deletions":0},{"file":"test/stress-client.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/translate-legacy.test.js","type":"ADDED","insertions":323,"deletions":0}],"sizeInsertions":822,"sizeDeletions":0},{"number":"3","revision":"03b0090c7b433aead4261c889a934d07db37a28d","parents":["478fa1b782d1f535b339716463d4550439be0083"],"ref":"refs/changes/82/682/3","uploader":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"createdOn":1476492870,"author":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"SUBM","value":"1","grantedOn":1476493235,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1476490748,"by":{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1476489035,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1476489253,"by":{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":12,"deletions":0},{"file":"Makefile","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/cli-sanity.test.js","type":"ADDED","insertions":421,"deletions":0},{"file":"test/close-handles.test.js","type":"ADDED","insertions":72,"deletions":0},{"file":"test/stress-client.js","type":"MODIFIED","insertions":3,"deletions":0},{"file":"test/translate-legacy.test.js","type":"ADDED","insertions":323,"deletions":0}],"sizeInsertions":822,"sizeDeletions":0}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Julien Gilli","email":"jgilli@netflix.com","username":"misterdjules"},{"name":"Cody Peter Mello","email":"melloc@writev.io","username":"melloc"},{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}]}