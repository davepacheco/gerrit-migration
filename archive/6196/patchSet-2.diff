commit 73063d9fe9399b927c621df16e473503f373e0fe
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2019-05-06T17:38:28+02:00 (5 months ago)
    
    TRITON-1299 need logarchiver-agent service to run along side hermes-actor
    Reviewed by: Mike Gerdts <mike.gerdts@joyent.com>
    Approved by: Mike Gerdts <mike.gerdts@joyent.com>

diff --git a/lib/httpserver.js b/lib/httpserver.js
index 08c781f..99f8ea5 100644
--- a/lib/httpserver.js
+++ b/lib/httpserver.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var mod_net = require('net');
@@ -22,8 +22,7 @@ var WATERSHED = new mod_watershed.Watershed();
 
 
 function
-HttpServer(log, ip, port, tarstamp, scriptmgr, agent_name)
-{
+HttpServer(log, ip, port, tarstamp, scriptmgr, agent_name) {
 	var self = this;
 	mod_events.EventEmitter.call(self);
 
@@ -39,7 +38,7 @@ HttpServer(log, ip, port, tarstamp, scriptmgr, agent_name)
 	self.hs_port = port;
 	self.hs_tarstamp = tarstamp;
 	self.hs_scriptmgr = scriptmgr;
-	self.service_name = agent_name;
+	self.agent_name = agent_name;
 
 	setImmediate(function () {
 		self._init();
@@ -48,8 +47,7 @@ HttpServer(log, ip, port, tarstamp, scriptmgr, agent_name)
 mod_util.inherits(HttpServer, mod_events.EventEmitter);
 
 HttpServer.prototype._init = function
-_init()
-{
+_init() {
 	var self = this;
 
 	self.hs_server = mod_restify.createServer({
@@ -63,7 +61,7 @@ _init()
 		if (!res.claimUpgrade) {
 			req.log.warn({
 				remote: req.connection.remoteAddress + ':' +
-				    req.connection.remotePort
+					req.connection.remotePort
 			}, 'client did not attempt upgrade');
 			res.send(500);
 			next(false);
@@ -75,7 +73,8 @@ _init()
 
 		var shed;
 		try {
-			shed = WATERSHED.accept(req, upgrade.socket, upgrade.head);
+			shed = WATERSHED.accept(req, upgrade.socket,
+				upgrade.head);
 		} catch (ex) {
 			req.log.error({
 				err: ex
@@ -85,7 +84,7 @@ _init()
 		}
 
 		mod_assert.ok(self.listeners('shed').length !== 0,
-		    'shed listeners');
+			'shed listeners');
 		self.emit('shed', shed);
 
 		next(false);
@@ -116,7 +115,7 @@ _init()
 	};
 
 	self.hs_server.get('/bootstrap.ksh', get_script.bind(null,
-	    'bootstrap.ksh'));
+		'bootstrap.ksh'));
 	self.hs_server.get('/actor.ksh', get_script.bind(null, 'actor.ksh'));
 	self.hs_server.get('/actor.xml', get_script.bind(null, 'actor.xml'));
 	self.hs_server.get('/actor.tar.gz', get_actor_tarball);
