commit 93b6ba613f214b78c951a9c9a0f876ddac22d4d9 (refs/changes/22/1722/1)
Author: Marsell Kukuljevic <marsell@joyent.com>
Date:   2017-03-27T18:11:07+13:00 (2 years, 6 months ago)
    
    DAPI-339: drop hard-filter-sick-servers algorithm

diff --git a/lib/algorithms/hard-filter-sick-servers.js b/lib/algorithms/hard-filter-sick-servers.js
deleted file mode 100644
index 63bfb58..0000000
--- a/lib/algorithms/hard-filter-sick-servers.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-/*
- * Filters out sick servers.
- *
- * Occasionally there are servers which continually fail allocations for
- * one reason or another. Unfortunately, since allocations to that server
- * fail, DAPI keeps thinking there is free space on that server and sending
- * allocations there.
- *
- * This filter uses a very rough heuristic: if a CN has had two consecutive
- * failed allocations on a server in the last 24h, it skips that server.
- */
-
-var assert = require('assert-plus');
-
-var DAY_IN_MS = 24 * 60 * 60 * 1000;
-
-function
-filterSickServers(servers, opts, cb)
-{
-	assert.arrayOfObject(servers, 'servers');
-	assert.object(opts, 'opts');
-	assert.func(cb, 'cb');
-
-	var reasons = {};
-
-	var adequateServers = servers.filter(function (server) {
-		var err = isSickServer(server);
-
-		if (err)
-			reasons[server.uuid] = err;
-
-		return (!err);
-	});
-
-	return (cb(null, adequateServers, reasons));
-}
-
-function
-isSickServer(server)
-{
-	var vms = server.vms;
-	var dayAgo;
-	var newVms;
-
-	if (!vms)
-		return (null);
-
-	dayAgo = +new Date() - DAY_IN_MS;
-
-	newVms = Object.keys(vms).map(function (name) {
-		return (vms[name]);
-	}).filter(function (vm) {
-		return (+new Date(vm.last_modified) > dayAgo);
-	}).sort(function (a, b) {
-		return (a.last_modified < b.last_modified);
-	});
-
-	if (newVms.length < 2)
-		return (null);
-
-	if (newVms[0].state === 'failed' && newVms[1].state === 'failed') {
-		return ('VMs ' + newVms[0].uuid + ' and ' + newVms[1].uuid +
-		    ' failed consecutively the past 24h');
-	}
-
-	return (null);
-}
-
-module.exports = {
-	name: 'Servers that had consecutive failed provisions recently',
-	run: filterSickServers
-};
diff --git a/test/algorithms/hard-filter-sick-servers.test.js b/test/algorithms/hard-filter-sick-servers.test.js
deleted file mode 100644
index 4dcd60f..0000000
--- a/test/algorithms/hard-filter-sick-servers.test.js
+++ /dev/null
@@ -1,152 +0,0 @@
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-var test = require('tape');
-var filter = require('../../lib/algorithms/hard-filter-sick-servers.js');
-var common = require('./common.js');
-
-
-var checkFilter = common.createPluginChecker(filter);
-
-
-test('filterSickServers()', function (t) {
-	var servers = [ {
-		/* should be included because doesn't have two failures */
-		uuid: '647d5e40-bab5-465e-b351-311eec116822',
-		vms: {
-			'c00bbac2-b00a-4aea-af10-d0c0cdc4c0b2': {
-				uuid: 'c00bbac2-b00a-4aea-af10-d0c0cdc4c0b2',
-				state: 'running',
-				last_modified: ago(120)
-			},
-			'6d8ff8cb-bc78-47ed-9747-9282d9953216': {
-				uuid: '6d8ff8cb-bc78-47ed-9747-9282d9953216',
-				state: 'running',
-				last_modified: ago(119)
-			},
-			'430f486b-282e-c1f2-999f-fbba24955d95': {
-				uuid: '430f486b-282e-c1f2-999f-fbba24955d95',
-				state: 'running',
-				last_modified: ago(118)
-			}
-		}
-	}, {
-		/* should be included because failures aren't consecutive */
-		uuid: 'a6d28604-cc8c-4dad-a1c6-81be1b3b9deb',
-		vms: {
-			'c357e869-833d-4f6e-bbb4-883b97a7b555': {
-				uuid: 'c357e869-833d-4f6e-bbb4-883b97a7b555',
-				state: 'failed',
-				last_modified: ago(120)
-			},
-			'0ef239f7-9c1c-4e01-92a2-0ff8a6f67161': {
-				uuid: '0ef239f7-9c1c-4e01-92a2-0ff8a6f67161',
-				state: 'running',
-				last_modified: ago(119)
-			},
-			'41e59b1c-0bbf-486f-8550-1008d5a916b2': {
-				uuid: '41e59b1c-0bbf-486f-8550-1008d5a916b2',
-				state: 'failed',
-				last_modified: ago(118)
-			}
-		}
-	}, {
-		/* should be excluded because two consecutive failures */
-		uuid: '5625eacc-e173-4bb0-9c22-b1a80d8dfa39',
-		vms: {
-			'04fd84ed-5fa9-4252-b276-31339b1e5cd0': {
-				uuid: '04fd84ed-5fa9-4252-b276-31339b1e5cd0',
-				state: 'running',
-				last_modified: ago(23 * 60)
-			},
-			'70d46ece-1158-423c-b3a6-e569f688e0b5': {
-				uuid: '70d46ece-1158-423c-b3a6-e569f688e0b5',
-				state: 'failed',
-				last_modified: ago(22 * 60)
-			},
-			'c9b7d347-7f98-48ee-8b8a-165f749e7ced': {
-				uuid: 'c9b7d347-7f98-48ee-8b8a-165f749e7ced',
-				state: 'failed',
-				last_modified: ago(20 * 60)
-			}
-		}
-	}, {
-		/*
-		 * should be included because both failures weren't
-		 * in the past 24h
-		 */
-		uuid: '899821d8-750b-445d-a2c9-289ffad5b07d',
-		vms: {
-			'65c71cb6-ad22-4a8d-9961-33a87e3b20eb': {
-				uuid: '65c71cb6-ad22-4a8d-9961-33a87e3b20eb',
-				state: 'running',
-				last_modified: ago(36 * 60)
-			},
-			'25a73c08-7b9e-4534-9256-7943592b48b1': {
-				uuid: '25a73c08-7b9e-4534-9256-7943592b48b1',
-				state: 'failed',
-				last_modified: ago(25 * 60)
-			},
-			'ed4c3dc3-73b0-478f-bd5f-7880e1c9e0f8': {
-				uuid: 'ed4c3dc3-73b0-478f-bd5f-7880e1c9e0f8',
-				state: 'failed',
-				last_modified: ago(20 * 60)
-			}
-		}
-	}, {
-		/* should be included because only one failure */
-		uuid: '43b04a69-06c1-41cb-8adf-afc6734ce30d',
-		vms: {
-			'8c10b6e1-43ac-4349-ab78-7d3f28a29248': {
-				uuid: '8c10b6e1-43ac-4349-ab78-7d3f28a29248',
-				state: 'failed',
-				last_modified: ago(120)
-			}
-		}
-	}, {
-		/* should be included since no failures */
-		uuid: 'de324e5f-e195-4db8-84f1-d33d628f1944',
-		vms: {}
-	}, {
-		/* should be included since no failures */
-		uuid: '4b557554-43ee-4281-86d5-cb6332762d6f'
-	} ];
-
-	var expectServers = [ servers[0], servers[1], servers[3], servers[4],
-		servers[5], servers[6] ];
-
-	var expectReasons = {
-		/* BEGIN JSSTYLED */
-		'5625eacc-e173-4bb0-9c22-b1a80d8dfa39': 'VMs c9b7d347-7f98-48ee-8b8a-165f749e7ced and 70d46ece-1158-423c-b3a6-e569f688e0b5 failed consecutively the past 24h'
-		/* END JSSTYLED */
-	};
-
-	var opts = {};
-
-	checkFilter(t, servers, opts, expectServers, expectReasons);
-});
-
-
-test('filterSickServers() with no servers', function (t) {
-	checkFilter(t, [], {}, [], {});
-});
-
-
-test('name', function (t) {
-	t.ok(typeof (filter.name) === 'string');
-	t.end();
-});
-
-
-function
-ago(min)
-{
-	return (new Date(+new Date() - min * 60 * 1000).toISOString());
-}
diff --git a/test/allocator.test.js b/test/allocator.test.js
index d55dc7c..6d6a4e1 100644
--- a/test/allocator.test.js
+++ b/test/allocator.test.js
@@ -808,7 +808,6 @@ test('load available algorithms', function (t) {
 		'hard-filter-reservoir',
 		'hard-filter-running',
 		'hard-filter-setup',
-		'hard-filter-sick-servers',
 		'hard-filter-traits',
 		'hard-filter-vlans',
 		'hard-filter-vm-count',
diff --git a/test/common.js b/test/common.js
index 2c588ca..f942073 100644
--- a/test/common.js
+++ b/test/common.js
@@ -31,7 +31,6 @@ var ALGO_DESC = [
 		'calculate-ticketed-vms',
 		'hard-filter-capness',
 		'hard-filter-vm-count',
-		'hard-filter-sick-servers',
 		'calculate-server-unreserved',
 		'hard-filter-min-ram',
 		'hard-filter-min-cpu',
diff --git a/test/integration.test.js b/test/integration.test.js
index a88a109..f3992ee 100644
--- a/test/integration.test.js
+++ b/test/integration.test.js
@@ -226,10 +226,6 @@ test('allocate 1', function (t) {
 		}, {
 			step: 'Servers with more VMs than limit',
 			remaining: [ '00000000-0000-0000-0000-00259094373c' ]
-		}, {
-			/* JSSTYLED */
-			step: 'Servers that had consecutive failed provisions recently',
-			remaining: [ '00000000-0000-0000-0000-00259094373c' ]
 		}, {
 			step: 'Calculate unreserved resources on each server',
 			remaining: [ '00000000-0000-0000-0000-00259094373c' ]
@@ -420,10 +416,6 @@ test('allocate 2', function (t) {
 		}, {
 			step: 'Servers with more VMs than limit',
 			remaining: [ '00000000-0000-0000-0000-0025909437d4' ]
-		}, {
-			/* JSSTYLED */
-			step: 'Servers that had consecutive failed provisions recently',
-			remaining: [ '00000000-0000-0000-0000-0025909437d4' ]
 		}, {
 			step: 'Calculate unreserved resources on each server',
 			remaining: [ '00000000-0000-0000-0000-0025909437d4' ]
