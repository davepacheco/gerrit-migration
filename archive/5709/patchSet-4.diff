From 980ed28b9c31e9e2355003fe02343412a0b2e57d Mon Sep 17 00:00:00 2001
From: John Levon <john.levon@joyent.com>
Date: Mon, 4 Mar 2019 14:11:23 +0000
Subject: [PATCH] OS-7604 -faggressive-loop-optimizations should be off
 everywhere Reviewed by: Robert Mustacchi <rm@joyent.com> Approved by: Jerry
 Jelinek <jerry.jelinek@joyent.com>

---
 Makefile.joyent |  7 +++++++
 build.sh        | 43 ++++++++++++++++++++++++++-----------------
 2 files changed, 33 insertions(+), 17 deletions(-)

diff --git a/Makefile.joyent b/Makefile.joyent
index 2c2c257..3c01929 100644
--- a/Makefile.joyent
+++ b/Makefile.joyent
@@ -20,6 +20,8 @@
 # THE SOFTWARE.
 #
 
+include		$(PWD)/../../../build.env
+
 PROTO_AREA =	$(PWD)/../../../proto
 STRAP_AREA =	$(PWD)/../../../proto.strap
 KERNEL_SOURCE =	$(PWD)/../../illumos
@@ -53,6 +55,11 @@ ALWAYS_CFLAGS = \
 	-Werror \
 	-fno-inline-functions
 
+# Skip dubious optimizations in later GCCs
+ifneq ($(PRIMARY_COMPILER_VER),4)
+ALWAYS_CFLAGS += -fno-aggressive-loop-optimizations
+endif
+
 USER_CFLAGS = \
 	-finline \
 	-gdwarf-2 \
diff --git a/build.sh b/build.sh
index ab8a051..2560048 100755
--- a/build.sh
+++ b/build.sh
@@ -1,6 +1,6 @@
 #!/bin/bash
 #
-# Copyright (c) 2018, Joyent, Inc.
+# Copyright (c) 2019, Joyent, Inc.
 #
 
 for dir in seabios vgabios kvm/test; do
@@ -12,31 +12,40 @@ PNGDIR="${PWD}/libpng-1.5.4"
 PNGINC="${PNGDIR}/proto/usr/local/include"
 PNGLIB="${PNGDIR}/proto/usr/local/lib"
 
+. $(pwd)/../../../build.env
+
+#
+# Skip dangerous GCC options (not that any specific problems are known of here).
+#
+if [[ "$PRIMARY_COMPILER_VER" -gt 4 ]]; then
+	XCFLAGS=-fno-aggressive-loop-optimizations
+fi
+
 if [[ ! -d ${PNGDIR} ]]; then
-    (curl -k https://download.joyent.com/pub/kvm-cmd/libpng-1.5.4.tar.gz | \
-        gtar -zxf -)
-    if [[ $? != "0" || ! -d ${PNGDIR} ]]; then
-        echo "Failed to get libpng."
-        rm -rf ${PNGDIR}
-        exit 1
-    fi
+	(curl -k https://download.joyent.com/pub/kvm-cmd/libpng-1.5.4.tar.gz | \
+	    gtar -zxf -)
+	if [[ $? != "0" || ! -d ${PNGDIR} ]]; then
+		echo "Failed to get libpng."
+		rm -rf ${PNGDIR}
+		exit 1
+	fi
 fi
 
 if [[ ! -e ${PNGLIB}/libpng.a ]]; then
-    (cd ${PNGDIR} && \
-	CC="${CC:-${STRAP_AREA}/usr/bin/gcc}" \
-	LDFLAGS="-m64 -L${DESTDIR}/usr/lib/amd64 -L${DESTDIR}/lib/amd64" \
-	CPPFLAGS="-isystem ${DESTDIR}/usr/include" \
-	CFLAGS="-m64" ./configure --disable-shared && \
-        make && \
-        mkdir -p ${PNGDIR}/proto && \
-        make DESTDIR=${PNGDIR}/proto install)
+	(cd ${PNGDIR} && \
+	    CC="${CC:-${STRAP_AREA}/usr/bin/gcc}" \
+	    LDFLAGS="-m64 -L${DESTDIR}/usr/lib/amd64 -L${DESTDIR}/lib/amd64" \
+	    CPPFLAGS="-isystem ${DESTDIR}/usr/include" \
+	    CFLAGS="-m64 $XCFLAGS" ./configure --disable-shared && \
+	    make && \
+	    mkdir -p ${PNGDIR}/proto && \
+	    make DESTDIR=${PNGDIR}/proto install)
 fi
 
 echo "==> Running configure"
 KVM_DIR="${KVM_DIR:-$(cd `pwd`/../kvm; pwd)}"
 CC="${CC:-${STRAP_AREA}/usr/bin/gcc}"
-XCFLAGS="-fno-builtin -I${PNGINC} -isystem ${DESTDIR}/usr/include -msave-args"
+XCFLAGS="$XCFLAGS -fno-builtin -I${PNGINC} -isystem ${DESTDIR}/usr/include -msave-args"
 XLDFLAGS="-nodefaultlibs -L${PNGLIB} -L${DESTDIR}/usr/lib/amd64 -L${DESTDIR}/lib/amd64"
 XLDFLAGS="${XLDFLAGS} -Wl,-zfatal-warnings -Wl,-zassert-deflib"
 XLDFLAGS="${XLDFLAGS} -lz -lm -lc -lvnd"
-- 
2.21.0

