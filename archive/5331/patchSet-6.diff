commit a0376ca9bbd3049ff39ba41b7a50093cc2f3cc69 (refs/changes/31/5331/6)
Author: Rui Loura <rui@joyent.com>
Date:   2019-01-10T19:51:34+00:00 (9 months ago)
    
    TRITON-821 Remove "CN Agent IP" and use "Admin IP" in CNAPI and CMON
    TRITON-870 cn-agent admin IP functions need to be factored out

diff --git a/lib/app.js b/lib/app.js
index 63aa210..6c7b9c5 100644
--- a/lib/app.js
+++ b/lib/app.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var dns = require('dns');
@@ -318,10 +318,10 @@ App.prototype.registerServer = function registerServer(callback) {
     var sysinfo = self.sysinfo;
     var urlPath = path.join('/servers', self.uuid, 'sysinfo');
 
-    // We'll add our IP and port to the sysinfo here so that if we're not
-    // using the default port, CNAPI knows where to send requests to us.
+    // We'll add our port to the sysinfo here so that if we're not using the
+    // default port, CNAPI knows where to send requests to us.  Our IP can be
+    // found from sysinfo['Admin IP'].
     sysinfo['CN Agent Port'] = self.agentserver.server.address().port;
-    sysinfo['CN Agent IP'] = self.agentserver.server.address().address;
 
     // Make an attempt, if that fails, schedule a new attempt with a delay
     self.cnapiClient.post({
diff --git a/lib/backends/dummy/index.js b/lib/backends/dummy/index.js
index b678953..c9111bb 100644
--- a/lib/backends/dummy/index.js
+++ b/lib/backends/dummy/index.js
@@ -5,12 +5,13 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var execFile = require('child_process').execFile;
 var fs = require('fs');
 var fmt = require('util').format;
+var netconfig = require('triton-netconfig');
 var os = require('os');
 
 var assert = require('assert-plus');
@@ -123,25 +124,14 @@ DummyBackend.prototype.getSysinfo = function getSysinfo(opts, callback) {
 };
 
 function _getAdminIpSysinfo(sysinfo_object, callback) {
-    var admin_tag = 'admin';
-    var interfaces = sysinfo_object['Network Interfaces'];
-    var adminifaces;
+    var adminIp = netconfig.adminIpFromSysinfo(sysinfo_object);
 
-    if (sysinfo_object['Admin NIC Tag']) {
-        admin_tag = sysinfo_object['Admin NIC Tag'];
-    }
-
-    adminifaces = Object.keys(interfaces).filter(function (iface) {
-        return interfaces[iface]['NIC Names'].indexOf(admin_tag) !== -1;
-    });
-
-    if (adminifaces && adminifaces.length) {
-        callback(null, interfaces[adminifaces[0]]['ip4addr']);
+    if (!adminIp) {
+        callback(new Error('Could not find admin IP'));
         return;
     }
 
-    callback(new Error(fmt('No admin NIC found with tag "%s" in config.json ' +
-        'or compute node sysinfo', admin_tag)));
+    callback(null, adminIp);
 }
 
 DummyBackend.prototype.getFirstAdminIp = function getFirstAdminIp(opts, sysinfo,
diff --git a/lib/backends/dummy/tools/run-servers.js b/lib/backends/dummy/tools/run-servers.js
index 7b8639a..6371086 100644
--- a/lib/backends/dummy/tools/run-servers.js
+++ b/lib/backends/dummy/tools/run-servers.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var fs = require('fs');
@@ -14,6 +14,7 @@ var util = require('util');
 
 var assert = require('assert-plus');
 var bunyan = require('bunyan');
+var netconfig = require('triton-netconfig');
 var vasync = require('vasync');
 var verror = require('verror');
 
@@ -46,24 +47,23 @@ function loadSysinfo(ctx, callback) {
     });
 }
 
-// TODO: should use common method in backends to get rackaware admin IP.
 function findZoneAdminIp(ctx, callback) {
     common.mdataGet('sdc:nics', function _onMdata(err, nicsData) {
-        var idx;
-        var nic;
-        var nics = JSON.parse(nicsData.toString());
-
-        for (idx = 0; idx < nics.length; idx++) {
-            nic = nics[idx];
-            if (nic.nic_tag === 'admin') {
-                ctx.bindIP = nic.ip;
-                break;
-            }
+        var nics;
+
+        try {
+            nics = JSON.parse(nicsData.toString());
+        } catch (e) {
+            callback(e);
+            return;
         }
 
-        assert.string(ctx.bindIP, 'ctx.bindIP');
+        if (!err) {
+            ctx.bindIP = netconfig.adminIpFromNicsArray(nics);
+            assert.string(ctx.bindIP, 'ctx.bindIP');
+        }
 
-        callback();
+        callback(err);
     });
 }
 
diff --git a/lib/backends/smartos/smartdc-config.js b/lib/backends/smartos/smartdc-config.js
index f7541db..031294e 100644
--- a/lib/backends/smartos/smartdc-config.js
+++ b/lib/backends/smartos/smartdc-config.js
@@ -5,12 +5,13 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var fs = require('fs');
-var VError = require('verror').VError;
 var execFile = require('child_process').execFile;
+var netconfig = require('triton-netconfig');
+var VError = require('verror').VError;
 
 
 function agentConfig(callback) {
@@ -62,25 +63,14 @@ function sdcConfig(callback) {
 }
 
 function _getAdminIpSysinfo(sysinfo_object, callback) {
-    var admin_tag = 'admin';
-    var interfaces = sysinfo_object['Network Interfaces'];
-    var adminifaces;
-
-    if (sysinfo_object['Admin NIC Tag']) {
-        admin_tag = sysinfo_object['Admin NIC Tag'];
-    }
-
-    adminifaces = Object.keys(interfaces).filter(function (iface) {
-        return interfaces[iface]['NIC Names'].indexOf(admin_tag) !== -1;
-    });
+    var adminIp = netconfig.adminIpFromSysinfo(sysinfo_object);
 
-    if (adminifaces && adminifaces.length !== 0) {
-        callback(null, interfaces[adminifaces[0]]['ip4addr']);
+    if (!adminIp) {
+        callback(new VError('Could not find admin IP'));
         return;
     }
 
-    callback(new VError('No admin NIC found with tag "%s" in compute node ' +
-        'sysinfo', admin_tag));
+    callback(null, adminIp);
 }
 
 /*
diff --git a/package.json b/package.json
index 20684fd..e3224f9 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cn-agent",
   "description": "Triton Compute Node Agent",
-  "version": "2.7.0",
+  "version": "2.7.1",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
@@ -29,6 +29,7 @@
     "semver": "5.4.1",
     "sprintf": "0.1.5",
     "trace-event": "git+https://github.com/joyent/node-trace-event.git#9f7d00b8c3594def9ef534f68c16c215c3dba9f2",
+    "triton-netconfig": "1.1.0",
     "uuid": "3.0.1",
     "vasync": "1.6.4",
     "verror": "1.9.0",
