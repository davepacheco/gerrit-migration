commit 11ac702ecf192fc7e5ba88638dd2c32e303e93dd (refs/changes/40/440/5)
Author: David Swift <dswift@pccowboy.com>
Date:   2016-09-16T06:41:33+00:00 (3 years, 1 month ago)
    
    MANTA-2975 manta-factoryreset should not proceed without removing amon probes

diff --git a/cmd/manta-factoryreset.js b/cmd/manta-factoryreset.js
index 1ef99e2..8525431 100755
--- a/cmd/manta-factoryreset.js
+++ b/cmd/manta-factoryreset.js
@@ -253,6 +253,41 @@ async.waterfall([
 		});
 	},
 
+	function getProbeGroups(cb) {
+		var amon = self.AMON;
+		var log = self.log;
+
+		log.info('fetching probe groups from amon');
+
+		amon.listProbeGroups(POSEIDON.uuid, function (err, res) {
+			if (err) {
+				log.error(err,
+					'failed to get amon probe groups');
+				return (cb(err));
+			}
+
+			self.probeGroups = res;
+			return (cb(null));
+		});
+	},
+
+	function getProbes(cb) {
+		var amon = self.AMON;
+		var log = self.log;
+
+		log.info('fetching probes from amon');
+
+		amon.listProbes(POSEIDON.uuid, function (err, res) {
+			if (err) {
+				log.error(err, 'failed to get amon probes');
+				return (cb(err));
+			}
+
+			self.probes = res;
+			return (cb(null));
+		});
+	},
+
 	function _undeployMarlinAgents(cb) {
 		if (!self.application) {
 			return (cb(null));
@@ -357,6 +392,72 @@ async.waterfall([
 		});
 	},
 
+	function _deleteProbeGroups(cb) {
+		var amon = self.AMON;
+		var log = self.log;
+
+		if (!self.probeGroups)
+			return (cb(null));
+
+		var uuids = [];
+		self.probeGroups.forEach(function (elem, idx, ary) {
+			uuids = uuids.concat(elem.uuid);
+		});
+
+		async.forEachLimit(uuids, 8, function (uuid, subcb) {
+			log.info('deleting probe group %s', uuid);
+
+			amon.deleteProbeGroup(POSEIDON.uuid, uuid,
+				function (err) {
+				if (err) {
+					log.error(err, 'failed to ' +
+						'delete probe group %s', uuid);
+				} else {
+					log.info('deleted probe group %s',
+						uuid);
+				}
+
+				subcb(err);
+			});
+		}, function (err) {
+			cb(err);
+		});
+	},
+
+	function _deleteProbes(cb) {
+		var amon = self.AMON;
+		var log = self.log;
+
+		if (!self.probes)
+			return (cb(null));
+
+		var uuids = [];
+		self.probes.forEach(function (elem, idx, ary) {
+			uuids = uuids.concat(elem.uuid);
+		});
+
+		/*
+		 * Delete 8 probes at a time since that's what
+		 * the code I copied does.
+		 */
+		async.forEachLimit(uuids, 8, function (uuid, subcb) {
+			log.info('deleting probe %s', uuid);
+
+			amon.deleteProbe(POSEIDON.uuid, uuid, function (err) {
+				if (err) {
+					log.error(err, 'failed to ' +
+						'delete probe %s', uuid);
+				} else {
+					log.info('deleted probe %s', uuid);
+				}
+
+				subcb(err);
+			});
+		}, function (err) {
+			cb(err);
+		});
+	},
+
 	function _removePoseidonFromNetworks(cb) {
 		if (!POSEIDON) {
 			return (cb());
diff --git a/lib/common.js b/lib/common.js
index 1b6d06e..b14fe20 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -147,6 +147,12 @@ function initSdcClients(cb) {
 			agent: false
 		});
 
+		self.AMON = new sdc.Amon({
+			log: self.log,
+			url: config.amon.url,
+			agent: false
+		});
+
 		self.UFDS = new sdc.UFDS({
 			log: self.log,
 			url: config.ufds.url,
@@ -189,6 +195,7 @@ function finiSdcClients(cb) {
 	this.REMOTE_IMGAPI.close();
 	this.NAPI.close();
 	this.SAPI.close();
+	this.AMON.close();
 	this.UFDS.close(cb);
 }
 
