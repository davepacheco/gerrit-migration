commit d3fe6aa2b640fbeba9dc833f0142f0d2856879eb (refs/changes/85/1185/2)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2016-12-27T22:53:24+00:00 (2 years, 9 months ago)
    
    CNS-187 CMON CNAME records should go in every zone
    Reviewed by: Richard Kiene <richard.kiene@joyent.com>

diff --git a/lib/vm-to-zones.js b/lib/vm-to-zones.js
index 7db7cdf..dee294f 100644
--- a/lib/vm-to-zones.js
+++ b/lib/vm-to-zones.js
@@ -79,6 +79,24 @@ function buildZonesFromVm(vm, config, log) {
 		}
 	});
 
+	/*
+	 * Add the CMON CNAME records. These exist in all DNS zones, no
+	 * matter what interfaces a VM has.
+	 */
+	Object.keys(config.forward_zones).forEach(function (z) {
+		var name = vm.uuid + '.cmon';
+		var target = 'cmon.' + z;
+		if (!zones[z])
+			zones[z] = {};
+		if (!zones[z][name])
+			zones[z][name] = [];
+		var recs = zones[z][name];
+		recs.push({
+			constructor: 'CNAME',
+			args: [target]
+		});
+	});
+
 	return (zones);
 }
 
@@ -152,26 +170,11 @@ function addInstance(zones, vm, ent, config) {
 		}
 	}
 
-	function addCName(name, target) {
-		if (!zones[ent.zone])
-			zones[ent.zone] = {};
-		if (!zones[ent.zone][name])
-			zones[ent.zone][name] = [];
-		var recs = zones[ent.zone][name];
-		recs.push({
-			constructor: 'CNAME',
-			args: [target]
-		});
-	}
-
 	var revName = primaryName(vm, config);
 
 	var n = vm.uuid + '.inst.' + vm.owner.uuid;
 	addName(n);
 
-	n = vm.uuid + '.cmon';
-	addCName(n, 'cmon.' + ent.zone);
-
 	if (config.use_login && vm.owner.login.length < 63) {
 		addName(vm.uuid + '.inst.' + dnsify(vm.owner.login));
 	}
diff --git a/test/unit/vm-to-zones.test.js b/test/unit/vm-to-zones.test.js
index 7248570..6763828 100644
--- a/test/unit/vm-to-zones.test.js
+++ b/test/unit/vm-to-zones.test.js
@@ -492,3 +492,47 @@ test('service with srvs', function (t) {
 
 	t.end();
 });
+
+test('cmon everywhere', function (t) {
+	var config = {
+	    forward_zones: {
+		'foo': {},
+		'bar': {}
+	    },
+	    reverse_zones: {}
+	};
+	var vm = {
+	    uuid: 'abc123',
+	    services: [],
+	    listInstance: true,
+	    listServices: false,
+	    owner: {
+		uuid: 'def432'
+	    },
+	    nics: [
+		{
+		    ip: '1.2.3.4',
+		    zones: ['foo']
+		}
+	    ]
+	};
+	var zones = buildZonesFromVm(vm, config, log);
+	t.deepEqual(Object.keys(zones), ['foo', '3.2.1.in-addr.arpa', 'bar']);
+
+	t.deepEqual(Object.keys(zones['foo']), ['abc123.inst.def432',
+	    'abc123.cmon']);
+	t.deepEqual(Object.keys(zones['bar']), ['abc123.cmon']);
+	t.deepEqual(Object.keys(zones['3.2.1.in-addr.arpa']), ['4']);
+
+	var cmon = zones['foo']['abc123.cmon'];
+	t.deepEqual(cmon, [
+	    {constructor: 'CNAME', args: ['cmon.foo']}
+	]);
+
+	cmon = zones['bar']['abc123.cmon'];
+	t.deepEqual(cmon, [
+	    {constructor: 'CNAME', args: ['cmon.bar']}
+	]);
+
+	t.end();
+});
