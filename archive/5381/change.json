{"project":"joyent/muppet","branch":"master","id":"I89e055aef1f3e574da549a98224d44d8b505223e","number":"5381","subject":"MANTA-4064 Muppet failing with \"SyntaxError: Unexpected token o\"","owner":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"url":"https://cr.joyent.us/5381","commitMessage":"MANTA-4064 Muppet failing with \"SyntaxError: Unexpected token o\"\n","createdOn":1547760483,"lastUpdated":1548886681,"open":false,"status":"ABANDONED","comments":[{"timestamp":1547760483,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 1."},{"timestamp":1547760511,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1547837170,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1:\n\n(4 comments)"},{"timestamp":1547845353,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\n(3 comments)"},{"timestamp":1547846908,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1: Code-Review+1\n\n(3 comments)"},{"timestamp":1548884048,"reviewer":{"name":"Brian Bennett","email":"brian.bennett@joyent.com","username":"bahamat"},"message":"Patch Set 1: Integration-Approval+1"},{"timestamp":1548885678,"reviewer":{"name":"Brian Bennett","email":"brian.bennett@joyent.com","username":"bahamat"},"message":"Patch Set 1: -Integration-Approval"},{"timestamp":1548886681,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Abandoned\n\nSuperseded by https://cr.joyent.us/#/c/5414/"}],"currentPatchSet":{"number":"1","revision":"89e055aef1f3e574da549a98224d44d8b505223e","parents":["b47f952a8b6823e40da84dac916abe34e416e705"],"ref":"refs/changes/81/5381/1","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1547760483,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1547760511,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1547846908,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}}],"comments":[{"file":"lib/watch.js","line":148,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Should we be specifying an explicit encoding for this toString() or is it OK to rely on the default, utf-8?"},{"file":"lib/watch.js","line":148,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"It appears to be ok with using utf-8 in the sense that I am not aware of any errors or problems that have resulted from this. The data returned to us from zookeeper should be JSON data so utf-8 should be good."},{"file":"lib/watch.js","line":148,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"OK, that makes sense, thanks."},{"file":"lib/watch.js","line":168,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Should we still be calling the callback here with no argument when we\u0027re in this case? Is that going to be handled correctly by the caller? I think this probably needs to have us end up in the error callback path or the success callback path needs to accept that obj may be undefined."},{"file":"lib/watch.js","line":168,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Since `obj` remains `undefined` this will end up in the following `else` block where `_cb(null)` is called."},{"file":"lib/watch.js","line":185,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I\u0027m not sure that cb(null) will do the right thing in the caller. I\u0027m going to tag the line below where I think this will cause problems. See the above and below comments."},{"file":"lib/watch.js","line":185,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"It is a little confusing, but actually I think things end up working correctly in terms of the callback. I added some log output to the callback for `forEachParallel` to show what `res` looks like.\n\n```\n[2019-01-18T20:54:23.448Z]  INFO: muppet/76258 on fbe82ecc-0d81-4ef7-a702-12aa5d96b23d (/opt/smartdc/muppet/lib/watch.js:207): {\"operations\":[{\"funcname\":\"(anon)\",\"status\":\"ok\"},{\"funcname\":\"(anon)\",\"status\":\"ok\"},{\"funcname\":\"(anon)\",\"status\":\"ok\",\"err\":null,\"result\":\"172.27.18.103\"}],\"successes\":[null,null,\"172.27.18.103\"],\"ndone\":3,\"nerrors\":0} (clazz\u003dWatch)\n```\n\nSo we end up with this `res` object where the value of the `successes` key ends up as a heterogeneous list nulls and strings. The callback filters out all the null values and takes action on the remaining set of hosts."},{"file":"lib/watch.js","line":185,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"You\u0027re right, it is fine. I conflated the vasync.forEachParallel results object with the one tht was here, in which case we\u0027ll always have a valid array defined, so this should be OK."},{"file":"lib/watch.js","line":212,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So, in the case where we do the else case at +195, because we hit +161, we\u0027ll end up having res be undefined, so we will end up blowing up on trying to call forEeach()."},{"file":"lib/watch.js","line":212,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"This is a non-issue as we discussed above, I was conflating things."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/watch.js","type":"MODIFIED","insertions":42,"deletions":-16}],"sizeInsertions":42,"sizeDeletions":-16},"patchSets":[{"number":"1","revision":"89e055aef1f3e574da549a98224d44d8b505223e","parents":["b47f952a8b6823e40da84dac916abe34e416e705"],"ref":"refs/changes/81/5381/1","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1547760483,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1547846908,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1547760511,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/watch.js","line":148,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Should we be specifying an explicit encoding for this toString() or is it OK to rely on the default, utf-8?"},{"file":"lib/watch.js","line":148,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"It appears to be ok with using utf-8 in the sense that I am not aware of any errors or problems that have resulted from this. The data returned to us from zookeeper should be JSON data so utf-8 should be good."},{"file":"lib/watch.js","line":148,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"OK, that makes sense, thanks."},{"file":"lib/watch.js","line":168,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Should we still be calling the callback here with no argument when we\u0027re in this case? Is that going to be handled correctly by the caller? I think this probably needs to have us end up in the error callback path or the success callback path needs to accept that obj may be undefined."},{"file":"lib/watch.js","line":168,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Since `obj` remains `undefined` this will end up in the following `else` block where `_cb(null)` is called."},{"file":"lib/watch.js","line":185,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I\u0027m not sure that cb(null) will do the right thing in the caller. I\u0027m going to tag the line below where I think this will cause problems. See the above and below comments."},{"file":"lib/watch.js","line":185,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"It is a little confusing, but actually I think things end up working correctly in terms of the callback. I added some log output to the callback for `forEachParallel` to show what `res` looks like.\n\n```\n[2019-01-18T20:54:23.448Z]  INFO: muppet/76258 on fbe82ecc-0d81-4ef7-a702-12aa5d96b23d (/opt/smartdc/muppet/lib/watch.js:207): {\"operations\":[{\"funcname\":\"(anon)\",\"status\":\"ok\"},{\"funcname\":\"(anon)\",\"status\":\"ok\"},{\"funcname\":\"(anon)\",\"status\":\"ok\",\"err\":null,\"result\":\"172.27.18.103\"}],\"successes\":[null,null,\"172.27.18.103\"],\"ndone\":3,\"nerrors\":0} (clazz\u003dWatch)\n```\n\nSo we end up with this `res` object where the value of the `successes` key ends up as a heterogeneous list nulls and strings. The callback filters out all the null values and takes action on the remaining set of hosts."},{"file":"lib/watch.js","line":185,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"You\u0027re right, it is fine. I conflated the vasync.forEachParallel results object with the one tht was here, in which case we\u0027ll always have a valid array defined, so this should be OK."},{"file":"lib/watch.js","line":212,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So, in the case where we do the else case at +195, because we hit +161, we\u0027ll end up having res be undefined, so we will end up blowing up on trying to call forEeach()."},{"file":"lib/watch.js","line":212,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"This is a non-issue as we discussed above, I was conflating things."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/watch.js","type":"MODIFIED","insertions":42,"deletions":-16}],"sizeInsertions":42,"sizeDeletions":-16}],"allReviewers":[{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Joyent Automation","username":"joyent-automation"},{"name":"Brian Bennett","email":"brian.bennett@joyent.com","username":"bahamat"},{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"}]}