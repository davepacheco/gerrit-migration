From 192cb1c626bc5c8eadc6c7ba9a0e6885f5b6abc5 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Tue, 5 Mar 2019 20:05:40 +0100
Subject: [PATCH] TRITON-1279 ufds-tests failing waiting for napi-ufds-watcher
 to create dclocalconfig entry

---
 package.json                |  2 +-
 test/capi/customers.test.js | 33 +++++++++++++++++++++++----------
 2 files changed, 24 insertions(+), 11 deletions(-)

diff --git a/package.json b/package.json
index 3d2469f..709513c 100644
--- a/package.json
+++ b/package.json
@@ -34,7 +34,7 @@
     "devDependencies": {
         "faucet": "0.0.1",
         "istanbul": "0.3.0",
-        "tape": "2.13.3"
+        "tape": "4.10.1"
     },
     "scripts": {
         "test": "node test/test.js | ./node_modules/.bin/faucet"
diff --git a/test/capi/customers.test.js b/test/capi/customers.test.js
index f8f717b..f1c9791 100644
--- a/test/capi/customers.test.js
+++ b/test/capi/customers.test.js
@@ -793,7 +793,7 @@ test('delete key', function (t) {
 // Given ufds-napi-watcher watches ufds changelog for new users creation
 // and adds a dclocalconfig to such users, we're gonna wait for this object
 // to appear, delete it, and move ahead to customer cleanup
-test('cleanup customer dclocalconfig', function (t) {
+function tryDeleteDclocalconfig(t, cb) {
     var counter = 0;
     var limit = 60;
     var localCfgDn = util.format(
@@ -811,30 +811,43 @@ test('cleanup customer dclocalconfig', function (t) {
                     if (counter < limit) {
                         setTimeout(_waitForDcLocalCfg, 5000);
                     } else {
-                        t.ifError(err);
+                        // Assume napi-ufds-watcher will just not create
+                        // the entry and move ahead:
+                        t.comment('Timeout waiting 5 mins for ' +
+                            'napi-ufds-watcher to create dclocalconfig,' +
+                            ' skipping');
                         client.unbind(function (err2) {
                             t.ifError(err2);
-                            t.end();
+                            cb();
                         });
                     }
                 } else {
                     client.unbind(function (err2) {
                         t.ifError(err2);
-                        t.end();
+                        cb();
                     });
                 }
             });
         }
         _waitForDcLocalCfg();
     });
-});
-
+}
 
 test('delete customer', function (t) {
-    CAPI.del('/customers/' + CUSTOMER.uuid, function (err, req, res) {
-        t.ifError(err);
-        t.equal(200, res.statusCode);
-        t.end();
+    var p = '/customers/' + CUSTOMER.uuid;
+    CAPI.del(p, function delCb(err, req, res) {
+        if (err) {
+            tryDeleteDclocalconfig(t, function delLocalCfgCb() {
+                CAPI.del(p, function delCb2(err2, req2, res2) {
+                    t.ifError(err2);
+                    t.equal(200, res2.statusCode);
+                    t.end();
+                });
+            });
+        } else {
+            t.equal(200, res.statusCode);
+            t.end();
+        }
     });
 });
 
-- 
2.21.0

