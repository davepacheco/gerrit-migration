commit 9d1e148d345f5941a21747bbaa3c8b7ae5429b91
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2019-03-05T19:35:44+01:00 (7 months ago)
    
    TRITON-1279 ufds-tests failing waiting for napi-ufds-watcher to create dclocalconfig entry

diff --git a/test/capi/customers.test.js b/test/capi/customers.test.js
index f8f717b..ca66698 100644
--- a/test/capi/customers.test.js
+++ b/test/capi/customers.test.js
@@ -793,7 +793,7 @@ test('delete key', function (t) {
 // Given ufds-napi-watcher watches ufds changelog for new users creation
 // and adds a dclocalconfig to such users, we're gonna wait for this object
 // to appear, delete it, and move ahead to customer cleanup
-test('cleanup customer dclocalconfig', function (t) {
+function tryDeleteDcLocalCfg(t, cb) {
     var counter = 0;
     var limit = 60;
     var localCfgDn = util.format(
@@ -811,30 +811,40 @@ test('cleanup customer dclocalconfig', function (t) {
                     if (counter < limit) {
                         setTimeout(_waitForDcLocalCfg, 5000);
                     } else {
-                        t.ifError(err);
+                        // Assume napi-ufds-watcher will just not create
+                        // the entry and move ahead:
                         client.unbind(function (err2) {
                             t.ifError(err2);
-                            t.end();
+                            cb();
                         });
                     }
                 } else {
                     client.unbind(function (err2) {
                         t.ifError(err2);
-                        t.end();
+                        cb();
                     });
                 }
             });
         }
         _waitForDcLocalCfg();
     });
-});
-
+}
 
 test('delete customer', function (t) {
-    CAPI.del('/customers/' + CUSTOMER.uuid, function (err, req, res) {
-        t.ifError(err);
-        t.equal(200, res.statusCode);
-        t.end();
+    var p = '/customers/' + CUSTOMER.uuid;
+    CAPI.del(p, function delCb(err, req, res) {
+        if (err) {
+            tryDeleteDcLocalCfg(t, function delLocalCfgCb() {
+                CAPI.del(p, function delCb2(err2, req2, res2) {
+                    t.ifError(err2);
+                    t.equal(200, res2.statusCode);
+                    t.end();
+                });
+            });
+        } else {
+            t.equal(200, res.statusCode);
+            t.end();
+        }
     });
 });
 
