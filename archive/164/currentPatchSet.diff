commit f47164e93f65f1dcf8b5115df2cf7e48ce42450b (refs/changes/64/164/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2016-07-28T11:52:04-07:00 (3 years, 2 months ago)
    
    joyent/node-sshpk-agent#6 Tests failing on travis-ci because of old OpenSSH
    joyent/node-sshpk-agent#7 node 0.10.x broken (no object-mode streams)

diff --git a/.travis.yml b/.travis.yml
index ba5b80f..97d7342 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,10 +1,9 @@
 language: node_js
 sudo: false
 node_js:
-  - "4.2"
-  - "4.1"
+  - "6.3"
+  - "4.4"
   - "0.12"
   - "0.10"
-  - "0.8"
 before_install:
   - "make check"
diff --git a/lib/protocol-streams.js b/lib/protocol-streams.js
index 75ea8cd..d1f33d4 100644
--- a/lib/protocol-streams.js
+++ b/lib/protocol-streams.js
@@ -2,7 +2,10 @@
 
 var assert = require('assert-plus');
 var util = require('util');
+
 var stream = require('stream');
+if (process.version.match(/^v0[.]1[0-1][.]/))
+	stream = require('readable-stream');
 
 var protocol = require('./protocol');
 var errs = require('./errors');
diff --git a/package.json b/package.json
index fbd79c2..ef7748e 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "sshpk-agent",
-  "version": "1.4.0",
+  "version": "1.4.1",
   "description": "ssh-agent client for use with sshpk",
   "main": "lib/index.js",
   "scripts": {
@@ -27,8 +27,9 @@
   "homepage": "https://github.com/arekinath/node-sshpk-agent#readme",
   "dependencies": {
     "assert-plus": "^1.0.0",
-    "sshpk": ">=1.9.1 < 1.10.0",
-    "mooremachine": "^1.0.0"
+    "mooremachine": "^1.0.0",
+    "readable-stream": "^2.1.4",
+    "sshpk": ">=1.9.1 < 1.10.0"
   },
   "devDependencies": {
     "tape": "^3.5.0",
diff --git a/test/key-mgmt.test.js b/test/key-mgmt.test.js
index b38e242..5f817e9 100644
--- a/test/key-mgmt.test.js
+++ b/test/key-mgmt.test.js
@@ -152,34 +152,47 @@ test('Client can add an ECDSA certificate', function (t) {
 	});
 });
 
-test('Client can add an ED25519 certificate', function (t) {
-	var pem = fs.readFileSync(path.join(testDir, 'id_ed25519'));
-	var pk = sshpk.parsePrivateKey(pem, 'pem', 'test/id_ed25519');
-	var id = sshpk.identityForHost('testing.ed25519');
-	var cert = sshpk.createSelfSignedCertificate(id, pk);
-	client.addCertificate(cert, pk, function (err) {
-		t.error(err);
-
-		client.listKeys(function (err, keys) {
+var ver = Agent.getVersion();
+if (ver === undefined)
+	ver = [0, 0, 0];
+else
+	console.log('using OpenSSH version %d.%dp%d', ver[0], ver[1], ver[2]);
+
+if (ver >= [6, 5, 1]) {
+	test('Client can add an ED25519 certificate', function (t) {
+		var pem = fs.readFileSync(path.join(testDir, 'id_ed25519'));
+		var pk = sshpk.parsePrivateKey(pem, 'pem', 'test/id_ed25519');
+		var id = sshpk.identityForHost('testing.ed25519');
+		var cert = sshpk.createSelfSignedCertificate(id, pk);
+		client.addCertificate(cert, pk, function (err) {
 			t.error(err);
-			t.equal(keys.length, 3);
 
-			client.listCertificates(function (err2, certs) {
-				t.error(err2);
-				t.equal(certs.length, 3);
-				t.strictEqual(certs[2].subjects[0].type,
-				    'host');
-				t.strictEqual(certs[2].subjects[0].hostname,
-				    'testing.ed25519');
-				t.strictEqual(certs[2].subjectKey.type,
-				    'ed25519');
-				t.ok(ID_ED25519_FP.matches(certs[2].subjectKey),
-				    'fingerprint matches cert key');
-				t.end();
+			client.listKeys(function (err, keys) {
+				t.error(err);
+				t.equal(keys.length, 3);
+
+				client.listCertificates(function (err2, certs) {
+					t.error(err2);
+					t.equal(certs.length, 3);
+					t.strictEqual(
+					    certs[2].subjects[0].type,
+					    'host');
+					t.strictEqual(
+					     certs[2].subjects[0].hostname,
+					    'testing.ed25519');
+					t.strictEqual(certs[2].subjectKey.type,
+					    'ed25519');
+					t.ok(ID_ED25519_FP.matches(
+					    certs[2].subjectKey),
+					    'fingerprint matches cert key');
+					t.end();
+				});
 			});
 		});
 	});
-});
+} else {
+	console.log('WARNING: ed25519 tests disabled: your OpenSSH is too old');
+}
 
 test('Client can remove a key', function (t) {
 	client.listKeys(function (err, keys) {
