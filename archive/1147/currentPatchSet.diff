From d7c29837103887a75ed1fb5fe84d1d6b89d0dae2 Mon Sep 17 00:00:00 2001
From: Marsell Kukuljevic <marsell@joyent.com>
Date: Wed, 21 Dec 2016 01:39:20 +1300
Subject: [PATCH] DAPI-333: When overprovision ratios are changed in sapi,
 unreserved_* values continue to contain default ratios in capacity
 calculations Reviewed by: Pedro P. Candel <pedro@joyent.com>

---
 lib/allocator.js       | 11 ++++++++++-
 test/allocator.test.js | 43 +++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 52 insertions(+), 2 deletions(-)

diff --git a/lib/allocator.js b/lib/allocator.js
index dec345f..d07b872 100644
--- a/lib/allocator.js
+++ b/lib/allocator.js
@@ -59,6 +59,7 @@ var SERVER_CAPACITY_DESC = [
 		'hard-filter-running',
 		'hard-filter-invalid-servers',
 		'load-server-vms',
+		'override-overprovisioning',
 		'calculate-server-unreserved'
 ];
 
@@ -174,11 +175,19 @@ Allocator.prototype.serverCapacity = function (servers, cb)
 
 	var self = this;
 
+	var opts = {
+		defaults: self.defaults
+	};
+
+	Object.keys(self.opts).forEach(function (key) {
+		opts[key] = opts[key] || self.opts[key];
+	});
+
 	servers.forEach(function (s) {
 		s.score = 0;
 	});
 
-	self._dispatch(self.serverCapacityExpr, servers, self.opts,
+	self._dispatch(self.serverCapacityExpr, servers, opts,
 			function (err, filteredServers, visitedAlgorithms,
 			remainingServers, reasonsRemoved) {
 		if (err) {
diff --git a/test/allocator.test.js b/test/allocator.test.js
index 0f6a16c..7e53d65 100644
--- a/test/allocator.test.js
+++ b/test/allocator.test.js
@@ -878,7 +878,7 @@ test('create expression', function (t) {
 });
 
 
-test('server capacity', function (t) {
+test('server capacity with default overprovisioning', function (t) {
 	var expectedServers = {
 		'00000000-0000-0000-0000-00259094373c': {
 			cpu: 6100,
@@ -907,3 +907,44 @@ test('server capacity', function (t) {
 		t.end();
 	});
 });
+
+
+test('server capacity with altered overprovisioning', function (t) {
+	var expectedServers = {
+		'00000000-0000-0000-0000-00259094373c': {
+			cpu: 6199,
+			ram: 106941,
+			disk: 3079003
+		},
+		'00000000-0000-0000-0000-0025909437d4': {
+			cpu: 5816,
+			ram: 109459,
+			disk: 1583360
+		}
+	};
+
+	var expectedReasons = {
+		asdsa: 'Server has status: undefined',
+		skip: 'getServerVms not set; assuming server.vms is ' +
+			'already populated'
+	};
+
+	var defaults = {
+		overprovision_ratio_cpu: 6,
+		overprovision_ratio_ram: 3,
+		overprovision_ratio_disk: 2
+	};
+
+	Object.keys(common.DEFAULTS).forEach(function (key) {
+		defaults[key] = defaults[key] || common.DEFAULTS[key];
+	});
+
+	var allocator = new Allocator(OPTS, common.ALGO_DESC, defaults);
+	allocator.serverCapacity(common.getExampleServers(),
+			function (err, servers, reasons) {
+		t.ifError(err);
+		t.deepEqual(servers, expectedServers);
+		t.deepEqual(reasons, expectedReasons);
+		t.end();
+	});
+});
-- 
2.21.0

