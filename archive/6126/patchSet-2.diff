commit 84d7d89afa51abcaa4227e36d911c0dc9d480501
Author: Dave Eddy <dave@daveeddy.com>
Date:   2019-04-22T12:05:05-04:00 (6 months ago)
    
    MANTA-4174 Lullabalize boray

diff --git a/.gitignore b/.gitignore
index 53eaa21..7602895 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,19 @@
 /target
 **/*.rs.bk
+core*
+tmp
+build
+docs/*.json
+docs/*.html
+cscope.in.out
+cscope.po.out
+cscope.out
+cscope.files
+*.log
+logfile
+.coverage_data
+cover_html
+*.tar.bz2
+smf/manifests/*.xml
+sapi_manifests/registrar/template
+sdc/sapi_manifests/registrar/template
diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..00d5b76
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,6 @@
+[submodule "deps/eng"]
+	path = deps/eng
+	url = https://github.com/joyent/eng.git
+[submodule "deps/manta-scripts"]
+	path = deps/manta-scripts
+	url = https://github.com/joyent/manta-scripts.git
diff --git a/Makefile b/Makefile
index 06ff1d7..b514038 100644
--- a/Makefile
+++ b/Makefile
@@ -2,6 +2,92 @@
 # Copyright 2019 Joyent, Inc
 #
 
-.PHONY: check
-check:
+NAME = manta-boray
+
+SMF_MANIFESTS_IN = smf/manifests/boray.xml.in
+
+ENGBLD_USE_BUILDIMAGE =	true
+ENGBLD_REQUIRE := 	$(shell git submodule update --init deps/eng)
+
+include ./deps/eng/tools/mk/Makefile.defs
+TOP ?= $(error Unable to access eng.git submodule Makefiles.)
+
+
+include ./deps/eng/tools/mk/Makefile.agent_prebuilt.defs
+include ./deps/eng/tools/mk/Makefile.smf.defs
+
+#
+# Variables
+#
+
+# TODO: Use this to download or verify install of expected rust version
+RUST_PREBUILT_VERSION =		1.33.0
+
+# TODO: Generalize this to the eng repo
+CARGO = $(shell which cargo)
+
+RELEASE_TARBALL :=	$(NAME)-pkg-$(STAMP).tar.gz
+ROOT :=			$(shell pwd)
+RELSTAGEDIR :=		/tmp/$(NAME)-$(STAMP)
+
+BASE_IMAGE_UUID = cbf116a0-43a5-447c-ad8c-8fa57787351c
+BUILD_PLATFORM  = 20180605T172856Z
+BUILDIMAGE_NAME = manta-boray
+BUILDIMAGE_DESC	= Manta boray proxy
+AGENTS		= amon config registrar
+
+#
+# Repo-specific targets
+#
+.PHONY: all
+all: build-boray manta-scripts
+
+.PHONY: manta-scripts
+manta-scripts: deps/manta-scripts/.git
+	mkdir -p $(BUILD)/scripts
+	cp deps/manta-scripts/*.sh $(BUILD)/scripts
+
+.PHONY: release
+release: all deps docs $(SMF_MANIFESTS)
+	@echo "Building $(RELEASE_TARBALL)"
+	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/boray/deps
+	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/boray/bin
+	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/boot
+	@mkdir -p $(RELSTAGEDIR)/site
+	@touch $(RELSTAGEDIR)/site/.do-not-delete-me
+	@mkdir -p $(RELSTAGEDIR)/root
+	cp -r \
+	    $(ROOT)/build \
+	    $(ROOT)/sapi_manifests \
+	    $(ROOT)/smf \
+	    $(RELSTAGEDIR)/root/opt/smartdc/boray/
+	cp target/release/boray $(RELSTAGEDIR)/root/opt/smartdc/boray/bin/
+	cp -r $(ROOT)/deps/manta-scripts \
+	    $(RELSTAGEDIR)/root/opt/smartdc/boray/deps
+	mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/boot/scripts
+	cp -R $(RELSTAGEDIR)/root/opt/smartdc/boray/build/scripts/* \
+	    $(RELSTAGEDIR)/root/opt/smartdc/boot/scripts/
+	cp -R $(ROOT)/boot/* \
+	    $(RELSTAGEDIR)/root/opt/smartdc/boot/
+	cd $(RELSTAGEDIR) && $(TAR) -I pigz -cf $(ROOT)/$(RELEASE_TARBALL) root site
+	@rm -rf $(RELSTAGEDIR)
+
+.PHONY: publish
+publish: release
+	mkdir -p $(ENGBLD_BITS_DIR)/$(NAME)
+	cp $(ROOT)/$(RELEASE_TARBALL) \
+	    $(ENGBLD_BITS_DIR)/$(NAME)/$(RELEASE_TARBALL)
+
+.PHONY: build-boray
+build-boray:
+	$(CARGO) build --release
+
+.PHONY: rust-check
+rust-check:
 	cargo check
+
+
+include ./deps/eng/tools/mk/Makefile.deps
+include ./deps/eng/tools/mk/Makefile.agent_prebuilt.targ
+include ./deps/eng/tools/mk/Makefile.smf.targ
+include ./deps/eng/tools/mk/Makefile.targ
diff --git a/boot/configure.sh b/boot/configure.sh
new file mode 100755
index 0000000..c6bdbe5
--- /dev/null
+++ b/boot/configure.sh
@@ -0,0 +1,18 @@
+#!/bin/bash
+# -*- mode: shell-script; fill-column: 80; -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2019, Joyent, Inc.
+#
+
+export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+set -o xtrace
+
+# setup is all done in setup.sh, nothing yet to reconfigure on every boot.
+
+exit 0
diff --git a/boot/setup.sh b/boot/setup.sh
new file mode 100755
index 0000000..8e00a5f
--- /dev/null
+++ b/boot/setup.sh
@@ -0,0 +1,50 @@
+#!/bin/bash
+# -*- mode: shell-script; fill-column: 80; -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2019, Joyent, Inc.
+#
+
+export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+set -o xtrace
+
+role=boray
+SOURCE="${BASH_SOURCE[0]}"
+if [[ -h $SOURCE ]]; then
+    SOURCE="$(readlink "$SOURCE")"
+fi
+DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
+PROFILE=/root/.bashrc
+PG_USER=boray
+SVC_ROOT=/opt/smartdc/boray
+ZONE_UUID=`/usr/bin/zonename`
+
+export PATH=$SVC_ROOT/bin:$SVC_ROOT/build/node/bin:/opt/local/bin:/usr/sbin/:/usr/bin:$PATH
+
+function manta_setup_boray {
+    svccfg import /opt/smartdc/muppet/smf/manifests/boray.xml
+    svcadm enable boray
+    [[ $? -eq 0 ]] || fatal "Unable to start boray"
+}
+
+echo "Running common setup scripts"
+manta_common_presetup
+
+echo "Adding local manifest directories"
+manta_add_manifest_dir "/opt/smartdc/boray"
+
+manta_common_setup "boray" 0
+
+manta_ensure_zk
+
+echo "Setting up Boray"
+manta_setup_boray_config
+
+manta_common_setup_end
+
+exit 0
diff --git a/deps/eng b/deps/eng
new file mode 160000
index 0000000..dcf15a6
--- /dev/null
+++ b/deps/eng
@@ -0,0 +1 @@
+Subproject commit dcf15a6507556313d7925c6914c0040fbc52161e
diff --git a/deps/manta-scripts b/deps/manta-scripts
new file mode 160000
index 0000000..1edad95
--- /dev/null
+++ b/deps/manta-scripts
@@ -0,0 +1 @@
+Subproject commit 1edad95e65a73331264d50a7c294182c6c04cbcf
diff --git a/sapi_manifests/boray/manifest.json b/sapi_manifests/boray/manifest.json
new file mode 100644
index 0000000..45a182e
--- /dev/null
+++ b/sapi_manifests/boray/manifest.json
@@ -0,0 +1,5 @@
+{
+    "name": "boray",
+    "path": "/opt/smartdc/boray/etc/config.json",
+    "master": true
+}
diff --git a/sapi_manifests/boray/template b/sapi_manifests/boray/template
new file mode 100644
index 0000000..2c63c08
--- /dev/null
+++ b/sapi_manifests/boray/template
@@ -0,0 +1,2 @@
+{
+}
diff --git a/smf/manifests/boray.xml.in b/smf/manifests/boray.xml.in
new file mode 100644
index 0000000..beaefa3
--- /dev/null
+++ b/smf/manifests/boray.xml.in
@@ -0,0 +1,60 @@
+<?xml version="1.0"?>
+<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright (c) 2019, Joyent, Inc.
+-->
+
+<service_bundle type="manifest" name="boray">
+    <service name="manta/application/boray" type="service" version="1">
+        <create_default_instance enabled="true" />
+
+        <dependency name="network"
+                    grouping="require_all"
+                    restart_on="error"
+                    type="service">
+            <service_fmri value="svc:/network/physical" />
+        </dependency>
+
+        <dependency name="filesystem"
+                    grouping="require_all"
+                    restart_on="error"
+                    type="service">
+            <service_fmri value="svc:/system/filesystem/local" />
+        </dependency>
+
+        <dependency name="mdata"
+                    grouping="require_all"
+                    restart_on="none"
+                    type="service">
+            <service_fmri value="svc:/smartdc/mdata:execute" />
+        </dependency>
+
+        <dependency name="config-agent"
+                    grouping="optional_all"
+                    restart_on="none"
+                    type="service">
+            <service_fmri value="svc:/smartdc/application/config-agent" />
+        </dependency>
+
+        <exec_method type="method" name="start" timeout_seconds="10"
+          exec="/opt/smartdc/boray/bin/boray &amp;">
+            <method_context>
+            </method_context>
+        </exec_method>
+
+        <exec_method type="method" name="stop" exec=":kill"
+          timeout_seconds="30" />
+
+        <template>
+            <common_name>
+                <loctext xml:lang="C">Joyent Boray Service</loctext>
+            </common_name>
+        </template>
+    </service>
+</service_bundle>
diff --git a/src/main.rs b/src/main.rs
index 8991120..c59924b 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -12,7 +12,7 @@ use std::net::SocketAddr;
 use std::sync::Mutex;
 use std::thread;
 
-use clap::{crate_version, value_t};
+use clap::{crate_version, crate_name, value_t};
 use r2d2::Pool;
 use r2d2_postgres::{TlsMode, PostgresConnectionManager};
 use serde_json::Value;
@@ -23,8 +23,6 @@ use rust_fast::protocol::FastMessage;
 use rust_fast::server;
 use slog::{error, info, trace};
 
-static APP: &'static str = "buckets-demo";
-
 fn other_error(msg: &str) -> Error {
     Error::new(ErrorKind::Other, String::from(msg))
 }
@@ -55,7 +53,7 @@ fn msg_handler(msg: &FastMessage,
 }
 
 fn main() {
-    let matches = opts::parse(APP.to_string());
+    let matches = opts::parse(crate_name!());
 
     let pg_url = matches.value_of("pg_url")
         .unwrap_or("postgresql://postgres@localhost:5432/test");
diff --git a/src/opts.rs b/src/opts.rs
index 203f974..e377526 100644
--- a/src/opts.rs
+++ b/src/opts.rs
@@ -4,7 +4,7 @@
 
 use clap::{App, Arg, ArgMatches, crate_version};
 
-pub fn parse<'a, 'b>(app: String) -> ArgMatches<'a> {
+pub fn parse<'a, 'b>(app: &str) -> ArgMatches<'a> {
     App::new(app)
         .about("Tool to test different hierarchy options offered by PostgreSQL")
         .version(crate_version!())
