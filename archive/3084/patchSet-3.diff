From bdddd44eda19ff8581d0e09e3721c2acbb5da97c Mon Sep 17 00:00:00 2001
From: Brittany Wald <brittany.wald@joyent.com>
Date: Sat, 9 Dec 2017 03:22:00 +0000
Subject: [PATCH] MANTA-3513 electric-moray vnode not removed if falsy value
 Reviewed by: Kelly McLaughlin <kelly.mclaughlin@joyent.com> Approved by:
 Kelly McLaughlin <kelly.mclaughlin@joyent.com>

---
 lib/server.js        | 8 ++++----
 test/integ.test.js   | 9 ++++++---
 test/objects.test.js | 9 ++++++---
 test/tokens.test.js  | 3 ---
 4 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/lib/server.js b/lib/server.js
index c37e52d..2348b70 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -714,10 +714,10 @@ function getObject(options) {
 
                 // delete the vnode from the value, as the vnode is only used
                 // internally
-                if (obj && obj.value && obj.value.vnode) {
+                if (obj && obj.value) {
                     delete obj.value.vnode;
                 }
-                if (obj && obj._value && obj._value.vnode) {
+                if (obj && obj._value) {
                     delete obj._value.vnode;
                 }
 
@@ -921,10 +921,10 @@ function findObjects(options) {
                 }, 'findObject: gotRecord');
                 // delete the vnode from the value, as the vnode is only used
                 // internally
-                if (obj && obj.value && obj.value.vnode) {
+                if (obj && obj.value) {
                     delete obj.value.vnode;
                 }
-                if (obj && obj._value && obj._value.vnode) {
+                if (obj && obj._value) {
                     delete obj._value.vnode;
                 }
                 dtrace['findobjects-record'].fire(function () {
diff --git a/test/integ.test.js b/test/integ.test.js
index 735dce7..69f5428 100644
--- a/test/integ.test.js
+++ b/test/integ.test.js
@@ -15,6 +15,12 @@ if (require.cache[__dirname + '/helper.js'])
 var helper = require('./helper.js');
 
 
+/*
+ * This test should be exercised by passing the electric-moray server a hash
+ * ring which contains a single vnode ("0") using the -r flag, in addition to
+ * testing a more standard ring.  Instructions for how to create a new hash ring
+ * for testing can be found in the node-fash project's create documentation.
+ */
 
 ///--- Globals
 
@@ -23,7 +29,6 @@ var before = helper.before;
 var test = helper.test;
 
 
-
 ///--- Tests
 
 before(function (cb) {
@@ -92,7 +97,6 @@ test('MANTA-117 single quotes not being escaped', function (t) {
         });
 });
 
-
 test('MANTA-328 numeric values in filters', function (t) {
         var b = this.bucket;
         var c = this.client;
@@ -137,7 +141,6 @@ test('MANTA-328 numeric values in filters', function (t) {
         });
 });
 
-
 test('MANTA-328 numeric values in filters <=', function (t) {
         var b = this.bucket;
         var c = this.client;
diff --git a/test/objects.test.js b/test/objects.test.js
index 6dc937a..b5d7055 100644
--- a/test/objects.test.js
+++ b/test/objects.test.js
@@ -17,6 +17,12 @@ if (require.cache[__dirname + '/helper.js'])
 var helper = require('./helper.js');
 
 
+/*
+ * This test should be exercised by passing the electric-moray server a hash
+ * ring which contains a single vnode ("0") using the -r flag, in addition to
+ * testing a more standard ring.  Instructions for how to create a new hash ring
+ * for testing can be found in the node-fash project's create documentation.
+ */
 
 ///--- Globals
 
@@ -82,9 +88,6 @@ function assertObject(b, t, obj, k, v) {
     t.ok(obj._id);
     t.ok(obj._etag);
     t.ok(obj._mtime);
-    if (v.vnode) {
-        t.ok(obj.value.vnode);
-    }
     return (undefined);
 }
 
diff --git a/test/tokens.test.js b/test/tokens.test.js
index 85b85e1..40b5354 100644
--- a/test/tokens.test.js
+++ b/test/tokens.test.js
@@ -39,9 +39,6 @@ function assertObject(b, t, obj, k, v) {
     t.ok(obj._id);
     t.ok(obj._etag);
     t.ok(obj._mtime);
-    if (v.vnode) {
-        t.ok(obj.value.vnode);
-    }
     return (undefined);
 }
 
-- 
2.21.0

