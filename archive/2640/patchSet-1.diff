commit 91eb9e2a3bd38b6be8c2b3e47d0819f21a1e75d4 (refs/changes/40/2640/1)
Author: Jordan Hendricks <jordan.hendricks@joyent.com>
Date:   2017-09-22T17:01:01+00:00 (2 years, 1 month ago)
    
    joyent/node-jsprim#24 `deepEqual` is incorrect when there are inherited properties

diff --git a/lib/jsprim.js b/lib/jsprim.js
index f7d0d81..b18a0a3 100644
--- a/lib/jsprim.js
+++ b/lib/jsprim.js
@@ -100,9 +100,10 @@ function deepEqual(obj1, obj2)
 	if (obj1.constructor != obj2.constructor)
 		return (false);
 
+
 	var k;
 	for (k in obj1) {
-		if (!obj2.hasOwnProperty(k))
+		if (!(k in obj2))
 			return (false);
 
 		if (!deepEqual(obj1[k], obj2[k]))
@@ -110,7 +111,7 @@ function deepEqual(obj1, obj2)
 	}
 
 	for (k in obj2) {
-		if (!obj1.hasOwnProperty(k))
+		if (!(k in obj1))
 			return (false);
 	}
 
diff --git a/test/basic.js b/test/basic.js
index 92df8f1..56c8f9a 100644
--- a/test/basic.js
+++ b/test/basic.js
@@ -21,6 +21,15 @@ mod_assert.deepEqual(copy, obj);
 copy['home'] = false;
 mod_assert.ok(obj['home'] === true);
 
+function TestObj(arg) {
+	this.arg = arg;
+}
+TestObj.prototype.toString = function toString() {
+	return ('testObj');
+};
+var TO_0 = new TestObj('foo');
+var TO_1 = new TestObj('bar');
+
 /* deepEqual */
 var values = [
     true, false, null, undefined, 0, 1,
@@ -39,7 +48,9 @@ var values = [
     [],
     [ 1, 2, 3 ],
     [ 1, 2, 3, 4 ],
-    [ 1, { 'hello': 'world' }, false ]
+    [ 1, { 'hello': 'world' }, false ],
+    TO_0,
+    TO_1
 ];
 values.forEach(function (o1, j) {
 	values.forEach(function (o2, k) {
