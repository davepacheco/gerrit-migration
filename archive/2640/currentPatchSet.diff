commit e65bdabbc1abdf83ba1e8d121e5a877ec29e6fe1 (HEAD -> master, tag: v2.0.0, refs/changes/40/2640/6)
Author: Jordan Hendricks <jordan.hendricks@joyent.com>
Date:   2017-10-26T00:22:58+00:00 (1 year, 11 months ago)
    
    joyent/node-jsprim#24 `deepEqual` is incorrect when there are inherited properties
    Reviewed by: David Pacheco <dap@joyent.com>
    Approved by: David Pacheco <dap@joyent.com>

diff --git a/CHANGES.md b/CHANGES.md
index c52d39d..e2f903e 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -4,6 +4,14 @@
 
 None yet.
 
+## v2.0.0 (2017-10-25)
+
+Major bump due to a change in the semantics of `deepEqual`. Code that relies on
+`deepEqual` to fail if inherited properties are present on the objects compared
+should be updated accordingly.
+
+* #24 `deepEqual` is incorrect when there are inherited properties
+
 ## v1.4.1 (2017-08-02)
 
 * #21 Update verror dep
diff --git a/lib/jsprim.js b/lib/jsprim.js
index f7d0d81..4f5eea6 100644
--- a/lib/jsprim.js
+++ b/lib/jsprim.js
@@ -102,7 +102,7 @@ function deepEqual(obj1, obj2)
 
 	var k;
 	for (k in obj1) {
-		if (!obj2.hasOwnProperty(k))
+		if (!(k in obj2))
 			return (false);
 
 		if (!deepEqual(obj1[k], obj2[k]))
@@ -110,7 +110,7 @@ function deepEqual(obj1, obj2)
 	}
 
 	for (k in obj2) {
-		if (!obj1.hasOwnProperty(k))
+		if (!(k in obj1))
 			return (false);
 	}
 
diff --git a/package.json b/package.json
index 25345ee..d3a7afe 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
 	"name": "jsprim",
-	"version": "1.4.1",
+	"version": "2.0.0",
 	"description": "utilities for primitive JavaScript types",
 	"main": "./lib/jsprim.js",
 	"repository": {
diff --git a/test/basic.js b/test/basic.js
index 92df8f1..cdc4aae 100644
--- a/test/basic.js
+++ b/test/basic.js
@@ -21,6 +21,10 @@ mod_assert.deepEqual(copy, obj);
 copy['home'] = false;
 mod_assert.ok(obj['home'] === true);
 
+var TO_0 = { 'prop1': { 'foo': 'bar' }, 'prop2': 7 };
+var TO_1 = Object.create({ 'prop2': 7 });
+TO_1.prop1 = { 'prop1': { 'foo': 'bar' } };
+
 /* deepEqual */
 var values = [
     true, false, null, undefined, 0, 1,
@@ -39,7 +43,10 @@ var values = [
     [],
     [ 1, 2, 3 ],
     [ 1, 2, 3, 4 ],
-    [ 1, { 'hello': 'world' }, false ]
+    [ 1, { 'hello': 'world' }, false ],
+    {},
+    TO_0,
+    TO_1
 ];
 values.forEach(function (o1, j) {
 	values.forEach(function (o2, k) {
