From 497061cd91c0d949f8c9406c3e79b3822b783413 Mon Sep 17 00:00:00 2001
From: Julien Gilli <julien.gilli@joyent.com>
Date: Thu, 29 Jun 2017 10:39:17 -0700
Subject: [PATCH] DOCKER-1075 cli-local-volumes.test.js fails for docker client
 <= 1.8.3

---
 test/integration/cli-local-volumes.test.js | 23 ++++++-----
 test/lib/common.js                         | 47 ++++++++++++++++++++++
 2 files changed, 59 insertions(+), 11 deletions(-)

diff --git a/test/integration/cli-local-volumes.test.js b/test/integration/cli-local-volumes.test.js
index 0015d40..8a0b5d6 100644
--- a/test/integration/cli-local-volumes.test.js
+++ b/test/integration/cli-local-volumes.test.js
@@ -25,8 +25,7 @@ var STATE = {
     log: require('../lib/log')
 };
 
-var DOCKER_CLIENT_VERSION =
-    common.parseDockerVersion(process.env.DOCKER_CLI_VERSION);
+var DOCKER_CLI_VERSION = process.env.DOCKER_CLI_VERSION;
 
 test('setup', function (tt) {
     tt.test('docker env', function (t) {
@@ -63,9 +62,8 @@ test('docker local volumes', function (tt) {
             var expectedClientErr;
             var expectedCliErr;
 
-            if (DOCKER_CLIENT_VERSION.major <= 1
-                && DOCKER_CLIENT_VERSION.minor <= 9
-                && DOCKER_CLIENT_VERSION.patch <= 1) {
+            if (common.dockerClientVersionCmp(DOCKER_CLI_VERSION,
+                '1.9.1') !== 1) {
                 expectedClientErr =
                     'invalid value "data" for flag -v: data is not an absolute '
                         + 'path';
@@ -91,9 +89,13 @@ test('docker local volumes', function (tt) {
             var expectedClientErr;
             var expectedCliErr;
 
-            if (DOCKER_CLIENT_VERSION.major <= 1
-                && DOCKER_CLIENT_VERSION.minor <= 9
-                && DOCKER_CLIENT_VERSION.patch <= 1) {
+            if (common.dockerClientVersionCmp(DOCKER_CLI_VERSION,
+                '1.8.3') !== 1) {
+                expectedClientErr =
+                    'invalid value ":/mnt" for flag -v: bad format for '
+                        + 'volumes: :/mnt';
+            } else if (common.dockerClientVersionCmp(DOCKER_CLI_VERSION,
+                '1.9.1') !== 1) {
                 expectedClientErr =
                     'invalid value ":/mnt" for flag -v: bad format for path: '
                         + ':/mnt';
@@ -119,9 +121,8 @@ test('docker local volumes', function (tt) {
             var expectedClientErr;
             var expectedCliErr;
 
-            if (DOCKER_CLIENT_VERSION.major <= 1
-                && DOCKER_CLIENT_VERSION.minor <= 9
-                && DOCKER_CLIENT_VERSION.patch <= 1) {
+            if (common.dockerClientVersionCmp(DOCKER_CLI_VERSION,
+                '1.9.1') !== 1) {
                 expectedClientErr =
                     'docker: Invalid volume: path can\'t be \'/\'.';
             } else {
diff --git a/test/lib/common.js b/test/lib/common.js
index ff30667..a45b81c 100644
--- a/test/lib/common.js
+++ b/test/lib/common.js
@@ -17,6 +17,7 @@ var deepEqual = require('deep-equal');
 var difflet = require('difflet');
 var exec = require('child_process').exec;
 var fmt = require('util').format;
+var jsprim = require('jsprim');
 var libuuid = require('libuuid');
 var VError = require('verror').VError;
 
@@ -377,8 +378,54 @@ function parseDockerVersion(dockerVersionString) {
     };
 }
 
+/*
+ * Compares two strings "versionA" and "versionB" that represent a docker client
+ * version (e.g '1.9.1') and returns:
+ *
+ * - -1 if versionA < versionB
+ * - 0 if version A === version B
+ * - 1 if version A > version B
+ *
+ * A docker client version can have a "label" version. For instance, a docker
+ * client version of '1.9.1-somelabel' has the label 'somelabel'. These labels
+ * are not considered when comparing versions, so versions '1.9.1-foo' and
+ * '1.9.1-bar' will be considered to be the same.
+ */
+function dockerClientVersionCmp(versionA, versionB) {
+    assert.string(versionA, 'versionA');
+    assert.string(versionB, 'versionB');
+
+    var parsedVersionA = parseDockerVersion(versionA);
+    var parsedVersionB = parseDockerVersion(versionB);
+    var versionComponentA;
+    var versionComponentB;
+    var versionComponentIdx;
+    var versionComponentName;
+    var VERSION_COMPONENT_NAMES = ['major', 'minor', 'patch'];
+
+    if (versionA === versionB) {
+        return 0;
+    }
+
+    for (versionComponentIdx in VERSION_COMPONENT_NAMES) {
+        versionComponentName = VERSION_COMPONENT_NAMES[versionComponentIdx];
+
+        versionComponentA = parsedVersionA[versionComponentName];
+        versionComponentB = parsedVersionB[versionComponentName];
+
+        if (versionComponentA < versionComponentB) {
+            return -1;
+        } else if (versionComponentA > versionComponentB) {
+            return 1;
+        }
+    }
+
+    return 0;
+}
+
 module.exports = {
     constants: constants,
+    dockerClientVersionCmp: dockerClientVersionCmp,
     done: done,
     execPlus: execPlus,
     expected: expectedDeepEqual,
-- 
2.21.0

