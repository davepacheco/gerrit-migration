From 8a417c6892d12023a698f36279e9dc6e2947be28 Mon Sep 17 00:00:00 2001
From: Mike Gerdts <mike.gerdts@joyent.com>
Date: Fri, 23 Aug 2019 12:43:23 +0000
Subject: [PATCH] for var in -> for var of

---
 lib/backends/linux/sysinfo.js | 42 +++++++++--------------------------
 1 file changed, 11 insertions(+), 31 deletions(-)

diff --git a/lib/backends/linux/sysinfo.js b/lib/backends/linux/sysinfo.js
index 9427f22..07d2fa8 100644
--- a/lib/backends/linux/sysinfo.js
+++ b/lib/backends/linux/sysinfo.js
@@ -76,8 +76,7 @@ function getCpuInfo(callback)
 
         var nextcpu = false;
         var lines = data.asciiSlice().split('\n');
-        for (var line in lines) {
-            line = lines[line];
+        for (var line of lines) {
 
             // Don't bother splitting lines that will be of no interest
             if (line === '') {
@@ -140,9 +139,7 @@ function getMemInfo(callback)
         }
         var lines = data.asciiSlice().split('\n');
 
-        for (var line in lines) {
-            line = lines[line];
-
+        for (var line of lines) {
             var [key, value, units] = line.split(/:\s*| /);
             if (key === 'MemTotal') {
                 assert(units === 'kB');
@@ -188,8 +185,7 @@ function getDiskInfo(callback)
         }
         disks = disks.blockdevices;
 
-        for (var disk in disks) {
-            disk = disks[disk];
+        for (var disk of disks) {
             sysinfo['Disks'][disk.name] = {
                 'Size in GB': Math.floor(disk.size / 1000000000)
             };
@@ -239,8 +235,7 @@ function getZpoolInfo(callback)
                 var dsprops = {};
                 var lines = stdout.split('\n');
 
-                for (var line in lines) {
-                    line = lines[line];
+                for (var line of lines) {
                     var vals = line.split('\t');
                     var pool = vals[0];
                     dsprops[pool] = {};
@@ -292,9 +287,7 @@ function getZpoolInfo(callback)
                     return;
                 }
                 var syspools = [];
-                for (var result in results.successes) {
-                    result = results.successes[result];
-
+                for (var result of results.successes) {
                     if (!result || !result.hasOwnProperty('name')) {
                         continue;
                     }
@@ -338,9 +331,7 @@ function getZpoolInfo(callback)
                 // newlines after it.
                 var lines = stdout.split('\n\n')[1].split('\n');
 
-                for (var line in lines) {
-                    line = lines[line];
-
+                for (var line of lines) {
                     // Skip header line and the line with pool name
                     if (!line.startsWith('\t ')) {
                         continue;
@@ -469,9 +460,7 @@ function ipAddrToNetInfo(nets)
     var aggr_ifs = {};
 
     // XXX-mg does not handle vlan, vxlan.  vnic and aggr are questionable.
-    for (var net in nets) {
-        var net = nets[net];
-
+    for (var net of nets) {
         if (net.link_type !== 'ether') {
             continue;
         }
@@ -484,9 +473,7 @@ function ipAddrToNetInfo(nets)
         };
         nics[net.ifname] = nic;
 
-        for (var addr in net.addr_info) {
-            addr = net.addr_info[addr];
-
+        for (var addr of net.addr_info) {
             // XXX-mg what about inet6?
             if (addr.family !== 'inet') {
                 continue;
@@ -558,9 +545,7 @@ function getSmbiosInfo(callback)
 
         var sysinfo = {};
         var lines = stdout.split(/\n\s*/);
-        for (var line in lines) {
-            line = lines[line];
-
+        for (var line of lines) {
             var [key] = line.split(/: /, 1);
             if (xlate.hasOwnProperty(key)) {
                 sysinfo[xlate[key]] = line.slice(key.length + 2);
@@ -587,13 +572,8 @@ function sysinfo(callback)
         var si = {};
 
         if (!err) {
-            for (var result in results.successes) {
-                result = results.successes[result];
-
-                for (var key in result) {
-                    si[key] = result[key];
-                }
-            }
+            results.successes.unshift(si);
+            Object.assign.apply(this, results.successes);
         }
         callback(err, si);
     });
-- 
2.17.2 (Apple Git-113)

