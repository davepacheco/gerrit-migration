From 37543c50d43041c498ec310b5889866e399015c3 Mon Sep 17 00:00:00 2001
From: Marsell Kukuljevic <marsell@joyent.com>
Date: Mon, 25 Feb 2019 15:50:03 +0100
Subject: [PATCH] TRITON-1253 dapi should prevent VMs requiring flexible disk
 sizing being allocated to platforms which are too old to support it

---
 docs/index.md                                 |  5 +-
 .../hard-filter-feature-min-platform.js       | 16 +++-
 lib/validations.js                            |  8 +-
 .../hard-filter-min-platform-feature.test.js  | 73 ++++++++++++++++++-
 4 files changed, 97 insertions(+), 5 deletions(-)

diff --git a/docs/index.md b/docs/index.md
index 99950fd..0a1a908 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -310,8 +310,9 @@ Some default values can be altered upon allocator initialisation.
 | ------------------------ | -------- | ------------| --------------- |
 | disable_override_overprovisioning | Boolean | false | Whether the override-overprovisioning plugin should be disabled. |
 | filter_docker_min_platform        | String  | -     | Minimum platform version allowed for Docker containers.         |
-| filter_docker_nfs_volumes_automount_min_platform        | String  | -     | Minimum platform version allowed for Docker containers that automatically mount NFS volumes. |
-| filter_non_docker_nfs_volumes_automount_min_platform        | String  | -     | Minimum platform version allowed for non-Docker (infrastructure) containers that automatically mount NFS volumes. |
+| filter_docker_nfs_volumes_automount_min_platform      | String  | -     | Minimum platform version allowed for Docker containers that automatically mount NFS volumes. |
+| filter_non_docker_nfs_volumes_automount_min_platform  | String  | -     | Minimum platform version allowed for non-Docker (infrastructure) containers that automatically mount NFS volumes. |
+| filter_flexible_disk_min_platform   | String  | -     | Minimum platform version allowed for VMs that have flexible disk sizing. |
 | filter_headnode          | Boolean  | true    | Whether to remove the headnode from consideration for a new VM.       |
 | filter_min_resources     | Boolean  | true    | Whether to filter out CNs which don't have enough space for a new VM. |
 | filter_large_servers     | Boolean  | true    | Whether to remove large empty servers as much as possible.            |
diff --git a/lib/algorithms/hard-filter-feature-min-platform.js b/lib/algorithms/hard-filter-feature-min-platform.js
index 33f950a..aa3239f 100644
--- a/lib/algorithms/hard-filter-feature-min-platform.js
+++ b/lib/algorithms/hard-filter-feature-min-platform.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -21,6 +21,9 @@
  * - "non-docker automatic volume mounting", or the ability to have an
  *   infrastructure container automatically mount the volumes it depends on
  *
+ * - "flexible disk size" feature, or the ability to have several zvols attached
+ *   and/or destroyed on a bhyve container
+ *
  * Assumes a setup server, so make sure to run hard-filter-setup first.
  */
 
@@ -74,6 +77,17 @@ function filterFeatureMinPlatform(servers, opts, cb) {
 				reasons);
 	}
 
+	var flexibleDiskMinPlatform =
+	opts.defaults.filter_flexible_disk_min_platform;
+	if (opts.vm.flexible_disk_size && flexibleDiskMinPlatform) {
+		var flexibleDiskMinPlatforms =
+			{ '7.0': flexibleDiskMinPlatform };
+		servers =
+			filterMinPlatforms(flexibleDiskMinPlatforms,
+				servers, 'Flexible disk size support',
+				reasons);
+	}
+
 	return (cb(null, servers, reasons));
 }
 
diff --git a/lib/validations.js b/lib/validations.js
index fe7f669..08650bd 100644
--- a/lib/validations.js
+++ b/lib/validations.js
@@ -129,10 +129,16 @@ validateDefaults(defaults)
 
 	val = defaults.filter_docker_min_platform;
 	if (typeof (val) !== 'undefined' && !PLATFORM_RE.test(val)) {
-		return ('Defaults filter_docker_min_platform is not a ISO ' +
+		return ('Defaults filter_docker_min_platform is not an ISO ' +
 			'UTC timestamp');
 	}
 
+	val = defaults.filter_flexible_disk_min_platform;
+	if (typeof (val) !== 'undefined' && !PLATFORM_RE.test(val)) {
+		return ('Defaults filter_flexible_disk_min_platform is not ' +
+			'an  ISO UTC timestamp');
+	}
+
 	val = defaults.filter_owner_server;
 	if (val) {
 		if (!isHash(val)) {
diff --git a/test/algorithms/hard-filter-min-platform-feature.test.js b/test/algorithms/hard-filter-min-platform-feature.test.js
index 64b8bc4..89cfa38 100644
--- a/test/algorithms/hard-filter-min-platform-feature.test.js
+++ b/test/algorithms/hard-filter-min-platform-feature.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 var test = require('tape');
@@ -61,6 +61,20 @@ var infraContainersNfsAutomountTestServers = common.genServers([
 	['b4343a95-5aeb-499a-bc0e-701c5119b89e', '7.0', '20170925T211846Z']
 ]);
 
+var infraContainersFlexibleDiskTestServers = common.genServers([
+	/* null should default to 6.5 */
+	['e69c5420-3876-11e9-9081-c749e75a2f97', null,  '20130129T122401Z'],
+	['ee8d8960-3876-11e9-8b90-4b56ff71b355', '7.0', '20121218T203452Z'],
+	['f4a3c6ac-3876-11e9-b1aa-4fe850533f1e', '7.0', '20171005T201141Z'],
+	['fadc79a6-3876-11e9-a5d6-3b484b754776', '7.0', '20181206T190646Z'],
+	['0123ccc4-3877-11e9-9d48-4b1a8bdf0b0b', '7.1', '20121218T203452Z'],
+	['07a3a57e-3877-11e9-9cb5-375b98cc38d9', '7.1', '20121210T203034Z'],
+	['0d8618f0-3877-11e9-a22e-17c3804a76c9', '7.1', '20130129T122401Z'],
+	['13395a5a-3877-11e9-9206-bbe22ee1f65c', '7.0', '20181206T190647Z'],
+	['19aa8c38-3877-11e9-ace5-63ec3db2d342', '7.0', '20190106T200727Z']
+]);
+
+
 var checkFilter = common.createPluginChecker(filter);
 
 test('filterFeatureMinPlatform with filter_docker_min_platform, no Docker',
@@ -280,3 +294,60 @@ test('filterFeatureMinPlatform with ' +
 	checkFilter(t, infraContainersNfsAutomountTestServers, opts,
 		expectedServers, expectedReasons);
 });
+
+
+test('filterFeatureMinPlatform with filter_flexible_disk_min_platform, ' +
+	'VM has flexible_disk_size',
+	function (t) {
+	var expectedServers = [
+		infraContainersFlexibleDiskTestServers[4],
+		infraContainersFlexibleDiskTestServers[5],
+		infraContainersFlexibleDiskTestServers[6],
+		infraContainersFlexibleDiskTestServers[7],
+		infraContainersFlexibleDiskTestServers[8]
+	];
+
+	var opts = {
+		vm: {
+			flexible_disk_size: 1024
+		},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_flexible_disk_min_platform: '20181206T190647Z'
+		}
+	};
+
+	var expectedReasons = {
+		/* BEGIN JSSTYLED */
+		'e69c5420-3876-11e9-9081-c749e75a2f97': 'Flexible disk size support requires min platforms {"7.0":"20181206T190647Z"}, but server has {"6.5":"20130129T122401Z"}',
+		'ee8d8960-3876-11e9-8b90-4b56ff71b355': 'Flexible disk size support requires min platforms {"7.0":"20181206T190647Z"}, but server has {"7.0":"20121218T203452Z"}',
+		'f4a3c6ac-3876-11e9-b1aa-4fe850533f1e': 'Flexible disk size support requires min platforms {"7.0":"20181206T190647Z"}, but server has {"7.0":"20171005T201141Z"}',
+		'fadc79a6-3876-11e9-a5d6-3b484b754776': 'Flexible disk size support requires min platforms {"7.0":"20181206T190647Z"}, but server has {"7.0":"20181206T190646Z"}'
+		/* END JSSTYLED */
+	};
+
+	checkFilter(t, infraContainersFlexibleDiskTestServers, opts,
+		expectedServers, expectedReasons);
+});
+
+
+test('filterFeatureMinPlatform with filter_flexible_disk_min_platform, ' +
+	'VM does not have flexible_disk_size',
+	function (t) {
+	var expectedServers = infraContainersFlexibleDiskTestServers;
+
+	var opts = {
+		vm: {},
+		img: {},
+		pkg: {},
+		defaults: {
+			filter_flexible_disk_min_platform: '20181206T190647Z'
+		}
+	};
+
+	var expectedReasons = {};
+
+	checkFilter(t, infraContainersFlexibleDiskTestServers, opts,
+		expectedServers, expectedReasons);
+});
-- 
2.21.0

