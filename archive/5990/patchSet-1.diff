From 245ee09e9de0baf9c3e3af1f3ead8900a5307b03 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Wed, 20 Mar 2019 19:49:11 +0100
Subject: [PATCH] TRITON-1337 `sdcadm experimental fix-core-vm-resolvers`
 broken

---
 lib/cli/do_fix_core_vm_resolvers.js | 60 +++++++++++++++--------------
 1 file changed, 32 insertions(+), 28 deletions(-)

diff --git a/lib/cli/do_fix_core_vm_resolvers.js b/lib/cli/do_fix_core_vm_resolvers.js
index 5db6af8..64a0c22 100644
--- a/lib/cli/do_fix_core_vm_resolvers.js
+++ b/lib/cli/do_fix_core_vm_resolvers.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var util = require('util');
@@ -28,38 +28,42 @@ function do_fix_core_vm_resolvers(subcmd, opts, args, cb) {
         return;
     }
 
-    steps.binder.checkCoreVmInstancesResolvers({
-        sdcadm: self.sdcadm,
-        progress: progress,
-        log: log,
-        adminOnly: opts.admin_only
-    }, function (err, resolvers) {
-        if (err) {
-            cb(err);
+    self.sdcadm.ensureSdcApp({}, function (appErr) {
+        if (appErr) {
+            cb(appErr);
             return;
         }
-
-        Object.keys(resolvers).forEach(function (r) {
-            progress(
-                format('VM %s (%s) resolvers need to be updated\n', r,
-                    resolvers[r].alias) +
-                common.indent(format('from [%s] to [%s]',
-                    resolvers[r].current.join(', '),
-                    resolvers[r].expected.join(', '))));
-        });
-
-        if (opts.dry_run) {
-            cb();
-            return;
-        }
-
-        steps.binder.updateCoreVmsResolvers({
+        steps.binder.checkCoreVmInstancesResolvers({
             sdcadm: self.sdcadm,
             progress: progress,
             log: log,
-            fixableResolvers: resolvers
-        }, function (updateError) {
-            cb(updateError);
+            adminOnly: opts.admin_only
+        }, function (err, resolvers) {
+            if (err) {
+                cb(err);
+                return;
+            }
+
+            Object.keys(resolvers).forEach(function (r) {
+                progress(
+                    format('VM %s (%s) resolvers need to be updated\n', r,
+                        resolvers[r].alias) +
+                    common.indent(format('from [%s] to [%s]',
+                        resolvers[r].current.join(', '),
+                        resolvers[r].expected.join(', '))));
+            });
+
+            if (opts.dry_run) {
+                cb();
+                return;
+            }
+
+            steps.binder.updateCoreVmsResolvers({
+                sdcadm: self.sdcadm,
+                progress: progress,
+                log: log,
+                fixableResolvers: resolvers
+            }, cb);
         });
     });
 }
-- 
2.21.0

