commit 4976a7bcf63b2dad2c5b74357b449c0567a316a2
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2019-03-20T19:52:17+01:00 (7 months ago)
    
    TRITON-1337 `sdcadm experimental fix-core-vm-resolvers` broken

diff --git a/CHANGES.md b/CHANGES.md
index 5b3ed72..a9df50c 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -10,6 +10,10 @@
 
 # sdcadm Changelog
 
+## 1.25.1
+
+- TRITON-1337 `sdcadm experimental fix-core-vm-resolvers` broken
+
 ## 1.25.0
 
 - TRITON-1307 Fix a few commands were broken in the TRITON-1300 change.
diff --git a/lib/cli/do_fix_core_vm_resolvers.js b/lib/cli/do_fix_core_vm_resolvers.js
index 5db6af8..64a0c22 100644
--- a/lib/cli/do_fix_core_vm_resolvers.js
+++ b/lib/cli/do_fix_core_vm_resolvers.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2018 Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var util = require('util');
@@ -28,38 +28,42 @@ function do_fix_core_vm_resolvers(subcmd, opts, args, cb) {
         return;
     }
 
-    steps.binder.checkCoreVmInstancesResolvers({
-        sdcadm: self.sdcadm,
-        progress: progress,
-        log: log,
-        adminOnly: opts.admin_only
-    }, function (err, resolvers) {
-        if (err) {
-            cb(err);
+    self.sdcadm.ensureSdcApp({}, function (appErr) {
+        if (appErr) {
+            cb(appErr);
             return;
         }
-
-        Object.keys(resolvers).forEach(function (r) {
-            progress(
-                format('VM %s (%s) resolvers need to be updated\n', r,
-                    resolvers[r].alias) +
-                common.indent(format('from [%s] to [%s]',
-                    resolvers[r].current.join(', '),
-                    resolvers[r].expected.join(', '))));
-        });
-
-        if (opts.dry_run) {
-            cb();
-            return;
-        }
-
-        steps.binder.updateCoreVmsResolvers({
+        steps.binder.checkCoreVmInstancesResolvers({
             sdcadm: self.sdcadm,
             progress: progress,
             log: log,
-            fixableResolvers: resolvers
-        }, function (updateError) {
-            cb(updateError);
+            adminOnly: opts.admin_only
+        }, function (err, resolvers) {
+            if (err) {
+                cb(err);
+                return;
+            }
+
+            Object.keys(resolvers).forEach(function (r) {
+                progress(
+                    format('VM %s (%s) resolvers need to be updated\n', r,
+                        resolvers[r].alias) +
+                    common.indent(format('from [%s] to [%s]',
+                        resolvers[r].current.join(', '),
+                        resolvers[r].expected.join(', '))));
+            });
+
+            if (opts.dry_run) {
+                cb();
+                return;
+            }
+
+            steps.binder.updateCoreVmsResolvers({
+                sdcadm: self.sdcadm,
+                progress: progress,
+                log: log,
+                fixableResolvers: resolvers
+            }, cb);
         });
     });
 }
diff --git a/package.json b/package.json
index 36c4d02..1c31f4e 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdcadm",
   "description": "Administer a SmartDataCenter (SDC) standup",
-  "version": "1.25.0",
+  "version": "1.25.1",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
