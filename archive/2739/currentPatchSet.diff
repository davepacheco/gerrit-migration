commit cdeb09d35e84d871f3de5c1386896c0cecd25d1a (refs/changes/39/2739/1)
Author: Julien Gilli <julien.gilli@joyent.com>
Date:   2017-10-06T11:39:14-07:00 (2 years ago)
    
    VOLAPI-85 replace smartdc_role=nfsvolumestorage with triton.system_role=nfsvolumestorage

diff --git a/CHANGES.md b/CHANGES.md
index 7c30852..4b0d35c 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -2,8 +2,8 @@
 
 ## 1.1.5 (not yet released)
 
-(nothing yet)
-
+- VOLAPI-85: replace smartdc_role=nfsvolumestorage with
+  triton.system_role=nfsvolumestorage
 
 ## 1.1.4
 
diff --git a/lib/index.js b/lib/index.js
index 7be9f55..3f934cb 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -23,6 +23,9 @@
  *   by the CNS service.
  * - `triton.network.public` (string): Set on a VM, used to specify the external
  *   network name a VM will use.
+ * - `triton.system_role` (string): Can be set on a VM to identify its role
+ *   within Triton (e.g 'nfsvolumestorage' for VMs acting as storage VMs for NFS
+ *   volumes).
  */
 
 var assert = require('assert-plus');
@@ -42,6 +45,7 @@ var typeFromKey = {
     'triton.cns.disable': 'boolean',
     'triton.cns.reverse_ptr': 'string',
     'triton.network.public': 'string',
+    'triton.system_role': 'string',
 
     // Internal testing Triton tags
     'triton._test.string': 'string',
@@ -144,6 +148,14 @@ var validatorFromKey = {
         return null;
     },
 
+    'triton.system_role': function validateTritonSystemRole(val) {
+        if (val !== 'nfsvolumestorage') {
+            return format('invalid "triton.system_role" tag: %s.');
+        }
+
+        return null;
+    },
+
     /*
      * Triton tags used for internal testing.
      */
diff --git a/test/unit.test.js b/test/unit.test.js
index c66aa65..9a84269 100644
--- a/test/unit.test.js
+++ b/test/unit.test.js
@@ -181,6 +181,21 @@ var cases = [
         key: 'triton.cns.services',
         str: '5foobar',
         val: '5foobar'
+    },
+    {
+        key: 'triton.system_role',
+        str: 'nfsvolumestorage',
+        val: 'nfsvolumestorage'
+    },
+    {
+        key: 'triton.system_role',
+        str: 'foo',
+        err: /invalid.*triton\.system_role.*tag/
+    },
+    {
+        key: 'triton.system_role',
+        str: '',
+        err: /invalid.*triton\.system_role.*tag/
     }
 
     // TODO: triton.cns.reverse_ptr
