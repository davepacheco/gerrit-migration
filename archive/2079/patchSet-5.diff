From 60ff93a1c8e1fb8e485463d6efc25d63783dd6a3 Mon Sep 17 00:00:00 2001
From: Jordan Hendricks <jordan.hendricks@joyent.com>
Date: Mon, 12 Jun 2017 23:59:14 -0700
Subject: [PATCH] joyent/node-manta#302 Create a manual page for `mmpu`
 joyent/node-manta#311 `createUpload` incorrectly handles some target object
 headers Reviewed by: Approved by:

---
 CHANGES.md          |   5 +
 bin/mmpu            |   2 -
 docs/man/mchattr.md |   2 +-
 docs/man/mchmod.md  |   2 +-
 docs/man/mfind.md   |   2 +-
 docs/man/mget.md    |   2 +-
 docs/man/minfo.md   |   4 +-
 docs/man/mjob.md    |   4 +-
 docs/man/mln.md     |   4 +-
 docs/man/mlogin.md  |   4 +-
 docs/man/mls.md     |   2 +-
 docs/man/mmkdir.md  |   2 +-
 docs/man/mmpu.md    | 268 +++++++++++++++++++++++++++++++++++++++++++
 docs/man/mput.md    |   2 +-
 docs/man/mrm.md     |   2 +-
 docs/man/mrmdir.md  |   2 +-
 docs/man/msign.md   |   2 +-
 docs/man/muntar.md  |   4 +-
 lib/client.js       |  22 ++--
 man/man1/mchattr.1  |   5 +-
 man/man1/mchmod.1   |   2 +-
 man/man1/mfind.1    |   2 +-
 man/man1/mget.1     |   5 +-
 man/man1/minfo.1    |   7 +-
 man/man1/mjob.1     |   4 +-
 man/man1/mln.1      |   7 +-
 man/man1/mlogin.1   |   7 +-
 man/man1/mls.1      |   5 +-
 man/man1/mmkdir.1   |   5 +-
 man/man1/mmpu.1     | 271 ++++++++++++++++++++++++++++++++++++++++++++
 man/man1/mput.1     |   2 +-
 man/man1/mrm.1      |   2 +-
 man/man1/mrmdir.1   |   5 +-
 man/man1/msign.1    |   5 +-
 man/man1/muntar.1   |   4 +-
 package.json        |   2 +-
 test/client.test.js | 113 +++++++++++++++++-
 test/mmpu.test.js   |   2 +-
 38 files changed, 721 insertions(+), 71 deletions(-)
 create mode 100644 docs/man/mmpu.md
 create mode 100644 man/man1/mmpu.1

diff --git a/CHANGES.md b/CHANGES.md
index ac710a4..608cfe8 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -2,6 +2,11 @@
 
 ## not yet released
 
+## 4.4.1
+
+- joyent/node-manta#302 Create a manual page for `mmpu`
+- joyent/node-manta#311 `createUpload` incorrectly handles some target object headers
+
 ## 4.4.0
 
 - joyent/node-manta#308 `mmpu commit` does not parse options
diff --git a/bin/mmpu b/bin/mmpu
index 7f27650..1a7b9e4 100755
--- a/bin/mmpu
+++ b/bin/mmpu
@@ -205,7 +205,6 @@ MMpu.prototype.do_create.options = manta.DEFAULT_CLI_OPTIONS.concat([
 ]);
 
 
-//TODO: add some examples here.
 MMpu.prototype.do_create.help = [
     'Initiate a Manta multipart upload for an object.',
     '',
@@ -466,7 +465,6 @@ MMpu.prototype.do_commit.help = [
     '',
     '   $ mmpu commit be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d \\',
     '        f14a41dc-7d28-6fdb-e07c-d54c0adcdf35',
-    '        e2893e52-9ba3-64fe-eec9-b4663835ad01',
     '',
     '   $ mmpu commit be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d \\',
     '        f14a41dc-7d28-6fdb-e07c-d54c0adcdf35 \\',
diff --git a/docs/man/mchattr.md b/docs/man/mchattr.md
index e44c545..c8388d6 100644
--- a/docs/man/mchattr.md
+++ b/docs/man/mchattr.md
@@ -64,7 +64,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/mchmod.md b/docs/man/mchmod.md
index f08f8e4..26e0b33 100644
--- a/docs/man/mchmod.md
+++ b/docs/man/mchmod.md
@@ -66,7 +66,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/mfind.md b/docs/man/mfind.md
index eca420f..22da707 100644
--- a/docs/man/mfind.md
+++ b/docs/man/mfind.md
@@ -99,7 +99,7 @@ OPTIONS
 ENVIRONMENT
 -----------
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/mget.md b/docs/man/mget.md
index d3500d6..7187fe0 100644
--- a/docs/man/mget.md
+++ b/docs/man/mget.md
@@ -85,7 +85,7 @@ OPTIONS
 ENVIRONMENT
 -----------
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/minfo.md b/docs/man/minfo.md
index 3c8aaeb..cc0eb6b 100644
--- a/docs/man/minfo.md
+++ b/docs/man/minfo.md
@@ -58,10 +58,10 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
-  In place of `--user`
+  In place of `--user`.
 
 `MANTA_KEY_ID`
   In place of `-k, --key`.
diff --git a/docs/man/mjob.md b/docs/man/mjob.md
index fd3ca00..e4dd8dc 100644
--- a/docs/man/mjob.md
+++ b/docs/man/mjob.md
@@ -317,10 +317,10 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
-  In place of `--user`
+  In place of `--user`.
 
 `MANTA_KEY_ID`
   In place of `-k, --key`.
diff --git a/docs/man/mln.md b/docs/man/mln.md
index f4feb35..2ebffd8 100644
--- a/docs/man/mln.md
+++ b/docs/man/mln.md
@@ -64,10 +64,10 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
-  In place of `--user`
+  In place of `--user`.
 
 `MANTA_KEY_ID`
   In place of `-k, --key`.
diff --git a/docs/man/mlogin.md b/docs/man/mlogin.md
index 11af393..317bec0 100644
--- a/docs/man/mlogin.md
+++ b/docs/man/mlogin.md
@@ -132,10 +132,10 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
-  In place of `--user`
+  In place of `--user`.
 
 `MANTA_KEY_ID`
   In place of `-k, --key`.
diff --git a/docs/man/mls.md b/docs/man/mls.md
index 663258f..d40ecef 100644
--- a/docs/man/mls.md
+++ b/docs/man/mls.md
@@ -78,7 +78,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/mmkdir.md b/docs/man/mmkdir.md
index c1cf545..6b5fe32 100644
--- a/docs/man/mmkdir.md
+++ b/docs/man/mmkdir.md
@@ -61,7 +61,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/mmpu.md b/docs/man/mmpu.md
new file mode 100644
index 0000000..1e02939
--- /dev/null
+++ b/docs/man/mmpu.md
@@ -0,0 +1,268 @@
+mmpu 1 "June 2017" Manta "Manta Commands"
+=======================================
+
+NAME
+----
+
+mmpu - manage manta multipart uploads
+
+SYNOPSIS
+--------
+
+`mmpu` [OPTION...] command [command-specific arguments]
+
+DESCRIPTION
+-----------
+
+mmpu allows you to interact with Manta's multipart upload API. The multipart
+upload API allows you to upload an object to Manta in chunks, or "parts",
+instead of through a single PUT request.  After all parts have been uploaded,
+you can "commit" your multipart upload, exposing your uploaded object as a
+single file in Manta.  Using mmpu, you can create multipart uploads, upload
+parts to them, and commit or "abort" (cancel) them. You may also list
+non-garbage collected uploads and see uploaded parts for a given MPU.
+
+The primary reference for a multipart upload is its UUID.  Most commands operate
+on multipart uploads by UUID.  Parts of a given upload are usually referenced by
+their part number (beginning with the first part at 0).
+
+The final object created by a committed multipart upload is referred to as the
+"target object" of the multipart upload.  Additionally, a multipart upload is
+often referred to as an "MPU" or just an "upload".
+
+COMMON OPTIONS
+--------------
+
+The following options are supported in all commands:
+
+`-a, --account login`
+  Authenticate as account (login name).
+
+`-h, --help`
+  Print a help message and exit.
+
+`-i, --insecure`
+  This option explicitly allows "insecure" SSL connections and transfers.  All
+  SSL connections are attempted to be made secure by using the CA certificate
+  bundle installed by default.
+
+`-k, --key fingerprint`
+  Authenticate using the SSH key described by `fingerprint`.  The key must
+  either be in `~/.ssh` or loaded in the SSH agent via `ssh-add`.
+
+`--role=ROLE,ROLE,...`
+  Specify which roles to assume for the request.
+
+`--user user`
+  Authenticate as user under account.
+
+`-u, --url url`
+  Manta base URL (such as `https://manta.us-east.joyent.com`).
+
+`-v, --verbose`
+  Print debug output to stderr.  Repeat option to increase verbosity.
+
+COMMANDS
+--------
+
+The following commands and options are supported:
+
+### create [OPTIONS...] PATH ###
+
+Creates a multipart upload, that, when committed, will be exposed as a Manta
+object at PATH.  When this command completes successfully, it prints a
+multipart upload UUID to stdout.  You should save this UUID for use in other
+commands.
+
+For example, if you wanted to create a multipart upload for which the target
+object will be stored at ~~/stor/foo.txt, you would run:
+
+    $ mmpu create ~~/stor/foo.txt
+
+Since objects created through the multipart upload API should be
+indistinguishable from objects created through a normal Manta PUT, the `create`
+command supports similar options that you might use for `mput`.  For example,
+to create a multipart upload that has 3 copies of the target object, and stores
+some additional headers on the target object metadata, you would run:
+
+    $ mmpu create ~~/stor/foo.txt -c 3 -H 'content-type: text/plain' \
+                                       -H 'access-control-allow-origin: *'
+
+You may also add additional data integrity checks that will be validated
+for your target object when you commit your upload.  For example, if you want
+to verify that your target object ~~/stor/foo.txt is 15728640 bytes and has
+the content-md5 value "FLFyNOI3UFQhtkkrjXV1Bw==", you would run:
+
+    $ mmpu create ~~/stor/foo.txt -s 15728650 \
+                                  -m 'FLFyNOI3UFQhtkkrjXV1Bw=='
+
+The following options are supported on `create`:
+
+`-c, --copies num_copies`
+  Specify the number of copies of the target object to store.
+
+`-H, --header header`
+  Specify an HTTP header to store in the target object's metadata.  As with all
+  Manta objects, you may store up to 4 KB of headers on the target object.
+
+`-m, --md5 md5`
+  Validate the `content-md5` of the target object against the given md5 string.
+  If the MD5 of the target object differs from the provided MD5 when the object
+  is committed, the commit will fail.
+
+  Note that the behavior of this option differs from the similar option for
+  `mput`.
+
+`-s, --size size`
+  Validate the size of the target object against `size`.  If the size of the
+  target object differs from this size when the object is committed, the commit
+  will fail.
+
+### upload [-f file] [OPTIONS...] MPU PART_NUM ###
+
+Uploads the contents of stdin, or from the file specified with `-f`, to the
+specified part for a given upload.
+
+Note that parts are zero-indexed.  For example, if you wanted to upload the
+first part of upload be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d, and the part's
+contents are stored locally at ./part0.txt, you could run the following
+equivalent commands:
+
+    $ cat part0.txt | mmpu upload be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d 0
+
+Or:
+
+    $ mmpu upload -f part0.txt be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d 0
+
+When this command completes successfully, it prints the etag of the part
+that was uploaded to stdout.  You should save this etag to use when committing
+the upload.
+
+The following options are supported on `upload`:
+
+`-f, --file file`
+  Upload the contents of `file` as the part, instead of the contents of stdin.
+
+`--progress`
+  Force the progress bar to draw, even when stderr is redirected.
+
+`-q, --quiet`
+  Do not display a progress meter.
+
+### commit MPU [ETAG...] ###
+
+Commits a given upload with the parts specified.  The parts are represented by
+their position in the argument list, which indicates their part number (with
+part 0 being the first argument after the upload ID, the second part the next
+argument after that, and so on), and their contents are represented by their
+etag.  If the etag provided for a part does not match the etag of the part when
+the commit process fetches its metadata, an error will be returned.
+
+For example, if you want to commit an upload with id
+be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d and the following parts:
+    part 0: etag f14a41dc-7d28-6fdb-e07c-d54c0adcdf35
+    part 1: etag e2893e52-9ba3-64fe-eec9-b4663835ad01
+    part 2: etag 73b44fa7-fbd3-efea-b7d0-cd8098e1d928
+
+You would run:
+    $ mmpu commit be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d \
+                  f14a41dc-7d28-6fdb-e07c-d54c0adcdf35 \
+                  e2893e52-9ba3-64fe-eec9-b4663835ad01 \
+                  73b44fa7-fbd3-efea-b7d0-cd8098e1d928
+
+The multipart upload API does not require that you commit all parts uploaded,
+as long as zero or more consecutive parts are committed, and all parts meet
+part size restraints.  So the following commands committing the same upload as
+above are also valid, but would create a different target object than the
+first example.
+
+This command would commit a zero-byte target object:
+    $ mmpu commit be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d
+
+This would create an object consisting of only the first two parts:
+    $ mmpu commit be5f05d6-7daa-6869-d19b-c1f7fbcf6d8d \
+                  f14a41dc-7d28-6fdb-e07c-d54c0adcdf35 \
+                  e2893e52-9ba3-64fe-eec9-b4663835ad01
+
+Once the commit process has begun for a given MPU, it cannot be aborted, or
+committed with a different set of parts than it was initially committed with,
+but you may retry the commit if needed.
+
+To see the current status of an upload, use the `get` command.
+
+### abort MPU ###
+
+Aborts a multipart upload.
+
+Once an upload has begun aborting, it may not be committed, but you may retry
+the abort operation if needed.  To see the current status of an upload, use the
+`get` command.
+
+### get MPU ###
+
+Fetches a JSON blob information about an upload, including its status: created,
+finalizing, or done (committed or aborted).  A finalizing upload is one
+that began the process of being committed or aborted, but has not finished,
+either because the request is still in progress or because the request failed.
+
+### list ###
+
+Lists all multipart uploads for a user (note, this can also be done with a
+normal `mfind` call).  Note that these uploads may be in any state; their
+presence merely indicates they have not been garbage collected yet.
+
+If you wish to list all parts that have been uploaded as well, you can run:
+
+    $ mmpu list -p
+
+To see the parts of only one upload, you should use the `parts` command.
+
+The following options are supported on `list`:
+
+`-p, --includeParts`
+  List parts in additional to uploads.
+
+### parts MPU ###
+
+Lists all parts that have been uploaded to a given multipart upload.
+
+
+ENVIRONMENT
+-----------
+
+`MANTA_USER`
+  In place of `-a, --account`.
+
+`MANTA_SUBUSER`
+  In place of `--user`.
+
+`MANTA_KEY_ID`
+  In place of `-k, --key`.
+
+`MANTA_ROLE`
+  In place of `--role`.
+
+`MANTA_URL`
+  In place of `-u, --url`.
+
+`MANTA_TLS_INSECURE`
+  In place of `-i, --insecure`.
+
+The shortcut `~~` is equivalent to `/:login`
+where `:login` is the account login name.
+
+DIAGNOSTICS
+-----------
+
+When using the `-v` option, diagnostics will be sent to stderr in bunyan
+output format.  As an example of tracing all information about a request,
+try:
+
+    $ mmpu create -vv ~~/stor/foo 2>&1 | bunyan
+
+BUGS
+----
+
+DSA keys do not work when loaded via the SSH agent.
+
+Report bugs at [Github](https://github.com/joyent/node-manta/issues)
diff --git a/docs/man/mput.md b/docs/man/mput.md
index abf24b8..5088ba8 100644
--- a/docs/man/mput.md
+++ b/docs/man/mput.md
@@ -97,7 +97,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/mrm.md b/docs/man/mrm.md
index 6326f6c..0ee9411 100644
--- a/docs/man/mrm.md
+++ b/docs/man/mrm.md
@@ -63,7 +63,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/mrmdir.md b/docs/man/mrmdir.md
index 4e47ea8..d68e55d 100644
--- a/docs/man/mrmdir.md
+++ b/docs/man/mrmdir.md
@@ -55,7 +55,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/msign.md b/docs/man/msign.md
index 9a08f42..946ef0d 100644
--- a/docs/man/msign.md
+++ b/docs/man/msign.md
@@ -81,7 +81,7 @@ ENVIRONMENT
 -----------
 
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/docs/man/muntar.md b/docs/man/muntar.md
index c12e5af..23363ba 100644
--- a/docs/man/muntar.md
+++ b/docs/man/muntar.md
@@ -92,10 +92,10 @@ OPTIONS
   Print debug output to stderr.  Repeat option to increase verbosity.
 
 
-  ENVIRONMENT
+ENVIRONMENT
 -----------
 `MANTA_USER`
-  In place of `-a, --account`
+  In place of `-a, --account`.
 
 `MANTA_SUBUSER`
   In place of `--user`.
diff --git a/lib/client.js b/lib/client.js
index a029d1d..4a557c4 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -3312,28 +3312,34 @@ MantaClient.prototype.createUpload = function createUpload(p, opts, cb) {
     var url = uploadURL(opts.account, UPLOAD_OPS.CREATE);
     var objectPath = this.path(p);
 
+    var createOpts = jsprim.deepCopy(opts);
+    if (createOpts.headers) {
+        // We don't want headers for the target object to be interpreted as
+        // headers on the request, so we don't pass those to createOptions().
+        delete createOpts.headers;
+    }
+
     var options = createOptions({
         accept: 'application/json',
         contentType: 'application/json',
         path: url
-    }, opts);
+    }, createOpts);
 
-    // Headers to store with the object (not sent as headers on the request)
-    var headers = {};
+    var targetObjectHeaders = {};
     if (opts.headers) {
-        headers = jsprim.deepCopy(opts.headers);
+        targetObjectHeaders = jsprim.deepCopy(opts.headers);
     }
 
     if (opts.copies) {
-        headers['durability-level'] = opts.copies;
+        targetObjectHeaders['durability-level'] = opts.copies;
     }
 
     if (opts.size) {
-        headers['content-length'] = opts.size;
+        targetObjectHeaders['content-length'] = opts.size;
     }
 
     if (opts.md5) {
-        headers['content-md5'] = opts.md5;
+        targetObjectHeaders['content-md5'] = opts.md5;
     }
 
     var log = this.log.child({
@@ -3356,7 +3362,7 @@ MantaClient.prototype.createUpload = function createUpload(p, opts, cb) {
 
         var body = {
             objectPath: objectPath,
-            headers: headers
+            headers: targetObjectHeaders
         };
 
         self.jsonClient.post(options, body, function (err2, req, res, obj) {
diff --git a/man/man1/mchattr.1 b/man/man1/mchattr.1
index 099b2c6..a3e4f78 100644
--- a/man/man1/mchattr.1
+++ b/man/man1/mchattr.1
@@ -55,7 +55,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
@@ -89,5 +89,4 @@ $ mchattr \-v ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mchmod.1 b/man/man1/mchmod.1
index 29b384b..e90e298 100644
--- a/man/man1/mchmod.1
+++ b/man/man1/mchmod.1
@@ -55,7 +55,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
diff --git a/man/man1/mfind.1 b/man/man1/mfind.1
index 8be9b73..d288812 100644
--- a/man/man1/mfind.1
+++ b/man/man1/mfind.1
@@ -93,7 +93,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
diff --git a/man/man1/mget.1 b/man/man1/mget.1
index 994adcd..74c2eec 100644
--- a/man/man1/mget.1
+++ b/man/man1/mget.1
@@ -89,7 +89,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
@@ -123,5 +123,4 @@ $ mget \-vv ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/minfo.1 b/man/man1/minfo.1
index 0bbcd27..625af70 100644
--- a/man/man1/minfo.1
+++ b/man/man1/minfo.1
@@ -53,10 +53,10 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
-In place of \fB\fC\-\-user\fR
+In place of \fB\fC\-\-user\fR\&.
 .TP
 \fB\fCMANTA_KEY_ID\fR
 In place of \fB\fC\-k, \-\-key\fR\&.
@@ -87,5 +87,4 @@ $ minfo \-vv ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mjob.1 b/man/man1/mjob.1
index e44666d..aed8749 100644
--- a/man/man1/mjob.1
+++ b/man/man1/mjob.1
@@ -345,10 +345,10 @@ Do not output any informative messages.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
-In place of \fB\fC\-\-user\fR
+In place of \fB\fC\-\-user\fR\&.
 .TP
 \fB\fCMANTA_KEY_ID\fR
 In place of \fB\fC\-k, \-\-key\fR\&.
diff --git a/man/man1/mln.1 b/man/man1/mln.1
index 0eff428..a6771f0 100644
--- a/man/man1/mln.1
+++ b/man/man1/mln.1
@@ -55,10 +55,10 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
-In place of \fB\fC\-\-user\fR
+In place of \fB\fC\-\-user\fR\&.
 .TP
 \fB\fCMANTA_KEY_ID\fR
 In place of \fB\fC\-k, \-\-key\fR\&.
@@ -89,5 +89,4 @@ $ mln \-vv ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mlogin.1 b/man/man1/mlogin.1
index 85eb62f..74d5eb4 100644
--- a/man/man1/mlogin.1
+++ b/man/man1/mlogin.1
@@ -127,10 +127,10 @@ Don't print session establishment status messages.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
-In place of \fB\fC\-\-user\fR
+In place of \fB\fC\-\-user\fR\&.
 .TP
 \fB\fCMANTA_KEY_ID\fR
 In place of \fB\fC\-k, \-\-key\fR\&.
@@ -150,5 +150,4 @@ where \fB\fC:login\fR is the account login name.
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mls.1 b/man/man1/mls.1
index 431918e..d164339 100644
--- a/man/man1/mls.1
+++ b/man/man1/mls.1
@@ -69,7 +69,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
@@ -103,5 +103,4 @@ $ mls \-vv ~~/stor 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mmkdir.1 b/man/man1/mmkdir.1
index b57b029..2a284d2 100644
--- a/man/man1/mmkdir.1
+++ b/man/man1/mmkdir.1
@@ -54,7 +54,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
@@ -88,5 +88,4 @@ $ mmkdir \-vv ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mmpu.1 b/man/man1/mmpu.1
new file mode 100644
index 0000000..cdac9de
--- /dev/null
+++ b/man/man1/mmpu.1
@@ -0,0 +1,271 @@
+.TH mmpu 1 "June 2017" Manta "Manta Commands"
+.SH NAME
+.PP
+mmpu \- manage manta multipart uploads
+.SH SYNOPSIS
+.PP
+\fB\fCmmpu\fR [OPTION...] command [command\-specific arguments]
+.SH DESCRIPTION
+.PP
+mmpu allows you to interact with Manta's multipart upload API. The multipart
+upload API allows you to upload an object to Manta in chunks, or "parts",
+instead of through a single PUT request.  After all parts have been uploaded,
+you can "commit" your multipart upload, exposing your uploaded object as a
+single file in Manta.  Using mmpu, you can create multipart uploads, upload
+parts to them, and commit or "abort" (cancel) them. You may also list
+non\-garbage collected uploads and see uploaded parts for a given MPU.
+.PP
+The primary reference for a multipart upload is its UUID.  Most commands operate
+on multipart uploads by UUID.  Parts of a given upload are usually referenced by
+their part number (beginning with the first part at 0).
+.PP
+The final object created by a committed multipart upload is referred to as the
+"target object" of the multipart upload.  Additionally, a multipart upload is
+often referred to as an "MPU" or just an "upload".
+.SH COMMON OPTIONS
+.PP
+The following options are supported in all commands:
+.TP
+\fB\fC\-a, \-\-account login\fR
+Authenticate as account (login name).
+.TP
+\fB\fC\-h, \-\-help\fR
+Print a help message and exit.
+.TP
+\fB\fC\-i, \-\-insecure\fR
+This option explicitly allows "insecure" SSL connections and transfers.  All
+SSL connections are attempted to be made secure by using the CA certificate
+bundle installed by default.
+.TP
+\fB\fC\-k, \-\-key fingerprint\fR
+Authenticate using the SSH key described by \fB\fCfingerprint\fR\&.  The key must
+either be in \fB\fC~/.ssh\fR or loaded in the SSH agent via \fB\fCssh\-add\fR\&.
+.TP
+\fB\fC\-\-role=ROLE,ROLE,...\fR
+Specify which roles to assume for the request.
+.TP
+\fB\fC\-\-user user\fR
+Authenticate as user under account.
+.TP
+\fB\fC\-u, \-\-url url\fR
+Manta base URL (such as \fB\fChttps://manta.us\-east.joyent.com\fR).
+.TP
+\fB\fC\-v, \-\-verbose\fR
+Print debug output to stderr.  Repeat option to increase verbosity.
+.SH COMMANDS
+.PP
+The following commands and options are supported:
+.SS create [OPTIONS...] PATH
+.PP
+Creates a multipart upload, that, when committed, will be exposed as a Manta
+object at PATH.  When this command completes successfully, it prints a
+multipart upload UUID to stdout.  You should save this UUID for use in other
+commands.
+.PP
+For example, if you wanted to create a multipart upload for which the target
+object will be stored at ~~/stor/foo.txt, you would run:
+.PP
+.RS
+.nf
+$ mmpu create ~~/stor/foo.txt
+.fi
+.RE
+.PP
+Since objects created through the multipart upload API should be
+indistinguishable from objects created through a normal Manta PUT, the \fB\fCcreate\fR
+command supports similar options that you might use for \fB\fCmput\fR\&.  For example,
+to create a multipart upload that has 3 copies of the target object, and stores
+some additional headers on the target object metadata, you would run:
+.PP
+.RS
+.nf
+$ mmpu create ~~/stor/foo.txt \-c 3 \-H 'content\-type: text/plain' \\
+                                   \-H 'access\-control\-allow\-origin: *'
+.fi
+.RE
+.PP
+You may also add additional data integrity checks that will be validated
+for your target object when you commit your upload.  For example, if you want
+to verify that your target object ~~/stor/foo.txt is 15728640 bytes and has
+the content\-md5 value "FLFyNOI3UFQhtkkrjXV1Bw==", you would run:
+.PP
+.RS
+.nf
+$ mmpu create ~~/stor/foo.txt \-s 15728650 \\
+                              \-m 'FLFyNOI3UFQhtkkrjXV1Bw=='
+.fi
+.RE
+.PP
+The following options are supported on \fB\fCcreate\fR:
+.TP
+\fB\fC\-c, \-\-copies num_copies\fR
+Specify the number of copies of the target object to store.
+.TP
+\fB\fC\-H, \-\-header header\fR
+Specify an HTTP header to store in the target object's metadata.  As with all
+Manta objects, you may store up to 4 KB of headers on the target object.
+.TP
+\fB\fC\-m, \-\-md5 md5\fR
+Validate the \fB\fCcontent\-md5\fR of the target object against the given md5 string.
+If the MD5 of the target object differs from the provided MD5 when the object
+is committed, the commit will fail.
+.IP
+Note that the behavior of this option differs from the similar option for
+\fB\fCmput\fR\&.
+.TP
+\fB\fC\-s, \-\-size size\fR
+Validate the size of the target object against \fB\fCsize\fR\&.  If the size of the
+target object differs from this size when the object is committed, the commit
+will fail.
+.SS upload [\-f file] [OPTIONS...] MPU PART_NUM
+.PP
+Uploads the contents of stdin, or from the file specified with \fB\fC\-f\fR, to the
+specified part for a given upload.
+.PP
+Note that parts are zero\-indexed.  For example, if you wanted to upload the
+first part of upload be5f05d6\-7daa\-6869\-d19b\-c1f7fbcf6d8d, and the part's
+contents are stored locally at ./part0.txt, you could run the following
+equivalent commands:
+.PP
+.RS
+.nf
+$ cat part0.txt | mmpu upload be5f05d6\-7daa\-6869\-d19b\-c1f7fbcf6d8d 0
+.fi
+.RE
+.PP
+Or:
+.PP
+.RS
+.nf
+$ mmpu upload \-f part0.txt be5f05d6\-7daa\-6869\-d19b\-c1f7fbcf6d8d 0
+.fi
+.RE
+.PP
+When this command completes successfully, it prints the etag of the part
+that was uploaded to stdout.  You should save this etag to use when committing
+the upload.
+.PP
+The following options are supported on \fB\fCupload\fR:
+.TP
+\fB\fC\-f, \-\-file file\fR
+Upload the contents of \fB\fCfile\fR as the part, instead of the contents of stdin.
+.TP
+\fB\fC\-\-progress\fR
+Force the progress bar to draw, even when stderr is redirected.
+.TP
+\fB\fC\-q, \-\-quiet\fR
+Do not display a progress meter.
+.SS commit MPU [ETAG...]
+.PP
+Commits a given upload with the parts specified.  The parts are represented by
+their position in the argument list, which indicates their part number (with
+part 0 being the first argument after the upload ID, the second part the next
+argument after that, and so on), and their contents are represented by their
+etag.  If the etag provided for a part does not match the etag of the part when
+the commit process fetches its metadata, an error will be returned.
+.PP
+For example, if you want to commit an upload with id
+be5f05d6\-7daa\-6869\-d19b\-c1f7fbcf6d8d and the following parts:
+    part 0: etag f14a41dc\-7d28\-6fdb\-e07c\-d54c0adcdf35
+    part 1: etag e2893e52\-9ba3\-64fe\-eec9\-b4663835ad01
+    part 2: etag 73b44fa7\-fbd3\-efea\-b7d0\-cd8098e1d928
+.PP
+You would run:
+    $ mmpu commit be5f05d6\-7daa\-6869\-d19b\-c1f7fbcf6d8d \[rs]
+                  f14a41dc\-7d28\-6fdb\-e07c\-d54c0adcdf35 \[rs]
+                  e2893e52\-9ba3\-64fe\-eec9\-b4663835ad01 \[rs]
+                  73b44fa7\-fbd3\-efea\-b7d0\-cd8098e1d928
+.PP
+The multipart upload API does not require that you commit all parts uploaded,
+as long as zero or more consecutive parts are committed, and all parts meet
+part size restraints.  So the following commands committing the same upload as
+above are also valid, but would create a different target object than the
+first example.
+.PP
+This command would commit a zero\-byte target object:
+    $ mmpu commit be5f05d6\-7daa\-6869\-d19b\-c1f7fbcf6d8d
+.PP
+This would create an object consisting of only the first two parts:
+    $ mmpu commit be5f05d6\-7daa\-6869\-d19b\-c1f7fbcf6d8d \[rs]
+                  f14a41dc\-7d28\-6fdb\-e07c\-d54c0adcdf35 \[rs]
+                  e2893e52\-9ba3\-64fe\-eec9\-b4663835ad01
+.PP
+Once the commit process has begun for a given MPU, it cannot be aborted, or
+committed with a different set of parts than it was initially committed with,
+but you may retry the commit if needed.
+.PP
+To see the current status of an upload, use the \fB\fCget\fR command.
+.SS abort MPU
+.PP
+Aborts a multipart upload.
+.PP
+Once an upload has begun aborting, it may not be committed, but you may retry
+the abort operation if needed.  To see the current status of an upload, use the
+\fB\fCget\fR command.
+.SS get MPU
+.PP
+Fetches a JSON blob information about an upload, including its status: created,
+finalizing, or done (committed or aborted).  A finalizing upload is one
+that began the process of being committed or aborted, but has not finished,
+either because the request is still in progress or because the request failed.
+.SS list
+.PP
+Lists all multipart uploads for a user (note, this can also be done with a
+normal \fB\fCmfind\fR call).  Note that these uploads may be in any state; their
+presence merely indicates they have not been garbage collected yet.
+.PP
+If you wish to list all parts that have been uploaded as well, you can run:
+.PP
+.RS
+.nf
+$ mmpu list \-p
+.fi
+.RE
+.PP
+To see the parts of only one upload, you should use the \fB\fCparts\fR command.
+.PP
+The following options are supported on \fB\fClist\fR:
+.TP
+\fB\fC\-p, \-\-includeParts\fR
+List parts in additional to uploads.
+.SS parts MPU
+.PP
+Lists all parts that have been uploaded to a given multipart upload.
+.SH ENVIRONMENT
+.TP
+\fB\fCMANTA_USER\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
+.TP
+\fB\fCMANTA_SUBUSER\fR
+In place of \fB\fC\-\-user\fR\&.
+.TP
+\fB\fCMANTA_KEY_ID\fR
+In place of \fB\fC\-k, \-\-key\fR\&.
+.TP
+\fB\fCMANTA_ROLE\fR
+In place of \fB\fC\-\-role\fR\&.
+.TP
+\fB\fCMANTA_URL\fR
+In place of \fB\fC\-u, \-\-url\fR\&.
+.TP
+\fB\fCMANTA_TLS_INSECURE\fR
+In place of \fB\fC\-i, \-\-insecure\fR\&.
+.PP
+The shortcut \fB\fC~~\fR is equivalent to \fB\fC/:login\fR
+where \fB\fC:login\fR is the account login name.
+.SH DIAGNOSTICS
+.PP
+When using the \fB\fC\-v\fR option, diagnostics will be sent to stderr in bunyan
+output format.  As an example of tracing all information about a request,
+try:
+.PP
+.RS
+.nf
+$ mmpu create \-vv ~~/stor/foo 2>&1 | bunyan
+.fi
+.RE
+.SH BUGS
+.PP
+DSA keys do not work when loaded via the SSH agent.
+.PP
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mput.1 b/man/man1/mput.1
index d05265a..2c93436 100644
--- a/man/man1/mput.1
+++ b/man/man1/mput.1
@@ -96,7 +96,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
diff --git a/man/man1/mrm.1 b/man/man1/mrm.1
index c2cdbb9..dc0a994 100644
--- a/man/man1/mrm.1
+++ b/man/man1/mrm.1
@@ -54,7 +54,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
diff --git a/man/man1/mrmdir.1 b/man/man1/mrmdir.1
index 289947e..81651b2 100644
--- a/man/man1/mrmdir.1
+++ b/man/man1/mrmdir.1
@@ -46,7 +46,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
@@ -80,5 +80,4 @@ $ mrmdir \-vv ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/msign.1 b/man/man1/msign.1
index b075369..a8d9b72 100644
--- a/man/man1/msign.1
+++ b/man/man1/msign.1
@@ -75,7 +75,7 @@ Print debug output to stderr.  Repeat option to increase verbosity.
 .SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
@@ -109,5 +109,4 @@ $ msign \-vv ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/muntar.1 b/man/man1/muntar.1
index fc49feb..eb4b76c 100644
--- a/man/man1/muntar.1
+++ b/man/man1/muntar.1
@@ -83,10 +83,10 @@ Manta base URL (such as \fB\fChttps://manta.us\-east.joyent.com\fR).
 .TP
 \fB\fC\-v, \-\-verbose\fR
 Print debug output to stderr.  Repeat option to increase verbosity.
-.SH   ENVIRONMENT
+.SH ENVIRONMENT
 .TP
 \fB\fCMANTA_USER\fR
-In place of \fB\fC\-a, \-\-account\fR
+In place of \fB\fC\-a, \-\-account\fR\&.
 .TP
 \fB\fCMANTA_SUBUSER\fR
 In place of \fB\fC\-\-user\fR\&.
diff --git a/package.json b/package.json
index d35566f..6e072ff 100644
--- a/package.json
+++ b/package.json
@@ -7,7 +7,7 @@
         "type": "git",
         "url": "git://github.com/joyent/node-manta.git"
     },
-    "version": "4.4.0",
+    "version": "4.4.1",
     "main": "./lib/index.js",
     "dependencies": {
         "assert-plus": "^1.0.0",
diff --git a/test/client.test.js b/test/client.test.js
index 29fd7d6..1eb783e 100644
--- a/test/client.test.js
+++ b/test/client.test.js
@@ -7,9 +7,10 @@ var crypto = require('crypto');
 var fs = require('fs');
 var path = require('path');
 
+var bunyan = require('bunyan');
+var jsprim = require('jsprim');
 var libuuid = require('uuid');
 var MemoryStream = require('readable-stream/passthrough.js');
-var bunyan = require('bunyan');
 
 var logging = require('./lib/logging');
 var manta = require('../lib');
@@ -35,6 +36,7 @@ var UPLOAD1; // committed upload
 var UPLOAD2; // aborted upload
 var PATH1 = ROOT + '/committed-obj';
 var PATH2 = ROOT + '/aborted-obj';
+var PATH3 = ROOT + '/#311-test';
 var ETAGS1 = [];
 
 var SUBDIR1_NOBJECTS = 1;
@@ -733,6 +735,11 @@ test('create upload', function (t) {
 
     this.client.createUpload(PATH1, opts, function (err, obj) {
         t.ifError(err);
+        if (err) {
+            t.done();
+            return;
+        }
+
         t.ok(obj);
         t.ok(obj.id);
         UPLOAD1 = obj.id;
@@ -753,6 +760,11 @@ test('upload part', function (t) {
     var pn = 0;
     this.client.uploadPart(stream, UPLOAD1, pn, opts, function (err, res) {
         t.ifError(err);
+        if (err) {
+            t.done();
+            return;
+        }
+
         t.ok(res);
         t.ok(res.headers && res.headers.etag);
         ETAGS1[pn] = res.headers.etag;
@@ -772,6 +784,11 @@ test('get upload', function (t) {
 
     this.client.getUpload(UPLOAD1, opts, function (err, upload) {
         t.ifError(err);
+        if (err) {
+            t.done();
+            return;
+        }
+
         t.ok(upload);
         t.equal(upload.id, UPLOAD1);
         t.equal(upload.state, 'created');
@@ -787,8 +804,16 @@ test('commit upload', function (t) {
     var self = this;
     self.client.commitUpload(UPLOAD1, ETAGS1, opts, function (err) {
         t.ifError(err);
+        if (err) {
+            t.done();
+            return;
+        }
         self.client.getUpload(UPLOAD1, opts, function (err2, upload) {
             t.ifError(err2);
+            if (err2) {
+                t.done();
+                return;
+            }
             t.ok(upload);
             t.equal(upload.id, UPLOAD1);
             t.equal(upload.state, 'done');
@@ -796,6 +821,10 @@ test('commit upload', function (t) {
 
             self.client.get(PATH1, function (err3, stream) {
                 t.ifError(err3);
+                if (err3) {
+                    t.done();
+                    return;
+                }
 
                 var text = 'The lazy brown fox \nsomething \nsomething foo';
                 var data = '';
@@ -808,6 +837,10 @@ test('commit upload', function (t) {
 
                     self.client.unlink(PATH1, opts, function (err4) {
                         t.ifError(err4);
+                        if (err4) {
+                            t.done();
+                            return;
+                        }
                         t.done();
                     });
                 });
@@ -824,14 +857,27 @@ test('abort upload', function (t) {
     var self = this;
     this.client.createUpload(PATH2, opts, function (err, obj) {
         t.ifError(err);
+        if (err) {
+            t.done();
+            return;
+        }
+
         t.ok(obj);
         t.ok(obj.id);
         UPLOAD2 = obj.id;
 
         self.client.abortUpload(UPLOAD2, opts, function (err2) {
             t.ifError(err2);
+            if (err2) {
+                t.done();
+                return;
+            }
             self.client.getUpload(UPLOAD2, opts, function (err3, upload) {
                 t.ifError(err3);
+                if (err3) {
+                    t.done();
+                    return;
+                }
                 t.ok(upload);
                 t.equal(upload.id, UPLOAD2);
                 t.equal(upload.state, 'done');
@@ -843,6 +889,71 @@ test('abort upload', function (t) {
     });
 });
 
+test('#311: create upload with special headers', function (t) {
+    /*
+     * Test adding some headers to the target object that are also parsed by
+     * the Manta client, to ensure the headers for the target object are sent
+     * in the body of the `mpu-create` request, not as headers on the request
+     * itself.
+     */
+    var headers = {
+        'accept':  'acceptstring',
+        'role': 'rolestring',
+        'content-length': 10,
+        'content-md5': 'md5string',
+        'content-type': 'text/plain',
+        'expect': '100-continue',
+        'location': 'locationstring',
+        'x-request-id': 'requestidstring'
+    };
+
+    var self = this;
+    var createOpts = {
+        account: self.client.user,
+        headers: headers
+    };
+
+    self.client.createUpload(PATH3, createOpts, function (err, obj) {
+        t.ifError(err);
+        if (err) {
+            t.done();
+            return;
+        }
+
+        t.ok(obj);
+        t.ok(obj.id);
+        var id = obj.id;
+
+        var getOpts = {
+            account: self.client.user
+        };
+        self.client.getUpload(id, getOpts, function (err2, upload) {
+            t.ifError(err2);
+            if (err2) {
+                t.done();
+                return;
+            }
+
+            t.ok(upload);
+            t.equal(upload.id, id);
+            t.ok(upload.headers);
+            t.ok(jsprim.deepEqual(headers, upload.headers));
+
+            var abortOpts = {
+                account: self.client.user
+            };
+            self.client.abortUpload(id, abortOpts, function (err3) {
+                t.ifError(err3);
+                if (err3) {
+                    t.done();
+                    return;
+                }
+                t.done();
+            });
+        });
+    });
+});
+
 
 test('GH-196 getPath ~~/', function (t) {
     // confirm that evaluating ~~/ works with and without ENV variables
diff --git a/test/mmpu.test.js b/test/mmpu.test.js
index c5be2e5..1eaf674 100644
--- a/test/mmpu.test.js
+++ b/test/mmpu.test.js
@@ -121,12 +121,12 @@ test('mmpu get C_ID', function (t) {
             }
 
             var headers = upload.headers;
+            t.ok(headers);
             if (!headers) {
                 t.done();
                 return;
             }
 
-            t.ok(headers);
             t.equal(headers['durability-level'], 1);
             t.equal(headers['content-length'], TEXT_SIZE);
             t.equal(headers['content-md5'], TEXT_MD5);
-- 
2.21.0

