commit 2213d82e2c8b1e32dfd1424c91ffda7c55c85d48
Author: Kelly McLaughlin <kelly.mclaughlin@joyent.com>
Date:   2019-06-24T08:18:56-06:00 (4 months ago)
    
    MANTA-4367 Request id not passed along to electric-boray for buckets requests

diff --git a/lib/server.js b/lib/server.js
index 01b9ec3..1b08c4c 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -34,12 +34,14 @@ var BORAY_LIMIT = 1000;
 
 var CB_ARGS_SCHEMA = [
     { name: 'owner', type: 'string' },
-    { name: 'name', type: 'string' }
+    { name: 'name', type: 'string' },
+    { name: 'request_id', type: 'string' }
 ];
 
 var DB_ARGS_SCHEMA = [
     { name: 'owner', type: 'string' },
-    { name: 'name', type: 'string' }
+    { name: 'name', type: 'string' },
+    { name: 'request_id', type: 'string' }
 ];
 
 var LB_ARGS_SCHEMA = [
@@ -47,18 +49,21 @@ var LB_ARGS_SCHEMA = [
     { name: 'sorted', type: 'boolean' },
     { name: 'order_by', type: 'string' },
     { name: 'prefix', type: 'string' },
-    { name: 'limit', type: 'number' }
+    { name: 'limit', type: 'number' },
+    { name: 'request_id', type: 'string' }
 ];
 
 var GB_ARGS_SCHEMA = [
     { name: 'owner', type: 'string' },
-    { name: 'name', type: 'string' }
+    { name: 'name', type: 'string' },
+    { name: 'request_id', type: 'string' }
 ];
 
 var GO_ARGS_SCHEMA = [
     { name: 'owner', type: 'string' },
     { name: 'bucket_id', type: 'string' },
-    { name: 'name', type: 'string' }
+    { name: 'name', type: 'string' },
+    { name: 'request_id', type: 'string' }
 ];
 
 var CO_ARGS_SCHEMA = [
@@ -71,7 +76,8 @@ var CO_ARGS_SCHEMA = [
     { name: 'content_type', type: 'string' },
     { name: 'headers', type: 'object' },
     { name: 'sharks', type: 'object' },
-    { name: 'properties', type: 'object' }
+    { name: 'properties', type: 'object' },
+    { name: 'request_id', type: 'string' }
 ];
 
 var UO_ARGS_SCHEMA = [
@@ -81,7 +87,8 @@ var UO_ARGS_SCHEMA = [
     { name: 'object_id', type: 'string' },
     { name: 'content_type', type: 'string' },
     { name: 'headers', type: 'object' },
-    { name: 'properties', type: 'object' }
+    { name: 'properties', type: 'object' },
+    { name: 'request_id', type: 'string' }
 ];
 
 var LO_ARGS_SCHEMA = [
@@ -90,7 +97,8 @@ var LO_ARGS_SCHEMA = [
     { name: 'sorted', type: 'boolean' },
     { name: 'order_by', type: 'string' },
     { name: 'prefix', type: 'string' },
-    { name: 'limit', type: 'number' }
+    { name: 'limit', type: 'number' },
+    { name: 'request_id', type: 'string' }
 ];
 
 util.inherits(LimitOffsetStream, events.EventEmitter);
@@ -447,8 +455,7 @@ function createBucket(options) {
 
         var owner = argv[0];
         var bucket = argv[1];
-
-        var id = options.req_id || uuid.v1();
+        var id = argv[2];
 
         dtrace['createbucket-start'].fire(function () {
             return ([msgid, id, owner, bucket]);
@@ -477,7 +484,8 @@ function createBucket(options) {
 
             log.info('client: ' + client);
 
-            client.createBucket(owner, bucket, vnode, function (pErr, meta) {
+            client.createBucket(owner, bucket, vnode, id,
+                function (pErr, meta) {
                 log.debug({
                     err: pErr,
                     meta: meta
@@ -519,8 +527,7 @@ function getBucket(options) {
 
         var owner = argv[0];
         var bucket = argv[1];
-
-        var id = options.req_id || uuid.v1();
+        var id = argv[2];
 
         dtrace['getbucket-start'].fire(function () {
             return ([msgid, id, owner, bucket]);
@@ -545,7 +552,7 @@ function getBucket(options) {
             var vnode = location.vnode;
             var pnode = location.pnode;
 
-            options.clients.map[pnode].getBucket(owner, bucket, vnode,
+            options.clients.map[pnode].getBucket(owner, bucket, vnode, id,
                 function (gErr, rbucket) {
                 log.debug({
                     err: gErr,
@@ -592,8 +599,7 @@ function deleteBucket(options) {
 
         var owner = argv[0];
         var bucket = argv[1];
-
-        var id = options.req_id || uuid.v1();
+        var id = argv[2];
 
         dtrace['deletebucket-start'].fire(function () {
             return ([msgid, id, owner, bucket]);
@@ -618,7 +624,7 @@ function deleteBucket(options) {
             var vnode = location.vnode;
             var pnode = location.pnode;
 
-            options.clients.map[pnode].deleteBucket(owner, bucket, vnode,
+            options.clients.map[pnode].deleteBucket(owner, bucket, vnode, id,
                 function (gErr, rbucket) {
                 log.debug({
                     err: gErr,
@@ -672,7 +678,7 @@ function listBuckets(options) {
             limit = Infinity;
         }
 
-        var id = options.req_id || uuid.v1();
+        var id = argv[5];
 
         dtrace['listbuckets-start'].fire(function () {
             return ([msgid, id, owner, sorted, order_by, prefix, limit]);
@@ -712,7 +718,7 @@ function listBuckets(options) {
                     log: log.child({vnode: node.vnode}),
                     getStream: function (offset, _limit) {
                         return client.listBuckets(owner, order_by,
-                            prefix, _limit, offset, node.vnode);
+                            prefix, _limit, offset, node.vnode, id);
                     }
                 }),
                 record: null
@@ -802,8 +808,7 @@ function createObject(options) {
         var headers = argv[7];
         var sharks = argv[8];
         var props = argv[9];
-
-        var id = options.req_id || uuid.v1();
+        var id = argv[10];
 
         dtrace['createobject-start'].fire(function () {
             return ([msgid, id, owner, bucket, key]);
@@ -838,7 +843,7 @@ function createObject(options) {
             }
 
             client.createObject(owner, bucket, key, object_id, content_length,
-                content_md5, content_type, headers, sharks, props, vnode,
+                content_md5, content_type, headers, sharks, props, vnode, id,
                 function (pErr, meta) {
                 log.debug({
                     err: pErr,
@@ -886,8 +891,7 @@ function updateObject(options) {
         var content_type = argv[4];
         var headers = argv[5];
         var props = argv[6];
-
-        var id = options.req_id || uuid.v1();
+        var id = argv[7];
 
         dtrace['updateobject-start'].fire(function () {
             return ([msgid, id, owner, bucket, key]);
@@ -922,7 +926,7 @@ function updateObject(options) {
             }
 
             client.updateObject(owner, bucket, key, object_id, content_type,
-                headers, props, vnode, function (pErr, obj) {
+                headers, props, vnode, id, function (pErr, obj) {
 
                 log.debug({
                     err: pErr,
@@ -966,8 +970,7 @@ function getObject(options) {
         var owner = argv[0];
         var bucket = argv[1];
         var key = argv[2];
-
-        var id = options.req_id || uuid.v1();
+        var id = argv[3];
 
         dtrace['getobject-start'].fire(function () {
             return ([msgid, id, owner, bucket, key]);
@@ -995,7 +998,8 @@ function getObject(options) {
             var vnode = location.vnode;
             var client = options.clients.map[pnode];
 
-            client.getObject(owner, bucket, key, vnode, function (gErr, obj) {
+            client.getObject(owner, bucket, key, vnode, id,
+                function (gErr, obj) {
                 log.debug({
                     err: gErr,
                     obj: obj
@@ -1043,8 +1047,7 @@ function deleteObject(options) {
         var owner = argv[0];
         var bucket = argv[1];
         var key = argv[2];
-
-        var id = options.req_id || uuid.v1();
+        var id = argv[3];
 
         dtrace['deleteobject-start'].fire(function () {
             return ([msgid, id, owner, bucket, key]);
@@ -1072,7 +1075,7 @@ function deleteObject(options) {
             var vnode = location.vnode;
             var client = options.clients.map[pnode];
 
-            client.deleteObject(owner, bucket, key, vnode,
+            client.deleteObject(owner, bucket, key, vnode, id,
                 function (gErr, obj) {
                 log.debug({
                     err: gErr,
@@ -1128,7 +1131,7 @@ function listObjects(options) {
             limit = Infinity;
         }
 
-        var id = options.req_id || uuid.v1();
+        var id = argv[6];
 
         dtrace['listobjects-start'].fire(function () {
             return ([msgid, id, owner, sorted, order_by, prefix, limit]);
@@ -1165,7 +1168,7 @@ function listObjects(options) {
                     log: log.child({vnode: node.vnode}),
                     getStream: function (offset, _limit) {
                         return client.listObjects(owner, bucket_id,
-                            order_by, prefix, _limit, offset, node.vnode);
+                            order_by, prefix, _limit, offset, node.vnode, id);
                     }
                 }),
                 record: null
