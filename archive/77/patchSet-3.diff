commit f57b02b56034fa4cd472927e2808271bfed5ea6d (refs/changes/77/77/3)
Author: Dave Pacheco <dap@joyent.com>
Date:   2016-07-14T10:39:18-07:00 (3 years, 3 months ago)
    
    TOOLS-1483 cr.joyent.us admins shouldn't override safeties by default

diff --git a/TODO.md b/TODO.md
index 0adf4db..2bf129f 100644
--- a/TODO.md
+++ b/TODO.md
@@ -1,12 +1,5 @@
-* create "temporary superuser" group?
-* Test crbackup/crrestore to deploy a new production deployment with latest
-  changes
-* Document crbackup and crrestore
-* Try 2.11 (or 2.13?) to fix two bugs:
-  - firefox: copying text from browser
-  - firefox: the login bug people are hitting
+* Try 2.12.2 + patch to fix the login bug people are hitting
 * Add nginx image to this repository
-* Backup and restore scripts need cleaning up
 * Would be nice to have a plugin to auto-update commit message with reviewers
   and approved-by (without the other metadata that Gerrit likes to add)
 * backup story for github repos?
diff --git a/bin/import-github-project b/bin/crimport
similarity index 66%
rename from bin/import-github-project
rename to bin/crimport
index 40abcce..a2ba1bb 100755
--- a/bin/import-github-project
+++ b/bin/crimport
@@ -1,7 +1,7 @@
 #!/bin/bash
 
 #
-# import-github-project GITHUB_ACCOUNT REPO_NAME [USER]: imports the given
+# crimport REPO_GITHUB_ACCOUNT REPO_NAME [GERRIT_USER]: imports the given
 # repository into gerrit.  See the usage message for details.
 #
 
@@ -11,9 +11,10 @@
 
 # DNS name or IP address of Gerrit server
 igp_gerrit_host=cr.joyent.us
-
+# Group name for Gerrit superusers
+igp_gerrit_group="Temporary Git Superusers"
 # Temporary directory for cloned project
-igp_tmproot="${TMPDIR-/var/tmp}/import-github-project-$$"
+igp_tmproot="${TMPDIR-/var/tmp}/crimport-$$"
 
 #
 # Runtime state
@@ -35,25 +36,33 @@ igp_gh_repo=
 # Gerrit project name.  This is constructed from the GitHub parameters.
 igp_gerrit_project=
 
+# Gerrit username.  This is reported by the server.
+igp_gerrit_username=
+
 # Directory into which the source repository is cloned.
 igp_clonedir=
 
 function usage
 {
 	cat <<EOF >&2
-usage: import-github-project GITHUB_ACCOUNT REPO_NAME [GERRIT_USER]
+usage: crimport REPO_GITHUB_ACCOUNT REPO_NAME [GERRIT_USER]
 
 This tool copies a GitHub repository at
 
-    https://github.com/GITHUB_ACCOUNT/REPO_NAME
+    https://github.com/REPO_GITHUB_ACCOUNT/REPO_NAME
 
 to a new project on the Joyent Gerrit server at $igp_gerrit_host.  The new
 Gerrit project will be configured to replicate back to GitHub.
 
+REPO_GITHUB_ACCOUNT may be either an individual GitHub account or a GitHub
+organization.
+
 If GERRIT_USER is provided, then that username is used when pushing over ssh to
 Gerrit.
 
-This tool must be run as a Gerrit administrator.
+This tool must be run as a Gerrit administrator.  It will temporarily add you to
+the list of Git Superusers in order to do the import, and it will remove you
+from that group upon completion.
 EOF
 	exit 2
 }
@@ -83,6 +92,10 @@ function main
 		igp_gerrit_sshhost="$igp_gerrit_host"
 	fi
 
+	echo -n "Detecting your Gerrit username ... "
+	igp_gerrit_configure || fail "failed"
+	echo "$igp_gerrit_username"
+
 	echo "Cloning github.com repository $igp_gerrit_project into " \
 	    "\"$igp_clonedir\"" >&2
 	mkdir "$igp_tmproot" || fail "failed to mkdir \"$igp_tmproot\""
@@ -94,10 +107,24 @@ function main
 	    "http://github.com/$igp_gh_account/$igp_gh_repo" ||
 	    fail "failed to create Gerrit project"
 
+	#
+	# Fortunately, adding and removing members using this interface is
+	# idempotent, so we don't need to check first.
+	#
+	echo -n "Adding '$igp_gerrit_username' to" \
+	    "group \"$igp_gerrit_group\" ... "
+	igp_gerrit set-members "'$igp_gerrit_group'" \
+	    --add "$igp_gerrit_username" || fail "failed"
+
 	echo "Pushing existing changes to Gerrit project" >&2
 	igp_gerrit_push "$igp_clonedir" "$igp_gerrit_project" || \
 	    fail "failed to push changes"
 
+	echo -n "Removing '$igp_gerrit_username' from" \
+	    "group \"$igp_gerrit_group\" ... "
+	igp_gerrit set-members "'$igp_gerrit_group'" \
+	    --remove "$igp_gerrit_username" || fail "failed"
+
 	cat <<EOF
 Success!  The following project has been created on the Gerrit server:
 
@@ -114,7 +141,7 @@ EOF
 
 function fail
 {
-	echo "import-github-project: $@" >&2
+	echo "crimport: $@" >&2
 	exit 1
 }
 
@@ -196,8 +223,30 @@ function igp_gerrit_push
 
 	git remote add cr git+ssh://$igp_gerrit_sshhost/$2.git
 	git push cr master
-	git push cr --tags
 	) || fail "failed to push to Gerrit"
 }
 
+#
+# igp_gerrit_configure: determine the current Gerrit username based on what the
+# server reports when we try to use it.  If the user specified a username
+# argument, this is redundant.  But they may not have, and this approach will
+# always report whatever username we're using to access the server.
+#
+# The actual approach leaves something to be desired, but Gerrit doesn't provide
+# the equivalent of who(1) or id(1).  On the plus side, this output should be
+# stable enough for use here.
+#
+function igp_gerrit_configure
+{
+	igp_gerrit_username=$(ssh $igp_gerrit_sshhost 2>&1 | \
+	   grep '^\s\+git clone.*REPOSITORY_NAME.git\s*$' | \
+	   sed -e s'#.*ssh://\(.*\)@.*#\1#') ||
+	   fail "failed to parse out Gerrit username"
+
+	if [[ -z "$igp_gerrit_username" ]]; then
+		fail "failed to discover Gerrit username"
+	fi
+}
+
+
 main "$@"
diff --git a/docs/operator/README.md b/docs/operator/README.md
index d8a03fd..c76368d 100644
--- a/docs/operator/README.md
+++ b/docs/operator/README.md
@@ -45,12 +45,25 @@ other groups that get privileges (e.g., "Change Approver Role").
 "illumos mergers" are people who merge upstream changes from illumos into
 illumos-joyent.  They need privileges to push merge commits to illumos-joyent.
 
-"Administrators" are essentially super-users, both in the UI and via git.  This
-overrides most of the checks we have put in place (and would like to put in
-place) to avoid things like accidentally pushing to master.  People should not
-need to be administrators in order to do day-to-day work.  We should only add
-people to this group in order to help maintain cr.joyent.us, not to work around
-some other access control issue.
+"Administrators" are essentially super-users in the Gerrit UI.  People should
+not need to be administrators in order to do day-to-day work.  We should only
+add people to this group in order to help maintain cr.joyent.us, not to work
+around some other access control issue.  In Gerrit's default configuration,
+administrators are also super-users in Git (able to force-push, push to master,
+and so on), but we have removed those privileges from this group to make it
+harder for administrators to accidentally do these things.  If you need these
+Git privileges, see the "Temporary Git Superusers" group.
+
+"Temporary Git Superusers" are users with privileges to do all the git
+operations that we normally don't want people to do: push directly to master
+(bypassing review), force-pushing, pushing merge commits, and so on.  This group
+is expected to be empty most of the time.  If you need to do one of these
+operations (e.g., to import a repository), you can add yourself to this group,
+do the operation, **and then remove yourself from the group**.  Obviously, this
+group doesn't buy additional security, since any administrator can add
+themselves to it.  It's just to prevent administrators from accidentally
+overriding the safeties.
+
 
 #### Groups used by the infrastructure
 
@@ -93,8 +106,8 @@ Approver Role".  See "Access Control" below.
 to get the settings right, and we likely won't discover if they're wrong until
 something bad has already happened.
 
-Use the [import-github-project script](../../bin/import-github-project) script
-inside this repository to import a repository from GitHub.  This script:
+Use the [crimport](../../bin/crimport) script inside this repository to import a
+repository from GitHub.  This script:
 
 - creates a new Gerrit project with appropriate settings, including replication
   to GitHub
