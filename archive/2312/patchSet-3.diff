From 8f9b6de78c92a6755dad512222388db610510707 Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Tue, 1 Aug 2017 10:36:39 +0000
Subject: [PATCH] MANTA-3362 Electric Moray Makefile cleanup TOOLS-1810 common
 Makefile infrastructure for NPM public registry use TOOLS-1814 retire
 "node_deps" Makefile from eng.git

---
 .gitignore                                    |   1 +
 Makefile                                      | 103 +++++++-----------
 tools/mk/Makefile.defs                        |  50 ++++++++-
 tools/mk/Makefile.node.defs                   |  16 ++-
 tools/mk/Makefile.node.targ                   |   2 +-
 tools/mk/Makefile.node_deps.defs              |  43 --------
 tools/mk/Makefile.node_modules.defs           |  68 ++++++++++++
 ...e_deps.targ => Makefile.node_modules.targ} |  19 +++-
 tools/mk/Makefile.node_prebuilt.defs          |  16 ++-
 tools/mk/Makefile.smf.targ                    |   2 +-
 tools/mk/Makefile.targ                        |  35 ++++--
 11 files changed, 222 insertions(+), 133 deletions(-)
 delete mode 100644 tools/mk/Makefile.node_deps.defs
 create mode 100644 tools/mk/Makefile.node_modules.defs
 rename tools/mk/{Makefile.node_deps.targ => Makefile.node_modules.targ} (52%)

diff --git a/.gitignore b/.gitignore
index ea64500..f58f286 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,4 +1,5 @@
 /node_modules
+/make_stamps
 /tmp
 build
 docs/*.json
diff --git a/Makefile b/Makefile
index 36aeca0..7307e20 100644
--- a/Makefile
+++ b/Makefile
@@ -5,48 +5,32 @@
 #
 
 #
-# Copyright (c) 2016, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
-# Makefile: basic Makefile for template API service
+# Makefile: Electric Moray, a system for sharded Moray buckets
 #
-# This Makefile is a template for new repos. It contains only repo-specific
-# logic and uses included makefiles to supply common targets (javascriptlint,
-# jsstyle, restdown, etc.), which are used by other repos as well. You may well
-# need to rewrite most of this file, but you shouldn't need to touch the
-# included makefiles.
-#
-# If you find yourself adding support for new targets that could be useful for
-# other projects too, you should add these to the original versions of the
-# included Makefiles (in eng.git) so that other teams can use them too.
-#
-
-#
-# Tools
-#
-NODEUNIT	:= ./node_modules/.bin/nodeunit
-BUNYAN		:= ./node_modules/.bin/bunyan
-JSONTOOL	:= ./node_modules/.bin/json
 
 #
 # Files
 #
-JS_FILES	:= $(shell ls *.js) $(shell find lib test -name '*.js')
-JSL_CONF_NODE	 = tools/jsl.node.conf
-JSL_FILES_NODE   = $(JS_FILES)
-JSSTYLE_FILES	 = $(JS_FILES)
-JSSTYLE_FLAGS    = -f tools/jsstyle.conf
-REPO_MODULES	 = src/node-dummy
-SMF_MANIFESTS_IN = smf/manifests/haproxy.xml.in
-BOOTSTRAP_MANIFESTS = sapi_manifests/registrar/template
+JS_FILES :=		$(wildcard *.js) $(shell find lib test -name '*.js')
+JSL_CONF_NODE =		tools/jsl.node.conf
+JSL_FILES_NODE =	$(JS_FILES)
+JSSTYLE_FILES =		$(JS_FILES)
+JSSTYLE_FLAGS =		-f tools/jsstyle.conf
+SMF_MANIFESTS_IN =	smf/manifests/haproxy.xml.in
+BOOTSTRAP_MANIFESTS =	sapi_manifests/registrar/template
 
+NODEUNIT_TESTS =	$(notdir $(wildcard test/*.test.js))
 
-NODE_PREBUILT_VERSION=v0.10.48
+
+NODE_PREBUILT_VERSION =	v0.10.48
 # Allow emoray builds on a VM other than sdc-multiarch/13.3.1.
-NODE_PREBUILT_IMAGE=b4bdc598-8939-11e3-bea4-8341f6861379
+NODE_PREBUILT_IMAGE =	b4bdc598-8939-11e3-bea4-8341f6861379
 ifeq ($(shell uname -s),SunOS)
-	NODE_PREBUILT_TAG=zone64
+	NODE_PREBUILT_TAG =	zone64
 endif
 
 include ./tools/mk/Makefile.defs
@@ -55,30 +39,24 @@ ifeq ($(shell uname -s),SunOS)
 else
 	include ./tools/mk/Makefile.node.defs
 endif
+include ./tools/mk/Makefile.node_modules.defs
 include ./tools/mk/Makefile.smf.defs
 
 #
 # MG Variables
 #
 
-RELEASE_TARBALL         := electric-moray-pkg-$(STAMP).tar.bz2
-ROOT                    := $(shell pwd)
-RELSTAGEDIR             := /tmp/$(STAMP)
+RELEASE_TARBALL :=	electric-moray-pkg-$(STAMP).tar.bz2
+ROOT :=			$(shell pwd)
+RELSTAGEDIR :=		/tmp/$(STAMP)
 
 #
 # Repo-specific targets
 #
 .PHONY: all
-all: $(SMF_MANIFESTS) deps manta-scripts
-
-.PHONY: deps
-deps: | $(REPO_DEPS) $(NPM_EXEC)
-	$(NPM_ENV) $(NPM) install
+all: $(SMF_MANIFESTS) $(BOOTSTRAP_MANIFESTS) $(STAMP_NODE_MODULES) manta-scripts
 
-$(NODEUNIT): | $(NPM_EXEC)
-	$(NPM) install
-
-CLEAN_FILES += $(TAP) ./node_modules $(BOOTSTRAP_MANIFESTS)
+CLEAN_FILES += $(BOOTSTRAP_MANIFESTS)
 
 .PHONY: manta-scripts
 manta-scripts: deps/manta-scripts/.git
@@ -86,38 +64,39 @@ manta-scripts: deps/manta-scripts/.git
 	cp deps/manta-scripts/*.sh $(BUILD)/scripts
 
 .PHONY: test
-test: $(NODEUNIT)
-	$(NODEUNIT) test/buckets.test.js | $(BUNYAN)
-	$(NODEUNIT) test/objects.test.js | $(BUNYAN)
-	$(NODEUNIT) test/batch.test.js | $(BUNYAN)
-	$(NODEUNIT) test/sql.test.js | $(BUNYAN)
-	$(NODEUNIT) test/integ.test.js | $(BUNYAN)
+test: $(STAMP_NODE_MODULES) $(addprefix run-nodeunit.,$(NODEUNIT_TESTS))
+
+run-nodeunit.%: test/%
+	$(NODE) ./node_modules/.bin/nodeunit $^ | \
+	    $(NODE) ./node_modules/.bin/bunyan -o short
 
 .PHONY: release
-release: all $(SMF_MANIFESTS) $(BOOTSTRAP_MANIFESTS)
+release: all
 	@echo "Building $(RELEASE_TARBALL)"
 	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/electric-moray
 	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/boot
 	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/etc
 	cp -r $(ROOT)/build \
-		$(ROOT)/bin \
-		$(ROOT)/boot \
-		$(ROOT)/lib \
-		$(ROOT)/main.js \
-		$(ROOT)/node_modules \
-		$(ROOT)/package.json \
-		$(ROOT)/sapi_manifests \
-		$(ROOT)/smf \
-		$(RELSTAGEDIR)/root/opt/smartdc/electric-moray/
+	    $(ROOT)/bin \
+	    $(ROOT)/boot \
+	    $(ROOT)/lib \
+	    $(ROOT)/main.js \
+	    $(ROOT)/node_modules \
+	    $(ROOT)/package.json \
+	    $(ROOT)/sapi_manifests \
+	    $(ROOT)/smf \
+	    $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/
 	mv $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/build/scripts \
 	    $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/boot
 	ln -s /opt/smartdc/electric-moray/boot/configure.sh \
 	    $(RELSTAGEDIR)/root/opt/smartdc/boot/configure.sh
-	chmod 755 $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/boot/configure.sh
+	chmod 755 \
+	    $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/boot/configure.sh
 	ln -s /opt/smartdc/electric-moray/boot/setup.sh \
 	    $(RELSTAGEDIR)/root/opt/smartdc/boot/setup.sh
 	chmod 755 $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/boot/setup.sh
-	cp $(ROOT)/etc/haproxy.cfg.in $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/etc
+	cp $(ROOT)/etc/haproxy.cfg.in \
+	    $(RELSTAGEDIR)/root/opt/smartdc/electric-moray/etc
 	(cd $(RELSTAGEDIR) && $(TAR) -jcf $(ROOT)/$(RELEASE_TARBALL) root)
 	@rm -rf $(RELSTAGEDIR)
 
@@ -136,7 +115,8 @@ publish: release
 		exit 1; \
 	fi
 	mkdir -p $(BITS_DIR)/electric-moray
-	cp $(ROOT)/$(RELEASE_TARBALL) $(BITS_DIR)/electric-moray/$(RELEASE_TARBALL)
+	cp $(ROOT)/$(RELEASE_TARBALL) \
+	    $(BITS_DIR)/electric-moray/$(RELEASE_TARBALL)
 
 include ./tools/mk/Makefile.deps
 ifeq ($(shell uname -s),SunOS)
@@ -144,5 +124,6 @@ ifeq ($(shell uname -s),SunOS)
 else
 	include ./tools/mk/Makefile.node.targ
 endif
+include ./tools/mk/Makefile.node_modules.targ
 include ./tools/mk/Makefile.smf.targ
 include ./tools/mk/Makefile.targ
diff --git a/tools/mk/Makefile.defs b/tools/mk/Makefile.defs
index 85139d7..8c6be90 100644
--- a/tools/mk/Makefile.defs
+++ b/tools/mk/Makefile.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -28,6 +27,9 @@
 #			the TIMESTAMP envvar (used by MG-based builds).
 #	STAMP		A build stamp to use in built package names.
 #
+#	MAKE_STAMPS_DIR	The directory in which make stamp files are to be
+#			created.  See comments below on expensive targets.
+#
 
 TOP := $(shell pwd)
 
@@ -49,3 +51,47 @@ STAMP := $(BRANCH)-$(TIMESTAMP)-$(_GITDESCRIBE)
 
 # node-gyp will print build info useful for debugging with V=1
 export V=1
+
+#
+# EXPENSIVE TARGETS AND MAKE STAMP FILES
+#
+# Targets which are expensive to run and lack a single file that marks
+# completion are difficult to track with make; e.g., "npm install".  One
+# solution to this problem is to create "stamp" files with symbolic names which
+# are created as the final step in a complex make rule in order to mark
+# completion.
+#
+# In order to make these more uniform, and easier to target with "make clean",
+# we will attempt to store them under a single directory.  Note that these
+# files are never targets for shipping in build artefacts.
+#
+# Stamp-backed targets come in several parts.  First, a macro should be defined
+# which names a file in the MAKE_STAMPS_DIR directory.  Then, a target which
+# creates this stamp file must be provided.  The recipe for this target should
+# use MAKE_STAMP_REMOVE and MAKE_STAMP_CREATE to perform the appropriate stamp
+# management.
+#
+# For example:
+#
+# --- Makefile.*.defs:
+#
+#	$(STAMP_EXPENSIVE_RESULT) := $(MAKE_STAMPS_DIR)/expensive-result
+#
+# --- Makefile.*.targ:
+#
+#	$(STAMP_EXPENSIVE_RESULT): input/file another/input/file
+#		$(MAKE_STAMP_REMOVE)
+#		rm -rf output_tree/  # <--- ensure a clean slate
+#		expensive_program -o output_tree/ $^
+#		$(MAKE_STAMP_CREATE)
+#
+# NOTE: Every stamp file is exposed as an implicit "stamp-$STAMP_NAME" target.
+# The example above could be built manually by invoking:
+#
+#	make stamp-expensive-result
+#
+MAKE_STAMPS_DIR ?=	make_stamps
+CLEAN_FILES +=		$(MAKE_STAMPS_DIR)
+
+MAKE_STAMP_REMOVE =	mkdir -p $(@D); rm -f $(@)
+MAKE_STAMP_CREATE =	mkdir -p $(@D); touch $(@)
diff --git a/tools/mk/Makefile.node.defs b/tools/mk/Makefile.node.defs
index 9376841..487824d 100644
--- a/tools/mk/Makefile.node.defs
+++ b/tools/mk/Makefile.node.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -97,8 +96,15 @@ NODE_EXEC	= $(NODE_INSTALL)/bin/node
 NODE_WAF_EXEC	= $(NODE_INSTALL)/bin/node-waf
 NPM_EXEC	= $(NODE_INSTALL)/bin/npm
 
-# Ensure these use absolute paths to the executables to allow running
-# from a dir other than the project top.
+#
+# These paths should be used during the build process to invoke Node and
+# Node-related build tools like NPM.  All paths are fully qualified so that
+# they work regardless of the current working directory at the point of
+# invocation.
+#
+# Note that where PATH is overridden, the value chosen must cause execution of
+# "node" to find the same binary to which the NODE macro refers.
+#
 NODE		:= $(TOP)/$(NODE_EXEC)
 NODE_WAF	:= $(TOP)/$(NODE_WAF_EXEC)
-NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NPM_EXEC)
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) $(NODE) $(TOP)/$(NPM_EXEC)
diff --git a/tools/mk/Makefile.node.targ b/tools/mk/Makefile.node.targ
index abdc616..bf53f78 100644
--- a/tools/mk/Makefile.node.targ
+++ b/tools/mk/Makefile.node.targ
@@ -29,7 +29,7 @@ else
 $(NODE_EXEC) $(NPM_EXEC) $(NODE_WAF_EXEC):
 	(mkdir -p $(BUILD) \
 		&& cd $(BUILD) \
-		&& [[ -d src-node ]] && (cd src-node && git checkout master && git pull) || git clone git://github.com/joyent/node.git src-node \
+		&& [[ -d src-node ]] && (cd src-node && git checkout master && git pull) || git clone https://github.com/joyent/node.git src-node \
 		&& cd src-node \
 		&& git checkout $(NODE_PREBUILT_VERSION) \
 		&& ./configure $(NODE_CONFIG_FLAGS) \
diff --git a/tools/mk/Makefile.node_deps.defs b/tools/mk/Makefile.node_deps.defs
deleted file mode 100644
index 29a83f7..0000000
--- a/tools/mk/Makefile.node_deps.defs
+++ /dev/null
@@ -1,43 +0,0 @@
-# -*- mode: makefile -*-
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-
-#
-# Copyright (c) 2014, Joyent, Inc.
-#
-
-#
-# Makefile.node_deps.defs: Makefile for including npm modules whose sources
-# reside inside the repo.  This should NOT be used for modules in the npm
-# public repo or modules that could be specified with git SHAs.
-#
-# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
-# into other repos as-is without requiring any modifications. If you find
-# yourself changing this file, you should instead update the original copy in
-# eng.git and then update your repo to use the new version.
-#
-
-#
-# This Makefile takes as input the following make variable:
-#
-#    REPO_MODULES	List of relative paths to node modules (i.e., npm
-#    			packages) inside this repo.  For example:
-#    			src/node-canative, where there's a binary npm package
-#    			in src/node-canative.
-#
-# Based on the above, this Makefile defines the following new variables:
-#
-#    REPO_DEPS		List of relative paths to the installed modules.  For
-#    			example: "node_modules/canative".
-#
-# The accompanying Makefile.node_deps.targ defines a target that will install
-# each of REPO_MODULES into REPO_DEPS and remove REPO_DEPS with "make clean".
-# The top-level Makefile is responsible for depending on REPO_DEPS where
-# appropriate (usually the "deps" or "all" target).
-#
-
-REPO_DEPS    = $(REPO_MODULES:src/node-%=node_modules/%)
-CLEAN_FILES += $(REPO_DEPS)
diff --git a/tools/mk/Makefile.node_modules.defs b/tools/mk/Makefile.node_modules.defs
new file mode 100644
index 0000000..ec8cc8e
--- /dev/null
+++ b/tools/mk/Makefile.node_modules.defs
@@ -0,0 +1,68 @@
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2017, Joyent, Inc.
+#
+
+#
+# Makefile.node_modules.defs: Makefile for using NPM modules.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+#
+# This Makefile provides a target for building NPM modules from the dependency
+# information in the "package.json" file.  The "npm install" operation is
+# expensive and produces a complex (multi-file) result which is difficult for
+# make to use in dependency analysis.  As such, we use a "stamp" file to track
+# successful completion of module installation.
+#
+# This variable allows the consumer to influence the environment used to run
+# NPM commands.
+#
+#	NPM_ENV			This string should be set to a list of
+#				environment variables in the syntax used
+#				by bash; e.g.,
+#
+#					NPM_ENV =	TESTING=yes V=1
+#
+# Consumers should, for targets which depend on the installation of NPM
+# modules, depend on the stamp file using the $(STAMP_NODE_MODULES) variable,
+# e.g.:
+#
+#	.PHONY: all
+#	all: $(STAMP_NODE_MODULES)
+#
+# A phony target, "make stamp-node-modules", is also provided to allow the
+# engineer to manually perform NPM module installation without invoking other
+# targets.  Note that this target should _not_ be used as a dependency for
+# other targets in consuming Makefiles; using phony targets to represent
+# intermediate build stages can inhibit the ability of make to determine
+# when no additional actions are required.
+#
+
+TOP ?= $(error You must include Makefile.defs before this makefile)
+NPM ?= $(error You must include either Makefile.node.defs or \
+    Makefile.node_prebuilt.defs before this makefile)
+
+BUILD ?=		build
+
+#
+# Invoking "npm install" at the top-level will create a "node_modules"
+# directory into which NPM modules will be installed.
+#
+CLEAN_FILES +=		node_modules
+
+#
+# To avoid repeatedly reinstalling from NPM, we create a "stamp" file to track
+# successful runs of "npm install".  Note that MAKE_STAMPS_DIR is included
+# in CLEAN_FILES already.
+#
+STAMP_NODE_MODULES ?=	$(MAKE_STAMPS_DIR)/node-modules
diff --git a/tools/mk/Makefile.node_deps.targ b/tools/mk/Makefile.node_modules.targ
similarity index 52%
rename from tools/mk/Makefile.node_deps.targ
rename to tools/mk/Makefile.node_modules.targ
index bb2ab4f..0156bce 100644
--- a/tools/mk/Makefile.node_deps.targ
+++ b/tools/mk/Makefile.node_modules.targ
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,11 +5,11 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
-# Makefile.node_deps.targ: targets for Makefile.node_deps.defs.
+# Makefile.node_modules.targ: See comments in Makefile.node_modules.defs.
 #
 # NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
 # into other repos as-is without requiring any modifications. If you find
@@ -18,7 +17,15 @@
 # eng.git and then update your repo to use the new version.
 #
 
-NPM_EXEC  ?= $(error NPM_EXEC must be defined for Makefile.node_deps.targ)
+STAMP_NODE_MODULES ?= $(error You must include Makefile.node_modules.defs \
+    before this file)
 
-node_modules/%: src/node-% | $(NPM_EXEC)
-	$(NPM) install $<
+#
+# If the "package.json" file changes, we need to rebuild the contents of
+# the "node_modules" directory.
+#
+$(STAMP_NODE_MODULES): package.json | $(NPM_EXEC)
+	$(MAKE_STAMP_REMOVE)
+	rm -rf node_modules
+	$(NPM_ENV) $(NPM) install
+	$(MAKE_STAMP_CREATE)
diff --git a/tools/mk/Makefile.node_prebuilt.defs b/tools/mk/Makefile.node_prebuilt.defs
index 5744489..2129742 100644
--- a/tools/mk/Makefile.node_prebuilt.defs
+++ b/tools/mk/Makefile.node_prebuilt.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -146,8 +145,15 @@ NODE_EXEC	:= $(BUILD)/prebuilt-node-$(NODE_PREBUILT_NAME)
 NODE_WAF_EXEC	:= $(BUILD)/prebuilt-node-waf-$(NODE_PREBUILT_NAME)
 NPM_EXEC	:= $(BUILD)/prebuilt-npm-$(NODE_PREBUILT_NAME)
 
-# Ensure these use absolute paths to the executables to allow running
-# from a dir other than the project top.
+#
+# These paths should be used during the build process to invoke Node and
+# Node-related build tools like NPM.  All paths are fully qualified so that
+# they work regardless of the current working directory at the point of
+# invocation.
+#
+# Note that where PATH is overridden, the value chosen must cause execution of
+# "node" to find the same binary to which the NODE macro refers.
+#
 NODE		:= $(TOP)/$(NODE_INSTALL)/bin/node
 NODE_WAF	:= $(TOP)/$(NODE_INSTALL)/bin/node-waf
-NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NODE_INSTALL)/bin/npm
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) $(NODE) $(TOP)/$(NODE_INSTALL)/bin/npm
diff --git a/tools/mk/Makefile.smf.targ b/tools/mk/Makefile.smf.targ
index 0fa03ce..f78de96 100644
--- a/tools/mk/Makefile.smf.targ
+++ b/tools/mk/Makefile.smf.targ
@@ -23,7 +23,7 @@ check-manifests: $(SMF_MANIFESTS:%=%.smfchk)
 %.smfchk: %
 	$(XMLLINT) --path $(dir $(SMF_DTD)) --dtdvalid $(SMF_DTD) $^
 
-check: check-manifests
+check:: check-manifests
 
 $(SMF_MANIFESTS): %: %.in
 	$(SED) -e 's#@@NODE@@#@@PREFIX@@/$(NODE_INSTALL)/bin/node#' $< > $@
diff --git a/tools/mk/Makefile.targ b/tools/mk/Makefile.targ
index ea19000..54edf0e 100644
--- a/tools/mk/Makefile.targ
+++ b/tools/mk/Makefile.targ
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -89,9 +88,9 @@
 #
 #	JSSTYLE_FLAGS	Additional flags to pass through to jsstyle
 #
-#	RESTDOWN_EXT	By default '.restdown' is required for DOC_FILES
-#			(see above). If you want to use, say, '.md' instead, then
-#			set 'RESTDOWN_EXT=.md' in your Makefile.
+#	RESTDOWN_EXT	By default '.md' is required for DOC_FILES (see above).
+#			If you want to use, say, '.restdown' instead, then set
+#			'RESTDOWN_EXT=.restdown' in your Makefile.
 #
 
 #
@@ -108,7 +107,7 @@ JSSTYLE		?= jsstyle
 MKDIR		?= mkdir -p
 MV		?= mv
 RESTDOWN_FLAGS	?=
-RESTDOWN_EXT	?= .restdown
+RESTDOWN_EXT	?= .md
 RMTREE		?= rm -rf
 JSL_FLAGS  	?= --nologo --nosummary
 
@@ -209,7 +208,7 @@ check-jsstyle:  $(JSSTYLE_EXEC)
 	$(JSSTYLE) $(JSSTYLE_FLAGS) $(JSSTYLE_FILES)
 
 .PHONY: check
-check: check-jsl check-json $(JSSTYLE_TARGET) check-bash
+check:: check-jsl check-json $(JSSTYLE_TARGET) check-bash
 	@echo check ok
 
 .PHONY: clean
@@ -264,7 +263,7 @@ DOC_MEDIA_FILES_BUILD := $(DOC_MEDIA_FILES:%=$(DOC_BUILD)/media/%)
 # to get there.
 #
 .PHONY: docs
-docs:							\
+docs::							\
 	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.html)		\
 	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.json)		\
 	$(DOC_MEDIA_FILES_BUILD)
@@ -294,9 +293,11 @@ CLEAN_FILES +=					\
 $(DOC_MEDIA_FILES_BUILD): | $(DOC_MEDIA_DIRS_BUILD)
 
 $(DOC_BUILD)/%: docs/% | $(DOC_BUILD)
+	$(MKDIR) $(shell dirname $@)
 	$(CP) $< $@
 
-docs/%.json docs/%.html: docs/%$(RESTDOWN_EXT) | $(DOC_BUILD) $(RESTDOWN_EXEC)
+docs/%.json docs/%.html: docs/%$(RESTDOWN_EXT) | $(DOC_BUILD) $(RESTDOWN_EXEC) \
+    $(EXTRA_DOC_DEPS)
 	$(RESTDOWN) $(RESTDOWN_FLAGS) -m $(DOC_BUILD) $<
 
 $(DOC_BUILD):
@@ -315,3 +316,19 @@ test:
 
 .PHONY: prepush
 prepush: check test
+
+#
+# This rule automatically exposes every "stamp" file as a target that can be
+# invoked manually as "stamp-$STAMP_NAME".  For example, if a stamp has been
+# defined thus:
+#
+#	STAMP_EXPENSIVE_RESULT := $(MAKE_STAMPS_DIR)/expensive-result
+#
+# ... this can be invoked manually as "make stamp-expensive-result".  Note that
+# these phony targets are essentially just for interactive usage.  Targets
+# should be specified to depend on the macro containing the stamp file name.
+#
+# See also the comments in "Makefile.defs".
+#
+stamp-%: $(MAKE_STAMPS_DIR)/%
+	@:
-- 
2.21.0

