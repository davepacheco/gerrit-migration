From ac553640e4f1740af69e87d1178e52d327651a4e Mon Sep 17 00:00:00 2001
From: Marsell Kukuljevic <marsell@joyent.com>
Date: Mon, 17 Apr 2017 19:22:28 +1200
Subject: [PATCH] CNAPI-706: Add a command in bin/ which shows the reasoning
 behind dapi's most recent allocation

---
 bin/alloc-reasons.sh | 50 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 50 insertions(+)
 create mode 100755 bin/alloc-reasons.sh

diff --git a/bin/alloc-reasons.sh b/bin/alloc-reasons.sh
new file mode 100755
index 0000000..b2dbf9a
--- /dev/null
+++ b/bin/alloc-reasons.sh
@@ -0,0 +1,50 @@
+#!/bin/bash
+
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+# Copyright (c) 2017, Joyent, Inc.
+#
+# This command shows the reasoning that dapi (embedded within cnapi)
+# used when deciding where the most recent allocation should go. When
+# dapi makes an allocation, it dumps a gzipped & base64-encoded JSON
+# blob into cnapi's logs which includes a great deal of information about
+# the allocation, including the 'steps' attribute; that attribute is what
+# we seek to extract here.
+#
+# If this command receives an argument, it is assumed to be a VM UUID,
+# which the command converts to a request_id to search through cnapi's
+# logs. If the VM UUID isn't provided, the command will only display the most
+# recent dapi dump -- this may omit details if an allocation took several
+#trips through dapi to complete.
+
+
+if [[ -n "$TRACE" ]]; then
+    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+    set -o xtrace
+fi
+set -o errexit
+set -o pipefail
+
+
+if [[ $1 ]]; then
+    VM_UUID=$1
+    WFAPI_URL=$(json wfapi.url < /opt/smartdc/cnapi/config/config.json)
+    REQ_ID=$(curl -s $WFAPI_URL/jobs?vm_uuid=$VM_UUID | json -Ha params.x-request-id | tail -1)
+
+    grep -h $REQ_ID $(ls /var/log/sdc/upload/cnapi_* 2> /dev/null | sort) $(svcs -L cnapi) \
+        | bunyan -c this.snapshot -o bunyan --strict \
+        | json -ga snapshot \
+    | while read snap; do
+        echo "$snap" | /opt/local/bin/base64 -d | gunzip - | json steps
+    done
+else
+    grep -h snapshot $(ls /var/log/sdc/upload/cnapi_* 2> /dev/null | sort) $(svcs -L cnapi) \
+        | bunyan -c this.snapshot -o bunyan --strict \
+        | tail -1 \
+        | json -ga snapshot \
+    | while read snap; do
+        echo "$snap" | /opt/local/bin/base64 -d | gunzip - | json steps
+    done
+fi
-- 
2.21.0

