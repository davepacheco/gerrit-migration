commit e8e045cd715f6a657641e8e4f81013fbfa6b0609 (refs/changes/73/1073/2)
Author: Trent Mick <trentm@gmail.com>
Date:   2016-12-06T12:25:24-08:00 (2 years, 10 months ago)
    
    DOCKER-981 test suite's sdcdockertest_client zone isn't fully setting up

diff --git a/test/integration/helpers.js b/test/integration/helpers.js
index d2a0ba0..7ae0392 100644
--- a/test/integration/helpers.js
+++ b/test/integration/helpers.js
@@ -59,34 +59,7 @@ var CLIENT_ZONE_PAYLOAD = {
     // ... package vars
 
     customer_metadata: {
-        /* BEGIN JSSTYLED */
-        'user-script': [
-            '#!/bin/bash',
-            '',
-            'DOCKER_AVAILABLE_CLI_VERSIONS="' + process.env.DOCKER_AVAILABLE_CLI_VERSIONS + '"',
-            '',
-            'if [[ ! -d /root/bin ]]; then',
-            '    mkdir -p /root/bin',
-            '    echo \'export PATH=/root/bin:$PATH\' >>/root/.profile',
-            'fi',
-            '',
-            'cd /root/bin',
-            '',
-            'if [[ ! -x sdc-docker-setup.sh ]]; then',
-            '    curl -sSO https://raw.githubusercontent.com/joyent/sdc-docker/master/tools/sdc-docker-setup.sh',
-            '    chmod +x sdc-docker-setup.sh',
-            'fi',
-            '',
-            'if [[ ! -x get-docker-clients.sh ]]; then',
-            '    curl -sSO https://raw.githubusercontent.com/joyent/sdc-docker/master/tools/get-docker-clients.sh',
-            '    chmod +x get-docker-clients.sh',
-            'fi',
-            '',
-            'EXCLUDE_DOCKER_DEBUG=1 ./get-docker-clients.sh ${DOCKER_AVAILABLE_CLI_VERSIONS}',
-            '',
-            'touch /var/svc/user-script-done  # see waitForClientZoneUserScript'
-        ].join('\n')
-        /* END JSSTYLED */
+        'user-script': '/* from sdcdockertest_client.user-script.in */'
     },
 
     'brand': 'lx',
@@ -430,6 +403,46 @@ function stepCloudapiPublicIp(state, cb) {
     });
 }
 
+/*
+ * Get the VM payload for the 'sdcdockertest_client' client zone.
+ *
+ * Dev Note: Some of the payload filling is done in `_stepCreateClientZone`,
+ * so this isn't as clean as it could be.
+ */
+function stepClientZonePayload(state, cb) {
+    assert.object(state, 'state');
+    assert.func(cb, 'cb');
+
+    if (state.clientZonePayload) {
+        cb();
+        return;
+    }
+
+    state.clientZonePayload = common.objCopy(CLIENT_ZONE_PAYLOAD);
+
+    // Load and render the user-script template.
+    var tmpl = path.resolve(__dirname, 'sdcdockertest_client.user-script.in');
+    fs.readFile(tmpl, {encoding: 'utf8'}, function (err, userScript) {
+        if (err) {
+            cb(err);
+            return;
+        }
+
+        var vars = {
+            DOCKER_AVAILABLE_CLI_VERSIONS:
+                process.env.DOCKER_AVAILABLE_CLI_VERSIONS
+        };
+        Object.keys(vars).forEach(function (k) {
+            userScript = userScript.replace(
+                new RegExp('{{' + k + '}}', 'g'),
+                vars[k]);
+        });
+
+        state.clientZonePayload.customer_metadata['user-script'] = userScript;
+        cb();
+    });
+}
+
 /*
  * Get (or create) and setup the test zone in which we can run the `docker`
  * client.
@@ -450,7 +463,7 @@ function stepClientZone(state_, cb) {
             var filters = {
                 state: 'active',
                 owner_uuid: state.sdcConfig.ufds_admin_uuid,
-                alias: CLIENT_ZONE_PAYLOAD.alias
+                alias: state.clientZonePayload.alias
             };
             state.vmapi.listVms(filters, function (err, vms) {
                 if (err) {
@@ -477,7 +490,7 @@ function _stepCreateClientZone(state_, cb) {
         return cb();
     }
 
-    var payload = common.objCopy(CLIENT_ZONE_PAYLOAD);
+    var payload = state_.clientZonePayload;
 
     vasync.pipeline({arg: state_, funcs: [
         stepNapi,
@@ -628,6 +641,7 @@ GzDockerEnv.prototype.init = function denvInit(t, state_, cb) {
     vasync.pipeline({arg: state_, funcs: [
         stepSysinfo,
         stepSdcConfig,
+        stepClientZonePayload,
         stepClientZone,
 
         function ensureAccount(state, next) {
diff --git a/test/integration/sdcdockertest_client.user-script.in b/test/integration/sdcdockertest_client.user-script.in
new file mode 100644
index 0000000..f94c7ff
--- /dev/null
+++ b/test/integration/sdcdockertest_client.user-script.in
@@ -0,0 +1,44 @@
+#!/bin/bash
+
+set -o errexit
+set -o pipefail
+export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
+set -o xtrace
+
+DOCKER_AVAILABLE_CLI_VERSIONS="{{DOCKER_AVAILABLE_CLI_VERSIONS}}"
+
+if [[ ! -d /root/bin ]]; then
+    mkdir -p /root/bin
+    echo 'export PATH=/root/bin:$PATH' >>/root/.profile
+fi
+
+cd /root/bin
+
+if [[ ! -x sdc-docker-setup.sh ]]; then
+    curl -sSO https://raw.githubusercontent.com/joyent/sdc-docker/master/tools/sdc-docker-setup.sh
+    chmod +x sdc-docker-setup.sh
+fi
+
+if [[ ! -x get-docker-clients.sh ]]; then
+    curl -sSO https://raw.githubusercontent.com/joyent/sdc-docker/master/tools/get-docker-clients.sh
+    chmod +x get-docker-clients.sh
+fi
+
+echo "Get docker CLI clients (allow 3 attempts)"
+got_docker_clients_successfully=
+for i in {3..1}; do
+    set +o errexit
+    EXCLUDE_DOCKER_DEBUG=1 ./get-docker-clients.sh ${DOCKER_AVAILABLE_CLI_VERSIONS}
+    exit_status=$?
+    set -o errexit
+    if [[ $exit_status -eq 0 ]]; then
+        got_docker_clients_successfully=yes
+        break
+    fi
+done
+if [[ "$got_docker_clients_successfully" != "yes" ]]; then
+    echo "failed to get Docker clients" >&2
+    exit 1
+fi
+
+touch /var/svc/user-script-done  # see waitForClientZoneUserScript
