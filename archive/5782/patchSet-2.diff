commit 197128856f180e2f09c42e8257058d36e19096c5
Author: Trent Mick <trentm@gmail.com>
Date:   2019-03-12T18:27:10-07:00 (7 months ago)
    
    TRITON-884 remove cloud analytics (ca) from Triton

diff --git a/Makefile b/Makefile
index 704f2ac4d..9255e2622 100644
--- a/Makefile
+++ b/Makefile
@@ -218,9 +218,9 @@ tests_test: $(TAP)
 users_test: $(TAP)
 	$(NODE_EXEC) $(TAP) test/users.test.js
 
-test: auth_test account_test analytics_test datacenters_test datasets_test fabrics_test images_test keys_test networks_test packages_test populate_network_test services_test tests_test users_test nics_test machines_test
+test: auth_test account_test datacenters_test datasets_test fabrics_test images_test keys_test networks_test packages_test populate_network_test services_test tests_test users_test nics_test machines_test
 
-no_machines_test: auth_test account_test analytics_test datacenters_test datasets_test fabrics_test images_test keys_test networks_test packages_test populate_network_test services_test tests_test users_test
+no_machines_test: auth_test account_test datacenters_test datasets_test fabrics_test images_test keys_test networks_test packages_test populate_network_test services_test tests_test users_test
 
 provision_limits_plugin_test:
 	$(NODE_EXEC) $(TAP) test/provision_limits.test.javascript
diff --git a/docs/admin.md b/docs/admin.md
index c25009f0f..a36e4fa62 100644
--- a/docs/admin.md
+++ b/docs/admin.md
@@ -132,9 +132,6 @@ section will explain the configuration file.
                 "expiry": 300
             }
         },
-        "ca": {
-            "url": "http://10.99.99.24:23181"
-        },
         "plugins": [
             {
                 "name": "provision_limits",
@@ -175,8 +172,7 @@ section will explain the configuration file.
                         "rate": 0
                     }
                 }
-            },
-            "analytics": false
+            }
         },
         "bleeding_edge_features": {
             "": false
@@ -320,19 +316,6 @@ url       | URL      | The fully-qualified URL where CNAPI lives
 cache     | Object   | Controls the CNAPI client cache size and the time to expire it (in seconds)
 
 
-## CA
-
-      "ca": {
-        "url": "http://10.99.99.24:23181"
-      },
-
-The `ca` config block tells CloudAPI how to communicate with Cloud Analytics,
-and what cache settings to use.
-
-**Field** | **Type** | **Description**
---------- | -------- | ---------------------------------------------------------
-url       | URL      | The fully-qualified URL where CA lives
-
 
 ## NAPI
 
@@ -469,17 +452,6 @@ example:
             "rate": 0
           }
         }
-      },
-      "analytics": {
-        "ip": true,
-        "burst": 100,
-        "rate": 10,
-        "overrides": {
-          "10.99.99.14": {
-            "burst": 0,
-            "rate": 0
-          }
-        }
       }
     }
 
@@ -487,18 +459,13 @@ This configuration tells CloudAPI to create one token bucket for all endpoints,
 and make it match on `ip`.  Allow a maximum burst rate of `9` requests from a
 single IP (assuming there are tokens), and refill the bucket at a rate of `3`
 tokens per second.  However, allow any requests coming from the portal to have
-an unlimited request rate.  Now, in addition to that, because the /analytics
-endpoint is likely to get polled at a high velocity (and can support the
-traffic), we create a second token bucket specific to the /analytics endpoints.
-Here, a single IP can burst to 100, and gets 10 tokens/second.  Again, the
-portal is allowed unrestricted access.
+an unlimited request rate.
 
 The given keys that can be configured in the throttling configuration:
 
 **Key**     | **Description**
 ----------- | ------------------------------------------------------------------
 account     | /account specific throttling
-analytics   | /analytics specific throttling
 audit       | /audit specific throttling
 config      | /config specific throttling
 datacenters | /datacenters specific throttling
diff --git a/docs/index.md b/docs/index.md
index 752a4742f..a46d03d69 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -1,7 +1,7 @@
 ---
 title: Joyent CloudAPI
 mediaroot: ./media
-apisections: Account, Keys, Config, Datacenters, Images, Packages, Instances, Analytics, FirewallRules, Networks, Nics, Users, Roles, Policies, Services, User SSH Keys, Role Tags, Fabrics
+apisections: Account, Keys, Config, Datacenters, Images, Packages, Instances, FirewallRules, Networks, Nics, Users, Roles, Policies, Services, User SSH Keys, Role Tags, Fabrics
 markdown2extras: tables, code-friendly
 ---
 
@@ -12,7 +12,7 @@ markdown2extras: tables, code-friendly
 -->
 
 <!--
-    Copyright 2019, Joyent, Inc.
+    Copyright 2019 Joyent, Inc.
 -->
 
 
@@ -57,7 +57,6 @@ Using CloudAPI, you can:
 
 * Create and manage containers and hardware virtual machines (collectively known as instances)
 * Manage your account credentials
-* Create custom analytics for monitoring your infrastructure
 * Create and modify virtual private networks for your instances
 * Manage snapshots of instances
 * Manage sub-users and their permissions using RBAC
@@ -174,7 +173,7 @@ to use for signing requests.
 ## Working with the CLI
 
 For a complete list of CloudAPI CLI commands available, please see
-[Appendix D: CloudAPI CLI Commands](#appendix-d-cloudapi-cli-commands).
+[Appendix C: CloudAPI CLI Commands](#appendix-c-cloudapi-cli-commands).
 
 To get help on a command, use the `--help` flag.  For example:
 
@@ -381,108 +380,12 @@ Hardware virtual machines are static, and whatever keys were in your account at
 instance creation time are used, provided the OS inside KVM is a *nix.
 
 
-## Creating Analytics
-
-Now that you have a container up and running, and you logged in and did
-whatever it is you thought was awesome, let's create an instrumentation to
-monitor performance.  Analytics are one of the more powerful features of
-Triton, so for more information, be sure to read
-[Appendix B: Cloud Analytics](#appendix-b-cloud-analytics).
-
-To get started, let's create an instrumentation on our network bytes:
-
-    $  sdc-createinstrumentation --module=nic --stat=vnic_bytes
-    {
-      "module": "nic",
-      "stat": "vnic_bytes",
-      "predicate": {},
-      "decomposition": [],
-      "value-dimension": 1,
-      "value-arity": "scalar",
-      "enabled": true,
-      "retention-time": 600,
-      "idle-max": 3600,
-      "transformations": {},
-      "nsources": 0,
-      "granularity": 1,
-      "persist-data": false,
-      "crtime": 1449379321811,
-      "value-scope": "interval",
-      "id": "1",
-      "uris": [
-        {
-          "uri": "/marsell/analytics/instrumentations/1/value/raw",
-          "name": "value_raw"
-        }
-      ]
-    }
-
-Great, now ssh back into your instance, and do something silly like:
-
-    $ wget joyent.com
-    $ ping -I 1 joyent.com
-
-Back on your CLI, go ahead and run:
-
-    $ sdc-getinstrumentation 1
-    {
-      "module": "nic",
-      "stat": "vnic_bytes",
-      "predicate": {},
-      "decomposition": [],
-      "value-dimension": 1,
-      "value-arity": "scalar",
-      "enabled": true,
-      "retention-time": 600,
-      "idle-max": 3600,
-      "transformations": {},
-      "nsources": 1,
-      "granularity": 1,
-      "persist-data": false,
-      "crtime": 1449379321811,
-      "value-scope": "interval",
-      "id": "1",
-      "uris": [
-        {
-          "uri": "/marsell/analytics/instrumentations/1/value/raw",
-          "name": "value_raw"
-        }
-      ]
-    }
-
-Where `1` is the `id` you got back from `sdc-createinstrumentation`.  You should
-be able to run this a few times and see the changes.  This is just a starting
-point, for a full discussion of analytics, be sure to read
-[Appendix B: Cloud Analytics](#appendix-b-cloud-analytics).
-
-
 ## Cleaning up
 
 After going through this `Getting Started` section, you should now have at least
-one SSH key, one instance and one instrumentation.  The rest of the commands
+one SSH key and one instance.  The rest of the commands
 assume you have [json](https://www.npmjs.org/package/json) installed.
 
-### Deleting Instrumentations
-
-Before cleaning up your instances, let's get rid of the instrumentation we
-created:
-
-    $ sdc-deleteinstrumentation 1
-
-### Deleting Machines
-
-To clean up an instance, you can use either:
-
-    $ triton instance delete $instance_id
-
-or
-
-    $ sdc-deletemachine $instance_id
-
-For example:
-
-    $ triton instance delete 9205af5b
-    Delete (async) instance 9205af5b (9205af5b-f2c0-ef07-e1f3-94bf1ff8fb93)
 
 ### Deleting keys
 
@@ -727,7 +630,7 @@ multiple ["schemes"](http://tools.ietf.org/html/rfc2617).  Currently CloudAPI
 supports only one Authentication mechanism due to PCI compliance restrictions:
 
 * HTTP Signature Authentication Scheme.  This Scheme is outlined in
-[Appendix C](#Appendix-C).
+[Appendix B](#appendix-b-http-signature-authentication).
 
 In order to leverage HTTP Signature Authentication, only RSA signing mechanisms
 are supported, and your keyId must be equal to the path returned from a
@@ -911,7 +814,8 @@ The set of supported *API versions* is given in the ping endpoint:
                 "7.1.0",
                 "7.2.0",
                 "7.3.0",
-                "8.0.0"
+                "8.0.0",
+                "9.0.0"
             ]
         }
     }
@@ -922,6 +826,10 @@ Note that a `Triton-Datacenter-Name` response header was added in 9.2.0.
 
 The section describes API changes in CloudAPI versions.
 
+## 9.5.0
+- Remove Cloud Analytics endpoints. Cloud Analytics has been deprecated.
+  See [TRITON-884](https://smartos.org/bugview/TRITON-884) for details.
+
 ## 9.4.2
 - The disks.\*.uuid parameter was renamed to disks.\*.id. This change impacts
   [CreateMachine](#CreateMachine), [GetMachine](#GetMachine), and
@@ -1325,7 +1233,7 @@ or
 This part of the API is the means by which you operate on your SSH/signing keys.
 These keys are needed in order to login to instances over SSH, as well as signing
 requests to this API (see the HTTP Signature Authentication Scheme outlined in
-[Appendix C](#Appendix-C) for more details).
+[Appendix B](#appendix-b-http-signature-authentication) for more details).
 
 Currently CloudAPI supports uploads of public keys in the OpenSSH format.
 
@@ -2629,7 +2537,7 @@ ResourceNotFound | If `:account` or `:role` do not exist
 Sets the given role tags to the provided resource path. `resource_path`
 can be the path to any of the CloudAPI resources described in this document:
 account, keys, users, roles, policies, user's ssh keys, datacenters, images,
-packages, instances, analytics, instrumentations, firewall rules and networks.
+packages, instances, firewall rules and networks.
 
 For each of these you can set role tags either for an individual resource or
 for the whole group; i.e., you can set role tags for all the instances using:
@@ -7103,264 +7011,82 @@ instance.
 
 
 
-# Analytics
-
-It is strongly recommended that before you read the API documentation for
-Analytics, you first read through
-[Appendix B: Cloud Analytics](#appendix-b-cloud-analytics). Most supporting
-documentation and explanation of types and interactions are described there.
-
-
-## DescribeAnalytics (GET /:login/analytics)
-
-Supports retrieving the "schema" for instrumentations which can be created using
-the analytics endpoint.
-
-### Inputs
-
-* None
-
-### Returns
-
-A large object that reflects the analytics available to you.
-
-Each of the items listed below is an object; the keys in each are what can be
-used. For example, in 'modules', you'll get something like:
-
-    {
-      "modules": {
-        "cpu": { "label": "CPU" },
-        "memory": { "label": "Memory" },
-        ...
-      },
-      "fields": {
-        "hostname": {
-          "label": "server hostname",
-          "type": "string"
-        },
-        "runtime": {
-          "label": "time on CPU",
-          "type": "time"
-        },
-        "zonename": {
-          "label": "zone name",
-          "type": "string"
-        }
-      },
-      "types": {
-        "string": {
-          "arity": "discrete",
-          "unit": ""
-        },
-        "size": {
-          "arity": "numeric",
-          "unit": "bytes",
-          "abbr": "B",
-          "base": 2,
-        },
-        "time": {
-          "arity": "numeric",
-          "unit": "seconds",
-          "abbr": "s",
-          "base": 10,
-          "power": -9,
-        }
-      },
-      "metrics": [ {
-        "module": "cpu",
-        "stat": "thread_executions",
-        "label": "thread executions",
-        "interval": "interval",
-        "fields": [ "hostname", "zonename", "runtime" ],
-        "unit": "operations"
-      }, {
-        "module": "memory",
-        "stat": "rss",
-        "label": "resident set size",
-        "interval": "point",
-        "fields": [ "hostname", "zonename" ],
-        "type": "size"
-      } ],
-      "transformations": {
-        "geolocate": {
-          "label": "geolocate IP addresses",
-          "fields": [ "raddr" ]
-        },
-        "reversedns": {
-          "label": "reverse dns IP addresses lookup",
-          "fields": [ "raddr" ]
-        }
-      }
-    }
-
-You can use `cpu`, `memory` as module parameters to the other APIs.
-
-**Field**       | **Type**
---------------- | --------
-modules         | Object
-fields          | Object
-types           | Object
-metrics         | Object
-transformations | Object
-
-Each of these objects is discussed below:
+# FirewallRules
 
-#### Modules
+You can manage Firewall Rules for your instances through CloudAPI.
 
-Each metric is identified by both a `module` and `stat` name.  Modules exist
-as namespaces to organize metrics.  A module configuration looks like this:
 
-    "modules": {
-      "cpu": {
-        "label": "CPU" },
-        "memory": { "label": "Memory" },
-        ...
-      }
+## Firewall Rule Syntax
 
-Each module has a name (its key in the "modules" structure), and an object with
-a single field called `label`, which is its human-readable label.
+In general, the firewall rule is composed of the following pieces:
 
-#### Metrics
+    FROM <target a> TO <target b> <action> <protocol> <port> [<priority>]
 
-Metrics describe quantities which can be measured by the system.  Data is not
-collected for metrics unless an instrumentation has been configured for it.
+where
 
-    "metrics": [ {
-      "module": "cpu",
-      "stat": "thread_executions",
-      "label": "thread executions",
-      "interval": "interval",
-      "fields": [ "hostname", "zonename", "runtime" ],
-      "unit": "operations"
-    }, {
-      "module": "memory",
-      "stat": "rss",
-      "label": "resident set size",
-      "interval": "point",
-      "fields": [ "hostname", "zonename" ],
-      "type": "size"
-    } ]
+* `target` will be one of `any`, `all vms`, `ip`, `subnet`, `tag` or `vm`
+* `action` is either `ALLOW` or `BLOCK`
+* `protocol` will be one of `tcp`, `udp` or `icmp`
+* `port` is a valid port number or range (e.g. `port 22`, `ports 8000 - 8999`)
+* `priority` is a number between 0 and 100 (default is 0, the lowest priority)
 
-Each metric has the following properties:
+The use of `priority` is available only with fwapi `FWRULE_VERSION` 4 or above. See
+fwapi [documentation](https://github.com/joyent/sdc-fwapi/blob/master/docs/index.md)
+for more information.
 
-**Field** | **Type** | **Description**
---------- | -------- | ---------------
-module    | String   | With stat, a unique metric identifier
-stat      | String   | With module, a unique metric identifier
-label     | String   | A human-readable metric description
-interval  | String   | Either "interval" or "point", indicating whether the value of this metric covers activity over an *interval* of time or a snapshot of state at a particular *point* in time
-fields    | Array    | A list of fields to be used for predicates and decompositions
-type      | String   | Type or unit used to display labels for values of this metric
+The rule should have `tag`, `vm` or `all vms` in the FROM or TO target. The
+following are some possibilities:
 
-#### Fields
+### Allow incoming HTTP traffic to an instance:
 
-Fields represent metadata by which data points can be filtered or decomposed.
+    FROM any TO vm 0abeae82-c040-4080-ac60-b60d3e3890a7 ALLOW tcp port 80
 
-    "fields": {
-      "pid": {
-        "label": "process identifier",
-        "type": "string"
-      },
-      "execname": {
-        "label": "application name",
-        "type": "string"
-      },
-      "psargs": {
-        "label": "process arguments",
-        "type": "string"
-      },
-      ...
+### Block outgoing SMTP traffic from an instance to a subnet:
 
-Each field has the following properties:
+    FROM vm 0abeae82-c040-4080-ac60-b60d3e3890a7 TO subnet 10.99.99.0/24 BLOCK tcp port 25
 
-**Field** | **Type** | **Description**
---------- | -------- | ---------------
-label     | String   | Human-readable description of the field
-type      | String   | Type of the field, which determines how to label it, as well as whether the field is numeric or discrete
+### Block incoming TCP traffic from all instances to a certain range of ports:
 
-Fields are either numeric or discrete based on the "arity" of their type.
+    FROM any TO vm 0abeae82-c040-4080-ac60-b60d3e3890a7 BLOCK tcp ports 40000 - 65535
 
-###### Numeric fields
+### Allow an IP HTTP and HTTPS access to all instances tagged www or testwww:
 
-* In predicates, values of numeric fields can be compared using numeric equality
-  and inequality operators (=, <, >, etc).
-* In decompositions, a numeric field yields a numeric decomposition (see
-  "Numeric decompositions" above).
+    FROM ip 10.99.99.7 TO (tag www OR tag testwww) ALLOW tcp (port 80 AND port 443)
 
-###### Discrete fields
+### Allow syslog traffic from instances tagged with group=web to instances tagged with group=mon:
 
-* In predicates, values of discrete fields can only be compared using string
-  equality.
-* In decompositions, a discrete field yields a discrete decomposition (see
-  "Discrete decompositions" above).
+    FROM tag group=www TO tag group=mon ALLOW udp port 514
 
-Note that some fields look like numbers but are used by software as identifiers,
-and so are actually discrete fields.  Examples include process identifiers,
-which are numbers, but don't generally make sense comparing using inequalities
-or decomposing to get a numeric distribution.
+### Allow traffic from anyone but 10.20.30.0/24 to access an MTA:
 
-#### Types
+    FROM any TO tag mta ALLOW tcp PORT 25
+    FROM subnet 10.20.30.0/24 TO tag mta BLOCK tcp PORT 25 PRIORITY 1
 
-Types are used with both metrics and fields for two purposes: to hint to clients
-at how to best label values, and to distinguish between numeric and discrete
-quantities.
+### Block all outbound traffic, overriding the default outbound policy, except for SSH:
 
-    "types": {
-      "string": {
-        "arity": "discrete",
-        "unit": ""
-      },
-      "size": {
-        "arity": "numeric",
-        "unit": "bytes",
-        "abbr": "B",
-        "base": 2,
-      },
-      "time": {
-        "arity": "numeric",
-        "unit": "seconds",
-        "abbr": "s",
-        "base": 10,
-        "power": -9,
-       }
-     }
+    FROM all vms TO any BLOCK tcp PORT all
+    FROM all vms TO any ALLOW tcp PORT 22 PRIORITY 1
 
-Each type has the following properties:
 
-**Field** | **Type** | **Description**
---------- | -------- | ---------------
-arity     | String   | Indicates whether values of this type are "discrete" (e.g. identifiers and other strings), or "numeric" (e.g. measurements)
-unit      | String   | Base unit for this type
-abbr      | String   | (optional) abbreviation for this base unit for this type
-base      | Number   | Indicates that when labeled, this quantity is usually labeled with SI prefixes corresponding to powers of the specified base
-power     | Number   | This indicates that the raw values of this type are expressed in units corresponding to base raised to power
+## ListFirewallRules (GET /:login/fwrules)
 
-#### Transformations
+List all firewall rules for the current account.
 
-Transformations are post-processing functions that can be applied to data when
-it's retrieved.
+### Inputs
 
-    "transformations": {
-      "geolocate": {
-        "label": "geolocate IP addresses",
-        "fields": [ "raddr" ]
-      },
-      "reversedns": {
-        "label": "reverse dns IP addresses lookup",
-        "fields": [ "raddr" ]
-      }
-    }
+* None
 
-Each transformation has the following properties:
+### Returns
 
-**Field** | **Type** | **Description**
---------- | -------- | ---------------
-label     | String   | Human-readable string
-fields    | Array    | List of field names that can be transformed
+An array of firewall rule objects.  Firewall Rules are:
 
-The above transformations transform values of the "raddr" (remote address) field
-of any metric to either an object with geolocation details, or an array of
-reverse-DNS hostnames, respectively.
+**Field**   | **Type** | **Description**
+----------- | -------- | ---------------
+id          | String   | Unique identifier for this rule
+enabled     | Boolean  | Indicates if the rule is enabled
+rule        | String   | Firewall rule text
+global      | Boolean  | Indicates if the rule is global (optional)
+description | String   | Human-readable description for the rule (optional)
 
 ### Errors
 
@@ -7372,50 +7098,49 @@ ResourceNotFound | If `:login` does not exist
 
 ### CLI Command
 
-    $ sdc-describeanalytics
+    $ triton fwrule list
 
-### Example Request
+or
 
-    GET /my/analytics HTTP/1.1
-    Authorization: ...
-    Host: api.example.com
-    Accept: application/json
-    Api-Version: ~8
+    $ sdc-listfirewallrules
 
-### Example Response
+#### Example Request
+
+    GET /login/fwrules HTTP/1.1
+    authorization: Signature keyId="...
+    accept: application/json
+    accept-version: ~8
+    host: api.example.com
+    connection: keep-alive
+
+#### Example Response
 
     HTTP/1.1 200 OK
-    Access-Control-Allow-Origin: *
-    Access-Control-Allow-Methods: GET, POST
-    Server: Joyent Triton 8.0.0
-    Connection: close
-    Date: Wed, 13 Apr 2011 23:40:30 GMT
-    Api-Version: 8.0.0
-    Request-Id: 83BB32FC-1F65-4FEB-871E-BABCD96D588D
-    Response-Time: 285
-    Content-Type: application/json
-    Content-Length: 2806
-    Content-MD5: M4mXJlxSgflBnhXPYYCp1g==
+    content-type: application/json
+    content-length: 158
+    access-control-allow-origin: *
+    access-control-allow-headers: Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, Api-Version, Response-Time
+    access-control-allow-methods: GET
+    access-control-expose-headers: Api-Version, Request-Id, Response-Time
+    connection: Keep-Alive
+    content-md5: v6s92rl/nTS2Ts5CNDcgQw==
+    server: Joyent Triton 8.0.0
+    api-version: 8.0.0
+    request-id: 35147710-7f49-11e2-8585-bd5fc323c72c
+    response-time: 134
 
-    {
-      "modules": {
-        "cpu": {
-          "label": "CPU"
-        },
-        "fs": {
-          "label": "Filesystem"
-        },
-        "node": {
-          "label": "Node.js 0.4.x"
-        }
-      },
-      // ....
-    }
+    [
+      {
+        "id": "38de17c4-39e8-48c7-a168-0f58083de860",
+        "rule": "FROM vm 3d51f2d5-46f2-4da5-bb04-3238f2f64768 TO subnet 10.99.99.0/24 BLOCK tcp PORT 25",
+        "enabled": true
+      }
+    ]
 
 
-## ListInstrumentations (GET /:login/analytics/instrumentations)
+## GetFirewallRule (GET /:login/fwrules/:id)
 
-Retrieves all currently created instrumentations.
+Retrieves an individual firewall rule.
 
 ### Inputs
 
@@ -7423,25 +7148,13 @@ Retrieves all currently created instrumentations.
 
 ### Returns
 
-An array of instrumentations:
-
-**Field**       | **Type**
---------------- | --------
-module          | String
-stat            | String
-predicate       | String
-decomposition   | Array
-value-dimension | Number
-value-arity     | String
-retention-time  | Number
-granularity     | Number
-idle-max        | Number
-transformations | Array
-persist-data    | Boolean
-crtime          | Number
-value-scope     | String
-id              | String
-uris            | Array
+**Field**   | **Type** | **Description**
+----------- | -------- | ---------------
+id          | String   | Unique identifier for this rule
+enabled     | Boolean  | Indicates if the rule is enabled
+rule        | String   | Firewall rule text
+global      | Boolean  | Indicates if the rule is global (optional)
+description | String   | Human-readable description for the rule (optional)
 
 ### Errors
 
@@ -7453,84 +7166,65 @@ ResourceNotFound | If `:login` does not exist
 
 ### CLI Command
 
-    $ sdc-listinstrumentations
+    $ triton fwrule get 38de17c4-39e8-48c7-a168-0f58083de860
 
-### Example Request
+or
 
-    GET /my/analytics/instrumentations HTTP/1.1
-    Authorization: ...
-    Host: api.example.com
-    Accept: application/json
-    Api-Version: ~8
+    $ sdc-getfirewallrule 38de17c4-39e8-48c7-a168-0f58083de860
 
-### Example Response
+#### Example Request
+
+    GET /login/fwrules/38de17c4-39e8-48c7-a168-0f58083de860 HTTP/1.1
+    authorization: Signature keyId="...
+    accept: application/json
+    accept-version: ~8
+    host: api.example.com
+
+#### Example Response
 
     HTTP/1.1 200 OK
-    Access-Control-Allow-Origin: *
-    Access-Control-Allow-Methods: GET, POST
-    Server: Joyent Triton 8.0.0
-    Connection: close
-    Date: Wed, 13 Apr 2011 23:49:40 GMT
-    Api-Version: 8.0.0
-    Request-Id: 99839114-1B59-4733-AC64-A93144CA7D8B
-    Response-Time: 48
-    Content-Type: application/json
-    Content-Length: 1062
-    Content-MD5: 8dSboZrGVMsaRYWGFbq88A==
+    content-type: application/json
+    content-length: 156
+    access-control-allow-origin: *
+    access-control-allow-headers: Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, Api-Version, Response-Time
+    access-control-allow-methods: GET
+    access-control-expose-headers: Api-Version, Request-Id, Response-Time
+    server: Joyent Triton 8.0.0
+    api-version: 8.0.0
+    request-id: cf1c1340-7f49-11e2-8585-bd5fc323c72c
+    response-time: 203
 
-    [
-      {
-        "module": "syscall",
-        "stat": "syscalls",
-        "predicate": {},
-        "decomposition": [],
-        "value-dimension": 1,
-        "value-arity": "scalar",
-        "enabled": true,
-        "retention-time": 600,
-        "idle-max": 3600,
-        "transformations": {},
-        "nsources": 1,
-        "granularity": 1,
-        "persist-data": false,
-        "crtime": 1309457451143,
-        "value-scope": "interval",
-        "id": "42",
-        "uris": [{
-          "uri": "/admin/analytics/instrumentations/42/value/raw",
-          "name": "value_raw"
-        }]
-      }
+    {
+      "id": "38de17c4-39e8-48c7-a168-0f58083de860",
+      "rule": "FROM vm 3d51f2d5-46f2-4da5-bb04-3238f2f64768 TO subnet 10.99.99.0/24 BLOCK tcp PORT 25",
+      "enabled": true
     }
 
 
-## GetInstrumentation (GET /:login/analytics/instrumentations/:id)
+## CreateFirewallRule (POST /:login/fwrules)
 
-Retrieves the configuration for an instrumentation.
+Adds a new firewall rule for the specified account.  This rule will be added to
+all the account's instances where it may be necessary.
 
 ### Inputs
 
-* None
+**Field**   | **Type** | **Description**
+----------- | -------- | ---------------
+enabled     | Boolean  | Indicates if the rule is enabled (optional, false by default)
+rule        | String   | Firewall rule text
+description | String   | Human-readable description for the rule (optional)
 
 ### Returns
 
-**Field**       | **Type**
---------------- | --------
-module          | String
-stat            | String
-predicate       | String
-decomposition   | Array
-value-dimension | Number
-value-arity     | String
-retention-time  | Number
-granularity     | Number
-idle-max        | Number
-transformations | Array
-persist-data    | Boolean
-crtime          | Number
-value-scope     | String
-id              | String
-uris            | Array
+Firewall rule object.
+
+**Field**   | **Type** | **Description**
+----------- | -------- | ---------------
+id          | String   | Unique identifier for this rule
+enabled     | Boolean  | Indicates if the rule is enabled
+rule        | String   | Firewall rule text
+global      | Boolean  | Indicates if the rule is global (optional)
+description | String   | Human-readable description for the rule (optional)
 
 ### Errors
 
@@ -7538,645 +7232,17 @@ For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses)
 
 **Error Code**   | **Description**
 ---------------- | ---------------
-ResourceNotFound | If `:login` or `:id` does not exist
+InvalidArgument  | If rule is invalid
+MissingParameter | If rule wasn't provided
+ResourceNotFound | If `:login` does not exist
 
 ### CLI Command
 
-    $ sdc-getinstrumentation 1
+    $ triton fwrule create '...'
 
-### Example Request
+or
 
-    GET /my/analytics/instrumentations/1 HTTP/1.1
-    Authorization: ...
-    Host: api.example.com
-    Accept: application/json
-    Api-Version: ~8
-
-### Example Response
-
-    HTTP/1.1 200 OK
-    Location: /my/analytics/instrumentations/1
-    Access-Control-Allow-Origin: *
-    Access-Control-Allow-Methods: GET, DELETE
-    Server: Joyent Triton 8.0.0
-    Connection: close
-    Date: Wed, 13 Apr 2011 23:53:29 GMT
-    Api-Version: 8.0.0
-    Request-Id: E79B48A2-EC5B-475E-A473-1AF0053FCF4F
-    Response-Time: 60
-    Content-Type: application/json
-    Content-Length: 530
-    Content-MD5: kOuwnsK6U9yQY7MpN3lEvQ==
-
-    {
-      "module": "syscall",
-      "stat": "syscalls",
-      "predicate": {},
-      "decomposition": [],
-      "value-dimension": 1,
-      "value-arity": "scalar",
-      "enabled": true,
-      "retention-time": 600,
-      "idle-max": 3600,
-      "transformations": {},
-      "nsources": 1,
-      "granularity": 1,
-      "persist-data": false,
-      "crtime": 1309374801692,
-      "value-scope": "interval",
-      "id": "2",
-      "uris": [
-        {
-          "uri": "/my/analytics/instrumentations/2/value/raw",
-          "name": "value_raw"
-        }
-      ]
-    }
-
-
-## GetInstrumentationValue (GET /:login/analytics/instrumentations/:id/value/raw)
-
-Retrieves the data associated with an instrumentation for point(s) in time.
-
-### Inputs
-
-* None
-
-### Returns
-
-**Field**  | **Type**
----------- | --------
-value      | Object
-transformations | Object
-start_time | Number
-duration   | Number
-
-### Errors
-
-For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
-
-**Error Code**   | **Description**
----------------- | ---------------
-ResourceNotFound | If `:login` or `:id` does not exist
-
-### CLI Command
-
-    $ sdc-getinstrumentation --value 1
-
-### Example Request
-
-    GET /my/analytics/instrumentations/1/value/raw
-    Host: api.example.com
-    Authorization: ...
-    Accept: application/json
-    Api-Version: ~8
-
-### Example Response
-
-    HTTP/1.1 200 OK
-    Access-Control-Allow-Origin: *
-    Access-Control-Allow-Methods: GET, DELETE
-    Server: Joyent Triton 8.0.0
-    Connection: close
-    Date: Wed, 13 Apr 2011 23:53:29 GMT
-    Api-Version: 8.0.0
-    Request-Id: E79B48A2-EC5B-475E-A473-1AF0053FCF4F
-    Response-Time: 60
-    Content-Type: application/json
-    Content-Length: 530
-    Content-MD5: kOuwnsK6U9yQY7MpN3lEvQ==
-
-    {
-      "value": [
-        [ [ 17000, 17999 ], 12 ],
-        [ [ 18000, 18999 ], 12 ],
-        ...
-      ],
-      "transformations": {},
-      "start_time": 1309383598,
-      "duration": 1,
-      "nsources": 1,
-      "minreporting": 1,
-      "requested_start_time": 1309383598,
-      "requested_duration": 1,
-      "requested_end_time": 1309383599
-    }
-
-
-## GetInstrumentationHeatmap (GET /:login/analytics/instrumentations/:id/value/heatmap/image)
-
-Retrieves metadata and a base64-encoded PNG image of a particular
-instrumentation's heatmap.
-
-### Inputs
-
-**Field** | **Type** | **Description**
---------- | -------- | ---------------
-height    | Number   | Height of the image in pixels
-width     | Number   | Width of the image in pixels
-ymin      | Number   | Y-Axis value for the bottom of the image (default: 0)
-ymax      | Number   | Y-Axis value for the top of the image (default: auto)
-nbuckets  | Number   | Number of buckets in the vertical dimension
-selected  | Array    | Array of field values to highlight, isolate or exclude
-isolate   | Boolean  | If true, only draw selected values
-exclude   | Boolean  | If true, don't draw selected values at all
-hues      | Array    | Array of colors for highlighting selected field values
-decompose_all |Boolean | Highlight all field values (possibly reusing hues)
-
-### Returns
-
-**Field**   | **Type** | **Description**
------------ | -------- | ---------------
-bucket_time | Number   | Time corresponding to the bucket (Unix seconds)
-bucket_ymin | Number   | Minimum y-axis value for the bucket
-bucket_ymax | Number   | Maximum y-axis value for the bucket
-present     | Object   | If the instrumentation defines a discrete decomposition, this property's value is an object whose keys are values of that field and whose values are the number of data points in that bucket for that key
-total       | Number   | The total number of data points in the bucket
-
-### Errors
-
-For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
-
-**Error Code**   | **Description**
----------------- | ---------------
-ResourceNotFound | If `:login` or `:id` does not exist
-InvalidArgument  | If input values were incorrect
-
-### CLI Command
-
-* None
-
-### Example Request
-
-    GET /my/analytics/instrumentations/1/heatmap/image HTTP/1.1
-    Authorization: ...
-    Host: api.example.com
-    Accept: application/json
-    Api-Version: ~8
-
-### Example Response
-
-    HTTP/1.1 200 OK
-    Access-Control-Allow-Origin: *
-    Access-Control-Allow-Methods: GET
-    Connection: close
-    Date: Wed, 29 Jun 2011 23:57:44 GMT
-    Server: Joyent Triton 8.0.0
-    Api-Version: 8.0.0
-    Request-Id: 3d511185-36b8-4699-9cdd-a67bf8be7a6d
-    Response-Time: 109
-    Content-Type: application/json
-    Content-MD5: r5tPNDLr1HQE1tsLNqPbvg==
-    Content-Length: 2052
-
-    {
-      "nbuckets": 100,
-      "width": 600,
-      "height": 300,
-      "ymin": 0,
-      "ymax": 400000,
-      "present": [],
-      "transformations": {},
-      "image": "iVBORw0KGgoAAA...",
-      "start_time": 1309391804,
-      "duration": 60,
-      "nsources": 1,
-      "minreporting": 1,
-      "requested_start_time": 1309391804,
-      "requested_duration": 60,
-      "requested_end_time": 1309391864
-      }
-
-
-## GetInstrumentationHeatmapDetails (GET /:login/analytics/instrumentations/:id/value/heatmap/details)
-
-Allows you to retrieve the bucket details for a heatmap.
-
-### Inputs
-
-Takes all the same parameters as
-[GetInstrumentationHeatmap](#GetInstrumentationHeatmap), and additionally:
-
-**Field** | **Type**
---------- | --------
-x         | Number
-y         | Number
-
-### Returns
-
-The returned value includes:
-
-**Field**   | **Type**
------------ | --------
-bucket_time | Number
-bucket_ymin | Number
-bucket_ymax | Number
-present     | Object
-total       | Number
-
-### Errors
-
-### CLI Command
-
-* None
-
-### Example Request
-
-* TODO
-
-### Example Response
-
-* TODO
-
-
-## CreateInstrumentation (POST /:login/analytics/instrumentations)
-
-Creates an instrumentation.  Note you can clone an existing instrumentation
-by passing in the parameter `clone`, which should be a numeric id of an
-existing instrumentation.
-
-### Inputs
-
-**Field**     | **Type** | **Description**
-------------- | -------- | ---------------
-clone         | Number   | An existing instrumentation to duplicate (optional)
-module        | String   | The CA module
-stat          | String   | The CA stat
-predicate     | String   | Must be a JSON string
-decomposition | String   | An array of arrays
-granularity   | Number   | Number of seconds between data points (default is 1)
-retention-time| Number   | How long to keep this instrumentation's data for
-persist-data  | Boolean  | Whether or not to store this for historical analysis
-idle-max      | Number   | Number of seconds after which, if the instrumentation or its data has not been accessed via the API, the service may delete the instrumentation and its data
-
-### Returns
-
-**Field**       | **Type**
---------------- | --------
-module          | String
-stat            | String
-predicate       | String
-decomposition   | Array
-value-dimension | Number
-value-arity     | String
-retention-time  | Number
-granularity     | Number
-idle-max        | Number
-transformations | Array
-persist-data    | Boolean
-crtime          | Number
-value-scope     | String
-id              | String
-uris            | Array
-
-### Errors
-
-For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
-
-**Error Code**   | **Description**
----------------- | ---------------
-ResourceNotFound | If `:login` does not exist
-InvalidArgument  | If input values were incorrect
-MissingParameter | If parameter values were missing
-
-### CLI Command
-
-    $ sdc-createinstrumentation --module=syscall --stat=syscalls
-
-### Example Request
-
-    POST /my/analytics/instrumentations HTTP/1.1
-    Authorization: ...
-    Host: api.example.com
-    Accept: application/json
-    Api-Version: ~8
-    Content-Length: 12
-    Content-Type: application/x-www-form-urlencoded
-
-    module=syscall&stat=syscalls
-
-### Example Response
-
-    HTTP/1.1 201 Created
-    Location: https://api.example.com/my/analytics/instrumentations/2
-    Access-Control-Allow-Origin: *
-    Access-Control-Allow-Methods: GET, POST
-    Server: Joyent Triton 8.0.0
-    Connection: close
-    Date: Wed, 13 Apr 2011 23:43:24 GMT
-    Api-Version: 8.0.0
-    Request-Id: F4238406-ED7D-4938-937B-4E3D0F93D924
-    Response-Time: 1508
-    Content-Type: application/json
-    Content-Length: 544
-    Content-MD5: CrcS3CTR5mwpOvJEx60s1g==
-
-    {
-      "module": "syscall",
-      "stat": "syscalls",
-      "predicate": {},
-      "decomposition": [],
-      "value-dimension": 1,
-      "value-arity": "scalar",
-      "enabled": true,
-      "retention-time": 600,
-      "idle-max": 3600,
-      "transformations": {},
-      "nsources": 1,
-      "granularity": 1,
-      "persist-data": false,
-      "crtime": 1309374801692,
-      "value-scope": "interval",
-      "id": "2",
-      "uris": [
-        {
-          "uri": "/mark/analytics/instrumentations/2/value/raw",
-          "name": "value_raw"
-        }
-      ]
-    }
-
-
-## DeleteInstrumentation (DELETE /:login/analytics/instrumentations/:id)
-
-Destroys an instrumentation.
-
-### Inputs
-
-* None
-
-### Returns
-
-* None
-
-### Errors
-
-For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
-
-**Error Code**   | **Description**
----------------- | ---------------
-ResourceNotFound | If `:login` or `:id` does not exist
-
-### CLI Command
-
-    $ sdc-deleteinstrumentation 1
-
-#### Example Request
-
-    DELETE /my/analytics/instrumentations/1 HTTP/1.1
-    Authorization: ...
-    Host: api.example.com
-    Accept: application/json
-    Api-Version: ~8
-
-#### Example Response
-
-    HTTP/1.1 204 No Content
-    Access-Control-Allow-Origin: *
-    Access-Control-Allow-Methods: GET, DELETE
-    Server: Joyent Triton 8.0.0
-    Connection: close
-    Date: Wed, 13 Apr 2011 23:56:29 GMT
-    Api-Version: 8.0.0
-    Request-Id: E4DD448D-F491-4A88-9237-DAF6C4DC782C
-    Response-Time: 49
-    Content-Length: 0
-
-
-
-
-# FirewallRules
-
-You can manage Firewall Rules for your instances through CloudAPI.
-
-
-## Firewall Rule Syntax
-
-In general, the firewall rule is composed of the following pieces:
-
-    FROM <target a> TO <target b> <action> <protocol> <port> [<priority>]
-
-where
-
-* `target` will be one of `any`, `all vms`, `ip`, `subnet`, `tag` or `vm`
-* `action` is either `ALLOW` or `BLOCK`
-* `protocol` will be one of `tcp`, `udp` or `icmp`
-* `port` is a valid port number or range (e.g. `port 22`, `ports 8000 - 8999`)
-* `priority` is a number between 0 and 100 (default is 0, the lowest priority)
-
-The use of `priority` is available only with fwapi `FWRULE_VERSION` 4 or above. See
-fwapi [documentation](https://github.com/joyent/sdc-fwapi/blob/master/docs/index.md)
-for more information.
-
-The rule should have `tag`, `vm` or `all vms` in the FROM or TO target. The
-following are some possibilities:
-
-### Allow incoming HTTP traffic to an instance:
-
-    FROM any TO vm 0abeae82-c040-4080-ac60-b60d3e3890a7 ALLOW tcp port 80
-
-### Block outgoing SMTP traffic from an instance to a subnet:
-
-    FROM vm 0abeae82-c040-4080-ac60-b60d3e3890a7 TO subnet 10.99.99.0/24 BLOCK tcp port 25
-
-### Block incoming TCP traffic from all instances to a certain range of ports:
-
-    FROM any TO vm 0abeae82-c040-4080-ac60-b60d3e3890a7 BLOCK tcp ports 40000 - 65535
-
-### Allow an IP HTTP and HTTPS access to all instances tagged www or testwww:
-
-    FROM ip 10.99.99.7 TO (tag www OR tag testwww) ALLOW tcp (port 80 AND port 443)
-
-### Allow syslog traffic from instances tagged with group=web to instances tagged with group=mon:
-
-    FROM tag group=www TO tag group=mon ALLOW udp port 514
-
-### Allow traffic from anyone but 10.20.30.0/24 to access an MTA:
-
-    FROM any TO tag mta ALLOW tcp PORT 25
-    FROM subnet 10.20.30.0/24 TO tag mta BLOCK tcp PORT 25 PRIORITY 1
-
-### Block all outbound traffic, overriding the default outbound policy, except for SSH:
-
-    FROM all vms TO any BLOCK tcp PORT all
-    FROM all vms TO any ALLOW tcp PORT 22 PRIORITY 1
-
-
-## ListFirewallRules (GET /:login/fwrules)
-
-List all firewall rules for the current account.
-
-### Inputs
-
-* None
-
-### Returns
-
-An array of firewall rule objects.  Firewall Rules are:
-
-**Field**   | **Type** | **Description**
------------ | -------- | ---------------
-id          | String   | Unique identifier for this rule
-enabled     | Boolean  | Indicates if the rule is enabled
-rule        | String   | Firewall rule text
-global      | Boolean  | Indicates if the rule is global (optional)
-description | String   | Human-readable description for the rule (optional)
-
-### Errors
-
-For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
-
-**Error Code**   | **Description**
----------------- | ---------------
-ResourceNotFound | If `:login` does not exist
-
-### CLI Command
-
-    $ triton fwrule list
-
-or
-
-    $ sdc-listfirewallrules
-
-#### Example Request
-
-    GET /login/fwrules HTTP/1.1
-    authorization: Signature keyId="...
-    accept: application/json
-    accept-version: ~8
-    host: api.example.com
-    connection: keep-alive
-
-#### Example Response
-
-    HTTP/1.1 200 OK
-    content-type: application/json
-    content-length: 158
-    access-control-allow-origin: *
-    access-control-allow-headers: Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, Api-Version, Response-Time
-    access-control-allow-methods: GET
-    access-control-expose-headers: Api-Version, Request-Id, Response-Time
-    connection: Keep-Alive
-    content-md5: v6s92rl/nTS2Ts5CNDcgQw==
-    server: Joyent Triton 8.0.0
-    api-version: 8.0.0
-    request-id: 35147710-7f49-11e2-8585-bd5fc323c72c
-    response-time: 134
-
-    [
-      {
-        "id": "38de17c4-39e8-48c7-a168-0f58083de860",
-        "rule": "FROM vm 3d51f2d5-46f2-4da5-bb04-3238f2f64768 TO subnet 10.99.99.0/24 BLOCK tcp PORT 25",
-        "enabled": true
-      }
-    ]
-
-
-## GetFirewallRule (GET /:login/fwrules/:id)
-
-Retrieves an individual firewall rule.
-
-### Inputs
-
-* None
-
-### Returns
-
-**Field**   | **Type** | **Description**
------------ | -------- | ---------------
-id          | String   | Unique identifier for this rule
-enabled     | Boolean  | Indicates if the rule is enabled
-rule        | String   | Firewall rule text
-global      | Boolean  | Indicates if the rule is global (optional)
-description | String   | Human-readable description for the rule (optional)
-
-### Errors
-
-For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
-
-**Error Code**   | **Description**
----------------- | ---------------
-ResourceNotFound | If `:login` does not exist
-
-### CLI Command
-
-    $ triton fwrule get 38de17c4-39e8-48c7-a168-0f58083de860
-
-or
-
-    $ sdc-getfirewallrule 38de17c4-39e8-48c7-a168-0f58083de860
-
-#### Example Request
-
-    GET /login/fwrules/38de17c4-39e8-48c7-a168-0f58083de860 HTTP/1.1
-    authorization: Signature keyId="...
-    accept: application/json
-    accept-version: ~8
-    host: api.example.com
-
-#### Example Response
-
-    HTTP/1.1 200 OK
-    content-type: application/json
-    content-length: 156
-    access-control-allow-origin: *
-    access-control-allow-headers: Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, Api-Version, Response-Time
-    access-control-allow-methods: GET
-    access-control-expose-headers: Api-Version, Request-Id, Response-Time
-    server: Joyent Triton 8.0.0
-    api-version: 8.0.0
-    request-id: cf1c1340-7f49-11e2-8585-bd5fc323c72c
-    response-time: 203
-
-    {
-      "id": "38de17c4-39e8-48c7-a168-0f58083de860",
-      "rule": "FROM vm 3d51f2d5-46f2-4da5-bb04-3238f2f64768 TO subnet 10.99.99.0/24 BLOCK tcp PORT 25",
-      "enabled": true
-    }
-
-
-## CreateFirewallRule (POST /:login/fwrules)
-
-Adds a new firewall rule for the specified account.  This rule will be added to
-all the account's instances where it may be necessary.
-
-### Inputs
-
-**Field**   | **Type** | **Description**
------------ | -------- | ---------------
-enabled     | Boolean  | Indicates if the rule is enabled (optional, false by default)
-rule        | String   | Firewall rule text
-description | String   | Human-readable description for the rule (optional)
-
-### Returns
-
-Firewall rule object.
-
-**Field**   | **Type** | **Description**
------------ | -------- | ---------------
-id          | String   | Unique identifier for this rule
-enabled     | Boolean  | Indicates if the rule is enabled
-rule        | String   | Firewall rule text
-global      | Boolean  | Indicates if the rule is global (optional)
-description | String   | Human-readable description for the rule (optional)
-
-### Errors
-
-For all possible errors, see [CloudAPI HTTP Responses](#cloudapi-http-responses).
-
-**Error Code**   | **Description**
----------------- | ---------------
-InvalidArgument  | If rule is invalid
-MissingParameter | If rule wasn't provided
-ResourceNotFound | If `:login` does not exist
-
-### CLI Command
-
-    $ triton fwrule create '...'
-
-or
-
-    $ sdc-createfirewallrule --rule='...' --enabled=true
+    $ sdc-createfirewallrule --rule='...' --enabled=true
 
 #### Example Request
 
@@ -10571,409 +9637,7 @@ doing:
     });
 
 
-
-
-# Appendix B: Cloud Analytics
-
-Cloud Analytics (CA) provides deep observability for systems and applications in
-a Triton cloud.  The CA service enables you to dynamically instrument
-systems in the cloud to collect performance data that can be visualized in
-real-time (through the portal), or collected using the API and analyzed later by
-custom tools.  This data can be collected and saved indefinitely for capacity
-planning and other historical analysis.
-
-
-## Building blocks: metrics, instrumentations, and fields
-
-A **metric** is any quantity that can be instrumented using CA.  For examples:
-
-* Disk I/O operations
-* Kernel thread executions
-* TCP connections established
-* MySQL queries
-* HTTP server operations
-* System load average
-
-Each metric also defines which **fields** are available when data is collected.
-These fields can be used to filter or decompose data.  For example, the Disk I/O
-operations metric provides the fields "hostname" (for the current server's
-hostname) and "disk" (for the name of the disk actually performing an
-operation), which allows users to filter out data from a physical server or
-break out the number of operations by disk.
-
-You can list the available metrics using the
-[DescribeAnalytics](#DescribeAnalytics) API. E.g.:
-
-    {
-      "metrics": [
-        {
-          "module": "fs",
-          "stat": "logical_ops",
-          "label": "logical filesystem operations",
-          "interval": "interval",
-          "fields": ["pid","execname",...,"fstype","optype","latency"],
-          "unit": "operations"
-        }, ...  ], ...
-    }
-
-The `module` and `stat` properties together identify a metric.
-
-When you want to actually gather data for a metric, you create an
-**instrumentation**.  The instrumentation specifies:
-
-* which metric to collect
-* an optional **predicate** based on the metric's fields (e.g. only collect
-  data from certain hosts, or data for certain operations)
-* an optional **decomposition** based on the metric's fields (e.g. break down
-  the results by server hostname)
-* how frequently to aggregate data (e.g. every second, every hour, etc.)
-* how much data to keep (e.g. 10 minutes' worth, 6 months' worth, etc.)
-* other configuration options
-
-Continuing the above example, if the system provides the metric "FS Operations"
-with fields "optype" and "latency", an example instrumentation might specify:
-
-* to collect data for the "FS Operations" metric (the *metric*)
-* to collect only data for read operations (a *predicate*)
-* to break out the results by latency (a *decomposition*)
-
-    $ sdc-createinstrumentation --module=fs --stat=logical_ops --decomposition=latency --predicate='{"eq": ["optype","read"]}'
-
-When we create an instrumentation, the system dynamically instruments the
-relevant software and starts gathering data.  The data is made available
-immediately in real-time.  To get the data for a particular point in time, you
-retrieve the **value** of the instrumentation for that time:
-
-    $ sdc-getinstrumentation --value 4
-    {
-      "value": [
-        [ [ 17000, 17999 ], 12 ],
-        [ [ 18000, 18999 ], 12 ],
-        ...
-      ],
-      "transformations": {},
-      "start_time": 1309383598,
-      "duration": 1,
-      "nsources": 1,
-      "minreporting": 1,
-      "requested_start_time": 1309383598,
-      "requested_duration": 1,
-      "requested_end_time": 1309383599
-    }
-
-To summarize: *metrics* define what data the system is capable of reporting.
-*Fields* enhance the raw numbers with additional metadata about each event that
-can be used for filtering and decomposition.  *Instrumentations* specify which
-metrics to actually collect, what additional information to collect from each
-metric, and how to store that data.  When you want to retrieve that data, you
-query the service for the *value* of the instrumentation.
-
-
-## Values and visualizations
-
-We showed above how fields can be used to decompose results.  Let's look at that
-in more detail.  We'll continue using the "FS Operations" metric with
-fields "optype".
-
-### Scalar values
-
-Suppose we create an instrumentation with no filter and no decomposition.  Then
-the value of the instrumentation for a particular time interval might look
-something like this:
-
-    {
-      start_time: 1308789361,
-      duration: 1,
-      value: 573
-      ...
-    }
-
-In this case, `start_time` denotes the start of the time interval in Unix time,
-`duration` denotes the length of the interval in seconds, and `value` denotes
-the actual value.  This means that 573 FS operations completed on all
-systems for a user in the cloud between times 1308789361 and 1308789362.
-
-### Discrete decompositions
-
-Now suppose we create a new instrumentation with a decomposition by `execname`.
-Then the raw value might look something like this:
-
-    {
-      start_time: 1308789361,
-      duration: 1,
-      value: {
-        ls: 1,
-        cat: 49,
-        ...
-      }
-      ...
-    }
-
-We call the decomposition by `execname` a **discrete decomposition** because the
-possible values of execname ("ls", "cat", ...) are not numbers.
-
-### Numeric decompositions
-
-It's useful to decompose some metrics by numeric fields.  For example, you might
-want to view FS operations decomposed by latency (how long the operation
-took).  The result is a statistical *distribution*, which groups nearby
-latencies into buckets and shows the number of disk I/O operations that fell
-into each bucket. The result looks like this:
-
-    {
-      "start_time": 1308863061,
-      "duration": 1,
-      "value": [
-        [ [ 53000, 53999 ], 4 ],
-        [ [ 54000, 54999 ], 4 ],
-        [ [ 55000, 55999 ], 7 ],
-        ...
-        [ [ 810000, 819999 ], 1 ]
-      ]
-    }
-
-That data indicates that at time 1308863061, the system completed:
-
-* 4 requests with latency between 53 and 54 microseconds,
-* 4 requests with latency between 54 and 55 microseconds,
-* 7 requests between 55 and 56 microseconds, and so on, and finally
-* 1 request with latency between 810 and 820 microseconds.
-
-This type of instrumentation is called a **numeric decomposition**.
-
-### Combining decompositions
-
-It's possible to combine a single discrete and numeric decomposition to produce
-an object mapping discrete key to numeric distribution, whose value looks like
-this:
-
-    {
-      "start_time": 1308863799,
-      "duration": 1,
-      "value": {
-        "ls": [
-          [ [ 110000, 119999 ], 1 ],
-          [ [ 120000, 129999 ], 1 ],
-          ...
-          [ [ 420000, 429999 ], 1 ],
-          [ [ 25000000, 25999999 ], 1 ]
-        ]
-      }
-    }
-
-As we will see, this data allows clients to visualize the distribution of I/O
-latency, and then highlight individual programs in the distribution (or whatever
-field you broke it down along).
-
-### Value-related properties
-
-We can now explain several of the instrumentation properties shown previously:
-
-* `value-dimension`: the number of dimensions in returned values, which is
-  the number of decompositions specified in the instrumentation, plus 1.
-  Instrumentations with no decompositions have dimension 1 (scalar values).
-  Instrumentations with a single discrete or numeric decomposition have value 2
-  (vector values).  Instrumentations with both a discrete and numeric
-  decomposition have value 3 (vector of vectors).
-* `value-arity`: describes the format of individual values
-    * `scalar`: the value is a scalar value (a number)
-    * `discrete-decomposition`: the value is an object mapping discrete keys to
-      scalars
-    * `numeric-decomposition`: the value is either an object (really an array of
-      arrays) mapping buckets (numeric ranges) to scalars, or an object mapping
-      discrete keys to such an object.  That is, a numeric decomposition is one
-      which contains at the leaf a distribution of numbers.
-
-The arity serves as a hint to visualization clients: scalars are typically
-rendered as line or bar graphs, discrete decompositions are rendered as stacked
-or separate line or bar graphs, and numeric decompositions are rendered as
-heatmaps.
-
-### Predicate Syntax
-
-Predicates allow you to filter out data points based on the *fields* of a
-metric.  For example, instead of looking at FS operations for your whole
-cloud, you may only care about operations with latency over 100ms, or on a
-particular instance.
-
-Predicates are represented as JSON objects using an LISP-like syntax.  The
-primary goal for predicate syntax is to be very easy to construct and parse
-automatically, making it easier for people to build tools to work with them.
-
-The following leaf predicates are available:
-
-`{ eq: [ fieldname, value ] }`: equality (string or number, as appropriate).
-`{ ne: [ fieldname, value ] }`: inequality (string or number, as appropriate).
-`{ le: [ fieldname, value ] }`: less than or equal to (numbers only).
-`{ lt: [ fieldname, value ] }`: less than (numbers only).
-`{ ge: [ fieldname, value ] }`: greater than or equal to (numbers only).
-`{ gt: [ fieldname, value ] }`: greater than (numbers only).
-
-Additionally, the following compound predicates are available:
-
-`{ and: [ predicate, ... ] }`: all of subpredicates must be true.
-`{ or: [ predicate, ... ] }`: at least one of subpredicates must be true.
-
-All of these can be combined to form complex filters for drilling down.  For
-example, this predicate:
-
-    {
-      and: {
-        { eq: [ "execname", "mysqld" ] }
-        { gt: [ "latency", 100000000 ] },
-        { or: [
-          { eq: [ "hostname", "host1" ] },
-          { eq: [ "hostname", "host2" ] },
-          { eq: [ "hostname", "host3" ] }
-        ] },
-      }
-    }
-
-This predicate could be used with the "logical filesystem operations" metric to
-identify file operations performed by MySQL on instances "host1", "host2", or
-"host3" that took longer than 100ms.
-
-### Heatmaps
-
-Up to this point we have been showing **raw values**, which are JSON
-representations of the data exactly as gathered by Cloud Analytics. However, the
-service may provide other representations of the same data.  For numeric
-decompositions, the service provides several **heatmap** resources that generate
-heatmaps, like this one:
-
-<img src="media/img/heatmap.png" />
-
-Like raw values, heatmap values are returned using JSON, but instead of
-specifying a `value` property, they specify an `image` property whose contents
-are a base64-encoded PNG image.  For details, see the API reference.  Using the
-API, it's possible to specify the size of the image, the colors used, which
-values of the discrete decomposition to select, and many other properties
-controlling the final result.
-
-Heatmaps also provide a resource for getting the details of a particular heatmap
-bucket, which looks like this:
-
-    {
-      "start_time": 1308865184,
-      "duration": 60,
-      "nbuckets": 100,
-      "width": 600,
-      "height": 300,
-      "bucket_time": 1308865185,
-      "bucket_ymin": 10000,
-      "bucket_ymax": 19999,
-      "present": {
-        "ls": 5,
-        "cat": 57
-      },
-      "total": 1,
-    }
-
-This example indicates the following about the particular heatmap bucket we
-clicked on:
-
-* the time represented by the bucket is 1308865185
-* the bucket covers a latency range between 10 and 20 microseconds
-* at that time and latency range, program `ls` completed 5 operations and
-  program `cat` completed 57 operations.
-
-This level of detail is critical for understanding hot spots or other patterns
-in the heatmap.
-
-
-## Data granularity and data retention
-
-By default, CA collects and saves data each second for ten minutes.  So if you
-create an instrumentation for FS operations, the service will save the
-per-second number of FS operations going back for the last ten minutes.  These
-parameters are configurable using the following instrumentation properties:
-
-* `granularity`: how frequently to aggregate data, in seconds.  The default is
-  one second.  For example, a value of 300 means to aggregate every five
-  minutes' worth of data into a single data point.  The smaller this value, the
-  more space the raw data takes up.  `granularity` cannot be changed after an
-  instrumentation is created.
-* `retention-time`: how long, in seconds, to keep each data point.  The default
-  is 600 seconds (ten minutes).  The higher this value, the more space the raw
-  data takes up.  `retention-time` can be changed after an instrumentation is
-  created.
-
-These values affect the space used by the instrumentation's data.  For example,
-all things being equal, the following all store the same amount of data:
-
-* 10 minutes' worth of per-second data (600 data points)
-* 50 minutes' worth of per-5-second data
-* 25 days' worth of per-hour data
-* 600 days' worth of per-day data
-
-The system imposes limits on these properties so that each instrumentation's
-data cannot consume too much space.  The limits are expressed internally as a
-number of data points, so you can adjust granularity and retention-time to match
-your needs.  Typically, you'll be interested in either per-second data for live
-performance analysis, or an array of different granularities and retention-times
-for historical usage patterns.
-
-
-## Data persistence
-
-By default, data collected by the CA service is only cached in memory, not
-persisted to disk.  As a result, transient failures of the underlying CA service
-instances can result in loss of the collected data.  For live performance
-analysis, this is likely not an issue, since the likelihood of a crash is low
-and the data can probably be collected again.  For historical data being kept
-for days, weeks, or even months, it's necessary to persist data to disk.  This
-can be specified by setting the `persist-data` instrumentation property to
-"true".  In that case, CA will ensure that data is persisted at approximately
-the `granularity` interval of the instrumentation, but no more frequently than
-every few minutes.  (For that reason, there's little value in persisting an
-instrumentation whose retention time is only a few minutes.)
-
-
-## Transformations
-
-Transformations are post-processing functions that can be applied to data when
-it's retrieved.  You do not need to specify transformations when you create an
-instrumentation; you need only specify them when you retrieve the value.
-Transformations map values of a discrete decomposition to something else.  For
-example, a metric that reports HTTP operations decomposed by IP address supports
-a transformation that performs a reverse-DNS lookup on each IP address so that
-you can view the results by hostname instead.  Another transformation maps IP
-addresses to geolocation data for displaying incoming requests on a world map.
-
-Each supported transformation has a name, like "reversedns".  When a
-transformation is requested for a value, the returned value includes a
-`transformations` object with keys corresponding to each transformation (e.g.,
-"reversedns").  Each of these is an object mapping keys of the discrete
-decomposition to transformed values.  For example:
-
-    {
-      "value": {
-        "8.12.47.107": 57
-      },
-      "transformations": {
-        "reversedns": {
-          "8.12.47.107": [ "joyent.com" ]
-        }
-      },
-      "start_time": 1308863799,
-      "duration": 1,
-      "nsources": 1,
-      "minreporting": 1,
-      "requested_start_time": 1308863799,
-      "requested_duration": 1,
-      "requested_end_time": 1308863800
-    }
-
-Transformations are always performed asynchronously and the results cached
-internally for future requests.  So the first time you request a transformation
-like "reversedns", you may see no values transformed at all.  As you retrieve
-the value again, the system will have completed the reverse-DNS lookup for
-addresses in the data and they will be included in the returned value.
-
-
-
-
-# Appendix C: HTTP Signature Authentication
+# Appendix B: HTTP Signature Authentication
 
 In addition to HTTP Basic Authentication, CloudAPI supports a new mechanism for
 authenticating HTTP requests based on signing with your SSH private key.
@@ -11105,7 +9769,7 @@ Sample code for generating the `Authorization` header (and `Date` header):
 
 
 
-# Appendix D: CloudAPI CLI Commands
+# Appendix C: CloudAPI CLI Commands
 
 **`smartdc` Command** | **`triton` Command** | **Description**
 ------------------- | ------------------ | ---------------
@@ -11113,19 +9777,16 @@ Sample code for generating the `Authorization` header (and `Date` header):
 [sdc-chmod](#SetRoleTags)|-|Add role tags to CloudAPI resources.
 [sdc-createfirewallrule](#CreateFirewallRule)|[triton fwrule create](#CreateFirewallRule)|Add a new firewall rule.
 [sdc-createimagefrommachine](#CreateImageFromMachine)|[triton image create](#CreateImageFromMachine)|Create a new custom image from an instance.
-[sdc-createinstrumentation](#CreateInstrumentation)|-|Creates an instrumentation.
 [sdc-createkey](#CreateKey)|[triton key add](#CreateKey)|Uploads a new OpenSSH key to Triton.
 [sdc-createmachine](#CreateMachine)|[triton instance create](#CreateMachine)|Allows you to provision an instance.
 [sdc-createmachinesnapshot](#CreateMachineSnapshot)|[triton instance snapshot create](#CreateMachineSnapshot)|Allows you to take a snapshot of an instance.
 [sdc-deletefirewallrule](#DeleteFirewallRule)|[triton fwrule delete](#DeleteFirewallRule)|Removes a given firewall rule.
 [sdc-deleteimage](#DeleteImage)|[triton image delete](#DeleteImage)|Delete a private image.
-[sdc-deleteinstrumentation](#DeleteInstrumentation)|-|Destroys an instrumentation.
 [sdc-deletekey](#DeleteKey)|[triton key delete](#DeleteKey)|Deletes an SSH key by name.
 [sdc-deletemachine](#DeleteMachine)|[triton instance delete](#DeleteMachine)|Allows you to completely destroy an instance.
 [sdc-deletemachinemetadata](#DeleteMachineMetadata)|-|Deletes a single metadata key from this instance.
 [sdc-deletemachinesnapshot](#DeleteMachineSnapshot)|[triton instance snapshot delete](#DeleteMachineSnapshot)|Deletes the specified snapshot of an instance.
 [sdc-deletemachinetag](#DeleteMachineTag)|[triton instance tag delete](#DeleteMachineTag)|Deletes a single tag from this instance.
-[sdc-describeanalytics](#DescribeAnalytics)| - |Retrieves the "schema" for instrumentations that can be created using the analytics endpoint.
 [sdc-disablefirewallrule](#DisableFirewallRule)|[triton fwrule disable](#DisableFirewallRule)|Disable an enabled firewall rule.
 [sdc-disablemachinefirewall](#DisableMachineFirewall)|[triton instance disable-firewall](#DisableMachineFirewall)|Completely disable the firewall on an instance.
 [sdc-enablefirewallrule](#EnableFirewallRule)|[triton fwrule enable](#EnableFirewallRule)|Enable a disabled firewall rule.
@@ -11135,7 +9796,6 @@ Sample code for generating the `Authorization` header (and `Date` header):
 [sdc-getaccount](#GetAccount)|[triton account get](#GetAccount)|Gets details about your account.
 [sdc-getfirewallrule](#GetFirewallRule)|[triton fwrule get](#GetFirewallRule)|Get details about a specific firewall rule.
 [sdc-getimage](#GetImage)|[triton image get](#GetImage)|Gets an individual image by id.
-[sdc-getinstrumentation](#GetInstrumentation)|-|Retrieves the configuration for an instrumentation.
 [sdc-getkey](#GetKey)|[triton key get](#GetKey)|Retrieves an individual key record.
 [sdc-getmachine](#GetMachine)|[triton instance get](#GetMachine)|Gets the details for an individual instance.
 [sdc-getmachineaudit](#MachineAudit)|[triton instance audit](#MachineAudit)|Get a historical list of actions performed on an instance.
@@ -11148,7 +9808,6 @@ Sample code for generating the `Authorization` header (and `Date` header):
 [sdc-listdatacenters](#ListDatacenters)|[triton datacenters](#ListDatacenters)|Provides a list of all datacenters this cloud is aware of.
 [sdc-listfirewallrules](#ListFirewallRules)|[triton fwrule list](#ListFirewallRules)|List all firewall rules applying to this account.
 [sdc-listimages](#ListImages)|[triton image list](#ListImages)|Provides a list of images available in this datacenter.
-[sdc-listinstrumentations](#ListInstrumentations)|-|Retrieves all currently created instrumentations.
 [sdc-listkeys](#ListKeys)|[triton key list](#ListKeys)|Lists all public keys we have on record for the specified account.
 [sdc-listmachinefirewallrules](#ListMachineFirewallRules)|[triton instance fwrules list](#ListMachineFirewallRules)|List firewall rules applying to a specific instance.
 [sdc-listmachines](#ListMachines)|[triton instance list](#ListMachines)|Lists all instances on an account.
diff --git a/lib/analytics.js b/lib/analytics.js
deleted file mode 100644
index 8285b73f8..000000000
--- a/lib/analytics.js
+++ /dev/null
@@ -1,412 +0,0 @@
-/*
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-/*
- * Copyright (c) 2014, Joyent, Inc.
- */
-
-/*
- * CloudAPI Cloud Analytics 1.0 Resource.
- */
-
-var assert = require('assert-plus');
-var util = require('util');
-
-var restify = require('restify');
-
-
-
-///--- Globals
-
-var sprintf = util.format;
-var InvalidArgumentError = restify.InvalidArgumentError;
-
-/* JSSTYLED */
-var URI_REGEX = /\/ca\/customers\/[\w]{8}(-[\w]{4}){3}-[\w]{12}\//;
-
-var resources = require('./resources');
-
-///--- Helpers
-
-function translate(val, login) {
-    assert.ok(val);
-    assert.ok(login);
-
-    var _uri = '/' + login + '/analytics/';
-
-    if (val.uri) {
-        delete val.uri;
-    }
-
-    if (val.uris) {
-        val.uris.forEach(function (u) {
-            if (u.uri) {
-                u.uri = u.uri.replace(URI_REGEX, _uri);
-            }
-        });
-    }
-
-    return val;
-}
-
-
-function getParams(req) {
-    assert.ok(req);
-
-    var params = {};
-    Object.keys(req.params).forEach(function (k) {
-        switch (k) {
-        case 'account':
-        case 'id':
-            break;
-        default:
-            params[k] = req.params[k];
-            break;
-        }
-    });
-
-    return params;
-}
-
-
-
-///--- Functions
-
-function describe(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var log = req.log;
-
-    if (req.accountMgmt) {
-        resources.getRoleTags(req, res);
-    }
-
-    return ca.describe(customer, function (err, metrics) {
-        if (err) {
-            return next(err);
-        }
-
-        log.debug('GET %s -> %j', req.path(), metrics);
-        res.send(metrics);
-        return next();
-    });
-}
-
-
-function create(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var log = req.log;
-    var login = req.account.login;
-    var params = getParams(req);
-
-    return ca.createInstrumentation(customer, params, function (err, inst) {
-        if (err) {
-            return next(err);
-        }
-
-        inst = translate(inst, login);
-        if (req.headers['role-tag'] || req.activeRoles) {
-            // The resource we want to save is the individual one we've
-            // just created, not the collection URI:
-            req.resourcename = req.resourcename + '/' + inst.id;
-            req.resource = {
-                name: req.resourcename,
-                account: req.account.uuid,
-                roles: []
-            };
-        }
-        res.header('Location', sprintf('/%s/analytics/instrumentations/%s',
-                                        login,
-                                        inst.id));
-        log.debug('POST %s -> %j', req.path(), inst);
-        res.send(inst);
-        return next();
-    });
-}
-
-
-function clone(req, res, next) {
-    assert.ok(req.sdc);
-
-    if (req.params.action !== 'clone') {
-        return next(new InvalidArgumentError('%s is not a valid action',
-                                                req.params.action));
-    }
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var id = req.params.id;
-    var log = req.log;
-    var login = req.account.login;
-    var params = getParams(req);
-
-    return ca.cloneInstrumentation(customer, id, params, function (err, inst) {
-        if (err) {
-            return next(err);
-        }
-
-        inst = translate(inst, login);
-        var locat = sprintf('/%s/analytics/instrumentations/%s',
-                                        login,
-                                        inst.id);
-        if (req.headers['role-tag'] || req.activeRoles) {
-            // The resource we want to save is the one we've
-            // just created, not the one we clone:
-            req.resourcename = locat;
-            req.resource = {
-                name: req.resourcename,
-                account: req.account.uuid,
-                roles: []
-            };
-        }
-        res.header('Location', locat);
-        log.debug('POST %s -> %j', req.path(), inst);
-        res.send(inst);
-        return next();
-    });
-}
-
-
-function list(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var log = req.log;
-    var login = req.account.login;
-
-    if (req.accountMgmt) {
-        resources.getRoleTags(req, res);
-    }
-
-    return ca.listInstrumentations(customer, function (err, insts) {
-        if (err) {
-            return next(err);
-        }
-
-        var _insts = [];
-        insts.forEach(function (i) {
-            _insts.push(translate(i, login));
-        });
-
-        log.debug('GET %s -> %j', req.path(), _insts);
-        res.send(_insts);
-        return next();
-    });
-}
-
-
-function get(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var id = req.params.id;
-    var log = req.log;
-    var login = req.account.login;
-
-    return ca.getInstrumentation(customer, id, function (err, inst) {
-        if (err) {
-            return next(err);
-        }
-        if (req.accountMgmt) {
-            resources.getRoleTags(req, res);
-        }
-        inst = translate(inst, login);
-
-        log.debug('GET %s -> %j', req.path(), inst);
-        res.send(inst);
-        return next();
-    });
-}
-
-
-function getValue(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var id = req.params.id;
-    var log = req.log;
-    var login = req.account.login;
-    var params = getParams(req);
-
-    return ca.getInstrumentationValue(customer, id, params, function (err, v) {
-        if (err) {
-            return next(err);
-        }
-
-        v = translate(v, login);
-
-        log.debug('GET %s -> %j', req.path(), v);
-        res.send(v);
-        return next();
-    });
-}
-
-
-function heatmap(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var id = req.params.id;
-    var log = req.log;
-    var login = req.account.login;
-    var params = getParams(req);
-
-    return ca.getHeatmap(customer, id, params, function (err, hmap) {
-        if (err) {
-            return next(err);
-        }
-
-        hmap = translate(hmap, login);
-
-        log.debug('GET %s -> %j', req.path(), hmap);
-        res.send(hmap);
-        return next();
-    });
-}
-
-
-function heatmapDetails(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var id = req.params.id;
-    var log = req.log;
-    var login = req.account.login;
-    var params = getParams(req);
-
-    return ca.getHeatmapDetails(customer, id, params, function (err, hmap) {
-        if (err) {
-            return next(err);
-        }
-
-        hmap = translate(hmap, login);
-
-        log.debug('GET %s -> %j', req.path(), hmap);
-        res.send(hmap);
-        return next();
-    });
-}
-
-
-function del(req, res, next) {
-    assert.ok(req.sdc);
-
-    var ca = req.sdc.ca;
-    var customer = req.account.uuid;
-    var id = req.params.id;
-    var log = req.log;
-
-    return ca.deleteInstrumentation(customer, id, function (err) {
-        if (err) {
-            return next(err);
-        }
-
-        log.debug('DELETE %s -> ok', req.path());
-        res.send(204);
-        return next();
-    });
-}
-
-
-function mount(server, before) {
-    assert.object(server);
-    assert.ok(before);
-
-    server.get({
-        path: '/:account/analytics',
-        name: 'DescribeAnalytics'
-    }, before, describe);
-
-    server.head({
-        path: '/:account/analytics',
-        name: 'HeadAnalytics'
-    }, before, describe);
-
-    server.get({
-        path: '/:account/analytics/instrumentations',
-        name: 'ListInstrumentations'
-    }, before, list);
-
-    server.head({
-        path: '/:account/analytics/instrumentations',
-        name: 'HeadInstrumentations'
-    }, before, list);
-
-    server.post({
-        path: '/:account/analytics/instrumentations',
-        name: 'CreateInstrumentation'
-    }, before, create, resources.updateResource);
-
-    server.get({
-        path: '/:account/analytics/instrumentations/:id',
-        name: 'GetInstrumentation'
-    }, before, get);
-
-    server.head({
-        path: '/:account/analytics/instrumentations/:id',
-        name: 'HeadInstrumentation'
-    }, before, get);
-
-    server.get({
-        path: '/:account/analytics/instrumentations/:id/value/raw',
-        name: 'GetInstrumentationValue'
-    }, before, getValue);
-
-    server.head({
-        path: '/:account/analytics/instrumentations/:id/value/raw',
-        name: 'HeadInstrumentationValue'
-    }, before, getValue);
-
-    server.get({
-        path: '/:account/analytics/instrumentations/:id/value/heatmap/image',
-        name: 'GetInstrumentationHeatmap'
-    }, before, heatmap);
-
-    server.head({
-        path: '/:account/analytics/instrumentations/:id/value/heatmap/image',
-        name: 'HeadInstrumentationHeatmap'
-    }, before, heatmap);
-
-    server.get({
-        path: '/:account/analytics/instrumentations/:id/value/heatmap/details',
-        name: 'GetInstrumentationHeatmapDetails'
-    }, before, heatmapDetails);
-
-    server.head({
-        path: '/:account/analytics/instrumentations/:id/value/heatmap/details',
-        name: 'HeadInstrumentationHeatmapDetails'
-    }, before, heatmapDetails);
-
-    server.post({
-        path: '/:account/analytics/instrumentations/:id',
-        name: 'CloneInstrumentation'
-    }, before, clone, resources.updateResource);
-
-    server.del({
-        path: '/:account/analytics/instrumentations/:id',
-        name: 'DeleteInstrumentation'
-    }, before, del, resources.deleteResource);
-
-    return server;
-}
-
-
-
-///--- Exports
-
-module.exports = {
-    mount: mount
-};
diff --git a/lib/app.js b/lib/app.js
index da9a7c677..5072b1be9 100644
--- a/lib/app.js
+++ b/lib/app.js
@@ -35,7 +35,6 @@ var semver = require('semver');
 var UFDS = require('ufds');
 
 var account = require('./account');
-var analytics = require('./analytics');
 var auth = require('./auth');
 var configEndpoints = require('./endpoints/config');
 var datacenters = require('./datacenters');
@@ -150,7 +149,6 @@ function createUfdsClient(options, callback) {
 
 function createHTTPClients(options) {
     var clients = {
-        ca: new SDC.CA(options.ca),
         vmapi: new SDC.VMAPI(options.vmapi),
         napi: new SDC.NAPI(options.napi),
         fwapi: new SDC.FWAPI(options.fwapi),
@@ -178,7 +176,6 @@ function createHTTPClients(options) {
 
 function createClients(options, callback) {
     assert.ok(options);
-    assert.ok(options.ca);
     assert.ok(options.vmapi);
     assert.ok(options.napi);
     assert.ok(options.imgapi);
@@ -195,7 +192,6 @@ function createClients(options, callback) {
 
     options.ufds.log   = options.log.child({ component: 'ufds' });
     options.ufds_master.log = options.log.child({ component: 'ufds_master' });
-    options.ca.log     = options.log.child({ component: 'ca' });
     options.vmapi.log  = options.log.child({ component: 'vmapi' });
     options.napi.log   = options.log.child({ component: 'napi' });
     options.imgapi.log = options.log.child({ component: 'imgapi' });
@@ -446,11 +442,9 @@ module.exports = {
                 var resourceTagRoutes = [
                     'replaceaccountroletags',
                     'replaceresourcesroletags',
-                    'replaceanalyticsresourcesroletags',
                     'replaceuserkeysresourcesroletags',
                     'replaceresourceroletags',
                     'replacemachineroletags',
-                    'replaceanalyticsresourceroletags',
                     'replaceuserkeysresourceroletags'
                 ];
 
@@ -554,7 +548,6 @@ module.exports = {
             audit.mount(server, machineThrottle);
             rules.mount(server, machineThrottle);
 
-            analytics.mount(server, userThrottle(config, 'analytics'));
             users.mount(server, userThrottle(config, 'users'), config);
             policies.mount(server, userThrottle(config, 'policies'), config);
             roles.mount(server, userThrottle(config, 'roles'), config);
@@ -615,7 +608,6 @@ module.exports = {
                 clients.napi.close();
                 clients.fwapi.close();
                 clients.imgapi.close();
-                clients.ca.close();
                 clients.papi.close();
                 clients.cnapi.close();
 
diff --git a/lib/resources.js b/lib/resources.js
index 4b6374a94..e2bd34dd7 100644
--- a/lib/resources.js
+++ b/lib/resources.js
@@ -46,7 +46,7 @@ var bleedingEdge = require('./bleeding-edge'),
 // There are several possibilities regarding request path. The most common one
 // is '/:account/:resource[/:resource_id|:resource_name]' which includes
 // 'users', 'policies', 'keys', 'roles', 'datacenters', 'images', 'packages',
-// 'machines', 'analytics' and 'fwrules'.
+// 'machines', and 'fwrules'.
 //
 // Then, there are some special cases:
 // - Account resource path is just '/:account'.
@@ -56,9 +56,6 @@ var bleedingEdge = require('./bleeding-edge'),
 //   it doesn't really matter b/c the role-tag can be added only at machine
 //   level and it'll be inherited. Therefore, we need to ignore any path under
 //   '/:account/machines/:machineid'.
-// - Instrumentations have a path of
-//   '/:account/analytics/instrumentations[/:id]', which made it an special
-//   case compared with the remaining resources.
 function resourceName(req, res, next) {
     if (req.getUrl().pathname === '/--ping') {
         return next();
@@ -100,9 +97,7 @@ function resourceName(req, res, next) {
         //  /:login/machines/:machine/fwrules
         //
         //  /:login/fwrules/:id/machines
-        //  /:login/analytics/instrumentations/:id
-        if ((p[1] === 'users' && p[3] === 'keys') ||
-            (p[1] === 'analytics' && p[2] === 'instrumentations')) {
+        if (p[1] === 'users' && p[3] === 'keys') {
             req.resourcename = '/' + p.join('/');
         } else {
             req.resourcename = util.format('/%s/%s/%s', p[0], p[1], p[2]);
@@ -112,8 +107,6 @@ function resourceName(req, res, next) {
         //  /:account/users/:user/keys/:key
         //  /:login/machines/:id/snapshots/:name
         //  ...
-        //  /:login/analytics/instrumentations/:id/value/raw
-        //  /:login/analytics/instrumentations/:id/value/heatmap/image
         if (p[1] === 'users' && p[3] === 'keys') {
             req.resourcename = '/' + p.join('/');
         } else if (p[1] === 'machines') {
@@ -240,8 +233,7 @@ function saveResource(req, cb) {
         var validResources = [
             'machines', 'users', 'roles', 'packages',
             'images', 'policies', 'keys', 'datacenters',
-            'analytics', 'fwrules', 'networks', 'instrumentations',
-            'services'
+            'fwrules', 'networks', 'services'
         ];
 
         if (validResources.indexOf(req.params.resource_name) === -1) {
@@ -528,12 +520,6 @@ function mount(server, before, config) {
         name: 'ReplaceResourcesRoleTags'
     }, before, putResource);
 
-    // This one is exactly the same but for analytics/instrumentations:
-    server.put({
-        path: '/:account/analytics/:resource_name',
-        name: 'ReplaceAnalyticsResourcesRoleTags'
-    }, before, putResource);
-
     // And the special case of the sub-users keys
     server.put({
         path: '/:account/users/:user/:resource_name',
@@ -550,11 +536,6 @@ function mount(server, before, config) {
         path: '/:account/machines/:machine',
         name: 'ReplaceMachineRoleTags'
     }, before, putResource);
-    // Again, instrumentations path is different:
-    server.put({
-        path: '/:account/analytics/:resource_name/:resource_id',
-        name: 'ReplaceAnalyticsResourceRoleTags'
-    }, before, putResource);
     // Sub User keys:
     server.put({
         path: '/:account/users/:user/keys/:resource_id',
diff --git a/package.json b/package.json
index 913954223..014d74a27 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
     "name": "cloudapi",
-    "description": "SmartDataCenter CloudAPI",
-    "version": "9.4.2",
+    "description": "Triton CloudAPI",
+    "version": "9.5.0",
     "author": "Joyent (joyent.com)",
     "private": true,
     "engines": {
diff --git a/sapi_manifests/cloudapi/template b/sapi_manifests/cloudapi/template
index 887198b9b..703da3f1a 100644
--- a/sapi_manifests/cloudapi/template
+++ b/sapi_manifests/cloudapi/template
@@ -69,9 +69,6 @@
     "papi": {
         "url": "http://{{{papi_domain}}}"
     },
-    "ca": {
-        "url": "http://{{{ca_domain}}}:23181"
-    },
 {{#experimental_cloudapi_nfs_shared_volumes}}
     "volapi": {
         "url": "http://volapi.{{{datacenter_name}}}.{{{dns_domain}}}"
@@ -150,8 +147,7 @@
                     "rate": 0
                 }
             }
-        },
-        "analytics": false
+        }
     },
 
     {{^account_allowed_dcs}}
diff --git a/test/populate_network.test.js b/test/populate_network.test.js
index b2df8a74e..41d0dd433 100644
--- a/test/populate_network.test.js
+++ b/test/populate_network.test.js
@@ -12,7 +12,7 @@
  * Unlike other tests, here we make the client point at the admin user.
  * Adding zones missing network_uuid in the nics isn't simple in tests, but
  * headnode zones are created without them, so we're making use of that fact
- * here by listing the CA zone.
+ * here by listing the Amon zone.
  */
 
 var test   = require('@smaller/tap').test;
@@ -25,7 +25,7 @@ var common = require('./common');
 
 var KEY_NAME = 'cloudapi.test.key.delete.if.seen';
 
-var CA_ZONE;
+var AMON_ZONE;
 var FW_RULE;
 
 var CLIENTS;
@@ -89,13 +89,13 @@ test('ListMachines populates networks', function (t) {
         t.ifError(err);
         t.equal(res.statusCode, 200);
 
-        CA_ZONE = body.filter(function (zone) {
-            return zone.name === 'ca0';
+        AMON_ZONE = body.filter(function (zone) {
+            return zone.name === 'amon0';
         })[0];
 
-        t.ok(CA_ZONE);
-        t.ok(CA_ZONE.networks);
-        t.equal(typeof (CA_ZONE.networks[0]), 'string');
+        t.ok(AMON_ZONE);
+        t.ok(AMON_ZONE.networks);
+        t.equal(typeof (AMON_ZONE.networks[0]), 'string');
 
         t.end();
     });
@@ -104,7 +104,7 @@ test('ListMachines populates networks', function (t) {
 
 
 test('GetMachine populates networks', function (t) {
-    CLIENT.get('/my/machines/' + CA_ZONE.id, function (err, req, res, body) {
+    CLIENT.get('/my/machines/' + AMON_ZONE.id, function (err, req, res, body) {
         t.ifError(err);
         t.equal(res.statusCode, 200);
 
@@ -121,7 +121,7 @@ test('GetMachine populates networks', function (t) {
 test('Add firewall rule OK', function (t) {
     CLIENT.post('/my/fwrules', {
         description: 'rule from cloudapi test. Delete if found',
-        rule: 'FROM vm ' + CA_ZONE.id + ' TO subnet 10.99.99.0/24 ' +
+        rule: 'FROM vm ' + AMON_ZONE.id + ' TO subnet 10.99.99.0/24 ' +
                 'BLOCK tcp PORT 25'
     }, function (err, req, res, fwRule) {
         t.ifError(err);
@@ -144,7 +144,7 @@ test('ListFirewallRuleMachines populates networks', function (t) {
         t.equal(zones.length, 1);
 
         var zone = zones[0];
-        t.equal(zone.id, CA_ZONE.id);
+        t.equal(zone.id, AMON_ZONE.id);
         t.ok(typeof (zone.networks[0]), 'string');
 
         t.end();
@@ -185,7 +185,7 @@ test('Delete firewall rule OK', function (t) {
 test('ListFirewallRuleMachines populates networks - other', function (t) {
     OTHER.post('/my/fwrules', {
         description: 'rule from cloudapi test. Delete if found',
-        rule: 'FROM vm ' + CA_ZONE.id + ' TO subnet 10.99.99.0/24 ' +
+        rule: 'FROM vm ' + AMON_ZONE.id + ' TO subnet 10.99.99.0/24 ' +
                 'BLOCK tcp PORT 25'
     }, function (err, req, res, fwRule) {
         t.ifError(err);
