From 1665c2f800175ed3e0b2c9a1d6d0bce2d8344e6c Mon Sep 17 00:00:00 2001
From: Richard Bradley <richard.bradley@joyent.com>
Date: Tue, 14 Feb 2017 16:27:34 +0000
Subject: [PATCH] MANTA-3100 manta-adm reports wrong server for zone that has
 changed servers

---
 lib/adm.js              | 32 ++++++++++++++++++++++++-----
 test/common.js          |  1 +
 test/tst.oneach_exec.js |  1 +
 test/tst.zk.js          | 45 +++++++++++++++++++++++++++++++++++------
 4 files changed, 68 insertions(+), 11 deletions(-)

diff --git a/lib/adm.js b/lib/adm.js
index 9fa11a8..4442dab 100644
--- a/lib/adm.js
+++ b/lib/adm.js
@@ -492,7 +492,12 @@ maAdm.prototype.fetchDeployed = function (callback)
 				for (i = 0;
 				    i < self.ma_instances[svcid].length; i++) {
 					instance = self.ma_instances[svcid][i];
-					cns[instance.params.server_uuid] = null;
+					if (self.ma_vms.hasOwnProperty(
+					    instance['uuid'])) {
+						cns[self.ma_vms[
+						    instance['uuid']]
+						    ['server_uuid']] = null;
+					}
 				}
 			}
 
@@ -1365,8 +1370,14 @@ maAdm.prototype.loadInstances = function ()
 		for (i = 0; i < this.ma_instances[svcid].length; i++) {
 			instance = this.ma_instances[svcid][i];
 			metadata = instance['metadata'];
-			server = instance['params']['server_uuid'];
-			gz = this.ma_gzinfo[server];
+			if (this.ma_vms.hasOwnProperty(instance['uuid'])) {
+				server = this.ma_vms[instance['uuid']]
+				    ['server_uuid'];
+				gz = this.ma_gzinfo[server];
+			} else {
+				server = '-';
+				gz = null;
+			}
 			image = this.ma_vms.hasOwnProperty(instance['uuid']) ?
 			    this.ma_vms[instance['uuid']]['image_uuid'] : '-';
 			ip = this.primaryIpForZone(instance['uuid']) || '-';
@@ -1406,7 +1417,8 @@ maAdm.prototype.loadInstances = function ()
 				continue;
 
 			this.ma_config_bycfg[svcid].incr(row);
-			if (!this.ma_config_bycn[svcid].hasOwnProperty(server))
+			if (server != '-' &&
+			    !this.ma_config_bycn[svcid].hasOwnProperty(server))
 				this.ma_config_bycn[svcid][server] =
 				    new svcs.ServiceConfiguration(svckey);
 			this.ma_config_bycn[svcid][server].incr(row);
@@ -2274,6 +2286,8 @@ maAdm.prototype.fixupZkServers = function (callback)
  *     o the "last" property is not set correctly on elements in ZK_SERVERS
  *     o missing ZK_SERVERS element for a SAPI instance
  *     o incorrect IP address for an instance
+ *     o nameservice zone removed outside of Manta's tooling (e.g. deleted via
+ *       VMAPI, moved to another datacenter)
  *
  * as well as problematic cases that can happen in normal operation:
  *
@@ -2410,7 +2424,15 @@ maAdm.prototype.auditZkServers = function ()
 		}
 
 		serverUuid = zkinstance.params['server_uuid'];
-		if (self.ma_cns[serverUuid] === null) {
+		if (!self.ma_vms.hasOwnProperty(uuid)) {
+			if (self.ma_cns[serverUuid] != null) {
+				validationErrors.push(new VError(
+				    'nameservice instance "%s": VM appears ' +
+				    'to have been provisioned in this ' +
+				    'datacenter, but could not be found in ' +
+				    'VMAPI', uuid));
+				return;
+			}
 			nforeign++;
 			return;
 		}
diff --git a/test/common.js b/test/common.js
index 6513f8d..6da2f95 100644
--- a/test/common.js
+++ b/test/common.js
@@ -220,6 +220,7 @@ function generateFakeBase(fakeDeployed, azCount) {
 			if (masterAz) {
 				fakeBase['vms'][id] = {
 					'image_uuid': params['imgid'],
+					'server_uuid': params['cnid'],
 					'nics': [ {
 						'primary': true,
 						'ip4addr': '0.0.0.0'
diff --git a/test/tst.oneach_exec.js b/test/tst.oneach_exec.js
index b130b89..4a3c325 100644
--- a/test/tst.oneach_exec.js
+++ b/test/tst.oneach_exec.js
@@ -469,6 +469,7 @@ function setupMockManta(_, callback)
 		    'metadata': { 'SHARD': '1', 'DATACENTER': 'test' }
 		});
 		fakeDeployedTopology.vms[zoneid] = {
+		    'server_uuid': cnid,
 		    'nics': [ {
 			'primary': true,
 			'ip': '10.0.0.' + (i + 1)
diff --git a/test/tst.zk.js b/test/tst.zk.js
index c2caf81..bbe3d85 100644
--- a/test/tst.zk.js
+++ b/test/tst.zk.js
@@ -103,12 +103,15 @@ function runTestCase(testcase, callback)
 		islocal = deployed.cns.hasOwnProperty(server_uuid) &&
 		    deployed.cns[server_uuid] !== null;
 		if (islocal) {
-			deployed.vms[uuid] = {
-			    'nics': [ {
-			        'primary': true,
-				'ip': instance['ip']
-			    } ]
-			};
+			if (instance.zone_removed !== true) {
+				deployed.vms[uuid] = {
+				    'nics': [ {
+					'primary': true,
+					'ip': instance['ip']
+				    } ],
+				    'server_uuid': server_uuid
+				};
+			}
 		} else {
 			deployed.cns[server_uuid] = null;
 		}
@@ -469,6 +472,36 @@ vasync.forEachPipeline({
 	'warnings': [
 	    new RegExp('nameservice instance "vm003": missing ZK_SERVERS entry')
 	]
+    }, {
+	'name': 'list zk servers, multi DC, local zone destroyed/missing',
+	'zk_servers': [ '10.0.0.7', '10.0.0.8', '10.0.0.9' ],
+	'cns': [ identCn(1), identCn(2) ],
+	'instances': [ {
+	    'cn': identCn(1),
+	    'vm': identVm(1),
+	    'ip': '10.0.0.7',
+	    'zone_removed': true
+	}, {
+	    'cn': identCn(2),
+	    'vm': identVm(2),
+	    'ip': '10.0.0.8'
+	}, {
+	    'cn': identCn(3),
+	    'vm': identVm(3),
+	    'ip': '10.0.0.9'
+	} ],
+	'output': [
+	    outputHeader,
+	    outputRow(1, localDc, identVm(1), '10.0.0.7'),
+	    outputRow(2, localDc, identVm(2), '10.0.0.8'),
+	    outputRow(3, remoteDc, identVm(3), '10.0.0.9'),
+	    ''
+	].join('\n'),
+	'warnings': [
+	    new RegExp('nameservice instance "vm001": VM appears to have ' +
+		'been provisioned in this datacenter, but could not be ' +
+		'found in VMAPI')
+	]
     } ]
 }, function (err) {
 	if (err)
-- 
2.21.0

