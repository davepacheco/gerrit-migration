commit cabd4c9bc136f8f5e7116f3329bca4bd7779bfbd (refs/changes/44/3644/1)
Author: Rui Loura <rui@joyent.com>
Date:   2018-03-15T15:48:06+00:00 (1 year, 7 months ago)
    
    x

diff --git a/lib/buckets.js b/lib/buckets.js
index 739267e..9846642 100644
--- a/lib/buckets.js
+++ b/lib/buckets.js
@@ -86,7 +86,49 @@ var BUCKETS = {
                 version: 0
             }
         }
-    }
+    },
+
+    /*
+     * Key:  vnet_id,vlan_id,ip,r_subnet
+     */
+    attached_vnets: {
+        desc: 'local to remote vnet mapping',
+        name: 'portolan_attached_vnets',
+        schema: {
+            index: {
+                vnet_id: {
+                    type: 'number'
+                },
+                vlan_id: {
+                    type: 'number'
+                },
+                r_dc_id: {
+                    type: 'number'
+                },
+                r_vnet_id: {
+                    type: 'number'
+                },
+                r_vlan_id: {
+                    type: 'number'
+                },
+                r_subnet: {
+                    type: 'string'
+                },
+                r_reply_mac: {
+                    type: 'number'
+                },
+                version: {
+                    type: 'number'
+                },
+                deleted: {
+                    type: 'boolean'
+                }
+            },
+            options: {
+                version: 0
+            }
+        }
+    },
 };
 var NAMES = {};
 var VERSION = 1;
diff --git a/lib/consumer.js b/lib/consumer.js
index 84695be..6d9eb59 100644
--- a/lib/consumer.js
+++ b/lib/consumer.js
@@ -21,6 +21,7 @@ var mod_common = require('./common');
 var mod_errors = require('./errors');
 var mod_lru = require('lru-cache');
 var VError = require('verror');
+var ip6addr = require('ip6addr');
 
 
 
@@ -365,6 +366,46 @@ function logRm(opts, callback) {
     });
 }
 
+function vnetRouteLookup(opts, callback) {
+    assert.object(opts, 'opts');
+    assert.object(opts.log, 'opts.log');
+    assert.object(opts.moray, 'opts.moray');
+
+    var ip = opts.ip;
+    var vnet_id = opts.src_vnet_id;
+    var vlan_id = opts.src_vlan_id;
+
+    var filter = fmt('&(vnet_id=%d)(vlan_id=%d)(ip=%s)', vnet_id, vlan_id, ip);
+    var searchOpts = {
+        limit: opts.limit,
+        sort: {
+            attribute: '_mtime'
+        }
+    };
+
+    var routes = [];
+
+    var req = opts.moray.findObjects(NAMES.attached_vnets, filter, searchOpts);
+
+    req.once('error', function searchError(err) {
+        opts.log.error(err, 'vnetRoute search error');
+        callback(err);
+        return; 
+    });
+
+    req.on('record', function onRecord(obj) {
+        obj.value.id = obj.key;
+        routes.push(obj.value);
+    });
+
+    req.once('end', function onEnd() {
+        // "no results" is acceptable here.
+        opts.log.debug({ routes: routes }, 'consumer.vnetRoute records');
+        return callback(null, routes);
+    });
+
+    callback();
+}
 
 module.exports = {
     underlayLookup: underlayLookup,
@@ -374,5 +415,6 @@ module.exports = {
     vl2LookupCns: vl2LookupCns,
     vl3Lookup: vl3Lookup,
     logReq: logReq,
-    logRm: logRm
+    logRm: logRm,
+    vnetRouteLookup: vnetRouteLookup
 };
