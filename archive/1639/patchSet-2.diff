From 08c9c293657314d1759bdd3f37eb414d24c704c2 Mon Sep 17 00:00:00 2001
From: Julien Gilli <julien.gilli@joyent.com>
Date: Thu, 9 Mar 2017 11:48:17 -0800
Subject: [PATCH] DOCKER-1012 want test for local volumes support

---
 test/integration/cli-local-volumes.test.js | 107 +++++++++++++++++++++
 test/lib/common.js                         |   4 +-
 2 files changed, 109 insertions(+), 2 deletions(-)
 create mode 100644 test/integration/cli-local-volumes.test.js

diff --git a/test/integration/cli-local-volumes.test.js b/test/integration/cli-local-volumes.test.js
new file mode 100644
index 0000000..6ed9d85
--- /dev/null
+++ b/test/integration/cli-local-volumes.test.js
@@ -0,0 +1,107 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2017, Joyent, Inc.
+ */
+
+/*
+ * Integration tests for creating local volumes with `docker run -v
+ * /local-volume-dir ...` and mounting them with `--volumes-from`.
+ */
+
+var assert = require('assert-plus');
+var test = require('tape');
+
+var cli = require('../lib/cli');
+var common = require('../lib/common');
+var dockerTestsHelper = require('./helpers');
+
+var ALICE;
+var STATE = {
+    log: require('../lib/log')
+};
+
+test('setup', function (tt) {
+    tt.test('docker env', function (t) {
+        dockerTestsHelper.initDockerEnv(t, STATE, {}, function (err, accounts) {
+            t.ifErr(err);
+
+            ALICE = accounts.alice;
+
+            t.end();
+        });
+    });
+
+    tt.test('DockerEnv: alice init', cli.init);
+
+    tt.test('pull nginx image', function (t) {
+        dockerTestsHelper.ensureImage({
+            name: 'nginx:latest',
+            user: ALICE
+        }, function (err) {
+            t.error(err, 'should be no error pulling image');
+            t.end();
+        });
+    });
+});
+
+test('docker local volumes', function (tt) {
+    var containerWithLocalVolName =
+        common.makeResourceName('local-volume-test-container-with-local-vol');
+    var mountingContainerName =
+        common.makeResourceName('local-volume-test-mounting-container');
+
+    tt.test('creating container with local volume should succeed',
+        function (t) {
+            cli.run(t, {
+                args: '--name ' + containerWithLocalVolName + ' -v /data '
+                    + 'nginx:latest /bin/sh -c "touch /data/foo.txt && ls '
+                    + '/data"'
+            }, function onContainerRun(err, output) {
+                t.ifErr(err,
+                    'creating container with local volume should not error');
+                t.equal(output.stdout, 'foo.txt\n',
+                    'output should equal newly created file');
+                t.end();
+            });
+    });
+
+    tt.test('mounting local volume from another container should succeed',
+        function (t) {
+        cli.run(t, {
+            args: '--name ' + mountingContainerName + ' --volumes-from='
+                + containerWithLocalVolName + ' nginx:latest ls /data'
+        }, function onContainerRun(err, output) {
+            t.ifErr(err,
+                'creating container with volume mounted with --volumes-from '
+                    + 'should not error');
+            t.equal(output.stdout, 'foo.txt\n', 'Output should equal newly '
+                + 'created file');
+            t.end();
+        });
+    });
+
+    tt.test('deleting container with volume mounted via --volumes-from should '
+        + 'work', function (t) {
+        cli.rm(t, {args: mountingContainerName},
+            function onContainerDeleted(err, stdout, stderr) {
+                t.ifErr(err, 'deleting container mounting local volume '
+                    + 'should succeed');
+                t.end();
+            });
+        });
+
+    tt.test('deleting container with local volume should work',
+        function (t) {
+            cli.rm(t, {args: containerWithLocalVolName},
+                function onContainerDeleted(err, stdout, stderr) {
+                    t.ifErr(err, 'deleting container with local volume should '
+                        + 'succeed');
+                    t.end();
+                });
+        });
+});
\ No newline at end of file
diff --git a/test/lib/common.js b/test/lib/common.js
index 0362284..7acb0b6 100644
--- a/test/lib/common.js
+++ b/test/lib/common.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -281,7 +281,7 @@ function partialExp(t, opts, obj) {
  * Make a prefixed, randomized name for a test container.
  */
 function makeContainerName(prefix) {
-    return prefix + libuuid.create().split('-')[0];
+    return prefix + '-' + libuuid.create().split('-')[0];
 }
 
 
-- 
2.21.0

