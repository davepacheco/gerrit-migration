From 7e14e9ea176c93a58fe26272c4f6b8b93096b284 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Fri, 8 Jun 2018 18:09:29 +0200
Subject: [PATCH] TOOLS-1699 sdcadm health -j should always provide JSON even
 on exceptions

---
 lib/cli/do_check_health.js |  2 +-
 lib/sdcadm.js              | 18 ++++++++++++++++--
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/lib/cli/do_check_health.js b/lib/cli/do_check_health.js
index 38734f1..c0f5294 100644
--- a/lib/cli/do_check_health.js
+++ b/lib/cli/do_check_health.js
@@ -175,7 +175,7 @@ function do_check_health(subcmd, opts, args, callback) {
             });
         }
 
-        if (errRows.length > 0) {
+        if (!opts.json && !opts.quiet && errRows.length > 0) {
             callback(new Error('Some instances appear unhealthy'));
             return;
         }
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 71883fb..ca2ae10 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -4073,6 +4073,20 @@ SdcAdm.prototype.checkHealth = function checkHealth(opts, cb) {
         });
     }
 
+    // Helper function to ensure severe errors are reported always the same way
+    function severeError(err) {
+        return [{
+            type: 'triton',
+            hostname: 'headnode',
+            healthy: false,
+            health_errors: [
+                { message: err.message },
+                { message: 'Triton is experiencing severe errors ' +
+                    'that prevent detailed health checks'}
+            ]
+        }];
+    }
+
     vasync.pipeline({
         funcs: [
             function ensureSdcApp(_, next) {
@@ -4086,7 +4100,7 @@ SdcAdm.prototype.checkHealth = function checkHealth(opts, cb) {
     }, function (err) {
         if (err) {
             self.log.error({err: err}, 'checkHealth pipeline cb');
-            cb(err);
+            cb(null, severeError(err));
             return;
         }
 
@@ -4118,7 +4132,7 @@ SdcAdm.prototype.checkHealth = function checkHealth(opts, cb) {
         }, function (err2, results) {
             if (err2) {
                 self.log.error({err: err2}, 'checkHealth parallel cb');
-                cb(new errors.InternalError(new Error(err2)));
+                cb(null, severeError(err2));
                 return;
             }
 
-- 
2.21.0

