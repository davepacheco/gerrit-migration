{"project":"joyent/illumos-joyent","branch":"master","id":"I4b6c74d28eb921a116f4a17420e4fe2dd043a977","number":"1871","subject":"OS-6031 Need NVMe dump support Reviewed by: Robert Mustacchi \u003crm@joyent.com\u003e Reviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e Approved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e","owner":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"url":"https://cr.joyent.us/1871","commitMessage":"OS-6031 Need NVMe dump support\nReviewed by: Robert Mustacchi \u003crm@joyent.com\u003e\nReviewed by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\nApproved by: Jerry Jelinek \u003cjerry.jelinek@joyent.com\u003e\n","createdOn":1493394419,"lastUpdated":1493901451,"open":false,"status":"MERGED","comments":[{"timestamp":1493394419,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 1."},{"timestamp":1493397834,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1493398240,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 2."},{"timestamp":1493399992,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1493401803,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 2:\n\n(1 comment)\n\nSo, it seems that we set BD_XFER_POLL in two different cases. We explicitly set it during dump, but we also set it potentially as part of the cmlb data path if the tg_cookie value is set. \n\nThis suggests that BD_XFER_POLL doesn\u0027t imply panic context and therefore we need a bit more logic here to better distinguish the two cases. It\u0027s worth noting that the SCSI equivalent doesn\u0027t imply panic context. Do you agree with that analysis?\n\nIf that\u0027s the case, I\u0027d suggest changing things to have a dual-pronged approach. One is that if we\u0027re in panic then we can spin with drv_usecwait(). Otherwise, we should cv_wait with a timeout ala smrt on the command and expect the normal interrupt processing path to indicate that we need it to come back. We can determine if we\u0027re in panic via ddi_in_panic()."},{"timestamp":1493716075,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 2:\n\n(1 comment)\n\n\u003e (1 comment)\n \u003e \n \u003e So, it seems that we set BD_XFER_POLL in two different cases. We\n \u003e explicitly set it during dump, but we also set it potentially as\n \u003e part of the cmlb data path if the tg_cookie value is set.\n \u003e \n \u003e This suggests that BD_XFER_POLL doesn\u0027t imply panic context and\n \u003e therefore we need a bit more logic here to better distinguish the\n \u003e two cases. It\u0027s worth noting that the SCSI equivalent doesn\u0027t imply\n \u003e panic context. Do you agree with that analysis?\n \u003e \n \u003e If that\u0027s the case, I\u0027d suggest changing things to have a\n \u003e dual-pronged approach. One is that if we\u0027re in panic then we can\n \u003e spin with drv_usecwait(). Otherwise, we should cv_wait with a\n \u003e timeout ala smrt on the command and expect the normal interrupt\n \u003e processing path to indicate that we need it to come back. We can\n \u003e determine if we\u0027re in panic via ddi_in_panic().\n\nThe cmlb code path is a bit non-obvious. A call from cmlb to tg_rdwr will only use polling if tg_cookie is nonzero. All those calls originate from the device driver itself, and the only place where blkdev calls into cmlb with a non-zero tg_cookie argument is in bd_dump(). So it\u0027s really dump and dump only."},{"timestamp":1493750898,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 2:\n\n\u003e (1 comment)\n \u003e \n \u003e \u003e (1 comment)\n \u003e \u003e\n \u003e \u003e So, it seems that we set BD_XFER_POLL in two different cases. We\n \u003e \u003e explicitly set it during dump, but we also set it potentially as\n \u003e \u003e part of the cmlb data path if the tg_cookie value is set.\n \u003e \u003e\n \u003e \u003e This suggests that BD_XFER_POLL doesn\u0027t imply panic context and\n \u003e \u003e therefore we need a bit more logic here to better distinguish the\n \u003e \u003e two cases. It\u0027s worth noting that the SCSI equivalent doesn\u0027t\n \u003e imply\n \u003e \u003e panic context. Do you agree with that analysis?\n \u003e \u003e\n \u003e \u003e If that\u0027s the case, I\u0027d suggest changing things to have a\n \u003e \u003e dual-pronged approach. One is that if we\u0027re in panic then we can\n \u003e \u003e spin with drv_usecwait(). Otherwise, we should cv_wait with a\n \u003e \u003e timeout ala smrt on the command and expect the normal interrupt\n \u003e \u003e processing path to indicate that we need it to come back. We can\n \u003e \u003e determine if we\u0027re in panic via ddi_in_panic().\n \u003e \n \u003e The cmlb code path is a bit non-obvious. A call from cmlb to\n \u003e tg_rdwr will only use polling if tg_cookie is nonzero. All those\n \u003e calls originate from the device driver itself, and the only place\n \u003e where blkdev calls into cmlb with a non-zero tg_cookie argument is\n \u003e in bd_dump(). So it\u0027s really dump and dump only.\n\nI see, okay. So calls to cmlb from other drivers cannot reach here, is that correct?"},{"timestamp":1493756984,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 2: Code-Review+1\n\n(1 comment)"},{"timestamp":1493899778,"reviewer":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},"message":"Patch Set 2: Integration-Approval+1"},{"timestamp":1493901403,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Uploaded patch set 3: Commit message was updated."},{"timestamp":1493901433,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Patch Set 4: Patch Set 3 was rebased"},{"timestamp":1493901451,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Hans Rosenfeld"}],"currentPatchSet":{"number":"4","revision":"e44f7aa6f37cef96b8ac91489c5427e43f9b7cca","parents":["0f92020886a46f93cdd64dca50be0e4a1e1626c9"],"ref":"refs/changes/71/1871/4","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1493901433,"author":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493399992,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493756984,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493899778,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1493901451,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":16,"deletions":-7}],"sizeInsertions":16,"sizeDeletions":-7},"patchSets":[{"number":"1","revision":"d36c53c6106a6ef781c59fc5afa397c6d2694f30","parents":["ce33465b99b9a4811a15724b9822c0531560d2b5"],"ref":"refs/changes/71/1871/1","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1493394419,"author":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493397834,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":15,"deletions":-7}],"sizeInsertions":15,"sizeDeletions":-7},{"number":"2","revision":"d36da10107d78f9b62a889f0dd8ef5d669c60b5d","parents":["ce33465b99b9a4811a15724b9822c0531560d2b5"],"ref":"refs/changes/71/1871/2","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1493398240,"author":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493756984,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493399992,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493899778,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"comments":[{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2988,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"So, if we have a command timeout that\u0027s polled, we\u0027ll spin forever. Presumably these commands have some amount of time we\u0027re supposed to wait before we time out and declare them dead like in the SCSI case."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2988,"reviewer":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"message":"Yes, thats what will happen. It\u0027s the same as in the non-polled case where we\u0027d wait indefinitely for the command completion through the interrupt code path.\n\nThis is a real problem in case a device drops dead while the system is using it, and I agree that we need to address it. But it\u0027s not related to the polling support."},{"file":"usr/src/uts/common/io/nvme/nvme.c","line":2988,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Hmm, I guess depending on how you look at it, you can say that they\u0027re not related, though it does to me. Regardless, we can save that for future work."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":16,"deletions":-7}],"sizeInsertions":16,"sizeDeletions":-7},{"number":"3","revision":"4b6c74d28eb921a116f4a17420e4fe2dd043a977","parents":["ce33465b99b9a4811a15724b9822c0531560d2b5"],"ref":"refs/changes/71/1871/3","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1493901403,"author":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493756984,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493399992,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493899778,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":16,"deletions":-7}],"sizeInsertions":16,"sizeDeletions":-7},{"number":"4","revision":"e44f7aa6f37cef96b8ac91489c5427e43f9b7cca","parents":["0f92020886a46f93cdd64dca50be0e4a1e1626c9"],"ref":"refs/changes/71/1871/4","uploader":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"createdOn":1493901433,"author":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493756984,"by":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1493399992,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1493899778,"by":{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"}},{"type":"SUBM","value":"1","grantedOn":1493901451,"by":{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":10,"deletions":0},{"file":"usr/src/uts/common/io/nvme/nvme.c","type":"MODIFIED","insertions":16,"deletions":-7}],"sizeInsertions":16,"sizeDeletions":-7}],"allReviewers":[{"name":"Jerry Jelinek","email":"jerry.jelinek@joyent.com","username":"jjelinek"},{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Hans Rosenfeld","email":"hans.rosenfeld@joyent.com","username":"hrosenfeld"}]}