commit 1016186d2af95ad28f2b217d905c626568871e22 (refs/changes/44/4844/3)
Author: Jason King <jason.king@joyent.com>
Date:   2019-02-20T05:23:01+00:00 (8 months ago)
    
    OS-2825 process erroneously shows up from 1970

diff --git a/usr/src/cmd/svc/svcs/Makefile b/usr/src/cmd/svc/svcs/Makefile
index 2ea89818c0..047b859039 100644
--- a/usr/src/cmd/svc/svcs/Makefile
+++ b/usr/src/cmd/svc/svcs/Makefile
@@ -21,7 +21,7 @@
 #
 # Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
 #
-# Copyright (c) 2011, Joyent, Inc. All rights reserved.
+# Copyright (c) 2018, Joyent, Inc. All rights reserved.
 #
 
 PROG =		svcs
@@ -34,7 +34,7 @@ include ../../Makefile.cmd
 include ../../Makefile.ctf
 
 POFILE =	$(PROG)_all.po
-LDLIBS +=	-lcontract -lscf -luutil -lumem -lnvpair -lzonecfg -lsasl
+LDLIBS +=	-lcontract -lscf -luutil -lumem -lnvpair -lzonecfg -lsasl -lproc
 CPPFLAGS += -I ../common
 
 lint := LINTFLAGS = -mux
diff --git a/usr/src/cmd/svc/svcs/svcs.c b/usr/src/cmd/svc/svcs/svcs.c
index 39caabb7d5..d057f53515 100644
--- a/usr/src/cmd/svc/svcs/svcs.c
+++ b/usr/src/cmd/svc/svcs/svcs.c
@@ -21,7 +21,7 @@
 
 /*
  * Copyright (c) 2004, 2010, Oracle and/or its affiliates. All rights reserved.
- * Copyright (c) 2013, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  * Copyright (c) 2015, 2016 by Delphix. All rights reserved.
  */
 
@@ -72,8 +72,8 @@
 #include <libscf_priv.h>
 #include <libuutil.h>
 #include <libnvpair.h>
+#include <libproc.h>
 #include <locale.h>
-#include <procfs.h>
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -964,20 +964,31 @@ instance_processes(scf_instance_t *inst, const char *fmri,
 static int
 get_psinfo(pid_t pid, psinfo_t *psip)
 {
-	char path[100];
-	int fd;
+	struct ps_prochandle *pph;
+	const psinfo_t *c_psip;
+	int pserr = 0;
 
-	(void) snprintf(path, sizeof (path), "/proc/%lu/psinfo", pid);
+	if ((pph = Pgrab(pid, PGRAB_RDONLY, &pserr)) == NULL) {
+		if (pserr == G_NOPROC) {
+			Pfree(pph);
+			return (1);
+		}
 
-	fd = open64(path, O_RDONLY);
-	if (fd < 0)
-		return (-1);
+		uu_die(gettext("Could not read info for process %lu: %s"),
+		    pid, Pgrab_error(pserr));
+	}
 
-	if (read(fd, psip, sizeof (*psip)) < 0)
+	if (Pstate(pph) == PS_UNDEAD) {
+		Pfree(pph);
+		return (1);
+	}
+
+	if ((c_psip = Ppsinfo(pph)) == NULL)
 		uu_die(gettext("Could not read info for process %lu"), pid);
 
-	(void) close(fd);
+	(void) memcpy(psip, c_psip, sizeof (*psip));
 
+	Pfree(pph);
 	return (0);
 }
 
