commit b514682a30fa7b5c83985bcacdc94ad170f14fff
Author: Andy Fiddaman <omnios@citrus-it.co.uk>
Date:   2019-02-07T19:29:50+00:00 (8 months ago)
    
    Want exclusive hma registration

diff --git a/usr/src/pkg/manifests/system-header.mf b/usr/src/pkg/manifests/system-header.mf
index 0e7e6c948b..3e1bd7e6dd 100644
--- a/usr/src/pkg/manifests/system-header.mf
+++ b/usr/src/pkg/manifests/system-header.mf
@@ -1681,6 +1681,7 @@ $(i386_ONLY)file path=usr/platform/i86pc/include/sys/cram.h
 $(i386_ONLY)file path=usr/platform/i86pc/include/sys/ddi_subrdefs.h
 $(i386_ONLY)file path=usr/platform/i86pc/include/sys/debug_info.h
 $(i386_ONLY)file path=usr/platform/i86pc/include/sys/fastboot.h
+$(i386_ONLY)file path=usr/platform/i86pc/include/sys/hma.h
 $(i386_ONLY)file path=usr/platform/i86pc/include/sys/ht.h
 $(i386_ONLY)file path=usr/platform/i86pc/include/sys/mach_mmu.h
 $(i386_ONLY)file path=usr/platform/i86pc/include/sys/machclock.h
diff --git a/usr/src/uts/i86pc/os/hma.c b/usr/src/uts/i86pc/os/hma.c
index 34ae85086d..a076d317a9 100644
--- a/usr/src/uts/i86pc/os/hma.c
+++ b/usr/src/uts/i86pc/os/hma.c
@@ -32,6 +32,7 @@ struct hma_reg {
 
 static kmutex_t hma_lock;
 static list_t hma_registrations;
+static boolean_t hma_exclusive = B_FALSE;
 
 static boolean_t hma_vmx_ready = B_FALSE;
 static const char *hma_vmx_error = NULL;
@@ -77,18 +78,12 @@ hma_init(void)
 	}
 }
 
-hma_reg_t *
-hma_register(const char *name)
+static hma_reg_t *
+hma_register_backend(const char *name)
 {
 	struct hma_reg *reg;
 	boolean_t is_ready;
 
-	VERIFY(name != NULL);
-
-	reg = kmem_zalloc(sizeof (*reg), KM_SLEEP);
-	reg->hr_name = name;
-
-	mutex_enter(&hma_lock);
 	switch (cpuid_getvendor(CPU)) {
 	case X86_VENDOR_Intel:
 		is_ready = hma_vmx_ready;
@@ -102,12 +97,48 @@ hma_register(const char *name)
 		break;
 	}
 
-	if (!is_ready) {
-		kmem_free(reg, sizeof (*reg));
-		reg = NULL;
-	} else {
-		list_insert_tail(&hma_registrations, reg);
+	if (!is_ready)
+		return (NULL);
+
+	reg = kmem_zalloc(sizeof (*reg), KM_SLEEP);
+	reg->hr_name = name;
+	list_insert_tail(&hma_registrations, reg);
+
+	return (reg);
+}
+
+hma_reg_t *
+hma_register(const char *name)
+{
+	struct hma_reg *reg = NULL;
+
+	VERIFY(name != NULL);
+
+	mutex_enter(&hma_lock);
+
+	if (!hma_exclusive)
+		reg = hma_register_backend(name);
+
+	mutex_exit(&hma_lock);
+
+	return (reg);
+}
+
+hma_reg_t *
+hma_register_exclusive(const char *name)
+{
+	struct hma_reg *reg = NULL;
+
+	VERIFY(name != NULL);
+
+	mutex_enter(&hma_lock);
+
+	if (list_is_empty(&hma_registrations)) {
+		reg = hma_register_backend(name);
+		if (reg != NULL)
+			hma_exclusive = B_TRUE;
 	}
+
 	mutex_exit(&hma_lock);
 
 	return (reg);
@@ -121,6 +152,7 @@ hma_unregister(hma_reg_t *reg)
 
 	mutex_enter(&hma_lock);
 	list_remove(&hma_registrations, reg);
+	hma_exclusive = B_FALSE;
 	mutex_exit(&hma_lock);
 	kmem_free(reg, sizeof (*reg));
 }
diff --git a/usr/src/uts/i86pc/sys/Makefile b/usr/src/uts/i86pc/sys/Makefile
index e6ea573d0b..ecd87a9538 100644
--- a/usr/src/uts/i86pc/sys/Makefile
+++ b/usr/src/uts/i86pc/sys/Makefile
@@ -46,6 +46,7 @@ CHKHDRS=  \
 	ddi_subrdefs.h	\
 	debug_info.h	\
 	fastboot.h	\
+	hma.h		\
 	ht.h		\
 	mach_mmu.h	\
 	machclock.h	\
diff --git a/usr/src/uts/i86pc/sys/hma.h b/usr/src/uts/i86pc/sys/hma.h
index 0c6161fdfc..4ccec7c29e 100644
--- a/usr/src/uts/i86pc/sys/hma.h
+++ b/usr/src/uts/i86pc/sys/hma.h
@@ -38,6 +38,7 @@ extern "C" {
  */
 typedef struct hma_reg hma_reg_t;
 extern hma_reg_t *hma_register(const char *);
+extern hma_reg_t *hma_register_exclusive(const char *);
 extern void hma_unregister(hma_reg_t *);
 
 /*
