From c6898bda4c51b46fb67e6f99024e51d94e92c4ce Mon Sep 17 00:00:00 2001
From: Jason King <jason.king@joyent.com>
Date: Wed, 11 Oct 2017 19:25:55 +0000
Subject: [PATCH] libipsecutil: stringify functions

---
 usr/src/lib/libipsecutil/common/ipsec_util.c | 41 +++++++++++++++++++-
 usr/src/lib/libipsecutil/common/ipsec_util.h |  9 +++++
 usr/src/lib/libipsecutil/common/mapfile-vers |  2 +
 3 files changed, 51 insertions(+), 1 deletion(-)

diff --git a/usr/src/lib/libipsecutil/common/ipsec_util.c b/usr/src/lib/libipsecutil/common/ipsec_util.c
index b983e75e37..1a50ea6cc7 100644
--- a/usr/src/lib/libipsecutil/common/ipsec_util.c
+++ b/usr/src/lib/libipsecutil/common/ipsec_util.c
@@ -23,7 +23,7 @@
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
  * Copyright 2012 Milan Juri. All rights reserved.
- * Copyright 2017 Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 #include <unistd.h>
@@ -361,6 +361,45 @@ dump_sockaddr(struct sockaddr *sa, uint8_t prefixlen, boolean_t addr_only,
 	return (0);
 }
 
+char *
+sadb_op_str(uint8_t op, char *buf, size_t buflen)
+{
+	static const char *pfkey_opcodes[] = {
+	    "RESERVED", "GETSPI", "UPDATE", "ADD", "DELETE", "GET",
+	    "ACQUIRE", "REGISTER", "EXPIRE", "FLUSH", "DUMP", "X_PROMISC",
+	    "X_INVERSE_ACQUIRE", "X_UPDATEPAIR", "X_DELPAIR"
+	};
+
+	if (op < A_CNT(pfkey_opcodes)) {
+		(void) strlcpy(buf, pfkey_opcodes[op], buflen);
+	} else {
+		(void) snprintf(buf, buflen, dgettext(TEXT_DOMAIN,
+		    "Unknown (%hhu)"), op);
+	}
+	return (buf);
+}
+
+char *
+sadb_type_str(uint8_t type, char *buf, size_t buflen)
+{
+	static const char *pfkey_satypes[] = {
+	    "UNSPEC", NULL, "AH", "ESP", NULL, "RSVP", "OSPFV2",
+	    "RIPV2", "MIP"
+	};
+	const char *str = NULL;
+
+	if (type < A_CNT(pfkey_satypes))
+		str = pfkey_satypes[type];
+
+	if (str != NULL) {
+		(void) strlcpy(buf, str, buflen);
+	} else {
+		(void) snprintf(buf, buflen,
+		    dgettext(TEXT_DOMAIN, "<unknown %hhu>"), type);
+	}
+	return (buf);
+}
+
 /*
  * Dump a key, any salt and bitlen.
  * The key is made up of a stream of bits. If the algorithm requires a salt
diff --git a/usr/src/lib/libipsecutil/common/ipsec_util.h b/usr/src/lib/libipsecutil/common/ipsec_util.h
index 44154e5c33..6971460229 100644
--- a/usr/src/lib/libipsecutil/common/ipsec_util.h
+++ b/usr/src/lib/libipsecutil/common/ipsec_util.h
@@ -167,6 +167,15 @@ extern void bail(char *);
  */
 extern void bail_msg(char *, ...);
 
+/*
+ * XXX_str functions return symbolic names for a given SADB value.
+ * The XXX_str functions all take an output buffer and length as arguments
+ * and fill in the buffer (upto len - 1 characters) with the symbolic name
+ * or a string with 'UNKNOWN' and the numeric value.
+ */
+extern char *sadb_op_str(uint8_t, char *, size_t);
+extern char *sadb_type_str(uint8_t, char *, size_t);
+
 /*
  * dump_XXX functions produce ASCII output from the passed in data.
  *
diff --git a/usr/src/lib/libipsecutil/common/mapfile-vers b/usr/src/lib/libipsecutil/common/mapfile-vers
index eff1929fd3..fe75c4a4d6 100644
--- a/usr/src/lib/libipsecutil/common/mapfile-vers
+++ b/usr/src/lib/libipsecutil/common/mapfile-vers
@@ -107,6 +107,8 @@ SYMBOL_VERSION SUNWprivate_1.1 {
 	rparsealg;
 	rparseidtype;
 	rparsesatype;
+	sadb_op_str;
+	sadb_type_str;
 	save_address;
 	save_assoc;
 	save_ident;
-- 
2.17.2 (Apple Git-113)

