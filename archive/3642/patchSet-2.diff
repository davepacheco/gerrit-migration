commit bcfdd74a8cf7f5ed94d3d104183e068310b559aa (refs/changes/42/3642/2)
Author: Mike Gerdts <mike.gerdts@joyent.com>
Date:   2018-03-15T15:45:00+00:00 (1 year, 7 months ago)
    
    OS-6694 bhyve uart emulation does not handle 4 byte requests

diff --git a/usr/src/cmd/bhyve/pci_lpc.c b/usr/src/cmd/bhyve/pci_lpc.c
index 2203a00baa..e6b7050aa5 100644
--- a/usr/src/cmd/bhyve/pci_lpc.c
+++ b/usr/src/cmd/bhyve/pci_lpc.c
@@ -2,6 +2,7 @@
  * Copyright (c) 2013 Neel Natu <neel@freebsd.org>
  * Copyright (c) 2013 Tycho Nightingale <tycho.nightingale@pluribusnetworks.com>
  * All rights reserved.
+ * Copyright 2018 Joyent, Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
@@ -163,6 +164,19 @@ lpc_uart_io_handler(struct vmctx *ctx, int vcpu, int in, int port, int bytes,
 			uart_write(sc->uart_softc, offset + 1, *eax >> 8);
 		}
 		break;
+	case 4:
+		if (in) {
+			*eax = uart_read(sc->uart_softc, offset);
+			*eax |= uart_read(sc->uart_softc, offset + 1) << 8;
+			*eax |= uart_read(sc->uart_softc, offset + 2) << 16;
+			*eax |= uart_read(sc->uart_softc, offset + 3) << 24;
+		} else {
+			uart_write(sc->uart_softc, offset, *eax);
+			uart_write(sc->uart_softc, offset + 1, *eax >> 8);
+			uart_write(sc->uart_softc, offset + 2, *eax >> 16);
+			uart_write(sc->uart_softc, offset + 3, *eax >> 24);
+		}
+		break;
 	default:
 		return (-1);
 	}
