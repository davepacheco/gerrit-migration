commit 8f8564d6c8ab4427a856d8a46b306fbd1078fe9b (refs/changes/26/1926/1)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2017-05-10T19:09:34+02:00 (2 years, 5 months ago)
    
    TOOLS-1773 sdcadm experimental update-agents should use node's fs API instead of fork to use symlink/unlink

diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 4d1f268..9ed72e5 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -1724,27 +1724,23 @@ SdcAdm.prototype.updateAgents = function updateAgents(options, callback) {
 
         function createLatestSymlink(_, next) {
             if (justDownload) {
-                return next();
+                next();
+                return;
             }
-            // TODO: this should just use `fs.unlink/symlink`.
-            progress('Create /usbkey/extra/agents/latest symlink');
-            common.execFilePlus({
-                argv: [ 'rm', '-f', '/usbkey/extra/agents/latest' ],
-                log: self.log
-            }, function (rmErr) {
-                if (rmErr) {
-                    return next(rmErr);
+            var symlink = '/usbkey/extra/agents/latest';
+            progress('Create %s symlink', symlink);
+            fs.unlink(symlink, function (unlinkErr) {
+                if (unlinkErr) {
+                    next(unlinkErr);
+                    return;
                 }
                 fname = path.basename(filepath);
-                common.execFilePlus({
-                    argv: ['ln', '-s', fname, 'latest'],
-                    cwd: '/usbkey/extra/agents',
-                    log: self.log
-                }, function (lnErr) {
-                    if (lnErr) {
-                        return next(lnErr);
+                fs.symlink(fname, symlink, function (symlinkErr) {
+                    if (symlinkErr) {
+                        next(symlinkErr);
+                        return;
                     }
-                    return next();
+                    next();
                 });
             });
         },
