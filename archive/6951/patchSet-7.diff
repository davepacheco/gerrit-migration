From 0df8326f8c68b161eadf7c35b1e0035312e25a37 Mon Sep 17 00:00:00 2001
From: Tim Foster <tim.foster@joyent.com>
Date: Tue, 8 Oct 2019 19:36:14 +0100
Subject: [PATCH] OS-7943 Want platform build test artifact Reviewed by: John
 Levon <john.levon@joyent.com>

---
 .gitignore                            |   2 +
 Makefile                              |  55 +++++-
 README.md                             | 182 +++++++++++++++++
 tools/generate-manifest-from-ips.nawk | 272 ++++++++++++++++++++++++++
 4 files changed, 509 insertions(+), 2 deletions(-)
 create mode 100755 tools/generate-manifest-from-ips.nawk

diff --git a/.gitignore b/.gitignore
index d1aedc4c..ed564488 100644
--- a/.gitignore
+++ b/.gitignore
@@ -18,6 +18,7 @@
 /proto.boot
 /proto.images
 /proto.strap
+/proto.tests
 /src/*.o
 /src/bootparams
 /src/disk_size
@@ -95,6 +96,7 @@ src/sysinfo_mod.so
 src/vm/node_modules/props.js
 src/zonememstat
 src/zonemon
+tests.manifest.gen
 tools/pwgen-2.06/Makefile
 tools/pwgen-2.06/autom4te.cache
 zonestat.1
diff --git a/Makefile b/Makefile
index ce6473fb..54655f47 100644
--- a/Makefile
+++ b/Makefile
@@ -31,6 +31,7 @@ MPROTO =	$(ROOT)/manifest.d
 BOOT_MPROTO =	$(ROOT)/boot.manifest.d
 BOOT_PROTO =	$(ROOT)/proto.boot
 IMAGES_PROTO =	$(ROOT)/proto.images
+TESTS_PROTO =	$(ROOT)/proto.tests
 MCPROTO =	$(ROOT)/mancheck.conf.d
 
 # On Darwin/OS X we support running 'make check'
@@ -108,6 +109,19 @@ BOOT_MANIFESTS := \
 
 SUBDIR_MANIFESTS :=	$(LOCAL_SUBDIRS:%=$(MPROTO)/%.sd.manifest)
 
+TEST_IPS_MANIFEST_ROOT = projects/illumos/usr/src/pkg/manifests
+
+#
+# To avoid cross-repository flag days, the list of IPS manifest
+# files which define the files included in the test archive is
+# stored in the illumos-joyent.git repository. By including the
+# following Makefile, we get the $(TEST_IPS_MANIFEST_FILES) macro.
+#
+include projects/illumos/usr/src/Makefile.testarchive
+
+TEST_IPS_MANIFESTS = $(TEST_IPS_MANIFEST_FILES:%=$(TEST_IPS_MANIFEST_ROOT)/%)
+TESTS_MANIFEST = $(ROOT)/tests.manifest.gen
+
 SUBDIR_MANCHECK_CONFS := \
 	$(LOCAL_SUBDIRS:%=$(MCPROTO)/%.sd.mancheck.conf)
 
@@ -119,6 +133,10 @@ IMAGES_VERSION :=	images-$(shell [[ -f $(ROOT)/configure-buildver ]] && \
     echo $$(head -n1 $(ROOT)/configure-buildver)-)$(shell head -n1 $(STAMPFILE))
 IMAGES_TARBALL :=	output/$(IMAGES_VERSION).tgz
 
+TESTS_VERSION :=	tests-$(shell [[ -f $(ROOT)/configure-buildver ]] && \
+    echo $$(head -n1 $(ROOT)/configure-buildver)-)$(shell head -n1 $(STAMPFILE))
+TESTS_TARBALL :=	output/$(TESTS_VERSION).tgz
+
 ifdef PLATFORM_PASSWORD
 PLATFORM_PASSWORD_OPT=-p $(PLATFORM_PASSWORD)
 endif
@@ -251,6 +269,33 @@ $(BOOT_MANIFEST): $(BOOT_MANIFESTS)
 	-rm -f $@
 	./tools/build_manifest $(BOOT_MPROTO) | ./tools/sorter > $@
 
+$(TESTS_MANIFEST): world
+	-rm -f $@
+	echo "f tests.manifest.gen 0444 root sys" >> $@
+	echo "f tests.buildstamp 0444 root sys" >> $@
+	cat $(TEST_IPS_MANIFESTS) | \
+	    ./tools/generate-manifest-from-ips.nawk | \
+	    ./tools/sorter >> $@
+
+
+#
+# We want a copy of the buildstamp in the tests archive, but
+# don't want to call it 'buildstamp' since that would potentially
+# overwrite the same file in the platform.tgz if they were
+# ever extracted to the same area for investigation. Juggle a bit.
+#
+$(TESTS_TARBALL): $(TESTS_MANIFEST)
+	pfexec rm -f $@
+	pfexec rm -rf $(TESTS_PROTO)
+	mkdir -p $(TESTS_PROTO)
+	cp $(STAMPFILE) $(ROOT)/tests.buildstamp
+	pfexec ./tools/builder/builder $(TESTS_MANIFEST) $(TESTS_PROTO) \
+	    $(PROTO) $(ROOT)
+	pfexec gtar -C $(TESTS_PROTO) -I pigz -cf $@ .
+	rm $(ROOT)/tests.buildstamp
+
+tests-tar: $(TESTS_TARBALL)
+
 #
 # Update source code from parent repositories.  We do this for each local
 # project as well as for illumos, illumos-extra, and smartos-live via the
@@ -378,7 +423,7 @@ check: $(JSLINT)
 
 clean:
 	./tools/clobber_illumos
-	rm -f $(MANIFEST) $(BOOT_MANIFEST)
+	rm -f $(MANIFEST) $(BOOT_MANIFEST) $(TESTS_MANIFEST)
 	rm -rf $(MPROTO)/* $(BOOT_MPROTO)/* $(MCPROTO)/*
 	(cd $(ROOT)/src && gmake clean)
 	[ ! -d $(ROOT)/projects/illumos-extra ] || \
@@ -396,8 +441,9 @@ clean:
 	(cd $(ROOT) && [ -h $(STRAP_PROTO) ] || rm -rf $(STRAP_PROTO))
 	(cd $(ROOT) && pfexec rm -rf $(BOOT_PROTO))
 	(cd $(ROOT) && pfexec rm -rf $(IMAGES_PROTO))
+	(cd $(ROOT) && pfexec rm -rf $(TESTS_PROTO))
 	(cd $(ROOT) && mkdir -p $(PROTO) $(STRAP_PROTO) $(BOOT_PROTO) \
-	    $(IMAGES_PROTO))
+	    $(IMAGES_PROTO) $(TESTS_PROTO))
 	rm -f tools/cryptpass
 	(cd tools/builder && gmake clean)
 	(cd tools/format_image && gmake clean)
@@ -456,6 +502,7 @@ PLATFORM_TARBALL		= output/$(PLATFORM_TARBALL_BASE)
 
 PUB_IMAGES_BASE			= images$(PLATFORM_DEBUG_SUFFIX)-$(PLATFORM_STAMP).tgz
 PUB_BOOT_BASE			= boot$(PLATFORM_DEBUG_SUFFIX)-$(PLATFORM_STAMP).tgz
+PUB_TESTS_BASE			= tests$(PLATFORM_DEBUG_SUFFIX)-$(PLATFORM_STAMP).tgz
 
 PUB_PLATFORM_IMG_BASE		= platform$(PLATFORM_DEBUG_SUFFIX)-$(PLATFORM_STAMP).tgz
 PUB_PLATFORM_MF_BASE		= platform$(PLATFORM_DEBUG_SUFFIX)-$(PLATFORM_STAMP).imgmanifest
@@ -465,6 +512,7 @@ PUB_PLATFORM_TARBALL		= $(PLATFORM_BITS_DIR)/$(PUB_PLATFORM_IMG_BASE)
 
 PUB_IMAGES_TARBALL		= $(PLATFORM_BITS_DIR)/$(PUB_IMAGES_BASE)
 PUB_BOOT_TARBALL		= $(PLATFORM_BITS_DIR)/$(PUB_BOOT_BASE)
+PUB_TESTS_TARBALL		= $(PLATFORM_BITS_DIR)/$(PUB_TESTS_BASE)
 
 PLATFORM_IMAGE_UUID		?= $(shell uuid -v4)
 
@@ -487,6 +535,7 @@ common-platform-publish:
 	@echo "# Publish common platform$(PLATFORM_DEBUG_SUFFIX) bits"
 	mkdir -p $(PLATFORM_BITS_DIR)
 	cp $(PLATFORM_TARBALL) $(PUB_PLATFORM_TARBALL)
+	cp $(TESTS_TARBALL) $(PUB_TESTS_TARBALL)
 	for config_file in configure-projects configure-build; do \
 	    if [[ -f $$config_file ]]; then \
 	        cp $$config_file $(PLATFORM_BITS_DIR); \
@@ -617,12 +666,14 @@ common-release: \
 .PHONY: triton-release
 triton-release: \
     images-tar \
+    tests-tar \
     triton-platform-publish \
     platform-bits-upload
 
 .PHONY: triton-smartos-release
 triton-smartos-release: \
     images-tar \
+    tests-tar \
     triton-platform-publish \
     smartos-build \
     smartos-publish \
diff --git a/README.md b/README.md
index d113a94a..103fead0 100644
--- a/README.md
+++ b/README.md
@@ -708,6 +708,188 @@ If changing a device driver, you may need to track down multiple
 generations of said hardware to test against to verify that there aren't
 regressions.
 
+Along with the various build artifacts created by the SmartOS build that
+deliver the operating system media, we produce a tarball containing the
+test suites that were included in the 'illumos-joyent' repository.
+
+A wrapper script is included in the archive which can configure a test system
+to run these tests, will extract the tests to the correct location on the
+system, and will optionally execute some of the included test suites.
+
+It has the following usage:
+
+```
+[root@kura ~]# /opt/smartos-test/bin/smartos-test -h
+Usage: smartos-test [-h] [-c] [-e] [-r] [-w] <path to tests.tgz>
+
+At least one of -c, -e, -r is required.
+
+  -h       print usage
+  -c       configure the system for testing
+  -e       execute known tests
+  -f       skip the check to ensure platform version == test version
+  -r       snapshot or rollback to zones/opt@system-test-smartos-test
+           before doing any system configuration or test execution
+  -w       when mounting the lofs /usr, make it writable
+
+```
+
+Developers should extract the script from the test archive, then run it with an
+argument that points to the test archive, and use one or more of the options
+`-r`, `-c`, `-e`.
+
+When called with all of the options listed above, `smartos-test` will do the
+following:
+
+* verify we're running on the global zone
+* verify that the user has indicated that no production data exists on this
+  system
+* verify that the test archive version matches the version of the running
+  SmartOS instance
+* take a named-snapshot of /opt if one doesn't already exist, or rollback to
+  that snapshot prior to extracting the tests to /opt
+* create an lofs-mount of /usr in order to extract portions of the test archive
+  that need to reside there
+* temporarily add any local user accounts needed to execute tests
+* download a pkgsrc bootstrap to /opt and install the pkgsrc dependencies
+  needed to run the tests
+* execute the tests serially, accumulating result codes
+* exit 0 if all tests passed, or 1 if one or more tests failed
+
+For example:
+
+```
+[root@kura /var/tmp]# tar zvxf tests-test_archive-master-20191001T134222Z.tgz ./opt/smartos-test
+Decompressing 'tests-test_archive-master-20191001T134222Z.tgz' with '/usr/bin/gzcat'...
+x ./opt/smartos-test, 0 bytes, 0 tape blocks
+x ./opt/smartos-test/README, 958 bytes, 2 tape blocks
+x ./opt/smartos-test/bin, 0 bytes, 0 tape blocks
+x ./opt/smartos-test/bin/smartos-test, 10062 bytes, 20 tape blocks
+
+[root@kura /var/tmp]# ./opt/smartos-test/bin/smartos-test -rce ./tests-test_archive-master-20191001T134222Z.tgz
+Platform version: 20191001T134222Z
+   Tests version: 20191001T134222Z
+To setup and run these tests you must create the file:
+    /lib/sdc/.sdc-test-no-production-data
+after ensuring you have no production data on this system.
+[root@kura /var/tmp]# touch /lib/sdc/.sdc-test-no-production-data
+
+[root@kura /var/tmp]# ./opt/smartos-test/bin/smartos-test -rce ./tests-test_archive-master-20191001T134222Z.tgz
+Platform version: 20191001T134222Z
+   Tests version: 20191001T134222Z
+Running zfs snapshot zones/opt@system-test-smartos-test
+Creating new lofs mount for /usr on /var/tmp/smartos-test-loopback
+820704 blocks
+Running tar -xzf ./tests-test_archive-master-20191001T134222Z.tgz -C /var/tmp/smartos-test-loopback ./usr
+Running mount -O -F lofs -o ro /var/tmp/smartos-test-loopback/usr /usr
+Running tar -xzf ./tests-test_archive-master-20191001T134222Z.tgz -C / ./opt ./kernel ./tests.manifest.gen ./tests.buildstamp
+adding cyrus user
+adding ztest user
+Running curl -kO https://pkgsrc.joyent.com/packages/SmartOS/bootstrap/bootstrap-2018Q4-tools.tar.gz
+  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
+                                 Dload  Upload   Total   Spent    Left  Speed
+100 22.9M  100 22.9M    0     0   566k      0  0:00:41  0:00:41 --:--:--  577k
+Running tar -zxpf bootstrap-2018Q4-tools.tar.gz -C /
+Running ln -s /opt/tools /opt/local
+Running pkgin -y in python27 sudo coreutils gcc7 gmake
+reading local summary...
+processing local summary...
+processing remote summary (https://pkgsrc.joyent.com/packages/SmartOS/2018Q4/tools/All)...
+pkg_summary.xz                                                                                        100%  120KB 119.9KB/s   00:00
+calculating dependencies...done.
+
+1 package to refresh:
+  bzip2-1.0.8
+
+13 packages to install:
+  libiconv-1.14nb3 tcp_wrappers-7.6.4 libffi-3.2.1nb4 gettext-lib-0.19.8.1 db4-4.8.30 openldap-client-2.4.47 cyrus-sasl-2.1.27
+  binutils-2.26.1nb1 python27-2.7.15nb1 sudo-1.8.26 coreutils-8.29nb1 gcc7-7.3.0nb4 gmake-4.2.1nb1
+
+1 to refresh, 0 to upgrade, 13 to install
+137M to download, 415M to install
+
+libiconv-1.14nb3.tgz                                                                                  100% 2068KB 689.3KB/s   00:03
+libffi-3.2.1nb4.tgz                                                                                   100%   59KB  59.4KB/s   00:00
+gettext-lib-0.19.8.1.tgz                                                                              100%   67KB  67.3KB/s   00:00
+
+.
+. (output omitted for brevity)
+.
+
+gcc7-7.3.0nb4: registering info file /opt/tools/gcc7/info/libquadmath.info
+installing gmake-4.2.1nb1...
+gmake-4.2.1nb1: registering info file /opt/tools/info/make.info
+pkg_install warnings: 0, errors: 0
+reading local summary...
+processing local summary...
+marking python27-2.7.15nb1 as non auto-removable
+marking sudo-1.8.26 as non auto-removable
+marking coreutils-8.29nb1 as non auto-removable
+marking gcc7-7.3.0nb4 as non auto-removable
+marking gmake-4.2.1nb1 as non auto-removable
+Starting test runs
+
+Starting test for bhyvetest with /opt/bhyvetest/bin/bhyvetest -ak
+Starting tests...
+output directory: /var/tmp/bhyvetest.23953
+Executing test /opt/bhyvetest/tst/mevent/lists.delete.exe ... passed
+Executing test /opt/bhyvetest/tst/mevent/read.disable.exe ... passed
+Executing test /opt/bhyvetest/tst/mevent/read.pause.exe ... passed
+Executing test /opt/bhyvetest/tst/mevent/read.requeue.exe ... passed
+
+-------------
+Results
+-------------
+
+Tests passed: 4
+Tests failed: 0
+Tests ran:    4
+
+Congrats, some tiny parts of bhyve aren't completely broken, the tests pass.
+
+Starting test-runner for crypto-tests with /opt/crypto-tests/runfiles/default.run
+Test: /opt/crypto-tests/tests/aes/kcf/setup (run as root)         [00:00] [PASS]
+Test: /opt/crypto-tests/tests/aes/kcf/aes_cbc_32 (run as root)    [00:00] [PASS]
+Test: /opt/crypto-tests/tests/aes/kcf/aes_ccm_32 (run as root)    [00:00] [PASS]
+
+.
+. (output omitted for brevity)
+.
+
+Test: /opt/util-tests/tests/vnic-mtu (run as root)                [00:00] [PASS]
+Test: /opt/util-tests/tests/xargs_test (run as root)              [00:00] [PASS]
+Test: /opt/util-tests/tests/awk/runtests.sh (run as nobody)       [02:35] [PASS]
+Test: /opt/util-tests/tests/ctf/precheck (run as root)            [00:00] [PASS]
+Test: /opt/util-tests/tests/ctf/ctftest (run as root)             [00:06] [PASS]
+Test: /opt/util-tests/tests/demangle/afl-fast (run as root)       [00:01] [PASS]
+Test: /opt/util-tests/tests/demangle/gcc-libstdc++ (run as root)  [00:00] [PASS]
+Test: /opt/util-tests/tests/demangle/llvm-stdcxxabi (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_00_blank (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_01_boolean (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_02_numbers (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_03_empty_arrays (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_04_number_arrays (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_05_strings (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_06_nested (run as root) [00:00] [PASS]
+Test: /opt/util-tests/tests/libnvpair_json/json_07_nested_arrays (run as root) [00:00] [PASS]
+
+Results Summary
+PASS      30
+
+Running Time:   00:02:47
+Percent passed: 100.0%
+Log directory:  /var/tmp/test_results/20191002T101510
+[root@kura /var/tmp]#
+```
+
+Note that each test suite emits its own results summary. If any test suites
+failed, the names of those suites are emitted by `smartos-test` just before
+the script exits.
+
+When developers are adding tests to illumos, they should ensure that new
+tests are added to `$SRC/usr/src/pkg/manifests/*.mf` as these IPS
+manifests are used to generate the test archive during the SmartOS build.
+
 ### Public Interfaces
 
 One important thing to always think about is whether or not the thing
diff --git a/tools/generate-manifest-from-ips.nawk b/tools/generate-manifest-from-ips.nawk
new file mode 100755
index 00000000..5510c0e6
--- /dev/null
+++ b/tools/generate-manifest-from-ips.nawk
@@ -0,0 +1,272 @@
+#!/opt/local/bin/nawk -f
+
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+#
+# This nawk script is used to generate SmartOS 'manifest' files from
+# IPS package manifests. This is basic, and doesn't compare to the significant
+# tooling infrastructure that the IPS provides (pkgmogrify transforms,
+# dependency generation, include directives, etc.) but we don't have that
+# available when building SmartOS, so we make do.
+# There is limited support here for the pkgmogrify transforms that are commonly
+# found in IPS manifests as checked into the Illumos gate.
+#
+
+#
+# Define a series of global variables.
+#
+BEGIN {
+    action_name = "";
+
+    # attrs are the IPS attributes for a given action, set a dummy entry for
+    # 'path' here as a canary.
+    attrs["path"] = "tweet tweet";
+
+    # the full text of the action, built up over continuation lines if needed
+    action = "";
+
+    # A state flag, '1' if we're processing a continuation line, i.e. the
+    # preceding line ended with a '\' character. Set to '0' otherwise.
+    continuation = 0;
+
+    # defaults if specific attributes are not set. pkgmogrify transforms
+    # in usr/src/pkg/defaults will do a much better job here unfortunately.
+    default_mode = "0555";
+    default_owner = "root";
+    default_group = "sys";
+
+    # A dictionary of the pkgmogrify macros commonly used by Illumos IPS
+    # manifests. This is not exhaustive.
+    macros["ARCH"] = "i386";
+    macros["ARCH32"] = "i86";
+    macros["ARCH64"] = "amd64";
+    macros["i386_ONLY"] = "";
+
+    # set to '1' to enable debug messages.
+    debug_mode = 0;
+
+    # the set of actions we ignore. Leading and trailing spaces are significant
+    # as we search for ' <string> ' to cope with substrings, eg. link hardlink
+    ignored_actions = " set license device signature ";
+}
+
+function debug(text) {
+    if (debug_mode == 1) {
+        print " ==== " text;
+    }
+}
+
+function replace_macros(string) {
+    for (macro in macros) {
+        re = "\\$\\(" macro "\\)"
+        sub(re, macros[macro], string);
+    }
+    return string;
+}
+
+#
+# Break our action into the global associative array, 'attrs'.
+#
+function parse_action() {
+    if (length(action) == 0) {
+        debug("attempted to parse empty action!");
+        return;
+    }
+    split(action, pairs);
+    for (i=1; i<= length(pairs); i++) {
+        split(pairs[i], keyval, "=");
+        attrs[keyval[1]] = keyval[2];
+    }
+}
+
+#
+# Write a line of the output manifest, having computed 'action_name' and 'attrs'
+#
+function emit_line() {
+    if (length(action) == 0) {
+        debug("attempted to emit line with no action present!");
+        return;
+    }
+
+    if (action_name == "file") {
+        name = "f";
+        default_mode = "0444";
+    } else if (action_name == "dir") {
+        name = "d";
+        default_mode = "0555";
+    } else if (action_name == "link") {
+        name = "s";
+    } else if (action_name == "hardlink") {
+        name = "h";
+    }
+
+    if ("owner" in attrs) {
+        owner = attrs["owner"]
+    } else {
+        owner = default_owner;
+    }
+
+    if ("group" in attrs) {
+        group = attrs["group"]
+    } else {
+        group = default_group;
+    }
+
+    if ("mode" in attrs) {
+        mode = attrs["mode"];
+    } else {
+        mode = default_mode;
+    }
+
+    if (action_name == "file" || action_name == "dir") {
+        print name " " replace_macros(attrs["path"]) " " mode " " owner " " group;
+    } else if (action_name == "link" || action_name == "hardlink") {
+
+        #
+        # SmartOS manifests expect full paths in targets, but IPS manifests
+        # don't require that. Try to catch these cases by looking for link
+        # targets that are either relative, or contain no directory
+        # separators, and prepend the parent directory of the source path.
+        #
+        if (match(attrs["target"], "^\.") != 0 || match(attrs["target"], "/") == 0) {
+            split(attrs["path"], path_comps, "/");
+            targ_dir = "";
+            for (i=1; i < length(path_comps); i++) {
+                targ_dir = targ_dir path_comps[i] "/";
+            }
+            debug("missing or relative target path. Computed " targ_dir);
+            attrs["target"] = targ_dir attrs["target"];
+        }
+        print name " " replace_macros(attrs["path"]) "=" replace_macros(attrs["target"]);
+    }
+
+    action = "";
+    action_name = "";
+    delete attrs;
+    # revive our canary
+    attrs["path"] = "tweet tweet";
+}
+
+#
+# returns 1 if we should call 'next' to read the next line
+# and continue loading this action (when the action line has
+# a continuation line) We can't call 'next' directly from
+# a function in awk.
+#
+function parse_or_next() {
+    if (match($0, "\\\\$") != 0) {
+        continuation = 1;
+        sub("\\\\$", "", $0);
+        action = $0;
+        return 1;
+    } else {
+        action = $0;
+        parse_action();
+        emit_line();
+        return 0
+    }
+}
+
+#
+# Deal with file actions
+#
+/^file|^\$\(i386_ONLY\)file/ {
+    debug("file action: " $0);
+    action_name = "file";
+    res = parse_or_next();
+    if (res == 1) {
+        next;
+    }
+}
+
+#
+# Deal with directory actions
+#
+/^dir|^\$\(i386_ONLY\)dir/ {
+    debug("dir action: " $0);
+    action_name = "dir";
+    res = parse_or_next();
+    if (res == 1) {
+        next;
+    }
+}
+
+#
+# Deal with hardlinks
+#
+/^hardlink|^\$\(i386_ONLY\)hardlink/ {
+    debug("hardlink action: " $0);
+    action_name = "hardlink";
+    res = parse_or_next();
+    if (res == 1) {
+        next;
+    }
+}
+
+#
+# Deal with symlinks
+#
+/^link|^\$\(i386_ONLY\)link/ {
+    debug("symlink action: " $0);
+    action_name = "link";
+    res = parse_or_next();
+    if (res == 1) {
+        next;
+    }
+}
+
+#
+# Deal with comments by just ignoring them
+#
+/^#/ {
+    debug("comment: " $0);
+    next;
+}
+
+#
+# The "match-everything" case. Deal with continuation lines, and log/ignore
+# all actions we don't know about.
+#
+// {
+    split($0, words, " ");
+    search = " " words[1] " "
+    if (match(ignored_actions, search) != 0) {
+        debug("ignored action: " $0);
+        next;
+    }
+    if (continuation == 1) {
+        cont = $0;
+        if (match(cont, "\\\\$") != 0) {
+            debug("still in a continuation");
+
+            sub("\\\\$", "", cont);
+            debug("cont is: " cont)
+            action = action cont;
+            debug("action is now: " action)
+            next;
+        } else {
+            debug("ended our continuation")
+            continuation = 0;
+            action = action cont;
+            debug("complete action is: " action)
+            parse_action();
+            emit_line();
+        }
+    }
+}
+
+END {
+    # drain any remaining action we have buffered till now.
+    if (continuation == 1) {
+        parse_action();
+        emit_line();
+    }
+}
-- 
2.21.0

