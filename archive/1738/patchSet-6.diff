commit 8e4e0189fcd284cd29ee1a9d8606349ebd8d831a (refs/changes/38/1738/6)
Author: Kody A Kantor <kody@kkantor.com>
Date:   2018-05-08T18:33:54+00:00 (1 year, 5 months ago)
    
    MANTA-2980 electric-moray should report moray shard for putObject operations
    MANTA-3123 muskie shark errors should be more explicit

diff --git a/lib/errors.js b/lib/errors.js
index bacc920..a542cda 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -8,7 +8,7 @@
  * Copyright (c) 2018, Joyent, Inc.
  */
 
-var assert = require('assert');
+var assert = require('assert-plus');
 var fs = require('fs');
 var path = require('path');
 var util = require('util');
@@ -184,6 +184,7 @@ util.inherits(ExpectedUpgradeError, MuskieError);
 
 
 function InternalError(cause) {
+    assert.ok(!cause || cause instanceof Error, 'cause');
     MuskieError.call(this, {
         restCode: 'InternalError',
         statusCode: 500,
@@ -696,7 +697,7 @@ function translateError(err, req) {
         return (new ConcurrentRequestError(req.path()));
     }
 
-    return (new InternalError());
+    return (new InternalError(err));
 }
 
 
diff --git a/lib/obj.js b/lib/obj.js
index af04a2b..97e1f67 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -53,7 +53,6 @@
 // requests, the number of copies, the size, etc.
 
 var crypto = require('crypto');
-var util = require('util');
 
 var assert = require('assert-plus');
 var libmanta = require('libmanta');
@@ -75,7 +74,6 @@ require('./errors');
 
 var clone = utils.shallowCopy;
 var httpDate = restify.httpDate;
-var sprintf = util.format;
 
 var DATA_TIMEOUT = parseInt(process.env.MUSKIE_DATA_TIMEOUT || 45000, 10);
 
@@ -502,7 +500,7 @@ function sharkStreams(req, res, next) {
                 muskieMd5: check.digest('base64'),
                 makoMd5: _md5s
             }, 'mako didnt recieve what muskie sent');
-            var m = sprintf('muskie md5 %s and mako md5 ' +
+            var m = new VError('muskie md5 %s and mako md5 ' +
                             '%s don\'t match', check.digest('base64'),
                             _md5s.join());
             next_err(new InternalError(m));
@@ -555,7 +553,9 @@ function sharkStreams(req, res, next) {
                         client_res: sres,
                         body: body
                     }, 'mako: response error');
-                    next_err(new InternalError());
+                    var m = new VError('mako response error, storage id (%s)',
+                        s._shark.manta_storage_id);
+                    next_err(new InternalError(m));
                 });
                 sres.once('error', function (err) {
                     next_err(new InternalError(err));
@@ -638,8 +638,14 @@ function saveMetadata(req, res, next) {
         log.debug({
             options: opts
         }, 'saveMetadata: entered');
-        req.moray.putMetadata(opts, function (err2) {
+        req.moray.putMetadata(opts, function (err2, obj, data) {
             req.sharks = null;
+
+            if (data !== undefined && data._node) {
+                // Record the name of the shard contacted.
+                req.entryShard = data._node.pnode;
+            }
+
             if (err2) {
                 log.debug(err2, 'saveMetadata: failed');
                 next(err2);
