commit 4cf73923cd4079b460d7a0a440bb410b8f0125d0 (refs/changes/38/1738/3)
Author: Kody A Kantor <kody.kantor@gmail.com>
Date:   2017-08-31T22:30:34+00:00 (2 years, 1 month ago)
    
    MANTA-2980 electric-moray should report moray shard for operations like 'putObject'
    MANTA-3123 muskie shark errors should be more explicit

diff --git a/lib/errors.js b/lib/errors.js
index 8e1e22d..6900f28 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -8,7 +8,7 @@
  * Copyright (c) 2017, Joyent, Inc.
  */
 
-var assert = require('assert');
+var assertplus = require('assert-plus');
 var fs = require('fs');
 var path = require('path');
 var util = require('util');
@@ -184,6 +184,10 @@ util.inherits(ExpectedUpgradeError, MuskieError);
 
 
 function InternalError(cause) {
+    assertplus.optionalObject(cause);
+    if (cause && !(cause instanceof Error)) {
+        throw new VError('Cause is not a valid error object: %j', cause);
+    }
     MuskieError.call(this, {
         restCode: 'InternalError',
         statusCode: 500,
@@ -662,7 +666,7 @@ function translateError(err, req) {
         return (new ConcurrentRequestError(req.path()));
     }
 
-    return (new InternalError());
+    return (new InternalError(err));
 }
 
 
diff --git a/lib/obj.js b/lib/obj.js
index 23082b5..8efbe9d 100644
--- a/lib/obj.js
+++ b/lib/obj.js
@@ -53,7 +53,6 @@
 // requests, the number of copies, the size, etc.
 
 var crypto = require('crypto');
-var util = require('util');
 
 var assert = require('assert-plus');
 var libmanta = require('libmanta');
@@ -75,7 +74,6 @@ require('./errors');
 
 var clone = utils.shallowCopy;
 var httpDate = restify.httpDate;
-var sprintf = util.format;
 
 var DATA_TIMEOUT = parseInt(process.env.MUSKIE_DATA_TIMEOUT || 45000, 10);
 
@@ -490,7 +488,7 @@ function sharkStreams(req, res, next) {
                 muskieMd5: check.digest('base64'),
                 makoMd5: _md5s
             }, 'mako didnt recieve what muskie sent');
-            var m = sprintf('muskie md5 %s and mako md5 ' +
+            var m = new VError('muskie md5 %s and mako md5 ' +
                             '%s don\'t match', check.digest('base64'),
                             _md5s.join());
             next_err(new InternalError(m));
@@ -543,7 +541,9 @@ function sharkStreams(req, res, next) {
                         client_res: sres,
                         body: body
                     }, 'mako: response error');
-                    next_err(new InternalError());
+                    var m = new VError('mako response error, storage id (%s)',
+                                    s._shark.manta_storage_id);
+                    next_err(new InternalError(m));
                 });
                 sres.once('error', function (err) {
                     next_err(new InternalError(err));
@@ -626,8 +626,12 @@ function saveMetadata(req, res, next) {
         log.debug({
             options: opts
         }, 'saveMetadata: entered');
-        req.moray.putMetadata(opts, function (err2) {
+        req.moray.putMetadata(opts, function (err2, obj) {
             req.sharks = null;
+            if (obj !== undefined && obj._node) {
+                // Record the name of the shard contacted.
+                req.entryShard = obj._node.pnode;
+            }
             if (err2) {
                 log.debug(err2, 'saveMetadata: failed');
                 next(err2);
