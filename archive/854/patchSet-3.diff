From 9940fb4ca689613b17cbf1a1c7b421e09e74af77 Mon Sep 17 00:00:00 2001
From: Richard Bradley <richard.bradley@joyent.com>
Date: Mon, 7 Nov 2016 16:58:56 +0000
Subject: [PATCH] MANTA-2587 manta-net.sh Needs to Support Adding tags to
 Aggregations MANTA-2150 manta net config and validate allows for mac
 addresses to have single-digits between ::

---
 networking/manta-net.sh | 91 +++++++++++++++++++++++++++++++++--------
 networking/validate.js  | 57 ++++++++++++++++++++++----
 2 files changed, 123 insertions(+), 25 deletions(-)

diff --git a/networking/manta-net.sh b/networking/manta-net.sh
index 708c774..f37c5f0 100755
--- a/networking/manta-net.sh
+++ b/networking/manta-net.sh
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2015, Joyent, Inc.
+# Copyright (c) 2016, Joyent, Inc.
 #
 
 #
@@ -376,7 +376,7 @@ function fetch_ufds_ids
 
 function add_tags
 {
-	local stanza nid nodes n map nmap mac ouuid
+	local stanza nid nodes tag n map if_type interface
 	stanza=$1
 	nid=$2
 	[[ -z "$stanza" ]] && fatal "missing required stanza for add_tags"
@@ -388,25 +388,82 @@ function add_tags
 	[[ $? -eq 0 ]] || fatal "failed to get nic tag for stanza $stanza"
 	[[ -z "$tag" ]] && fatal "unexpected empty nic tag"
 	for n in $nodes; do
-		map=$(json mac_mappings.$n.$tag < $mn_config)
-		[[ $? -eq 0 ]] || fatal "failed to get mac mapping via json"
-		[[ -z "$map" ]] && "empty mac mapping"
-		mac=$(echo $map | sed -e 's/^0:/00:/' -e 's/:0:/:00:/g' -e \
-		    's/:0$/:00/g')
-		[[ $? -eq 0 ]] || fatal "failed to translate mac"
-		nmap=$(echo $mac | sed 's/://g')
-		[[ $? -eq 0 ]] || fatal "failed to translate mac"
-		ouuid=$(sdc-napi /nics/$nmap | json -H belongs_to_uuid)
-		[[ $? -eq 0 ]] || fatal "failed to get server uuid for: $map"
-		[[ "$ouuid" == "$n" ]] || fatal "mapping does nic not match " \
-		    "nic owner for $map, expected it to be $n, found $ouuid"
-		sdc-napi /nics/$nmap | json -H nic_tags_provided | json -a | \
-		    grep -q "^$tag$" && continue
-		sdc-server update-nictags -s $n "${tag}_nic=$mac"
+		map=$(json mac_mappings.$n.$tag \
+			nic_mappings.$n.$tag < $mn_config)
+		[[ $? -eq 0 ]] || fatal "failed to get nic mapping via json"
+		[[ -z "$map" ]] && fatal "empty $tag interface mapping " \
+			"for $n"
+
+		if $(echo $map | json --validate -q); then
+			if_type=$(echo $map | json -ka)
+			[[ $? -eq 0 ]] || fatal "failed to translate mapping"
+			interface=$(echo $map | json $if_type)
+			[[ $? -eq 0 ]] || fatal "failed to translate mapping"
+		else
+			if_type="mac"
+			interface=$map
+		fi
+
+		if [[ "$if_type" == "mac" ]]; then
+			add_tag_to_mac $interface $n $tag
+		elif [[ "$if_type" == "aggr" ]]; then
+			add_tag_to_aggr $interface $n $tag
+		fi
 		[[ $? -eq 0 ]] || fatal "failed to add nic tag"
 	done
 }
 
+function add_tag_to_mac
+{
+	local interface node tag mac nmap ouuid
+	interface=$1
+	node=$2
+	tag=$3
+	[[ -z "$interface" ]] && fatal "missing required interface " \
+		"for add_tag_to_mac"
+	[[ -z "$node" ]] && fatal "missing required node for add_tag_to_mac"
+	[[ -z "$tag" ]] && fatal "missing required tag for add_tag_to_mac"
+	mac=$(echo $interface | sed -e 's/\<.\>/0&/g')
+	[[ $? -eq 0 ]] || fatal "failed to translate mac"
+	nmap=$(echo $mac | sed -e 's/://g')
+	[[ $? -eq 0 ]] || fatal "failed to translate mac"
+	ouuid=$(sdc-napi /nics/$nmap | json -H belongs_to_uuid)
+	[[ $? -eq 0 ]] || fatal "failed to get server uuid for $interface"
+	[[ -z "$ouuid" ]] && fatal "nic $interface not found at /nics/$nmap"
+	[[ "$ouuid" == "$n" ]] || fatal "mapping does not match nic owner " \
+		"for $interface, expected it to be $n, found $ouuid"
+	sdc-napi /nics/$nmap | json -H nic_tags_provided | json -a | \
+		grep -q "^$tag$" && continue
+	sdc-server update-nictags -s $n "${tag}_nic=$interface"
+}
+
+function add_tag_to_aggr
+{
+	local interface node tag aggr ouuid existing_tags update_tags
+	interface=$1
+	node=$2
+	tag=$3
+	[[ -z "$interface" ]] && fatal "missing required interface " \
+		"for add_tag_to_aggr"
+	[[ -z "$node" ]] && fatal "missing required node for add_tag_to_aggr"
+	[[ -z "$tag" ]] && fatal "missing required tag for add_tag_to_aggr"
+	aggr=$n-$interface
+	ouuid=$(sdc-napi /aggregations/$aggr | json -H belongs_to_uuid)
+	[[ $? -eq 0 ]] || fatal "failed to get server uuid for $aggr"
+	[[ -z "$ouuid" ]] && fatal "aggr $interface not found at " \
+		"/aggregations/$aggr"
+	[[ "$ouuid" == "$n" ]] || fatal "mapping does not match aggr owner " \
+		"for $aggr, expected it to be $n, found $ouuid"
+	sdc-napi /aggregations/$aggr | json -H nic_tags_provided | json -a | \
+		grep -q "^$tag$" && continue
+	existing_tags=$(sdc-napi /aggregations/$aggr | \
+		json -aH nic_tags_provided)
+	update_tags=$(echo $existing_tags $'\n' "[\"$tag\"]" | json -g)
+	sdc-napi /aggregations/$aggr -X PUT -d "{
+		\"nic_tags_provided\": $update_tags
+	}"
+}
+
 function append_routes
 {
 	local routes outfile
diff --git a/networking/validate.js b/networking/validate.js
index 3adfbf9..e3f316b 100644
--- a/networking/validate.js
+++ b/networking/validate.js
@@ -21,7 +21,7 @@ function fatal(message)
 
 function main()
 {
-	var spec, az, i;
+	var spec, az, i, mappings, nic;
 
 	if (process.argv.length !== 3) {
 		console.error('validate.js: <file>');
@@ -29,8 +29,15 @@ function main()
 	}
 	spec = JSON.parse(mod_fs.readFileSync(process.argv[2]));
 
-	if (!('mac_mappings' in spec))
-		fatal('missing mac_mappings');
+	if (!('mac_mappings' in spec) &&
+		!('nic_mappings' in spec))
+		fatal('missing nic_mappings or mac_mappings');
+
+	if(('mac_mappings' in spec) &&
+		('nic_mappings' in spec))
+		fatal('either nic_mappings or mac_mappings');
+
+	mappings = spec['mac_mappings'] || spec['nic_mappings'];
 
 	if (!('marlin_nodes' in spec))
 		fatal('missing marlin_nodes');
@@ -42,14 +49,31 @@ function main()
 		fatal('no marlin CNs listed');
 
 	for (i = 0; i < spec['marlin_nodes'].length; i++) {
-		if (!(spec['marlin_nodes'][i] in spec['mac_mappings']))
-			fatal('missing node from mac_mappings: ' +
+		if (!(spec['marlin_nodes'][i] in mappings))
+			fatal('missing node from mappings: ' +
 			    spec['marlin_nodes'][i]);
 		if (!(spec['marlin']['nic_tag'] in
-		    spec['mac_mappings'][spec['marlin_nodes'][i]])) {
+		    mappings[spec['marlin_nodes'][i]])) {
 			fatal('missing tag ' + spec['marlin']['nic_tag'] +
 			    ' in mac_mappings.' + spec['marlin_nodes'][i]);
 		}
+		nic = mappings[spec['marlin_nodes'][i]][spec['marlin']['nic_tag']];
+		if ('mac_mappings' in spec) {
+			if (!(typeof nic === 'string'))
+				fatal('mac_mappings.' + spec['marlin_nodes'][i] + '.' +
+				    spec['marlin']['nic_tag'] + ' must be a string');
+		}
+		if ('nic_mappings' in spec) {
+			if (!(typeof nic === 'object'))
+				fatal('nic_mappings.' + spec['marlin_nodes'][i] + '.' +
+				    spec['marlin']['nic_tag'] + ' must be an object');
+			if (Object.keys(nic).length > 1 ||
+				!('mac' in nic) && !('aggr' in nic)) {
+				fatal('nic_mappings.' + spec['marlin_nodes'][i] + '.' +
+				    spec['marlin']['nic_tag'] + ' must only have ' +
+					'property "mac" or "aggr"');
+			}
+		}
 	}
 
 	if (!('manta_nodes' in spec))
@@ -62,14 +86,31 @@ function main()
 		fatal('no indexing CNs listed');
 
 	for (i = 0; i < spec['manta_nodes'].length; i++) {
-		if (!(spec['manta_nodes'][i] in spec['mac_mappings']))
+		if (!(spec['manta_nodes'][i] in mappings))
 			fatal('missing node from mac_mappings: ' +
 			    spec['manta_nodes'][i]);
 		if (!(spec['manta']['nic_tag'] in
-		    spec['mac_mappings'][spec['manta_nodes'][i]])) {
+		    mappings[spec['manta_nodes'][i]])) {
 			fatal('missing tag ' + spec['manta']['nic_tag'] +
 			    ' in mac_mappings.' + spec['manta_nodes'][i]);
 		}
+		nic = mappings[spec['manta_nodes'][i]][spec['manta']['nic_tag']];
+		if ('mac_mappings' in spec) {
+			if (!(typeof nic === 'string'))
+				fatal('mac_mappings.' + spec['manta_nodes'][i] + '.' +
+				    spec['manta']['nic_tag'] + ' must be a string');
+		}
+		if ('nic_mappings' in spec) {
+			if (!(typeof nic === 'object'))
+				fatal('nic_mappings.' + spec['manta_nodes'][i] + '.' +
+				    spec['manta']['nic_tag'] + ' must be an object');
+			if (Object.keys(nic).length > 1 ||
+				!('mac' in nic) && !('aggr' in nic)) {
+				fatal('nic_mappings.' + spec['manta_nodes'][i] + '.' +
+				    spec['manta']['nic_tag'] + ' must only have ' +
+					'property "mac" or "aggr"');
+			}
+		}
 	}
 
 	if (!('azs' in spec))
-- 
2.21.0

