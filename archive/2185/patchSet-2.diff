From 48d06e2f428a1149ced10838f2837634e84cd36d Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Mon, 17 Jul 2017 16:51:09 +0200
Subject: [PATCH] SAPI-285 Create Service should not validate presence of
 provide image_uuid into local IMGAPI Reviewed by: Trent Mick
 <trentm@gmail.com>

---
 lib/server/attributes.js | 74 ++++++++--------------------------------
 test/services.test.js    | 24 +------------
 2 files changed, 16 insertions(+), 82 deletions(-)

diff --git a/lib/server/attributes.js b/lib/server/attributes.js
index eb0a570..856fd33 100644
--- a/lib/server/attributes.js
+++ b/lib/server/attributes.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -26,7 +26,6 @@
 
 var assert = require('assert-plus');
 var async = require('async');
-var restify = require('restify');
 var util = require('util');
 var vasync = require('vasync');
 
@@ -424,72 +423,29 @@ function validManifests(manifests, cb) {
     });
 }
 
-function validImage(uuid, cb) {
-    var log = this.log;
-    var imgapi = this.model.imgapi;
-
-    assert.string(uuid, 'uuid');
-
-    if (this.model.proto_mode && !this.model.proto_transition) {
-        log.info('in proto mode, assume image %s is valid', uuid);
-        return (cb(null));
-    }
-
-    log.debug('validating image_uuid %s', uuid);
-
-    imgapi.getImage(uuid, function (err, image) {
-        if (err || !image) {
-            var msg = sprintf(
-                'no such image in local IMGAPI: %s', uuid);
-            log.error(err, msg);
-            return (cb(new Error(msg)));
-        }
-
-        return (cb(null));
-    });
-
-    return (null);
-}
-
 function validParams(params, cb) {
     var self = this;
     var log = self.log;
 
     assert.object(params, 'params');
 
-    async.waterfall([
-        function (subcb) {
-            if (!params.image_uuid)
-                return (subcb(null));
-            validImage.call(self, params.image_uuid,
-                function (err) {
-                subcb(err);
-            });
-        },
-        function (subcb) {
-            if (!params.networks)
-                return (subcb(null));
-
-            resolveNetworks.call(self, params.networks, params.owner_uuid,
-                function (err) {
-                if (err &&
-                    err.name === 'UnsupportedOperationError' &&
-                    self.model.proto_mode) {
-                    log.info('skipping validation of ' +
-                        'network names in proto mode');
-                    err = null;
-                }
-
-                return (subcb(err));
-            });
+    if (!params.networks) {
+        cb();
+        return;
+    }
 
-            return (null);
+    resolveNetworks.call(self, params.networks, params.owner_uuid,
+        function (err) {
+        if (err &&
+            err.name === 'UnsupportedOperationError' &&
+            self.model.proto_mode) {
+            log.info('skipping validation of ' +
+                'network names in proto mode');
+            err = null;
         }
-    ], function (err) {
-        return (cb(err));
-    });
 
-    return (null);
+        cb(err);
+    });
 }
 
 function validType(type, cb) {
diff --git a/test/services.test.js b/test/services.test.js
index 2facbec..46d00ff 100644
--- a/test/services.test.js
+++ b/test/services.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -136,28 +136,6 @@ test('create w/ other invalid inputs', function (t) {
         function (_, cb) {
             common.createApplication({sapi: self.sapi, uuid: app_uuid}, cb);
         },
-        function (_, cb) {
-            // invalid image_uuid
-            var badsvc = jsprim.deepCopy(svc);
-            badsvc.params.image_uuid = node_uuid.v4();
-
-            self.client.post(URI, badsvc, function (err, req, res) {
-                /*
-                 * There's no connection to IMGAPI in proto
-                 * mode, so there's no validation of the
-                 * image_uuid.
-                 */
-                if (process.env.TEST_SAPI_PROTO_MODE ===
-                    'true') {
-                    t.ifError(err);
-                    t.equal(res.statusCode, 200);
-                } else {
-                    t.ok(err);
-                    t.equal(res.statusCode, 500);
-                }
-                cb();
-            });
-        },
         function (_, cb) {
             // invalid config manifest
             var badsvc = jsprim.deepCopy(svc);
-- 
2.21.0

