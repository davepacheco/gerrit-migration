From de2554fdf1f4396fbee153a9b64dd030d85a618a Mon Sep 17 00:00:00 2001
From: Ryan Zezeski <rpz@joyent.com>
Date: Tue, 30 May 2017 14:42:11 -0600
Subject: [PATCH] OS-6151 mac_tx_srs_quiesce() can kill a maxbw link

---
 usr/src/uts/common/io/mac/mac_datapath_setup.c |  7 +++++--
 usr/src/uts/common/io/mac/mac_sched.c          | 14 +++++++-------
 usr/src/uts/common/io/mac/mac_soft_ring.c      | 13 +++++++------
 3 files changed, 19 insertions(+), 15 deletions(-)

diff --git a/usr/src/uts/common/io/mac/mac_datapath_setup.c b/usr/src/uts/common/io/mac/mac_datapath_setup.c
index c2d09868e0..e279a6d20a 100644
--- a/usr/src/uts/common/io/mac/mac_datapath_setup.c
+++ b/usr/src/uts/common/io/mac/mac_datapath_setup.c
@@ -20,7 +20,7 @@
  */
 /*
  * Copyright (c) 2008, 2010, Oracle and/or its affiliates. All rights reserved.
- * Copyright 2015, Joyent, Inc.
+ * Copyright 2017, Joyent, Inc.
  */
 
 #include <sys/types.h>
@@ -3457,10 +3457,13 @@ mac_srs_soft_rings_quiesce(mac_soft_ring_set_t *mac_srs, uint_t s_ring_flag)
 	mutex_exit(&mac_srs->srs_lock);
 
 	for (softring = mac_srs->srs_soft_ring_head; softring != NULL;
-	    softring = softring->s_ring_next)
+	    softring = softring->s_ring_next) {
 		(void) untimeout(softring->s_ring_tid);
+		softring->s_ring_tid = NULL;
+	}
 
 	(void) untimeout(mac_srs->srs_tid);
+	mac_srs->srs_tid = NULL;
 
 	mutex_enter(&mac_srs->srs_lock);
 }
diff --git a/usr/src/uts/common/io/mac/mac_sched.c b/usr/src/uts/common/io/mac/mac_sched.c
index 746ee45664..86f4246a9d 100644
--- a/usr/src/uts/common/io/mac/mac_sched.c
+++ b/usr/src/uts/common/io/mac/mac_sched.c
@@ -21,7 +21,7 @@
 /*
  * Copyright 2010 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright 2015 Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  * Copyright 2013 Nexenta Systems, Inc. All rights reserved.
  */
 
@@ -1413,12 +1413,12 @@ mac_srs_fire(void *arg)
 	mac_soft_ring_set_t *mac_srs = (mac_soft_ring_set_t *)arg;
 
 	mutex_enter(&mac_srs->srs_lock);
-	if (mac_srs->srs_tid == 0) {
+	if (mac_srs->srs_tid == NULL) {
 		mutex_exit(&mac_srs->srs_lock);
 		return;
 	}
 
-	mac_srs->srs_tid = 0;
+	mac_srs->srs_tid = NULL;
 	if (!(mac_srs->srs_state & SRS_PROC))
 		cv_signal(&mac_srs->srs_async);
 
@@ -2613,8 +2613,8 @@ again:
 	ASSERT(head != NULL);
 	ASSERT(tail != NULL);
 
-	if ((tid = mac_srs->srs_tid) != 0)
-		mac_srs->srs_tid = 0;
+	if ((tid = mac_srs->srs_tid) != NULL)
+		mac_srs->srs_tid = NULL;
 
 	mac_srs->srs_state |= (SRS_PROC|proc_type);
 
@@ -2891,8 +2891,8 @@ again:
 		mutex_exit(&mac_srs->srs_bw->mac_bw_lock);
 	}
 
-	if ((tid = mac_srs->srs_tid) != 0)
-		mac_srs->srs_tid = 0;
+	if ((tid = mac_srs->srs_tid) != NULL)
+		mac_srs->srs_tid = NULL;
 
 	mac_srs->srs_state |= (SRS_PROC|proc_type);
 	MAC_SRS_WORKER_POLLING_ON(mac_srs);
diff --git a/usr/src/uts/common/io/mac/mac_soft_ring.c b/usr/src/uts/common/io/mac/mac_soft_ring.c
index 151c99893b..2e056c8a2e 100644
--- a/usr/src/uts/common/io/mac/mac_soft_ring.c
+++ b/usr/src/uts/common/io/mac/mac_soft_ring.c
@@ -21,6 +21,7 @@
 /*
  * Copyright 2010 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
+ * Copyright 2017 Joyent, Inc.
  */
 
 /*
@@ -324,12 +325,12 @@ mac_soft_ring_fire(void *arg)
 	mac_soft_ring_t	*ringp = arg;
 
 	mutex_enter(&ringp->s_ring_lock);
-	if (ringp->s_ring_tid == 0) {
+	if (ringp->s_ring_tid == NULL) {
 		mutex_exit(&ringp->s_ring_lock);
 		return;
 	}
 
-	ringp->s_ring_tid = 0;
+	ringp->s_ring_tid = NULL;
 
 	if (!(ringp->s_ring_state & S_RING_PROC)) {
 		cv_signal(&ringp->s_ring_async);
@@ -363,8 +364,8 @@ mac_rx_soft_ring_drain(mac_soft_ring_t *ringp)
 	ASSERT(mutex_owned(&ringp->s_ring_lock));
 	ASSERT(!(ringp->s_ring_state & S_RING_PROC));
 
-	if ((tid = ringp->s_ring_tid) != 0)
-		ringp->s_ring_tid = 0;
+	if ((tid = ringp->s_ring_tid) != NULL)
+		ringp->s_ring_tid = NULL;
 
 	ringp->s_ring_state |= S_RING_PROC;
 
@@ -383,9 +384,9 @@ mac_rx_soft_ring_drain(mac_soft_ring_t *ringp)
 		ringp->s_ring_size = 0;
 		mutex_exit(&ringp->s_ring_lock);
 
-		if (tid != 0) {
+		if (tid != NULL) {
 			(void) untimeout(tid);
-			tid = 0;
+			tid = NULL;
 		}
 
 		(*proc)(arg1, arg2, mp, NULL);
-- 
2.21.0

