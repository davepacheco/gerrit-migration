commit 5907389f73e00e92953432220767f63a64f2ae87 (refs/changes/45/3445/2)
Author: Josh Wilsdon <josh@wilsdon.ca>
Date:   2018-02-22T16:11:08-08:00 (1 year, 7 months ago)
    
    TRITON-173 CNAPI using wrong origin image

diff --git a/targets.json.in b/targets.json.in
index a0d3dae..096927e 100644
--- a/targets.json.in
+++ b/targets.json.in
@@ -785,7 +785,8 @@ cat <<EOF
     "image_name": "cnapi",
     "image_description": "SDC CNAPI",
     "image_version": "1.0.0",
-    "image_uuid": "fd2cc906-8938-11e3-beab-4359c665ac99",
+    "// image_uuid": "triton-origin-multiarch-15.4.1@1.0.1",
+    "image_uuid": "04a48d7d-6bb5-4e83-8c3b-e60a99e0f48f",
     "pkgsrc": [],
     "repos": [
         {"url": "git@github.com:joyent/sdc-cnapi.git"}
diff --git a/tools/prep_dataset_in_jpc.sh b/tools/prep_dataset_in_jpc.sh
index cfc0612..04767ca 100755
--- a/tools/prep_dataset_in_jpc.sh
+++ b/tools/prep_dataset_in_jpc.sh
@@ -7,7 +7,7 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2018, Joyent, Inc.
 #
 
 #
@@ -321,11 +321,24 @@ if [[ -n "${packages}" ]]; then
     ${SSH} "/opt/local/bin/pkgin -y remove libuuid"
   fi
 
-  # This pkgin can inscrutably fail with a pattern like this:
-  #     pkg_install warnings: 0, errors: 1
-  #     pkg_install error log can be found in /var/db/pkgin/pkg_install-err.log
-  # TODO: It would be nice to include the output of that error log.
-  ${SSH} "/opt/local/bin/pkgin -y in ${packages}"
+  #
+  # When pkgin fails, it ridiculously tells you that there are errors, but not
+  # what the errors are (those are hidden in a log file). Since we destroy the
+  # temporary VM, we are not able to access those log files. So whe pkgin fails,
+  # we want to grab some data about the pkgsrc setup to help figure out what
+  # went wrong.
+  #
+  ${SSH} "/opt/local/bin/pkgin -y in ${packages} || \
+      (echo ' === BEGIN /var/db/pkgin/pkg_install-err.log === '; \
+      cat /var/db/pkgin/pkg_install-err.log; \
+      echo '  === END /var/db/pkgin/pkg_install-err.log === '; \
+      echo '  === BEGIN pkg_info === '; \
+      pkg_info; \
+      echo '  === END pkg_info === '; \
+      echo '  === BEGIN /etc/pkgsrc_version === '; \
+      cat /etc/pkgsrc_version; \
+      echo '  === BEGIN /etc/pkgsrc_version === '; \
+      exit 1)"
 
   echo "Validating pkgsrc installation"
   for p in ${packages}
