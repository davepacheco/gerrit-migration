commit e13a8161f8ea273dab243994f73520baef9a01d9
Author: Rob Johnston <rob.johnston@joyent.com>
Date:   2019-04-04T18:57:27+00:00 (6 months ago)
    
    OS-6731 expose microcode level as property on strand topo nodes

diff --git a/usr/src/lib/fm/topo/modules/i86pc/chip/chip.c b/usr/src/lib/fm/topo/modules/i86pc/chip/chip.c
index cdd799cc0b..46cf5e93d2 100644
--- a/usr/src/lib/fm/topo/modules/i86pc/chip/chip.c
+++ b/usr/src/lib/fm/topo/modules/i86pc/chip/chip.c
@@ -22,7 +22,7 @@
 /*
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 #include <unistd.h>
@@ -213,6 +213,7 @@ create_strand(topo_mod_t *mod, tnode_t *pnode, nvlist_t *cpu,
 {
 	tnode_t *strand;
 	int32_t strandid, cpuid;
+	uint32_t ucode_rev;
 	int err, perr, nerr = 0;
 	nvlist_t *fmri;
 	char *serial = NULL;
@@ -296,6 +297,13 @@ create_strand(topo_mod_t *mod, tnode_t *pnode, nvlist_t *cpu,
 	    STRAND_CHIP_ID, STRAND_PROCNODE_ID, STRAND_CORE_ID, STRAND_CPU_ID,
 	    NULL);
 
+	if (nvlist_lookup_uint32(cpu, FM_PHYSCPU_INFO_UCODE_REV, &ucode_rev) !=
+	    0 || topo_prop_set_uint32(strand, PGNAME(STRAND), STRAND_UCODE_REV,
+	    TOPO_PROP_IMMUTABLE, ucode_rev, &err) != 0) {
+		whinge(mod, NULL, "failed to add %s/%s property to %s=%d",
+		    PGNAME(STRAND), STRAND_UCODE_REV, STRAND, strandid);
+	}
+
 	if (FM_AWARE_SMBIOS(mod)) {
 		(void) topo_node_label_set(strand, NULL, &perr);
 
diff --git a/usr/src/lib/fm/topo/modules/i86pc/chip/chip.h b/usr/src/lib/fm/topo/modules/i86pc/chip/chip.h
index 8b5ad3b88f..912a09460a 100644
--- a/usr/src/lib/fm/topo/modules/i86pc/chip/chip.h
+++ b/usr/src/lib/fm/topo/modules/i86pc/chip/chip.h
@@ -20,7 +20,7 @@
  */
 /*
  * Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 #ifndef _CHIP_H
@@ -98,6 +98,7 @@ extern "C" {
 #define	STRAND_CORE_ID		"core_id"
 #define	STRAND_PKG_CORE_ID	"pkg_core_id"
 #define	STRAND_CPU_ID		"cpuid"
+#define	STRAND_UCODE_REV	"ucode-revision"
 
 /*
  * label property methods
diff --git a/usr/src/uts/common/sys/devfm.h b/usr/src/uts/common/sys/devfm.h
index 1fcfeebcb0..226ee7c62c 100644
--- a/usr/src/uts/common/sys/devfm.h
+++ b/usr/src/uts/common/sys/devfm.h
@@ -21,7 +21,7 @@
 /*
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 #ifndef	_SYS_DEVFM_H
@@ -122,6 +122,7 @@ typedef struct fm_ioc_data32 {
 #define	FM_PHYSCPU_INFO_SOCKET_TYPE	"socket_type"
 #define	FM_PHYSCPU_INFO_CPU_ID		"cpuid"
 #define	FM_PHYSCPU_INFO_CHIP_IDENTSTR	"chip_identstr"
+#define	FM_PHYSCPU_INFO_UCODE_REV	"ucode_revision"
 
 #ifdef	__cplusplus
 }
diff --git a/usr/src/uts/i86pc/os/cmi_hw.c b/usr/src/uts/i86pc/os/cmi_hw.c
index 290231b487..08b6192c17 100644
--- a/usr/src/uts/i86pc/os/cmi_hw.c
+++ b/usr/src/uts/i86pc/os/cmi_hw.c
@@ -125,6 +125,8 @@ struct cmi_hdl_ops {
 	uint_t (*cmio_chipsig)(cmi_hdl_impl_t *);
 
 	id_t (*cmio_logical_id)(cmi_hdl_impl_t *);
+	uint32_t (*cmio_ucode_rev)(cmi_hdl_impl_t *);
+
 	/*
 	 * These ops are optional in an implementation.
 	 */
@@ -867,6 +869,13 @@ ntv_online(cmi_hdl_impl_t *hdl, int new_status, int *old_status)
 	return (rc);
 }
 
+static uint32_t
+ntv_ucode_rev(cmi_hdl_impl_t *hdl)
+{
+	return (cpuid_get_ucode_rev(HDLPRIV(hdl)));
+}
+
+
 #else	/* __xpv */
 
 /*
@@ -1639,6 +1648,7 @@ CMI_HDL_OPFUNC(smbiosid, uint16_t)
 CMI_HDL_OPFUNC(smb_chipid, uint_t)
 CMI_HDL_OPFUNC(smb_bboard, nvlist_t *)
 CMI_HDL_OPFUNC(chipsig, uint_t)
+CMI_HDL_OPFUNC(ucode_rev, uint32_t)
 /* END CSTYLED */
 
 boolean_t
@@ -2018,6 +2028,7 @@ static const struct cmi_hdl_ops cmi_hdl_ops = {
 	xpv_getsocketstr,	/* cmio_getsocketstr */
 	xpv_chipsig,		/* cmio_chipsig */
 	xpv_logical_id,		/* cmio_logical_id */
+	NULL,			/* cmio_ucoderev */
 	NULL,			/* cmio_getcr4 */
 	NULL,			/* cmio_setcr4 */
 	xpv_rdmsr,		/* cmio_rdmsr */
@@ -2051,6 +2062,7 @@ static const struct cmi_hdl_ops cmi_hdl_ops = {
 	ntv_getsocketstr,	/* cmio_getsocketstr */
 	ntv_chipsig,		/* cmio_chipsig */
 	ntv_logical_id,		/* cmio_logical_id */
+	ntv_ucode_rev,		/* cmio_ucoderev */
 	ntv_getcr4,		/* cmio_getcr4 */
 	ntv_setcr4,		/* cmio_setcr4 */
 	ntv_rdmsr,		/* cmio_rdmsr */
diff --git a/usr/src/uts/i86pc/os/cpuid.c b/usr/src/uts/i86pc/os/cpuid.c
index cf4ee31df7..af3ece83db 100644
--- a/usr/src/uts/i86pc/os/cpuid.c
+++ b/usr/src/uts/i86pc/os/cpuid.c
@@ -5013,6 +5013,13 @@ cpuid_get_dtlb_nent(cpu_t *cpu, size_t pagesize)
 	return (dtlb_nent);
 }
 
+uint32_t
+cpuid_get_ucode_rev(cpu_t *cpu)
+{
+	ASSERT(cpuid_checkpass(cpu, 1));
+	return (cpu->cpu_m.mcpu_ucode_info->cui_rev);
+}
+
 /*
  * Return 0 if the erratum is not present or not applicable, positive
  * if it is, and negative if the status of the erratum is unknown.
diff --git a/usr/src/uts/intel/io/devfm_machdep.c b/usr/src/uts/intel/io/devfm_machdep.c
index 1f12e323a2..c4d9ed64af 100644
--- a/usr/src/uts/intel/io/devfm_machdep.c
+++ b/usr/src/uts/intel/io/devfm_machdep.c
@@ -21,7 +21,7 @@
 /*
  * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 #include <sys/stat.h>
@@ -204,6 +204,8 @@ populate_cpu(nvlist_t **nvlp, cmi_hdl_t hdl)
 	    (uint32_t)cmi_hdl_getsockettype(hdl),
 	    FM_PHYSCPU_INFO_CPU_ID, DATA_TYPE_INT32,
 	    (int32_t)cmi_hdl_logical_id(hdl),
+	    FM_PHYSCPU_INFO_UCODE_REV, DATA_TYPE_UINT32,
+	    (uint32_t)cmi_hdl_ucode_rev(hdl),
 	    NULL);
 
 	/*
diff --git a/usr/src/uts/intel/sys/cpu_module.h b/usr/src/uts/intel/sys/cpu_module.h
index c227acacd2..96a9bacf9e 100644
--- a/usr/src/uts/intel/sys/cpu_module.h
+++ b/usr/src/uts/intel/sys/cpu_module.h
@@ -22,7 +22,7 @@
 /*
  * Copyright 2010 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 #ifndef _SYS_CPU_MODULE_H
@@ -166,6 +166,7 @@ extern uint_t cmi_hdl_smb_chipid(cmi_hdl_t);
 extern nvlist_t *cmi_hdl_smb_bboard(cmi_hdl_t);
 extern uint_t cmi_hdl_chipsig(cmi_hdl_t);
 extern const char *cmi_hdl_chipident(cmi_hdl_t);
+extern uint32_t cmi_hdl_ucode_rev(cmi_hdl_t);
 
 extern int cmi_hdl_online(cmi_hdl_t, int, int *);
 
diff --git a/usr/src/uts/intel/sys/x86_archext.h b/usr/src/uts/intel/sys/x86_archext.h
index 59a974dfd2..3c38344585 100644
--- a/usr/src/uts/intel/sys/x86_archext.h
+++ b/usr/src/uts/intel/sys/x86_archext.h
@@ -1059,6 +1059,8 @@ extern int cpuid_have_cr8access(struct cpu *);
 
 extern int cpuid_opteron_erratum(struct cpu *, uint_t);
 
+extern uint32_t cpuid_get_ucode_rev(struct cpu *);
+
 struct cpuid_info;
 
 extern void setx86isalist(void);
