From 3d2bd9b0912e7a09ce460b0d93abb41d309d87cf Mon Sep 17 00:00:00 2001
From: Richard Bradley <richard.bradley@joyent.com>
Date: Thu, 1 Dec 2016 09:49:31 +0000
Subject: [PATCH] MANATEE-282 streamline "manatee-adm rebuild" Reviewed by:
 Dave Pacheco <dap@joyent.com> Approved by: Dave Pacheco <dap@joyent.com>

---
 lib/adm.js | 114 +++++++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 93 insertions(+), 21 deletions(-)

diff --git a/lib/adm.js b/lib/adm.js
index 959680c..2056497 100644
--- a/lib/adm.js
+++ b/lib/adm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 /**
@@ -547,6 +547,28 @@ function _active(opts, _cb) {
     });
 }
 
+
+/**
+ * @param {Object} opts The options object.
+ * @param {Object} opts.config The sitter config for this node.
+ * @param {Object} opts.activeData The active ZK children.
+ *
+ * @return {Object} opts.activeZkNode The local peer's ZK object if active in
+ * ZK, null if not active.
+ */
+function _setActiveZkNode(opts, _cb) {
+    var active = null;
+    Object.keys(opts.activeData).forEach(function (k) {
+        var n = opts.activeData[k];
+        if (n.zoneId === opts.config.zoneId) {
+            active = n;
+        }
+    });
+    opts.activeZkNode = active;
+    return (_cb());
+}
+
+
 /**
  * Returns an object summarizing the complete state of this Manatee cluster
  * (shard).  Logically, this is a JavaScript representation that combines both
@@ -1315,26 +1337,7 @@ function rebuild(opts, cb) {
         //Verify there isn't a zk node for this, otherwise, the primary won't
         // add it once the sitter is restarted.
         _active,
-        function _checkActive(_, _cb) {
-            var act = null;
-            Object.keys(_.activeData).forEach(function (k) {
-                var n = _.activeData[k];
-                if (n.zoneId === _.config.zoneId) {
-                    act = n;
-                }
-            });
-            if (act) {
-                var sec = 60;
-                if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
-                    sec = _.config.zkCfg.opts.sessionTimeout / 1000;
-                }
-                return (_cb(new Error('There is an active ZK node for this ' +
-                                      'host.  Please disable the sitter and ' +
-                                      'let the ZK node timeout (may take up ' +
-                                      'to ' + sec + ' seconds).')));
-            }
-            return (_cb());
-        },
+        _setActiveZkNode,
         function _checkDeposed(_, _cb) {
             _.removeFromDeposed = false;
             if (!_.state.deposed) {
@@ -1352,6 +1355,24 @@ function rebuild(opts, cb) {
             }
             return (_cb());
         },
+        function _warnActive(_, _cb) {
+            /*
+             * This will be true if the current node is active, and the node
+             * is *not* deposed. At this point this could only be a sync or
+             * an async.
+             */
+            if (_.activeZkNode && !_.removeFromDeposed) {
+                var sec = 60;
+                if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
+                    sec = _.config.zkCfg.opts.sessionTimeout / 1000;
+                }
+                return (_cb(new Error('There is an active ZK node for this ' +
+                                      'host.  Please disable the sitter and ' +
+                                      'let the ZK node timeout (may take up ' +
+                                      'to ' + sec + ' seconds).')));
+            }
+            return (_cb());
+        },
         function _promptConfirm(_, _cb) {
             if (_.ignorePrompts) {
                 return (_cb());
@@ -1387,6 +1408,57 @@ function rebuild(opts, cb) {
                 return _cb();
             });
         },
+        function _disableSitter(_, _cb) {
+            console.error('Disabling manatee-sitter SMF service to ensure ' +
+                          'that Manatee is not running.');
+            exec('svcadm disable -s manatee-sitter', _cb);
+        },
+        function _waitForZkInactive(_, _cb) {
+            _cb = once(_cb);
+            var waitStart = process.hrtime();
+            var waitCount = 0;
+            var waitTimeout = 60;
+            if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
+                waitTimeout = _.config.zkCfg.opts.sessionTimeout / 1000;
+            }
+
+            /*
+             * ZooKeeper might not expire our session in the exact amount of
+             * seconds we expect, so we add some leeway into our timer.
+             */
+            waitTimeout *= 1.5;
+
+            process.stderr.write('Waiting up to ' + waitTimeout + ' seconds ' +
+                                 'for this Manatee instance\'s ZooKeeper ' +
+                                 'session to expire  ');
+            function checkZkActive() {
+                vasync.pipeline({ funcs: [
+                    _active,
+                    _setActiveZkNode
+                ], arg: opts}, function (err) {
+                    if (err)
+                        return _cb(err);
+
+                    if (_.activeZkNode) {
+                        if (process.hrtime(waitStart)[0] > waitTimeout) {
+                            process.stderr.write('\n');
+                            return _cb(new Error('This Manatee instance has ' +
+                                                 'a ZooKeeper session even ' +
+                                                 'after ' + waitTimeout + ' ' +
+                                                 'seconds.  Aborting ' +
+                                                 'operation.'));
+                        }
+                        process.stderr.write('\b' + SPINNER[waitCount++ %
+                                             SPINNER.length]);
+                        return setTimeout(checkZkActive, 1000);
+                    } else {
+                        process.stderr.write('\n');
+                        return _cb();
+                    }
+                });
+            }
+            checkZkActive();
+        },
         function _deleteDataDir(_, _cb) {
             console.error('removing zfs dataset');
             var cmd = 'rm -rf ' + _.config.postgresMgrCfg.dataDir + '/*';
-- 
2.21.0

