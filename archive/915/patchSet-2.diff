commit 8094b691112a8e7beecb2b4a5a4f7e8f1fc096ea (refs/changes/15/915/2)
Author: Richard Bradley <richard.bradley@joyent.com>
Date:   2016-11-17T14:31:15+00:00 (2 years, 11 months ago)
    
    MANATEE-282 streamline "manatee-adm rebuild"

diff --git a/lib/adm.js b/lib/adm.js
index 959680c..490ef4f 100644
--- a/lib/adm.js
+++ b/lib/adm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 /**
@@ -1316,23 +1316,13 @@ function rebuild(opts, cb) {
         // add it once the sitter is restarted.
         _active,
         function _checkActive(_, _cb) {
-            var act = null;
+            _.activeZkNode = null;
             Object.keys(_.activeData).forEach(function (k) {
                 var n = _.activeData[k];
                 if (n.zoneId === _.config.zoneId) {
-                    act = n;
+                    _.activeZkNode = n;
                 }
             });
-            if (act) {
-                var sec = 60;
-                if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
-                    sec = _.config.zkCfg.opts.sessionTimeout / 1000;
-                }
-                return (_cb(new Error('There is an active ZK node for this ' +
-                                      'host.  Please disable the sitter and ' +
-                                      'let the ZK node timeout (may take up ' +
-                                      'to ' + sec + ' seconds).')));
-            }
             return (_cb());
         },
         function _checkDeposed(_, _cb) {
@@ -1352,6 +1342,24 @@ function rebuild(opts, cb) {
             }
             return (_cb());
         },
+        function _warnActive(_, _cb) {
+            /*
+             * This will be true if the current node is active, and the node
+             * is *not* deposed. At this point this could only be a sync or
+             * a non-deposed async.
+             */
+            if (_.activeZkNode && !_.removeFromDeposed) {
+                var sec = 60;
+                if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
+                    sec = _.config.zkCfg.opts.sessionTimeout / 1000;
+                }
+                return (_cb(new Error('There is an active ZK node for this ' +
+                                      'host.  Please disable the sitter and ' +
+                                      'let the ZK node timeout (may take up ' +
+                                      'to ' + sec + ' seconds).')));
+            }
+            return (_cb());
+        },
         function _promptConfirm(_, _cb) {
             if (_.ignorePrompts) {
                 return (_cb());
@@ -1387,6 +1395,50 @@ function rebuild(opts, cb) {
                 return _cb();
             });
         },
+        function _disableSitter(_, _cb) {
+            console.error('Ensuring sitter is disabled');
+            exec('svcadm disable -s manatee-sitter', _cb);
+        },
+        function _waitForZkInactive(_, _cb) {
+            _cb = once(_cb);
+            var waitCount = 0;
+
+            process.stderr.write('Waiting for removal from zk  ');
+            function checkZkActive() {
+                _active(opts, function (err) {
+                    if (err)
+                        return _cb(err);
+
+                    var index = -1;
+                    Object.keys(_.activeData).forEach(function (k, i) {
+                        var n = _.activeData[k];
+                        if (n.zoneId === _.config.zoneId) {
+                            index = i;
+                        }
+                    });
+                    if (index === -1) {
+                        _.activeZkNode = null;
+                    }
+
+                    if (_.activeZkNode) {
+                        if (++waitCount > 60) {
+                            process.stderr.write('\n');
+                            return _cb(new Error('Timed out waiting ' +
+                                                 'for removal from zk.'));
+                        }
+
+                        process.stderr.write('\b' + SPINNER[waitCount %
+                                             SPINNER.length]);
+                        setTimeout(checkZkActive, 1000);
+                        return;
+                    } else {
+                        process.stderr.write('\n');
+                        return _cb();
+                    }
+                });
+            }
+            checkZkActive();
+        },
         function _deleteDataDir(_, _cb) {
             console.error('removing zfs dataset');
             var cmd = 'rm -rf ' + _.config.postgresMgrCfg.dataDir + '/*';
