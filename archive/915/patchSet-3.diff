commit d1c1e1890048ddc479ecf6568d0466783399b093 (refs/changes/15/915/3)
Author: Richard Bradley <richard.bradley@joyent.com>
Date:   2016-11-21T14:54:10+00:00 (2 years, 11 months ago)
    
    MANATEE-282 streamline "manatee-adm rebuild"

diff --git a/lib/adm.js b/lib/adm.js
index 959680c..9349c80 100644
--- a/lib/adm.js
+++ b/lib/adm.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2016, Joyent, Inc.
  */
 
 /**
@@ -503,6 +503,8 @@ function _formatState(_, _cb) {
  * @param {String} opts.shard The name of the shard.
  *
  * @return {object} opts.activeData The active children.
+ * @return {object} opts.activeZkNode The local peer's ZK object if
+ * active in ZK, null if not active.
  */
 function _active(opts, _cb) {
     var p = '/manatee/' + opts.shard + '/election';
@@ -538,6 +540,17 @@ function _active(opts, _cb) {
                 });
                 return (cb());
             });
+        },
+        function setActive(_, cb) {
+            var active = null;
+            Object.keys(_.activeData).forEach(function (k, i) {
+                var n = _.activeData[k];
+                if (n.zoneId === _.config.zoneId) {
+                    active = n;
+                }
+            });
+            _.activeZkNode = active;
+            return (cb());
         }
     ], arg: opts}, function (err) {
         if (err && err.name === 'NO_NODE') {
@@ -1315,26 +1328,6 @@ function rebuild(opts, cb) {
         //Verify there isn't a zk node for this, otherwise, the primary won't
         // add it once the sitter is restarted.
         _active,
-        function _checkActive(_, _cb) {
-            var act = null;
-            Object.keys(_.activeData).forEach(function (k) {
-                var n = _.activeData[k];
-                if (n.zoneId === _.config.zoneId) {
-                    act = n;
-                }
-            });
-            if (act) {
-                var sec = 60;
-                if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
-                    sec = _.config.zkCfg.opts.sessionTimeout / 1000;
-                }
-                return (_cb(new Error('There is an active ZK node for this ' +
-                                      'host.  Please disable the sitter and ' +
-                                      'let the ZK node timeout (may take up ' +
-                                      'to ' + sec + ' seconds).')));
-            }
-            return (_cb());
-        },
         function _checkDeposed(_, _cb) {
             _.removeFromDeposed = false;
             if (!_.state.deposed) {
@@ -1352,6 +1345,24 @@ function rebuild(opts, cb) {
             }
             return (_cb());
         },
+        function _warnActive(_, _cb) {
+            /*
+             * This will be true if the current node is active, and the node
+             * is *not* deposed. At this point this could only be a sync or
+             * an async.
+             */
+            if (_.activeZkNode && !_.removeFromDeposed) {
+                var sec = 60;
+                if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
+                    sec = _.config.zkCfg.opts.sessionTimeout / 1000;
+                }
+                return (_cb(new Error('There is an active ZK node for this ' +
+                                      'host.  Please disable the sitter and ' +
+                                      'let the ZK node timeout (may take up ' +
+                                      'to ' + sec + ' seconds).')));
+            }
+            return (_cb());
+        },
         function _promptConfirm(_, _cb) {
             if (_.ignorePrompts) {
                 return (_cb());
@@ -1387,6 +1398,49 @@ function rebuild(opts, cb) {
                 return _cb();
             });
         },
+        function _disableSitter(_, _cb) {
+            console.error('Disabling manatee-sitter SMF service to ensure ' +
+                          'that Manatee is not running.');
+            exec('svcadm disable -s manatee-sitter', _cb);
+        },
+        function _waitForZkInactive(_, _cb) {
+            _cb = once(_cb);
+            var waitStart = process.hrtime();
+            var waitCount = 0;
+            var waitTimeout = 60;
+            if (_.config.zkCfg.opts && _.config.zkCfg.opts.sessionTimeout) {
+                waitTimeout = _.config.zkCfg.opts.sessionTimeout / 1000;
+            }
+            process.stderr.write('Waiting ' + waitTimeout + ' seconds for ' +
+                                 'this Manatee instance\'s ZooKeeper ' +
+                                 'session to expire  ');
+            function checkZkActive() {
+                _active(opts, function (err) {
+                    if (err)
+                        return _cb(err);
+
+                    if (_.activeZkNode) {
+                        if ((process.hrtime()[0] - waitStart[0]) >
+                                waitTimeout) {
+                            process.stderr.write('\n');
+                            return _cb(new Error('This Manatee instance has ' +
+                                                 'a ZooKeeper session even ' +
+                                                 'after ' + waitTimeout + ' ' +
+                                                 'seconds.  Aborting ' +
+                                                 'operation.'));
+                        }
+                        process.stderr.write('\b' + SPINNER[waitCount++ %
+                                             SPINNER.length]);
+                        setTimeout(checkZkActive, 1000);
+                        return;
+                    } else {
+                        process.stderr.write('\n');
+                        return _cb();
+                    }
+                });
+            }
+            checkZkActive();
+        },
         function _deleteDataDir(_, _cb) {
             console.error('removing zfs dataset');
             var cmd = 'rm -rf ' + _.config.postgresMgrCfg.dataDir + '/*';
