commit 1a465c8e8cc8cd8ef65625385b29d097eb3b150c (refs/changes/35/3735/1)
Author: Brittany Wald <brittany.wald@joyent.com>
Date:   2018-03-28T00:41:39+00:00 (1 year, 6 months ago)
    
    MANATEE-307 manatee-snapshotter failing on snapshot with dependent clones
    MANATEE-332 manatee-snapshotter fails spuriously during rebuild
    MANATEE-386 backup server leaves "zfs send" processes running, causes
    snapshotter crash

diff --git a/lib/snapShotter.js b/lib/snapShotter.js
index 88d3bae..dea69ad 100644
--- a/lib/snapShotter.js
+++ b/lib/snapShotter.js
@@ -244,11 +244,20 @@ SnapShotter.prototype.start = function start(callback) {
                     var barrier = vasync.barrier();
 
                     barrier.on('drain', cb);
+                    /*
+                     * This variable represents the number of datasets we have
+                     * attempted and been unable to delete.  Adding this to the
+                     * snapshots array index counter ensures that the delete
+                     * operation can move on to potentially-responsive datasets,
+                     * avoiding a pile-up of unresponsive dataset snapshots.
+                     */
+                    var failureOffset = 0;
                     for (var i = 0;
                          i < snapshots.length - self._snapshotNumber;
                          i++) {
 
-                        var delSnapshot = snapshots[i];
+                        var delIndex = i + failureOffset;
+                        var delSnapshot = snapshots[delIndex];
                         barrier.start(delSnapshot);
 
                         /* jshint loopfunc: true */
@@ -259,7 +268,15 @@ SnapShotter.prototype.start = function start(callback) {
                                     err: err,
                                     snapshot: delSnapshot
                                 }, 'unable to delete snapshot');
-                                return cb(err);
+                                failureOffset++;
+
+                                /*
+                                 * Only quit the delete operation once every
+                                 * snapshot in the array except the most recent
+                                 * one has been tried.
+                                 */
+                                if (delIndex >= snapshots.length)
+                                    return cb(err);
                             }
                             barrier.done(snapshot);
                         });
@@ -270,7 +287,7 @@ SnapShotter.prototype.start = function start(callback) {
             }
         ], arg: {}}, function (err, results) {
             if (err) {
-                log.fatal({err: err, results: results},
+                log.error({err: err, results: results},
                           'unable to maintain snapshots');
                 /**
                  * SnapShotter error event.
diff --git a/smf/snapshotter.xml b/smf/snapshotter.xml
index 37db933..42be405 100644
--- a/smf/snapshotter.xml
+++ b/smf/snapshotter.xml
@@ -19,7 +19,8 @@
     <dependency name='filesystem' grouping='require_all' restart_on='error' type='service'>
       <service_fmri value='svc:/system/filesystem/local'/>
     </dependency>
-    <exec_method name='start' type='method' exec='node snapshotter.js -vvv -f ./etc/snapshotter.json &amp;' timeout_seconds='30'>
+    <exec_method name='start' type='method' exec='node --abort-on-uncaught-exception
+      snapshotter.js -vvv -f ./etc/snapshotter.json &amp;' timeout_seconds='30'>
       <method_context working_directory='/opt/manatee'>
         <method_environment>
           <envvar name='PATH' value='/opt/manatee/build/node/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin'/>
diff --git a/snapshotter.js b/snapshotter.js
index d12c715..dc38466 100644
--- a/snapshotter.js
+++ b/snapshotter.js
@@ -118,9 +118,8 @@ function readConfig(options) {
 
     var snapShotter = new SnapShotter(_config);
 
-    snapShotter.on('err', function (err) {
-        LOG.fatal('got error from snapshotter', err);
-        throw err;
+    snapShotter.on('error', function (err) {
+        LOG.error('got error from snapshotter', err);
     });
 
     snapShotter.start(function () {
