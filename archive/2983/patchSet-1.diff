commit e70a578af5de27be6fb28b4cf9101d7bd9083015 (refs/changes/83/2983/1)
Author: Kody A Kantor <kody.kantor@gmail.com>
Date:   2017-11-22T16:25:18+00:00 (1 year, 11 months ago)
    
    MANTA-3501 want muskie inbound request metrics

diff --git a/lib/audit.js b/lib/audit.js
index b6f3e52..0ff930b 100644
--- a/lib/audit.js
+++ b/lib/audit.js
@@ -286,7 +286,7 @@ function auditLogger(options) {
 
         var labels = {
             operation: name,
-            method: op || 'unknown',
+            method: req.method || 'unknown',
             statusCode: res.statusCode
         };
 
diff --git a/lib/common.js b/lib/common.js
index fcced7c..9cba701 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -72,6 +72,7 @@ var ZONENAME = os.hostname();
 
 // Names of metric collectors.
 var METRIC_REQUEST_COUNTER = 'http_requests_completed';
+var METRIC_INBOUND_REQUEST_COUNTER = 'http_requests_received';
 var METRIC_LATENCY_HISTOGRAM = 'http_request_latency_ms';
 var METRIC_DURATION_HISTOGRAM = 'http_request_time_ms';
 var METRIC_INBOUND_DATA_COUNTER = 'muskie_inbound_streamed_bytes';
@@ -738,6 +739,8 @@ module.exports = {
 
     METRIC_REQUEST_COUNTER: METRIC_REQUEST_COUNTER,
 
+    METRIC_INBOUND_REQUEST_COUNTER: METRIC_INBOUND_REQUEST_COUNTER,
+
     METRIC_LATENCY_HISTOGRAM: METRIC_LATENCY_HISTOGRAM,
 
     METRIC_DURATION_HISTOGRAM: METRIC_DURATION_HISTOGRAM,
diff --git a/lib/server.js b/lib/server.js
index 43888c7..3ebccc5 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -115,7 +115,11 @@ function createServer(options) {
     var server = restify.createServer(options);
 
     /* Initialize metric collectors for use in handlers and audit logger. */
-    // A counter to track the number of HTTP requests serviced.
+    // Counters to track the number of HTTP requests received and serviced.
+    options.collector.counter({
+        name: common.METRIC_INBOUND_REQUEST_COUNTER,
+        help: 'count of Muskie requests received'
+    });
     options.collector.counter({
         name: common.METRIC_REQUEST_COUNTER,
         help: 'count of Muskie requests completed'
@@ -161,6 +165,22 @@ function createServer(options) {
         }
     });
 
+    /*
+     * Count inbound requests before we have the opportunity to reject requests.
+     * This counts requests without a metadata label for the route since routing
+     * occurs after the 'server.pre()' step.
+     */
+    server.pre(function countInboundRequests(req, res, next) {
+        var counter = options.collector.getCollector(
+            common.METRIC_INBOUND_REQUEST_COUNTER);
+        var labels = {
+            method: req.method || 'unknown'
+        };
+        counter.increment(labels);
+        next();
+        return;
+    });
+
     server.pre(function watchClose(req, res, next) {
         /*
          * In some cases, we proactively check for closed client connections.
