commit 3de192c662bcb5a4e6c00cc58c0bb3011c7d330c (refs/changes/33/2533/4)
Author: Orlando Vazquez <ovazquez@gmail.com>
Date:   2017-09-12T11:27:43-07:00 (2 years, 1 month ago)
    
    DOCKER-1064 docker cp client exiting can cause stuck zlogin

diff --git a/lib/docker-stdio.js b/lib/docker-stdio.js
index 03cfbb5..bf7f4df 100644
--- a/lib/docker-stdio.js
+++ b/lib/docker-stdio.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -32,6 +32,8 @@ var vmadm = require('vmadm');
 var LineStream = require('lstream');
 var wait_flag = require('./update-wait-flag');
 
+var DATA_TIMEOUT_MS = 30 * 1000;
+
 var commands = {};
 var CTRL_P = '\u0010';
 var CTRL_Q = '\u0011';
@@ -199,6 +201,7 @@ function createDockerFileReadStreamServer(opts, callback) {
     var zonepath = path.join('/zones', opts.uuid);
     var root = path.join(zonepath, 'root');
     var abspath = path.join(root, norm);
+    var streamProc;
 
     var error;
     var containerPathStat;
@@ -264,9 +267,9 @@ function createDockerFileReadStreamServer(opts, callback) {
             }, timeoutSeconds * 1000);
 
             if (zoneState === 'running') {
-                tcpServer.on('connection', onConnectionZoneRunning);
+                tcpServer.on('connection', onReadConnectionZoneRunning);
             } else {
-                tcpServer.on('connection', onConnectionZoneNotRunning);
+                tcpServer.on('connection', onReadConnectionZoneNotRunning);
             }
 
             tcpServer.on('error', function (err) {
@@ -289,7 +292,13 @@ function createDockerFileReadStreamServer(opts, callback) {
         callback(null, tcpServer, { containerPathStat: containerPathStat });
     });
 
-    function onConnectionZoneRunning(socket) {
+    function onDataTimeout() {
+        log.error('onConnectionZoneRunning(read): ' +
+                'data timeout; terminating archive process');
+        streamProc.kill();
+    }
+
+    function onReadConnectionZoneRunning(socket) {
         clearTimeout(serverTimeout);
 
         socket.on('close', function () {
@@ -309,7 +318,7 @@ function createDockerFileReadStreamServer(opts, callback) {
                  'createDockerFileReadStreamServer ' +
                  'onConnectionZoneRunning zloginTarArgs');
 
-        var streamProc =
+        streamProc =
             spawn(zloginTarCmd, zloginTarArgs, { encoding: 'binary' });
 
         streamProc.stderr.on('data', function (data) {
@@ -317,17 +326,19 @@ function createDockerFileReadStreamServer(opts, callback) {
                       'zlogin error output');
         });
 
-        streamProc.on('end', function (err) {
+        streamProc.on('exit', function (err) {
+            tcpServer.close();
             if (err) {
                 log.error(err);
             }
-            tcpServer.close();
         });
 
+        streamProc.stdout.setTimeout(DATA_TIMEOUT_MS);
+        streamProc.stdout.on('timeout', onDataTimeout);
         streamProc.stdout.pipe(socket);
     }
 
-    function onConnectionZoneNotRunning(socket) {
+    function onReadConnectionZoneNotRunning(socket) {
         clearTimeout(serverTimeout);
 
         socket.on('close', function () {
@@ -350,7 +361,7 @@ function createDockerFileReadStreamServer(opts, callback) {
 
         log.info({ norm: norm, chrootTarArgs: chrootTarArgs }, 'tar args');
 
-        var streamProc =
+        streamProc =
             spawn(chrootTarCmd, chrootTarArgs, { encoding: 'binary' });
 
         streamProc.stderr.on('data', function (data) {
@@ -358,13 +369,15 @@ function createDockerFileReadStreamServer(opts, callback) {
                       'chroot-gtar error output');
         });
 
-        streamProc.on('end', function (err) {
+        streamProc.on('exit', function (err) {
+            tcpServer.close();
             if (err) {
                 log.error(err);
             }
-            tcpServer.close();
         });
 
+        streamProc.stdout.setTimeout(DATA_TIMEOUT_MS);
+        streamProc.stdout.on('timeout', onDataTimeout);
         streamProc.stdout.pipe(socket);
     }
 }
@@ -510,7 +523,7 @@ function createDockerFileWriteStreamServer(opts, callback) {
             log.error({ errorOutput: data.toString() }, 'zlogin error output');
         });
 
-        streamProc.on('end', function (err) {
+        streamProc.on('exit', function (err) {
             if (err) {
                 log.error(err);
             }
@@ -555,7 +568,7 @@ function createDockerFileWriteStreamServer(opts, callback) {
             console.log(data.toString());
         });
 
-        streamProc.on('end', function (err) {
+        streamProc.on('exit', function (err) {
             if (err) {
                 log.error(err);
             }
