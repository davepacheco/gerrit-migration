From b92701db8d4c5b5241f873975bd3dd2d8df63dee Mon Sep 17 00:00:00 2001
From: Mike Gerdts <mike.gerdts@joyent.com>
Date: Sat, 29 Jun 2019 11:21:39 +0000
Subject: [PATCH] OS-7863 test-bhyve-disk-resize failing with "size is greater
 than available space" error

---
 src/vm/node_modules/VM.js | 47 +++++++++++++--------------------------
 1 file changed, 15 insertions(+), 32 deletions(-)

diff --git a/src/vm/node_modules/VM.js b/src/vm/node_modules/VM.js
index 4a75c6c9..d2a04f09 100644
--- a/src/vm/node_modules/VM.js
+++ b/src/vm/node_modules/VM.js
@@ -4255,20 +4255,6 @@ function zfsGet(dataset, props, log, callback)
 /*
  * Calculate the zfs refreservation based on the volsize, volblocksize, and
  * copies.  All values are in bytes.
- *
- * Example:
- *
- *  var refres;
- *  ...
- *  zfsGet(volname, [ 'copies', 'volblocksize', 'volsize' ],
- *      function getCb(err, props) {
- *
- *      if (!err) {
- *          refres = volSizeToRefReservation(props);
- *      }
- *  });
- *
- * Adapted from usr/src/lib/libzfs/common/libzfs_dataset.c and related headers.
  */
 function volsizeToRefreservation(vol, props, log, callback)
 {
@@ -4284,21 +4270,23 @@ function volsizeToRefreservation(vol, props, log, callback)
         '-o', 'copies=' + props.copies,
         '-o', 'volblocksize=' + props.volblocksize, vol];
 
-    log.error({vol: vol, props: props, args: args},
-        'MG volsizeToRefreservation');
     zfs(args, log, function zfsCreateDryRun(err, fds) {
-        var line;
-
         if (err) {
             log.error(err, 'failed to get refreservation: ' + fds.stderr);
             callback(new Error(rtrim(fds.stderr)));
             return;
         }
 
-        for (line in fds.stdout.split('\n')) {
+        var line;
+        var lines = fds.stdout.split('\n');
+        for (line in lines) {
+            line = lines[line];
             var fields = line.split('\t');
             if (fields.length === 3 && fields[0] === 'property'
                 && fields[1] === 'refreservation') {
+
+                log.debug({vol: vol, props: props},
+                    'volsizeToRefeservation: refreservation is ' + fields[2]);
                 callback(null, Number(fields[2]));
                 return;
             }
@@ -7274,7 +7262,6 @@ function archiveVM(uuid, options, callback)
                 targ: path.join(archive_dirname, 'cores')
             });
             patterns_to_archive.push({
-                src: path.join(vmobj.zonepath, 'logs/console.log*'),
                 dst: path.join(archive_dirname, 'console'),
                 create_dst_dir: true
             });
@@ -14863,11 +14850,11 @@ function resizeDisks(vmobj, updates, log, callback)
          *
          * We can't assume that the delta will be based solely on the current
          * way that refreservation is calculated.  Over time we have changed
-         * from reserving just volsize to reserving based on mirrors, to
-         * considering the inefficiences of raidz.  A pool that has acquired
-         * different raidz vdevs than it had at some earlier time may also end
-         * up with a diffferent value for refreservation.  See the big theory
-         * comment above zvol_volsize_to_referservation() in
+         * from reserving just volsize to reserving without regard to raidz's
+         * special behavior, to considering the inefficiences of raidz.  A pool
+         * that has acquired different raidz vdevs than it had at some earlier
+         * time may also end up with a diffferent value for refreservation.  See
+         * the big theory comment above zvol_volsize_to_referservation() in
          * projects/illumos/usr/src/lib/libzfs/common/libzfs_dataset.c.
          *
          * opts.volname The name of the zfs volume that is being resized.
@@ -14880,12 +14867,6 @@ function resizeDisks(vmobj, updates, log, callback)
             assert.string(opts.volname, 'volname');
             assert.number(opts.newsize, 'newsize');
 
-            // Respect any override for refreservation
-            if (disk.hasOwnProperty('refreservation')) {
-                _cb(null, 0);
-                return;
-            }
-
             zfsGet(opts.volname,
                 ['volsize', 'volblocksize', 'copies', 'refreservation'],
                 log, function _get_refres_cb(err, props) {
@@ -14904,6 +14885,7 @@ function resizeDisks(vmobj, updates, log, callback)
                     volname: opts.volname
                     }, 'getRefresDelta: before changes');
 
+                props.volsize = newsize * 1024 * 1024;
                 volsizeToRefreservation(opts.volname, props, log,
                     function calcDelta(_err, newRefres) {
 
@@ -14914,7 +14896,8 @@ function resizeDisks(vmobj, updates, log, callback)
                     var newMd = newRefres - props.volsize;
                     var delta = newMd - curMd;
 
-                    log.debug({volname: opts.volname, delta: delta},
+                    log.debug(
+                        {volname: opts.volname, delta: delta, props: props},
                         'getRefresDelta: quota requires adjustment');
 
                     _cb(null, delta);
-- 
2.21.0

