From 2c02f8d73fa0ddf4438ecbcc09e066239712e6d1 Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Tue, 26 Jun 2018 15:11:47 -0700
Subject: [PATCH] TRITON-53 x-account image clone

---
 CHANGES.md    |  2 ++
 lib/imgapi.js | 52 ++++++++++++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 53 insertions(+), 1 deletion(-)

diff --git a/CHANGES.md b/CHANGES.md
index f952948..c910365 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -8,6 +8,8 @@
 
 ## not yet released
 
+- TRITON-53 x-account image clone. Adds the imgapi.cloneImage method.
+
 ## 11.1.0
 
 - PUBAPI-1378 Provide UpdateFabricNetwork endpoint
diff --git a/lib/imgapi.js b/lib/imgapi.js
index 0431eed..94dee9e 100644
--- a/lib/imgapi.js
+++ b/lib/imgapi.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 /*
@@ -2459,6 +2459,56 @@ function updateImage(uuid, data, account, options, callback) {
 };
 
 
+/**
+ * Clones an image.
+ *
+ * @param {String} uuid : the UUID of the image.
+ * @param {UUID} account : The UUID of the account on behalf of whom
+ *      this request is being made. This UUID must be on to the image ACL.
+ * @param options {Object} Optional request options.
+ *      - headers {Object} Optional extra request headers.
+ * @param {Function} callback : `function (err, image, res)`
+ */
+IMGAPI.prototype.cloneImage =
+function cloneImage(uuid, account, options, callback) {
+    var self = this;
+    assert.string(uuid, 'uuid');
+    assert.string(account, 'account');
+    if (typeof (options) === 'function') {
+        callback = options;
+        options = {};
+    }
+    assert.object(options, 'options');
+    assert.optionalObject(options.headers, 'options.headers');
+    assert.func(callback, 'callback');
+
+    var path = self._path(format('/images/%s/clone', uuid), {
+        account: account,
+        channel: self.channel
+    });
+    self._getAuthHeaders(function (hErr, headers) {
+        if (hErr) {
+            callback(hErr);
+            return;
+        }
+        if (options.headers) {
+            simpleMerge(headers, options.headers);
+        }
+        var reqOpts = {
+            path: path,
+            headers: headers
+        };
+        self.client.post(reqOpts, function (err, req, res, image) {
+            if (err) {
+                callback(err, null, res);
+            } else {
+                callback(null, image, res);
+            }
+        });
+    });
+};
+
+
 /**
  * Delete an image.
  *
-- 
2.21.0

