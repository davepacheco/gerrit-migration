From 9e41d1192aa99b8a5820a21c864f565be3b3b724 Mon Sep 17 00:00:00 2001
From: Jason King <jason.king@joyent.com>
Date: Tue, 9 Apr 2019 19:11:11 +0000
Subject: [PATCH] OS-7862 Allow a custom root password during platform build
 Reviewed by: John Levon <john.levon@joyent.com> Approved by: John Levon
 <john.levon@joyent.com>

---
 Makefile         |  8 ++++++--
 configure        |  9 ++++++++-
 tools/build_live | 31 ++++++++++++++++++++-----------
 3 files changed, 34 insertions(+), 14 deletions(-)

diff --git a/Makefile b/Makefile
index 578393db..12559ad7 100644
--- a/Makefile
+++ b/Makefile
@@ -125,6 +125,10 @@ IMAGES_VERSION :=	images-$(shell [[ -f $(ROOT)/configure-buildver ]] && \
     echo $$(head -n1 $(ROOT)/configure-buildver)-)$(shell head -n1 $(STAMPFILE))
 IMAGES_TARBALL :=	output/$(IMAGES_VERSION).tgz
 
+ifdef PLATFORM_PASSWORD
+PLATFORM_PASSWORD_OPT=-p $(PLATFORM_PASSWORD)
+endif
+
 TOOLS_TARGETS = \
 	$(MANCHECK) \
 	$(MANCF) \
@@ -141,8 +145,8 @@ live: world manifest mancheck_conf boot sdcman $(TOOLS_TARGETS) $(MANCF_FILE)
 	@echo $(SUBDIR_MANIFESTS)
 	mkdir -p ${ROOT}/log
 	ALTCTFCONVERT=$(ALTCTFCONVERT) ./tools/build_live \
-	    -m $(ROOT)/$(MANIFEST) -o $(ROOT)/output $(OVERLAYS) $(ROOT)/proto \
-	    $(ROOT)/man/man
+	    -m $(ROOT)/$(MANIFEST) -o $(ROOT)/output $(PLATFORM_PASSWORD_OPT) \
+	    $(OVERLAYS) $(ROOT)/proto $(ROOT)/man/man
 
 boot: $(BOOT_TARBALL)
 
diff --git a/configure b/configure
index 02ac4dcd..208b4510 100755
--- a/configure
+++ b/configure
@@ -466,13 +466,15 @@ read -r -d '' usage <<EOF
 		this message
 	-p gcc4
 		primary compiler version [default: gcc4]
+	-P password
+		platform root password [default: randomly chosen]
 	-r
 		full strap build (no cache) [default: no]
 	-s gcc7
 		shadow compilers, comma delimited (gcc7,gcc#) [default: none]
 EOF
 
-while getopts "cdhp:rs:" arg; do
+while getopts "cdhp:P:rs:" arg; do
 	case $arg in
 	c)
 		ILLUMOS_CLOBBER=yes ;;
@@ -491,6 +493,8 @@ while getopts "cdhp:rs:" arg; do
 	p)
 		PRIMARY_COMPILER=$OPTARG
 		FORCE_STRAP_REBUILD=yes ;;
+	P)
+		PLATFORM_PASSWORD="$OPTARG" ;;
 	r)
 		FORCE_STRAP_REBUILD=yes ;;
 	s)
@@ -524,6 +528,9 @@ SHADOW_COMPILERS=$SHADOW_COMPILERS
 HOST_GCC4_PREFIX=$HOST_GCC4_PREFIX
 EOF
 
+[[ -n "$PLATFORM_PASSWORD" ]] && \
+	echo "PLATFORM_PASSWORD=$PLATFORM_PASSWORD" >> build.env
+
 echo "Doing pre-flight checks... \c "
 check_loc
 echo "done."
diff --git a/tools/build_live b/tools/build_live
index df2c185d..98b11c08 100755
--- a/tools/build_live
+++ b/tools/build_live
@@ -67,14 +67,15 @@ bi_mnt_usr=
 
 bi_root_size=
 
+bi_root_pw=
+
 bi_log=
 
 
 function usage
 {
-	cat <<-USAGE
-	Usage: $bi_arg0 -m MANIFEST_FILE -o OUTPUT_DIR { INPUT_DIR ... }
-	USAGE
+	printf "Usage: %s [-p root_password] -m MANIFEST_FILE " "$bi_arg0"
+	printf -- "-o OUTPUTDIR { INPUT_DIR ... }\n"
 	exit 2
 }
 
@@ -349,15 +350,20 @@ function bi_create_password
 	local shadow="$bi_mnt_root/etc/shadow"
 	local stash="$bi_out_dir/$bi_prefix/root.password"
 
-	bi_emit_start 'Setting random "root" password'
+	if [[ -z "$bi_root_pw" ]]; then
+		bi_emit_start 'Setting random "root" password'
 
-	#
-	# Generate a random root password.
-	#
-	if ! cp_password=$("$pwgen" -B -c -n 16 1) ||
-	    [[ -z $cp_password ]]; then
-		fail 'unable to generate root password.'
+		#
+		# Generate a random root password.
+		#
+		if ! cp_password=$("$pwgen" -B -c -n 16 1) ||
+		    [[ -z $cp_password ]]; then
+			fail 'unable to generate root password.'
+		fi
+	else
+		cp_password="$bi_root_pw"
 	fi
+
 	bi_emit_info 'Password' "$cp_password"
 
 	#
@@ -798,7 +804,7 @@ function bi_safe_update_symlink
 #
 # Process options:
 #
-while getopts "m:o:" c $@; do
+while getopts "m:o:p:" c $@; do
 	case "$c" in
 	m)
 		bi_manifest=$OPTARG
@@ -806,6 +812,9 @@ while getopts "m:o:" c $@; do
 	o)
 		bi_out_dir=$OPTARG
 		;;
+	p)
+		bi_root_pw="$OPTARG"
+		;;
 	*)
 		usage
 		;;
-- 
2.21.0

