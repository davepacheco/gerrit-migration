From cf94bdb856b60ebc0445dcac52ee1c30c70bcb6a Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Tue, 15 Aug 2017 21:21:59 +0000
Subject: [PATCH] MANTA-3319 mpu-create ought to record when an MPU is created
 in the upload record Reviewed by: Jordan Hendricks
 <jordan.hendricks@joyent.com> Approved by: Jordan Hendricks
 <jordan.hendricks@joyent.com>

---
 lib/uploads/common.js   | 14 ++++++++++----
 test/mpu/create.test.js | 27 +++++++++++++++++++++++++++
 test/mpu/helper.js      |  4 ++++
 3 files changed, 41 insertions(+), 4 deletions(-)

diff --git a/lib/uploads/common.js b/lib/uploads/common.js
index 1f8fe05..7462eb3 100644
--- a/lib/uploads/common.js
+++ b/lib/uploads/common.js
@@ -102,7 +102,8 @@ require('../errors');
  *          headers,        // headers to store on object record
  *          sharks,         // mako sharks the object is stored on
  *          partsMD5,       // for a commit, the MD5 sum of the parts etags
- *          objectId        // object ID for the target object
+ *          objectId,       // object ID for the target object
+ *          creationTimeMs  // mpu creation time in ms since epoch
  *      }
  *
  *    - Finalizing Record: This record has the same structure as a typical Manta
@@ -232,7 +233,10 @@ var mdKeys = {
     PARTS_MD5: 'partsMD5',
 
     // the target object ID
-    OBJECT_ID: 'objectId'
+    OBJECT_ID: 'objectId',
+
+    // upload record creation time
+    CREATION_TIME_MS: 'creationTimeMs'
 };
 
 function isValidUploadMdKey(key) {
@@ -307,7 +311,8 @@ function createUploadRecord(upload, opts, cb) {
                 headers: opts.headers,
                 sharks: opts.sharks,
                 partsMD5: null, // used only for commits
-                objectId: libuuid.create()
+                objectId: libuuid.create(),
+                creationTimeMs: Date.now()
             };
 
             cb(null, md);
@@ -909,7 +914,8 @@ MultipartUpload.prototype.getUpload = function getUpload(cb) {
         partsDirectory: self.get(mdKeys.UPLOAD_PATH),
         targetObject: self.get(mdKeys.OBJECT_PATH),
         headers: self.get(mdKeys.HEADERS),
-        numCopies: self.numSharks()
+        numCopies: self.numSharks(),
+        creationTimeMs: self.get(mdKeys.CREATION_TIME_MS)
     };
 
     if (upload.state === MPU_S_CREATED) {
diff --git a/test/mpu/create.test.js b/test/mpu/create.test.js
index 803aeb6..a1d752b 100644
--- a/test/mpu/create.test.js
+++ b/test/mpu/create.test.js
@@ -59,6 +59,33 @@ test('create upload', function (t) {
     });
 });
 
+// Verifies that time-stamp set in the upload record
+// upon mpu creation exists and has a reasonable value.
+test('create upload: upload record creation time', function (t) {
+    var self = this;
+    var h = {};
+    var beforeUpload = Date.now();
+    self.createUpload(self.path, h, function (err, o) {
+        if (ifErr(t, err, 'created upload')) {
+            t.end();
+            return;
+        }
+
+        var afterUpload = Date.now();
+
+        self.getUpload(self.uploadId, function (err2, upload) {
+            if (ifErr(t, err2, 'got upload')) {
+                t.end();
+                return;
+            }
+            t.ok(upload.creationTimeMs);
+            t.ok(beforeUpload < upload.creationTimeMs, 'before time check');
+            t.ok(upload.creationTimeMs < afterUpload, 'after time check');
+            t.end();
+        });
+    });
+});
+
 // content-length
 test('create upload: content-length header', function (t) {
     var self = this;
diff --git a/test/mpu/helper.js b/test/mpu/helper.js
index b65e116..7a71f53 100644
--- a/test/mpu/helper.js
+++ b/test/mpu/helper.js
@@ -509,6 +509,10 @@ function checkGetResponse(u) {
         return (new Error('get-mpu did not return the target object headers'));
     }
 
+    if (!u.creationTimeMs) {
+        return (new Error('get-mpu did not return the mpu creation time'));
+    }
+
     if (u.state === 'created') {
         // A created upload will have 'partsDirectory', but finalized uploads
         // will not.
-- 
2.21.0

