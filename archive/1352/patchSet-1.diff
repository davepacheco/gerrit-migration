From 2e2f90f799d02e185cb4042b21c503faa2cf20bb Mon Sep 17 00:00:00 2001
From: David Pacheco <dap@joyent.com>
Date: Thu, 26 Jan 2017 16:19:37 -0800
Subject: [PATCH] MANTA-3076 update muskie to moray v3

---
 bin/mlocate                    |  2 --
 etc/config.coal.json           | 33 +++++++++++++++++++++++----------
 lib/jobs/create.js             |  1 -
 lib/medusa/connector.js        | 15 ++++-----------
 lib/medusa/routes.js           |  1 -
 lib/picker.js                  | 15 ++++++---------
 main.js                        |  7 ++-----
 package.json                   |  3 ++-
 sapi_manifests/muskie/template | 33 +++++++++++++++++++++++----------
 9 files changed, 60 insertions(+), 50 deletions(-)

diff --git a/bin/mlocate b/bin/mlocate
index b3e8f17..d592789 100755
--- a/bin/mlocate
+++ b/bin/mlocate
@@ -77,8 +77,6 @@ function createAuthCacheClient(opts, cb) {
 
 function createMorayClient(opts, cb) {
     assert.object(opts, 'options');
-    assert.string(opts.host, 'options.host');
-    assert.number(opts.port, 'options.port');
     assert.func(cb, 'callback');
 
     var log = LOG.child({component: 'moray'}, true);
diff --git a/etc/config.coal.json b/etc/config.coal.json
index 1649cee..92c9bdd 100644
--- a/etc/config.coal.json
+++ b/etc/config.coal.json
@@ -19,13 +19,20 @@
         "maxTranslationCacheAgeMs": 300
     },
     "moray": {
-        "connectTimeout": 2000,
-        "host": "electric-moray.coal.joyent.us",
-        "port": 2020
+        "morayOptions": {
+            "srvDomain": "electric-moray.coal.joyent.us",
+            "cueballOptions": {
+                "resolvers": [ "nameservice.coal.joyent.us" ]
+            }
+        }
     },
     "marlin": {
-        "connectTimeout": 2000,
-        "url": "tcp://1.moray.coal.joyent.us:2020",
+	"moray": {
+            "srvDomain": "1.moray.coal.joyent.us",
+            "cueballOptions": {
+                "resolvers": [ "nameservice.coal.joyent.us" ]
+            }
+	},
         "jobCache": {
             "size": 500,
             "expiry": 30
@@ -57,8 +64,10 @@
     },
     "medusa": {
         "moray": {
-            "host": "electric-moray.coal.joyent.us",
-            "port": 2020
+          "srvDomain": "electric-moray.coal.joyent.us",
+          "cueballOptions": {
+              "resolvers": ["nameservice.coal.joyent.us"]
+          }
         },
         "reflector": {
             "host": "medusa.coal.joyent.us",
@@ -66,10 +75,14 @@
         }
     },
     "storage": {
-        "connectTimeout": 2000,
         "lag": 86400,
-        "url": "tcp://1.moray.coal.joyent.us:2020",
-        "multiDC": false
+        "multiDC": false,
+        "moray": {
+            "srvDomain": "1.moray.coal.joyent.us",
+            "cueballOptions": {
+                "resolvers": ["nameservice.coal.joyent.us"]
+            }
+        }
     },
     "sharkConfig": {
         "connectTimeout": 2000,
diff --git a/lib/jobs/create.js b/lib/jobs/create.js
index 9d156d1..42ac15b 100644
--- a/lib/jobs/create.js
+++ b/lib/jobs/create.js
@@ -10,7 +10,6 @@
 
 var util = require('util');
 
-var marlin = require('marlin');
 var restify = require('restify');
 var libuuid = require('libuuid');
 var vasync = require('vasync');
diff --git a/lib/medusa/connector.js b/lib/medusa/connector.js
index 7a49629..5fa5f9e 100644
--- a/lib/medusa/connector.js
+++ b/lib/medusa/connector.js
@@ -11,6 +11,7 @@
 var assert = require('assert-plus');
 var EventEmitter = require('events').EventEmitter;
 var http = require('http');
+var jsprim = require('jsprim');
 var moray = require('moray');
 var util = require('util');
 var Watershed = require('watershed').Watershed;
@@ -30,33 +31,25 @@ require('../errors');
 
 function MedusaConnector(options) {
     assert.object(options, 'options');
-    assert.optionalNumber(options.connectTimeout,
-                          'options.connectTimeout');
     assert.optionalNumber(options.inactivityTimeout,
                           'options.inactivityTimeout');
     assert.object(options.log, 'options.log');
     assert.object(options.moray, 'options.moray'); // electric moray
-    assert.string(options.moray.host, 'options.moray.host');
-    assert.number(options.moray.port, 'options.moray.port');
     assert.object(options.reflector, 'options.reflector');
     assert.string(options.reflector.host, 'options.reflector.host');
     assert.number(options.reflector.port, 'options.reflector.port');
 
     EventEmitter.call(this);
     var self = this;
+    var morayOptions = jsprim.deepCopy(options.moray);
+    morayOptions.log = options.log;
 
     self.log = options.log;
     self.url = options.url;
 
-    self.connectTimeout = options.connectTimeout || 1000;
     self.inactivityTimeout = options.inactivityTimeout || 30000;
     self.watershed = new Watershed();
-    self.moray = moray.createClient({
-        log: options.log,
-        connectTimeout: self.connectTimeout,
-        host: options.moray.host,
-        port: options.moray.port
-    });
+    self.moray = moray.createClient(morayOptions);
 
     // For new Medusa sessions, we establish a connection to the
     // Medusa binder name.  Subsequent participants will find
diff --git a/lib/medusa/routes.js b/lib/medusa/routes.js
index d105e36..e972865 100644
--- a/lib/medusa/routes.js
+++ b/lib/medusa/routes.js
@@ -14,7 +14,6 @@ var util = require('util');
 var http = require('http');
 var Watershed = require('watershed').Watershed;
 var assert = require('assert-plus');
-var marlin = require('marlin');
 var once = require('once');
 var domain = require('domain');
 var jobs_common = require('../jobs/common');
diff --git a/lib/picker.js b/lib/picker.js
index 6c0bc35..b2e797c 100644
--- a/lib/picker.js
+++ b/lib/picker.js
@@ -50,6 +50,7 @@
 var EventEmitter = require('events').EventEmitter;
 var util = require('util');
 
+var jsprim = require('jsprim');
 var moray = require('moray');
 
 var assert = require('assert-plus');
@@ -324,12 +325,11 @@ function lower_bound(set, size, low, high) {
  */
 function Picker(opts) {
     assert.object(opts, 'options');
+    assert.object(opts, 'options.moray');
     assert.optionalBool(opts.multiDC, 'options.multiDC');
-    assert.optionalNumber(opts.connectTimeout, 'options.connectTimeout');
     assert.optionalNumber(opts.interval, 'options.interval');
     assert.optionalNumber(opts.lag, 'options.lag');
     assert.object(opts.log, 'options.log');
-    assert.string(opts.url, 'options.url');
     // When a streaming upload comes into Manta, there is no content-length
     // associated with the request so it uses the DEF_MAX_LEN for size.  That is
     // the same size the Picker will use when looking for sharks.  In smaller
@@ -340,12 +340,10 @@ function Picker(opts) {
 
     EventEmitter.call(this);
 
-    this.client = moray.createClient({
-        log: opts.log,
-        connectTimeout: opts.connectTimeout,
-        url: opts.url
-    });
-    this.connectTimeout = opts.connectTimeout || 1000;
+    var morayOptions = jsprim.deepCopy(opts.moray);
+    morayOptions.log = opts.log;
+
+    this.client = moray.createClient(morayOptions);
     this.db = null;
     this.dcIndex = -1;
     this.interval = parseInt(opts.interval || 30000, 10);
@@ -505,7 +503,6 @@ Picker.prototype.choose = function choose(opts, cb) {
 
 Picker.prototype.toString = function toString() {
     var str = '[object Picker <';
-    str += 'connectTimeout=' + this.connectTimeout + ', ';
     str += 'datacenters=' + this.datacenters.length + ', ';
     str += 'interval=' + this.interval + ', ';
     str += 'lag=' + this.lag + ', ';
diff --git a/main.js b/main.js
index b5a7606..f6933c8 100644
--- a/main.js
+++ b/main.js
@@ -258,12 +258,11 @@ function createCueballHttpAgent(cfg) {
 
 function createPickerClient(cfg) {
     var opts = {
-        connectTimeout: cfg.connectTimeout,
         interval: cfg.interval,
         lag: cfg.lag,
+        moray: cfg.moray,
         log: LOG.child({component: 'picker'}, true),
         multiDC: cfg.multiDC,
-        url: cfg.url,
         ignoreSize: cfg.ignoreSize
     };
 
@@ -302,7 +301,7 @@ function createKeyAPIClient(opts) {
 function createMarlinClient(opts) {
     var log = opts.log.child({component: 'marlin'}, true);
     var _opts = {
-        moray: opts,
+        moray: opts.moray,
         setup_jobs: true,
         log: log
     };
@@ -349,9 +348,7 @@ function createMarlinClient(opts) {
 
 function createMorayClient(opts) {
     assert.object(opts, 'options');
-    assert.string(opts.host, 'options.host');
     assert.object(opts.log, 'options.log');
-    assert.number(opts.port, 'options.port');
 
     var log = LOG.child({component: 'moray'}, true);
     opts.log = log;
diff --git a/package.json b/package.json
index cbf77f6..3dc3839 100644
--- a/package.json
+++ b/package.json
@@ -19,6 +19,7 @@
         "deep-equal": "0.0.0",
         "dtrace-provider": "0.2.8",
         "http-signature": "1.1.0",
+	"jsprim": "^1.3.1",
         "kang": "1.1.0",
         "keep-alive-agent": "0.0.1",
         "keyapi": "git+ssh://git@github.com:joyent/keyapi.git#c30dd2710ad2175095dc0e96479686fa774b8063",
@@ -29,7 +30,7 @@
         "mahi": "2.0.1",
         "marlin": "git+ssh://git@github.com:joyent/manta-marlin.git#master",
         "mime": "1.2.11",
-        "moray": "^2.0.0",
+        "moray": "3.0.0",
         "once": "1.3.0",
         "restify": "2.6.3",
         "vasync": "1.4.3",
diff --git a/sapi_manifests/muskie/template b/sapi_manifests/muskie/template
index 1273c31..61d6f7e 100644
--- a/sapi_manifests/muskie/template
+++ b/sapi_manifests/muskie/template
@@ -19,13 +19,20 @@
     "maxTranslationCacheAgeMs": 300000
   },
   "moray": {
-    "connectTimeout": 2000,
-    "host": "{{ELECTRIC_MORAY}}",
-    "port": 2020
+    "morayOptions": {
+        "srvDomain": "{{ELECTRIC_MORAY}}",
+        "cueballOptions": {
+            "resolvers": ["nameservice.{{DOMAIN_NAME}}"]
+        }
+    }
   },
   "marlin": {
-    "connectTimeout": 2000,
-    "url": "tcp://{{MARLIN_MORAY_SHARD}}:2020",
+    "moray": {
+        "srvDomain": "{{MARLIN_MORAY_SHARD}}",
+        "cueballOptions": {
+            "resolvers": ["nameservice.{{DOMAIN_NAME}}"]
+        }
+    },
     "jobCache": {
       "size": 500,
       "expiry": 30
@@ -129,8 +136,10 @@
 
   "medusa": {
     "moray": {
-      "host": "{{ELECTRIC_MORAY}}",
-      "port": 2020
+      "srvDomain": "{{ELECTRIC_MORAY}}",
+      "cueballOptions": {
+          "resolvers": ["nameservice.{{DOMAIN_NAME}}"]
+      }
     },
     "reflector": {
       "host": "{{MEDUSA_REFLECTOR}}",
@@ -138,11 +147,15 @@
     }
   },
   "storage": {
-    "connectTimeout": 2000,
     "lag": 60000,
-    "url": "tcp://{{STORAGE_MORAY_SHARD}}:2020",
     "multiDC": {{MUSKIE_MULTI_DC}}{{#MUSKIE_IGNORE_SIZE}},
-    "ignoreSize": {{MUSKIE_IGNORE_SIZE}}{{/MUSKIE_IGNORE_SIZE}}
+    "ignoreSize": {{MUSKIE_IGNORE_SIZE}}{{/MUSKIE_IGNORE_SIZE}},
+    "moray": {
+        "srvDomain": "{{STORAGE_MORAY_SHARD}}",
+        "cueballOptions": {
+            "resolvers": ["nameservice.{{DOMAIN_NAME}}"]
+        }
+    }
   },
   "authToken": {
     "salt": "{{MUSKIE_JOB_TOKEN_AES_SALT}}",
-- 
2.21.0

