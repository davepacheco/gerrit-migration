commit b9eeb3e77af4cc5dfb2b9993c00dfb6b3d279d45 (refs/changes/99/4999/2)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2018-10-25T19:36:12+02:00 (12 months ago)
    
    TRITON-906 Would like to specify a PI timestamp from manta when building headnode images
    Reviewed by: Trent Mick <trentm@gmail.com>
    Approved by: Trent Mick <trentm@gmail.com>

diff --git a/README.md b/README.md
index 96ade27c..c34b9291 100644
--- a/README.md
+++ b/README.md
@@ -309,6 +309,30 @@ boot tarball), the following could be used in `build.spec.local`:
 }
 ```
 
+#### Alternative build timestamp selection
+
+By default, the build artifacts used for inclusion in the headnode
+installation from a given branch are obtained from a file named following
+the pattern `buildjob-latest`, which points to a manta directory named using
+`buildjob-build_timestamp`. Sometimes it is desirable to pick a different
+image than the most recently created one. On these cases, it's possible
+to specify the `build_timestamp` in `build.spec.local`:
+
+```
+{
+    "files": {
+        "platform": {
+            "branch": "master",
+            "build_timestamp": "20181024T220414Z"
+        },
+        "sdcadm": {
+            "branch": "rfd67",
+            "build_timestamp": "20171030T214543Z"
+        }
+    }
+}
+```
+
 #### Feature Definition
 
 The build specification allows for the build process to be different based on a
diff --git a/buildtools/novus/cmd/downloader.js b/buildtools/novus/cmd/downloader.js
index 7e7c8683..0f1f7385 100644
--- a/buildtools/novus/cmd/downloader.js
+++ b/buildtools/novus/cmd/downloader.js
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 var mod_fs = require('fs');
@@ -335,7 +335,11 @@ bit_enum_file(be, next)
 		if (alt_base_var) {
 			base_path = be.be_spec.get(alt_base_var);
 		}
-
+		var timestamp = 'latest';
+		var build_timestamp = file_spec('build_timestamp', true);
+		if (build_timestamp) {
+			timestamp = build_timestamp;
+		}
 		lib_bits_from_manta(be.be_out, {
 			bfm_manta: be.be_manta,
 			bfm_prefix: 'file.' + name,
@@ -348,7 +352,8 @@ bit_enum_file(be, next)
 					ext: file_spec('file|ext')
 				}
 			],
-			bfm_base_path: base_path
+			bfm_base_path: base_path,
+			bfm_timestamp: timestamp
 		}, next);
 		return;
 
diff --git a/buildtools/novus/lib/bits_from/manta.js b/buildtools/novus/lib/bits_from/manta.js
index c954c6bf..3b6d11ca 100755
--- a/buildtools/novus/lib/bits_from/manta.js
+++ b/buildtools/novus/lib/bits_from/manta.js
@@ -6,7 +6,7 @@
  */
 
 /*
- * Copyright 2017 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 var mod_path = require('path');
@@ -25,7 +25,6 @@ bits_from_manta(out, bfm, next)
 	mod_assert.arrayOfObject(out, 'out');
 	mod_assert.object(bfm, 'bfm');
 	mod_assert.func(next, 'next');
-
 	mod_vasync.pipeline({
 		arg: bfm,
 		funcs: [
@@ -38,7 +37,6 @@ bits_from_manta(out, bfm, next)
 			next(new VError(err, 'could not get from manta'));
 			return;
 		}
-
 		mod_assert.object(bfm.bfm_manta_hashes, 'bfm_manta_hashes');
 		mod_assert.arrayOfObject(bfm.bfm_manta_files,
 		    'bfm_manta_files');
@@ -319,13 +317,23 @@ bfm_lookup_latest_dir(bfm, next)
 	mod_assert.string(bfm.bfm_base_path, 'bfm_base_path');
 	mod_assert.string(bfm.bfm_jobname, 'bfm_jobname');
 	mod_assert.string(bfm.bfm_branch, 'bfm_branch');
+	mod_assert.optionalString(bfm.bfm_timestamp, 'bfm_timestamp');
 	mod_assert.func(next, 'next');
 
+
 	/*
 	 * Look up the "-latest" pointer file for this branch in Manta:
 	 */
+	if (!bfm.bfm_timestamp) {
+		bfm.bfm_timestamp = 'latest';
+	}
 	var latest_dir = mod_path.join('/', bfm.bfm_base_path,
-	    bfm.bfm_jobname, bfm.bfm_branch + '-latest');
+	    bfm.bfm_jobname, bfm.bfm_branch + '-' + bfm.bfm_timestamp);
+	if (bfm.bfm_timestamp !== 'latest') {
+		bfm.bfm_manta_dir = latest_dir;
+		next();
+		return;
+	}
 	lib_common.get_manta_file(bfm.bfm_manta, latest_dir,
 	    function (err, data) {
 		if (err) {
