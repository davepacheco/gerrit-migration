commit 2f8ba7a4a65eb3d3b55ef5334037b3add1cd5c08 (refs/changes/65/165/1)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2016-07-28T18:51:54+00:00 (3 years, 2 months ago)
    
    Add getter for address component of CIDRs

diff --git a/ip6addr.js b/ip6addr.js
index 35f6fca..7133f3f 100644
--- a/ip6addr.js
+++ b/ip6addr.js
@@ -427,6 +427,10 @@ CIDR.prototype.prefixLength = function getPrefixLength(format) {
   }
 };
 
+CIDR.prototype.address = function getAddressComponent() {
+  return this._addr;
+}
+
 CIDR.prototype.toString = function cidrString(opts) {
   assert.optionalObject(opts, 'opts');
 
diff --git a/test/cidr.test.js b/test/cidr.test.js
index e2ab9b0..6b94ab1 100644
--- a/test/cidr.test.js
+++ b/test/cidr.test.js
@@ -88,6 +88,26 @@ test('create - prefixLength', function (t) {
   t.end();
 });
 
+test('create - address', function (t) {
+  var cidr = CIDR('fd00:0045::/64');
+  t.equal(cidr.address().toString(), 'fd00:45::');
+  cidr = CIDR('fe80::1/64');
+  t.equal(cidr.address().toString(), 'fe80::');
+  cidr = CIDR('fe80::20e:1/64');
+  t.equal(cidr.address().toString(), 'fe80::');
+  cidr = CIDR('fe80:40f::20e:1/64');
+  t.equal(cidr.address().toString(), 'fe80:40f::');
+  cidr = CIDR('192.168.0.0/24');
+  t.equal(cidr.address().toString(), '192.168.0.0');
+  cidr = CIDR('192.168.0.1/24');
+  t.equal(cidr.address().toString(), '192.168.0.0');
+  cidr = CIDR('192.168.5.1/24');
+  t.equal(cidr.address().toString(), '192.168.5.0');
+  cidr = CIDR('192.168.5.1/16');
+  t.equal(cidr.address().toString(), '192.168.0.0');
+  t.end();
+});
+
 test('contains v4', function (t) {
   var val = CIDR('192.168.0.0/24');
   t.ok(val.contains(lib.parse('192.168.0.0')), 'contains net');
