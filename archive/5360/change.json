{"project":"joyent/node-verror","branch":"master","id":"Ib4b6e077e151572da8a827bf3abb0b66b61e2448","number":"5360","subject":"joyent/node-verror#57 support skipPrintf option and add PError constructor","owner":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"url":"https://cr.joyent.us/5360","commitMessage":"joyent/node-verror#57 support skipPrintf option and add PError constructor\n","createdOn":1547490358,"lastUpdated":1563303820,"open":false,"status":"ABANDONED","comments":[{"timestamp":1547490358,"reviewer":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"message":"Uploaded patch set 1."},{"timestamp":1547490361,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing-1\n\n(1 comment)\n\n\"make check\" exited with status 2"},{"timestamp":1547491657,"reviewer":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"message":"Uploaded patch set 2."},{"timestamp":1547491660,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing-1\n\n(3 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1547491722,"reviewer":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"message":"Uploaded patch set 3."},{"timestamp":1547491724,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing-1\n\n(1 comment)\n\n\"make check\" exited with status 2"},{"timestamp":1547491743,"reviewer":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"message":"Uploaded patch set 4."},{"timestamp":1547491745,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1548363120,"reviewer":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"message":"Uploaded patch set 5: Patch Set 4 was rebased."},{"timestamp":1548363122,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5:\n\n\"make check\" passed ok"},{"timestamp":1548469030,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 5:\n\n(4 comments)\n\nThanks so much for picking this up!  I think this change is getting close.  I had a couple of suggestions that will I hope will clarify the code\u0027s correctness.\n\nIt would be great to update CHANGES.md and package.json as well.\n\nDo we have any test that the PError constructor actually implements the `skipPrintf` behavior?\n\nThanks again for the change."},{"timestamp":1563303820,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Abandoned\n\nI\u0027ve moved this change over to https://cr.joyent.us/6608.  I\u0027ve preserved Peter Marton as the author since my changes were minimal."}],"currentPatchSet":{"number":"5","revision":"b4b6e077e151572da8a827bf3abb0b66b61e2448","parents":["3b2d790a4bff5a15772576a8d1916b06f616e179"],"ref":"refs/changes/60/5360/5","uploader":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"createdOn":1548363120,"author":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1547491745,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"/COMMIT_MSG","line":7,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Our convention is that this text should exactly match the synopsis of the issue being fixed.  So this should either say `Ability to disable printf` or we should update the issue synopsis to what you have here."},{"file":"lib/verror.js","line":59,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"When reading this, I was a bit confused about whether this option is intended to be specified in `args` (which can only come from code within this module) or the `options` that get parsed out of `argv` (which are user-provided options).  I had to read the rest of the code to remind myself of the differences, and I\u0027m not sure we\u0027ve been totally consistent about it.\n\n- The `strict` argument comes in via `args`, but only from the `SError` constructor, and that\u0027s because it\u0027s intended to override any value provided by the user-specified options.  However, it\u0027s also accepted in `options`, so users of the `VError` constructor _can_ specify `strict: true` if they want.\n- On the other hand, `skipCauseMessage` is only accepted in the user-specified options, and it\u0027s only specified via `WError`.  That allows users to use `WError` and still specify `skipCauseMessage`.\n\nI think the easier behavior to implement is what we did with `strict`: it can come in either via `args` (which is what every existing caller would do -- I would make it a required argument for clarity) or via the parsed options.  That way, users could use `skipPrintf` with VError if they want, and users of `PError` would always get it.\n\nTo do this, you\u0027d want to:\n- document the option in the block above (e.g., L40 or so)\n- make this assertion non-optional\n- change the callers to always provide this argument\n- check both `args.skipPrintf` and `options.skipPrintf`, as we do below for `strict`.\n\nDoes that make sense?  Sorry this got complicated."},{"file":"lib/verror.js","line":397,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Based on my earlier comment, I would move this up to the inline object at L392."},{"file":"lib/verror.js","line":457,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Same as above -- I\u0027d move this to L452.  (It\u0027s too late to apply `skipPrintf` here anyway because we\u0027ve already constructed the message.)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":17,"deletions":-12},{"file":"lib/verror.js","type":"MODIFIED","insertions":39,"deletions":-2},{"file":"test/tst.common.js","type":"MODIFIED","insertions":17,"deletions":0}],"sizeInsertions":73,"sizeDeletions":-14},"patchSets":[{"number":"1","revision":"80db93d31b040369af97d283046971feb4a2a3d4","parents":["cba94a1255aca4f98f8eb1c2d7f1a2f33266c49f"],"ref":"refs/changes/60/5360/1","uploader":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"createdOn":1547490358,"author":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1547490361,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/verror.js","line":126,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"warning: missing semicolon"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":17,"deletions":-12},{"file":"lib/verror.js","type":"MODIFIED","insertions":42,"deletions":-2},{"file":"test/tst.common.js","type":"MODIFIED","insertions":19,"deletions":0}],"sizeInsertions":78,"sizeDeletions":-14},{"number":"2","revision":"c2391901a2ef74458e2831c5f2f7d23b44b4552f","parents":["cba94a1255aca4f98f8eb1c2d7f1a2f33266c49f"],"ref":"refs/changes/60/5360/2","uploader":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"createdOn":1547491657,"author":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1547491660,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/verror.js","line":119,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"improper first line of block comment"},{"file":"lib/verror.js","line":119,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"missing blank after open comment"},{"file":"test/tst.common.js","line":190,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"whitespace before right paren"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":17,"deletions":-12},{"file":"lib/verror.js","type":"MODIFIED","insertions":42,"deletions":-2},{"file":"test/tst.common.js","type":"MODIFIED","insertions":19,"deletions":0}],"sizeInsertions":78,"sizeDeletions":-14},{"number":"3","revision":"4522ab3ed99fbdfe73915614e6cc11c66e87ee94","parents":["cba94a1255aca4f98f8eb1c2d7f1a2f33266c49f"],"ref":"refs/changes/60/5360/3","uploader":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"createdOn":1547491722,"author":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1547491724,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"test/tst.common.js","line":190,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"whitespace before right paren"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":17,"deletions":-12},{"file":"lib/verror.js","type":"MODIFIED","insertions":39,"deletions":-2},{"file":"test/tst.common.js","type":"MODIFIED","insertions":19,"deletions":0}],"sizeInsertions":75,"sizeDeletions":-14},{"number":"4","revision":"93a1f4ac6918d30a86797052bdc59de0ae87b40f","parents":["cba94a1255aca4f98f8eb1c2d7f1a2f33266c49f"],"ref":"refs/changes/60/5360/4","uploader":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"createdOn":1547491743,"author":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1547491745,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":17,"deletions":-12},{"file":"lib/verror.js","type":"MODIFIED","insertions":39,"deletions":-2},{"file":"test/tst.common.js","type":"MODIFIED","insertions":17,"deletions":0}],"sizeInsertions":73,"sizeDeletions":-14},{"number":"5","revision":"b4b6e077e151572da8a827bf3abb0b66b61e2448","parents":["3b2d790a4bff5a15772576a8d1916b06f616e179"],"ref":"refs/changes/60/5360/5","uploader":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"createdOn":1548363120,"author":{"name":"Peter Marton","email":"pmarton@netflix.com","username":"hekike"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1547491745,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"/COMMIT_MSG","line":7,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Our convention is that this text should exactly match the synopsis of the issue being fixed.  So this should either say `Ability to disable printf` or we should update the issue synopsis to what you have here."},{"file":"lib/verror.js","line":59,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"When reading this, I was a bit confused about whether this option is intended to be specified in `args` (which can only come from code within this module) or the `options` that get parsed out of `argv` (which are user-provided options).  I had to read the rest of the code to remind myself of the differences, and I\u0027m not sure we\u0027ve been totally consistent about it.\n\n- The `strict` argument comes in via `args`, but only from the `SError` constructor, and that\u0027s because it\u0027s intended to override any value provided by the user-specified options.  However, it\u0027s also accepted in `options`, so users of the `VError` constructor _can_ specify `strict: true` if they want.\n- On the other hand, `skipCauseMessage` is only accepted in the user-specified options, and it\u0027s only specified via `WError`.  That allows users to use `WError` and still specify `skipCauseMessage`.\n\nI think the easier behavior to implement is what we did with `strict`: it can come in either via `args` (which is what every existing caller would do -- I would make it a required argument for clarity) or via the parsed options.  That way, users could use `skipPrintf` with VError if they want, and users of `PError` would always get it.\n\nTo do this, you\u0027d want to:\n- document the option in the block above (e.g., L40 or so)\n- make this assertion non-optional\n- change the callers to always provide this argument\n- check both `args.skipPrintf` and `options.skipPrintf`, as we do below for `strict`.\n\nDoes that make sense?  Sorry this got complicated."},{"file":"lib/verror.js","line":397,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Based on my earlier comment, I would move this up to the inline object at L392."},{"file":"lib/verror.js","line":457,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Same as above -- I\u0027d move this to L452.  (It\u0027s too late to apply `skipPrintf` here anyway because we\u0027ve already constructed the message.)"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"README.md","type":"MODIFIED","insertions":17,"deletions":-12},{"file":"lib/verror.js","type":"MODIFIED","insertions":39,"deletions":-2},{"file":"test/tst.common.js","type":"MODIFIED","insertions":17,"deletions":0}],"sizeInsertions":73,"sizeDeletions":-14}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}]}