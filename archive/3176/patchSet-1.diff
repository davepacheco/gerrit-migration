From 476c76346186f1d8e5d9e670be782494948d10f8 Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Tue, 9 Jan 2018 03:03:57 +0000
Subject: [PATCH] MANTA-3542 zookeeper reports ephemeral nodes with previous
 owning sessions

---
 lib/register.js | 62 ++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 48 insertions(+), 14 deletions(-)

diff --git a/lib/register.js b/lib/register.js
index ca4582e..09e5b90 100644
--- a/lib/register.js
+++ b/lib/register.js
@@ -189,32 +189,49 @@ function registerEntries(opts, cb) {
             };
             var data = new Buffer(JSON.stringify(_obj), 'utf8');
 
+            var timer;
+            var STAT_INTERVAL = 3000;
+
             /*
-             * Manual testing shows that in cases where the zookeeper server
-             * process has been shut down long enough so that the session
-             * held by this client has expired, it's possible that once the
-             * server comes back up the ephemeral will still exist for a short
-             * time. Syncing the node makes sure that we are up to date on its
-             * latest state before trying to create it. We don't have to worry
-             * about this for service nodes, since they are persistent.
+             * Create the ephemeral node once it doesn't exist. See MANTA-3542.
              */
-            zk.sync(n, function (err) {
-                if (err) {
-                    _cb(err);
-                    return;
-                }
+            function checkNodeExists (callback) {
+                zk.stat(n, function (err) {
+                    if (!err) {
+                        timer = setTimeout(checkNodeExists.bind(null, callback),
+                            STAT_INTERVAL);
+                        return;
+                    }
+                    if (err) {
+                        if (err.code === 'NO_NODE') {
+                            createEphemeral();
+                            return;
+                        }
+                        _cb(err);
+                    }
+                });
+            }
+
+            function createEphemeral (callback) {
                 /*
                  * It's possible that we're recovering an existing session
                  * before it times out. In this case, the ephemeral nodes we'll
                  * want to create already exist. Since this is likely to happen
                  * over a flappy connection, simply log the error and move on.
+                 *
+                 * As described in MANTA-3542, it's possible that zookeeper will
+                 * report nodes that were owned by previous sessions even after
+                 * said session has expired. This presents a window during which
+                 * it's possible for the node to silently drop out of zookeeper.
+                 * We use the a stat interval mechanism to detect this.
                  */
                 zk.createWithEmptyParents(n, data, _opts, function (err) {
                     if (err) {
                         if (err.code === 'NODE_EXISTS') {
                             log.warn(err, 'register: ephemeral node ' + n +
                                 ' already exists');
-                            _cb();
+                            timer = setTimeout(checkNodeExists.bind(null, callback),
+                                STAT_INTERVAL);
                             return;
                         }
                         _cb(err);
@@ -227,7 +244,24 @@ function registerEntries(opts, cb) {
                         _cb();
                     }
                 });
-            });
+
+            }
+
+            /*
+             * Interpose the vasync callback with a callback that clears the
+             * stat-interval timer. This is only called when either there is a
+             * fatal error during creation, or the node was successfully
+             * created. In both cases, if we've set a timeout, we'll want it
+             * gone before proceeding.
+             */
+            var clearTimerAndCallback = function (err) {
+                if (timer) {
+                    clearTimeout(timer);
+                }
+                _cb(err);
+            }
+
+            createEphemeral(clearTimerAndCallback);
         },
         inputs: opts.nodes
     }, function (err) {
-- 
2.21.0

