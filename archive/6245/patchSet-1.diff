commit f5fd597a1e7270532448f52a74b7c7a2d709d486
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2019-05-14T19:27:11+02:00 (5 months ago)
    
    TRITON-1321 fwapi needs to support log boolean on rules

diff --git a/lib/cli.js b/lib/cli.js
index 023303b..ade7884 100644
--- a/lib/cli.js
+++ b/lib/cli.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2017, Joyent, Inc. All rights reserved.
+ * Copyright 2019 Joyent, Inc. All rights reserved.
  *
  * fwadm: CLI shared logic
  */
@@ -61,7 +61,7 @@ function displayRules(err, res, opts) {
         return;
     }
 
-    console.log('UUID                                 ENABLED RULE');
+    console.log('UUID                                 ENABLED LOG     RULE');
     res.forEach(function (r) {
         console.log(ruleLine(r));
     });
@@ -100,6 +100,11 @@ function getPayload(opts, args, callback) {
             payload.enabled = opts.enable;
         }
 
+
+        if (opts.log) {
+            payload.log = opts.log;
+        }
+
         ['description', 'global', 'owner_uuid'].forEach(function (p) {
             if (opts.hasOwnProperty(p)) {
                 payload[p] = opts[p];
@@ -198,8 +203,10 @@ function outputError(err, opts) {
  * Outputs one formatted rule line
  */
 function ruleLine(r) {
-    return util.format('%s %s %s', r.uuid,
-        r.enabled ? 'true   ' : 'false  ', r.rule);
+    return util.format('%s %s %s %s', r.uuid,
+        r.enabled ? 'true   ' : 'false  ',
+        r.log ? 'true   ' : 'false  ',
+        r.rule);
 }
 
 
diff --git a/lib/endpoints/rules/index.js b/lib/endpoints/rules/index.js
index ec25b83..8cbba2c 100644
--- a/lib/endpoints/rules/index.js
+++ b/lib/endpoints/rules/index.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -42,7 +42,8 @@ var LIST_SCHEMA = {
         action: validateAction,
         global: validate.boolean,
         tag: validateTag,
-        wildcard: validateArrayOfStrings
+        wildcard: validateArrayOfStrings,
+        log: validate.boolean
     }
 };
 
diff --git a/lib/fwapi-cli.js b/lib/fwapi-cli.js
index 91525a7..2528776 100644
--- a/lib/fwapi-cli.js
+++ b/lib/fwapi-cli.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
diff --git a/lib/persist.js b/lib/persist.js
index 7989e26..fdfa164 100644
--- a/lib/persist.js
+++ b/lib/persist.js
@@ -93,6 +93,10 @@ function createRule(app, log, params, callback) {
     if (app.config.fwrule_version > 2) {
         try {
             raw = (new Rule(params, app)).rawMoray();
+            log.info({rule: raw}, 'THISISTHERULE');
+            if (typeof raw.log !== undefined) {
+                log.info({params: params}, 'THESEARETHEPARAMS');
+            }
         } catch (e) {
             callback(e);
             return;
diff --git a/lib/rule.js b/lib/rule.js
index bae0bc8..41c381c 100644
--- a/lib/rule.js
+++ b/lib/rule.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2019, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -36,7 +36,7 @@ var tagUnescape = require('fwrule/lib/rule').tagUnescape;
  * 1 - Initial version.
  * 2 - Save tag names/values unescaped, and index on "description".
  */
-var MORAY_RAW_VERSION = 2;
+var MORAY_RAW_VERSION = 3;
 
 var BUCKET = {
     desc: 'fwrules',
@@ -56,6 +56,7 @@ var BUCKET = {
             'action': { 'type': 'string' },
             'protocol': { 'type': 'string' },
             'enabled': { 'type': 'boolean' },
+            'log': { 'type': 'boolean' },
             'fromwildcards': {
                 'type': '[string]'
             },
@@ -111,6 +112,8 @@ function ruleFromMoray(raw) {
     var data = {
         enabled: typeof (raw.enabled) === 'boolean' ? raw.enabled :
             (raw.enabled === 'true'),
+        log: typeof (raw.log) === 'boolean' ? raw.log :
+            (raw.log === 'true'),
         objectclass: raw.objectclass,
         parsed: {
             priority: raw.priority,
@@ -167,6 +170,11 @@ function ruleFromMoray(raw) {
         data.enabled = raw.enabled;
     }
 
+
+    if (typeof (raw.log) === 'boolean') {
+        data.log = raw.log;
+    }
+
     if (hasKey(raw, 'owner')) {
         data.owner_uuid = raw.owner;
     }
@@ -217,6 +225,8 @@ function ruleFromUFDS(raw) {
     var data = {
         enabled: typeof (raw.enabled) === 'boolean' ? raw.enabled :
             (raw.enabled === 'true'),
+        log: typeof (raw.log) === 'boolean' ? raw.log :
+            (raw.log === 'true'),
         objectclass: raw.objectclass,
         parsed: {
             action: raw.action,
@@ -259,6 +269,9 @@ function ruleFromUFDS(raw) {
         data.enabled = raw.enabled;
     }
 
+    if (typeof (raw.log) === 'boolean') {
+        data.log = raw.log;
+    }
     if (hasKey(raw, 'owner')) {
         data.owner_uuid = raw.owner;
     }
@@ -391,6 +404,7 @@ Rule.prototype.rawMoray = function _ruleRawMoray() {
     var raw = {
         action: this.action,
         enabled: this.enabled,
+        log: this.log,
         objectclass: Rule.objectclass,
         priority: this.priority,
         protocol: this.protocol,
@@ -494,6 +508,7 @@ Rule.prototype.rawUFDS = function _ruleRawUFDS() {
     var raw = {
         action: this.action,
         enabled: this.enabled,
+        log: this.log,
         objectclass: Rule.objectclass,
         protocol: this.protocol,
         uuid: this.uuid,
diff --git a/lib/ufds/filter.js b/lib/ufds/filter.js
index b9ce76c..0634ec5 100644
--- a/lib/ufds/filter.js
+++ b/lib/ufds/filter.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -95,6 +95,15 @@ function ruleCommonFilter(opts) {
         filter.push(eq('enabled', params.enabled));
     }
 
+
+    if (hasKey(params, 'log')) {
+        if ((params.log !== 'true') && (params.log !== 'false')) {
+            throw new restify.InvalidArgumentError(
+                'Invalid value for log: must be true or false');
+        }
+        filter.push(eq('log', params.log));
+    }
+
     if (hasKey(params, 'port')) {
         if (!validators.validatePortOrAll(params.port)) {
             throw new restify.InvalidArgumentError(
@@ -151,6 +160,7 @@ function ruleCommonFilter(opts) {
  *     Optional parameters:
  *     - action {String}
  *     - enabled {Boolean}
+ *     - log {Boolean}
  *     - port {Integer}
  *     - protocol {String}
  *     - ip {String or Array}
@@ -294,6 +304,7 @@ function ruleMorayFilter(opts) {
  *     Optional parameters:
  *     - action {String}
  *     - enabled {Boolean}
+ *     - log {Boolean}
  *     - port {Integer}
  *     - protocol {String}
  *     - ip {String or Array}
diff --git a/package.json b/package.json
index 0c47f80..6555450 100644
--- a/package.json
+++ b/package.json
@@ -20,7 +20,7 @@
     "effluent-logger": "git+https://github.com/joshwilsdon/effluent-logger.git#d662f161a07f94045ad2afb45442931511c40e51",
     "extsprintf": "1.0.2",
     "fast-messages": "1.0.1",
-    "fwrule": "2.0.0",
+    "fwrule": "2.1.0",
     "jsprim": "^2.0.0",
     "moray": "^3.5.0",
     "moray-filter": "1.0.0",
diff --git a/test/integration/invalid.test.js b/test/integration/invalid.test.js
index 932669e..216c43e 100644
--- a/test/integration/invalid.test.js
+++ b/test/integration/invalid.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -60,6 +60,15 @@ function createPayload(ruleTxt) {
       },
       [ mod_err.invalidParam('global', 'global must be true or false') ] ],
 
+    [ 'bad log value',
+      {
+          rule: 'FROM tag a TO tag b ALLOW udp port 53',
+          enabled: true,
+          global: true,
+          log: 'foobar'
+      },
+      [ mod_err.invalidParam('log', 'log must be true or false') ] ],
+
     [ 'bad IPv4 subnet: bits to right of mask',
       createPayload('FROM tag foo TO subnet 10.8.0.0/5 ALLOW udp port 53'),
       [ mod_err.invalidParam('rule',
