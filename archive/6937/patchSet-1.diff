From 517ad91dff2670d516523f6c1edbd130ba17be5e Mon Sep 17 00:00:00 2001
From: Ryan Zezeski <rpz@joyent.com>
Date: Fri, 27 Sep 2019 07:03:24 -0600
Subject: [PATCH] OS-8000 viona ring reset can race with Rx packets

---
 usr/src/uts/i86pc/io/viona/viona_impl.h |  1 +
 usr/src/uts/i86pc/io/viona/viona_ring.c | 11 +++++++++++
 2 files changed, 12 insertions(+)

diff --git a/usr/src/uts/i86pc/io/viona/viona_impl.h b/usr/src/uts/i86pc/io/viona/viona_impl.h
index ee31c4d4ce..5471b611a4 100644
--- a/usr/src/uts/i86pc/io/viona/viona_impl.h
+++ b/usr/src/uts/i86pc/io/viona/viona_impl.h
@@ -70,6 +70,7 @@ enum viona_ring_state {
 	VRS_SETUP	= 0x1,	/* addrs setup and starting worker thread */
 	VRS_INIT	= 0x2,	/* worker thread started & waiting to run */
 	VRS_RUN		= 0x3,	/* running work routine */
+	VRS_STOP	= 0x4,	/* worker is exiting */
 };
 enum viona_ring_state_flags {
 	VRSF_REQ_START	= 0x1,	/* start running from INIT state */
diff --git a/usr/src/uts/i86pc/io/viona/viona_ring.c b/usr/src/uts/i86pc/io/viona/viona_ring.c
index e535bfaa1a..9183ce7ffd 100644
--- a/usr/src/uts/i86pc/io/viona/viona_ring.c
+++ b/usr/src/uts/i86pc/io/viona/viona_ring.c
@@ -389,6 +389,17 @@ viona_worker(void *arg)
 		panic("unexpected ring: %p", (void *)ring);
 	}
 
+	ring->vr_state = VRS_STOP;
+
+	/*
+	 * The Rx ring is stopping, before we start tearing it down it
+	 * is imperative that we perform an Rx barrier so that
+	 * incoming packets are dropped at viona_rx_classified().
+	 */
+	if (ring == &link->l_vrings[VIONA_VQ_RX]) {
+		mac_rx_barrier(link->l_mch);
+	}
+
 cleanup:
 	if (ring->vr_txdesb != NULL) {
 		/*
-- 
2.21.0

