From 34187cf1cde4d52c4503045d9711518471b3d65d Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Wed, 28 Dec 2016 11:31:47 -0800
Subject: [PATCH] CNS-189 cns-server dying in redis client: "connection has
 already been closed"

---
 lib/dns-server.js | 49 +++++++++++++++++++++++++++++++++++++----------
 1 file changed, 39 insertions(+), 10 deletions(-)

diff --git a/lib/dns-server.js b/lib/dns-server.js
index 5912027..a69acba 100644
--- a/lib/dns-server.js
+++ b/lib/dns-server.js
@@ -1022,11 +1022,39 @@ DNSServer.prototype.handleTransfer = function (q, z, cb) {
 
 			var log  = q.log;
 			setTimeout(function () {
+				var arg = {};
+				vasync.pipeline({
+					funcs: [claim, checkSOA, checkVer],
+					arg: arg
+				}, function () {
+					if (arg.handle)
+						arg.handle.release();
+				});
+			}, 1000);
+
+			q.send();
+			cb();
+			q.log.info('responded ok');
+
+			function claim(_, ccb) {
+				self.redisPool.claim(
+				    function (rerr, handle, redis) {
+					if (rerr) {
+						ccb(rerr);
+						return;
+					}
+					_.handle = handle;
+					_.redis = redis;
+					ccb();
+				});
+			}
+			function checkSOA(_, ccb) {
 				dnsClients.getPeerSOA(addr, z,
 				    function (qerr, qsoa) {
 					if (qerr) {
 						log.warn(qerr,
 						    'xfer follow-up failed');
+						ccb(qerr);
 						return;
 					}
 					if (qsoa.serial < newSerial) {
@@ -1034,14 +1062,18 @@ DNSServer.prototype.handleTransfer = function (q, z, cb) {
 						    'xfer follow-up showed ' +
 						    'peer still stuck on ' +
 						    'serial %d', qsoa.serial);
+						ccb(new Error('Stuck'));
 						return;
 					}
-					/* Write down the transfer in redis. */
-					r.hset('peer:' + normalizeIP(addr),
-					    z, String(qsoa.serial));
 					self.incrPeerCounter(addr, 'goodxfer');
 					self.startUnblacklist(addr);
+					/* Write down the transfer in redis. */
+					_.redis.hset(
+					    'peer:' + normalizeIP(addr),
+					    z, String(qsoa.serial), ccb);
 				});
+			}
+			function checkVer(_, ccb) {
 				dnsClients.probePeerVersion(addr,
 				    function (perr, pver) {
 					if (perr) {
@@ -1050,14 +1082,11 @@ DNSServer.prototype.handleTransfer = function (q, z, cb) {
 						    'version');
 						return;
 					}
-					r.set('peer:' + normalizeIP(addr) +
-					    ':version', pver);
+					_.redis.set('peer:' +
+					    normalizeIP(addr) + ':version',
+					    pver, ccb);
 				});
-			}, 1000);
-
-			q.send();
-			cb();
-			q.log.info('responded ok');
+			}
 		};
 
 		if (q.type() === 'IXFR') {
-- 
2.21.0

