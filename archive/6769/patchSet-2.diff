From 8e22e7389359cfe9cf101b83d63c3bce2a42cc4d Mon Sep 17 00:00:00 2001
From: John Levon <john.levon@joyent.com>
Date: Tue, 20 Aug 2019 13:14:07 +0000
Subject: [PATCH] MANTA-3252 use haproxy SSL termination for loadbalancer
 MANTA-1424 stud not restarted when SSL certificate changes MANTA-3526 want to
 disable tls 1.0 MANTA-3680 loadbalancer stud processes are not evenly
 utilized MANTA-4512 muppet should use package-lock.json

---
 .gitmodules                    |   7 +-
 Makefile                       |   5 +-
 TODO                           |  90 +++++++++++++++++++
 boot/setup.sh                  |  14 +--
 deps/haproxy                   |   1 +
 deps/haproxy-1.8               |   1 -
 docs/index.md                  | 152 +++------------------------------
 etc/haproxy.cfg.default        |  47 ++++++----
 etc/haproxy.cfg.in             |  19 +++--
 etc/stud.conf                  | 125 ---------------------------
 lib/lb_manager.js              |  31 ++++---
 smf/manifests/haproxy.xml.in   |   6 ++
 smf/manifests/stud.xml.in      |  34 --------
 test/config.test.js            |  20 +----
 test/haproxy.cfg.good          |  39 ---------
 test/haproxy.cfg.in            |  24 +++---
 test/haproxy.cfg.no-frontend   |  12 ---
 test/haproxy.cfg.out-check     |  27 ++++--
 test/haproxy.cfg.parse-error   |  51 +++++++----
 test/haproxy.cfg.test          |  90 +++++++++++--------
 test/helper.js                 |  20 ++++-
 tools/mk/Makefile.haproxy.defs |   2 +-
 tools/mk/Makefile.haproxy.targ |   6 +-
 23 files changed, 320 insertions(+), 503 deletions(-)
 create mode 100644 TODO
 create mode 160000 deps/haproxy
 delete mode 160000 deps/haproxy-1.8
 delete mode 100644 etc/stud.conf
 delete mode 100644 smf/manifests/stud.xml.in
 delete mode 100644 test/haproxy.cfg.good
 delete mode 100644 test/haproxy.cfg.no-frontend

diff --git a/.gitmodules b/.gitmodules
index 1efbbbf..4a41c89 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -10,10 +10,9 @@
 [submodule "deps/manta-scripts"]
 	path = deps/manta-scripts
 	url = https://github.com/joyent/manta-scripts.git
-[submodule "deps/haproxy-1.8"]
-	path = deps/haproxy-1.8
-	url = https://github.com/joyent/haproxy-1.8.git
-	branch = dev-v1.8.20
 [submodule "deps/eng"]
 	path = deps/eng
 	url = https://github.com/joyent/eng.git
+[submodule "deps/haproxy"]
+	path = deps/haproxy
+	url = http://git.haproxy.org/git/haproxy-2.0.git/
diff --git a/Makefile b/Makefile
index 8a45d9a..916fab6 100644
--- a/Makefile
+++ b/Makefile
@@ -39,7 +39,7 @@ JSL_CONF_NODE	 = tools/jsl.node.conf
 JSL_FILES_NODE	 = $(JS_FILES)
 JSSTYLE_FILES	 = $(JS_FILES)
 JSSTYLE_FLAGS	 = -f tools/jsstyle.conf
-SMF_MANIFESTS_IN = smf/manifests/$(NAME).xml.in smf/manifests/haproxy.xml.in smf/manifests/stud.xml.in
+SMF_MANIFESTS_IN = smf/manifests/$(NAME).xml.in smf/manifests/haproxy.xml.in
 
 #
 # Variables
@@ -72,7 +72,7 @@ RELSTAGEDIR			:= /tmp/$(NAME)-$(STAMP)
 BASE_IMAGE_UUID = a9368831-958e-432d-a031-f8ce6768d190
 BUILDIMAGE_NAME = manta-loadbalancer
 BUILDIMAGE_DESC	= Manta loadbalancer
-BUILDIMAGE_PKGSRC = openssl-1.0.2p stud-0.3p53nb7
+BUILDIMAGE_PKGSRC = openssl-1.0.2p
 AGENTS		= amon config registrar
 
 #
@@ -105,7 +105,6 @@ release: all docs $(SMF_MANIFESTS)
 	@mkdir -p $(RELSTAGEDIR)/root/opt/smartdc/$(NAME)/smf/manifests
 	@cp $(ROOT)/etc/haproxy.cfg.default $(RELSTAGEDIR)/root/opt/smartdc/$(NAME)/etc
 	@cp $(ROOT)/etc/haproxy.cfg.in $(RELSTAGEDIR)/root/opt/smartdc/$(NAME)/etc
-	@cp $(ROOT)/etc/stud.conf $(RELSTAGEDIR)/root/opt/smartdc/$(NAME)/etc
 	@cp $(ROOT)/etc/*.http $(RELSTAGEDIR)/root/opt/smartdc/$(NAME)/etc
 	@cp $(ROOT)/smf/manifests/*.xml \
 		$(RELSTAGEDIR)/root/opt/smartdc/$(NAME)/smf/manifests
diff --git a/TODO b/TODO
new file mode 100644
index 0000000..b654b88
--- /dev/null
+++ b/TODO
@@ -0,0 +1,90 @@
+
+"
+<elijah.zupancic> Also, for what it is worth - SCloud should be using a JDK
+wired through PKCS11 to use libnss.
+<elijah.zupancic> So, if libnss supports the cipher, all the better because then
+we can use a native code call out.
+"
+
+FIXME: check / ask for node-manta header case-sensitivity, elsewhere?
+
+https://github.com/joyent/java-manta/blob/master/USAGE.md#enabling-libnss-support-via-pkcs11
+
+ - check against ssl online checkers somehow
+ - figure out seamless cert reload - sdc-manta cmd/manta-replace-cert.js
+ - alarms based on RSS size - need modificaiton?
+ - check pfiles?
+ - nbthreads work OK?
+ - java-manta test
+
+MANTA-3252 - stud / loadbalancer stuff
+
+MANTA-1424 / MANTA-3680
+24 stud works
+
+stud manifest depends on config-agent, need to transfer over
+
+MANTA-3526 - disable TLS 1.0
+ - still seems enabled
+ - missing TLS 1.3
+
+https://ssldecoder.org/
+
+https://www.ssllabs.com/ssltest/analyze.html?d=us%2deast.manta.joyent.com&s=72.2.112.194&hideResults=on&latest
+
+https://github.com/joyent/rfd/tree/master/rfd/0093
+
+sdc-manta/ cmd/manta-replace-cert.js
+
+no-sslv3
+
+OCSP stapling??
+https://tools.ietf.org/html/rfc6962
+
+ssl-dh-param-file <file>
+
+from stud:
+
+# Preferred cipher list as per RFD 93
+# https://github.com/joyent/rfd/tree/master/rfd/0093
+ciphers = "EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:HIGH:!MD5:!aNULL:!PSK"
+
+keepalive = 3600
+
+
+Mozilla says:
+
+https://ssl-config.mozilla.org/#server=haproxy&server-version=1.9.8&config=intermediate
+
+    # intermediate configuration, tweak to your needs
+    ssl-default-bind-ciphers
+ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
+    ssl-default-bind-ciphersuites
+TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
+    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
+
+
+    # HSTS (63072000 seconds)
+    http-response set-header Strict-Transport-Security max-age=63072000
+
+
+
+
+https://cipherli.st/ - haproxy config recommendation
+ says:
+
+global
+   ssl-default-bind-options no-sslv3 no-tls-tickets force-tlsv12
+   ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM
+   tune.ssl.default-dh-param 2048
+
+frontend https-in
+    option httplog
+    option forwardfor
+    option http-server-close
+    option httpclose
+    rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains;\
+preload
+    rspadd X-Frame-Options:\ DENY
+    bind $YOUR_IP:443 ssl crt /etc/haproxy/haproxy.pem ciphers
+EECDH+AESGCM:EDH+AESGCM force-tlsv12 no-sslv3
diff --git a/boot/setup.sh b/boot/setup.sh
index b1c3c77..f67c9b8 100644
--- a/boot/setup.sh
+++ b/boot/setup.sh
@@ -7,7 +7,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 set -o xtrace
@@ -54,15 +54,6 @@ function manta_setup_haproxy {
 }
 
 
-function manta_setup_stud {
-    manta_add_logadm_entry "stud"
-    svccfg import $SVC_ROOT/smf/manifests/stud.xml
-    svcadm enable stud
-    [[ $? -eq 0 ]] || fatal "Unable to start stud"
-}
-
-
-
 # Mainline
 
 echo "Running common setup scripts"
@@ -78,9 +69,6 @@ manta_ensure_zk
 echo "Setting up registrar"
 manta_setup_registrar
 
-echo "Setting up stud"
-manta_setup_stud
-
 echo "Setting up haproxy"
 manta_setup_haproxy
 
diff --git a/deps/haproxy b/deps/haproxy
new file mode 160000
index 0000000..4cdc6fe
--- /dev/null
+++ b/deps/haproxy
@@ -0,0 +1 @@
+Subproject commit 4cdc6fe066484565e0b71b49d2dab5c1f3a8fe17
diff --git a/deps/haproxy-1.8 b/deps/haproxy-1.8
deleted file mode 160000
index 5cb500a..0000000
--- a/deps/haproxy-1.8
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 5cb500ab6669df2486c317750c6f5dbf9737ff4c
diff --git a/docs/index.md b/docs/index.md
index 62f3105..a1d974c 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -15,153 +15,24 @@ apisections:
 
 # tl;dr
 
-muppet is a custom loadbalancing solution with a haproxy, stud (for SSL
-termination) and a daemon that watches group membership changes in ZooKeeper.
+muppet is a custom loadbalancing solution that runs haproxy and a daemon that
+watches group membership changes in ZooKeeper.
 
 # Overview
 
-The loadbalancer can actually be used without the ZooKeeper tie-in, as the ZK
-logic is self-contained in a separate process (muppet).  To use the loadbalancer
-you'll want stud (available via pkgsrc) installed and configured, and then you
-can create a loadbalancer configuration (see below) that fronts your backend
-servers.
-
 In manta at least, all configuration of the load balancer is automatically
 managed by the muppet service, which watches for registrar changes in ZooKeeper.
 This updates the upstream server list of IP addresses and refreshes the haproxy
-loadbalancer service.
+loadbalancer service as appropriate.
 
 # Configuration
 
-## Stud
-
-This configuration assumes that stud is going to listen on 443, and proxy to
-`127.0.0.1:8443`; note that `sendproxy` must be turned on, as the loadbalancer
-assumes the remote IP address is sent over by stud.
-
-    #
-    # stud(8), The Scalable TLS Unwrapping Daemon's configuration
-    #
-
-    # NOTE: all config file parameters can be overriden
-    #       from command line!
-
-    # Listening address. REQUIRED.
-    #
-    # type: string
-    # syntax: [HOST]:PORT
-    frontend = "[*]:443"
-
-    # Upstream server address. REQUIRED.
-    #
-    # type: string
-    # syntax: [HOST]:PORT.
-    backend = "[127.0.0.1]:8443"
-
-    # SSL x509 certificate file. REQUIRED.
-    # List multiple certs to use SNI. Certs are used in the order they
-    # are listed; the last cert listed will be used if none of the others match
-    #
-    # type: string
-    pem-file = /opt/local/etc/server.pem
-
-    # SSL protocol.
-    #
-    tls = on
-    ssl = on
-
-    # List of allowed SSL ciphers.
-    #
-    # Run openssl ciphers for list of available ciphers.
-    # type: string
-    ciphers = ""
-
-    # Enforce server cipher list order
-    #
-    # type: boolean
-    prefer-server-ciphers = on
-
-    # Use specified SSL engine
-    #
-    # type: string
-    ssl-engine = ""
-
-    # Number of worker processes
-    #
-    # type: integer
-    workers = 4
-
-    # Listen backlog size
-    #
-    # type: integer
-    backlog = 100
-
-    # TCP socket keepalive interval in seconds
-    #
-    # type: integer
-    keepalive = 3600
-
-    # Chroot directory
-    #
-    # type: string
-    chroot = ""
-
-    # Set uid after binding a socket
-    #
-    # type: string
-    user = "stud"
-
-    # Set gid after binding a socket
-    #
-    # type: string
-    group = "stud"
-
-    # Quiet execution, report only error messages
-    #
-    # type: boolean
-    quiet = off
-
-    # Use syslog for logging
-    #
-    # type: boolean
-    syslog = off
-
-    # Syslog facility to use
-    #
-    # type: string
-    syslog-facility = "daemon"
-
-    # Run as daemon
-    #
-    # type: boolean
-    daemon = on
-
-    # Report client address by writing IP before sending data
-    #
-    # NOTE: This option is mutually exclusive with option write-proxy and proxy-proxy.
-    #
-    # type: boolean
-    write-ip = off
-
-    # Report client address using SENDPROXY protocol, see
-    # http://haproxy.1wt.eu/download/1.5/doc/proxy-protocol.txt
-    # for details.
-    #
-    # NOTE: This option is mutually exclusive with option write-ip and proxy-proxy.
-    #
-    # type: boolean
-    write-proxy = on
-
-    # Proxy an existing SENDPROXY protocol header through this request.
-    #
-    # NOTE: This option is mutually exclusive with option write-ip and write-proxy.
-    #
-    # type: boolean
-    proxy-proxy = off
-
+FIXME: ports etc.
 
 ### Generate an OpenSSL Certificate
 
+FIXME:
+
 Run this command:
 
     $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
@@ -170,11 +41,10 @@ Run this command:
 
 ## Load Balancer
 
-The loadbalancer used is [HAProxy](http://www.haproxy.org/), but a [fork
-maintained by Joyent](https://github.com/joyent/haproxy-1.8), with a patch to
-use Event Ports. There is an `haproxy.cfg.in` file that is templated with a
-sparse number of `%s`; this file is used to generate a new haproxy.cfg each time
-the topology of online loadbalancers changes.
+The loadbalancer used is [HAProxy](http://www.haproxy.org/).  There is an
+`haproxy.cfg.in` file that is templated with a sparse number of `%s`; this file
+is used to generate a new haproxy.cfg each time the topology of online
+loadbalancers changes.
 
 *Important:* Checked into this repo is a "blank" haproxy.cfg.default - *DO NOT
 EDIT THIS FILE!*, except in the case you need the default behaviour to change.
@@ -185,7 +55,7 @@ really care about.
 
 ## Muppet
 
-*name* is really the important variable here, as that dicatates the path in
+*name* is really the important variable here, as that dictates the path in
 ZooKeeper to watch (note the DNS name is reversed and turned into a `/`
 separated path); entries should have been written there by `registrar`.
 
diff --git a/etc/haproxy.cfg.default b/etc/haproxy.cfg.default
index ba26d08..7aea82a 100644
--- a/etc/haproxy.cfg.default
+++ b/etc/haproxy.cfg.default
@@ -1,9 +1,15 @@
+#
+# An initial configuration used before muppet reloads haproxy.
+#
+
 global
         # have haproxy launch a worker process, SMF monitors the master, part of
         # seamless config reload (via SMF refresh method)
         master-worker
-	# maximum of 10 kept-open child processes after reload
-	max-old-workers 10
+        # maximum of 10 reloads before killing old workers
+        mworker-max-reloads 10
+        # haproxy auto-sizing is not implemented on illumos
+        nbthread 20
         log 127.0.0.1 local0
         user nobody
         group nobody
@@ -12,34 +18,41 @@ global
         pidfile /var/run/haproxy.pid
         # expose-fd listeners also required for seamless config reload
         stats socket /tmp/haproxy mode 0600 level admin expose-fd listeners
+        tune.ssl.default-dh-param 2048
+        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
+
+        # intermediate config from https://ssl-config.mozilla.org/, plus
+        # the last four to match java-manta's cipher list
+        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256
 
 defaults
         balance leastconn
         log     global
         maxconn 65535
-	mode http
+        mode http
         option forwardfor
-        option http-tunnel
-	option httplog
+        option httplog
         option redispatch
         no option httpclose
         no option http-server-close
         retries 3
-        timeout connect 500
         timeout client  120000
+        timeout connect 2000
         timeout server  240000
-
-frontend https
-        bind 127.0.0.1:8443 accept-proxy
-        default_backend secure_api
-        reqadd x-secure:\ true
+        errorfile 400 /opt/smartdc/muppet/etc/400.http
+        errorfile 408 /opt/smartdc/muppet/etc/408.http
+        errorfile 500 /opt/smartdc/muppet/etc/503.http
+        errorfile 502 /opt/smartdc/muppet/etc/503.http
+        errorfile 503 /opt/smartdc/muppet/etc/503.http
+        errorfile 504 /opt/smartdc/muppet/etc/503.http
 
 backend secure_api
-	option httpchk GET /ping
-
-frontend http
-        bind *:80
-        default_backend insecure_api
+        option httpchk GET /ping
 
 backend insecure_api
-	option httpchk GET /ping
+        option httpchk GET /ping
+
+backend haproxy-stats_http
+        stats enable
+        stats refresh 30s
+        stats uri /
diff --git a/etc/haproxy.cfg.in b/etc/haproxy.cfg.in
index 4780cd4..3d7be8c 100644
--- a/etc/haproxy.cfg.in
+++ b/etc/haproxy.cfg.in
@@ -2,8 +2,10 @@ global
         # have haproxy launch a worker process, SMF monitors the master, part of
         # seamless config reload (via SMF refresh method)
         master-worker
-        # maximum of 10 kept-open child processes after reload
-        max-old-workers 10
+        # maximum of 10 reloads before killing old workers
+        mworker-max-reloads 10
+        # haproxy auto-sizing is not implemented on illumos
+        nbthread 20
         log 127.0.0.1 local0
         user nobody
         group nobody
@@ -13,7 +15,12 @@ global
         log-send-hostname %s
         # expose-fd listeners also required for seamless config reload
         stats socket /tmp/haproxy mode 0600 level admin expose-fd listeners
+        tune.ssl.default-dh-param 2048
+        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
 
+        # intermediate config from https://ssl-config.mozilla.org/, plus
+        # the last four to match java-manta's cipher list
+        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256
 
 defaults
         balance leastconn
@@ -21,7 +28,6 @@ defaults
         maxconn 65535
         mode http
         option forwardfor
-        option http-tunnel
         option httplog
         option redispatch
         no option httpclose
@@ -51,16 +57,15 @@ backend haproxy-stats_http
         stats uri /
 
 frontend https
-        bind 127.0.0.1:8443 accept-proxy
         default_backend secure_api
+        bind *:443 ssl crt /opt/smartdc/muppet/etc/ssl.pem
 
 %s
 
 frontend http_internal
-        bind %s:80
         default_backend secure_api
-
+        bind %s:80
 
 frontend stats_http
-         bind %s:8080
          default_backend haproxy-stats_http
+         bind %s:8080
diff --git a/etc/stud.conf b/etc/stud.conf
deleted file mode 100644
index ed9a35e..0000000
--- a/etc/stud.conf
+++ /dev/null
@@ -1,125 +0,0 @@
-#
-# stud(8), The Scalable TLS Unwrapping Daemon's configuration
-#
-
-# NOTE: all config file parameters can be overriden
-#       from command line!
-
-# Listening address. REQUIRED.
-#
-# type: string
-# syntax: [HOST]:PORT
-frontend = "[*]:443"
-
-# Upstream server address. REQUIRED.
-#
-# type: string
-# syntax: [HOST]:PORT.
-backend = "[127.0.0.1]:8443"
-
-# SSL x509 certificate file. REQUIRED.
-# List multiple certs to use SNI. Certs are used in the order they
-# are listed; the last cert listed will be used if none of the others match
-#
-# type: string
-pem-file = "/opt/smartdc/muppet/etc/ssl.pem"
-
-# SSL protocol.
-# Warning: Do NOT uncomment these, see "recommendations" in MANTA-2496.
-#ssl = off
-#tls = on
-
-# List of allowed SSL ciphers.
-#
-# Run openssl ciphers for list of available ciphers.
-# type: string
-#
-# Preferred cipher list as per RFD 93
-# https://github.com/joyent/rfd/tree/master/rfd/0093
-ciphers = "EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:HIGH:!MD5:!aNULL:!PSK"
-
-# Enforce server cipher list order
-#
-# type: boolean
-prefer-server-ciphers = on
-
-# Use specified SSL engine
-#
-# type: string
-ssl-engine = ""
-
-# Number of worker processes
-#
-# type: integer
-workers = 24
-
-# Listen backlog size
-#
-# type: integer
-backlog = 100
-
-# TCP socket keepalive interval in seconds
-#
-# type: integer
-keepalive = 3600
-
-# Chroot directory
-#
-# type: string
-chroot = ""
-
-# Set uid after binding a socket
-#
-# type: string
-user = "stud"
-
-# Set gid after binding a socket
-#
-# type: string
-group = "stud"
-
-# Quiet execution, report only error messages
-#
-# type: boolean
-quiet = off
-
-# Use syslog for logging
-#
-# type: boolean
-syslog = off
-
-# Syslog facility to use
-#
-# type: string
-syslog-facility = "daemon"
-
-# Run as daemon
-#
-# type: boolean
-daemon = on
-
-# Report client address by writing IP before sending data
-#
-# NOTE: This option is mutually exclusive with option write-proxy and
-# proxy-proxy.
-#
-# type: boolean
-write-ip = off
-
-# Report client address using SENDPROXY protocol, see
-# http://haproxy.1wt.eu/download/1.5/doc/proxy-protocol.txt
-# for details.
-#
-# NOTE: This option is mutually exclusive with option write-ip and proxy-proxy.
-#
-# type: boolean
-write-proxy = on
-
-# Proxy an existing SENDPROXY protocol header through this request.
-#
-# NOTE: This option is mutually exclusive with option write-ip and write-proxy.
-#
-# type: boolean
-proxy-proxy = off
-
-# EOF
diff --git a/lib/lb_manager.js b/lib/lb_manager.js
index 52c8942..33df8d9 100644
--- a/lib/lb_manager.js
+++ b/lib/lb_manager.js
@@ -63,9 +63,10 @@ const CLEAR_SERVER_LINE =
     '        server %s:81 %s:81 check inter 30s slowstart 10s\n';
 const SSL_SERVER_LINE =
     '        server %s:80 %s:80 check inter 30s slowstart 10s\n';
-const INSECURE_FRONTEND =
+
+const HTTP_FRONTEND =
     'frontend http_external\n        default_backend insecure_api\n';
-const INSECURE_BIND_LINE = '        bind %s:80\n';
+const HTTP_BIND_LINE = '        bind %s:80\n';
 
 var reload_queue = vasync.queue(function (f, cb) { f(cb); }, 1);
 
@@ -74,7 +75,7 @@ var reload_queue = vasync.queue(function (f, cb) { f(cb); }, 1);
  *
  * Options:
  * - trustedIP, an address on the Manta network that is considered preauthorized
- * - untrustedIPs, an array of addresses that untrusted traffic comes in over
+ * - untrustedIPs, an array of addresses that external traffic comes in over
  * - servers, an array of Muskie backend servers to forward requests to
  * - configFile, the config file to write out
  * - configTemplate, the config template string
@@ -96,27 +97,29 @@ function writeHaproxyConfig(opts, cb) {
         return (cb(new Error('Haproxy config error: No servers given')));
     }
 
-    var clear = '';
-    var ssl = '';
+    var clearServers = '';
+    var sslServers = '';
 
     for (var name in opts.servers) {
-        clear += sprintf(CLEAR_SERVER_LINE, name, opts.servers[name].address);
-        ssl += sprintf(SSL_SERVER_LINE, name, opts.servers[name].address);
+        clearServers += sprintf(CLEAR_SERVER_LINE, name,
+            opts.servers[name].address);
+        sslServers += sprintf(SSL_SERVER_LINE, name,
+            opts.servers[name].address);
     }
 
-    var untrusted = '';
+    var externalFrontends = '';
     if (opts.untrustedIPs.length > 0) {
-        untrusted += INSECURE_FRONTEND;
+        externalFrontends += HTTP_FRONTEND;
         opts.untrustedIPs.forEach(function (ip) {
-            untrusted += sprintf(INSECURE_BIND_LINE, ip);
+            externalFrontends += sprintf(HTTP_BIND_LINE, ip);
         });
     }
 
     const str = sprintf(opts.configTemplate,
         os.hostname(),
-        ssl,
-        clear,
-        untrusted,
+        sslServers,
+        clearServers,
+        externalFrontends,
         opts.trustedIP,
         opts.trustedIP);
 
@@ -220,7 +223,7 @@ function checkHaproxyConfig(opts, cb) {
  *
  * Options:
  * - trustedIP, an address on the Manta network that is considered preauthorized
- * - untrustedIPs, an array of addresses that untrusted traffic comes in over
+ * - untrustedIPs, an array of addresses that external traffic comes in over
  * - servers, Muskie backend servers to forward requests to
  * - reload (optional), the command to run to reload HAProxy config
  * - configTemplate (optional), the haproxy config template
diff --git a/smf/manifests/haproxy.xml.in b/smf/manifests/haproxy.xml.in
index 0cc7220..a206e47 100644
--- a/smf/manifests/haproxy.xml.in
+++ b/smf/manifests/haproxy.xml.in
@@ -37,6 +37,12 @@
 	    <service_fmri value="svc:/smartdc/mdata:execute" />
 	</dependency>
 
+	<!-- "optional_all" here because people like to disable the config agent for
+	  manual hacks on occasion -->
+	<dependency name='config-agent' grouping='optional_all' restart_on='none' type='service'>
+	    <service_fmri value='svc:/smartdc/application/config-agent' />
+	</dependency>
+
 	<exec_method type="method"
 		     name="start"
 		     exec="/opt/smartdc/muppet/build/haproxy/sbin/haproxy -f /opt/smartdc/muppet/etc/haproxy.cfg -D"
diff --git a/smf/manifests/stud.xml.in b/smf/manifests/stud.xml.in
deleted file mode 100644
index 06dbe4f..0000000
--- a/smf/manifests/stud.xml.in
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version='1.0'?>
-<!DOCTYPE service_bundle SYSTEM '/usr/share/lib/xml/dtd/service_bundle.dtd.1'>
-<service_bundle type='manifest' name='stud'>
-  <service name='pkgsrc/stud' type='service' version='1'>
-    <create_default_instance enabled='false' />
-    <single_instance />
-    <dependency name='network' grouping='require_all' restart_on='error' type='service'>
-      <service_fmri value='svc:/milestone/network:default' />
-    </dependency>
-    <dependency name='filesystem' grouping='require_all' restart_on='error' type='service'>
-      <service_fmri value='svc:/system/filesystem/local' />
-    </dependency>
-    <!-- "optional_all" here because people like to disable the config agent for
-      manual hacks on occasion -->
-    <dependency name='config-agent' grouping='optional_all' restart_on='none' type='service'>
-      <service_fmri value='svc:/smartdc/application/config-agent' />
-    </dependency>
-    <exec_method type='method' name='start' exec='/opt/local/bin/stud --config=%{config_file} --tls' timeout_seconds='60' />
-    <exec_method type='method' name='stop' exec=':kill' timeout_seconds='60' />
-    <property_group name='startd' type='framework'>
-      <propval name='duration' type='astring' value='contract' />
-      <propval name='ignore_error' type='astring' value='core,signal' />
-    </property_group>
-    <property_group name='application' type='application'>
-      <propval name='config_file' type='astring' value='/opt/smartdc/muppet/etc/stud.conf' />
-    </property_group>
-    <stability value='Evolving' />
-    <template>
-      <common_name>
-        <loctext xml:lang='C'>Scalable TLS Unwrapping Daemon</loctext>
-      </common_name>
-    </template>
-  </service>
-</service_bundle>
diff --git a/test/config.test.js b/test/config.test.js
index 7aa701f..2fdfd55 100644
--- a/test/config.test.js
+++ b/test/config.test.js
@@ -18,14 +18,10 @@ var vasync = require('vasync');
 ///--- Globals
 var log = helper.createLogger();
 
-// The good file to test against
-var haproxy_good = path.resolve(__dirname, 'haproxy.cfg.good');
-
 // Files that have a bad config in some way
 var haproxy_no_listener = path.resolve(__dirname, 'haproxy.cfg.no-listener');
 var haproxy_empty_error = path.resolve(__dirname, 'haproxy.cfg.empty');
 var haproxy_parse_error = path.resolve(__dirname, 'haproxy.cfg.parse-error');
-var haproxy_no_frontend = path.resolve(__dirname, 'haproxy.cfg.no-frontend');
 
 // File for writeHaproxyConfig to write out
 var updConfig_out = path.resolve(__dirname, 'haproxy.cfg.out');
@@ -40,7 +36,7 @@ const haproxy_template = fs.readFileSync(
 var haproxy_file = path.resolve(__dirname, '../etc/haproxy.cfg');
 var haproxy_file_tmp = path.resolve(__dirname, '../etc/haproxy.cfg.tmp');
 
-var haproxy_exec = path.resolve(__dirname, '../deps/haproxy-1.8/haproxy');
+var haproxy_exec = path.resolve(__dirname, '../deps/haproxy/haproxy');
 
 
 ///--- Tests
@@ -48,7 +44,7 @@ var haproxy_exec = path.resolve(__dirname, '../deps/haproxy-1.8/haproxy');
 tap.test('test good config file', function (t) {
     var opts = { log: helper.createLogger(),
         haproxyExec: haproxy_exec,
-        configFile: haproxy_good};
+        configFile: updConfig_out_chk};
     lbm.checkHaproxyConfig(opts, function (err) {
         t.equal(null, err);
         t.done();
@@ -85,16 +81,6 @@ tap.test('test parse error config file (should error)', function (t) {
     });
 });
 
-tap.test('test no-frontend config file (should error)', function (t) {
-    var opts = { log: helper.createLogger(),
-        haproxyExec: haproxy_exec,
-        configFile: haproxy_no_frontend};
-    lbm.checkHaproxyConfig(opts, function (err) {
-        t.ok(err);
-        t.done();
-    });
-});
-
 tap.test('test writeHaproxyConfig', function (t) {
     var opts = {
         trustedIP: '127.0.0.1',
@@ -128,7 +114,7 @@ tap.test('test writeHaproxyConfig', function (t) {
                 }
             }
         });
-        fs.unlinkSync(updConfig_out);
+        //fs.unlinkSync(updConfig_out);
         t.done();
     });
 });
diff --git a/test/haproxy.cfg.good b/test/haproxy.cfg.good
deleted file mode 100644
index 531309a..0000000
--- a/test/haproxy.cfg.good
+++ /dev/null
@@ -1,39 +0,0 @@
-global
-        log 127.0.0.1 local0
-        user nobody
-        group nobody
-        daemon
-        maxconn 65535
-        pidfile /var/run/haproxy.pid
-        stats socket /tmp/haproxy mode 0600 level admin
-
-defaults
-        balance leastconn
-        log     global
-        maxconn 65535
-	mode http
-        option forwardfor
-        option http-tunnel
-	option httplog
-        option redispatch
-        no option httpclose
-        no option http-server-close
-        retries 3
-        timeout connect 500
-        timeout client  120000
-        timeout server  240000
-
-frontend https
-        bind 127.0.0.1:8443 accept-proxy
-        default_backend secure_api
-        reqadd x-secure:\ true
-
-backend secure_api
-	option httpchk GET /ping
-
-frontend http
-        bind *:80
-        default_backend insecure_api
-
-backend insecure_api
-	option httpchk GET /ping
diff --git a/test/haproxy.cfg.in b/test/haproxy.cfg.in
index 8061f84..e1902e5 100644
--- a/test/haproxy.cfg.in
+++ b/test/haproxy.cfg.in
@@ -1,12 +1,13 @@
-# same as etc/haproxy.cfg.in, but without the errorfile directives, which break
-# unprivileged 'make test'
+# same as etc/haproxy.cfg.in, except able to use for unit tests
 
 global
         # have haproxy launch a worker process, SMF monitors the master, part of
         # seamless config reload (via SMF refresh method)
         master-worker
-        # maximum of 10 kept-open child processes after reload
-        max-old-workers 10
+        # maximum of 10 reloads before killing old workers
+        mworker-max-reloads 10
+        # haproxy auto-sizing is not implemented on illumos
+        nbthread 20
         log 127.0.0.1 local0
         user nobody
         group nobody
@@ -16,7 +17,12 @@ global
         log-send-hostname %s
         # expose-fd listeners also required for seamless config reload
         stats socket /tmp/haproxy mode 0600 level admin expose-fd listeners
+        tune.ssl.default-dh-param 2048
+        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
 
+        # intermediate config from https://ssl-config.mozilla.org/, plus
+        # the last four to match java-manta's cipher list
+        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256
 
 defaults
         balance leastconn
@@ -24,7 +30,6 @@ defaults
         maxconn 65535
         mode http
         option forwardfor
-        option http-tunnel
         option httplog
         option redispatch
         no option httpclose
@@ -48,16 +53,15 @@ backend haproxy-stats_http
         stats uri /
 
 frontend https
-        bind 127.0.0.1:8443 accept-proxy
         default_backend secure_api
+        bind *:443 # ssl crt /opt/smartdc/muppet/etc/ssl.pem
 
 %s
 
 frontend http_internal
-        bind %s:80
         default_backend secure_api
-
+        bind %s:80
 
 frontend stats_http
-         bind %s:8080
-         default_backend haproxy-stats_http
+        default_backend haproxy-stats_http
+        bind %s:8080
diff --git a/test/haproxy.cfg.no-frontend b/test/haproxy.cfg.no-frontend
deleted file mode 100644
index 8db79a2..0000000
--- a/test/haproxy.cfg.no-frontend
+++ /dev/null
@@ -1,12 +0,0 @@
-    global
-        daemon
-        maxconn 256
-
-    defaults
-        mode http
-        timeout connect 5000ms
-        timeout client 50000ms
-        timeout server 50000ms
-
-    backend servers
-        server server1 127.0.0.1:8000 maxconn 32
diff --git a/test/haproxy.cfg.out-check b/test/haproxy.cfg.out-check
index 7335c60..587819c 100644
--- a/test/haproxy.cfg.out-check
+++ b/test/haproxy.cfg.out-check
@@ -1,4 +1,13 @@
+# same as etc/haproxy.cfg.in, except able to use for unit tests
+
 global
+        # have haproxy launch a worker process, SMF monitors the master, part of
+        # seamless config reload (via SMF refresh method)
+        master-worker
+        # maximum of 10 reloads before killing old workers
+        mworker-max-reloads 10
+        # haproxy auto-sizing is not implemented on illumos
+        nbthread 20
         log 127.0.0.1 local0
         user nobody
         group nobody
@@ -6,8 +15,14 @@ global
         maxconn 65535
         pidfile /var/run/haproxy.pid
         log-send-hostname foo
-        stats socket /tmp/haproxy mode 0600 level admin
+        # expose-fd listeners also required for seamless config reload
+        stats socket /tmp/haproxy mode 0600 level admin expose-fd listeners
+        tune.ssl.default-dh-param 2048
+        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
 
+        # intermediate config from https://ssl-config.mozilla.org/, plus
+        # the last four to match java-manta's cipher list
+        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256
 
 defaults
         balance leastconn
@@ -15,7 +30,6 @@ defaults
         maxconn 65535
         mode http
         option forwardfor
-        option http-tunnel
         option httplog
         option redispatch
         no option httpclose
@@ -43,8 +57,8 @@ backend haproxy-stats_http
         stats uri /
 
 frontend https
-        bind 127.0.0.1:8443 accept-proxy
         default_backend secure_api
+        bind *:443 # ssl crt /opt/smartdc/muppet/etc/ssl.pem
 
 frontend http_external
         default_backend insecure_api
@@ -53,10 +67,9 @@ frontend http_external
 
 
 frontend http_internal
-        bind 127.0.0.1:80
         default_backend secure_api
-
+        bind 127.0.0.1:80
 
 frontend stats_http
-         bind 127.0.0.1:8080
-         default_backend haproxy-stats_http
+        default_backend haproxy-stats_http
+        bind 127.0.0.1:8080
diff --git a/test/haproxy.cfg.parse-error b/test/haproxy.cfg.parse-error
index 9b6fbb4..5540d5d 100644
--- a/test/haproxy.cfg.parse-error
+++ b/test/haproxy.cfg.parse-error
@@ -1,41 +1,60 @@
 ;;;;
 
+#
+# An initial configuration used before muppet reloads haproxy.
+#
+
 global
+        # have haproxy launch a worker process, SMF monitors the master, part of
+        # seamless config reload (via SMF refresh method)
+        master-worker
+        # maximum of 10 reloads before killing old workers
+        mworker-max-reloads 10
+        # haproxy auto-sizing is not implemented on illumos
+        nbthread 20
         log 127.0.0.1 local0
         user nobody
         group nobody
         daemon
         maxconn 65535
         pidfile /var/run/haproxy.pid
-        stats socket /tmp/haproxy mode 0600 level admin
+        # expose-fd listeners also required for seamless config reload
+        stats socket /tmp/haproxy mode 0600 level admin expose-fd listeners
+        tune.ssl.default-dh-param 2048
+        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
+
+        # intermediate config from https://ssl-config.mozilla.org/, plus
+        # the last four to match java-manta's cipher list
+        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256
 
 defaults
         balance leastconn
         log     global
         maxconn 65535
-	mode http
+        mode http
         option forwardfor
-        option http-tunnel
-	option httplog
+        option httplog
         option redispatch
         no option httpclose
         no option http-server-close
         retries 3
-        timeout connect 500
         timeout client  120000
+        timeout connect 2000
         timeout server  240000
-
-frontend https
-        bind 127.0.0.1:8443 accept-proxy
-        default_backend secure_api
-        reqadd x-secure:\ true
+        errorfile 400 /opt/smartdc/muppet/etc/400.http
+        errorfile 408 /opt/smartdc/muppet/etc/408.http
+        errorfile 500 /opt/smartdc/muppet/etc/503.http
+        errorfile 502 /opt/smartdc/muppet/etc/503.http
+        errorfile 503 /opt/smartdc/muppet/etc/503.http
+        errorfile 504 /opt/smartdc/muppet/etc/503.http
 
 backend secure_api
-	option httpchk GET /ping
-
-frontend http
-        bind *:80
-        default_backend insecure_api
+        option httpchk GET /ping
 
 backend insecure_api
-	option httpchk GET /ping
+        option httpchk GET /ping
+
+backend haproxy-stats_http
+        stats enable
+        stats refresh 30s
+        stats uri /
diff --git a/test/haproxy.cfg.test b/test/haproxy.cfg.test
index d99a7cc..343b1b3 100644
--- a/test/haproxy.cfg.test
+++ b/test/haproxy.cfg.test
@@ -1,45 +1,61 @@
+#
+# close to a real haproxy.cfg, but modified so it can be run on a build machine
+# as a non-root user
+#
+
 global
-	log 127.0.0.1 local0
-	# run as the user doing 'make test', so extra perms aren't needed
-	#user nobody
-	#group nobody
-	daemon
-	maxconn 2048
-	pidfile /tmp/haproxy.pid.test
-	stats socket /tmp/haproxy mode 0600 level admin
+        # have haproxy launch a worker process, SMF monitors the master, part of
+        # seamless config reload (via SMF refresh method)
+        master-worker
+        # maximum of 10 reloads before killing old workers
+        mworker-max-reloads 10
+        # haproxy auto-sizing is not implemented on illumos
+        nbthread 20
+        log 127.0.0.1 local0
+        # user nobody
+        # group nobody
+        daemon
+        maxconn 1024
+        pidfile /tmp/haproxy.pid.test
+        log-send-hostname testhost
+        # expose-fd listeners also required for seamless config reload
+        stats socket /tmp/haproxy mode 0600 level admin expose-fd listeners
+        tune.ssl.default-dh-param 2048
+        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
 
-defaults
-	balance leastconn
-	log     global
-	maxconn 2048
-	mode http
-	option forwardfor
-	option http-tunnel
-	option httplog
-	option redispatch
-	no option httpclose
-	no option http-server-close
-	retries 3
-	timeout connect 500
-	timeout client  120000
-	timeout server  240000
+        # intermediate config from https://ssl-config.mozilla.org/, plus
+        # the last four to match java-manta's cipher list
+        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256
 
-frontend https
-	bind 127.0.0.1:6600 accept-proxy
-	default_backend secure_api
-	reqadd x-secure:\ true
+defaults
+        balance leastconn
+        log     global
+        maxconn 65535
+        mode http
+        option forwardfor
+        option httplog
+        option redispatch
+        no option httpclose
+        no option http-server-close
+        retries 3
+        timeout client  120000
+        timeout connect 2000
+        timeout server  240000
 
 backend secure_api
-	option httpchk GET /ping
-	server 4afa9ff4-d918-42ed-9972-9ac20b7cf869:6780 127.0.0.1:6780 check inter 1s slowstart 10s
-	server 5c679a71-9ef7-4079-9a4c-45c9f5b97d45:6781 127.0.0.1:6781 check inter 1s slowstart 10s
+        option httpchk GET /ping
+        server 4afa9ff4-d918-42ed-9972-9ac20b7cf869:6780 127.0.0.1:6780 check inter 1s slowstart 10s
+        server 5c679a71-9ef7-4079-9a4c-45c9f5b97d45:6781 127.0.0.1:6781 check inter 1s slowstart 10s
 
+backend insecure_api
+        option httpchk GET /ping
+        server 4afa9ff4-d918-42ed-9972-9ac20b7cf869:6780 127.0.0.1:6780 check inter 1s slowstart 10s
+        server 5c679a71-9ef7-4079-9a4c-45c9f5b97d45:6781 127.0.0.1:6781 check inter 1s slowstart 10s
 
-frontend http
-	bind 127.0.0.1:6700
-	default_backend insecure_api
+frontend https
+        default_backend secure_api
+        bind 127.0.0.1:6443 ssl crt /tmp/haproxy.test.pem
 
-backend insecure_api
-	option httpchk GET /ping
-	server 4afa9ff4-d918-42ed-9972-9ac20b7cf869:6780 127.0.0.1:6780 check inter 1s slowstart 10s
-	server 5c679a71-9ef7-4079-9a4c-45c9f5b97d45:6781 127.0.0.1:6781 check inter 1s slowstart 10s
+frontend http
+       bind 127.0.0.1:6080
+       default_backend insecure_api
diff --git a/test/helper.js b/test/helper.js
index d4739ef..3af5735 100644
--- a/test/helper.js
+++ b/test/helper.js
@@ -17,9 +17,10 @@ const child_process = require('child_process');
 const fs = require('fs');
 const path = require('path');
 
-const haproxy_exec = path.resolve(__dirname, '../deps/haproxy-1.8/haproxy');
+const haproxy_exec = path.resolve(__dirname, '../deps/haproxy/haproxy');
 const haproxy_cfgfile = path.resolve(__dirname, './haproxy.cfg.test');
 const haproxy_pidfile = '/tmp/haproxy.pid.test';
+const haproxy_pemfile = '/tmp/haproxy.test.pem';
 
 ///--- Helpers
 
@@ -38,15 +39,26 @@ function createLogger(name, stream) {
 
 
 function startHaproxy(cb) {
-    child_process.execFile(haproxy_exec, [ '-f', haproxy_cfgfile ],
+    child_process.execFile('/opt/local/bin/openssl', [ 'req', '-x509',
+        '-nodes', '-days', '365', '-newkey', 'rsa:2048', '-keyout',
+        haproxy_pemfile, '-out', haproxy_pemfile, '-subj',
+        '/C=US/ST=CA/O=Joyent/OU=manta/CN=localhost' ],
       function (error, stdout, stderr) {
         if (error) {
             cb(error);
             return;
         }
 
-        // give some time for haproxy to start
-        setTimeout(cb, 1000);
+        child_process.execFile(haproxy_exec, [ '-f', haproxy_cfgfile ],
+          function (error2, stdout2, stderr2) {
+            if (error2) {
+                cb(error2);
+                return;
+            }
+
+            // give some time for haproxy to start
+            setTimeout(cb, 1000);
+        });
     });
 }
 
diff --git a/tools/mk/Makefile.haproxy.defs b/tools/mk/Makefile.haproxy.defs
index 095b0fa..537fd92 100644
--- a/tools/mk/Makefile.haproxy.defs
+++ b/tools/mk/Makefile.haproxy.defs
@@ -20,7 +20,7 @@ HAPROXY_INSTALL ?= $(BUILD)/haproxy
 DISTCLEAN_FILES	+= $(HAPROXY_INSTALL)
 
 HAPROXY_EXEC	= $(HAPROXY_INSTALL)/sbin/haproxy
-HAPROXY_SRC	:= deps/haproxy-1.8
+HAPROXY_SRC	:= deps/haproxy
 
 # Ensure these use absolute paths to the executables to allow running
 # from a dir other than the project top.
diff --git a/tools/mk/Makefile.haproxy.targ b/tools/mk/Makefile.haproxy.targ
index 4da3132..635e57f 100644
--- a/tools/mk/Makefile.haproxy.targ
+++ b/tools/mk/Makefile.haproxy.targ
@@ -13,7 +13,11 @@
 # Makefile.haproxy.targ: building and shipping a private haproxy
 #
 
-BUILDFLAGS = -j8 TARGET=solaris DEFINE=-D_XPG6
+BUILDFLAGS = \
+    -j8 V=1 TARGET=solaris DEFINE=-D_XPG6 USE_OPENSSL=1 \
+    ADDLIB="-L/opt/local/lib -R/opt/local/lib"
+
+
 $(HAPROXY_EXEC): $(HAPROXY_SRC)/.git
 	cd $(HAPROXY_SRC) && \
 	    $(MAKE) $(BUILDFLAGS) && \
-- 
2.21.0

