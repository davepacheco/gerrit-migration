commit edc5a0109cab0a98d69f4f32bb1d67236d2abd36 (refs/changes/60/4460/1)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2018-06-29T18:13:53+02:00 (1 year, 3 months ago)
    
    TRITON-92 set 'dns_domain' on all Triton core VMs

diff --git a/lib/procedures/update-sapi-v2.js b/lib/procedures/update-sapi-v2.js
index ff9e574..b6de5be 100644
--- a/lib/procedures/update-sapi-v2.js
+++ b/lib/procedures/update-sapi-v2.js
@@ -16,6 +16,7 @@ var common = require('../common');
 var errors = require('../errors');
 var Procedure = require('./procedure').Procedure;
 var s = require('./shared');
+var steps = require('../steps');
 
 function UpdateSapiV2(options) {
     assert.arrayOfObject(options.changes, 'options.changes');
@@ -96,6 +97,12 @@ UpdateSapiV2.prototype.execute = function sapiv2Execute(opts, cb) {
         }
 
         var funcs = [
+            function ensureDnsDomainSdcAppParameter(_, next) {
+                steps.ensureDnsDomainSdcAppParam({
+                    progress: progress,
+                    sdcadm: sdcadm
+                }, next);
+            },
             function ensureFullMode(_, next) {
                 progress('Verifying SAPI full mode');
                 sdcadm.sapi.getMode(function (err, m) {
diff --git a/lib/procedures/update-single-hn-sapi-v1.js b/lib/procedures/update-single-hn-sapi-v1.js
index 62b3c0c..f8c6fea 100644
--- a/lib/procedures/update-single-hn-sapi-v1.js
+++ b/lib/procedures/update-single-hn-sapi-v1.js
@@ -19,6 +19,8 @@ var vmadm = require('../vmadm');
 
 var Procedure = require('./procedure').Procedure;
 var s = require('./shared');
+var steps = require('../steps');
+
 /**
  * First pass procedure for updating sapi service
  *
@@ -85,6 +87,12 @@ UpdateSingleHNSapiV1.prototype.execute = function sapiv1Execute(opts, cb) {
         }
 
         var funcs = [
+            function ensureDnsDomainSdcAppParameter(_, next) {
+                steps.ensureDnsDomainSdcAppParam({
+                    progress: progress,
+                    sdcadm: sdcadm
+                }, next);
+            },
             function getMode(_, next) {
                 progress('Get SAPI current mode');
                 sdcadm.sapi.getMode(function (err, m) {
diff --git a/lib/steps/dnsdomain.js b/lib/steps/dnsdomain.js
new file mode 100644
index 0000000..771fbbd
--- /dev/null
+++ b/lib/steps/dnsdomain.js
@@ -0,0 +1,55 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2018 Joyent, Inc.
+ */
+
+/*
+ * Steps for setting the proper "dns_domain" value for SDC application.
+ */
+
+var assert = require('assert-plus');
+
+var errors = require('../errors');
+
+function ensureDnsDomainSdcAppParam(arg, cb) {
+    assert.object(arg, 'arg');
+    assert.func(arg.progress, 'arg.progress');
+    assert.object(arg.sdcadm, 'arg.sdcadm');
+    assert.object(arg.sdcadm.sdcApp, 'arg.sdcadm.sdcApp');
+    assert.func(cb, 'cb');
+
+    var sdcadm = arg.sdcadm;
+    var app = arg.sdcadm.sdcApp;
+
+    if (app.params.dns_domain) {
+        cb();
+        return;
+    }
+
+    arg.progress('Setting "params.dns_domain" into Sdc Application');
+
+    sdcadm.sapi.updateApplication(app.uuid, {
+        params: {
+            dns_domain: app.metadata.dns_domain
+        }
+    }, function updateAppCb(sapiErr) {
+        if (sapiErr) {
+            cb(new errors.SDCClientError(sapiErr, 'sapi'));
+            return;
+        }
+        cb();
+    });
+}
+
+// --- exports
+
+module.exports = {
+    ensureDnsDomainSdcAppParam: ensureDnsDomainSdcAppParam
+};
+
+// vim: set softtabstop=4 shiftwidth=4:
diff --git a/lib/steps/index.js b/lib/steps/index.js
index bb81417..dbcb9a5 100644
--- a/lib/steps/index.js
+++ b/lib/steps/index.js
@@ -27,7 +27,8 @@ module.exports = {};
     'sapi',
     'servers',
     'binder',
-    'zookeeper'
+    'zookeeper',
+    'dnsdomain'
 ].forEach(function (modName) {
     var mod = require('./' + modName);
     Object.keys(mod).forEach(function (symbol) {
diff --git a/test/update.test.js b/test/update.test.js
index 6b560d4..10679db 100644
--- a/test/update.test.js
+++ b/test/update.test.js
@@ -215,9 +215,8 @@ test('update non-HA moray and SAPI consecutively', function (t) {
             'Reprovisioning VM',
             'Destroying tmp VM',
             'Updating sapi',
-            'Provisioning Temporary sapi',
-            'Reprovisioning sapi VM',
-            'Stop tmp VM',
+            'Verifying SAPI full mode',
+            'Waiting for sapi',
             'Updated successfully'
         ];
 
