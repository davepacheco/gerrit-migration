From 8cef9283947fc988b77b5134e8aa8827d97ae2b6 Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Wed, 13 Jun 2018 16:37:00 -0700
Subject: [PATCH] TRITON-505 expose moray client metrics in SAPI

---
 lib/server/model.js      | 11 ++++++++---
 lib/server/sapi.js       |  7 ++++---
 lib/server/stor/moray.js |  7 ++++++-
 package.json             |  2 +-
 4 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/lib/server/model.js b/lib/server/model.js
index 857c15a..dbdc690 100644
--- a/lib/server/model.js
+++ b/lib/server/model.js
@@ -84,13 +84,18 @@ function Model(config) {
     config.moray.retry.maxTimeout = 6000;
 }
 
-Model.prototype.initClients = function (cb) {
+Model.prototype.initClients = function (opts, cb) {
+    assert.object(opts, 'opts');
+    assert.object(opts.metricsManager, 'opts.metricsManager');
+    assert.func(cb, 'cb');
+
     var self = this;
     var config = self.config;
     var log = self.log;
 
     config.buckets = BUCKETS;
 
+    self.metricsManager = opts.metricsManager;
     self.attributes = new Attributes({
         model: self,
         log: log
@@ -157,7 +162,7 @@ Model.prototype.initClients = function (cb) {
             var m = 'Detected moray error on startup.  Most ' +
                 'likely going to serve data from the local ' +
                 'stor.  Continuing init...';
-            self.moray_stor = new MorayStorage(config);
+            self.moray_stor = new MorayStorage(config, self.metricsManager);
             self.moray_stor.init(function (err) {
                 // We explicitly don't return moray errors
                 // since we still want sapi up.
@@ -1257,7 +1262,7 @@ function doUpgradeToFullMode(cb) {
         },
         function initMorayStor(subcb) {
             log.info('initializing moray storage client');
-            new_stor = new MorayStorage(config);
+            new_stor = new MorayStorage(config, self.metricsManager);
             new_stor.init(subcb);
         },
         function setTransitionStor(subcb) {
diff --git a/lib/server/sapi.js b/lib/server/sapi.js
index 7e15415..67fd668 100644
--- a/lib/server/sapi.js
+++ b/lib/server/sapi.js
@@ -70,9 +70,6 @@ SAPI.prototype.start = function start(cb) {
     https.globalAgent.maxSockets = self.config.maxHttpSockets || 100;
 
     async.waterfall([
-        function (subcb) {
-            self.model.initClients(subcb);
-        },
         function initMetrics(subcb) {
             var config = self.config;
 
@@ -94,6 +91,10 @@ SAPI.prototype.start = function start(cb) {
                 subcb();
             });
         },
+        function initModel(subcb) {
+            self.model.initClients(
+                {metricsManager: self.metricsManager}, subcb);
+        },
         function (subcb) {
             var server_opts = {};
             server_opts.metricsManager = self.metricsManager;
diff --git a/lib/server/stor/moray.js b/lib/server/stor/moray.js
index 775db3e..56cab05 100644
--- a/lib/server/stor/moray.js
+++ b/lib/server/stor/moray.js
@@ -30,15 +30,17 @@ var sprintf = require('util').format;
 
 module.exports = MorayStorage;
 
-function MorayStorage(config) {
+function MorayStorage(config, metricsManager) {
     assert.object(config, 'config');
     assert.object(config.moray, 'config.moray');
     assert.object(config.log, 'config.log');
     assert.object(config.buckets, 'config.buckets');
+    assert.object(metricsManager, 'metricsManager');
 
     this.config = config.moray;
     this.log = config.log;
     this.buckets = config.buckets;
+    this.metricsManager = metricsManager;
 }
 
 MorayStorage.prototype.init = function init(cb) {
@@ -90,6 +92,7 @@ MorayStorage.prototype.init = function init(cb) {
             log: log
         };
     }
+    localMorayCfg.collector = self.metricsManager.collector;
 
     this.local = moray.createClient(localMorayCfg);
 
@@ -104,6 +107,7 @@ MorayStorage.prototype.init = function init(cb) {
 
         if (mod_net.isIP(config.master_host)) {
            this.master = moray.createClient({
+                collector: self.metricsManager.collector,
                 connectTimeout: config.connectTimeout,
                 log: log,
                 host: config.master_host,
@@ -112,6 +116,7 @@ MorayStorage.prototype.init = function init(cb) {
         } else {
             assert.equal(2020, config.master_port, 'config.master_port');
             this.master = moray.createClient({
+                collector: self.metricsManager.collector,
                 log: log,
                 srvDomain: config.master_host,
                 connectTimeout: config.connectTimeout
diff --git a/package.json b/package.json
index 5b075fd..7c5974a 100644
--- a/package.json
+++ b/package.json
@@ -13,7 +13,7 @@
     "jsprim": "2.0.0",
     "lru-cache": "2.3.0",
     "mkdirp": "0.3.4",
-    "moray": "3.4.2",
+    "moray": "3.5.0",
     "moray-filter": "1.0.0",
     "node-uuid": "1.4.0",
     "once": "1.3.0",
-- 
2.21.0

