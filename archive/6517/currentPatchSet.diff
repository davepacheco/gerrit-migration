From 6eb2d61581e9ef89597f3cf78100f9a11ec6af55 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Fri, 28 Jun 2019 17:25:03 +0200
Subject: [PATCH] TRITON-1781 `triton inst disk` subcommands improvements
 Reviewed by: Mike Gerdts <mike.gerdts@joyent.com> Approved by: Mike Gerdts
 <mike.gerdts@joyent.com>

---
 lib/do_instance/do_disk/do_get.js  |  2 ++
 lib/do_instance/do_disk/do_list.js |  7 ++--
 lib/tritonapi.js                   | 51 +++++++++++++++++++-----------
 3 files changed, 38 insertions(+), 22 deletions(-)

diff --git a/lib/do_instance/do_disk/do_get.js b/lib/do_instance/do_disk/do_get.js
index dbc862e..e21fbd0 100644
--- a/lib/do_instance/do_disk/do_get.js
+++ b/lib/do_instance/do_disk/do_get.js
@@ -49,6 +49,8 @@ function do_get(subcmd, opts, args, cb) {
                 return;
             }
 
+            delete disk.state;
+
             if (opts.json) {
                 console.log(JSON.stringify(disk));
             } else {
diff --git a/lib/do_instance/do_disk/do_list.js b/lib/do_instance/do_disk/do_list.js
index 47b8ad7..6494e01 100644
--- a/lib/do_instance/do_disk/do_list.js
+++ b/lib/do_instance/do_disk/do_list.js
@@ -15,9 +15,9 @@ var tabula = require('tabula');
 var common = require('../../common');
 var errors = require('../../errors');
 
-var COLUMNS_DEFAULT = 'shortid,size';
-var COLUMNS_DEFAULT_LONG = 'id,size';
-var SORT_DEFAULT = 'shortid';
+var COLUMNS_DEFAULT = 'shortid,size,pci_slot';
+var COLUMNS_DEFAULT_LONG = 'id,size,pci_slot,boot';
+var SORT_DEFAULT = 'pci_slot,shortid';
 
 function do_list(subcmd, opts, args, cb) {
     assert.func(cb, 'cb');
@@ -53,6 +53,7 @@ function do_list(subcmd, opts, args, cb) {
 
             disks.forEach(function (disk) {
                 disk.shortid = disk.id.split('-', 1)[0];
+                delete disk.state;
             });
 
             if (opts.json) {
diff --git a/lib/tritonapi.js b/lib/tritonapi.js
index cfeb3cf..2888263 100644
--- a/lib/tritonapi.js
+++ b/lib/tritonapi.js
@@ -4027,32 +4027,45 @@ function getInstanceDisk(opts, cb) {
     assert.func(cb, 'cb');
 
     var self = this;
-    var machineId = opts.id;
     var diskId = opts.diskId;
+    var disks;
+    var disk;
 
-    self.getInstance({
-        id: machineId,
-        fields: ['id', 'disks']
-    }, function onInstance(err, inst) {
-        if (err) {
-            cb(err);
-            return;
-        }
+    vasync.pipeline({arg: {client: self, id: opts.id}, funcs: [
+        _stepInstId,
 
-        var matchingDisks = inst.disks.filter(function getDisk(disk) {
-            return disk.id === diskId || disk.id.slice(0, 8) === diskId;
-        });
+        function listDisks(arg, next) {
+            self.cloudapi.listMachineDisks({
+                id: arg.instId
+            }, function (err, listedDisks, _res) {
+                disks = listedDisks;
+                next(err);
+            });
+        },
 
-        if (matchingDisks.length === 1) {
-            cb(null, matchingDisks[0]);
-        } else if (matchingDisks.length === 0) {
-            cb(new errors.ResourceNotFoundError(format(
-                'no disk with id "%s" was found', diskId)));
-        } else {
-            cb(new errors.ResourceNotFoundError(
+        function filterDisk(_arg, next) {
+            var matchingDisks = disks.filter(function getDisk(d) {
+                return d.id === diskId || d.id.slice(0, 8) === diskId;
+            });
+
+            if (matchingDisks.length === 1) {
+                disk = matchingDisks[0];
+                next();
+                return;
+            }
+
+            if (matchingDisks.length === 0) {
+                next(new errors.ResourceNotFoundError(format(
+                    'no disk with id "%s" was found', diskId)));
+                return;
+            }
+
+            next(new errors.ResourceNotFoundError(
                 format('Multiple disks with shortId "%s" were found '
                 + 'and "%s" is an ambiguous short id', diskId)));
         }
+    ]}, function (err) {
+        cb(err, disk);
     });
 };
 
-- 
2.21.0

