From d56f2d85c18feb656638d4afcc7cf0810f1e51cb Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Thu, 17 Aug 2017 00:52:40 +0000
Subject: [PATCH] MORAY-459 Use ESLint in Moray Reviewed by: Jan Wyszynski
 <jan.wyszynski@joyent.com> Approved by: Jan Wyszynski
 <jan.wyszynski@joyent.com>

---
 .eslintrc                            | 19 +++++++++
 Makefile                             | 33 +++++++---------
 deps/jsstyle                         |  2 +-
 lib/buckets/common.js                | 24 +++++-------
 lib/buckets/creat.js                 |  8 ++--
 lib/buckets/del.js                   |  8 ++--
 lib/buckets/get.js                   |  6 +--
 lib/buckets/list.js                  |  6 +--
 lib/buckets/update.js                | 11 +++---
 lib/control.js                       |  6 +--
 lib/dtrace.js                        |  6 +--
 lib/errors.js                        |  5 +--
 lib/index.js                         |  2 +-
 lib/manatee.js                       | 32 ++++-----------
 lib/objects/batch.js                 | 13 +++----
 lib/objects/common.js                | 53 ++++++++++++-------------
 lib/objects/del.js                   |  6 +--
 lib/objects/del_many.js              |  6 +--
 lib/objects/find.js                  |  6 +--
 lib/objects/get.js                   |  8 ++--
 lib/objects/put.js                   | 14 +++----
 lib/objects/reindex.js               | 14 +++----
 lib/objects/update.js                |  6 +--
 lib/pg.js                            | 22 +++++------
 lib/ping.js                          |  8 ++--
 lib/schema.js                        |  8 ++--
 lib/server.js                        |  8 ++--
 lib/sql.js                           |  8 ++--
 lib/standalone.js                    | 12 +++---
 main.js                              | 20 ++++------
 package.json                         |  7 +++-
 tools/mk/Makefile.defs               | 58 +++++++++++++++++++++++++++-
 tools/mk/Makefile.deps               | 35 ++++++++++++++++-
 tools/mk/Makefile.node.defs          | 16 +++++---
 tools/mk/Makefile.node.targ          |  2 +-
 tools/mk/Makefile.node_prebuilt.defs | 16 +++++---
 tools/mk/Makefile.targ               | 35 +++++++++++++++--
 37 files changed, 321 insertions(+), 228 deletions(-)
 create mode 100644 .eslintrc

diff --git a/.eslintrc b/.eslintrc
new file mode 100644
index 0000000..ccc6f09
--- /dev/null
+++ b/.eslintrc
@@ -0,0 +1,19 @@
+{
+    "plugins": [ "joyent" ],
+    "extends": [
+        "eslint:recommended",
+        "plugin:joyent/style",
+        "plugin:joyent/lint"
+    ],
+    "parserOptions": {
+        "ecmaVersion": 5,
+        "sourceType": "script",
+        "ecmaFeatures": {
+        }
+    },
+    "env": {
+        "node": true
+    },
+    "rules": {
+    }
+}
diff --git a/Makefile b/Makefile
index 0f85d15..db33e05 100644
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2017, Joyent, Inc.
+# Copyright (c) 2018, Joyent, Inc.
 #
 
 #
@@ -22,46 +22,43 @@
 # included Makefiles (in eng.git) so that other teams can use them too.
 #
 
-#
-# Tools
-#
-NODE		:= ./build/node/bin/node
-BUNYAN		:= ./node_modules/.bin/bunyan
-JSONTOOL	:= ./node_modules/.bin/json
-
 #
 # Files
 #
 DOC_FILES	 = index.md
 JS_FILES	:= $(shell ls *.js) $(shell find lib -name '*.js' | grep -v sql.js)
+ESLINT_FILES	:= $(JS_FILES)
 JSL_CONF_NODE	 = tools/jsl.node.conf
 JSL_FILES_NODE   = $(JS_FILES)
 JSSTYLE_FILES	 = $(JS_FILES)
 JSSTYLE_FLAGS    = -C -f ./tools/jsstyle.conf
-SHRINKWRAP	 = npm-shrinkwrap.json
 SMF_MANIFESTS_IN = smf/manifests/haproxy.xml.in
 BOOTSTRAP_MANIFESTS = 	sapi_manifests/registrar/template \
 			sdc/sapi_manifests/registrar/template
 
-CLEAN_FILES	+= node_modules $(SHRINKWRAP) cscope.files \
+CLEAN_FILES	+= node_modules cscope.files \
 		   $(BOOTSTRAP_MANIFESTS)
 
 #
 # Variables
 #
 
-NODE_PREBUILT_TAG	= zone
-NODE_PREBUILT_VERSION	:= v0.10.48
-NODE_PREBUILT_IMAGE = fd2cc906-8938-11e3-beab-4359c665ac99
+ifeq ($(shell uname -s),SunOS)
+	NODE_PREBUILT_TAG	= zone
+	NODE_PREBUILT_VERSION	:= v0.10.48
+	NODE_PREBUILT_IMAGE = fd2cc906-8938-11e3-beab-4359c665ac99
+endif
 
 # RELENG-341: no npm cache is making builds unreliable
 NPM_FLAGS :=
 
 include ./tools/mk/Makefile.defs
 ifeq ($(shell uname -s),SunOS)
-    include ./tools/mk/Makefile.node_prebuilt.defs
+	include ./tools/mk/Makefile.node_prebuilt.defs
 else
-    include ./tools/mk/Makefile.node.defs
+	NODE := node
+	NPM := $(shell which npm)
+	NPM_EXEC=$(NPM)
 endif
 include ./tools/mk/Makefile.node_deps.defs
 include ./tools/mk/Makefile.smf.defs
@@ -88,11 +85,7 @@ all: $(SMF_MANIFESTS) deps scripts sdc-scripts
 
 .PHONY: deps
 deps: | $(REPO_DEPS) $(NPM_EXEC)
-	$(NPM_ENV) $(NPM) install
-
-.PHONY: shrinkwrap
-shrinkwrap: | $(NPM_EXEC)
-	$(NPM) shrinkwrap
+	$(NPM) install --production
 
 .PHONY: test
 test:
diff --git a/deps/jsstyle b/deps/jsstyle
index 9600c7e..ccb145b 160000
--- a/deps/jsstyle
+++ b/deps/jsstyle
@@ -1 +1 @@
-Subproject commit 9600c7e56c84f3a74d6e3d70c336e86f7a3e3769
+Subproject commit ccb145bab281b81e1fbebd45b5d2c084c454df5d
diff --git a/lib/buckets/common.js b/lib/buckets/common.js
index 938d6f0..e3bec26 100644
--- a/lib/buckets/common.js
+++ b/lib/buckets/common.js
@@ -5,13 +5,12 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 var util = require('util');
 
 var assert = require('assert-plus');
-var once = require('once');
 var vasync = require('vasync');
 
 var objCommon = require('../objects/common');
@@ -28,7 +27,7 @@ var mod_schema = require('../schema');
 var TYPES = require('../types').TYPES;
 
 
-///--- Globals
+// --- Globals
 
 var INDEX_TYPES = {
     string: true,
@@ -66,7 +65,7 @@ var RESERVED_INDEXES = [
 ];
 
 
-///--- API
+// --- API
 
 function buildIndexString(schema) {
     assert.object(schema, 'schema');
@@ -105,7 +104,7 @@ function mapIndexType(schema, name) {
 }
 
 
-function createIndexes(opts, cb) {
+function createIndexes(opts, callback) {
     var bucket = opts.bucket;
     var log = opts.log;
     var pg = opts.pg;
@@ -120,12 +119,9 @@ function createIndexes(opts, cb) {
         return (sql);
     });
 
-    cb = once(cb);
-
     log.debug({bucket: bucket}, 'createIndexes: entered');
     vasync.forEachParallel({
-        func: function createIndex(sql, _cb) {
-            _cb = once(_cb);
+        func: function createIndex(sql, cb) {
             log.debug('createIndexes: running %s', sql);
             var q = pg.query(sql);
             q.once('error', function (err) {
@@ -135,14 +131,14 @@ function createIndexes(opts, cb) {
                         sql: sql
                     }, 'createIndex: failed');
                 }
-                _cb(err);
+                cb(err);
             });
-            q.once('end', function () {
-                _cb();
+            q.once('end', function (_) {
+                cb(null);
             });
         },
         inputs: queries
-    }, cb);
+    }, callback);
 }
 
 
@@ -243,7 +239,7 @@ function shootdownBucket(req, cb) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     INDEX_TYPES: INDEX_TYPES,
diff --git a/lib/buckets/creat.js b/lib/buckets/creat.js
index aefa463..8310edf 100644
--- a/lib/buckets/creat.js
+++ b/lib/buckets/creat.js
@@ -19,7 +19,7 @@ var BucketConflictError = require('../errors').BucketConflictError;
 var InternalError = require('../errors').InternalError;
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -38,7 +38,7 @@ var PIPELINE = [
 ];
 
 
-///--- Handlers
+// --- Handlers
 
 function insertConfig(req, cb) {
     if (req.prev)
@@ -212,7 +212,7 @@ function createIndexes(req, cb) {
     }, cb);
 }
 
-///--- API
+// --- API
 
 function creat(options) {
     control.assertOptions(options);
@@ -261,7 +261,7 @@ function creat(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     creat: creat
diff --git a/lib/buckets/del.js b/lib/buckets/del.js
index 9405ca9..48adfc8 100644
--- a/lib/buckets/del.js
+++ b/lib/buckets/del.js
@@ -21,7 +21,7 @@ var InvalidBucketNameError = mod_errors.InvalidBucketNameError;
 var BucketNotFoundError = mod_errors.BucketNotFoundError;
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -40,7 +40,7 @@ var PIPELINE = [
 ];
 
 
-///--- Handlers
+// --- Handlers
 
 function validate(req, cb) {
     var bucket = req.bucket;
@@ -76,7 +76,7 @@ function checkExists(req, cb) {
         cb(err);
     });
 
-    q.once('row', function (r) {
+    q.once('row', function (_) {
         found = true;
     });
 
@@ -227,7 +227,7 @@ function del(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     del: del
diff --git a/lib/buckets/get.js b/lib/buckets/get.js
index ed6ac35..480278b 100644
--- a/lib/buckets/get.js
+++ b/lib/buckets/get.js
@@ -15,7 +15,7 @@ var control = require('../control');
 var dtrace = require('../dtrace');
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'options', type: 'options' },
@@ -28,7 +28,7 @@ var PIPELINE = [
 ];
 
 
-///--- Handlers
+// --- Handlers
 
 function loadBucket(req, cb) {
     var log = req.log;
@@ -111,7 +111,7 @@ function get(options) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     get: get
diff --git a/lib/buckets/list.js b/lib/buckets/list.js
index bde0500..cdbb7af 100644
--- a/lib/buckets/list.js
+++ b/lib/buckets/list.js
@@ -12,7 +12,7 @@ var control = require('../control');
 var dtrace = require('../dtrace');
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'options', type: 'options' }
@@ -24,7 +24,7 @@ var PIPELINE = [
 ];
 
 
-///--- Handlers
+// --- Handlers
 
 function loadBuckets(req, cb) {
     var log = req.log;
@@ -88,7 +88,7 @@ function list(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     list: list
diff --git a/lib/buckets/update.js b/lib/buckets/update.js
index ab297a2..9b4d603 100644
--- a/lib/buckets/update.js
+++ b/lib/buckets/update.js
@@ -26,7 +26,7 @@ var BucketVersionError = mod_errors.BucketVersionError;
 var typeToPg = require('../pg').typeToPg;
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'name', type: 'string' },
@@ -50,7 +50,7 @@ var PIPELINE = [
 ];
 
 
-///--- Helpers
+// --- Helpers
 
 /**
  * Consolidate existing reindex data with new fields.
@@ -69,7 +69,7 @@ function consolidateReindex(old, ver, fields) {
     return result;
 }
 
-///--- Handlers
+// --- Handlers
 
 function loadBucket(req, cb) {
     var b = req.bucket;
@@ -99,7 +99,7 @@ function loadBucket(req, cb) {
         row = r;
     });
 
-    q.once('end', function (r) {
+    q.once('end', function (_) {
         if (!row) {
             cb(new BucketNotFoundError(req.bucket.name));
             return;
@@ -392,6 +392,7 @@ function addColumns(req, cb) {
         bucket: req.bucket.name,
         add: req.diff.add.join(', ')
     }, 'addColumns: entered');
+
     vasync.forEachParallel({
         func: function _drop(c, _cb) {
             _cb = once(_cb);
@@ -518,7 +519,7 @@ function update(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     update: update
diff --git a/lib/control.js b/lib/control.js
index db4623b..3f6cd02 100644
--- a/lib/control.js
+++ b/lib/control.js
@@ -20,7 +20,7 @@ var InvocationError = mod_errors.InvocationError;
 var pgError = require('./pg').pgError;
 var dtrace = require('./dtrace');
 
-///--- Globals
+// --- Globals
 
 var SCHEMA_TO_DESCR = {
     'integer': 'a nonnegative integer',
@@ -32,7 +32,7 @@ var SCHEMA_TO_DESCR = {
 };
 
 
-///--- API
+// --- API
 
 
 function assertOptions(options) {
@@ -284,7 +284,7 @@ function invalidArgs(rpc, argv, types) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     assertOptions: assertOptions,
diff --git a/lib/dtrace.js b/lib/dtrace.js
index 85a4dbd..52ae765 100644
--- a/lib/dtrace.js
+++ b/lib/dtrace.js
@@ -12,9 +12,7 @@ var dtrace = require('dtrace-provider');
 
 
 
-///--- Globals
-
-var DTraceProvider = dtrace.DTraceProvider;
+// --- Globals
 
 var PROBES = {
     // msgid, req_id, bucket, key, value
@@ -134,7 +132,7 @@ var PROVIDER;
 
 
 
-///--- API
+// --- API
 
 module.exports = function exportStaticProvider() {
     if (!PROVIDER) {
diff --git a/lib/errors.js b/lib/errors.js
index aeb343b..e12c51d 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -8,7 +8,6 @@
  * Copyright (c) 2017, Joyent, Inc.
  */
 
-var fs = require('fs');
 var util = require('util');
 
 var assert = require('assert-plus');
@@ -17,13 +16,13 @@ var verror = require('verror');
 
 
 
-///--- Globals
+// --- Globals
 
 var WError = verror.WError;
 var VError = verror.VError;
 
 
-///--- Errors
+// --- Errors
 
 function BucketNotFoundError(cause, bucket) {
     if (arguments.length === 1) {
diff --git a/lib/index.js b/lib/index.js
index 0a36eee..b40acf4 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -12,7 +12,7 @@ var server = require('./server');
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     createServer: server.createServer
diff --git a/lib/manatee.js b/lib/manatee.js
index b5e8d0b..a00727b 100644
--- a/lib/manatee.js
+++ b/lib/manatee.js
@@ -14,37 +14,19 @@ var util = require('util');
 var assert = require('assert-plus');
 var bunyan = require('bunyan');
 var manatee = require('node-manatee');
-var once = require('once');
 var url = require('url');
-var vasync = require('vasync');
-var VError = require('verror').VError;
-var xtend = require('xtend');
 
 var postgresPool = require('./pg');
 
 var NoDatabasePeersError = require('./errors').NoDatabasePeersError;
 
 
-///--- Globals
+// --- Globals
 
 var sprintf = util.format;
 
 var DBNAME = process.env.MORAY_DB_NAME || 'moray';
 var SERIALIZERS = {
-    db: function (d) {
-        return (d ? {
-            name: d.name,
-            url: d.url,
-            checkInterval: d.checkInterval,
-            connectTimeout: d.connectTimeout,
-            maxConnections: d.maxConnections,
-            maxIdleTime: d.maxIdleTime,
-            options: d.options,
-            queryTimeout: d.queryTimeout,
-            available: d.pool ? d.pool.available.length : 0,
-            connections: d.pool ? d.pool.resources.length : 0
-        } : undefined);
-    },
     pg: function (c) {
         return (c ? c._moray_id : undefined);
     },
@@ -67,7 +49,7 @@ var SERIALIZERS = {
                 size: p.resources.length,
                 waiting: p.queue.length
             });
-        } catch (e) {
+        } catch (_) {
             return null;
         }
     },
@@ -76,7 +58,7 @@ var SERIALIZERS = {
 
 
 
-////--- API
+// --- API
 
 function Manatee(options) {
     assert.object(options, 'options');
@@ -127,7 +109,7 @@ util.inherits(Manatee, EventEmitter);
 
 
 
-///--- exports
+// --- Exports
 
 module.exports = {
     createClient: function createClient(options) {
@@ -137,7 +119,7 @@ module.exports = {
 
 
 
-///--- API
+// --- API
 
 Manatee.prototype.pg = function pg(callback) {
     assert.func(callback, 'callback');
@@ -180,7 +162,7 @@ Manatee.prototype.toString = function toString() {
 };
 
 
-Manatee.prototype.close = function close(cb) {
+Manatee.prototype.close = function close() {
     if (this._database) {
         this._database.close();
         this._database = null;
@@ -194,7 +176,7 @@ Manatee.prototype.close = function close(cb) {
 
 
 
-///--- Private Methods
+// --- Private Methods
 
 
 /**
diff --git a/lib/objects/batch.js b/lib/objects/batch.js
index 1348cb3..e44d8d1 100644
--- a/lib/objects/batch.js
+++ b/lib/objects/batch.js
@@ -8,16 +8,13 @@
  * Copyright (c) 2017, Joyent, Inc.
  */
 
-var vasync = require('vasync');
 var clone = require('clone');
-
-
 var control = require('../control');
-var common = require('./common');
 var dtrace = require('../dtrace');
+var vasync = require('vasync');
 
 
-///--- Globals
+// --- Globals
 
 // Operation Pipelines
 var put = require('./put');
@@ -36,7 +33,7 @@ var PIPELINE = [
 ];
 
 
-///--- Helpers
+// --- Helpers
 
 function mergeOptions(existing, add) {
     var out = clone(existing || {});
@@ -47,7 +44,7 @@ function mergeOptions(existing, add) {
 }
 
 
-///--- API
+// --- API
 
 function processRequests(req, cb) {
     var etags = [];
@@ -173,7 +170,7 @@ function batch(options) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     batch: batch
diff --git a/lib/objects/common.js b/lib/objects/common.js
index 39c98f2..dab8cfb 100644
--- a/lib/objects/common.js
+++ b/lib/objects/common.js
@@ -5,23 +5,19 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
-var util = require('util');
-var net = require('net');
 
 var assert = require('assert-plus');
+var clone = require('clone');
 var filters = require('moray-filter');
 var ip6addr = require('ip6addr');
-var LRU = require('lru-cache');
 var once = require('once');
+var util = require('util');
 var vasync = require('vasync');
-var clone = require('clone');
 var vm = require('vm');
 
-var dtrace = require('../dtrace');
-
 var mod_errors = require('../errors');
 var BucketNotFoundError = mod_errors.BucketNotFoundError;
 var NotIndexedError = mod_errors.NotIndexedError;
@@ -31,18 +27,17 @@ var InvalidQueryError = mod_errors.InvalidQueryError;
 var EtagConflictError = mod_errors.EtagConflictError;
 
 var pgCommon = require('../pg');
-var pgError = pgCommon.pgError;
 var typeToPg = pgCommon.typeToPg;
 
 var TYPES = require('../types').TYPES;
 
 
-///--- Globals
+// --- Globals
 
 var INTERNAL_FIELDS = ['_etag', '_key', '_id', '_mtime', '_txn_snap'];
 
 
-///--- Internal Helpers
+// --- Internal Helpers
 
 /**
  * This function is used during processing of the parsed Moray filter to:
@@ -169,33 +164,33 @@ function compileQuery(b, s, f, count) {
         }
     }
 
-    function _substr(_f, op) {
-        op = op || 'LIKE';
+    function _substr(op) {
         var _like_tmp = '';
         var _v;
         var valid = true;
 
-        if (_f.initial) {
-            _v = _value(s, _f.attribute, _f.initial, _f);
+        if (f.initial) {
+            _v = _value(s, f.attribute, f.initial, f);
             if (_v.isArray)
-                throw new NotIndexedError(b, _f.toString());
+                throw new NotIndexedError(b, f.toString());
             if (_v.value === undefined)
                 valid = false;
             _like_tmp += _v.value + '%';
         }
 
-        _f.any.forEach(function (__f) {
-            _v = _value(s, _f.attribute, __f, _f);
+        f.any.forEach(function (any) {
+            _v = _value(s, f.attribute, any, f);
             if (_v.isArray)
-                throw new NotIndexedError(b, _f.toString());
+                throw new NotIndexedError(b, f.toString());
             if (_v.value === undefined)
                 valid = false;
             _like_tmp += '%' + _v.value + '%';
         });
-        if (_f['final']) {
-            _v = _value(s, f.attribute, _f['final'], _f);
+
+        if (f.final) {
+            _v = _value(s, f.attribute, f.final, f);
             if (_v.isArray)
-                throw new NotIndexedError(b, _f.toString());
+                throw new NotIndexedError(b, f.toString());
             if (_v.value === undefined)
                 valid = false;
             _like_tmp += '%' + _v.value + '%';
@@ -204,8 +199,8 @@ function compileQuery(b, s, f, count) {
         if (valid) {
             args.push(_like_tmp);
             clause += ' ( ';
-            clause += _f.attribute + ' ' + op + ' $' + (++count);
-            clause += ' AND ' + _f.attribute + ' IS NOT NULL';
+            clause += f.attribute + ' ' + op + ' $' + (++count);
+            clause += ' AND ' + f.attribute + ' IS NOT NULL';
             clause += ' ) ';
         }
     }
@@ -267,7 +262,7 @@ function compileQuery(b, s, f, count) {
         if (!s[f.attribute] && !/^_\w+/.test(f.attribute))
             break;
 
-        _substr(f, 'LIKE');
+        _substr('LIKE');
         break;
 
     case 'present':
@@ -290,7 +285,7 @@ function compileQuery(b, s, f, count) {
             break;
 
         case 'caseIgnoreSubstringsMatch':
-            _substr(f, 'ILIKE');
+            _substr('ILIKE');
             break;
 
         default:
@@ -426,7 +421,7 @@ function _matchTypeIP(filter) {
                 default:
                     return false;
                 }
-            } catch (e) {
+            } catch (_) {
                 return false;
             }
         }, tv);
@@ -459,7 +454,7 @@ function _matchTypeSubnet(filter) {
                 default:
                     return false;
                 }
-            } catch (e) {
+            } catch (_) {
                 return false;
             }
         }, tv);
@@ -472,7 +467,7 @@ function _matchTypeSubnet(filter) {
 }
 
 
-///--- API
+// --- API
 
 function parseFilter(req, cb) {
     try {
@@ -1164,7 +1159,7 @@ function checkOnlyUsableIndexes(req, cb) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     parseFilter: parseFilter,
diff --git a/lib/objects/del.js b/lib/objects/del.js
index 5a652d9..20f868d 100644
--- a/lib/objects/del.js
+++ b/lib/objects/del.js
@@ -21,7 +21,7 @@ var ObjectNotFoundError = mod_errors.ObjectNotFoundError;
 var EtagConflictError = mod_errors.EtagConflictError;
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -39,7 +39,7 @@ var PIPELINE = [
 // This is exported for batch 'delete' operations
 var SUBPIPELINE = PIPELINE.slice(1);
 
-///--- Handlers
+// --- Handlers
 
 function drop(req, cb) {
     var log = req.log;
@@ -128,7 +128,7 @@ function del(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     del: del,
diff --git a/lib/objects/del_many.js b/lib/objects/del_many.js
index 4eb789d..0ec922a 100644
--- a/lib/objects/del_many.js
+++ b/lib/objects/del_many.js
@@ -17,7 +17,7 @@ var common = require('./common');
 var dtrace = require('../dtrace');
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -39,7 +39,7 @@ var PIPELINE = [
 var SUBPIPELINE = PIPELINE.slice(1);
 
 
-///--- Handlers
+// --- Handlers
 
 function drop(req, cb) {
     cb = once(cb);
@@ -114,7 +114,7 @@ function deleteMany(options) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     deleteMany: deleteMany,
diff --git a/lib/objects/find.js b/lib/objects/find.js
index 3eb6995..bd96019 100644
--- a/lib/objects/find.js
+++ b/lib/objects/find.js
@@ -16,7 +16,7 @@ var common = require('./common');
 var dtrace = require('../dtrace');
 var errors = require('../errors');
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -52,7 +52,7 @@ var HANDLED_FINDOBJECTS_OPTIONS = [
     'requireIndexes'
 ];
 
-///--- Handlers
+// --- Handlers
 
 /*
  * Makes sure that all fields used in the findObjects request "req" have indexes
@@ -318,7 +318,7 @@ function find(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     find: find
diff --git a/lib/objects/get.js b/lib/objects/get.js
index 0b50340..985e741 100644
--- a/lib/objects/get.js
+++ b/lib/objects/get.js
@@ -20,7 +20,7 @@ var dtrace = require('../dtrace');
 var ObjectNotFoundError = require('../errors').ObjectNotFoundError;
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -57,7 +57,7 @@ var HANDLED_GETOBJECT_OPTIONS = [
 ];
 
 
-///--- Handlers
+// --- Handlers
 
 function checkCache(req, cb) {
     req.cacheKey = common.cacheKey(req.bucket.name, req.key);
@@ -138,7 +138,7 @@ function loadObject(req, cb) {
 
 
 
-///--- Handlers
+// --- Handlers
 
 function get(options) {
     control.assertOptions(options);
@@ -186,7 +186,7 @@ function get(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     get: get
diff --git a/lib/objects/put.js b/lib/objects/put.js
index fd1e54e..d70f4fb 100644
--- a/lib/objects/put.js
+++ b/lib/objects/put.js
@@ -19,7 +19,7 @@ var common = require('./common');
 var dtrace = require('../dtrace');
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -47,7 +47,7 @@ var PIPELINE = [
 var SUBPIPELINE = PIPELINE.slice(1);
 
 
-///--- Internal Functions
+// --- Internal Functions
 
 function _createEtag(req) {
     return (crc.hex32(crc.crc32(req._value)));
@@ -59,7 +59,7 @@ function _now() {
 }
 
 
-///--- Handlers
+// --- Handlers
 
 function runPreChain(req, cb) {
     if (req.bucket.pre.length === 0) {
@@ -203,8 +203,8 @@ function insert(req, cb) {
     });
 
     var keyStr = fields.join(', ');
-    var valStr = values.map(function (val, idx) {
-        return util.format('$%d', idx+1);
+    var valStr = values.map(function (_, idx) {
+        return util.format('$%d', idx + 1);
     }).join(', ');
 
     sql = util.format(('INSERT INTO %s (%s) VALUES (%s) ' +
@@ -335,7 +335,7 @@ function updateSerial(req, cb) {
 }
 
 
-///--- API
+// --- API
 
 function put(options) {
     control.assertOptions(options);
@@ -381,7 +381,7 @@ function put(options) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     put: put,
diff --git a/lib/objects/reindex.js b/lib/objects/reindex.js
index 33068db..f2266cb 100644
--- a/lib/objects/reindex.js
+++ b/lib/objects/reindex.js
@@ -8,17 +8,13 @@
  * Copyright (c) 2017, Joyent, Inc.
  */
 
-var util = require('util');
-
-var assert = require('assert-plus');
-var vasync = require('vasync');
-
-
 var control = require('../control');
 var common = require('./common');
 var dtrace = require('../dtrace');
+var util = require('util');
+var vasync = require('vasync');
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -35,7 +31,7 @@ var PIPELINE = [
     countRemaining
 ];
 
-///--- Handlers
+// --- Handlers
 
 function requiresReindex(req, cb) {
     var active = req.bucket.reindex_active;
@@ -279,7 +275,7 @@ function reindex(options) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     reindex: reindex
diff --git a/lib/objects/update.js b/lib/objects/update.js
index b8487a4..928c430 100644
--- a/lib/objects/update.js
+++ b/lib/objects/update.js
@@ -23,7 +23,7 @@ var NotNullableError = mod_errors.NotNullableError;
 var FieldUpdateError = mod_errors.FieldUpdateError;
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'bucket', type: 'string' },
@@ -45,7 +45,7 @@ var PIPELINE = [
 // This is exported for batch 'update' operations
 var SUBPIPELINE = PIPELINE.slice(1);
 
-///--- Handlers
+// --- Handlers
 
 function updateRows(req, cb) {
     var args;
@@ -174,7 +174,7 @@ function update(options) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     update: update,
diff --git a/lib/pg.js b/lib/pg.js
index c5f9f83..e74fbd0 100644
--- a/lib/pg.js
+++ b/lib/pg.js
@@ -8,13 +8,11 @@
  * Copyright 2017, Joyent, Inc.
  */
 
-var crypto = require('crypto');
 var EventEmitter = require('events').EventEmitter;
 var util = require('util');
 
 var assert = require('assert-plus');
 var bunyan = require('bunyan');
-var clone = require('clone');
 var jsprim = require('jsprim');
 var libuuid = require('libuuid');
 var once = require('once');
@@ -34,7 +32,7 @@ var UniqueAttributeError = mod_errors.UniqueAttributeError;
 
 var TYPES = require('./types').TYPES;
 
-///--- Globals
+// --- Globals
 
 var CLIENT_ID = 0;
 
@@ -52,7 +50,7 @@ var SERIALIZERS = {
 
 
 
-///--- Postgres Client Wrapper Class
+// --- Postgres Client Wrapper Class
 
 /*
  * This client wraps the node-postgres client to provide some useful helper
@@ -397,11 +395,11 @@ PGClient.prototype.close = function closePGClient() {
 };
 
 
-///--- End Postgres Client Wrapper Class
+// --- End Postgres Client Wrapper Class
 
 
 
-///--- Pool Functions
+// --- Pool Functions
 
 function pgAssert(_pg) {
     assert.ok(_pg, 'pg client wrapper');
@@ -416,12 +414,12 @@ function pgAssert(_pg) {
 }
 
 
-function pgCheck(options) {
+function pgCheck(_) {
     function _pgCheck(client, cb) {
         var ok = false;
         var req = client.query('SELECT NOW() AS when');
         req.once('error', cb);
-        req.once('row', function (row) {
+        req.once('row', function (__) {
             ok = true;
         });
         req.once('end', function () {
@@ -504,7 +502,7 @@ function pgCreate(opts) {
 }
 
 
-function pgDestroy(opts) {
+function pgDestroy(_) {
     function _pgDestroy(client) {
         client.close();
     }
@@ -512,11 +510,11 @@ function pgDestroy(opts) {
     return (_pgDestroy);
 }
 
-///--- End Pool Functions
+// --- End Pool Functions
 
 
 
-///--- API
+// --- API
 
 /**
  * Creates a new (pooled) Postgres client.
@@ -764,7 +762,7 @@ function typeToPg(type) {
     }
 }
 
-///--- Exports
+// --- Exports
 
 module.exports = {
 
diff --git a/lib/ping.js b/lib/ping.js
index 22550ef..facba05 100644
--- a/lib/ping.js
+++ b/lib/ping.js
@@ -8,22 +8,20 @@
  * Copyright (c) 2017, Joyent, Inc.
  */
 
-var util = require('util');
-
 var assert = require('assert-plus');
 var control = require('./control');
 var dtrace = require('./dtrace');
 var libuuid = require('libuuid');
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'options', type: 'options' }
 ];
 
 
-///--- Handlers
+// --- Handlers
 
 
 function ping(options) {
@@ -127,7 +125,7 @@ function version(options, ver) {
 }
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     ping: ping,
diff --git a/lib/schema.js b/lib/schema.js
index 8196018..b9b0bf6 100644
--- a/lib/schema.js
+++ b/lib/schema.js
@@ -25,13 +25,13 @@ var mod_types = require('./types');
 var InvocationError = mod_errors.InvocationError;
 var InvalidBucketConfigError = mod_errors.InvalidBucketConfigError;
 
-///--- Globals
+// --- Globals
 
 var AJV_ENV = new Ajv();
 var MORAY_TYPES = Object.keys(mod_types.TYPES);
 
 
-///--- Internal helpers
+// --- Internal helpers
 
 function allowedValuesText(allowed) {
     assert.array(allowed, 'allowed');
@@ -69,7 +69,7 @@ function errorsText(errs, name) {
 }
 
 
-///--- Schema Declarations
+// --- Schema Declarations
 
 AJV_ENV.addSchema({
     id: 'integer',
@@ -327,7 +327,7 @@ AJV_ENV.addSchema({
 });
 
 
-///--- Exported functions
+// --- Exported functions
 
 exports.validateArgument = function validateArgument(name, schema, value) {
     assert.string(name, 'name');
diff --git a/lib/server.js b/lib/server.js
index c765bb2..b7e29a7 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -30,7 +30,7 @@ var ping = require('./ping');
 var sql = require('./sql');
 
 
-///--- Globals
+// --- Globals
 
 /*
  * API version, increment for depended-upon changes.
@@ -50,7 +50,7 @@ var API_VERSION = 2;
 var KANG_VERSION = '1.0.0';
 
 
-///--- API
+// --- API
 
 
 function MorayServer(options) {
@@ -278,7 +278,7 @@ function createServer(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     createServer: createServer
@@ -286,7 +286,7 @@ module.exports = {
 
 
 
-///--- Privates
+// --- Privates
 
 var GET_TOKENS_ARGS = [
     { name: 'options', type: 'options' }
diff --git a/lib/sql.js b/lib/sql.js
index ea7b77b..9e72429 100644
--- a/lib/sql.js
+++ b/lib/sql.js
@@ -9,12 +9,10 @@
  */
 
 var once = require('once');
-
-var pgError = require('./pg').pgError;
 var control = require('./control');
 
 
-///--- Globals
+// --- Globals
 
 var ARGS_SCHEMA = [
     { name: 'statement', type: 'string' },
@@ -28,7 +26,7 @@ var PIPELINE = [
 ];
 
 
-///--- Handlers
+// --- Handlers
 
 function execSql(req, cb) {
     var pg = req.pg;
@@ -84,7 +82,7 @@ function sql(options) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     sql: sql
diff --git a/lib/standalone.js b/lib/standalone.js
index 5d79a9f..22402ef 100644
--- a/lib/standalone.js
+++ b/lib/standalone.js
@@ -13,15 +13,13 @@ var util = require('util');
 
 var assert = require('assert-plus');
 var bunyan = require('bunyan');
-var once = require('once');
-var VError = require('verror').VError;
 
 var postgresPool = require('./pg');
 
 var NoDatabasePeersError = require('./errors').NoDatabasePeersError;
 
 
-///--- Globals
+// --- Globals
 
 var sprintf = util.format;
 
@@ -53,7 +51,7 @@ var SERIALIZERS = {
 
 
 
-///--- Internal Functions
+// --- Internal Functions
 //
 // Simple Wrappers/Helpers First
 //
@@ -84,7 +82,7 @@ function createPGPool(opts) {
 
 
 
-////--- API
+// --- API
 
 function Standalone(options) {
     assert.object(options, 'options');
@@ -177,7 +175,7 @@ Standalone.prototype.close = function close() {
 
 
 
-///--- Private Methods
+// --- Private Methods
 
 Standalone.prototype._init = function _init() {
     var self = this;
@@ -211,7 +209,7 @@ Standalone.prototype._refresh = function _refresh() {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     createClient: function createClient(options) {
diff --git a/main.js b/main.js
index 5803d72..e36ed2a 100644
--- a/main.js
+++ b/main.js
@@ -5,17 +5,14 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
-var fs = require('fs');
-var os = require('os');
-
 var assert = require('assert-plus');
 var bsyslog = require('bunyan-syslog');
 var bunyan = require('bunyan');
 var clone = require('clone');
-var extend = require('xtend');
+var fs = require('fs');
 var getopt = require('posix-getopt');
 var jsprim = require('jsprim');
 var VError = require('verror').VError;
@@ -25,7 +22,7 @@ var app = require('./lib');
 
 
 
-///--- Globals
+// --- Globals
 
 var MIN_PORT = 1;
 var MAX_PORT = 65535;
@@ -42,7 +39,7 @@ var LOG_SERIALIZERS = {
         return (client ? client._moray_id : undefined);
     }
 };
-//We'll replace this with the syslog later, if applicable
+// We'll replace this with the syslog later, if applicable
 var LOG = bunyan.createLogger({
     name: NAME,
     level: (process.env.LOG_LEVEL || 'info'),
@@ -53,7 +50,7 @@ var LOG_LEVEL_OVERRIDE = false;
 
 
 
-///--- Internal Functions
+// --- Internal Functions
 
 function setupLogger(config) {
     var cfg_b = config.bunyan;
@@ -177,11 +174,10 @@ function readConfig(options) {
             file: options.file
         }, 'Unable to read/parse configuration file');
         throw new VError(e,
-                         'Unable to parse configuration file %s',
-                         options.file);
+            'Unable to parse configuration file %s', options.file);
     }
 
-    return (extend({}, clone(DEFAULTS), cfg, options));
+    return (jsprim.mergeObjects(cfg, options, DEFAULTS));
 }
 
 
@@ -198,7 +194,7 @@ function run(options) {
 
 
 
-///--- Mainline
+// --- Mainline
 
 (function main() {
     var options = parseOptions();
diff --git a/package.json b/package.json
index 05129e7..b804aee 100644
--- a/package.json
+++ b/package.json
@@ -33,8 +33,11 @@
         "posix-getopt": "1.2.0",
         "vasync": "1.6.4",
         "restify": "5.2.0",
-        "verror": "1.3.7",
-        "xtend": "2.1.2"
+        "verror": "1.3.7"
+    },
+    "devDependencies": {
+        "eslint": "2.13.1",
+        "eslint-plugin-joyent": "1.3.0"
     },
     "sdcDependencies": {
         "config-agent": ">=1.2.0"
diff --git a/tools/mk/Makefile.defs b/tools/mk/Makefile.defs
index 85139d7..73dd612 100644
--- a/tools/mk/Makefile.defs
+++ b/tools/mk/Makefile.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2018, Joyent, Inc.
 #
 
 #
@@ -28,6 +27,14 @@
 #			the TIMESTAMP envvar (used by MG-based builds).
 #	STAMP		A build stamp to use in built package names.
 #
+#	MAKE_STAMPS_DIR	The directory in which make stamp files are to be
+#			created.  See comments below on expensive targets.
+#
+#	CACHE_DIR	A directory tree in which temporary files may be
+#			collected by download, tarball extraction, etc.  This
+#			directory is completely removed by "make distclean".
+#			Files in this directory are not intended to be shipped.
+#
 
 TOP := $(shell pwd)
 
@@ -49,3 +56,50 @@ STAMP := $(BRANCH)-$(TIMESTAMP)-$(_GITDESCRIBE)
 
 # node-gyp will print build info useful for debugging with V=1
 export V=1
+
+CACHE_DIR ?=		cache
+DISTCLEAN_FILES +=	$(CACHE_DIR)
+
+#
+# EXPENSIVE TARGETS AND MAKE STAMP FILES
+#
+# Targets which are expensive to run and lack a single file that marks
+# completion are difficult to track with make; e.g., "npm install".  One
+# solution to this problem is to create "stamp" files with symbolic names which
+# are created as the final step in a complex make rule in order to mark
+# completion.
+#
+# In order to make these more uniform, and easier to target with "make clean",
+# we will attempt to store them under a single directory.  Note that these
+# files are never targets for shipping in build artefacts.
+#
+# Stamp-backed targets come in several parts.  First, a macro should be defined
+# which names a file in the MAKE_STAMPS_DIR directory.  Then, a target which
+# creates this stamp file must be provided.  The recipe for this target should
+# use MAKE_STAMP_REMOVE and MAKE_STAMP_CREATE to perform the appropriate stamp
+# management.
+#
+# For example:
+#
+# --- Makefile.*.defs:
+#
+#	$(STAMP_EXPENSIVE_RESULT) := $(MAKE_STAMPS_DIR)/expensive-result
+#
+# --- Makefile.*.targ:
+#
+#	$(STAMP_EXPENSIVE_RESULT): input/file another/input/file
+#		$(MAKE_STAMP_REMOVE)
+#		rm -rf output_tree/  # <--- ensure a clean slate
+#		expensive_program -o output_tree/ $^
+#		$(MAKE_STAMP_CREATE)
+#
+# NOTE: Every stamp file is exposed as an implicit "stamp-$STAMP_NAME" target.
+# The example above could be built manually by invoking:
+#
+#	make stamp-expensive-result
+#
+MAKE_STAMPS_DIR ?=	make_stamps
+CLEAN_FILES +=		$(MAKE_STAMPS_DIR)
+
+MAKE_STAMP_REMOVE =	mkdir -p $(@D); rm -f $(@)
+MAKE_STAMP_CREATE =	mkdir -p $(@D); touch $(@)
diff --git a/tools/mk/Makefile.deps b/tools/mk/Makefile.deps
index 1cffbe7..91f8346 100644
--- a/tools/mk/Makefile.deps
+++ b/tools/mk/Makefile.deps
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -44,6 +44,39 @@ JSSTYLE		?= $(JSSTYLE_EXEC)
 
 $(JSSTYLE_EXEC): | deps/jsstyle/.git
 
+#
+# eslint
+#
+ESLINT_EXEC	?= node_modules/.bin/eslint
+ifdef NODE
+    ESLINT	:= $(NODE) $(ESLINT_EXEC)
+else
+    ESLINT	?= $(ESLINT_EXEC)
+endif
+
+# Install eslint.
+#
+# The install of specific modules is to allow running "make check"
+# without having to do a complete install of all npm dependencies.
+#
+# NPM_EXEC will be defined if either of "Makefile.{node,node_prebuilt}.defs"
+# is included.
+ifdef NPM
+$(ESLINT_EXEC): package.json | $(NPM_EXEC)
+	ESLINT_VER=$$($(NODE) -e 'console.log(require("./package.json").devDependencies["eslint"] || "")') && \
+	    ESLINT_JOY_VER=$$($(NODE) -e 'console.log(require("./package.json").devDependencies["eslint-plugin-joyent"] || "")') && \
+	    [[ -n $$ESLINT_VER && -n $$ESLINT_JOY_VER ]] && \
+	    $(NPM) install --no-save eslint@$$ESLINT_VER eslint-plugin-joyent@$$ESLINT_JOY_VER && \
+	    touch $(ESLINT_EXEC)
+else
+$(ESLINT_EXEC): package.json
+	ESLINT_VER=$$(node -e 'console.log(require("./package.json").devDependencies["eslint"] || "")') && \
+	    ESLINT_JOY_VER=$$(node -e 'console.log(require("./package.json").devDependencies["eslint-plugin-joyent"] || "")') && \
+	    [[ -n $$ESLINT_VER && -n $$ESLINT_JOY_VER ]] && \
+	    npm install --no-save eslint@$$ESLINT_VER eslint-plugin-joyent@$$ESLINT_JOY_VER && \
+	    touch $(ESLINT_EXEC)
+endif
+
 #
 # restdown
 #
diff --git a/tools/mk/Makefile.node.defs b/tools/mk/Makefile.node.defs
index 9376841..487824d 100644
--- a/tools/mk/Makefile.node.defs
+++ b/tools/mk/Makefile.node.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -97,8 +96,15 @@ NODE_EXEC	= $(NODE_INSTALL)/bin/node
 NODE_WAF_EXEC	= $(NODE_INSTALL)/bin/node-waf
 NPM_EXEC	= $(NODE_INSTALL)/bin/npm
 
-# Ensure these use absolute paths to the executables to allow running
-# from a dir other than the project top.
+#
+# These paths should be used during the build process to invoke Node and
+# Node-related build tools like NPM.  All paths are fully qualified so that
+# they work regardless of the current working directory at the point of
+# invocation.
+#
+# Note that where PATH is overridden, the value chosen must cause execution of
+# "node" to find the same binary to which the NODE macro refers.
+#
 NODE		:= $(TOP)/$(NODE_EXEC)
 NODE_WAF	:= $(TOP)/$(NODE_WAF_EXEC)
-NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NPM_EXEC)
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) $(NODE) $(TOP)/$(NPM_EXEC)
diff --git a/tools/mk/Makefile.node.targ b/tools/mk/Makefile.node.targ
index abdc616..bf53f78 100644
--- a/tools/mk/Makefile.node.targ
+++ b/tools/mk/Makefile.node.targ
@@ -29,7 +29,7 @@ else
 $(NODE_EXEC) $(NPM_EXEC) $(NODE_WAF_EXEC):
 	(mkdir -p $(BUILD) \
 		&& cd $(BUILD) \
-		&& [[ -d src-node ]] && (cd src-node && git checkout master && git pull) || git clone git://github.com/joyent/node.git src-node \
+		&& [[ -d src-node ]] && (cd src-node && git checkout master && git pull) || git clone https://github.com/joyent/node.git src-node \
 		&& cd src-node \
 		&& git checkout $(NODE_PREBUILT_VERSION) \
 		&& ./configure $(NODE_CONFIG_FLAGS) \
diff --git a/tools/mk/Makefile.node_prebuilt.defs b/tools/mk/Makefile.node_prebuilt.defs
index 5744489..2129742 100644
--- a/tools/mk/Makefile.node_prebuilt.defs
+++ b/tools/mk/Makefile.node_prebuilt.defs
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -146,8 +145,15 @@ NODE_EXEC	:= $(BUILD)/prebuilt-node-$(NODE_PREBUILT_NAME)
 NODE_WAF_EXEC	:= $(BUILD)/prebuilt-node-waf-$(NODE_PREBUILT_NAME)
 NPM_EXEC	:= $(BUILD)/prebuilt-npm-$(NODE_PREBUILT_NAME)
 
-# Ensure these use absolute paths to the executables to allow running
-# from a dir other than the project top.
+#
+# These paths should be used during the build process to invoke Node and
+# Node-related build tools like NPM.  All paths are fully qualified so that
+# they work regardless of the current working directory at the point of
+# invocation.
+#
+# Note that where PATH is overridden, the value chosen must cause execution of
+# "node" to find the same binary to which the NODE macro refers.
+#
 NODE		:= $(TOP)/$(NODE_INSTALL)/bin/node
 NODE_WAF	:= $(TOP)/$(NODE_INSTALL)/bin/node-waf
-NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NODE_INSTALL)/bin/npm
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) $(NODE) $(TOP)/$(NODE_INSTALL)/bin/npm
diff --git a/tools/mk/Makefile.targ b/tools/mk/Makefile.targ
index 16b15aa..cc5ae95 100644
--- a/tools/mk/Makefile.targ
+++ b/tools/mk/Makefile.targ
@@ -1,4 +1,3 @@
-# -*- mode: makefile -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -6,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2014, Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
 #
@@ -77,6 +76,10 @@
 #	CSCOPE_DIRS	Directories to search for source files for the cscope
 #			index. (default: ".")
 #
+#	ESLINT		Path to eslint (default: "eslint")
+#
+#	ESLINT_FLAGS	Additional flags to pass through to eslint
+#
 #	JSL		Path to JavaScriptLint (default: "jsl")
 #
 #	JSL_FLAGS_NODE	Additional flags to pass through to JSL
@@ -102,6 +105,7 @@ BASHSTYLE	?= tools/bashstyle
 CP		?= cp
 CSCOPE		?= cscope
 CSCOPE_DIRS	?= .
+ESLINT		?= eslint
 JSL		?= jsl
 JSON		?= json
 JSSTYLE		?= jsstyle
@@ -190,6 +194,12 @@ check-json: $(JSON_FILES:%=%.jsonchk)
 # a variable for the target itself *only if* the list of input files is
 # non-empty.  This avoids invoking the tool if there are no files to check.
 #
+
+ESLINT_TARGET = $(if $(ESLINT_FILES), check-eslint)
+.PHONY: check-eslint
+check-eslint: $(ESLINT_EXEC)
+	$(ESLINT) $(ESLINT_FLAGS) $(ESLINT_FILES)
+
 JSL_NODE_TARGET = $(if $(JSL_FILES_NODE), check-jsl-node)
 .PHONY: check-jsl-node
 check-jsl-node: $(JSL_EXEC)
@@ -209,7 +219,7 @@ check-jsstyle:  $(JSSTYLE_EXEC)
 	$(JSSTYLE) $(JSSTYLE_FLAGS) $(JSSTYLE_FILES)
 
 .PHONY: check
-check:: check-jsl check-json $(JSSTYLE_TARGET) check-bash
+check:: $(ESLINT_TARGET) check-jsl check-json $(JSSTYLE_TARGET) check-bash
 	@echo check ok
 
 .PHONY: clean
@@ -264,7 +274,7 @@ DOC_MEDIA_FILES_BUILD := $(DOC_MEDIA_FILES:%=$(DOC_BUILD)/media/%)
 # to get there.
 #
 .PHONY: docs
-docs:							\
+docs::							\
 	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.html)		\
 	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.json)		\
 	$(DOC_MEDIA_FILES_BUILD)
@@ -294,6 +304,7 @@ CLEAN_FILES +=					\
 $(DOC_MEDIA_FILES_BUILD): | $(DOC_MEDIA_DIRS_BUILD)
 
 $(DOC_BUILD)/%: docs/% | $(DOC_BUILD)
+	$(MKDIR) $(shell dirname $@)
 	$(CP) $< $@
 
 docs/%.json docs/%.html: docs/%$(RESTDOWN_EXT) | $(DOC_BUILD) $(RESTDOWN_EXEC) \
@@ -316,3 +327,19 @@ test:
 
 .PHONY: prepush
 prepush: check test
+
+#
+# This rule automatically exposes every "stamp" file as a target that can be
+# invoked manually as "stamp-$STAMP_NAME".  For example, if a stamp has been
+# defined thus:
+#
+#	STAMP_EXPENSIVE_RESULT := $(MAKE_STAMPS_DIR)/expensive-result
+#
+# ... this can be invoked manually as "make stamp-expensive-result".  Note that
+# these phony targets are essentially just for interactive usage.  Targets
+# should be specified to depend on the macro containing the stamp file name.
+#
+# See also the comments in "Makefile.defs".
+#
+stamp-%: $(MAKE_STAMPS_DIR)/%
+	@:
-- 
2.21.0

