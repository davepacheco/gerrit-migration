commit 53a5d0cc5a2cf0fe529d34bd5c00d61b3047b87c (refs/changes/48/4748/16)
Author: sjorge <sjorge@blackdot.be>
Date:   2018-09-11T10:00:54+00:00 (1 year, 1 month ago)
    
    OS-7219 manpage for vmadm needs a refresh
    Reviewed by: Tim Foster <tim.foster@joyent.com>
    Reviewed by: John Levon <john.levon@joyent.com>
    Reviewed by: Brian Bennett <brian.bennett@joyent.com>
    Approved by: Tim Foster <tim.foster@joyent.com>

diff --git a/src/vm/man/vmadm.1m.md b/src/vm/man/vmadm.1m.md
index cd419449..f54db653 100644
--- a/src/vm/man/vmadm.1m.md
+++ b/src/vm/man/vmadm.1m.md
@@ -7,14 +7,14 @@ vmadm(1M) -- Manage SmartOS virtual machines
 ## DESCRIPTION
 
 The vmadm tool allows you to interact with virtual machines on a SmartOS
-system. All 3 of: OS Virtual Machines (SmartOS zones), LX Virtual Machines
-and KVM Virtual Machines can be managed. vmadm allows you to create, inspect,
-modify and delete virtual machines on the local system.
+system. It allows you to create, inspect, modify and delete virtual
+machines on the local system.
 
 IMPORTANT: Support for LX VMs is currently limited and experimental. This means
 it is very likely to change in major ways without notice. Also: not all the LX
 functionality that *is* implemented is documented yet. The documentation will
-be updated as things stabilize.
+be updated as things stabilize. Most properties that apply to OS VMs also
+apply to LX VMs.
 
 The primary reference for a VM is its UUID. Most commands operate on VMs by
 UUID. In SmartOS, there are included bash tab-completion rules so that you can
@@ -140,7 +140,7 @@ tab-complete UUIDs rather than having to type them out for every command.
             listening on for this VM. If spice is enabled.
 
         version:
-            Qemu version information.
+            qemu version information.
 
         vnc:
             The IP, port and VNC display number for the TCP socket we're
@@ -157,7 +157,7 @@ tab-complete UUIDs rather than having to type them out for every command.
 
         The list command always operates on a set of VMs which is limited by a
         filter. By default the filter is empty so all VMs are listed. You add
-        filters by specifying key=value pairs on the cmdline. You can also
+        filters by specifying key=value pairs on the command line. You can also
         match filters by regular expression by using key=~value and making
         value be a regular expression.  You can add as many filters as you want
         and only VMs that match all the filter parameters will be shown.
@@ -234,11 +234,11 @@ tab-complete UUIDs rather than having to type them out for every command.
         processes within the VM are given an opportunity to shut down correctly
         in attempt to minimize data loss.
 
-        For OS VMs, the shutdown command will be run within the zone with the
-        cmdline '/usr/sbin/shutdown -y -g 0 -i 6' which will cause the VM to
-        reboot after shutting down.
+        For OS VMs, the shutdown command '/usr/sbin/shutdown -y -g 0 -i 6'
+        will be run within the zone, which will cause the VM to reboot
+        after shutting down.
 
-        For KVM VMs, vmadmd will act as a helper here for the reboot in the
+        For HVM VMs, vmadmd will act as a helper here for the reboot in the
         same manner as described below for the 'stop' command.
 
         If for some reason you are unable or do not want to do a graceful
@@ -301,7 +301,7 @@ tab-complete UUIDs rather than having to type them out for every command.
             cases.
 
             You can specify multiple cdrom options when booting a VM. They will
-            be attached in the order they appear on the cmdline.
+            be attached in the order they appear on the command line.
 
           disk=/path/to/disk,[ide|scsi|virtio]
 
@@ -316,7 +316,7 @@ tab-complete UUIDs rather than having to type them out for every command.
             depending on the drivers supported in the guest.
 
             You can specify multiple disk options when booting a VM. They will
-            be attached in the order they appear on the cmdline.
+            be attached in the order they appear on the command line.
 
       stop <uuid> [-F] [-t timeout]
 
@@ -324,35 +324,31 @@ tab-complete UUIDs rather than having to type them out for every command.
         that processes within the VM are given an opportunity to shut down
         correctly in attempt to minimize data loss.
 
-        For OS VMs, the shutdown command will be run within the zone with the
-        cmdline '/usr/sbin/shutdown -y -g 0 -i 5' which will cause the VM to
-        go to the 'off' state after shutting down all processes. OS VMs do not
+        For OS VMs, the shutdown command '/usr/sbin/shutdown -y -g 0 -i 5'
+        will be run within the zone, which will cause the VM to go to the
+        'off' state after shutting down all processes. OS VMs do not
         support the [-t timeout] option unless they also have the docker
         property set to true.
 
-        For KVM VMs, vmadmd will act as a helper here. We send a powerdown
-        message via vmadmd to the running qemu process. Qemu then sends the
-        ACPI signal to the guest kernel telling it to shut down. In case the
-        guest kernel ignores this or for some reason does not receive this
-        request we mark the VM with a transition property indicating that we
-        tried to shut it down. This transition marker also includes an expiry
-        which is set to a timeout (default 180 seconds) value from the sending
-        of the ACPI shutdown signal. If vmadmd sees a VM that has a transition
-        but reaches the expiry before actually turning off, it re-sends the
-        stop command with the -F option.
+        For HVM VMs, the running qemu/bhyve process sends an ACPI signal to the
+        guest kernel telling it to shut down. In case the guest kernel ignores
+        this or for some reason does not receive this request we mark the VM
+        with a transition property indicating that we tried to shut it down.
+        This transition marker also includes a timeout (default 180 seconds).
+        If we hit the timeout, the VM is forcibly halted.
 
         For docker VMs, vmadm will send a SIGTERM to init and then wait some
         number of seconds for the init process to exit. If it has not exited by
         the timeout expiry, a SIGKILL will be sent. The default timeout is 10
         seconds.
 
-        For both KVM and docker VMs the stop timeouts can be adjusted with the
-        -t <timeout seconds> option. For non-Docker and non-KVM VMs use of the
+        For both HVM and docker VMs the stop timeouts can be adjusted with the
+        -t <timeout seconds> option. For non-Docker and non-HVM VMs use of the
         -t option will result in an error.
 
         If for some reason you are unable or do not want to do a graceful stop
         you can also add the '-F' parameter via to do a forced stop. This stop
-        will be much faster (especially for KVM) but will not give the VM any
+        will be much faster (especially for HVM) but will not give the VM any
         time to shut down its processes.
 
       sysrq <uuid> <nmi|screenshot>
@@ -376,9 +372,9 @@ tab-complete UUIDs rather than having to type them out for every command.
         section with the 'updatable: yes' property.
 
         To update properties, you can either pass a file containing a JSON
-        object as the argument to the -f option on the cmdline, send a JSON
-        object on stdin (though it will refuse work if stdin is a tty), or
-        pass property=value arguments on the cmdline.
+        object as the argument to the -f option on the command line, send a
+        JSON object on stdin (though it will refuse to work if stdin is a tty),
+        or pass property=value arguments on the command line.
 
         If you pass in a JSON object, that object should be formatted in the
         same manner as a create payload. The only exception is with fields
@@ -518,7 +514,11 @@ tab-complete UUIDs rather than having to type them out for every command.
 
         type -- type of the properties value.
 
-        vmtype -- types of VM (KVM, LX, OS) for which this property applies.
+        vmtype -- This value can be one of the following groups:
+                  - OS:  all types of OS VMs (joyent, joyent-minimal, and lx)
+                  - HVM: all types of HVM VMs (bhyve and kvm)
+                  - ANY: all types of VMs
+                  or an explicit brand name such as 'lx'.
 
         listable -- if they can be included in the -o or -s lists for the
                     'vmadm list' command.
@@ -541,7 +541,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         required to be unique.
 
         type: string
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
@@ -559,7 +559,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         /zones/archive/<uuid>.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: yes
         update: yes
@@ -574,7 +574,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         reboot into the intended state.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
@@ -585,11 +585,23 @@ tab-complete UUIDs rather than having to type them out for every command.
         should fall into.
 
         type: string (UUID)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
-        default: 00000000-0000-0000-0000-000000000000
+        defaul: 00000000-0000-0000-0000-000000000000
+
+    bhyve_extra_opts:
+
+        This allows you to specify additional bhyve command line arguments,
+        this string (if set) will be appended to the end of the bhyve command
+        line. It is intended for debugging and not for general use.
+
+        type: string (space-separated options for bhyve)
+        vmtype: bhyve
+        listable: no
+        create: yes
+        update: yes
 
     boot:
 
@@ -598,7 +610,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         command.
 
         type: string
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -610,19 +622,34 @@ tab-complete UUIDs rather than having to type them out for every command.
         available, it will indicate the time the VM last booted.
 
         type: string (ISO 8601 timestamp)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: no
         update: no
 
+    bootrom:
+
+        This indicates the bootrom to use for bhyve, valid values are 'bios',
+        'uefi', or a path to a bootrom binary. The path if specified is
+        evaluated within the zoneroot of the VM so /uefi-debug.bin will
+        actually be something like the path /zones/<uuid>/root/uefi-debug.img
+        from the global zone.
+
+        type: string
+        vmtype: bhyve
+        listable: no
+        create: yes
+        update: yes
+        default: 'bios'
+
     brand:
 
         This will be one of 'joyent', 'joyent-minimal' or 'lx' for OS
-        virtualization and 'kvm' for full hardware virtualization. This is a
-        required value for VM creation.
+        virtualization, or 'kvm' or 'bhyve' for full hardware virtualization.
+        This is a required value for VM creation.
 
-        type: string (joyent|joyent-minimal|lx|kvm)
-        vmtype: OS,KVM
+        type: string (joyent|joyent-minimal|lx|kvm|bhyve)
+        vmtype: ANY
         listable: yes
         create: yes
         update: no
@@ -634,7 +661,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Eg. a value of 300 means up to 3 full CPUs.
 
         type: integer (percentage of single CPUs, set to 0 for no cap)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes (live update)
@@ -649,7 +676,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         contention.
 
         type: integer (number of shares)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes (live update)
@@ -657,13 +684,13 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     cpu_type:
 
-        For KVM VMs, this controls the type of the virtual CPU exposed to the
+        For kvm VMs, this controls the type of the virtual CPU exposed to the
         guest. If the value is 'host' the guest will see the same CPU type and
         flags as are seen on the host.
 
         type: string (qemu64|host)
         listable: yes
-        vmtype: KVM
+        vmtype: kvm
         create: yes
         update: yes
         default: qemu64
@@ -673,7 +700,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         The time at which the VM was created in ISO 8601 format.
 
         type: string (format: '2011-12-31T06:38:42.457Z')
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: no (automatically added)
         update: no
@@ -686,7 +713,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         in the VM, or from another node).
 
         type: string (compute node's UUID)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: no
         update: no
@@ -706,7 +733,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         the zone.
 
         type: JSON Object (key: value)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: yes
         update: yes (but see special notes on update command)
@@ -745,11 +772,11 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     disks:
 
-        When creating a KVM VM or getting a KVM VM's JSON, you will use this
-        property. This is an array of 'disk' objects. The properties available
-        are listed below under the disks.*.<property> options. If you want to
+        When creating or getting a HVM VM's JSON, you will use this property.
+        This is an array of 'disk' objects. The properties available are
+        listed below under the disks.*.<property> options. If you want to
         update disks, see the special notes in the section above about the
-        'upgrade' command.
+        'update' command.
 
         When adding or removing disks, the disks will be available to the VM in
         the order that the disks are included in the disks or add_disks array.
@@ -770,7 +797,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         volblocksize property set.
 
         type: integer (block size in bytes, 512 to 131072, must be power of 2)
-        vmtype: KVM
+        vmtype: HVM
         listable: no
         create: yes
         update: no (except when adding new disks)
@@ -781,7 +808,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Specifies whether this disk should be bootable (only one disk should).
 
         type: boolean
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -796,7 +823,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         See zfs_root_compression section below for more details.
 
         type: string one of: "on,off,gzip,gzip-N,lz4,lzjb,zle"
-        vmtype: KVM
+        vmtype: HVM
         listable: no
         create: yes
         update: yes (see caveat in zfs_root_compression section below)
@@ -810,7 +837,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         creating a disk.
 
         type: boolean
-        vmtype: KVM
+        vmtype: HVM
         listable: no
         create: yes
         update: no (except when adding new disks)
@@ -822,7 +849,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         either this and 'image_size' and 'image_uuid', or 'size' for a disk.
 
         type: string
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -839,7 +866,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         include image_uuid for a disk and not allowed when you don't.
 
         type: integer (size in MiB)
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -851,7 +878,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         UUID must show up in the 'imgadm list' output in order to be valid.
 
         type: string (UUID)
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -864,7 +891,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         man page's description of refreservation.
 
         type: integer number of MiB
-        vmtype: KVM
+        vmtype: HVM
         listable: no
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -881,7 +908,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         and not allowed when you do.
 
         type: integer (size in MiB)
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -892,7 +919,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Specify whether this disk is a 'disk' or 'cdrom'.
 
         type: string (one of ['disk','cdrom'])
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -904,9 +931,9 @@ tab-complete UUIDs rather than having to type them out for every command.
         use virtio. If not, use ide or scsi depending on the drivers in your
         guest.
 
-        type: string (KVM: one of ['virtio','ide','scsi'])
-                     (BHYVE: one of ['virtio','ahci'])
-        vmtype: KVM
+        type: string (kvm: ['virtio','ide','scsi'])
+                     (bhyve: ['virtio','ahci'])
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -917,7 +944,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         The zpool in which to create this zvol.
 
         type: string (zpool name)
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes (special, see description in 'update' section above)
@@ -931,7 +958,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         to this VM.
 
         type: string (one of ['virtio','ide','scsi'])
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -947,7 +974,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         true. When set false the property will not appear.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: yes
         update: yes
@@ -1057,12 +1084,13 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     hostname:
 
-        For KVM VMs, this value will be handed out via DHCP as the hostname for
-        the VM. For OS VMs, this value will get set in several files at
-        creation time, but changing it later will do nothing.
+        Sets the instance's hostname. For OS VMs, this value will get set in
+        several files at creating time, but changing it later will do nothing.
+        For HVM instances, the hostname is set during boot via DHCP (kvm only)
+        or other boot-time automation such as cloud-init.
 
         type: string (hostname)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes (but does nothing for OS VMs)
@@ -1073,13 +1101,13 @@ tab-complete UUIDs rather than having to type them out for every command.
         This should be a UUID identifying the image for the VM if a VM was
         created from an image.
 
-        NOTE: when this is passed for KVM VMs, it specifies the *zone root*
+        NOTE: when this is passed for HVM VMs, it specifies the *zone root*
         dataset which is not visible from within the VM. The user-visible
         dataset will be the one specified through the disks.*.image_uuid.
-        Normally you do *not* want to set this for KVM.
+        Normally you do *not* want to set this for HVM VMs.
 
         type: string (UUID)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: no
@@ -1099,7 +1127,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         instead of customer_metadata.
 
         type: JSON Object (key: value)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: yes
         update: yes (but see special notes on update command)
@@ -1113,7 +1141,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         customer_metadata. They will also be read-only from within the zone.
 
         type: list of strings
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: yes
         update: yes
@@ -1138,7 +1166,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         and allow the VM to be deleted.
 
         type: boolean
-        vmtype: KVM,LX,OS
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
@@ -1162,7 +1190,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         deleted.
 
         type: boolean
-        vmtype: KVM,LX,OS
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
@@ -1173,7 +1201,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         This sets the version of Linux to emulate for LX VMs.
 
         type: string (kernel version, eg. 2.6.31)
-        vmtype: LX
+        vmtype: lx
         listable: no
         create: no
         update: yes
@@ -1184,12 +1212,11 @@ tab-complete UUIDs rather than having to type them out for every command.
         contains this VM. See privileges(5) for details on possible privileges.
 
         type: string (comma separated list of zone privileges)
-        vmtype: OS,KVM
+        vmtype: OS
         listable: no
         create: yes
         update: yes
         OS default: "default"
-        KVM default: "default,-file_link_any,-net_access,-proc_fork,-proc_info,-proc_session"
 
     maintain_resolvers:
 
@@ -1209,7 +1236,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         this VM. This value cannot be higher than max_physical_memory.
 
         type: integer (number of MiB)
-        vmtype: OS,KVM
+        vmtype: OS
         listable: yes
         create: yes
         update: yes (live update)
@@ -1221,7 +1248,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         running on the host.
 
         type: integer (number of LWPs)
-        vmtype: OS,KVM
+        vmtype: OS
         listable: yes
         create: yes
         update: yes (live update)
@@ -1230,15 +1257,15 @@ tab-complete UUIDs rather than having to type them out for every command.
     max_physical_memory:
 
         The maximum amount of memory on the host that the VM is allowed to use.
-        For KVM VMs, this value cannot be lower than 'ram' and should be
+        For kvm VMs, this value cannot be lower than 'ram' and should be
         ram + 1024.
 
         type: integer (number of MiB)
-        vmtype: OS,KVM
+        vmtype: OS
         listable: yes
         create: yes
         update: yes (live update)
-        default: 256 for OS VMs, (ram size + 1024) for KVM VMs.
+        default: 256 for OS VMs, (ram size + 1024) for HVM VMs.
 
     max_swap:
 
@@ -1246,7 +1273,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         cannot be lower than max_physical_memory, nor can it be lower than 256.
 
         type: integer (number of MiB)
-        vmtype: OS,KVM
+        vmtype: OS
         listable: yes
         create: yes
         update: yes (live update)
@@ -1270,11 +1297,11 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     nics:
 
-        When creating a KVM VM or getting a KVM VM's JSON, you will use this
-        property. This is an array of 'nic' objects. The properties available
-        are listed below under the nics.*.<property> options. If you want to
+        When creating or getting a HVM VM's JSON, you will use this property.
+        This is an array of 'nic' objects. The properties available are
+        listed below under the nics.*.<property> options. If you want to
         update nics, see the special notes in the section above about the
-        'upgrade' command.
+        'update' command.
 
         When adding or removing NICs, the NIC names will be created in the
         order the interfaces are in the nics or add_nics array.
@@ -1291,7 +1318,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         required of a DHCP server will not get through.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1304,7 +1331,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         specified by the ip property.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1316,7 +1343,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         from this nic with MAC addresses that don't match the mac property.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1329,7 +1356,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         from this nic.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1344,7 +1371,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         this option unless you fully understand the security implications.
 
         type: boolean
-        vmtype: KVM
+        vmtype: HVM
         listable: yes (see above)
         create: yes
         update: yes
@@ -1355,7 +1382,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Array of ports on which this nic is prevented from sending traffic.
 
         type: array
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1370,7 +1397,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         'fe82::/15', '2600:3c00::f03c:91ff:fe96:a267'.
 
         type: array (of IP addresses or CIDR ranges)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1385,7 +1412,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Identifiers can be listed.
 
         type: array (of even-lengthed hexadecimal strings beginning with "0x")
-        vmtype: OS,LX,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1397,20 +1424,20 @@ tab-complete UUIDs rather than having to type them out for every command.
         required of a DHCP server will not get through.
 
         type: boolean
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
         default: false
 
-    nics.*.gateway:
+    nics.*.gateway (DEPRECATED):
 
         The IPv4 router on this network (not required if using DHCP). This
         property should be considered deprecated in favor of using
         nics.*.gateways.
 
         type: string (IPv4 address)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1426,7 +1453,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         future to make it easier to add or remove addresses.
 
         type: array (of IPv4 addresses)
-        vmtype: OS,LX,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1437,19 +1464,19 @@ tab-complete UUIDs rather than having to type them out for every command.
         will always be in the format netX where X is an integer >= 0.
 
         type: string (netX)
-        vmtype: OS,KVM
+        vmtype: OS
         listable: yes (see above)
         create: yes
         update: no
 
-    nics.*.ip:
+    nics.*.ip (DEPRECATED):
 
         IPv4 unicast address for this NIC, or 'dhcp' to obtain address via
         DHCPv4. This property should be considered deprectated in favor of using
         nics.*.ips.
 
         type: string (IPv4 address or 'dhcp')
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1461,7 +1488,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         'dhcp' (DHCPv4) and 'addrconf' (SLAAC or DHCPv6) can also be used to
         obtain the address dynamically. Up to 20 addresses can be listed.
 
-        Since KVM instances receive their static IP addresses from QEMU via
+        Since kvm instances receive their static IP addresses from QEMU via
         DHCPv4, they can only receive a single IPv4 address. Therefore, the only
         values that should be used are one of 'dhcp' or an IPv4 address. To
         assign further IP addresses to them, use nics.*.allowed_ips and
@@ -1471,7 +1498,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         future to make it easier to add or remove addresses.
 
         type: array (of IP addresses with routing prefixes, 'dhcp' or 'addrconf')
-        vmtype: OS,LX,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1481,7 +1508,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         MAC address of virtual NIC.
 
         type: string (MAC address)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: no (see 'update' command description)
@@ -1492,7 +1519,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         The driver for this NIC [virtio|e1000|rtl8139|...]
 
         type: string (one of ['virtio','e1000','rtl8139'])
-        vmtype: KVM
+        vmtype: kvm
         listable: yes (see above)
         create: yes
         update: yes
@@ -1510,7 +1537,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         is not present through get.
 
         type: integer
-        vmtype: OS
+        vmtype: ANY
         listable: no
         create: yes
         update: yes
@@ -1520,7 +1547,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         The netmask for this NIC's network (not required if using DHCP)
 
         type: string (IPv4 netmask, eg. 255.255.255.0)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1530,7 +1557,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         UUID for allowing nics to be tracked in an external system
 
         type: string (UUID)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1542,7 +1569,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Names' field in `sysinfo`, or an etherstub or device name.
 
         type: string (device name or nic tag name)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update yes (requires zone stop/boot)
@@ -1555,7 +1582,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         to set two nics to primary is an error.
 
         type: boolean (only true is valid)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes (setting primary=true on one NIC removes the flag from the
@@ -1566,7 +1593,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         The vlan with which to tag this NIC's traffic (0 = none).
 
         type: integer (0-4095)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes (see above)
         create: yes
         update: yes
@@ -1601,7 +1628,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         this VM.
 
         type: string (one of ['virtio','e1000','rtl8139'])
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1626,7 +1653,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         be used to tie this system to others.
 
         type: string (UUID)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
@@ -1638,7 +1665,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Other users can ignore this field.
 
         type: string
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
@@ -1649,7 +1676,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         Other users can ignore this field.
 
         type: string
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes
@@ -1660,7 +1687,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         `init` process for the zone.
 
         type: integer (PID)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: no
         update: no
@@ -1675,7 +1702,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         options you might have set.
 
         type: string (space-separated options for qemu)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1687,12 +1714,12 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     qemu_extra_opts:
 
-        This allows you to specify additional qemu cmdline arguments, this
-        string (if set) will be appended to the end of the qemu cmdline. It is
-        intended for debugging and not for general use.
+        This allows you to specify additional qemu command line arguments.
+        When set this string will be appended to the end of the qemu command
+        line. It is intended for debugging and not for general use.
 
         type: string (space-separated options for qemu)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1700,29 +1727,31 @@ tab-complete UUIDs rather than having to type them out for every command.
     quota:
 
         This sets a quota on the zone filesystem. For OS VMs, this value is the
-        space actually visible/usable in the guest. For KVM VMs, this value is
+        space actually visible/usable in the guest. For kvm VMs, this value is
         the quota for the Zone containing the VM, which is not directly
-        available to users.
+        available to users. For bhyve VMs, disks are part of the zones/<uuid>
+        dataset, as well as the zone itself, so the quota needs to be sized
+        appropriately.
 
         Set quota to 0 to disable (ie. for no quota).
 
         type: integer (number of GiB)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes (live update)
 
     ram:
 
-        For KVM VMs this is the amount of virtual RAM that will be available to
-        the guest kernel. For OS VMs this will be the same as the property
-        max_physical_memory.
+        For kvm and bhyve VMs this is the amount of virtual RAM that will
+        be available to the guest kernel. For OS VMs this will be the same as
+        the property max_physical_memory.
 
         type: integer (number of MiB)
-        vmtype: KVM
+        vmtype: HVM
         listable: yes
-        create: KVM VMs only
-        update: KVM VMs only, for OS VMs update max_physical_memory instead.
+        create: yes
+        update: yes (requires VM reboot to take effect)
         default: 256
 
     resolvers:
@@ -1730,11 +1759,11 @@ tab-complete UUIDs rather than having to type them out for every command.
         For OS VMs, this value sets the resolvers which get put into
         /etc/resolv.conf at VM creation. If maintain_resolvers is set to
         true, updating this property will also update the resolvers in
-        /etc/resolv.conf. For KVM VMs these will get passed as the resolvers
-        with DHCP responses.
+        /etc/resolv.conf. For HVM instances, the resolvers are set via DHCP
+        (kvm only) or other other boot-time automation such as cloud-init.
 
         type: array
-        vmtype: OS,KVM
+        vmtype: OS,kvm
         listable: no
         create: yes
         update: yes
@@ -1782,12 +1811,12 @@ tab-complete UUIDs rather than having to type them out for every command.
     spice_opts (EXPERIMENTAL):
 
         This property allows you to add additional -spice options when you are
-        using SPICE. NOTE: SPICE support requires your KVM zone to be using a
+        using SPICE. NOTE: SPICE support requires your kvm zone to be using a
         zone dataset with the image_uuid option and that image must know what
         to do with these special options.
 
         type: string (-spice XXX options)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1797,14 +1826,14 @@ tab-complete UUIDs rather than having to type them out for every command.
 
         This property allows you to set a password which will be required when
         connecting to the SPICE port when SPICE is enabled. NOTE: SPICE support
-        requires your KVM zone to be using a zone root dataset with the
+        requires your kvm zone to be using a zone root dataset with the
         image_uuid option and that dataset must know what to do with these
         special options. IMPORTANT: this password will be visible from the GZ
         of the CN and anyone with access to the serial port in the guest. Set
         to an empty string (default) to not require a password at this level.
 
         type: string (8 chars max)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1813,14 +1842,14 @@ tab-complete UUIDs rather than having to type them out for every command.
     spice_port (EXPERIMENTAL):
 
         This specifies the TCP port to listen on for the SPICE server. By
-        default SPICE is not enabled. NOTE: SPICE support requires your KVM
+        default SPICE is not enabled. NOTE: SPICE support requires your kvm
         zone to be using a zone root dataset with the image_uuid option and
         that dataset must know what to do with these special options. If set to
         zero, a port will be chosen at random. Set to -1 to disable TCP
         listening for SPICE.
 
         type: integer (0 for random, -1 for disabled)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1833,7 +1862,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         See the 'VM STATES' section below for more details.
 
         type: string
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: no
         update: no
@@ -1842,7 +1871,7 @@ tab-complete UUIDs rather than having to type them out for every command.
 
         This property specifies how much of the VM's memory will be available
         for the /tmp filesystem. This is only available for OS VMs, and doesn't
-        make any sense for KVM VMs.
+        make any sense for HVM VMs.
 
         If set to 0 this indicates that you would like to not have /tmp mounted
         as tmpfs at all. When changing to/from a "0" value, the VM must be
@@ -1856,7 +1885,7 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     transition_expire:
 
-        When a KVM VM is in transition from running to either 'off' (in the
+        When a HVM VM is in transition from running to either 'off' (in the
         case of stop) or 'start' (in the case of reboot), the transition_expire
         field will be set. This value will indicate the time at which the
         current transaction will time out. When the transaction has timed out,
@@ -1864,21 +1893,21 @@ tab-complete UUIDs rather than having to type them out for every command.
         transition.
 
         type: integer (unix epoch timestamp)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: no (will show automatically)
         update: no
 
     transition_to:
 
-        When a KVM VM is in transition from running to either 'off' (in the
+        When a HVM VM is in transition from running to either 'off' (in the
         case of stop) or 'start' (in the case of reboot), the transition_to
         field will be set to indicate which state the VM is transitioning to.
         Additionally when a VM is provisioning you may see this with a value
         of 'running'.
 
         type: string value, one of: ['stopped', 'start', 'running']
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: no
         update: no
@@ -1886,11 +1915,11 @@ tab-complete UUIDs rather than having to type them out for every command.
     type:
 
         This is a virtual field and cannot be updated. It will be 'OS' when the
-        brand == 'joyent*', 'LX' when the brand == 'lx', and 'KVM' when the
-        brand == 'kvm'.
+        brand == 'joyent*', 'LX' when the brand == 'lx', 'KVM' when the
+        brand == 'kvm', and 'BHYVE' when the brand == 'bhyve'.
 
-        type: string value, one of: ['OS', 'LX', 'KVM']
-        vmtype: OS,KVM
+        type: string value, one of: ['OS', 'LX', 'KVM', 'BHYVE']
+        vmtype: ANY
         listable: yes
         create: no, set by 'brand' property.
         update: no
@@ -1902,7 +1931,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         after a VM is created.
 
         type: string (UUID)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: no
@@ -1910,24 +1939,24 @@ tab-complete UUIDs rather than having to type them out for every command.
 
     vcpus:
 
-        For KVM VMs this parameter defines the number of virtual CPUs the guest
+        For HVM VMs this parameter defines the number of virtual CPUs the guest
         will see. Generally recommended to be a multiple of 2.
 
-        type: integer (number of CPUs)
-        vmtype: KVM
+        type: integer (number of vCPUs)
+        vmtype: HVM
         listable: yes
-        create: KVM only
-        update: KVM only (requires VM reboot to take effect)
+        create: yes
+        update: yes (requires VM reboot to take effect)
         default: 1
 
     vga:
 
         This property allows one to specify the VGA emulation to be used by
-        KVM VMs. The default is 'std'. NOTE: with the Qemu bundled in SmartOS
+        kvm VMs. The default is 'std'. NOTE: with the qemu bundled in SmartOS
         qxl and xenfb do not work.
 
         type: string (one of: 'cirrus','std','vmware','qxl','xenfb')
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1940,7 +1969,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         virtio model.
 
         type: integer
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1952,7 +1981,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         attached to this VM using the virtio model.
 
         type: integer (in nanoseconds)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1967,7 +1996,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         this level.
 
         type: string (8 chars max)
-        vmtype: KVM
+        vmtype: kvm
         listable: no
         create: yes
         update: yes
@@ -1980,7 +2009,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         to disable TCP listening.
 
         type: integer (0 for random, -1 for disabled)
-        vmtype: KVM
+        vmtype: HVM
         listable: no
         create: yes
         update: yes
@@ -1996,7 +2025,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         apply to this option.
 
         type: string one of: "on,off,gzip,gzip-N,lz4,lzjb,zle"
-        vmtype: OS
+        vmtype: OS (and only with a delegated dataset)
         listable: no
         create: yes
         update: yes (see warning in zfs_root_compression section)
@@ -2026,7 +2055,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         within the zone. The root user in the GZ is immune to this limit.
 
         type: integer (0+, set to '' or undefined to unset)
-        vmtype: OS,LX
+        vmtype: OS
         listable: no
         create: yes
         update: yes
@@ -2042,7 +2071,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         available IO.
 
         type: integer (relative value)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: yes (live update)
@@ -2058,7 +2087,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         WARNING: If you change this value for an existing VM, only *new* data
         will be compressed. It will not rewrite existing data compress.
 
-        NOTE: to change this property for KVM, see disks.*.zfs_compression
+        NOTE: to change this property for HVM, see disks.*.zfs_compression
         above.
 
         type: string one of: "on,off,gzip,gzip-N,lz4,lzjb,zle"
@@ -2084,7 +2113,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         changing the file system's recordsize affects only files created
         after the setting is changed; existing files are unaffected.
 
-        NOTE: to change this property for KVM, see disks.*.block_size above.
+        NOTE: to change this property for HVM, see disks.*.block_size above.
 
         type: integer (record size in bytes, 512 to 131072, must be power of 2)
         vmtype: OS
@@ -2101,7 +2130,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         the zone. The root user in the GZ is immune to this limit.
 
         type: integer (0+, set to '' or undefined to unset)
-        vmtype: OS,LX
+        vmtype: OS
         listable: no
         create: yes
         update: yes
@@ -2114,11 +2143,8 @@ tab-complete UUIDs rather than having to type them out for every command.
         This property is used to set/show the maximum size for a docker zone's
         stdio.log file before zoneadmd(1m) will rotate it.
 
-        NOTE: this property only exists for use by sdc-docker and should not be
-        relied on for other things at this point.
-
         type: integer (size in bytes)
-        vmtype: OS,LX
+        vmtype: ANY
         listable: no
         create: yes
         update: yes
@@ -2147,10 +2173,8 @@ tab-complete UUIDs rather than having to type them out for every command.
         loop logs back into the zone so that a dockerlogger can process them in
         the zone.
 
-        NOTE: currently this should only ever appear for "docker" VMs.
-
         type: string (3 character mode string)
-        vmtype: OS,LX
+        vmtype: ANY
         listable: no
         create: no (handled via docker:* metadata)
         update: no (handled via docker:* metadata)
@@ -2164,7 +2188,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         See the 'VM STATES' section below for more details.
 
         type: string
-        vmtype: KVM
+        vmtype: HVM
         listable: yes
         create: no
         update: no
@@ -2173,11 +2197,11 @@ tab-complete UUIDs rather than having to type them out for every command.
 
         This property will show up in JSON representing a VM. It describes the
         path in the filesystem where you will find the VMs zone dataset. For OS
-        VMs all VM data will be under this path, for KVM VMs this is where
+        VMs all VM data will be under this path, for HVM VMs this is where
         you'll find things such as the logs and sockets for a VM.
 
         type: string (path)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: no
         create: no (automatic)
         update: no
@@ -2189,7 +2213,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         this property with the create payload, but such use is discouraged.
 
         type: string
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes (OS VMs only)
         update: no
@@ -2203,7 +2227,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         VM is started/stopped.
 
         type: integer
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: no
         update: no
@@ -2216,7 +2240,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         whenever the VM is stopped or started. Do not rely on this value.
 
         type: integer
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: no
         update: no
@@ -2225,10 +2249,10 @@ tab-complete UUIDs rather than having to type them out for every command.
 
         This defines which ZFS pool the VM's zone dataset will be created in
         For OS VMs, this dataset is where all the data in the zone will live.
-        For KVM VMs, this is only used by the zone shell that the VM runs in.
+        For HVM VMs, this is only used by the zone shell that the VM runs in.
 
         type: string (zpool name)
-        vmtype: OS,KVM
+        vmtype: ANY
         listable: yes
         create: yes
         update: no
@@ -2298,7 +2322,7 @@ The state field will have similar transition except:
  * It is possible for a VM to be in state 'receiving' while zone\_state
    transitions through several states.
 
- * KVM VMs can show state 'stopping' when zone\_state is running but the guest OS
+ * HVM VMs can show state 'stopping' when zone\_state is running but the guest OS
    has been notified that it should perform an orderly shutdown.
 
 The rest of this section describes the possible values for the 'state' and
@@ -2374,11 +2398,11 @@ provisioning
 
   When a VM is first being created and autoboot is true, the VM will
   have state provisioning even as the zone\_state makes several
-  transitions. Non-KVM VMs will stay in state 'provisioning' until the
+  transitions. Non-HVM VMs will stay in state 'provisioning' until the
   scripts inside the zone have completed to the point where they have
   removed the /var/svc/provisioning file that was inserted before the
-  zone was first booted. KVM VMs will stay in state 'provisioning'
-  until the 'query-status' result from Qemu includes 'hwsetup' with a
+  zone was first booted. HVM VMs will stay in state 'provisioning'
+  until the 'query-status' result from qemu includes 'hwsetup' with a
   value of true.
 
 
@@ -2432,8 +2456,8 @@ stopping
 
   Possible For: state
 
-  This is a state which only exists for KVM VMs. When we have sent a
-  system_powerdown message to Qemu via QMP we will mark the the VM as
+  This is a state which only exists for HVM VMs. When we have sent a
+  system_powerdown message to qemu via QMP we will mark the the VM as
   being in state 'stopping' until either the shutdown times out and we
   halt the zone, or the VM reaches zone\_state 'installed'.
 
@@ -2461,9 +2485,8 @@ stopping
           "nics": [
             {
               "nic_tag": "external",
-              "ip": "10.2.121.70",
-              "netmask": "255.255.0.0",
-              "gateway": "10.2.121.1",
+              "ips": ["10.2.121.70/16"],
+              "gateways": ["10.2.121.1"],
               "primary": true
             }
           ]
@@ -2490,9 +2513,8 @@ stopping
             {
               "nic_tag": "external",
               "model": "virtio",
-              "ip": "10.88.88.51",
-              "netmask": "255.255.255.0",
-              "gateway": "10.88.88.2",
+              "ips": ["10.88.88.51/24"],
+              "gateways": ["10.88.88.2"],
               "primary": true
             }
           ]
@@ -2533,9 +2555,8 @@ stopping
               "interface": "net1",
               "nic_tag": "external",
               "mac": "b2:1e:ba:a5:6e:71",
-              "ip": "10.2.121.71",
-              "netmask": "255.255.0.0",
-              "gateway": "10.2.121.1"
+              "ips": ["10.2.121.71/16"],
+              "gateways": ["10.2.121.1"]
             }
           ]
       }
@@ -2549,7 +2570,7 @@ stopping
           "update_nics": [
             {
               "mac": "b2:1e:ba:a5:6e:71",
-              "ip": "10.2.121.72"
+              "ips": ["10.2.121.72/16"]
             }
           ]
         }
