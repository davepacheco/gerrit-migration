From 11e24adb0cc0d8eea3f0279050902f716a34735e Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Thu, 16 Feb 2017 14:20:12 -0800
Subject: [PATCH] joyent/node-cueball#96 crash in Pool#on_resolver_removed when
 FSM already stopped

---
 lib/pool.js | 34 +++++++++++++++-------------------
 1 file changed, 15 insertions(+), 19 deletions(-)

diff --git a/lib/pool.js b/lib/pool.js
index 58a8cb3..b1b1434 100644
--- a/lib/pool.js
+++ b/lib/pool.js
@@ -264,26 +264,19 @@ CueBallConnectionPool.prototype.on_resolver_removed = function (k) {
 	delete (this.p_backends[k]);
 	delete (this.p_dead[k]);
 
-	var self = this;
-	mod_vasync.forEachParallel({
-		func: closeBackend,
-		inputs: (this.p_connections[k] || [])
-	}, function () {
-		mod_assert.strictEqual(self.p_connections[k].length, 0);
-		delete (self.p_connections[k]);
-		self.rebalance();
-	});
-	function closeBackend(fsm, cb) {
+	/*
+	 * The p_connections entry for this backend will be deleted once it's
+	 * empty (in the stateChanged handler for the slot FSM). That handler
+	 * will also call rebalance() for us. All we have to do here is set
+	 * "unwanted" on all of them.
+	 *
+	 * Note that the same resolver could be added and removed multiple
+	 * times by the time these slot FSMs have come to rest.
+	 */
+	var conns = this.p_connections[k] || [];
+	conns.forEach(function (fsm) {
 		fsm.setUnwanted();
-		if (fsm.isInState('stopped') || fsm.isInState('failed')) {
-			cb();
-		} else {
-			fsm.on('stateChanged', function (st) {
-				if (st === 'stopped' || st === 'failed')
-					cb();
-			});
-		}
-	}
+	});
 };
 
 CueBallConnectionPool.prototype.state_starting = function (S) {
@@ -664,7 +657,10 @@ CueBallConnectionPool.prototype.addConnection = function (key) {
 		if (newState === 'stopped' || newState === 'failed') {
 			if (self.p_connections[key]) {
 				var idx = self.p_connections[key].indexOf(fsm);
+				mod_assert.notStrictEqual(idx, -1);
 				self.p_connections[key].splice(idx, 1);
+				if (self.p_connections[key].length < 1)
+					delete (self.p_connections[key]);
 			}
 			self.emit('closedBackend', key, fsm);
 			self.rebalance();
-- 
2.21.0

