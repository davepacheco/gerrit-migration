commit 9698efaeb87ee0c3acfd2ed7822a022a7c9bec97
Author: Orlando Vazquez <ovazquez@gmail.com>
Date:   2019-07-17T16:15:46-07:00 (3 months ago)
    
    TRITON-1749 sdc-migrate zfs quotas are perturbed by flexible disk
    Reviewed by: Mike Gerdts <mike.gerdts@joyent.com>
    Reviewed by: Ryan Kitchen <ryan.kitchen@joyent.com>

diff --git a/lib/backends/smartos/tasks/machine_migrate.js b/lib/backends/smartos/tasks/machine_migrate.js
index 28c27cd..115c670 100644
--- a/lib/backends/smartos/tasks/machine_migrate.js
+++ b/lib/backends/smartos/tasks/machine_migrate.js
@@ -293,23 +293,26 @@ function restoreZfsQuota(callback) {
 
     var vm = payload.vm;
 
-    // Determine what the current used size is, then set the zfs filesystem
-    // quota to that value.
+    // Determine what the current reservation size is, then set the
+    // zfs filesystem quota to that value. For bhyve, quota and
+    // reservation typically have the same value. Earlier we relaxed
+    // the quota to allow snapshots to take extra space. Now restore
+    // quota to its previous value, which is found in reservation.
     vasync.pipeline({arg: {}, funcs: [
-        function getUsedSize(ctx, next) {
+        function getReservationSize(ctx, next) {
             var cmd = '/usr/sbin/zfs';
             var args = [
                 'list',
                 '-Hp',
                 '-o',
-                'used',
+                'reservation',
                 vm.zfs_filesystem
             ];
 
             log.debug({cmd: cmd, args: args}, 'restoreZfsQuota');
 
             child_process.execFile(cmd, args, gExecFileDefaults,
-                    function _execZfsListUsedSizeCb(err, stdout, stderr) {
+            function _execZfsListReservationSizeCb(err, stdout, stderr) {
                 if (err) {
                     log.error('zfs list error:', err, ', stderr:', stderr);
                     next(new zfsError('zfs list failure', err, stderr));
