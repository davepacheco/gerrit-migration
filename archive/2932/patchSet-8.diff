From 9055ad267adc238991637837ec6bd08585c59773 Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Wed, 8 Nov 2017 21:25:00 +0000
Subject: [PATCH] MANTA-3232 Undeploy without disruption - electric-moray

---
 lib/server.js                       | 77 +++++++++++++++++++++++++++++
 package.json                        |  2 +-
 smf/manifests/electric-moray.xml.in |  4 +-
 3 files changed, 80 insertions(+), 3 deletions(-)

diff --git a/lib/server.js b/lib/server.js
index fbd7f40..350f094 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -12,6 +12,7 @@ var assert = require('assert-plus');
 var artedi = require('artedi');
 var fast = require('fast');
 var fs = require('fs');
+var jsprim = require('jsprim');
 var kang = require('kang');
 var net = require('net');
 var os = require('os');
@@ -228,6 +229,16 @@ function createServer(options, callback) {
 
             socket.on('listening', function () {
                 log.info('moray listening on %d', options.port);
+                process.on('SIGTERM', function () {
+                    var args = {
+                        server: server,
+                        socket: socket,
+                        monitor: monitorServer,
+                        log: log.child({ component: 'quiesce' }),
+                        options: options
+                    };
+                    quiesce(args);
+                });
                 callback(null, {
                     ring: opts.ring,
                     clientList: Object.keys(opts.clients.map)
@@ -243,6 +254,72 @@ function createServer(options, callback) {
     });
 }
 
+
+///--- Privates
+
+
+/*
+ * This function is called if the process has received a SIGTERM signal. In the
+ * current implementation, this signal is sent in electric-morays smf stop
+ * method, which means that it will be invoked whenever the zone is brought
+ * down or rebooted and whenever an operator uses smf tools to disable the
+ * electric-moray service. In order to properly execute a quiesce by disabling
+ * individual service, the operator must disable both registrar and
+ * electric-moray.
+ *
+ * Muskies "MorayConnectionPool," a wrapper around a node-cueball DNS resolver
+ * and connection set, is the other end of all node-fast connection state
+ * created by the FastServer here. In this function, electric-moray is waiting
+ * for that resolver to notice that this zone has dropped out of zookeeper and
+ * terminate any fast-connections it has to this zone. In the interim,
+ * electric-moray can happily serve any pending RPCs that were issued before
+ * Muskie noticed the DNS change. The MorayConnectionPool will take care of
+ * draining any requests that may have been in the pipe once cueball notices
+ * this electric-moray instance is no longer discoverable.
+ */
+function quiesce(args) {
+    assert.object(args.server, 'args.server');
+    assert.object(args.socket, 'args.socket');
+    assert.object(args.monitor, 'args.monitor');
+    assert.object(args.log, 'args.log');
+    assert.object(args.options, 'args.options');
+
+    var server = args.server;
+    var socket = args.socket;
+    var monitorServer = args.monitor;
+    var log = args.log;
+    var options = args.options;
+
+    log.info('moray-%d entering quiesce state', options.port);
+
+    /*
+     * Close the listening socket to prevent new connections from being
+     * established. The callback passed to close is only called with an err
+     * object if the socket was not opened to begin with. This should not
+     * happen.
+     */
+    socket.close(function (err) {
+        assert.ok(!err, 'err');
+    });
+
+    socket.on('close', function () {
+        log.info('moray-%d listening socket closed', options.port);
+        server.onConnsDestroyed(function (err) {
+            if (err) {
+                log.warn(err, 'moray-%d error waiting for connections to ' +
+                    'terminate. Shutting down anyway.', options.port);
+            } else {
+                log.info('moray-%d connections destroyed', options.port);
+            }
+            server.close();
+            monitorServer.close(function () {
+                process.exit();
+            });
+        });
+    });
+}
+
+
 function invalidArgs(rpc, argv, types) {
     var route = rpc.methodName();
     var len = types.length;
diff --git a/package.json b/package.json
index 7e868f9..7999943 100644
--- a/package.json
+++ b/package.json
@@ -16,7 +16,7 @@
         "clone": "0.1.9",
         "dtrace-provider": "0.2.8",
         "fash": "2.5.0",
-        "fast": "2.3.2",
+        "fast": "git+https://github.com/joyent/node-fast.git#849959e",
         "jsprim": "2.0.0",
         "kang": "1.2.0",
         "ldapjs": "0.6.3",
diff --git a/smf/manifests/electric-moray.xml.in b/smf/manifests/electric-moray.xml.in
index 85d0866..9f5e9b8 100644
--- a/smf/manifests/electric-moray.xml.in
+++ b/smf/manifests/electric-moray.xml.in
@@ -60,8 +60,8 @@
 
         <exec_method type="method"
             name="stop"
-            exec=":kill"
-            timeout_seconds="30" />
+            exec=":kill -TERM"
+            timeout_seconds="0" />
 
         <property_group name="application" type="application" />
 
-- 
2.21.0

