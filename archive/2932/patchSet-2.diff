From c59e9e1b695d026d6917a553367d9576e8ee1e0c Mon Sep 17 00:00:00 2001
From: Jan Wyszynski <jan.wyszynski@joyent.com>
Date: Wed, 8 Nov 2017 21:25:00 +0000
Subject: [PATCH] MANTA-3232 Undeploy without disruption - electric-moray

---
 bin/quiesce.sh                      | 24 +++++++++++
 lib/server.js                       | 66 +++++++++++++++++++++++++++++
 smf/manifests/electric-moray.xml.in |  2 +-
 3 files changed, 91 insertions(+), 1 deletion(-)
 create mode 100755 bin/quiesce.sh

diff --git a/bin/quiesce.sh b/bin/quiesce.sh
new file mode 100755
index 0000000..71c9b47
--- /dev/null
+++ b/bin/quiesce.sh
@@ -0,0 +1,24 @@
+#!/bin/sh
+
+# Invoked as the stop method for the electric-moray service. This script
+# disables registrar, which invokes registrars stop method to proactively remove
+# electric-moray from zookeeper.
+
+. /lib/svc/share/smf_include.sh
+
+# Invokes registrars stop method
+svcadm disable registrar
+
+CTID=$(svcprop -p restarter/contract electric-moray)
+
+if [[ -z ${CTID} ]]; then
+    echo "Could not find contract id for electric-moray service"
+    exit ${SMF_EXIT_ERR_FATAL}
+fi
+
+# Each electric-moray will catch the SIGTERM signal and enter the quiesce
+# state, in which it will wait for pending requests on all of it's fast
+# connections to finish.
+pkill -TERM -c ${CTID}
+
+exit ${SMF_EXIT_OK}
diff --git a/lib/server.js b/lib/server.js
index c37e52d..88eaa4d 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -13,6 +13,7 @@ var artedi = require('artedi');
 var clone = require('clone');
 var fast = require('fast');
 var fs = require('fs');
+var jsprim = require('jsprim');
 var kang = require('kang');
 var moray_client = require('moray'); // client
 var net = require('net');
@@ -234,6 +235,15 @@ function createServer(options) {
 
             socket.on('listening', function () {
                 log.info('moray listening on %d', options.port);
+                process.on('SIGTERM', function () {
+                    var args = {
+                        server: server,
+                        monitor: monitorServer,
+                        log: log.child({ component: 'quiesce' }),
+                        options: options
+                    };
+                    quiesce(args);
+                });
             });
 
             socket.on('error', function (serr) {
@@ -257,6 +267,62 @@ module.exports = {
 
 ///--- Privates
 
+
+/*
+ * Called after the electric-moray zone this instance runs in has been removed
+ * from zookeeper. At this point, a number of clients may have active
+ * connections to this zone, which we drain and terminate here.
+ */
+function quiesce(args) {
+    assert.object(args.server, 'args.server');
+    assert.object(args.monitor, 'args.monitor');
+    assert.object(args.log, 'args.log');
+    assert.object(args.options, 'args.options');
+
+    var server = args.server;
+    var monitorServer = args.monitor;
+    var log = args.log;
+    var options = args.options;
+
+    log.info('moray-%d entering quiesce state', options.port);
+    monitorServer.close(function () {
+        log.info('moray-%d shut down monitorServer', options.port);
+    });
+
+    function checkPendingRequests() {
+        if (!jsprim.isEmpty(server.fs_conns)) {
+            jsprim.forEachKey(server.fs_conns, function (connid, conn) {
+                if (!jsprim.isEmpty(conn.fc_pending)) {
+                    log.info('moray-%d fast connection %s has %d pending ' +
+                        'requests left.', options.port, connid,
+                        Object.keys(conn.fc_pending).length);
+                }
+            });
+            setTimeout(checkPendingRequests, 100);
+            return;
+        }
+
+        log.info('moray-%d pending requests drained, open connections removed.',
+                options.port);
+
+        server.close();
+
+        var socket = server.fs_server;
+        socket.close();
+
+        socket.on('close', function (err) {
+            if (err) {
+                log.warn('moray-%d fast server socket close error: %s',
+                    options.port, err);
+            }
+            log.info('terminating moray-%d process', options.port);
+            process.exit();
+        });
+    }
+
+    setImmediate(checkPendingRequests);
+}
+
 function invalidArgs(rpc, argv, types) {
     var route = rpc.methodName();
     var len = types.length;
diff --git a/smf/manifests/electric-moray.xml.in b/smf/manifests/electric-moray.xml.in
index e810c3e..3976e9d 100644
--- a/smf/manifests/electric-moray.xml.in
+++ b/smf/manifests/electric-moray.xml.in
@@ -60,7 +60,7 @@
 
         <exec_method type="method"
             name="stop"
-            exec=":kill"
+            exec="/opt/smartdc/electric-moray/bin/quiesce.sh"
             timeout_seconds="30" />
 
         <property_group name="application" type="application" />
-- 
2.21.0

