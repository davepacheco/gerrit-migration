commit d348c7d04e52f8e400669ae1a523690d92a217a4 (refs/changes/27/2127/4)
Author: Todd Whiteman <todd.whiteman@joyent.com>
Date:   2017-07-18T11:19:31-07:00 (2 years, 3 months ago)
    
    OS-6185 use pigz (parallel gunzip uncompression) to speed up imgadm import
    Reviewed by: Trent Mick <trentm@gmail.com>

diff --git a/src/Makefile b/src/Makefile
index 050daaee..0d712ca0 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -382,7 +382,6 @@ install: all $(SUBDIRS)
 	sed -e 's|^#!/usr/bin/env node.*$$|#!/usr/node/bin/node|' \
 	    < node-bunyan/bin/bunyan \
 	    > $(DESTDIR)/usr/bin/bunyan
-	rm -rf $(DESTDIR)/usr/img
 	mkdir -m 0755 -p $(DESTDIR)/usr/img
 	cp img/README.md $(DESTDIR)/usr/img/README.md
 	cp img/package.json $(DESTDIR)/usr/img/package.json
diff --git a/src/img/CHANGES.md b/src/img/CHANGES.md
index 12f0f6f9..d2a1fb2b 100644
--- a/src/img/CHANGES.md
+++ b/src/img/CHANGES.md
@@ -6,6 +6,10 @@ Known issues:
   Docker Registry v1, which is now deprecated.
 
 
+## 3.8.0
+
+- OS-6185 use pigz (parallel gunzip uncompression) to speed up imgadm import
+
 ## 3.7.2
 
 - OS-6177 avoid checking content-md5 on imgadm import when a checksum exists on
diff --git a/src/img/lib/imgadm.js b/src/img/lib/imgadm.js
index 64e7c750..2b067cf8 100644
--- a/src/img/lib/imgadm.js
+++ b/src/img/lib/imgadm.js
@@ -2423,6 +2423,7 @@ IMGADM.prototype._installDockerImage = function _installDockerImage(ctx, cb) {
             assert.string(ctx.filePath, 'ctx.filePath');
 
             var command;
+            var env = null;
             switch (ctx.cType) {
             case null:
                 command = format(
@@ -2432,6 +2433,13 @@ IMGADM.prototype._installDockerImage = function _installDockerImage(ctx, cb) {
                     ctx.filePath);
                 break;
             case 'gzip':
+                // Allow the use pigz (parallel gzip) decompression by default,
+                // unless disabled through the 'usePigz' imgadm config option.
+                if (!self.config.hasOwnProperty('usePigz')
+                        || self.config.usePigz) {
+                    env = objCopy(process.env);
+                    env['IMGADM_USE_PIGZ'] = '1';
+                }
                 command = format(
                     '/usr/img/sbin/chroot-gtar %s %s %s gzip',
                     path.dirname(zoneroot),
@@ -2460,6 +2468,7 @@ IMGADM.prototype._installDockerImage = function _installDockerImage(ctx, cb) {
                 command: command,
                 log: log,
                 execOpts: {
+                    env: env,
                     maxBuffer: 2 * 1024 * 1024
                 }
             }, next);
diff --git a/src/img/package.json b/src/img/package.json
index c9e0ba5b..e629cef0 100644
--- a/src/img/package.json
+++ b/src/img/package.json
@@ -1,7 +1,7 @@
 {
   "name": "imgadm",
   "description": "Manage SmartOS virtual machine images.",
-  "version": "3.7.2",
+  "version": "3.8.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/src/img/sbin/chroot-gtar b/src/img/sbin/chroot-gtar
index 15fb1bc1..b76863e8 100755
--- a/src/img/sbin/chroot-gtar
+++ b/src/img/sbin/chroot-gtar
@@ -107,6 +107,18 @@ cp /usr/img/sbin/gtar-unlink-dir $BINDIR/
 CMDS="gtar"
 CMDS="$CMDS cat gzip bzip2 xzcat"
 CMDS="$CMDS bash rm grep sed tee"
+
+if [[ "$COMPRESSION" == "gzip" && -n "$IMGADM_USE_PIGZ" ]];
+then
+    PIGZ=/usr/img/sbin/pigz
+    if [[ -x $PIGZ ]];
+    then
+        CMDS="$CMDS nice $PIGZ"
+    else
+        IMGADM_USE_PIGZ=
+    fi
+fi
+
 for cmd in $CMDS; do
     cp $(which $cmd) $BINDIR/
 done
diff --git a/src/img/sbin/gtar-unlink-dir b/src/img/sbin/gtar-unlink-dir
index 64004ebb..c470112a 100755
--- a/src/img/sbin/gtar-unlink-dir
+++ b/src/img/sbin/gtar-unlink-dir
@@ -64,19 +64,24 @@ function gtar_unlink_dir
     local attempts=5
     local status=
     local uncompresscat=
-    local uncompressopt=
+    local uncompressopts=
 
     case $compression in
     none)
         uncompresscat=cat
         ;;
     gzip)
-        uncompresscat=cat
-        uncompressopt=z
+        if [[ -n "$IMGADM_USE_PIGZ" ]];
+        then
+            uncompresscat="nice -n 5 pigz -dc -p2"
+        else
+            uncompresscat=cat
+            uncompressopts=z
+        fi
         ;;
     bzip2)
         uncompresscat=cat
-        uncompressopt=j
+        uncompressopts=j
         ;;
     xz)
         uncompresscat=xzcat
@@ -94,7 +99,7 @@ function gtar_unlink_dir
 
         set +o errexit
         $uncompresscat $tarball \
-            | gtar -C "$subdir" -x${uncompressopt}f - $gtarargs 2>$STDERR_FILE
+            | gtar -C "$subdir" -x${uncompressopts}f - $gtarargs 2>$STDERR_FILE
         status=$?
         set -o errexit
 
