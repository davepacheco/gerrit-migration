From 80a03e8e9a3040476d597ece0b4d18c1c1f61519 Mon Sep 17 00:00:00 2001
From: Richard Bradley <richard.bradley@joyent.com>
Date: Wed, 9 Oct 2019 12:06:25 +0100
Subject: [PATCH] joyent/node-vmapi-resolver#3 should return the tags of
 VM/backend

---
 README.md       |  6 +++++-
 lib/resolver.js | 30 +++++++++++++++++++++++++++---
 package.json    |  2 +-
 3 files changed, 33 insertions(+), 5 deletions(-)

diff --git a/README.md b/README.md
index 474d880..18f32f3 100644
--- a/README.md
+++ b/README.md
@@ -34,7 +34,7 @@ var resolver = new mod_resolver.VmapiResolver({
 	'pollInterval': 600000, /* poll VMAPI every 10 minutes */
 	'tags': { /* NIC and VM tags */
 		'vm_tag_name': 'manta_role',
-		'vm_tag_value': 'postgres',
+		'vm_tag_value': '*postgres', /* VMAPI's wildcard matching */
 		'nic_tag': 'manta.*' /* regexp-based match */
 	},
 	'backend_port': 5432 /* port number of the listening process */
@@ -51,6 +51,10 @@ resolver.on('removed', function (backend) {
 resolver.start();
 ```
 
+Each backend has a "tag" object that details the matched tag name and value from
+the query to VMAPI, but only if an exact match can be found in the tag name
+(i.e. no wildcard is used in "vm_tag_name").
+
 ## License
 
 MPL v2. See the LICENSE file.
diff --git a/lib/resolver.js b/lib/resolver.js
index 38046f0..0564fda 100644
--- a/lib/resolver.js
+++ b/lib/resolver.js
@@ -3,7 +3,7 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/.
  *
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright (c) 2019, Joyent, Inc.
  */
 
 /*
@@ -84,6 +84,20 @@ VmapiResolver.prototype.getBackends = function getBackends(cb) {
 			return;
 		}
 		Object.keys(vms).forEach(function (vm) {
+
+			var matched_tag;
+			if (vms[vm].tags.hasOwnProperty(vm_tag_name)) {
+				matched_tag = {
+				    'name': vm_tag_name,
+				    'value': vms[vm].tags[vm_tag_name]
+				};
+			} else {
+				log.warn({
+				    'vm_tags': vms[vm].tags,
+				    'vm_tag_name': vm_tag_name
+				}, 'tag name ambiguous; not returning');
+			}
+
 			vms[vm].nics.forEach(function (nic) {
 				/*
 				 * nic tags are matched by the caller-provided
@@ -92,12 +106,17 @@ VmapiResolver.prototype.getBackends = function getBackends(cb) {
 				if (nic_tag_regexp.test(nic.nic_tag)) {
 					backends.push({
 						'name': vms[vm].alias,
-						'address': nic.ip
+						'address': nic.ip,
+						'tag': matched_tag
 					});
 				}
 			});
 		});
-		log.info(backends, 'discovered backends');
+
+		log.info({
+		    'backends': backends
+		}, 'discovered backends');
+
 		cb(null, backends);
 	});
 };
@@ -117,6 +136,11 @@ VmapiResolver.prototype.diffAndEmit = function diffAndEmit() {
 			'address': backend.address,
 			'port': self.vmr_backend_port
 		};
+
+		if (backend.tag) {
+			be['tag'] = backend.tag;
+		}
+
 		Object.keys(self.vmr_backends).forEach(function (key) {
 			old_backend = self.vmr_backends[key];
 			if (old_backend.address === be.address &&
diff --git a/package.json b/package.json
index caf0366..b3129f0 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "vmapi-resolver",
-  "version": "2.0.0",
+  "version": "2.1.0",
   "description": "node-cueball resolver using VMAPI",
   "repository": {
     "url": "https://github.com/joyent/node-vmapi-resolver.git",
-- 
2.17.2 (Apple Git-113)

