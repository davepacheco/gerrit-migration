commit c2a355c1ed29974e94a1f1decbbe274307a0b804
Author: Jon Anderson <jon.anderson@joyent.com>
Date:   2019-03-19T14:30:04-04:00 (7 months ago)
    
    MANTA-4133 Invalid content-type resulted in 500 response
    Reviewed by: Russell Brown <russell.brown@joyent.com>

diff --git a/deps/jsstyle b/deps/jsstyle
index 52dc973..d75b7ca 160000
--- a/deps/jsstyle
+++ b/deps/jsstyle
@@ -1 +1 @@
-Subproject commit 52dc973cf64da11834eca7cf46ebce8518e3ee88
+Subproject commit d75b7ca8308be17c80e2b120f2a01d4a0c20d8a8
diff --git a/lib/server.js b/lib/server.js
index c23229d..de502da 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -40,9 +40,10 @@ require('./errors');
 ///--- Globals
 
 var JOBS_ROOT_RE = /^\/([a-zA-Z][a-zA-Z0-9_\.@%]+)\/jobs\/?$/;
-/* JSSTYLED */
+/* BEGIN JSSTYLED */
 var JOBS_LIVE_RE = /(state|status|name)=/i;
-
+var VALID_CONTENT_TYPE_RE = /\w+\/[-+.\w+]+/;
+/* END JSSTYLED */
 
 ///--- Helpers
 
@@ -192,9 +193,15 @@ function createServer(options, clients, name) {
     server.pre(restify.pre.sanitizePath());
     server.pre(function cleanupContentType(req, res, next) {
         var ct = req.headers['content-type'];
-        /* JSSTYLED */
-        if (ct && !/.*\/.*/.test(ct))
-            req.headers['content-type'] = mime.lookup(ct);
+        /*
+         * MANTA-4133
+         * content-type must have a type, '/' and sub-type
+         * https://www.w3.org/Protocols/rfc1341/4_Content-Type.html
+         */
+        if (ct && !VALID_CONTENT_TYPE_RE.test(ct)) {
+            sendBadRequestStatus(req, res, next);
+        }
+
         next();
     });
 
@@ -498,6 +505,12 @@ function forbiddenHandler(req, res, next) {
     next(false);
 }
 
+function sendBadRequestStatus(req, res, next) {
+    req.log.debug('Bad request.');
+    res.send(400);
+    next(false);
+}
+
 
 
 /*
diff --git a/test/dir.test.js b/test/dir.test.js
index 1545716..7e4534b 100644
--- a/test/dir.test.js
+++ b/test/dir.test.js
@@ -141,7 +141,7 @@ test('mkdir, chattr: content-type (ignore)', function (t) {
     var k = this.key;
     var opts = {
         headers: {
-            'content-type': 'jpg'
+            'content-type': 'image/jpg'
         }
     };
     var self = this;
diff --git a/test/obj.test.js b/test/obj.test.js
index c4863a1..dfd0917 100644
--- a/test/obj.test.js
+++ b/test/obj.test.js
@@ -45,7 +45,6 @@ function writeObject(client, key, opts, cb) {
         type: 'text/plain'
     };
     var stream = new MemoryStream();
-
     client.put(key, stream, _opts, cb);
     process.nextTick(stream.end.bind(stream, TEXT));
 }
@@ -321,7 +320,7 @@ test('chattr: m- headers', function (t) {
 test('chattr: content-type', function (t) {
     var opts = {
         headers: {
-            'content-type': 'jpg'
+            'content-type': 'image/jpg'
         }
     };
     var self = this;
@@ -336,7 +335,7 @@ test('chattr: content-type', function (t) {
                 t.ok(info);
                 if (info) {
                     var h = info.headers || {};
-                    t.equal(h['content-type'], 'image/jpeg');
+                    t.equal(h['content-type'], 'image/jpg');
                 }
                 t.end();
             });
@@ -345,6 +344,7 @@ test('chattr: content-type', function (t) {
 });
 
 
+
 test('chattr: durability-level (not ok)', function (t) {
     var opts = {
         headers: {
@@ -1058,3 +1058,57 @@ test('put timeout', function (t) {
         stream.write(TEXT.substr(0, 1));
     });
 });
+
+
+test('MANTA-4133 (malformed content-type)', function (t) {
+    var opts = {
+        headers: {
+            'content-type': '/*'
+        }
+    };
+    var stream = new MemoryStream();
+
+    this.client.put(this.key, stream, opts, function (err, res) {
+        t.ok(err);
+        t.ok(res);
+        t.equal(err.name, 'BadRequestError');
+        t.end();
+    });
+});
+
+
+test('MANTA-4133 (malformed content-type)', function (t) {
+    var opts = {
+        headers: {
+            'content-type': 'argle/'
+        }
+    };
+    var stream = new MemoryStream();
+
+    this.client.put(this.key, stream, opts, function (err, res) {
+        t.ok(err);
+        t.ok(res);
+        t.equal(err.name, 'BadRequestError');
+        t.end();
+    });
+});
+
+
+test('MANTA-4133 (malformed utf-8 content-type)', function (t) {
+    var encoded = '%EC%95%88%EB%85%95%ED%95%98%EC%84%B8%EC%9A%94';
+    var ct_utf8 = unescape(encoded);
+    var stream = new MemoryStream();
+
+    var opts = {
+        headers: {
+            'content-type': ct_utf8
+        }
+    };
+
+    this.client.put(this.key, stream, opts, function (err, res) {
+        t.ok(err);
+        t.ok(res);
+        t.equal(err.name, 'BadRequestError');
+        t.end();
+    });
+});
