commit 4547c2b929d2955ffcf8e454db1658f50b874c88 (refs/changes/20/4120/1)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2018-06-04T17:49:56+02:00 (1 year, 4 months ago)
    
    TRITON-399 sdc-clients: remove SAPI's history

diff --git a/lib/sapi.js b/lib/sapi.js
index c82ff39..d8f62bb 100644
--- a/lib/sapi.js
+++ b/lib/sapi.js
@@ -490,86 +490,6 @@ SAPI.prototype.getPayload = function getPayload(uuid, callback) {
 };
 
 
-// --- History
-
-/**
- * Add history record
- *
- * @param {Function} callback: of the form f(err, history).
- */
-function addHistory(opts, callback) {
-    assert.object(opts, 'opts');
-    assert.string(opts.uuid, 'opts.uuid');
-    assert.number(opts.started, 'opts.started');
-    assert.object(opts.changes, 'opts.changes');
-
-    return (this.post('/history', opts, callback));
-}
-
-SAPI.prototype.addHistory = addHistory;
-
-
-/**
- * Lists all history records
- *
- * @param {Function} callback: of the form f(err, history).
- */
-function listHistory(search_opts, callback) {
-    if (arguments.length === 1) {
-        callback = search_opts;
-        search_opts = {};
-    }
-
-    var uri = '/history?' + qs.stringify(search_opts);
-    return (this.get(uri, callback));
-}
-
-SAPI.prototype.listHistory = listHistory;
-
-
-/**
- * Gets an history record by UUID
- *
- * @param {String} uuid: the UUID of the history record.
- * @param {Function} callback: of the form f(err, history).
- */
-function getHistory(uuid, callback) {
-    return (this.get(sprintf('/history/%s', uuid), callback));
-}
-
-SAPI.prototype.getHistory = getHistory;
-
-
-/**
- * Updates an existing history record
- *
- * @param {String} uuid: the UUID of the history item to update.
- * @param {String} opts: new attributes
- * @param {Function} callback: of the form f(err, history).
- */
-function updateHistory(uuid, opts, callback) {
-    assert.string(uuid, 'uuid');
-    assert.object(opts, 'opts');
-    assert.number(opts.finished, 'opts.finished');
-
-    return (this.put(sprintf('/history/%s', uuid), opts, callback));
-}
-
-SAPI.prototype.updateHistory = updateHistory;
-
-
-/**
- * Deletes an history record by UUID
- *
- * @param {String} uuid: the UUID of the history record.
- * @param {Function} callback : of the form f(err).
- */
-function deleteHistory(uuid, callback) {
-    return (this.del(sprintf('/history/%s', uuid), callback));
-}
-
-SAPI.prototype.deleteHistory = deleteHistory;
-
 module.exports = SAPI;
 
 
