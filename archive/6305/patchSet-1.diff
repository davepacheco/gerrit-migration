commit da8222da9b4749684f04b2dfc4b50f2092217eb0
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2019-05-17T16:45:28+02:00 (5 months ago)
    
    TRITON-1324 CloudAPI needs to support log parameter on firewall rules

diff --git a/lib/rules.js b/lib/rules.js
index d690b958ae..1f612c43a6 100644
--- a/lib/rules.js
+++ b/lib/rules.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -13,7 +13,6 @@
  */
 
 var assert = require('assert-plus');
-var util = require('util');
 var restify = require('restify');
 
 var resources = require('./resources');
@@ -25,7 +24,8 @@ function translate(rule) {
     var r = {
         id: rule.uuid,
         rule: rule.rule,
-        enabled: rule.enabled
+        enabled: rule.enabled,
+        log: rule.log || false
     };
 
     if (rule.global) {
@@ -39,7 +39,7 @@ function translate(rule) {
     return (r);
 }
 
-///--- Functions
+// --- Functions
 
 function create(req, res, next) {
     assert.ok(req.sdc);
@@ -51,12 +51,14 @@ function create(req, res, next) {
     }
     var rule = req.params.rule;
     var enabled = req.params.enabled ? req.params.enabled : false;
+    var rLog = req.params.log ? req.params.log : false;
     var fwapi = req.sdc.fwapi;
 
     var p = {
         owner_uuid: customer,
         rule: rule,
-        enabled: enabled
+        enabled: enabled,
+        log: rLog
     };
 
     if (req.params.description) {
@@ -153,6 +155,10 @@ function update(req, res, next) {
         args.enabled = params.enabled;
     }
 
+    if (params.log !== undefined) {
+        args.log = params.log;
+    }
+
     if (params.description !== undefined) {
         args.description = params.description;
     }
@@ -240,7 +246,7 @@ function del(req, res, next) {
 
     return fwapi.deleteRule(id, {
         owner_uuid: customer
-    }, function (err, r) {
+    }, function (err) {
         if (err) {
             return next(err);
         }
@@ -338,7 +344,7 @@ function mount(server, before) {
 
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
     mount: mount
diff --git a/test/machines/firewall-rules.js b/test/machines/firewall-rules.js
index 90f0719d37..7aaa12c94d 100644
--- a/test/machines/firewall-rules.js
+++ b/test/machines/firewall-rules.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var util = require('util');
@@ -44,7 +44,8 @@ function checkForbidden(t, err, req, res, body) {
 
 module.exports = function (suite, client, other, machine, callback) {
     if (!machine) {
-        return callback();
+        callback();
+        return;
     }
 
     // FireWall Rules:
@@ -56,6 +57,7 @@ module.exports = function (suite, client, other, machine, callback) {
         t.ok(rule.id, 'rule id ok');
         t.ok(rule.rule, 'rule text ok');
         t.ok(typeof (rule.enabled) !== 'undefined', 'rule enabled defined');
+        t.ok(typeof (rule.log) !== 'undefined', 'rule log defined');
     }
 
 
@@ -83,6 +85,7 @@ module.exports = function (suite, client, other, machine, callback) {
                 RULE_UUID = body.id;
                 t.equal(201, res.statusCode, 'Status Code');
                 t.equal(body.enabled, false, 'rule enabled');
+                t.equal(body.log, false, 'rule log');
                 t.end();
             } else {
                 t.end();
@@ -237,7 +240,7 @@ module.exports = function (suite, client, other, machine, callback) {
 
     suite.test('Get unexisting rule', function (t) {
         client.get(sprintf(RULE_URL, libuuid.create()),
-            function (err, req, res, body) {
+            function (err, req, res, _body) {
                 t.ok(err);
                 t.equal(404, res.statusCode);
                 t.end();
@@ -251,12 +254,14 @@ module.exports = function (suite, client, other, machine, callback) {
 
         if (RULE_UUID) {
             client.post(sprintf(RULE_URL, RULE_UUID), {
-                rule: NEW_RULE
+                rule: NEW_RULE,
+                log: true
             }, function (err, req, res, body) {
                 t.ifError(err);
                 t.equal(200, res.statusCode);
                 t.equal(body.rule, NEW_RULE);
                 t.equal(body.enabled, false);
+                t.equal(body.log, true);
                 t.end();
             });
         } else {
@@ -315,7 +320,7 @@ module.exports = function (suite, client, other, machine, callback) {
     suite.test('EnableRule', function (t) {
         if (RULE_UUID) {
             client.post(sprintf(RULE_URL, RULE_UUID) + '/enable', {
-            }, function (err, req, res, body) {
+            }, function (err, req, res, _body) {
                 t.ifError(err);
                 t.equal(200, res.statusCode);
                 t.end();
@@ -380,5 +385,5 @@ module.exports = function (suite, client, other, machine, callback) {
     });
 
 
-    return callback();
+    callback();
 };
diff --git a/test/machines/resize.js b/test/machines/resize.js
index 2c427b1aea..3e0ef24fc9 100644
--- a/test/machines/resize.js
+++ b/test/machines/resize.js
@@ -5,14 +5,13 @@
  */
 
 /*
- * Copyright (c) 2019, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 var common = require('../common');
 var vasync = require('vasync');
 var waitForJob = require('./common').waitForJob;
 
-var uuid = common.uuid;
 var checkNotFound = common.checkNotFound;
 
 
@@ -25,38 +24,6 @@ function (suite, client, other, machine, pkgDown, pkgSame, pkgUp, cb) {
         return cb();
     }
 
-    suite.test('Resize Machine up on coal', function (t) {
-        t.ok(pkgUp, 'Resize up package OK');
-
-        if (!common.getCfg().datacenters.coal) {
-            return t.end();
-        }
-
-        return client.post('/my/machines/' + machine, {
-            action: 'resize',
-            'package': pkgUp.uuid
-        }, function (err) {
-            t.ok(err);
-
-            var body = err.body;
-            t.ok(body);
-
-            if (body) {
-                t.equal(body.code, 'ValidationFailed');
-                t.equal(body.message, 'Invalid VM update parameters');
-
-                t.equal(body.errors.length, 1);
-                var error = body.errors[0];
-
-                t.equal(error.field, 'ram');
-                t.equal(error.code, 'InsufficientCapacity');
-            }
-
-            t.end();
-        });
-    });
-
-
     suite.test('Resize Machine to same package - other', function (t) {
         t.ok(pkgSame, 'Resize same package OK');
 
diff --git a/test/populate_network.test.js b/test/populate_network.test.js
index 41d0dd4334..d984adac48 100644
--- a/test/populate_network.test.js
+++ b/test/populate_network.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2018, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 /*
@@ -16,7 +16,6 @@
  */
 
 var test   = require('@smaller/tap').test;
-var util   = require('util');
 var common = require('./common');
 
 
