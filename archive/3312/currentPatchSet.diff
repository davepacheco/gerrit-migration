From da2c369fcea8e115b5525272f0b10f42f2d77cb2 Mon Sep 17 00:00:00 2001
From: Todd Whiteman <todd.whiteman@joyent.com>
Date: Thu, 8 Feb 2018 09:56:17 -0800
Subject: [PATCH] TRITON-114 cloudapi test failing on image create from vm
 Reviewed by: Trent Mick <trentm@gmail.com> Approved by: Trent Mick
 <trentm@gmail.com>

---
 CHANGES.md                      |  4 ++++
 lib/wfapi.js                    |  2 ++
 lib/workflows/create-from-vm.js | 12 +++++++++---
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index 55afdff..27ce01f 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -1,5 +1,9 @@
 # IMGAPI changelog
 
+## 4.0.14
+
+- TRITON-114 cloudapi test failing on image create from vm
+
 ## 4.0.13
 
 - DOCKER-1095 add redirect handling for docker registry client getManifest
diff --git a/lib/wfapi.js b/lib/wfapi.js
index d41fe09..64914aa 100644
--- a/lib/wfapi.js
+++ b/lib/wfapi.js
@@ -181,6 +181,7 @@ Wfapi.prototype.createImageFromVmJob = function (options, cb) {
         prepare_image_script: options.prepareImageScript,
         max_origin_depth: options.maxOriginDepth,
         manifest: options.manifest,
+        req_id: options.req.getId(),
         task: 'create-from-vm',
         target: format('/create-from-vm-%s', options.vmUuid)
     };
@@ -215,6 +216,7 @@ Wfapi.prototype.createImportRemoteImageJob = function (options, cb) {
     var params = {
         origins: options.origins,
         image_uuid: options.uuid,
+        req_id: options.req.getId(),
         source: options.source,
         skip_owner_check: options.skipOwnerCheck,
         task: 'import-remote-image',
diff --git a/lib/workflows/create-from-vm.js b/lib/workflows/create-from-vm.js
index 54a398f..b888549 100644
--- a/lib/workflows/create-from-vm.js
+++ b/lib/workflows/create-from-vm.js
@@ -57,9 +57,11 @@ function setErrorObject(err, job, cb) {
 
 
 function getVmServer(job, cb) {
+    var opts = {headers: {'x-request-id': job.params.req_id}};
     var vmapi = new sdcClients.VMAPI({ url: vmapiUrl });
 
-    vmapi.getVm({ uuid: job.params['vm_uuid'] }, function (err, vm, req, res) {
+    vmapi.getVm({ uuid: job.params['vm_uuid'] }, opts,
+            function (err, vm, req, res) {
         if (err) {
             cb(err);
         } else {
@@ -85,7 +87,11 @@ function queueCreateFromVmTask(job, cb) {
     };
     var path = '/servers/' + job.params['server_uuid'] +
                 '/vms/' + job.params['vm_uuid'] + '/images';
-    cnapi.post(path, payload, function (err, req, res, task) {
+    var opts = {
+        headers: {'x-request-id': job.params.req_id},
+        path: path
+    };
+    cnapi.post(opts, payload, function (err, req, res, task) {
         if (err) {
             cb(err);
         } else {
@@ -111,7 +117,7 @@ function pollTask(job, cb) {
 
     var cnapi = new sdcClients.CNAPI({
         url: cnapiUrl,
-        headers: { 'x-request-id': job.params['x-request-id'] }
+        headers: {'x-request-id': job.params.req_id}
     });
 
     function getErrorMesage(task) {
-- 
2.21.0

