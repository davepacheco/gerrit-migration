From 1df1666745106f32b2b3e94633774b1c602a3ebe Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <josh@wilsdon.ca>
Date: Wed, 21 Nov 2018 12:43:33 -0800
Subject: [PATCH] =?UTF-8?q?TRITON-972=20cn-agent-update=20service=20should?=
 =?UTF-8?q?=20not=20register=20itself=20and=20should=20not=20send=20heartb?=
 =?UTF-8?q?eats=20Reviewed=20by:=20Pedro=20Palaz=C3=B3n=20Candel=20<pedro@?=
 =?UTF-8?q?joyent.com>=20Approved=20by:=20Pedro=20Palaz=C3=B3n=20Candel=20?=
 =?UTF-8?q?<pedro@joyent.com>?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 lib/app.js   | 26 +++++++++++++++++++++++---
 package.json |  2 +-
 2 files changed, 24 insertions(+), 4 deletions(-)

diff --git a/lib/app.js b/lib/app.js
index 38c1c06..4f2a128 100644
--- a/lib/app.js
+++ b/lib/app.js
@@ -84,6 +84,14 @@ function App(options) {
         ' server/' + options.uuid;
     this.uuid = options.uuid;
 
+    this.isUpdateHelper = false;
+    if (process.env.SMF_FMRI === 'svc:/smartdc/agent/cn-agent-update:default') {
+        // If we're the cn-agent-update service, we won't register with CNAPI
+        // since the cn-agent service will do that and the cn-agent-update
+        // service is only ever used to by cn-agent itself.
+        this.isUpdateHelper = true;
+    }
+
     // ensure we have all the config required to connect to and use CNAPI
     assert.object(this.config, 'this.config');
     assert.optionalObject(this.config.cnapi, 'this.config.cnapi');
@@ -467,6 +475,20 @@ App.prototype.start = function () {
         queueDefns[i].onhttpmsg = createHttpTaskDispatchFn(agent, taskspath);
     }
 
+    function completeStartup() {
+        agent.useQueues(queueDefns);
+        self.log.info('starting cn-agent for %s', self.uuid);
+        agent.start();
+    }
+
+    if (self.isUpdateHelper) {
+        // As described above, we don't want to start the heartbeater or clean
+        // up locks that are not ours here. So we just start listening for
+        // tasks.
+        completeStartup();
+        return;
+    }
+
     vasync.pipeline({
         funcs: [
             function _createCnapiConnection(_, cb) {
@@ -492,9 +514,7 @@ App.prototype.start = function () {
             throw err;
         }
 
-        agent.useQueues(queueDefns);
-        self.log.info('starting cn-agent for %s', self.uuid);
-        agent.start();
+        completeStartup();
     });
 };
 
diff --git a/package.json b/package.json
index 7d884da..9bf9ac9 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cn-agent",
   "description": "Triton Compute Node Agent",
-  "version": "2.3.2",
+  "version": "2.4.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
-- 
2.21.0

