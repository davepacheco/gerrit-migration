commit f1001d8b81ab5cd1bc53f2fbaa205c8d1f2d100a
Author: Tim Foster <tim.foster@joyent.com>
Date:   2019-06-27T13:16:26+01:00 (3 months ago)
    
    TRITON-1368 agentsshar should store artifacts in paths that reflect its contents
    Reviewed by: Josh Wilsdon <josh@wilsdon.ca>
    Approved by: Trent Mick <trentm@gmail.com>

diff --git a/Makefile b/Makefile
index 0cd0154..3a5acfb 100644
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,7 @@
 #
 
 #
-# Copyright (c) 2019, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 ENGBLD_REQUIRE := $(shell git submodule update --init deps/eng)
@@ -16,6 +16,22 @@ NAME = agentsshar
 
 ifeq ($(BUILDNAME),)
     BUILDNAME=$(BRANCH)
+else
+	# Override BRANCH and STAMP so that the filename of the output
+	# shar better describes its contents. The branch and `git describe`
+	# of the sdc-agents-installer repo is computed by the mk-agents-shar
+	# script. We do this here rather than just in mk-agents-shar so that
+	# the directory name used by bits-upload.sh remains correct.
+	#
+	# This results in artifacts of the form:
+	#
+	# agents-<sdc-agents-installer branch>-<buildname separated by '-'><timestamp>-<githash>.manifest
+	# agents-<sdc-agents-installer branch>-<buildname separated by '-'><timestamp>-<githash>.md5sum
+	# agents-<sdc-agents-installer branch>-<buildname separated by '-'>-<timestamp>-<githash>.sh
+	#
+	AGENTS_INSTALLER_BRANCH=$(shell git symbolic-ref HEAD | $(_AWK) -F/ '{print $$3}')
+	BRANCH=$(AGENTS_INSTALLER_BRANCH)-$(shell echo $$BUILDNAME | sed -e 's/ /-/g')
+	STAMP:=$(BRANCH)-$(TIMESTAMP)-$(_GITDESCRIBE)
 endif
 
 CLEAN_FILES += build/agents
diff --git a/README.md b/README.md
index cc09259..855c3d8 100644
--- a/README.md
+++ b/README.md
@@ -33,6 +33,11 @@ See the Makefile for typical build targets.
 The main 'mk-agents-shar' script presumes a [Mountain Gorilla style directory
 structure](https://github.com/joyent/mountain-gorilla/blob/master/docs/index.md#bits-directory-structure).
 
+mk-agents-shar can take a `-b` argument, via `$BUILDNAME` in the Makefile, a
+space-separated hierarchical list of branch names where we should look for
+agents for inclusion in the archive. This way, we can build an agents-shar
+archive containing agents build from development branches. Note that the
+$BUILDNAME branch names form part of the shar archive filename.
 
 ## Repository
 
diff --git a/mk-agents-shar b/mk-agents-shar
index c3e86d7..f911604 100755
--- a/mk-agents-shar
+++ b/mk-agents-shar
@@ -6,7 +6,7 @@
 #
 
 #
-# Copyright (c) 2018, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 #
@@ -74,11 +74,10 @@ fi
 # Need GNU awk for multi-char arg to "-F".
 AWK=$((which gawk 2>/dev/null | grep -v "^no ") || which awk)
 GITDESCRIBE=g$(git describe --all --long --dirty | ${AWK} -F'-g' '{print $NF}')
+SDCINSTALLER_BRANCH=$(git symbolic-ref HEAD | ${AWK} -F/ '{print $3}')
 
 SHAR=`which shar`
 
-
-
 #---- functions
 
 function fatal {
@@ -140,7 +139,7 @@ function fetch_agent_package() {
             local latest_dir=$(mget -q ${from_dir}/${scope}/${one_build_name}-latest)
 
             if [[ -z ${latest_dir} ]]; then
-                echo "WARN: could not find '${latest_dir}' in Manta"
+                echo "WARN: could not find '${one_build_name}-latest' in Manta"
             else
                 local latest_name=$(mls ${latest_dir}/${dir} \
                     | grep "${base_pattern}" \
@@ -205,12 +204,11 @@ function fetch_agent_package() {
 }
 
 function mk_shar_manifest() {
-    local first_build_name=$1
-    local release_manifest=$2
+    local release_manifest=$1
 
     local name=agentsshar
     local stage_dir=/tmp
-    local stamp=${first_build_name}-${TIMESTAMP}-${GITDESCRIBE}
+    local stamp=${SDCINSTALLER_BRANCH}-${AGENTS_BRANCH_NAMES}-${TIMESTAMP}-${GITDESCRIBE}
     local release_file
     release_file=$(basename `ls ${TOP}/build/agents-*.sh | head -n 1`)
 
@@ -244,9 +242,8 @@ function mk_agents_shar() {
     done
 
     # Create the shar.
-    local first_build_name=$(echo $build_names | xargs -n1 2>/dev/null | head -1)
     local tmp=/var/tmp
-    local sh_filename=agents-$first_build_name-$TIMESTAMP-$GITDESCRIBE.sh
+    local sh_filename=agents-$SDCINSTALLER_BRANCH-$AGENTS_BRANCH_NAMES-$TIMESTAMP-$GITDESCRIBE.sh
     cd $BUILD_DIR
 
     (cat <<__EOF__
@@ -286,11 +283,11 @@ EOF
 )>> $sh_filename
 
     # Create the md5sums file.
-    local md5sum_filename=agents-$first_build_name-$TIMESTAMP-$GITDESCRIBE.md5sum
+    local md5sum_filename=agents-$SDCINSTALLER_BRANCH-$AGENTS_BRANCH_NAMES-$TIMESTAMP-$GITDESCRIBE.md5sum
     openssl dgst -md5 $sh_filename | cut -d' ' -f 2 > $md5sum_filename
 
-    local manifest_filename=agents-$first_build_name-$TIMESTAMP-$GITDESCRIBE.manifest
-    mk_shar_manifest $first_build_name $manifest_filename
+    local manifest_filename=agents-$SDCINSTALLER_BRANCH-$AGENTS_BRANCH_NAMES-$TIMESTAMP-$GITDESCRIBE.manifest
+    mk_shar_manifest $manifest_filename
 
     # Copy bits to output dir, if necessary.
     cd $TOP
@@ -319,6 +316,7 @@ while getopts "hb:d:o:" c; do
         ;;
     b)
         build_names=$OPTARG
+        AGENTS_BRANCH_NAMES=$(echo $build_names | sed -e 's/ /-/g')
         ;;
     d)
         source_dir=$OPTARG
