From 505b4a2ac0d035e1c2e29339d768c1cc8d78379e Mon Sep 17 00:00:00 2001
From: Dave Eddy <dave@daveeddy.com>
Date: Mon, 8 Jul 2019 15:25:37 -0400
Subject: [PATCH] MANTA-4355 Expose pagination for bucket and object listing

---
 lib/buckets.js | 25 +++++++++++++++----------
 lib/client.js  | 30 +++++++++++++++---------------
 lib/objects.js | 31 ++++++++++++++++++++-----------
 3 files changed, 50 insertions(+), 36 deletions(-)

diff --git a/lib/buckets.js b/lib/buckets.js
index 74269aa..a1f8e48 100644
--- a/lib/buckets.js
+++ b/lib/buckets.js
@@ -273,14 +273,12 @@ function deleteBucketNoVnode(rpcctx, owner, bucket, req_id, callback) {
 /*
  * This function talks to boray
  */
-function listBuckets(rpcctx, owner, order_by, prefix, limit, offset, vnode,
-    req_id) {
+function listBuckets(rpcctx, owner, prefix, limit, marker, vnode, req_id) {
     assert.object(rpcctx, 'rpcctx');
     assert.string(owner, 'owner');
-    assert.string(order_by, 'order_by');
     assert.string(prefix, 'prefix');
     assert.number(limit, 'limit');
-    assert.number(offset, 'offset');
+    assert.string(marker, 'marker');
     assert.number(vnode, 'vnode');
     assert.string(req_id, 'req_id');
 
@@ -289,10 +287,9 @@ function listBuckets(rpcctx, owner, order_by, prefix, limit, offset, vnode,
 
     var arg = {
         owner: owner,
-        order_by: order_by,
         prefix: prefix,
         limit: limit,
-        offset: offset,
+        marker: marker,
         vnode: vnode,
         request_id: req_id
     };
@@ -324,20 +321,28 @@ function listBuckets(rpcctx, owner, order_by, prefix, limit, offset, vnode,
 /*
  * This function talks to electric-boray
  */
-function listBucketsNoVnode(rpcctx, owner, sorted, order_by, prefix, limit,
+function listBucketsNoVnode(rpcctx, owner, prefix, limit, marker, delimiter,
     req_id) {
+
     assert.object(rpcctx, 'rpcctx');
     assert.string(owner, 'owner');
-    assert.bool(sorted, 'sorted');
-    assert.string(order_by, 'order_by');
     assert.string(prefix, 'prefix');
     assert.number(limit, 'limit');
+    assert.string(marker, 'marker');
+    assert.string(delimiter, 'delimiter');
     assert.string(req_id, 'req_id');
 
     var opts = {};
     opts.req_id = req_id;
 
-    var arg = [owner, sorted, order_by, prefix, limit, req_id];
+    var arg = [
+        owner,
+        prefix,
+        limit,
+        marker,
+        delimiter,
+        req_id
+    ];
 
     var log = rpc.childLogger(rpcctx, opts);
 
diff --git a/lib/client.js b/lib/client.js
index 329d511..35e580b 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -638,8 +638,7 @@ BorayClient.prototype.getBucketNoVnode =
  * @param {String} req_id    - Request identifier
  */
 BorayClient.prototype.listBuckets =
-    function listBuckets(owner, order_by, prefix, limit, offset, vnode,
-        req_id) {
+    function listBuckets(owner, prefix, limit, marker, vnode, req_id) {
 
     var rpcctx = this.ctxCreateForEmitter();
     var rv;
@@ -648,8 +647,8 @@ BorayClient.prototype.listBuckets =
         return (emitUnavailable());
     }
 
-    rv = buckets.listBuckets(rpcctx, owner, order_by, prefix, limit, offset,
-        vnode, req_id);
+    rv = buckets.listBuckets(rpcctx, owner, prefix, limit, marker, vnode,
+        req_id);
     this.releaseWhenDone(rpcctx, rv);
 
     return (rv);
@@ -666,8 +665,9 @@ BorayClient.prototype.listBuckets =
  * @param {String} req_id    - Request identifier
  */
 BorayClient.prototype.listBucketsNoVnode =
-    function listBucketsNoVnode(owner, sorted, order_by, prefix, limit,
+    function listBucketsNoVnode(owner, prefix, limit, marker, delimiter,
         req_id) {
+
     var rpcctx = this.ctxCreateForEmitter();
     var rv;
 
@@ -675,8 +675,8 @@ BorayClient.prototype.listBucketsNoVnode =
         return (emitUnavailable());
     }
 
-    rv = buckets.listBucketsNoVnode(rpcctx, owner, sorted, order_by, prefix,
-        limit, req_id);
+    rv = buckets.listBucketsNoVnode(rpcctx, owner, prefix, limit, marker,
+        delimiter, req_id);
     this.releaseWhenDone(rpcctx, rv);
 
     return (rv);
@@ -983,8 +983,8 @@ BorayClient.prototype.getObjectNoVnode =
  * @param {String} req_id          - Request identifier
  */
 BorayClient.prototype.listObjects =
-    function listObjects(owner, bucket_id, order_by, prefix, limit, offset,
-        vnode, req_id) {
+    function listObjects(owner, bucket_id, prefix, limit, marker, vnode,
+        req_id) {
 
     var rpcctx = this.ctxCreateForEmitter();
     var rv;
@@ -993,8 +993,8 @@ BorayClient.prototype.listObjects =
         return (emitUnavailable());
     }
 
-    rv = objects.listObjects(rpcctx, owner, bucket_id, order_by, prefix, limit,
-        offset, vnode, req_id);
+    rv = objects.listObjects(rpcctx, owner, bucket_id, prefix, limit,
+        marker, vnode, req_id);
     this.releaseWhenDone(rpcctx, rv);
 
     return (rv);
@@ -1008,8 +1008,8 @@ BorayClient.prototype.listObjects =
  * @param {String} req_id          - Request identifier
  */
 BorayClient.prototype.listObjectsNoVnode =
-    function listObjectsNoVnode(owner, bucket_id, sorted, order_by, prefix,
-        limit, req_id) {
+    function listObjectsNoVnode(owner, bucket_id, prefix, limit, marker,
+        delimiter, req_id) {
 
     var rpcctx = this.ctxCreateForEmitter();
     var rv;
@@ -1018,8 +1018,8 @@ BorayClient.prototype.listObjectsNoVnode =
         return (emitUnavailable());
     }
 
-    rv = objects.listObjectsNoVnode(rpcctx, owner, bucket_id, sorted, order_by,
-        prefix, limit, req_id);
+    rv = objects.listObjectsNoVnode(rpcctx, owner, bucket_id, prefix, limit,
+        marker, delimiter, req_id);
     this.releaseWhenDone(rpcctx, rv);
 
     return (rv);
diff --git a/lib/objects.js b/lib/objects.js
index 0dcd7c5..679b238 100644
--- a/lib/objects.js
+++ b/lib/objects.js
@@ -401,26 +401,24 @@ function deleteObjectNoVnode(rpcctx, owner, bucket_id, name, req_id, callback) {
 }
 
 
-function listObjects(rpcctx, owner, bucket_id, order_by, prefix, limit, offset,
-    vnode, req_id) {
+function listObjects(rpcctx, owner, bucket_id, prefix, limit, marker, vnode,
+    req_id) {
 
     assert.object(rpcctx, 'rpcctx');
     assert.string(owner, 'owner');
     assert.string(bucket_id, 'bucket_id');
-    assert.string(order_by, 'order_by');
     assert.string(prefix, 'prefix');
     assert.number(limit, 'limit');
-    assert.number(offset, 'offset');
+    assert.string(marker, 'marker');
     assert.number(vnode, 'vnode');
     assert.string(req_id, 'req_id');
 
     var arg = {
         owner: owner,
         bucket_id: bucket_id,
-        order_by: order_by,
         prefix: prefix,
         limit: limit,
-        offset: offset,
+        marker: marker,
         vnode: vnode,
         request_id: req_id
     };
@@ -452,17 +450,18 @@ function listObjects(rpcctx, owner, bucket_id, order_by, prefix, limit, offset,
     return (res);
 }
 
-function listObjectsNoVnode(rpcctx, owner, bucket_id, sorted, order_by, prefix,
-    limit, req_id) {
+function listObjectsNoVnode(rpcctx, owner, bucket_id, prefix, limit, marker,
+    delimiter, req_id) {
+
     var log;
 
     assert.object(rpcctx, 'rpcctx');
     assert.string(owner, 'owner');
     assert.string(bucket_id, 'bucket_id');
-    assert.bool(sorted, 'sorted');
-    assert.string(order_by, 'order_by');
     assert.string(prefix, 'prefix');
     assert.number(limit, 'limit');
+    assert.string(marker, 'marker');
+    assert.string(delimiter, 'delimiter');
     assert.string(req_id, 'req_id');
 
     var opts = {};
@@ -472,10 +471,20 @@ function listObjectsNoVnode(rpcctx, owner, bucket_id, sorted, order_by, prefix,
 
     var res = new EventEmitter();
 
+    var arg = [
+        owner,
+        bucket_id,
+        prefix,
+        limit,
+        marker,
+        delimiter,
+        req_id
+    ];
+
     var req = rpc.rpcCommon({
         rpcctx: rpcctx,
         rpcmethod: 'listobjects',
-        rpcargs: [owner, bucket_id, sorted, order_by, prefix, limit, req_id],
+        rpcargs: arg,
         log: log
     }, function (err) {
         if (err) {
-- 
2.21.0

