From 4b0f611e1e716d9843687de036a19251b86c7b39 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Tue, 5 Jun 2018 16:21:14 +0200
Subject: [PATCH] joyent/node-cueball#138 want method to know if Agent is
 stopped

---
 docs/api.adoc      | 5 +++++
 lib/agent.js       | 4 ++++
 test/agent.test.js | 3 +++
 3 files changed, 12 insertions(+)

diff --git a/docs/api.adoc b/docs/api.adoc
index 968ca8b..ae99c37 100644
--- a/docs/api.adoc
+++ b/docs/api.adoc
@@ -136,6 +136,11 @@ held by the pool). The `stop()` method should be used on an Agent if your
 program does not plan to use it again and wishes to be able to exit node
 without calling `process.exit()`.
 
+### `#isStopped()`
+
+Boolean, is this Agent stopped?. Useful to prevent exceptions being thrown
+when calling `stop()` more than once.
+
 ### `#getPool([host])`
 
 Returns the connection pool this agent has created for the input host. If no
diff --git a/lib/agent.js b/lib/agent.js
index fbae298..6b3e292 100644
--- a/lib/agent.js
+++ b/lib/agent.js
@@ -491,6 +491,10 @@ CueBallAgent.prototype.createConnection = function (options, connectListener) {
 	throw (new Error('UNIX domain sockets not supported'));
 };
 
+CueBallAgent.prototype.isStopped = function () {
+	return (this.cba_stopped);
+};
+
 function CueBallHttpAgent(options) {
 	options.protocol = 'http';
 	if (options.defaultPort === undefined)
diff --git a/test/agent.test.js b/test/agent.test.js
index 2779f3f..38d0153 100644
--- a/test/agent.test.js
+++ b/test/agent.test.js
@@ -73,8 +73,11 @@ mod_tape.test('basic agent usage, fixed ip', function (t) {
 			agent.createPool('127.0.0.1', {});
 		});
 
+		t.notOk(agent.isStopped());
+
 		agent.stop(function () {
 			t.ok(pool.isInState('stopped'));
+			t.ok(agent.isStopped());
 			t.end();
 		});
 	});
-- 
2.21.0

