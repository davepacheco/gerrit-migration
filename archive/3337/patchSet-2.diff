commit 20fc29ce7ae4bd2665ee63082bc63540c6c681c8 (refs/changes/37/3337/2)
Author: Cody Peter Mello <cody.mello@joyent.com>
Date:   2018-02-08T23:32:03+00:00 (1 year, 8 months ago)
    
    TRITON-75 Allow firewall rules to be applied in order of priority

diff --git a/.gitignore b/.gitignore
index 7bbe1a3..8c9c480 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,5 @@
+/lib/parser.js
 /node_modules
 /coverage
+.*.sw[a-z]
+*.tgz
diff --git a/.npmignore b/.npmignore
index 5899c2e..5a8c328 100644
--- a/.npmignore
+++ b/.npmignore
@@ -6,3 +6,5 @@
 /src
 /test
 /tools
+.*.sw[a-z]
+*.tgz
diff --git a/Makefile b/Makefile
index 84fc01e..663df95 100644
--- a/Makefile
+++ b/Makefile
@@ -77,7 +77,7 @@ $(RAMSEY):
 #
 
 .PHONY: test
-test: $(ISTANBUL) $(FAUCET)
+test: $(ISTANBUL) $(FAUCET) parser
 	$(ISTANBUL) cover --print none test/run.js | $(FAUCET)
 
 .PHONY: check
diff --git a/docs/media/img/rule.svg b/docs/media/img/rule.svg
index 3d54538..d07f515 100644
--- a/docs/media/img/rule.svg
+++ b/docs/media/img/rule.svg
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8" standalone="no"?>
 <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="669" height="92" viewBox="0 0 669 92">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="railroad-diagram" width="925" height="92" viewBox="0 0 925 92">
 <defs><style type="text/css"><![CDATA[
 svg.railroad-diagram path {
   stroke-width: 3;
@@ -85,6 +85,37 @@ svg.railroad-diagram rect {
 <text x="576" y="35">protocol</text>
 </g>
 <path d="M618 31h10"></path>
-<path d="M 628 31 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
+<g>
+<path d="M628 31h0"></path>
+<path d="M884 31h0"></path>
+<path d="M628 31h20"></path>
+<g>
+<path d="M648 31h216"></path>
+</g>
+<path d="M864 31h20"></path>
+<path d="M628 31a10 10 0 0 1 10 10v0a10 10 0 0 0 10 10"></path>
+<g>
+<path d="M648 51h0"></path>
+<path d="M864 51h0"></path>
+<path d="M648 51h10"></path>
+<g>
+<path d="M658 51h0"></path>
+<path d="M742 51h0"></path>
+<rect x="658" y="40" width="84" height="22" rx="10" ry="10"></rect>
+<text x="700" y="55">PRIORITY</text>
+</g>
+<path d="M742 51h10"></path>
+<path d="M752 51h10"></path>
+<g>
+<path d="M762 51h0"></path>
+<path d="M854 51h0"></path>
+<rect x="762" y="40" width="92" height="22"></rect>
+<text x="808" y="55">priolevel</text>
+</g>
+<path d="M854 51h10"></path>
+</g>
+<path d="M864 51a10 10 0 0 0 10 -10v0a10 10 0 0 1 10 -10"></path>
+</g>
+<path d="M 884 31 h 20 m -10 -10 v 20 m 10 -20 v 20"></path>
 </g>
 </svg>
diff --git a/docs/rules.md b/docs/rules.md
index ec29e0d..01e4b41 100644
--- a/docs/rules.md
+++ b/docs/rules.md
@@ -13,14 +13,16 @@ Adding and updating rules takes effect immediately.  Adding or removing
 tags on a VM causes rules that apply to those tags to be added or removed
 immediately.
 
-In the case of two rules that affect the same VM and port, the rule that
-goes counter to the default policy takes precedence.  This means:
+In the case of two rules that affect the same VM and port and have the same
+priority level (0 when one isn't specified), the rule that goes counter to
+the default policy takes precedence by default. This means:
 
 * If you have an incoming BLOCK and an incoming ALLOW rule for the
-  same VM and port, the ALLOW will override.
+  same VM and port of the same priority, the ALLOW will override.
+  Give the BLOCK a higher priority to have it applied first.
 * If you have an outgoing BLOCK and an outgoing ALLOW rule for the
-  same VM and port, the BLOCK will override.
-
+  same VM and port of the same priority, the BLOCK will override.
+  Give the ALLOW a higher priority to have it applied first.
 
 # Rule payload
 
@@ -268,6 +270,27 @@ And to block outgoing replies:
     FROM all vms TO any BLOCK icmp6 TYPE 129
 
 
+# Priority
+
+    priority <level>
+
+Specifying a priority for a rule allows defining its relation with other rules.
+By default, a rule has a priority level of 0, the lowest priority. Rules with a
+higher priority will be handled first.
+
+**Examples:**
+
+    FROM any TO tag mta ALLOW tcp PORT 25
+    FROM subnet 10.20.30.0/24 TO tag mta BLOCK tcp PORT 25 PRIORITY 1
+
+Allows traffic from anyone but 10.20.30.0/24 to access an MTA.
+
+    FROM all vms TO any BLOCK tcp PORT all
+    FROM all vms TO any ALLOW tcp PORT 22 PRIORITY 1
+
+Blocks all outbound traffic, overriding the default outbound policy,
+except for SSH.
+
 # Examples
 
     FROM all vms TO tag syslog ALLOW udp port 514
diff --git a/docs/rules.md.in b/docs/rules.md.in
index 8a08320..28a4c34 100644
--- a/docs/rules.md.in
+++ b/docs/rules.md.in
@@ -13,14 +13,16 @@ Adding and updating rules takes effect immediately.  Adding or removing
 tags on a VM causes rules that apply to those tags to be added or removed
 immediately.
 
-In the case of two rules that affect the same VM and port, the rule that
-goes counter to the default policy takes precedence.  This means:
+In the case of two rules that affect the same VM and port and have the same
+priority level (0 when one isn't specified), the rule that goes counter to
+the default policy takes precedence by default. This means:
 
 * If you have an incoming BLOCK and an incoming ALLOW rule for the
-  same VM and port, the ALLOW will override.
+  same VM and port of the same priority, the ALLOW will override.
+  Give the BLOCK a higher priority to have it applied first.
 * If you have an outgoing BLOCK and an outgoing ALLOW rule for the
-  same VM and port, the BLOCK will override.
-
+  same VM and port of the same priority, the BLOCK will override.
+  Give the ALLOW a higher priority to have it applied first.
 
 # Rule payload
 
@@ -331,6 +333,27 @@ And to block outgoing replies:
     FROM all vms TO any BLOCK icmp6 TYPE 129
 
 
+# Priority
+
+    priority <level>
+
+Specifying a priority for a rule allows defining its relation with other rules.
+By default, a rule has a priority level of 0, the lowest priority. Rules with a
+higher priority will be handled first.
+
+**Examples:**
+
+    FROM any TO tag mta ALLOW tcp PORT 25
+    FROM subnet 10.20.30.0/24 TO tag mta BLOCK tcp PORT 25 PRIORITY 1
+
+Allows traffic from anyone but 10.20.30.0/24 to access an MTA.
+
+    FROM all vms TO any BLOCK tcp PORT all
+    FROM all vms TO any ALLOW tcp PORT 22 PRIORITY 1
+
+Blocks all outbound traffic, overriding the default outbound policy,
+except for SSH.
+
 # Examples
 
     FROM all vms TO tag syslog ALLOW udp port 514
diff --git a/lib/index.js b/lib/index.js
index d603207..abfc47c 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -46,8 +46,9 @@ var validators = require('./validators');
  * 1 - Initial version of language
  * 2 - PORTS keyword & support for ranges of ports
  * 3 - Support for IPv6 targets, the ICMPv6 protocol, and the TYPE ALL keyword
+ * 4 - Support for priority levels
  */
-var CURR_VERSION = 3;
+var CURR_VERSION = 4;
 
 
 var NON_DIGIT_RE = /[^0-9]/;
@@ -106,6 +107,12 @@ parser.yy.validateSubnet = function validateSubnet(input) {
     validators.validateSubnet('rule', input, parser.yy.enforceSubnetMask);
 };
 
+parser.yy.validatePriorityLevel = function validatePriorityLevel(num) {
+    if (NON_DIGIT_RE.test(num) || Number(num) < 0 || Number(num) > 100) {
+        throw new validators.InvalidParamError('rule',
+            'Priority level "%s" is invalid', num);
+    }
+};
 
 parser.yy.validatePortNumber = function validatePortNumber(num) {
     if (NON_DIGIT_RE.test(num) || Number(num) < 1 || Number(num) > 65535) {
diff --git a/lib/parser.js b/lib/parser.js
deleted file mode 100644
index d9c6e5a..0000000
--- a/lib/parser.js
+++ /dev/null
@@ -1,562 +0,0 @@
-/*
- * CDDL HEADER START
- *
- * The contents of this file are subject to the terms of the
- * Common Development and Distribution License, Version 1.0 only
- * (the "License").  You may not use this file except in compliance
- * with the License.
- *
- * You can obtain a copy of the license at http://smartos.org/CDDL
- *
- * See the License for the specific language governing permissions
- * and limitations under the License.
- *
- * When distributing Covered Code, include this CDDL HEADER in each
- * file.
- *
- * If applicable, add the following below this CDDL HEADER, with the
- * fields enclosed by brackets "[]" replaced with your own identifying
- * information: Portions Copyright [yyyy] [name of copyright owner]
- *
- * CDDL HEADER END
- *
- * Copyright 2017, Joyent, Inc. All rights reserved.
- *
- *
- * fwadm: firewall rule parser
- */
-
-
-/* parser generated by jison 0.4.2 */
-var parser = (function(){
-var parser = {trace: function trace() { },
-yy: {},
-symbols_: {"error":2,"start":3,"FROM":4,"target_list":5,"TO":6,"action":7,"protocol":8,"EOF":9,"any":10,"all":11,"(":12,"target_or_list":13,")":14,"target":15,"OR":16,"ipv4":17,"ipv4_subnet":18,"ipv6":19,"ipv6_subnet":20,"tag":21,"vm":22,"ALL":23,"VMS":24,"ANY":25,"IP":26,"IPV4ADDR":27,"SUBNET":28,"CIDRSUFFIX":29,"IPV6ADDR":30,"VM":31,"uuid":32,"WORD":33,"TAG":34,"tag_string":35,"=":36,"STRING":37,"BLOCK":38,"ALLOW":39,"TCP":40,"port_list":41,"ports":42,"UDP":43,"ICMP":44,"type_list":45,"ICMP6":46,"port_and_list":47,"port":48,"port_all":49,"AND":50,"PORT":51,"portnumber":52,"PORTS":53,"portnumbers":54,"portrange":55,"-":56,",":57,"type_and_list":58,"type":59,"type_all":60,"TYPE":61,"icmptype":62,"CODE":63,"icmpcode":64,"$accept":0,"$end":1},
-terminals_: {2:"error",4:"FROM",6:"TO",9:"EOF",12:"(",14:")",16:"OR",23:"ALL",24:"VMS",25:"ANY",26:"IP",27:"IPV4ADDR",28:"SUBNET",29:"CIDRSUFFIX",30:"IPV6ADDR",31:"VM",33:"WORD",34:"TAG",36:"=",37:"STRING",38:"BLOCK",39:"ALLOW",40:"TCP",43:"UDP",44:"ICMP",46:"ICMP6",50:"AND",51:"PORT",53:"PORTS",56:"-",57:",",61:"TYPE",63:"CODE"},
-productions_: [0,[3,7],[5,1],[5,1],[5,3],[5,1],[13,1],[13,3],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[11,2],[11,4],[10,1],[10,3],[17,2],[18,3],[19,2],[20,3],[22,2],[32,1],[21,2],[21,4],[35,1],[35,1],[7,1],[7,1],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[41,3],[41,1],[41,3],[41,1],[47,1],[47,3],[48,2],[42,2],[49,2],[52,1],[55,1],[55,3],[54,1],[54,3],[45,3],[45,1],[45,3],[45,1],[58,1],[58,3],[59,4],[59,2],[60,2],[62,1],[64,1]],
-performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {
-
-var $0 = $$.length - 1;
-switch (yystate) {
-case 1: return { 'from': $$[$0-5], 'to': $$[$0-3], 'action': $$[$0-2], 'protocol': $$[$0-1] }; 
-break;
-case 4:this.$ = $$[$0-1];
-break;
-case 7: this.$ = $$[$0-2].concat($$[$0]); 
-break;
-case 14: this.$ = [ ['wildcard', 'vmall'] ]; 
-break;
-case 15: this.$ = [ ['wildcard', 'vmall'] ]; 
-break;
-case 16: this.$ = [ ['wildcard', 'any'] ]; 
-break;
-case 17: this.$ = [ ['wildcard', 'any'] ]; 
-break;
-case 18: yy.validateIPv4address($$[$0]);
-          this.$ = [ ['ip', $$[$0]] ]; 
-break;
-case 19: yy.validateSubnet($$[$0-1] + $$[$0]);
-            this.$ = [ ['subnet', $$[$0-1] + $$[$0]] ]; 
-break;
-case 20: yy.validateOKVersion(3, 'IPv6');
-          yy.validateIPv6address($$[$0]);
-          this.$ = [ ['ip', $$[$0]] ]; 
-break;
-case 21: yy.validateOKVersion(3, 'IPv6');
-          yy.validateSubnet($$[$0-1] + $$[$0]);
-            this.$ = [ ['subnet', $$[$0-1] + $$[$0]] ]; 
-break;
-case 22: this.$ = [ ['vm', $$[$0]] ]; 
-break;
-case 23: yy.validateUUID($$[$0]);
-          this.$ = $$[$0]; 
-break;
-case 24: this.$ = [ ['tag', $$[$0]] ]; 
-break;
-case 25: this.$ = [ ['tag', [ $$[$0-2], $$[$0] ] ] ]; 
-break;
-case 26: this.$ = yytext; 
-break;
-case 27: this.$ = $$[$0]; 
-break;
-case 28: this.$ = $$[$0].toLowerCase() 
-break;
-case 29: this.$ = $$[$0].toLowerCase() 
-break;
-case 30: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
-break;
-case 31: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
-break;
-case 32: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
-break;
-case 33: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
-break;
-case 34: this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] } 
-break;
-case 35: yy.validateOKVersion(3, 'IPv6');
-          this.$ = { 'name': $$[$0-1].toLowerCase(), 'targets': $$[$0] }; 
-break;
-case 36: this.$ = $$[$0-1]; 
-break;
-case 38: this.$ = $$[$0-1]; 
-break;
-case 41: this.$ = $$[$0-2].concat(Number($$[$0])); 
-break;
-case 42: this.$ = [ $$[$0] ]; 
-break;
-case 43: yy.validateOKVersion(2, 'port ranges');
-          this.$ = $$[$0]; 
-break;
-case 44: this.$ = [ 'all' ]; 
-break;
-case 45: yy.validatePortNumber($$[$0]);
-          this.$ = Number($$[$0]); 
-break;
-case 46: this.$ = [ yy.createMaybePortRange($$[$0]) ]; 
-break;
-case 47: yy.validatePortNumber($$[$0-2]);
-          yy.validatePortNumber($$[$0]);
-          yy.validateRangeOrder($$[$0-2], $$[$0]);
-          this.$ = [{ 'start': Number($$[$0-2]), 'end': Number($$[$0]) }]; 
-break;
-case 49: this.$ = $$[$0-2].concat($$[$0]); 
-break;
-case 50: this.$ = $$[$0-1]; 
-break;
-case 52: this.$ = $$[$0-1]; 
-break;
-case 55: this.$ = $$[$0-2].concat($$[$0]); 
-break;
-case 56: this.$ = [ $$[$0-2] + ':' + $$[$0] ]; 
-break;
-case 57: this.$ = [ $$[$0] ]; 
-break;
-case 58: yy.validateOKVersion(3, 'all ICMP types');
-          this.$ = [ 'all' ]; 
-break;
-case 59: yy.validateICMPtype($$[$0]);
-          this.$ = Number($$[$0]); 
-break;
-case 60: yy.validateICMPcode($$[$0]);
-          this.$ = Number($$[$0]); 
-break;
-}
-},
-table: [{3:1,4:[1,2]},{1:[3]},{5:3,10:4,11:5,12:[1,6],15:7,17:10,18:11,19:12,20:13,21:14,22:15,23:[1,9],25:[1,8],26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{6:[1,20]},{6:[2,2],38:[2,2],39:[2,2]},{6:[2,3],38:[2,3],39:[2,3]},{13:21,15:24,17:10,18:11,19:12,20:13,21:14,22:15,23:[1,23],25:[1,22],26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{6:[2,5],38:[2,5],39:[2,5]},{6:[2,16],38:[2,16],39:[2,16]},{24:[1,25]},{6:[2,8],14:[2,8],16:[2,8],38:[2,8],39:[2,8]},{6:[2,9],14:[2,9],16:[2,9],38:[2,9],39:[2,9]},{6:[2,10],14:[2,10],16:[2,10],38:[2,10],39:[2,10]},{6:[2,11],14:[2,11],16:[2,11],38:[2,11],39:[2,11]},{6:[2,12],14:[2,12],16:[2,12],38:[2,12],39:[2,12]},{6:[2,13],14:[2,13],16:[2,13],38:[2,13],39:[2,13]},{27:[1,26],30:[1,27]},{27:[1,28],30:[1,29]},{33:[1,32],35:30,37:[1,31]},{32:33,33:[1,34]},{5:35,10:4,11:5,12:[1,6],15:7,17:10,18:11,19:12,20:13,21:14,22:15,23:[1,9],25:[1,8],26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{14:[1,36],16:[1,37]},{14:[1,38]},{24:[1,39]},{14:[2,6],16:[2,6]},{6:[2,14],38:[2,14],39:[2,14]},{6:[2,18],14:[2,18],16:[2,18],38:[2,18],39:[2,18]},{6:[2,20],14:[2,20],16:[2,20],38:[2,20],39:[2,20]},{29:[1,40]},{29:[1,41]},{6:[2,24],14:[2,24],16:[2,24],36:[1,42],38:[2,24],39:[2,24]},{6:[2,26],14:[2,26],16:[2,26],36:[2,26],38:[2,26],39:[2,26]},{6:[2,27],14:[2,27],16:[2,27],36:[2,27],38:[2,27],39:[2,27]},{6:[2,22],14:[2,22],16:[2,22],38:[2,22],39:[2,22]},{6:[2,23],14:[2,23],16:[2,23],38:[2,23],39:[2,23]},{7:43,38:[1,44],39:[1,45]},{6:[2,4],38:[2,4],39:[2,4]},{15:46,17:10,18:11,19:12,20:13,21:14,22:15,26:[1,16],28:[1,17],31:[1,19],34:[1,18]},{6:[2,17],38:[2,17],39:[2,17]},{14:[1,47]},{6:[2,19],14:[2,19],16:[2,19],38:[2,19],39:[2,19]},{6:[2,21],14:[2,21],16:[2,21],38:[2,21],39:[2,21]},{33:[1,32],35:48,37:[1,31]},{8:49,40:[1,50],43:[1,51],44:[1,52],46:[1,53]},{40:[2,28],43:[2,28],44:[2,28],46:[2,28]},{40:[2,29],43:[2,29],44:[2,29],46:[2,29]},{14:[2,7],16:[2,7]},{6:[2,15],38:[2,15],39:[2,15]},{6:[2,25],14:[2,25],16:[2,25],38:[2,25],39:[2,25]},{9:[1,54]},{12:[1,57],41:55,42:56,48:58,49:59,51:[1,61],53:[1,60]},{12:[1,57],41:62,42:63,48:58,49:59,51:[1,61],53:[1,60]},{12:[1,65],45:64,59:66,60:67,61:[1,68]},{12:[1,65],45:69,59:66,60:67,61:[1,68]},{1:[2,1]},{9:[2,30]},{9:[2,31]},{47:70,48:72,49:71,51:[1,61]},{9:[2,37]},{9:[2,39]},{33:[1,75],54:73,55:74},{23:[1,77],33:[1,78],52:76},{9:[2,32]},{9:[2,33]},{9:[2,34]},{58:79,59:81,60:80,61:[1,68]},{9:[2,51]},{9:[2,53]},{23:[1,83],33:[1,84],62:82},{9:[2,35]},{14:[1,85],50:[1,86]},{14:[1,87]},{14:[2,40],50:[2,40]},{9:[2,43],57:[1,88]},{9:[2,48],57:[2,48]},{9:[2,46],56:[1,89],57:[2,46]},{9:[2,42],14:[2,42],50:[2,42]},{9:[2,44],14:[2,44]},{9:[2,45],14:[2,45],50:[2,45]},{14:[1,90],50:[1,91]},{14:[1,92]},{14:[2,54],50:[2,54]},{9:[2,57],14:[2,57],50:[2,57],63:[1,93]},{9:[2,58],14:[2,58]},{9:[2,59],14:[2,59],50:[2,59],63:[2,59]},{9:[2,36]},{48:94,51:[1,95]},{9:[2,38]},{33:[1,75],55:96},{33:[1,97]},{9:[2,50]},{59:98,61:[1,99]},{9:[2,52]},{33:[1,101],64:100},{14:[2,41],50:[2,41]},{33:[1,78],52:76},{9:[2,49],57:[2,49]},{9:[2,47],57:[2,47]},{14:[2,55],50:[2,55]},{33:[1,84],62:82},{9:[2,56],14:[2,56],50:[2,56]},{9:[2,60],14:[2,60],50:[2,60]}],
-defaultActions: {54:[2,1],55:[2,30],56:[2,31],58:[2,37],59:[2,39],62:[2,32],63:[2,33],64:[2,34],66:[2,51],67:[2,53],69:[2,35],85:[2,36],87:[2,38],90:[2,50],92:[2,52]},
-parseError: function parseError(str, hash) {
-    throw new Error(str);
-},
-parse: function parse(input) {
-    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
-    this.lexer.setInput(input);
-    this.lexer.yy = this.yy;
-    this.yy.lexer = this.lexer;
-    this.yy.parser = this;
-    if (typeof this.lexer.yylloc == "undefined")
-        this.lexer.yylloc = {};
-    var yyloc = this.lexer.yylloc;
-    lstack.push(yyloc);
-    var ranges = this.lexer.options && this.lexer.options.ranges;
-    if (typeof this.yy.parseError === "function")
-        this.parseError = this.yy.parseError;
-    function popStack(n) {
-        stack.length = stack.length - 2 * n;
-        vstack.length = vstack.length - n;
-        lstack.length = lstack.length - n;
-    }
-    function lex() {
-        var token;
-        token = self.lexer.lex() || 1;
-        if (typeof token !== "number") {
-            token = self.symbols_[token] || token;
-        }
-        return token;
-    }
-    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
-    while (true) {
-        state = stack[stack.length - 1];
-        if (this.defaultActions[state]) {
-            action = this.defaultActions[state];
-        } else {
-            if (symbol === null || typeof symbol == "undefined") {
-                symbol = lex();
-            }
-            action = table[state] && table[state][symbol];
-        }
-        if (typeof action === "undefined" || !action.length || !action[0]) {
-            var errStr = "";
-            if (!recovering) {
-                expected = [];
-                for (p in table[state])
-                    if (this.terminals_[p] && p > 2) {
-                        expected.push("'" + this.terminals_[p] + "'");
-                    }
-                if (this.lexer.showPosition) {
-                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
-                } else {
-                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
-                }
-                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
-            }
-        }
-        if (action[0] instanceof Array && action.length > 1) {
-            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
-        }
-        switch (action[0]) {
-        case 1:
-            stack.push(symbol);
-            vstack.push(this.lexer.yytext);
-            lstack.push(this.lexer.yylloc);
-            stack.push(action[1]);
-            symbol = null;
-            if (!preErrorSymbol) {
-                yyleng = this.lexer.yyleng;
-                yytext = this.lexer.yytext;
-                yylineno = this.lexer.yylineno;
-                yyloc = this.lexer.yylloc;
-                if (recovering > 0)
-                    recovering--;
-            } else {
-                symbol = preErrorSymbol;
-                preErrorSymbol = null;
-            }
-            break;
-        case 2:
-            len = this.productions_[action[1]][1];
-            yyval.$ = vstack[vstack.length - len];
-            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
-            if (ranges) {
-                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
-            }
-            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
-            if (typeof r !== "undefined") {
-                return r;
-            }
-            if (len) {
-                stack = stack.slice(0, -1 * len * 2);
-                vstack = vstack.slice(0, -1 * len);
-                lstack = lstack.slice(0, -1 * len);
-            }
-            stack.push(this.productions_[action[1]][0]);
-            vstack.push(yyval.$);
-            lstack.push(yyval._$);
-            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
-            stack.push(newState);
-            break;
-        case 3:
-            return true;
-        }
-    }
-    return true;
-}
-};
-/* generated by jison-lex 0.1.0 */
-var lexer = (function(){
-var lexer = {
-EOF:1,
-parseError:function parseError(str, hash) {
-        if (this.yy.parser) {
-            this.yy.parser.parseError(str, hash);
-        } else {
-            throw new Error(str);
-        }
-    },
-setInput:function (input) {
-        this._input = input;
-        this._more = this._less = this.done = false;
-        this.yylineno = this.yyleng = 0;
-        this.yytext = this.matched = this.match = '';
-        this.conditionStack = ['INITIAL'];
-        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
-        if (this.options.ranges) this.yylloc.range = [0,0];
-        this.offset = 0;
-        return this;
-    },
-input:function () {
-        var ch = this._input[0];
-        this.yytext += ch;
-        this.yyleng++;
-        this.offset++;
-        this.match += ch;
-        this.matched += ch;
-        var lines = ch.match(/(?:\r\n?|\n).*/g);
-        if (lines) {
-            this.yylineno++;
-            this.yylloc.last_line++;
-        } else {
-            this.yylloc.last_column++;
-        }
-        if (this.options.ranges) this.yylloc.range[1]++;
-
-        this._input = this._input.slice(1);
-        return ch;
-    },
-unput:function (ch) {
-        var len = ch.length;
-        var lines = ch.split(/(?:\r\n?|\n)/g);
-
-        this._input = ch + this._input;
-        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
-        //this.yyleng -= len;
-        this.offset -= len;
-        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
-        this.match = this.match.substr(0, this.match.length-1);
-        this.matched = this.matched.substr(0, this.matched.length-1);
-
-        if (lines.length-1) this.yylineno -= lines.length-1;
-        var r = this.yylloc.range;
-
-        this.yylloc = {first_line: this.yylloc.first_line,
-          last_line: this.yylineno+1,
-          first_column: this.yylloc.first_column,
-          last_column: lines ?
-              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
-              this.yylloc.first_column - len
-          };
-
-        if (this.options.ranges) {
-            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
-        }
-        return this;
-    },
-more:function () {
-        this._more = true;
-        return this;
-    },
-less:function (n) {
-        this.unput(this.match.slice(n));
-    },
-pastInput:function () {
-        var past = this.matched.substr(0, this.matched.length - this.match.length);
-        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
-    },
-upcomingInput:function () {
-        var next = this.match;
-        if (next.length < 20) {
-            next += this._input.substr(0, 20-next.length);
-        }
-        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
-    },
-showPosition:function () {
-        var pre = this.pastInput();
-        var c = new Array(pre.length + 1).join("-");
-        return pre + this.upcomingInput() + "\n" + c+"^";
-    },
-next:function () {
-        if (this.done) {
-            return this.EOF;
-        }
-        if (!this._input) this.done = true;
-
-        var token,
-            match,
-            tempMatch,
-            index,
-            col,
-            lines;
-        if (!this._more) {
-            this.yytext = '';
-            this.match = '';
-        }
-        var rules = this._currentRules();
-        for (var i=0;i < rules.length; i++) {
-            tempMatch = this._input.match(this.rules[rules[i]]);
-            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
-                match = tempMatch;
-                index = i;
-                if (!this.options.flex) break;
-            }
-        }
-        if (match) {
-            lines = match[0].match(/(?:\r\n?|\n).*/g);
-            if (lines) this.yylineno += lines.length;
-            this.yylloc = {first_line: this.yylloc.last_line,
-                           last_line: this.yylineno+1,
-                           first_column: this.yylloc.last_column,
-                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
-            this.yytext += match[0];
-            this.match += match[0];
-            this.matches = match;
-            this.yyleng = this.yytext.length;
-            if (this.options.ranges) {
-                this.yylloc.range = [this.offset, this.offset += this.yyleng];
-            }
-            this._more = false;
-            this._input = this._input.slice(match[0].length);
-            this.matched += match[0];
-            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
-            if (this.done && this._input) this.done = false;
-            if (token) return token;
-            else return;
-        }
-        if (this._input === "") {
-            return this.EOF;
-        } else {
-            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
-                    {text: "", token: null, line: this.yylineno});
-        }
-    },
-lex:function lex() {
-        var r = this.next();
-        if (typeof r !== 'undefined') {
-            return r;
-        } else {
-            return this.lex();
-        }
-    },
-begin:function begin(condition) {
-        this.conditionStack.push(condition);
-    },
-popState:function popState() {
-        return this.conditionStack.pop();
-    },
-_currentRules:function _currentRules() {
-        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
-    },
-topState:function () {
-        return this.conditionStack[this.conditionStack.length-2];
-    },
-pushState:function begin(condition) {
-        this.begin(condition);
-    },
-options: {},
-performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
-
-var YYSTATE=YY_START;
-switch($avoiding_name_collisions) {
-case 0:/* skip whitespace */
-break;
-case 1:return 9;
-break;
-case 2:return 4;
-break;
-case 3:return 4;
-break;
-case 4:return 6;
-break;
-case 5:return 6;
-break;
-case 6:return 26;
-break;
-case 7:return 26;
-break;
-case 8:return 28;
-break;
-case 9:return 28;
-break;
-case 10:return 25;
-break;
-case 11:return 25;
-break;
-case 12:return 23;
-break;
-case 13:return 23;
-break;
-case 14:return 34;
-break;
-case 15:return 34;
-break;
-case 16:return 31;
-break;
-case 17:return 31;
-break;
-case 18:return 24;
-break;
-case 19:return 24;
-break;
-case 20:return 56;
-break;
-case 21:return 57;
-break;
-case 22:return 36;
-break;
-case 23:return 12;
-break;
-case 24:return 14;
-break;
-case 25:return 16;
-break;
-case 26:return 16;
-break;
-case 27:return 50;
-break;
-case 28:return 50;
-break;
-case 29:return 38;
-break;
-case 30:return 38;
-break;
-case 31:return 39;
-break;
-case 32:return 39;
-break;
-case 33:return 51;
-break;
-case 34:return 51;
-break;
-case 35:return 53;
-break;
-case 36:return 53;
-break;
-case 37:return 40;
-break;
-case 38:return 40;
-break;
-case 39:return 43;
-break;
-case 40:return 43;
-break;
-case 41:return 44;
-break;
-case 42:return 44;
-break;
-case 43:return 46;
-break;
-case 44:return 46;
-break;
-case 45:return 61;
-break;
-case 46:return 61;
-break;
-case 47:return 63;
-break;
-case 48:return 63;
-break;
-case 49:yy_.yytext = yy.tagUnescape(yy_.yytext.substr(1,yy_.yyleng-2)); return 37;
-break;
-case 50:return 27;
-break;
-case 51:return 30;
-break;
-case 52:return 29;
-break;
-case 53:return 33
-break;
-}
-},
-rules: [/^(?:\s+)/,/^(?:$)/,/^(?:FROM\b)/,/^(?:from\b)/,/^(?:TO\b)/,/^(?:to\b)/,/^(?:IP\b)/,/^(?:ip\b)/,/^(?:SUBNET\b)/,/^(?:subnet\b)/,/^(?:ANY\b)/,/^(?:any\b)/,/^(?:ALL\b)/,/^(?:all\b)/,/^(?:TAG\b)/,/^(?:tag\b)/,/^(?:VM\b)/,/^(?:vm\b)/,/^(?:VMS\b)/,/^(?:vms\b)/,/^(?:-)/,/^(?:,)/,/^(?:=)/,/^(?:\()/,/^(?:\))/,/^(?:OR\b)/,/^(?:or\b)/,/^(?:AND\b)/,/^(?:and\b)/,/^(?:BLOCK\b)/,/^(?:block\b)/,/^(?:ALLOW\b)/,/^(?:allow\b)/,/^(?:PORT\b)/,/^(?:port\b)/,/^(?:PORTS\b)/,/^(?:ports\b)/,/^(?:TCP\b)/,/^(?:tcp\b)/,/^(?:UDP\b)/,/^(?:udp\b)/,/^(?:ICMP\b)/,/^(?:icmp\b)/,/^(?:ICMP6\b)/,/^(?:icmp6\b)/,/^(?:TYPE\b)/,/^(?:type\b)/,/^(?:CODE\b)/,/^(?:code\b)/,/^(?:"(?:\\["bfnrt/()\\]|\\u[a-fA-F0-9]{4}|[^"\\])*")/,/^(?:(([0-9]){1,3})\.(([0-9]){1,3})\.(([0-9]){1,3})\.(([0-9]){1,3}))/,/^(?:([0-9a-f])*:([0-9a-f])*:[:0-9a-f]*)/,/^(?:\/([0-9]){1,3})/,/^(?:[-a-zA-Z0-9_]+)/],
-conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"inclusive":true}}
-};
-return lexer;
-})();
-parser.lexer = lexer;
-function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
-return new Parser;
-})();
-if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
-exports.parser = parser;
-exports.Parser = parser.Parser;
-exports.parse = function () { return parser.parse.apply(parser, arguments); };
-exports.main = function commonjsMain(args) {
-    if (!args[1]) {
-        console.log('Usage: '+args[0]+' FILE');
-        process.exit(1);
-    }
-    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
-    return exports.parser.parse(source);
-};
-if (typeof module !== 'undefined' && require.main === module) {
-  exports.main(process.argv.slice(1));
-}
-}
diff --git a/lib/rule.js b/lib/rule.js
index 93a26e8..65d5040 100644
--- a/lib/rule.js
+++ b/lib/rule.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2016, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * fwadm: firewall rule model
@@ -420,6 +420,7 @@ function FwRule(data, opts) {
     var dir;
 
     this.action = parsed.action;
+    this.priority = parsed.priority || 0;
     this.protocol = parsed.protocol.name;
 
     if (icmpr.test(this.protocol)) {
@@ -570,6 +571,7 @@ FwRule.prototype.raw = function () {
         action: this.action,
         enabled: this.enabled,
         from: this.from,
+        priority: this.priority,
         protocol: this.protocol,
         to: this.to,
         uuid: this.uuid,
@@ -635,6 +637,7 @@ FwRule.prototype.text = function () {
     var containsRange;
     var ports;
     var protoTxt;
+    var prioTxt = '';
     var targets = {
         from: [],
         to: []
@@ -695,7 +698,11 @@ FwRule.prototype.text = function () {
         }
     }
 
-    return util.format('FROM %s%s%s TO %s%s%s %s %s',
+    if (this.priority > 0) {
+        prioTxt += ' PRIORITY ' + this.priority.toString();
+    }
+
+    return util.format('FROM %s%s%s TO %s%s%s %s %s %s%s',
             targets.from.length > 1 ? '(' : '',
             targets.from.join(' OR '),
             targets.from.length > 1 ? ')' : '',
@@ -704,7 +711,8 @@ FwRule.prototype.text = function () {
             targets.to.length > 1 ? ')' : '',
             this.action.toUpperCase(),
             this.protocol.toLowerCase(),
-            protoTxt
+            protoTxt,
+            prioTxt
     );
 };
 
diff --git a/package.json b/package.json
index c7f727d..35976ed 100644
--- a/package.json
+++ b/package.json
@@ -29,6 +29,7 @@
   },
   "main": "lib/index.js",
   "scripts": {
+    "prepublish": "make docs parser",
     "test": "make test"
   },
   "license": "CDDL-1.0"
diff --git a/src/fwrule.jison b/src/fwrule.jison
index 096946e..d703adb 100644
--- a/src/fwrule.jison
+++ b/src/fwrule.jison
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright 2017, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * fwadm: firewall rule parser grammar
@@ -87,6 +87,8 @@ t                       {digit}{1,3}
 "type"                  return 'TYPE';
 "CODE"                  return 'CODE';
 "code"                  return 'CODE';
+"PRIORITY"              return 'PRIORITY';
+"priority"              return 'PRIORITY';
 
 \"(?:\\["bfnrt/()\\]|\\"u"[a-fA-F0-9]{4}|[^"\\])*\"  yytext = yy.tagUnescape(yytext.substr(1,yyleng-2)); return 'STRING';
 {t}'.'{t}'.'{t}'.'{t}          return 'IPV4ADDR';
@@ -102,8 +104,16 @@ t                       {digit}{1,3}
 start
     : FROM target_list TO target_list action protocol EOF
         { return { 'from': $2, 'to': $4, 'action': $5, 'protocol': $6 }; }
+    | FROM target_list TO target_list action protocol PRIORITY priolevel EOF
+        { yy.validateOKVersion(4, 'priority levels');
+          return { 'from': $2, 'to': $4, 'action': $5, 'protocol': $6, 'priority': $8 }; }
     ;
 
+priolevel
+    : WORD
+        { yy.validatePriorityLevel($1);
+          $$ = Number($1) }
+    ;
 
 /* List of targets for 'FROM' and 'TO' */
 target_list
diff --git a/src/header.js b/src/header.js
index 947407a..824df8d 100644
--- a/src/header.js
+++ b/src/header.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright 2017, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * fwadm: firewall rule parser
diff --git a/test/invalid.test.js b/test/invalid.test.js
index 1e407e5..0047b1a 100644
--- a/test/invalid.test.js
+++ b/test/invalid.test.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright 2017, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * Negative unit tests for the firewall rule object
@@ -186,7 +186,8 @@ var INVALID = [
     [ 'other ports listed with ALL first', {
         rule: 'FROM ip 10.0.0.1 TO all vms ALLOW TCP (port ALL AND port 53)' },
         'rule',
-        'Error at character 47: \'AND\', expected: \'EOF\', \')\', found: AND'
+        'Error at character 47: \'AND\', expected: ' +
+        '\'EOF\', \'PRIORITY\', \')\', found: AND'
     ],
 
     [ 'other ports listed with ALL second', {
@@ -194,6 +195,14 @@ var INVALID = [
         }, 'rule',
         'Error at character 55: \'ALL\', expected: \'WORD\', found: ALL' ],
 
+    [ 'invalid priority level: too high', {
+        rule: 'FROM tag a TO tag b ALLOW TCP PORT all PRIORITY 101' },
+        'rule', 'Priority level "101" is invalid' ],
+
+    [ 'invalid priority level: not a number', {
+        rule: 'FROM tag a TO tag b ALLOW TCP PORT all PRIORITY immediate' },
+        'rule', 'Priority level "immediate" is invalid' ],
+
     [ 'created_by: object instead of string', {
         created_by: { },
         rule: VALID_RULE
diff --git a/test/parser.test.js b/test/parser.test.js
index f2dbc35..dac1309 100644
--- a/test/parser.test.js
+++ b/test/parser.test.js
@@ -362,6 +362,22 @@ test('Invalid: Parameters for ICMP(6)', function (t) {
 });
 
 
+test('Invalid: Priority Levels', function (t) {
+    checkInvalidRules(t, [
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY -1',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY 72.1',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY 0x0',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY 0x5',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY 1e1',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY 75d',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY 101',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY 0101',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY hello',
+        'FROM any TO any ALLOW TCP PORT 1 PRIORITY "world"'
+    ]);
+});
+
+
 test('port ranges', function (t) {
     var rangeA = {
         from: [ [ 'ip', '1.2.3.4' ] ],
@@ -387,6 +403,35 @@ test('port ranges', function (t) {
 });
 
 
+test('priority levels', function (t) {
+    [
+        [ 'FROM tag a TO tag b ALLOW TCP PORT 1 PRIORITY 0', 0 ],
+        [ 'FROM tag a TO tag b ALLOW TCP PORT 1 PRIORITY 02', 2 ],
+        [ 'FROM tag a TO tag b ALLOW TCP PORT 1 PRIORITY 010', 10 ],
+        [ 'FROM tag a TO tag b ALLOW TCP PORT 1 PRIORITY 1', 1 ],
+        [ 'FROM tag a TO tag b ALLOW TCP PORT 1 PRIORITY 5', 5 ],
+        [ 'FROM tag a TO tag b ALLOW TCP PORT 1 PRIORITY 10', 10 ],
+        [ 'FROM tag a TO tag b ALLOW TCP PORT 1 PRIORITY 100', 100 ]
+    ].forEach(function (data) {
+        try {
+            t.deepEqual(parser.parse(data[0]), {
+                from: [ [ 'tag', 'a' ] ],
+                to: [ [ 'tag', 'b' ] ],
+                action: 'allow',
+                priority: data[1],
+                protocol: {
+                    name: 'tcp',
+                    targets: [ 1 ]
+                }
+            }, data[0]);
+        } catch (err) {
+            t.ifError(err);
+        }
+    });
+    t.end();
+});
+
+
 test('Parser option: maxVersion', function (t) {
     var versionFmt = 'The rule uses a feature (%s) newer than this API allows';
 
@@ -398,14 +443,18 @@ test('Parser option: maxVersion', function (t) {
         [ 'FROM tag a to ip fd00::1 ALLOW tcp PORT 80', 2, 'IPv6' ],
         [ 'FROM tag a to subnet fd00::/64 ALLOW tcp PORT 80', 2, 'IPv6' ],
         [ 'FROM tag a to tag b ALLOW icmp6 TYPE 135', 2, 'IPv6' ],
-        [ 'FROM tag a to tag b ALLOW icmp TYPE ALL', 2, 'all ICMP types' ]
+        [ 'FROM tag a to tag b ALLOW icmp TYPE ALL', 2, 'all ICMP types' ],
+
+        // Version 4 features:
+        [ 'FROM tag a to tag b ALLOW tcp PORT 80 PRIORITY 1', 3,
+          'priority levels' ]
     ].forEach(function (cfg) {
         var rule = cfg[0];
         var v = cfg[1];
 
         try {
             parser.parse(cfg[0], { maxVersion: v });
-            t.fail(util.format('Should fail in v%d: %d', v, rule));
+            t.fail(util.format('Should fail in v%d: %s', v, rule));
         } catch (err) {
             t.deepEqual(err.message, util.format(versionFmt, cfg[2]),
                 util.format('Correct error message when using v%d: ', v, rule));
diff --git a/test/rule.test.js b/test/rule.test.js
index a855982..e43a436 100644
--- a/test/rule.test.js
+++ b/test/rule.test.js
@@ -20,7 +20,7 @@
  *
  * CDDL HEADER END
  *
- * Copyright (c) 2016, Joyent, Inc. All rights reserved.
+ * Copyright (c) 2018, Joyent, Inc. All rights reserved.
  *
  *
  * Unit tests for the firewall rule object
@@ -87,6 +87,7 @@ function testTagInRules(t, unquotedOK, txtIn, txtOut, val) {
             enabled: true,
             ports: [ 80 ],
             action: 'allow',
+            priority: 0,
             protocol: 'tcp',
             uuid: rule.uuid,
             version: rule.version
@@ -179,6 +180,7 @@ test('all target types', function (t) {
         enabled: true,
         ports: [ 80 ],
         action: 'allow',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -245,6 +247,7 @@ test('any', function (t) {
         enabled: true,
         ports: [ 80 ],
         action: 'allow',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -299,6 +302,7 @@ test('all vms', function (t) {
         owner_uuid: owner,
         ports: [ 80 ],
         action: 'allow',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -340,6 +344,7 @@ test('tags', function (t) {
             tags: [],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ 80 ],
         to: {
@@ -385,6 +390,7 @@ test('tag "hasOwnProperty"', function (t) {
             tags: [],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ 80 ],
         to: {
@@ -443,6 +449,7 @@ test('multiple ports and owner_uuid', function (t) {
             wildcards: []
         },
         owner_uuid: inRule1.owner_uuid,
+        priority: 0,
         protocol: 'tcp',
         ports: [ 1002, 1052 ],
         to: {
@@ -517,6 +524,7 @@ test('icmp', function (t) {
         enabled: true,
         types: [ '8' ],
         action: 'allow',
+        priority: 0,
         protocol: 'icmp',
         uuid: rule.uuid,
         version: rule.version
@@ -569,6 +577,7 @@ test('icmp with code', function (t) {
         enabled: true,
         types: [ '8:0' ],
         action: 'allow',
+        priority: 0,
         protocol: 'icmp',
         uuid: rule.uuid,
         version: rule.version
@@ -622,6 +631,7 @@ test('icmp: multiple types', function (t) {
         enabled: true,
         types: [ '8:0', '11:0', '30' ],
         action: 'allow',
+        priority: 0,
         protocol: 'icmp',
         uuid: rule.uuid,
         version: rule.version
@@ -677,6 +687,7 @@ test('sorting: icmp codes', function (t) {
         enabled: true,
         types: [ '3:1', '3:5', '3:11', '8:0', '30', '40' ],
         action: 'allow',
+        priority: 0,
         protocol: 'icmp',
         uuid: rule.uuid,
         version: rule.version
@@ -732,6 +743,7 @@ test('sorting: icmp6 codes', function (t) {
         enabled: true,
         types: [ '3:1', '3:5', '3:11', '8:0', '30', '40' ],
         action: 'allow',
+        priority: 0,
         protocol: 'icmp6',
         uuid: rule.uuid,
         version: rule.version
@@ -777,6 +789,7 @@ test('sorting: ports', function (t) {
             tags: [],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ 6, 10, 80, 1002, 1052, 30245 ],
         to: {
@@ -825,6 +838,7 @@ test('sorting: port ranges', function (t) {
             tags: [],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ { start: 6, end: 11 }, 10, { start: 20, end: 40 },
             80, 1002, 1052, 30245 ],
@@ -877,6 +891,7 @@ test('single port range', function (t) {
             tags: [],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ { start: 50, end: 50 } ],
         to: {
@@ -928,6 +943,7 @@ test('port ALL', function (t) {
                 tags: [],
                 wildcards: []
             },
+            priority: 0,
             protocol: 'tcp',
             ports: [ 'all' ],
             to: {
@@ -976,6 +992,7 @@ test('tags: equal', function (t) {
             tags: [],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ 80 ],
         to: {
@@ -1023,6 +1040,7 @@ test('multiple tags: equal', function (t) {
             tags: [],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ 80 ],
         to: {
@@ -1075,6 +1093,7 @@ test('multiple tags: multiple values', function (t) {
             tags: [ 'some-tag' ],
             wildcards: []
         },
+        priority: 0,
         protocol: 'tcp',
         ports: [ 80 ],
         to: {
@@ -1138,6 +1157,7 @@ test('multiple tags: multiple quoted values', function (t) {
             wildcards: []
         },
         owner_uuid: owner,
+        priority: 0,
         protocol: 'tcp',
         ports: [ 80 ],
         to: {
@@ -1213,6 +1233,7 @@ test('IPv6 sources', function (t) {
         enabled: true,
         ports: [ 80 ],
         action: 'allow',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -1277,6 +1298,7 @@ test('IPv6 subnet sources', function (t) {
         enabled: true,
         ports: [ 80 ],
         action: 'allow',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -1341,6 +1363,7 @@ test('IPv6 destinations', function (t) {
         enabled: true,
         ports: [ 80 ],
         action: 'allow',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -1405,6 +1428,7 @@ test('IPv6 subnet destinations', function (t) {
         enabled: true,
         ports: [ 80 ],
         action: 'block',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -1471,6 +1495,7 @@ test('Mixed IPv4 and IPv6', function (t) {
         enabled: true,
         ports: [ 80 ],
         action: 'allow',
+        priority: 0,
         protocol: 'tcp',
         uuid: rule.uuid,
         version: rule.version
@@ -1550,7 +1575,7 @@ test('Tag names and values: Keywords', function (t) {
     var kws = [
         'tag', 'from', 'to', 'ip', 'subnet', 'vm', 'any', 'all', 'all vms',
         'vms', 'or', 'and', 'block', 'allow', 'port', 'ports', 'tcp', 'udp',
-        'icmp', 'icmp6', 'type', 'code'
+        'icmp', 'icmp6', 'type', 'code', 'priority'
     ];
 
     var check = [];
@@ -1698,3 +1723,142 @@ test('Tag names and values: Unicode whitespace characters', function (t) {
 
     checkTagsInRules(t, check);
 });
+
+
+test('Priority levels', function (t) {
+    [
+        [ 'FROM tag "a" TO tag "b" ALLOW tcp PORT 80 PRIORITY 25',
+          { priority: 25, protocol: 'tcp', ports: [ 80 ] } ],
+        [ 'FROM tag "a" TO tag "b" ALLOW tcp PORT 443 PRIORITY 49',
+          { priority: 49, protocol: 'tcp', ports: [ 443 ] } ],
+        [ 'FROM tag "a" TO tag "b" ALLOW udp PORT all PRIORITY 72',
+          { priority: 72, protocol: 'udp', ports: [ 'all' ] } ],
+        [ 'FROM tag "a" TO tag "b" ALLOW udp PORTS 1 - 9 PRIORITY 10',
+          { priority: 10, protocol: 'udp', ports: [ { start: 1, end: 9 } ] } ],
+        [ 'FROM tag "a" TO tag "b" ALLOW icmp TYPE 0 PRIORITY 15',
+          { priority: 15, protocol: 'icmp', types: [ '0' ] } ],
+        [ 'FROM tag "a" TO tag "b" ALLOW icmp TYPE 8 CODE 0 PRIORITY 20',
+          { priority: 20, protocol: 'icmp', types: [ '8:0' ] } ],
+        [ 'FROM tag "a" TO tag "b" ALLOW icmp6 TYPE all PRIORITY 100',
+          { priority: 100, protocol: 'icmp6', types: [ 'all' ] } ],
+        [ 'FROM tag "a" TO tag "b" BLOCK icmp6 TYPE 129 PRIORITY 20',
+          { priority: 20, protocol: 'icmp6',
+            types: [ '129' ], action: 'block' } ],
+        [ 'FROM tag "a" TO tag "b" ALLOW icmp6 TYPE 128 CODE 0 PRIORITY 50',
+          { priority: 50, protocol: 'icmp6', types: [ '128:0' ] } ]
+    ].forEach(function (data, i) {
+        var desc = 'Priority Levels: ' + i;
+        var ruleTxt = data[0];
+        var rule = fwrule.create({
+            rule: ruleTxt,
+            created_by: 'fwadm',
+            description: desc,
+            enabled: true,
+            version: fwrule.generateVersion()
+        });
+
+        var raw = {
+            from: {
+                ips: [],
+                subnets: [],
+                vms: [],
+                tags: ['a'],
+                wildcards: []
+            },
+            to: {
+                ips: [],
+                subnets: [],
+                vms: [],
+                tags: ['b'],
+                wildcards: []
+            },
+            created_by: 'fwadm',
+            description: desc,
+            enabled: true,
+            action: 'allow',
+            uuid: rule.uuid,
+            version: rule.version
+        };
+
+        for (var k in data[1]) {
+            raw[k] = data[1][k];
+        }
+
+        t.deepEqual(rule.raw(), raw, 'rule.raw()');
+        t.deepEqual(rule.from, raw.from, 'rule.from');
+        t.deepEqual(rule.to, raw.to, 'rule.to');
+        t.ok(!rule.allVMs, 'rule.allVMs');
+
+        var ser = {
+            created_by: 'fwadm',
+            description: desc,
+            enabled: true,
+            global: true,
+            rule: ruleTxt,
+            uuid: rule.uuid,
+            version: rule.version
+        };
+
+        t.deepEqual(rule.serialize(), ser, 'rule.serialize()');
+    });
+
+    t.end();
+});
+
+
+test('Priority level 0 is implicit', function (t) {
+    var desc = 'Prio Level 0';
+    var ruleTxt = 'FROM tag "a" TO tag "b" ALLOW tcp PORT 80 PRIORITY 0';
+    var rule = fwrule.create({
+        rule: ruleTxt,
+        created_by: 'fwadm',
+        description: desc,
+        enabled: true,
+        version: fwrule.generateVersion()
+    });
+
+    var raw = {
+        from: {
+            ips: [],
+            subnets: [],
+            vms: [],
+            tags: ['a'],
+            wildcards: []
+        },
+        to: {
+            ips: [],
+            subnets: [],
+            vms: [],
+            tags: ['b'],
+            wildcards: []
+        },
+        created_by: 'fwadm',
+        description: desc,
+        enabled: true,
+        ports: [ 80 ],
+        action: 'allow',
+        priority: 0,
+        protocol: 'tcp',
+        uuid: rule.uuid,
+        version: rule.version
+    };
+
+    t.deepEqual(rule.raw(), raw, 'rule.raw()');
+    t.deepEqual(rule.from, raw.from, 'rule.from');
+    t.deepEqual(rule.to, raw.to, 'rule.to');
+    t.ok(!rule.allVMs, 'rule.allVMs');
+
+    var ser = {
+        created_by: 'fwadm',
+        description: desc,
+        enabled: true,
+        global: true,
+        rule: 'FROM tag "a" TO tag "b" ALLOW tcp PORT 80',
+        uuid: rule.uuid,
+        version: rule.version
+    };
+
+    t.deepEqual(rule.serialize(), ser, 'rule.serialize()');
+
+    t.end();
+});
diff --git a/tools/gen-rr-svgs.js b/tools/gen-rr-svgs.js
index bb8e125..eea937a 100755
--- a/tools/gen-rr-svgs.js
+++ b/tools/gen-rr-svgs.js
@@ -53,7 +53,9 @@ var ruleDiagram = Diagram(
   Choice(0,
     Terminal('ALLOW'),
     Terminal('BLOCK')),
-  NonTerminal('protocol'));
+  NonTerminal('protocol'),
+  Optional(
+    Sequence(Terminal('PRIORITY'), NonTerminal('priolevel')), 'skip'));
 
 var targetListDiagram = Diagram(
     Choice(0,
