From cb39351abc621306eb064263ccc027089fb807aa Mon Sep 17 00:00:00 2001
From: Robert Mustacchi <rm@joyent.com>
Date: Thu, 25 Aug 2016 22:52:24 +0000
Subject: [PATCH] OS-5629 illumos-joyent needs to do its check_rtime part
 OS-5622 libsmartsshd needlessly links to -ldoor OS-5623 find_elf.pl needs to
 use platform perl OS-5624 want option for alternate check_rtime exception
 file

---
 exception_lists/check_rtime           | 17 ++++++++++++++++-
 usr/src/lib/libsmartsshd/Makefile.com |  2 +-
 usr/src/tools/scripts/find_elf.pl     |  2 +-
 usr/src/tools/scripts/nightly.sh      | 21 ++++++++++++++++++++-
 4 files changed, 38 insertions(+), 4 deletions(-)

diff --git a/exception_lists/check_rtime b/exception_lists/check_rtime
index 3f1e2a7ab1..33190b7980 100644
--- a/exception_lists/check_rtime
+++ b/exception_lists/check_rtime
@@ -233,4 +233,19 @@ NOSYMSORT	usr/lib/amd64/libfru\.so\.1			# C++
 # unneeded library.
 UNREF_OBJ	lib/(libdevinfo|libcfgadm)\.so\.1; .*\ of\ .*SUNW,Netra-CP2300/lib/libprtdiag_psr\.so\.1
 
-
+# These commands are still built; however, they require libraries which
+# we don't ship and these programs aren't shipped themselves. This is a
+# Joyent specific addition. These exist because we don't have an
+# exception to deal with the fact that we have -zdefs issues.
+SKIP	^usr/bin/rmmount$
+SKIP	^usr/bin/tpmadm$
+SKIP	^usr/bin/volcheck$
+SKIP	^usr/bin/volrmmount$
+SKIP	^usr/lib/rmvolmgr$
+
+# The lx brand's VDSO object is a bit special. Its construction leads us
+# to end up having several symbols for shared objects all at the same
+# address of zero. We should root cause this further and either add an
+# explicit exception for this kind of thing or better, fix the issues
+# it's upset about.
+SKIP	^usr/lib/brand/MACH(lx)/lx_vdso\.so\.1$
diff --git a/usr/src/lib/libsmartsshd/Makefile.com b/usr/src/lib/libsmartsshd/Makefile.com
index 914aab055b..c2f8c60e2a 100644
--- a/usr/src/lib/libsmartsshd/Makefile.com
+++ b/usr/src/lib/libsmartsshd/Makefile.com
@@ -34,7 +34,7 @@ SRCS =	$(OBJECTS:%.o=$(SRCDIR)/%.c)
 
 CPPFLAGS +=	-I$(SRCDIR) -D_REENTRANT -D_FILE_OFFSET_BITS=64
 LIBS =		$(DYNLIB) $(LINTLIB)
-LDLIBS +=	-lc -ldoor
+LDLIBS +=	-lc
 
 $(LINTLIB) :=	SRCS=	$(SRCDIR)/$(LINTSRC)
 
diff --git a/usr/src/tools/scripts/find_elf.pl b/usr/src/tools/scripts/find_elf.pl
index 51fa5e15f1..341d7abdcb 100644
--- a/usr/src/tools/scripts/find_elf.pl
+++ b/usr/src/tools/scripts/find_elf.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!/usr/perl5/bin/perl -w
 #
 # CDDL HEADER START
 #
diff --git a/usr/src/tools/scripts/nightly.sh b/usr/src/tools/scripts/nightly.sh
index 842c63a295..e7f785069c 100644
--- a/usr/src/tools/scripts/nightly.sh
+++ b/usr/src/tools/scripts/nightly.sh
@@ -1767,6 +1767,18 @@ if [ `expr $LDVER \< 422` -eq 1 ]; then
 	    tee -a $build_environ_file >> $LOGFILE
 fi
 
+#
+# Check that if we have a check_rtime exception list specified, we can access
+# it.
+#
+if [[ -n $CHECK_RTIME_EXLIST && ! -f $CHECK_RTIME_EXLIST ]]; then
+	echo "CHECK_RTIME_EXLIST variable was set, but file does not exist" | \
+		tee -a $build_environ_file >> $LOGFILE
+	echo "CHECK_RTIME_EXLIST was set to $CHECK_RTIME_EXLIST" | \
+		tee -a $build_environ_file >> $LOGFILE
+	exit 1
+fi
+
 #
 # Build and use the workspace's tools if requested
 #
@@ -1977,9 +1989,16 @@ if [[ ($build_ok = y) && (($A_FLAG = y) || ($r_FLAG = y)) ]]; then
 		else
 			rtime_sflag="-s"
 		fi
+
+		if [[ -n $CHECK_RTIME_EXLIST ]]; then
+			rtime_eflag="-e $CHECK_RTIME_EXLIST"
+		else
+			rtime_eflag=""
+		fi
+		echo $rtime_eflag
 		check_rtime -i -m -v $rtime_sflag -o -w $elf_ddir \
 			-D object_list  -f object_list -E runtime.err \
-			-I runtime.attr.raw
+			-I runtime.attr.raw $rtime_eflag
 		if (( $? != 0 )); then
 			build_extras_ok=n
 		fi
-- 
2.21.0

