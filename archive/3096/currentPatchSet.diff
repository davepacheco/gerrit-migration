From b90ebff225fc60d39168ae4a83df9915cb889c9a Mon Sep 17 00:00:00 2001
From: Robert Mustacchi <rm@joyent.com>
Date: Mon, 11 Dec 2017 23:08:40 +0000
Subject: [PATCH] OS-6515 Update openssl1x to openssl 1.0.2n OS-6516 openssl1x
 symbol check is broken Reviewed by: Cody Mello <melloc@joyent.com> Reviewed
 by: Jerry Jelinek <jerry.jelinek@joyent.com> Reviewed by: Patrick Mooney
 <patrick.mooney@joyent.com> Approved by: Jerry Jelinek
 <jerry.jelinek@joyent.com>

---
 openssl1x/Makefile                            |  19 ++---
 ...4-bad-uninitialized-variable-warning.patch |  28 +++++++
 openssl1x/openssl-1.0.2k.tar.gz               | Bin 5309236 -> 0 bytes
 openssl1x/openssl-1.0.2n.tar.gz               | Bin 0 -> 5375802 bytes
 openssl1x/sunw_prefix.h                       |  16 ++++
 openssl1x/tools/checksyms.bash                |  77 ++++++++++++++++++
 6 files changed, 126 insertions(+), 14 deletions(-)
 create mode 100644 openssl1x/Patches/0007-Fix-gcc-4.4.4-bad-uninitialized-variable-warning.patch
 delete mode 100644 openssl1x/openssl-1.0.2k.tar.gz
 create mode 100644 openssl1x/openssl-1.0.2n.tar.gz
 create mode 100755 openssl1x/tools/checksyms.bash

diff --git a/openssl1x/Makefile b/openssl1x/Makefile
index 85a5a68..946ad6d 100644
--- a/openssl1x/Makefile
+++ b/openssl1x/Makefile
@@ -19,10 +19,10 @@
 # CDDL HEADER END
 #
 # Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
-# Copyright 2016 Joyent, Inc.
+# Copyright (c) 2017, Joyent, Inc.
 #
 
-VER = openssl-1.0.2k
+VER = openssl-1.0.2n
 LIBVER =	1.0.0
 
 include ../Makefile.defs
@@ -157,18 +157,9 @@ $(VER.64)/configure: $(VER.64)/Configure Makefile $(PKCS11.64) \
 
 all: all_autoconf
 
-check: $(CHECK_LIBS:%=%.check)
-
-%.check: %
-	syms="$$(/usr/bin/nm -ph $< | \
-	    awk '$$2 == T && $$3 != _init && $$3 != _fini { print $$3 }' | \
-	    grep -v ^sunw_)"; \
-	if [[ -n "$$syms" ]]; then \
-		echo "Unprefixed symbols found in $<: $$syms"; \
-		exit 1; \
-	else \
-		touch $@; \
-	fi
+.PHONY: check
+check: $(CHECK_LIBS)
+	./tools/checksyms.bash $(CHECK_LIBS)
 
 $(CHECK_LIBS): all
 
diff --git a/openssl1x/Patches/0007-Fix-gcc-4.4.4-bad-uninitialized-variable-warning.patch b/openssl1x/Patches/0007-Fix-gcc-4.4.4-bad-uninitialized-variable-warning.patch
new file mode 100644
index 0000000..bacef10
--- /dev/null
+++ b/openssl1x/Patches/0007-Fix-gcc-4.4.4-bad-uninitialized-variable-warning.patch
@@ -0,0 +1,28 @@
+From 88693b231f8bacd4df1dbe84d25c90d7242fc905 Mon Sep 17 00:00:00 2001
+From: Robert Mustacchi <rm@joyent.com>
+Date: Mon, 11 Dec 2017 23:21:15 +0000
+Subject: [PATCH 7/7] Fix gcc 4.4.4 bad uninitialized variable warning
+
+gcc 4.4.4 misdiagnoses the dblen variable as being uninitialized. Based
+on analysis, that is not the case. We opt to deal with this by doing a
+token initialization such that we don't gag the warning.
+---
+ crypto/rsa/rsa_oaep.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/crypto/rsa/rsa_oaep.c b/crypto/rsa/rsa_oaep.c
+index 9a01b4a..9def7a0 100644
+--- a/crypto/rsa/rsa_oaep.c
++++ b/crypto/rsa/rsa_oaep.c
+@@ -120,7 +120,7 @@ int RSA_padding_check_PKCS1_OAEP_mgf1(unsigned char *to, int tlen,
+                                       int plen, const EVP_MD *md,
+                                       const EVP_MD *mgf1md)
+ {
+-    int i, dblen, mlen = -1, one_index = 0, msg_index;
++    int i, dblen = 0, mlen = -1, one_index = 0, msg_index;
+     unsigned int good, found_one_byte;
+     const unsigned char *maskedseed, *maskeddb;
+     /*
+-- 
+2.7.3
+
diff --git a/openssl1x/openssl-1.0.2k.tar.gz b/openssl1x/openssl-1.0.2k.tar.gz
deleted file mode 100644
index d22a170..0000000
Binary files a/openssl1x/openssl-1.0.2k.tar.gz and /dev/null differ
diff --git a/openssl1x/openssl-1.0.2n.tar.gz b/openssl1x/openssl-1.0.2n.tar.gz
new file mode 100644
index 0000000..dd27283
Binary files /dev/null and b/openssl1x/openssl-1.0.2n.tar.gz differ
diff --git a/openssl1x/sunw_prefix.h b/openssl1x/sunw_prefix.h
index db27f35..60e3a70 100644
--- a/openssl1x/sunw_prefix.h
+++ b/openssl1x/sunw_prefix.h
@@ -97,6 +97,7 @@
 #pragma redefine_extname	aesni_xts_encrypt sunw_aesni_xts_encrypt
 #pragma redefine_extname	app_pkey_methods sunw_app_pkey_methods
 #pragma redefine_extname	asn1_add_error sunw_asn1_add_error
+#pragma	redefine_extname	asn1_item_combine_free sunw_asn1_item_combine_free
 #pragma redefine_extname	ASN1_add_oid_module sunw_ASN1_add_oid_module
 #pragma redefine_extname	ASN1_ANY_it sunw_ASN1_ANY_it
 #pragma redefine_extname	ASN1_BIT_STRING_check sunw_ASN1_BIT_STRING_check
@@ -1042,6 +1043,7 @@
 #pragma redefine_extname	custom_ext_parse sunw_custom_ext_parse
 #pragma redefine_extname	custom_exts_copy sunw_custom_exts_copy
 #pragma redefine_extname	custom_exts_free sunw_custom_exts_free
+#pragma redefine_extname	custom_exts_copy_flags sunw_custom_exts_copy_flags
 #pragma redefine_extname	d2i_ACCESS_DESCRIPTION sunw_d2i_ACCESS_DESCRIPTION
 #pragma redefine_extname	d2i_ASN1_BIT_STRING sunw_d2i_ASN1_BIT_STRING
 #pragma redefine_extname	d2i_ASN1_BMPSTRING sunw_d2i_ASN1_BMPSTRING
@@ -2258,6 +2260,20 @@
 #pragma redefine_extname	EVP_PKEY_verify_recover_init sunw_EVP_PKEY_verify_recover_init
 #pragma redefine_extname	EVP_PKEY2PKCS8 sunw_EVP_PKEY2PKCS8
 #pragma redefine_extname	EVP_PKEY2PKCS8_broken sunw_EVP_PKEY2PKCS8_broken
+#pragma redefine_extname	EVP_PKEY_meth_get_cleanup sunw_EVP_PKEY_meth_get_cleanup
+#pragma redefine_extname	EVP_PKEY_meth_get_copy sunw_EVP_PKEY_meth_get_copy
+#pragma redefine_extname	EVP_PKEY_meth_get_ctrl sunw_EVP_PKEY_meth_get_ctrl
+#pragma redefine_extname	EVP_PKEY_meth_get_decrypt sunw_EVP_PKEY_meth_get_decrypt
+#pragma redefine_extname	EVP_PKEY_meth_get_derive sunw_EVP_PKEY_meth_get_derive
+#pragma redefine_extname	EVP_PKEY_meth_get_encrypt sunw_EVP_PKEY_meth_get_encrypt
+#pragma redefine_extname	EVP_PKEY_meth_get_init sunw_EVP_PKEY_meth_get_init
+#pragma redefine_extname	EVP_PKEY_meth_get_keygen sunw_EVP_PKEY_meth_get_keygen
+#pragma redefine_extname	EVP_PKEY_meth_get_paramgen sunw_EVP_PKEY_meth_get_paramgen
+#pragma redefine_extname	EVP_PKEY_meth_get_sign sunw_EVP_PKEY_meth_get_sign
+#pragma redefine_extname	EVP_PKEY_meth_get_signctx sunw_EVP_PKEY_meth_get_signctx
+#pragma redefine_extname	EVP_PKEY_meth_get_verify sunw_EVP_PKEY_meth_get_verify
+#pragma redefine_extname	EVP_PKEY_meth_get_verify_recover sunw_EVP_PKEY_meth_get_verify_recover
+#pragma redefine_extname	EVP_PKEY_meth_get_verifyctx sunw_EVP_PKEY_meth_get_verifyctx
 #pragma redefine_extname	EVP_rc2_40_cbc sunw_EVP_rc2_40_cbc
 #pragma redefine_extname	EVP_rc2_64_cbc sunw_EVP_rc2_64_cbc
 #pragma redefine_extname	EVP_rc2_cbc sunw_EVP_rc2_cbc
diff --git a/openssl1x/tools/checksyms.bash b/openssl1x/tools/checksyms.bash
new file mode 100755
index 0000000..5ba85ee
--- /dev/null
+++ b/openssl1x/tools/checksyms.bash
@@ -0,0 +1,77 @@
+#!/usr/bin/bash
+#
+# This file and its contents are supplied under the terms of the
+# Common Development and Distribution License ("CDDL"), version 1.0.
+# You may only use this file in accordance with the terms of version
+# 1.0 of the CDDL.
+#
+# A full copy of the text of the CDDL should have accompanied this
+# source.  A copy of the CDDL is also available via the Internet at
+# http://www.illumos.org/license/CDDL.
+#
+
+#
+# Copyright (c) 2017, Joyent, Inc.
+#
+
+#
+# Symbol check logic for verifying that there are no new leaked symbols.
+#
+
+#
+# These are functions and symbols that are allowed to be there due to
+# the ABI.
+#
+ALLOWED_FUNCS="_init _fini"
+ALLOWED_SYMS="_DYNAMIC _edata _end _etext _fini _GLOBAL_OFFSET_TABLE_"
+ALLOWED_SYMS="$ALLOWED_SYMS _init _lib_version _PROCEDURE_LINKAGE_TABLE_"
+
+NM=/usr/bin/nm
+PREFIX="^sunw_"
+BAD_COUNT=0
+
+function check()
+{
+	local lib=$1
+	local nmval=$2
+	local allowed=$3
+	local warntype=$4
+	local addr stype name match
+
+	while read addr stype name; do
+		if [[ "$stype" != $nmval ]]; then
+			continue
+		fi
+
+		if [[ "$name" =~ $PREFIX ]]; then
+			continue;
+		fi
+
+		match=
+		for sym in $allowed; do
+			if [[ "$sym" == "$name" ]]; then
+				match="yes"
+				break;
+			fi
+		done
+
+		if [[ -n "$match" ]]; then
+			continue
+		fi
+
+		((BAD_COUNT++))
+		echo "Unprefixed $warntype in $lib: $name"
+	done < <($NM -ph $lib)
+}
+
+for f in $*; do
+	check $f "T" "$ALLOWED_FUNCS" "function"
+	check $f "D" "$ALLOWED_SYMS" "symbol"
+done
+
+if [[ $BAD_COUNT -ne 0 ]]; then
+	echo "Unprefixed symbols exist, terminating"
+	exit 1
+fi
+
+exit 0
-- 
2.21.0

