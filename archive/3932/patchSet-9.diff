From c20192eb788f5597e987901df1574b91e10a303b Mon Sep 17 00:00:00 2001
From: Jorge Schrauwen <sjorge@blackdot.be>
Date: Thu, 10 May 2018 10:57:03 +0000
Subject: [PATCH] OS-6926 vmadm should support ahci disks for bhyve

---
 src/vm/man/vmadm.1m.md           |  2 +-
 src/vm/node_modules/VM.js        | 28 +++++++++++++++++++---------
 src/vm/node_modules/proptable.js |  6 ++++--
 src/vm/sbin/vmadm.js             |  5 +++--
 4 files changed, 27 insertions(+), 14 deletions(-)

diff --git a/src/vm/man/vmadm.1m.md b/src/vm/man/vmadm.1m.md
index 7747905c..d8b252c0 100644
--- a/src/vm/man/vmadm.1m.md
+++ b/src/vm/man/vmadm.1m.md
@@ -904,7 +904,7 @@ tab-complete UUIDs rather than having to type them out for every command.
         use virtio. If not, use ide or scsi depending on the drivers in your
         guest.
 
-        type: string (one of ['virtio','ide','scsi'])
+        type: string (one of ['virtio','ide','scsi'] for KVM or one of ['virtio','ahci'] for BHYVE)
         vmtype: KVM
         listable: yes (see above)
         create: yes
diff --git a/src/vm/node_modules/VM.js b/src/vm/node_modules/VM.js
index 416316d5..3930b5cb 100644
--- a/src/vm/node_modules/VM.js
+++ b/src/vm/node_modules/VM.js
@@ -280,12 +280,6 @@ function ensureLogging(side_effects)
     start_logging();
 }
 
-exports.DISK_MODELS = [
-    'virtio',
-    'ide',
-    'scsi'
-];
-
 exports.VGA_TYPES = [
     'cirrus',
     'std',
@@ -4648,10 +4642,12 @@ function checkPayloadProperties(payload, vmobj, log, callback)
                             + 'disk: ' + JSON.stringify(zvol)));
                         return;
                     }
-                } else if (VM.DISK_MODELS.indexOf(zvol.model) === -1) {
+                } else if (BRAND_OPTIONS[brand].features.disk_models.indexOf(
+                    zvol.model) === -1) {
                     callback(new Error('"' + zvol.model + '"'
-                        + ' is not a valid disk model. Valid are: '
-                        + VM.DISK_MODELS.join(',')));
+                        + ' is not a valid disk model for ' + brand
+                        + ' brand. Valid are: '
+                        + BRAND_OPTIONS[brand].features.disk_models.join(',')));
                     return;
                 }
             }
@@ -4676,6 +4672,7 @@ function checkPayloadProperties(payload, vmobj, log, callback)
                         callback(new Error('invalid compression type for '
                             + 'disk, must be one of: '
                             + VM.COMPRESSION_TYPES.join(', ')));
+                        return;
                     }
                 }
 
@@ -4684,6 +4681,19 @@ function checkPayloadProperties(payload, vmobj, log, callback)
                         + 'after creation'));
                     return;
                 }
+
+                // Disk model must also be checked for update_disks
+                if (zvol.hasOwnProperty('model')) {
+                    if (BRAND_OPTIONS[brand].features.disk_models.indexOf(
+                        zvol.model) === -1) {
+                        callback(new Error('"' + zvol.model + '"'
+                            + ' is not a valid disk model for ' + brand
+                            + ' brand. Valid are: '
+                            + BRAND_OPTIONS[brand].features.disk_models.join(
+                                ',')));
+                        return;
+                    }
+                }
             }
         }
     }
diff --git a/src/vm/node_modules/proptable.js b/src/vm/node_modules/proptable.js
index 03107e97..9c77708e 100644
--- a/src/vm/node_modules/proptable.js
+++ b/src/vm/node_modules/proptable.js
@@ -2107,7 +2107,8 @@ exports.brand_options = {
             'type': 'BHYVE',
             'var_svc_provisioning': true,
             'wait_for_hwsetup': false,
-            'zoneroot_image_types': ['zone-dataset']
+            'zoneroot_image_types': ['zone-dataset'],
+            'disk_models': ['virtio', 'ahci']
         }
     }, 'joyent': {
         'features': {
@@ -2154,7 +2155,8 @@ exports.brand_options = {
             'use_vmadmd': true,
             'var_svc_provisioning': true,
             'wait_for_hwsetup': true,
-            'zoneroot_image_types': ['zone-dataset']
+            'zoneroot_image_types': ['zone-dataset'],
+            'disk_models': ['virtio', 'scsi', 'ide']
         }
     }, 'lx': {
         'features': {
diff --git a/src/vm/sbin/vmadm.js b/src/vm/sbin/vmadm.js
index f6043a54..d8095b5b 100755
--- a/src/vm/sbin/vmadm.js
+++ b/src/vm/sbin/vmadm.js
@@ -333,9 +333,10 @@ function parseStartArgs(args)
                 if (!model || !p || p.length === 0 || model.length === 0) {
                     usage('Parameter to ' + key + ' must be: path,model');
                 }
-                if (VM.DISK_MODELS.indexOf(model) === -1) {
+                if (BRAND_OPTIONS[brand].features.disk_models.indexOf(
+                    model) === -1) {
                     usage('Invalid model "' + model + '": model must be one '
-                        + 'of: ' + VM.DISK_MODELS.join(','));
+                        + 'of: ' + VM.KVM_DISK_MODELS.join(','));
                 }
                 if (!extra.disks) {
                     extra.disks = [];
-- 
2.21.0

