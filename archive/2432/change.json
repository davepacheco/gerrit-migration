{"project":"joyent/manta-muskie","branch":"master","id":"I3f4231c94997db9472fb1b76cb0f01d1e9b581c5","number":"2432","subject":"MANTA-3220 MPU shark selection should try to connect to several sets of sharks","owner":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"url":"https://cr.joyent.us/2432","commitMessage":"MANTA-3220 MPU shark selection should try to connect to several sets of sharks\n","createdOn":1503097223,"lastUpdated":1546452899,"open":true,"status":"NEW","comments":[{"timestamp":1503097223,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 1."},{"timestamp":1503097257,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1503097302,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 2."},{"timestamp":1503097398,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1503341511,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Patch Set 2:\n\n(3 comments)"},{"timestamp":1503357404,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 3."},{"timestamp":1503357438,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1503358891,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 4."},{"timestamp":1503358934,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1503532490,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 5."},{"timestamp":1503532528,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5: CI-Testing-1\n\n(4 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1503594933,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 6."},{"timestamp":1503594962,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 6: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1503595188,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 6:\n\n(2 comments)"},{"timestamp":1503598427,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 6:\n\n(8 comments)"},{"timestamp":1503619650,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 6:\n\n(4 comments)"},{"timestamp":1503620745,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 6:\n\n(1 comment)"},{"timestamp":1503621330,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 6:\n\n(1 comment)"},{"timestamp":1503624980,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 6:\n\n(1 comment)"},{"timestamp":1503699471,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 7."},{"timestamp":1503699499,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 7: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1504204686,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 6:\n\n(9 comments)\n\nThanks for the changes.  I think the top-level function is a lot easier to understand now."},{"timestamp":1504295139,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 7:\n\n(5 comments)"},{"timestamp":1504298741,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 7:\n\n(1 comment)"},{"timestamp":1504299669,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 7:\n\n(2 comments)"},{"timestamp":1504306322,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 8."},{"timestamp":1504306350,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 8: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1504306921,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 9."},{"timestamp":1504306954,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 9: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1504915503,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 9:\n\nI have updated the testing notes for the latest patch set of this change."},{"timestamp":1504918213,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 10."},{"timestamp":1504918247,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 10: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1505253521,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 10:\n\n(5 comments)\n\nThanks."},{"timestamp":1505323141,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 10:\n\n(5 comments)"},{"timestamp":1505330746,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 10:\n\n(1 comment)"},{"timestamp":1505341465,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 11."},{"timestamp":1505341508,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 11: CI-Testing-1\n\n(1 comment)\n\n\"make check\" exited with status 2"},{"timestamp":1505341790,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 12."},{"timestamp":1505341823,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 12: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1505426216,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 10:\n\n(3 comments)\n\nThanks -- I think this is a lot cleaner with `tryEach`."},{"timestamp":1505509505,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 12:\n\n(2 comments)"},{"timestamp":1505519363,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 13."},{"timestamp":1505519392,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 13: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1505519508,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 14."},{"timestamp":1505519542,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 14: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1506127765,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 14:\n\n(1 comment)\n\nI have added testing notes that cover the major cases that result in this diff being invoked. Would appreciate if either of you could take a look at this for CR and/or IA! Thanks to both of you for helping me with this change!"},{"timestamp":1506639328,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 12:\n\n(3 comments)"},{"timestamp":1506707213,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 15."},{"timestamp":1506707252,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 15: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1506707451,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 16."},{"timestamp":1506707483,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 16: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1507159058,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 16:\n\n(4 comments)\n\nThis is looking good.  I noticed a few more things as I look at this with fresher eyes."},{"timestamp":1507338404,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 16:\n\n(6 comments)"},{"timestamp":1507341501,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 17."},{"timestamp":1507341529,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 17: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1508187441,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 17:\n\n(2 comments)"},{"timestamp":1508279126,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Patch Set 17:\n\n(2 comments)"},{"timestamp":1508282187,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Uploaded patch set 18."},{"timestamp":1508282229,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 18: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1510098461,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 18: Code-Review+1"},{"timestamp":1546452899,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 18:\n\n\"make check\" passed ok"}],"currentPatchSet":{"number":"18","revision":"3f4231c94997db9472fb1b76cb0f01d1e9b581c5","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/18","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1508282187,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1508282229,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1510098461,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":134,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":136,"sizeDeletions":-7},"patchSets":[{"number":"1","revision":"fc782623707989b6b5a6fbd1b1224665ea094790","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/1","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1503097223,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1503097257,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":50,"deletions":-6}],"sizeInsertions":50,"sizeDeletions":-6},{"number":"2","revision":"92455f9f7219d20ab5d5d1012c4c74ff05e41201","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/2","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1503097302,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1503097398,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":0,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"Was there also a cueball change associated with this?"},{"file":"lib/uploads/create.js","line":65,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"I think we probably want to leave this message at \"debug\" level. Same with the messages below. (By default, we log anything at level WARN or above.)"},{"file":"lib/uploads/create.js","line":68,"reviewer":{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},"message":"I realize this is mostly drafted off of the code in lib/obj.js, but I\u0027ve always found that code a bit hard to follow. For the sake of readability, what do you think of restructuring this to not use an immediately invoked function expression, and instead define the attempt() function first, then invoke it?"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":50,"deletions":-6}],"sizeInsertions":50,"sizeDeletions":-6},{"number":"3","revision":"a873ca87aa8413a4ad91939c7c1393fcf9cb469c","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/3","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1503357404,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1503357438,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":53,"deletions":-5},{"file":"make_stamps/node-modules","type":"ADDED","insertions":0,"deletions":0}],"sizeInsertions":53,"sizeDeletions":-5},{"number":"4","revision":"2e4d8c815c1603684c4d6f59d1011902cab9f5c0","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/4","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1503358891,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1503358934,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":53,"deletions":-5}],"sizeInsertions":53,"sizeDeletions":-5},{"number":"5","revision":"03aa018a00f0a35ca9fdbaa6316aa97d70d84aa2","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/5","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1503532490,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1503532528,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":44,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"warning: undeclared identifier: req"},{"file":"lib/uploads/create.js","line":46,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"warning: undeclared identifier: req"},{"file":"lib/uploads/create.js","line":49,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"warning: undeclared identifier: req"},{"file":"lib/uploads/create.js","line":71,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"warning: undeclared identifier: req"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":73,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":74,"sizeDeletions":-6},{"number":"6","revision":"3c30e9b4c01b56bc466c2a1da42f7fa0387a00db","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/6","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1503594933,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1503594962,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":67,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Spoke to Alex Wilson about this: apparently invoking pool.claim will register as network activity with cueball which will double the time between subsequent keep-alive\u0027s for this particular shark. We agreed that checking the state of the running pool in this manner is preferable because it doesn\u0027t result in cueball state side effects."},{"file":"lib/uploads/create.js","line":67,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Are these pool states documented, committed interfaces from Cueball?"},{"file":"lib/uploads/create.js","line":67,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"They are the states that I got from a conversation with Alex but I didn\u0027t check against the docs and source. Having done so now, I don\u0027t see a \u0027waiting\u0027 state: https://joyent.github.io/node-cueball/#state_transitions. Given that we\u0027re either looking for a pool that has been connected for a long time, or we\u0027ve just recently created one, it probably makes the most sense to:\n\n- Accept \u0027running\u0027 pools\n- Reject \u0027failed\u0027 pools\n- Install a state-changed handler for pools that are in the \u0027starting\u0027 state and see if they eventually get to the \u0027running\u0027 state, at which point we have a connection to the shark."},{"file":"lib/uploads/create.js","line":67,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It would be nice to confirm that the states are a committed part of the cueball interface (i.e., that they\u0027re guaranteed not to change without a major version bump)."},{"file":"lib/uploads/create.js","line":75,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"What kind of errors can happen here?\n\nHow do we avoid catching a TypeError or other programmer error here?\n\nDo we want to return here?"},{"file":"lib/uploads/create.js","line":75,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"The only error that can occur here is that cueball has found that there already exists a pool for the host. Alex said this was the behavior he wanted for the API. This kind of error shouldn\u0027t happen in this context, so I guess based on the error handling link you sent me, we shouldn\u0027t try/catch it but crash instead?"},{"file":"lib/uploads/create.js","line":75,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Yeah, I think that\u0027s right."},{"file":"lib/uploads/create.js","line":78,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I imagine this belongs at L76?"},{"file":"lib/uploads/create.js","line":78,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"right."},{"file":"lib/uploads/create.js","line":82,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"We generally try to make it so that a function is always synchronous or always asynchronous, not both.  There\u0027s a lot more information about this in the Node Error Handling Guidelines:\nhttps://www.joyent.com/node-js/production/design/errors\n\nI think you want to wrap these callback calls in a call to `setImmediate`."},{"file":"lib/uploads/create.js","line":86,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"this callback call should not be here. I accidentally included it here from previous debugging. will remove it."},{"file":"lib/uploads/create.js","line":96,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It\u0027s idiomatic to leave out subsequent arguments when you\u0027re passing an Error to the callback.  (i.e., drop the \"null\")."},{"file":"lib/uploads/create.js","line":101,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Do we want to do anything about the pool that\u0027s now half-created?"},{"file":"lib/uploads/create.js","line":102,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It seems strange that we\u0027re invoking the callback multiple times in this case.  What are trying to do here?"},{"file":"lib/uploads/create.js","line":102,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"The callback should only be called once, see the above comment for why currently it\u0027s being called twice."},{"file":"lib/uploads/create.js","line":102,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"I see now how it\u0027s called twice, will introduce a fix in the next patchset."},{"file":"lib/uploads/create.js","line":111,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"This is all subjective, but: this code generally looks pretty similar to some of the existing code, which is obviously understandable, but think the existing code\u0027s structure is pretty muddled.  I think it would be better to separate the levels of abstraction:\n\n  - try \u003coperation\u003e up to 3 times on different sets of arguments (analogous to vasync.tryEach, although that currently has a serious issue that we\u0027re in the process of resolving)\n  - the existing forEachParallel\n  - the tryShark operation\n\nAs it is now, these concerns are all intermixed in this 100 or so LOC.  (Again, I realize this structure mirrors existing code.)\n\nI think it would also help if tryShark were a separate top-level function with a clear explanation of the \"shark\" argument and what values are passed to the callback.  It might help to call it something more explicit like ensureSharkHasPool()."},{"file":"lib/uploads/create.js","line":111,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"With regards to making tryShark, or ensureSharkHasPool a top level function, given the semantics of vasync.forEachParallel, I need to somehow bind the request argument \u0027req\u0027 to ensureSharHasPool so that I can access the agent and call the appropriate api functions. I tried doing a bind:\n\nvasync.forEachParallel({\n    func: ensureSharkHasPool.bind(req)\n    ...\n}\n...\n\nBut this doesn\u0027t bring the request object into scope as I thought it would. Do you have any suggestions for how I could accomplish this (accessing the request object in ensureSharkHasPool)?"},{"file":"package.json","line":17,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"This change depends on https://cr.joyent.us/#/c/2422/, I will update the package.json with the latest cueball version dependency once this other change is integrated."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":81,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":82,"sizeDeletions":-6},{"number":"7","revision":"57d64d38902294cfe22883c3bcbfb4cda519c614","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/7","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1503699471,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1503699499,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":39,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"\"ensure\"?  This will work even if Muskie doesn\u0027t have a recent active connection, right?"},{"file":"lib/uploads/create.js","line":39,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Yes"},{"file":"lib/uploads/create.js","line":53,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Is there a falsey value we could get here other than `undefined`?  It seems like it would be clearer if this were just an \"else\" clause to the previous \"if\"."},{"file":"lib/uploads/create.js","line":53,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"We can only get an undefined here - I wrote the API method that does this and it\u0027s documented in the cueball api docs. However, I suppose that because this might change in the future, what you suggest makes sense. I think that because we have to do a createPool if the pool doesn\u0027t already exists, changing this check to if (!pool) { ... } might be a better fit."},{"file":"lib/uploads/create.js","line":75,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I\u0027m not sure we actually do want to clean up the pool.  Sorry if my previous question was confusing, but I was really just trying to understand whether it was intentional.  I don\u0027t think it\u0027s a bad idea to leave the pool running, because it\u0027s likely we will eventually need it anyway.  I would probably add a comment either way explaining our rationale."},{"file":"lib/uploads/create.js","line":75,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Understood, yeah I think leaving the pool running is the way to go, cueball will handle failed pools (in the event that they fail during this operation)."},{"file":"lib/uploads/create.js","line":78,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I believe setImmediate takes additional arguments, so that you can just do:\n\n    setImmediate(callback, null, shark)"},{"file":"lib/uploads/create.js","line":81,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think this should probably be \"once\" so that this handler gets cleaned up (and we don\u0027t re-invoke this closure), perhaps hours later in response to some other state change."},{"file":"lib/uploads/create.js","line":81,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Oh, actually in testing I\u0027ve seen that sometimes this event handler fires multiple times, when a pool is created, and it\u0027s not until some subsequent time that the state actually transitions to \"running.\" So I think it order for this to work we do actually have to receive multiple callbacks for the event. However I do think that as soon as we see the pool in either the \"running\" or the \"failed\" state, then this listener should be removed."},{"file":"lib/uploads/create.js","line":86,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"What case is `once` handling?"},{"file":"lib/uploads/create.js","line":86,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"It\u0027s preventing the callback in the pool\u0027s \u0027stateChanged\u0027 handler from being invoked after the callback is called once from the timeout handler already. Perhaps \"once\" is not the best name, maybe \"guard\"? The rationale for the timeout is that we don\u0027t want to spend too long waiting for a pool to come up if we can just try another shark on the list - the timeout is the same as that waited when contact a shark during object upload."},{"file":"lib/uploads/create.js","line":86,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"I am realizing now that the a possible solution is to use pool.once, but to do so within a function that will reset itself as a listener for the \u0027stateChanged\u0027 event if it finds that the pool is in the \u0027starting\u0027 state. That way, if the pool failed, it\u0027s running, or we timed out, no further callbacks will be scheduled, but if we keep listening for a state change while the pool is starting up."},{"file":"lib/uploads/create.js","line":95,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"If the goal is to have the timeout not run if we\u0027ve successfully transitioned to running, it\u0027s usually better to use `clearTimeout` to remove the timeout in the success case."},{"file":"lib/uploads/create.js","line":95,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Is there an analogous function for removing the pool\u0027s stateChanged handler above?"},{"file":"lib/uploads/create.js","line":95,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Nevermind. Got around this - see comment above."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":110,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":111,"sizeDeletions":-7},{"number":"8","revision":"b260b5a6afda5a8a0dcf5ccfa8326e4b5bc2ed1b","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/8","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1504306322,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1504306350,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":100,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":101,"sizeDeletions":-7},{"number":"9","revision":"8044b0329a4276aa48559c8e05d9e9024bf33743","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/9","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1504306921,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1504306954,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":100,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":101,"sizeDeletions":-7},{"number":"10","revision":"c72f27527f5a7b070c14a34c1ba31a59bfd9e59e","parents":["6576b97e08532454e8eb74b937d6dc02756a231f"],"ref":"refs/changes/32/2432/10","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1504918213,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1504918247,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":54,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Can we make this an `else` to make clearer that exactly one of the previous block or the subsequent block will run?"},{"file":"lib/uploads/create.js","line":54,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"I see. WIll do."},{"file":"lib/uploads/create.js","line":90,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Is it intentional that we reset the timer in this case?"},{"file":"lib/uploads/create.js","line":90,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Yes - I think I mentioned this in a previous comment, but I observed that for a newly created pool, the pool can emit a \u0027stateChanged\u0027, reporting that the pool is in state \"starting\" many times before the \"running\" state is reported. The timer is reset here so that while we\u0027re receiving such callbacks (before the timeout), we keep accepting observing state changes."},{"file":"lib/uploads/create.js","line":90,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It makes sense that you would re-add the listener.  But I don\u0027t know about resetting the timeout.  Doesn\u0027t that mean that if the timeout was, say, 2 seconds, this operation could go on forever, as long as the state kept changing every 2 seconds?"},{"file":"lib/uploads/create.js","line":90,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Ah! This didn\u0027t register the first time I read it. Thanks for pointing this out."},{"file":"lib/uploads/create.js","line":99,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think this case should probably be an assertion failure."},{"file":"lib/uploads/create.js","line":99,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Will do"},{"file":"lib/uploads/create.js","line":99,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Actually, I\u0027m not sure it should be - I think it\u0027s technically possible that we create the pool but then before we observe it\u0027s state it has already failed. This is not a programmer error but indicates a problem with the connection to the shark."},{"file":"lib/uploads/create.js","line":99,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"In that case, assert that the only way to get here is if the state is `failed`?\n\nI want to make sure if some new state is added that we aren\u0027t considering now, the program crashes rather than proceeding."},{"file":"lib/uploads/create.js","line":99,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"I see. I could turn this into a branch for state \u003d\u003d\u003d failed and crash if we find that the pool is in not in any of the states we expect it to be in."},{"file":"lib/uploads/create.js","line":144,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Why would `err2` be falsey but `results.successes.length` would be less than `copies`?\n\nI think you could replace a lot of this with the recently-added `vasync.tryEach`, although there\u0027s an outstanding fix to that that may be necessary to upgrade here."},{"file":"lib/uploads/create.js","line":144,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"You\u0027re right - I think it should just be an error check. I\u0027ll look into the vasync.tryEach fix."},{"file":"lib/uploads/create.js","line":157,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think we probably would want to combine these log messages.\n\nI also think they shouldn\u0027t be info-level, as we wouldn\u0027t want these in the normal log output."},{"file":"lib/uploads/create.js","line":157,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Will do."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":102,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":103,"sizeDeletions":-7},{"number":"11","revision":"af543ffeb1e841b7fa447b3b4e319e433eeb8517","parents":["ef45dfb474483c56dd569a3b710275c47819c799"],"ref":"refs/changes/32/2432/11","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1505341465,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1505341508,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":147,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"warning: identifer err hides an identifier in a parent scope"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":20,"deletions":-24},{"file":"package.json","type":"MODIFIED","insertions":1,"deletions":-1}],"sizeInsertions":21,"sizeDeletions":-25},{"number":"12","revision":"8e87f9c1bbd2668d233ed9110c399ff65ac860b7","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/12","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1505341790,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1505341823,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":137,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"This is really a list of sharks, right?  Not one shark?"},{"file":"lib/uploads/create.js","line":137,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Right"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":98,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":100,"sizeDeletions":-8},{"number":"13","revision":"63907bad812bc86d8d7dcad264083188be5308e2","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/13","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1505519363,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1505519392,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":100,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":102,"sizeDeletions":-8},{"number":"14","revision":"c936d0ea084778244545aa897d2099e8bc73a7bc","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/14","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1505519508,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1505519542,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":93,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"What if the new state is none of \u0027running\u0027, \u0027starting\u0027, or \u0027failed\u0027?  It seems like we\u0027ll ignore it, then wait for the timeout and fail the request."},{"file":"lib/uploads/create.js","line":98,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"This has to be a VError to use the \u0027%s\u0027 behavior.\n\nAlso, is there a case where we would actually expect this.  (I can\u0027t remember if we talked about this before.)  If we don\u0027t ever call pool.stop() in Muskie, I think it would be fine to assert that we never get to this point (with a comment explaining that)."},{"file":"lib/uploads/create.js","line":98,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"We could get an existing pool that is in the stopped state. I think we should handle it because it is documented as one of the possible states of a pool in the cueball docs."},{"file":"lib/uploads/create.js","line":101,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"It should be impossible for the pool to be in state \u0027running\u0027, \u0027starting\u0027, or \u0027failed\u0027, shouldn\u0027t it?"},{"file":"lib/uploads/create.js","line":101,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"I thought that this was the pattern that you suggested in the"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":100,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":102,"sizeDeletions":-8},{"number":"15","revision":"2a24e29314ff256689e548649ee71291eec425ab","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/15","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1506707213,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1506707252,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":106,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":108,"sizeDeletions":-8},{"number":"16","revision":"c05ab445f9d6d839b1058e6d152a3e07956d47ee","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/16","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1506707451,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1506707483,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/uploads/create.js","line":53,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Would it be more consistent to use \"host\" here?"},{"file":"lib/uploads/create.js","line":53,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"yup - will modify."},{"file":"lib/uploads/create.js","line":109,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think you want to wrap this in a `setImmediate` like at L62."},{"file":"lib/uploads/create.js","line":109,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"I\u0027ll do this for the next patchset, but depending on what we decide to do about errors in this function (log or pass to callback -- referencing my response to your third comment) we may end up just logging the error and issuing the callback directly."},{"file":"lib/uploads/create.js","line":143,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I believe we keep track of this array for normal requests and we hang it off the request (as `request.sharks`).  At the end of the request, we include this in the log message.  That way, from the final log entry, we can see which sharks we talked to.  Are we doing that here?"},{"file":"lib/uploads/create.js","line":143,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Not currently. I will modify this to follow the convention though. Looking at the object code, it looks like the sharks returned from the picker are stored in `req._sharks`, the sharks that are contacted are stored in the `req.sharksContacted`, and the sharks that are ultimately chosen are stored in `req.sharks`."},{"file":"lib/uploads/create.js","line":143,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Yes, I think that\u0027s right, but I\u0027m not sure what the precise semantics of each of these are.  For example, I think the picker returns a list of sets of sharks, while sharksContacted is a flat array.  I would expect \"req.sharks\" would be one of the sets.  So all three have slightly different forms.\n\nIf we decide to use sharksContacted here, and I think that does make sense, it would be good to match the form used for that field in regular PUT log entries.  You\u0027ll have to see if all of the same fields apply, though."},{"file":"lib/uploads/create.js","line":143,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"In patchset 17, I\u0027ve ensure that the semantics of these fields match those of regular object puts. req._sharks list of shark sets returned by the picker.  req.sharksContacted consists is a list of \u0027sharkInfo\u0027 objects that the process attempted to contact with fields: host, result, timeToFirstByte, timeTotal, and _startTime. For this context, timeToFirstByte does not make sense because we aren\u0027t streaming data to sharks here. I\u0027ve adjusted req.sharksContacted to consist of sharkInfo objects with all but the timeToFirstByte field. Finally, the req.sharks field is the shark set that the decision procedure settled on."},{"file":"lib/uploads/create.js","line":158,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Does this need a `new`?\n\nUsually you can leave off the `, null` argument.\n\nAre we losing information about the cause (`err2`) here?"},{"file":"lib/uploads/create.js","line":158,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Yes - I\u0027m not sure how to return a SharksExhaustedError and preserve information about err2 though. Returning  SharksExhaustedError is consistent with the put object code. What I could do is explicitly log all errors in the trySharks function instead of returning them in the callback. That way any error returned here already appears in the logs and we can just rely on `results` to determine whether we found a shark set."},{"file":"lib/uploads/create.js","line":158,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"In general, it\u0027s much easier if the final error preserves the cause information.  When you\u0027re scanning over the logs, and you have a 500 that you\u0027re investigating, it\u0027s quite a bit harder to walk back to find the log entry for the previous error for the same request.  The previous log entry might even be in a separate file if the error occurs across a log rotation boundary.\n\nIt doesn\u0027t look like the SharksExhaustedError supports a cause today, but it could (e.g., the way InternalError does).\n\nWe could also put the specific shark errors into sharksContacted entries.  I thought we did that for the PUT path today, but we don\u0027t seem to."},{"file":"lib/uploads/create.js","line":158,"reviewer":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"message":"Considering the potentially different nature of errors for different sharks, it seems that including the errors in the sharkInfo objects actually gives us more information here. I\u0027m going to include this change in the next patchset."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":107,"deletions":-6},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":109,"sizeDeletions":-8},{"number":"17","revision":"576a1eb112c146b4934c7452a30702042d647e47","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/17","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1507341501,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1507341529,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":113,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":115,"sizeDeletions":-7},{"number":"18","revision":"3f4231c94997db9472fb1b76cb0f01d1e9b581c5","parents":["4ba953577be8765a90228cc33d7fcc1dd232a23b"],"ref":"refs/changes/32/2432/18","uploader":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"createdOn":1508282187,"author":{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1510098461,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1508282229,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/uploads/create.js","type":"MODIFIED","insertions":134,"deletions":-5},{"file":"package.json","type":"MODIFIED","insertions":2,"deletions":-2}],"sizeInsertions":136,"sizeDeletions":-7}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},{"name":"Jordan Hendricks","email":"jordan.hendricks@joyent.com","username":"jordanhendricks"},{"name":"Jan Wyszynski","email":"jan.wyszynski@joyent.com","username":"IanWyszynski"}]}