commit 0c5f89b378de351b01a8c5617a066c1327e34cb4 (refs/changes/45/4545/4)
Author: Rui Loura <rui@joyent.com>
Date:   2018-07-23T19:27:52+00:00 (1 year, 3 months ago)
    
    TRITON-574 sdcadm platform assign is broken with rack aware networking
    Reviewed by: Cody Peter Mello <cody.mello@joyent.com>

diff --git a/lib/platform.js b/lib/platform.js
index 548b5a4..f7c4efd 100644
--- a/lib/platform.js
+++ b/lib/platform.js
@@ -1066,6 +1066,7 @@ Platform.prototype.assign = function assign(opts, callback) {
     var serverRecs = [];
     var assignServers = [];
     var uuids = [];
+    var adminTags = [];
     var headnode;
     var progress = self.progress;
 
@@ -1083,10 +1084,41 @@ Platform.prototype.assign = function assign(opts, callback) {
         progress('Updating booter cache for servers');
 
         vasync.pipeline({funcs: [
+            function getAdminNicTags(_, next) {
+                self.sdcadm.napi.listNetworkPools({name: 'admin'},
+                    function (err, pools) {
+
+                    if (err) {
+                        next(new errors.SDCClientError(err, 'napi'));
+                        return;
+                    }
+
+                    if (pools.length > 1) {
+                        progress('Multiple network pools named "admin", '
+                            + 'using %s', pools[0].uuid);
+                    }
+
+                    /*
+                     * The presence of an admin network pool is optional.
+                     */
+                    if (pools.length === 0) {
+                        next();
+                        return;
+                    }
+
+                    adminTags = pools[0].nic_tags_present;
+                    next();
+                });
+
+            },
             function (_, next) {
+                if (adminTags.indexOf('admin') === -1) {
+                    adminTags.push('admin');
+                }
+
                 var listOpts = {
                     belongs_to_type: 'server',
-                    nic_tags_provided: 'admin'
+                    nic_tags_provided: adminTags
                 };
                 if (!opts.all) {
                     listOpts.belongs_to_uuid = serveruuids;
