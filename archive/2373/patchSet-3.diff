From 641526ac57b23b854c46bcf6658366bf5cd814cd Mon Sep 17 00:00:00 2001
From: Kelly McLaughlin <kelly@kelly-mclaughlin.com>
Date: Wed, 16 Aug 2017 10:27:32 -0600
Subject: [PATCH] MANTA-3338 muskie leaked a connection

---
 lib/server.js | 43 ++++++++++++++++++++++++++++++++-----------
 1 file changed, 32 insertions(+), 11 deletions(-)

diff --git a/lib/server.js b/lib/server.js
index e2056e4..90799b4 100644
--- a/lib/server.js
+++ b/lib/server.js
@@ -122,17 +122,25 @@ function createServer(options, clearProxy) {
         var req = socket.parser && socket.parser.incoming;
         var res = socket._httpMessage;
 
-        if (req && req.complete && res) {
+        var dobj = req ? {
+            method: req.method,
+            url: req.url,
+            headers: req.headers,
+            id: req._id
+        } : {};
+
+        options.dtrace_probes.socket_timeout.fire(function onFire() {
+            return ([dobj]);
+        });
+
+        /*
+         * Destroy the socket in the following cases:
+         *   - No request object exists
+         *   - A request object exists, the request is complete, and a
+         *     _httpMessage object exists for the socket
+         */
+        if (!req || (req && req.complete && res)) {
             l.warn('socket timeout: destroying connection');
-            options.dtrace_probes.socket_timeout.fire(function onFire() {
-                var dobj = req ? {
-                    method: req.method,
-                    url: req.url,
-                    headers: req.headers,
-                    id: req._id
-                } : {};
-                return ([dobj]);
-            });
             socket.destroy();
         }
     });
@@ -424,7 +432,20 @@ function createServer(options, clearProxy) {
         _audit(req, res, route, err);
     });
 
-    server.on('after', _audit);
+    server.on('after', function (req, res, route, err) {
+        _audit(req, res, route, err);
+
+        if ((req.method === 'PUT' || req.method === 'POST')
+          && res.statusCode >= 500) {
+            /*
+             * An error occurred on a PUT or POST request, but there may still
+             * be incoming data on the request stream. Call resume() in order to
+             * dump any remaining request data so the stream emits an 'end' and
+             * the socket resources are not leaked.
+             */
+            req.resume();
+        }
+    });
 
     return (server);
 }
-- 
2.21.0

