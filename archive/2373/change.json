{"project":"joyent/manta-muskie","branch":"master","id":"I4ba953577be8765a90228cc33d7fcc1dd232a23b","number":"2373","subject":"MANTA-3338 muskie leaked a connection Reviewed by: David Pacheco \u003cdap@joyent.com\u003e Approved by: Jared Morrow \u003cjm@joyent.com\u003e","owner":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"url":"https://cr.joyent.us/2373","commitMessage":"MANTA-3338 muskie leaked a connection\nReviewed by: David Pacheco \u003cdap@joyent.com\u003e\nApproved by: Jared Morrow \u003cjm@joyent.com\u003e\n","createdOn":1502401944,"lastUpdated":1505142017,"open":false,"status":"MERGED","comments":[{"timestamp":1502401944,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 1."},{"timestamp":1502401946,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\nNew commits:\n    \n    commit 6b785a6614190bf3eb47fefa8eda2be049d97f48\n    \n    Update the muskie socket timeout handler\n    Update the socket timeout handler to fire the socket_timeout dtrace probe in all\n    cases. Also change the handler such that sockets are destroyed on timeout if\n    the request object is null or if all of the following are true: a request\n    objects exists, the request is complete, an _httpMessage object exists for the\n    socket.\n    \n    commit 217e9b3e7f6e20e3663100db932a13a2382d1301\n    \n    MANTA-3338 muskie leaked a connection\n    Address muskie connection leak that can happen on object upload when an error\n    happens prior to the request data being processed. An example is a moray\n    connection being unavailable when the getMetadata handler executes. Change the\n    error handling in the vasync.parallel callback in the getMetadata function to\n    call req._dump() to empty the stream and allow the socket resources to be freed."},{"timestamp":1502401977,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 1: CI-Testing-1\n\n(2 comments)\n\n\"make check\" exited with status 2"},{"timestamp":1502402266,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 2."},{"timestamp":1502402268,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 2:\n\nNew commits:\n    \n    commit b1de1687cc52a5240cb24e42f2f64db588c6cd19\n    \n    Update block comments for style"},{"timestamp":1502402294,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 2: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1502406353,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 1:\n\nTo understand the motivation for these changes I would first recommend reading over the comments on MANTA-3338. I am also happy to discuss the issue with anyone doing review. \n\nI am not sure there is a great way to add any automated testing of this fix since it requires that manta be in a specific degraded state. It is reproducible in a lab environment. I took the following steps with my lab manta:\n\n1. I disabled the registrar service on one of the webapi zones to ensure all requests would be handled by a single webapi zone.\n2. I disabled the registrar and electric-moray services in the electric-moray zone.\n\nAt this point manta should be returning 500 errors for PUT requests and susceptible to the issue. \n\nFor inducing the error I created a presigned PUT URL with a 1 month lease. I used a simple test program I wrote to make requests to my manta using that URL and a 5 million byte payload. There\u0027s a link to the source for that program in the issue comments and I\u0027m happy to assist in using it if needed, but any simple program should suffice as long as the client does not include an Expect header with a value of 100-continue. The mput command does not work to trigger this issue because it does use the Expect header.\n\nOnce you make a PUT request the leaked connection should be visible using netstat on the webapi and loadbalancer zones as described in the issue comments.\n\nAfter applying the fix the same request with manta in the same degraded state should not result in a connection leak."},{"timestamp":1502408449,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 2:\n\n(5 comments)"},{"timestamp":1502466271,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 2:\n\n(3 comments)"},{"timestamp":1502809498,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 2:\n\n(2 comments)"},{"timestamp":1502900853,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 3."},{"timestamp":1502900855,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 3:\n\nNew commits:\n    \n    commit a09f94a908e060891bd728af90e78e8ed5e4289b\n    \n    More general handling of request stream on error\n    Handle resuming the request stream in the \u0027after\u0027 event handler so that the\n    resource leak can be avoided regardless of the cause of the error."},{"timestamp":1502900887,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 3: CI-Testing-1\n\n(1 comment)\n\n\"make check\" exited with status 2"},{"timestamp":1502901475,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1502902128,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 4."},{"timestamp":1502902129,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 4:\n\nNew commits:\n    \n    commit b5d19f9adf2ca8100ec31268914d335114cd0837\n    \n    Address jsstyle complaint"},{"timestamp":1502902161,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 4: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1502924070,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 2:\n\n(1 comment)"},{"timestamp":1502924379,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 5."},{"timestamp":1502924380,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 5:\n\nNew commits:\n    \n    commit 85b3dfcac176d51819962265e5605e914a2ce768\n    \n    Revert socket timeout handling code\n    Revert socket timeout handling code to only destroy connections in the case that\n    a request object exists, the request is complete, and an _httpMessage object\n    exists for the socket."},{"timestamp":1502924412,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 5: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1504191571,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 6."},{"timestamp":1504191573,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 6:\n\nNew commits:\n    \n    commit 447b53bf505deabe0f5f97200882e4a4bfa60657\n    \n    Revert changes to socket timeout handler"},{"timestamp":1504191599,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 6: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1504195838,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 6:\n\n(1 comment)"},{"timestamp":1504198894,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 6:\n\n(1 comment)"},{"timestamp":1504722312,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 6: Code-Review+1\n\nThis looks good to me.  Thanks for doing all that testing.\n\nIt may be worthwhile to have somebody else sanity-check the change (e.g., JoshC)?"},{"timestamp":1504903878,"reviewer":{"name":"Jared Morrow","email":"jm@joyent.com","username":"jaredmorrow"},"message":"Patch Set 6: Integration-Approval+1"},{"timestamp":1504904773,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Uploaded patch set 7."},{"timestamp":1504904775,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 7:\n\nNew commits:\n    \n    commit dcd97d20015bbda8b19071464b2447e6dbb4ea51\n    \n    Revert changes to socket timeout handler\n    \n    commit ee5927c02f37e1e06b94c3c7badbad6a482ad879\n    \n    Revert socket timeout handling code\n    Revert socket timeout handling code to only destroy connections in the case that\n    a request object exists, the request is complete, and an _httpMessage object\n    exists for the socket.\n    \n    commit 52fcebf30b9e8eeac1759ff151060e5459b197e7\n    \n    Address jsstyle complaint\n    \n    commit 3430a3e5151ce857df34d38cc832e916479263ad\n    \n    More general handling of request stream on error\n    Handle resuming the request stream in the \u0027after\u0027 event handler so that the\n    resource leak can be avoided regardless of the cause of the error.\n    \n    commit 652dba58217fcf2cc43ca1d68e4d1cef413ad035\n    \n    Update block comments for style\n    \n    commit f94dab97280e668028f325899969d5f7215569f5\n    \n    Update the muskie socket timeout handler\n    Update the socket timeout handler to fire the socket_timeout dtrace probe in all\n    cases. Also change the handler such that sockets are destroyed on timeout if\n    the request object is null or if all of the following are true: a request\n    objects exists, the request is complete, an _httpMessage object exists for the\n    socket.\n    \n    commit d2ddf8df200dc6ebad37070c3b4a90514bb8634f\n    \n    MANTA-3338 muskie leaked a connection\n    Address muskie connection leak that can happen on object upload when an error\n    happens prior to the request data being processed. An example is a moray\n    connection being unavailable when the getMetadata handler executes. Change the\n    error handling in the vasync.parallel callback in the getMetadata function to\n    call req._dump() to empty the stream and allow the socket resources to be freed."},{"timestamp":1504904801,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"Patch Set 7: CI-Testing+1\n\n\"make check\" passed ok"},{"timestamp":1504904904,"reviewer":{"name":"Jared Morrow","email":"jm@joyent.com","username":"jaredmorrow"},"message":"Patch Set 7: Integration-Approval+1"},{"timestamp":1504913200,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Patch Set 7:\n\nWas PS7 just a rebase?  (For some reason, Gerrit did not mark it as such.)"},{"timestamp":1504913784,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Patch Set 7:\n\n\u003e Was PS7 just a rebase?  (For some reason, Gerrit did not mark it as\n \u003e such.)\n\nCorrect, I rebased myself rather than using the Gerrit button which may explain why it didn\u0027t get marked."},{"timestamp":1505071384,"reviewer":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"},"message":"Patch Set 7: Code-Review+1"},{"timestamp":1505071389,"reviewer":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"},"message":"Patch Set 7: Integration-Approval+1"},{"timestamp":1505142017,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Kelly McLaughlin"}],"currentPatchSet":{"number":"7","revision":"4ba953577be8765a90228cc33d7fcc1dd232a23b","parents":["6c8139fc821dfe87ab0a8eec620a81f81e9831d3"],"ref":"refs/changes/73/2373/7","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1504904773,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1504904801,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1504904904,"by":{"name":"Jared Morrow","email":"jm@joyent.com","username":"jaredmorrow"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1505071384,"by":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1505071389,"by":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"}},{"type":"SUBM","value":"1","grantedOn":1505142017,"by":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"lib/server.js","type":"MODIFIED","insertions":14,"deletions":-1}],"sizeInsertions":14,"sizeDeletions":-1},"patchSets":[{"number":"1","revision":"e80a310265533b282c3b3f5e87f077a66cc0c2fd","parents":["2330f3b82cbc39cc9c6c4fd82db15cfa7eb6c0c3"],"ref":"refs/changes/73/2373/1","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1502401944,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1502401977,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/common.js","line":456,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"improper first line of block comment"},{"file":"lib/server.js","line":136,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"improper first line of block comment"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/common.js","type":"MODIFIED","insertions":14,"deletions":-1},{"file":"lib/server.js","type":"MODIFIED","insertions":17,"deletions":-10}],"sizeInsertions":31,"sizeDeletions":-11},{"number":"2","revision":"3605c6b4177c23691985df0b77b6a85d92bbc2e6","parents":["2330f3b82cbc39cc9c6c4fd82db15cfa7eb6c0c3"],"ref":"refs/changes/73/2373/2","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1502402266,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1502402294,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/common.js","line":455,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think this likely the right fix, but I think this only fixes the one specific case we saw.  I think you could have a similar problem if any other handler in the PUT request chain fails before the part where we\u0027ve started accepting data.  For example, if Mahi was pitching 500s, I think one of the auth handlers would fail in the same way with the same problem.  If that\u0027s true, I think we need to find a common place to put this fix.  (It seems brittle to have to put it everywhere that we could possibly fail up to the startStreams handler.)"},{"file":"lib/common.js","line":455,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"I worried about this too, I just hadn\u0027t come across a great way to do it. Seems like ideally restify would handle this for you or at least expose a nice mechanism to do so. Let me work on this a bit and see if I can come up with something more general."},{"file":"lib/common.js","line":464,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Yeah, I think we should just use resume() here instead."},{"file":"lib/common.js","line":466,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"We don\u0027t usually put ticket references into the source for a normal bug fix.  (People can always go through the history to find the ticket.)"},{"file":"lib/server.js","line":132,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"We used to only fire this DTrace proe if we were taking action.  Is it intentional that we\u0027re firing it now in other cases as well?"},{"file":"lib/server.js","line":132,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"The probe is called socket_timeout so it seemed like it might be useful for it to fire anytime a socket did time out rather than just when a socket is destroyed. I just thought it should live up to its name, but if you think it\u0027s better to fire just on destroy I can change it back to the old behavior."},{"file":"lib/server.js","line":132,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Yeah, it was sort of poorly named before, given that it was only tracing the case where we took action here.  I assume this is only used for debugging, in which case I think it\u0027s fine to move it.  Would you mind mentioning it in the ticket in case somebody in the future wants to know why?"},{"file":"lib/server.js","line":142,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"Which case does this change fix?  When exactly is there no request?  I would have thought based on this code that that would only be when no request was made, but I thought we handled that case already today.\n\nI agree that the code that\u0027s here today is somewhat suspect (not least because it relies on several undocumented, unstable Node internal details), but I don\u0027t think it\u0027s responsible for the issue here.  As I understand it, in our cases, the request was technically still pending, and it was correct that we didn\u0027t try to close the socket in that case.  There is a timer elsewhere to handle sockets that are idle during the request."},{"file":"lib/server.js","line":142,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"Sorry I forgot to recently mention the specific reason for this change. The null request object comes into play in the case of a misbehaving client make a request and keeps the connection open without making another request for the duration of the timeout period. In this case the request object would be null when the timer fires and currently no action would be taken on such sockets. The TCP keepalive timeout should take care of these, but only after the much longer timeout period of two hours. I wanted to make this change because even at two hours that is a pretty big window of opportunity for a DOS attack, either from a malicious source or an unintentionally misbehaving client."},{"file":"lib/server.js","line":142,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I believe that case won\u0027t be handled by TCP KeepAlive as long as the client is still there, but I believe this case is currently handled by the loadbalancer\u0027s idle timeout.  (That\u0027s not to say I think that\u0027s the best approach, but I do think it works today.)  It would be clearer to handle it here instead (so that the handling of the various timeout cases isn\u0027t spread confusingly over multiple components), but changes to this code feel somewhat risky.  The way it\u0027s structured today, it\u0027s hard to be sure about exactly which cases it will apply to, and we\u0027ve had a bunch of problems in similar code before, and the failure mode is usually awful (e.g., requests cut off without a traceable error message, either mid-stream or before even getting a response).\n\nI\u0027m not sure what to do about that.  Maybe the thing we need is a harness for exercising all the various Muskie edge cases so that we could make changes like this with more confidence?"},{"file":"lib/server.js","line":142,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"I can test and ensure the idle timeout on the lb does take care of it and if so maybe just not make any changes here at this time. That sound ok?\n\nA test harness is an interesting idea. Something that could simulate different failures in a probabilistic manner would be nice. Even better if it did not require an entire manta system to be stood up to use. Maybe this is something to hash out in separate Jira issue?"},{"file":"lib/server.js","line":142,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"I tested the misbehaving client scenario out and haproxy does seem to handle the idle connections. I will revert this change so that the socket only gets destroyed in the case that has previously been handled."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/common.js","type":"MODIFIED","insertions":15,"deletions":-1},{"file":"lib/server.js","type":"MODIFIED","insertions":18,"deletions":-10}],"sizeInsertions":33,"sizeDeletions":-11},{"number":"3","revision":"641526ac57b23b854c46bcf6658366bf5cd814cd","parents":["2330f3b82cbc39cc9c6c4fd82db15cfa7eb6c0c3"],"ref":"refs/changes/73/2373/3","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1502900853,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"-1","grantedOn":1502900887,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"comments":[{"file":"lib/server.js","line":439,"reviewer":{"name":"Joyent Automation","username":"joyent-automation"},"message":"improper boolean continuation"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/server.js","type":"MODIFIED","insertions":32,"deletions":-11}],"sizeInsertions":32,"sizeDeletions":-11},{"number":"4","revision":"9e9457c64becd6af5d031fec9a8d620933bf5b43","parents":["2330f3b82cbc39cc9c6c4fd82db15cfa7eb6c0c3"],"ref":"refs/changes/73/2373/4","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1502902128,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1502902161,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/server.js","type":"MODIFIED","insertions":32,"deletions":-11}],"sizeInsertions":32,"sizeDeletions":-11},{"number":"5","revision":"17a6ee3272776b0eff4f8da5e9e0fa13ff05ef27","parents":["2330f3b82cbc39cc9c6c4fd82db15cfa7eb6c0c3"],"ref":"refs/changes/73/2373/5","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1502924379,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1502924412,"by":{"name":"Joyent Automation","username":"joyent-automation"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/server.js","type":"MODIFIED","insertions":30,"deletions":-10}],"sizeInsertions":30,"sizeDeletions":-10},{"number":"6","revision":"9edc3d6ee9345b640adc0e9e81f4c20c170afa91","parents":["2330f3b82cbc39cc9c6c4fd82db15cfa7eb6c0c3"],"ref":"refs/changes/73/2373/6","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1504191571,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1504722312,"by":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1504191599,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1504903878,"by":{"name":"Jared Morrow","email":"jm@joyent.com","username":"jaredmorrow"}}],"comments":[{"file":"lib/server.js","line":438,"reviewer":{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},"message":"I think this is logically right, but I\u0027m not sure if this is always safe to do here, or if it can paper over other types of problems.  Do you know if it\u0027s safe to call resume() on a stream that has already emitted \u0027end\u0027?  Or \u0027error\u0027?\n\nIt would be great if we could assert in an \u0027else\u0027 block that there was no data buffered, or that the request had already emitted \u0027end\u0027, to make sure we\u0027re not missing other cases.  But I don\u0027t know a great way to do that."},{"file":"lib/server.js","line":438,"reviewer":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"message":"I don\u0027t know the answer to that offhand, but let me look into it and see what I can find out."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"lib/server.js","type":"MODIFIED","insertions":14,"deletions":-1}],"sizeInsertions":14,"sizeDeletions":-1},{"number":"7","revision":"4ba953577be8765a90228cc33d7fcc1dd232a23b","parents":["6c8139fc821dfe87ab0a8eec620a81f81e9831d3"],"ref":"refs/changes/73/2373/7","uploader":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"createdOn":1504904773,"author":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1505071384,"by":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1505071389,"by":{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"}},{"type":"CI-Testing","description":"CI-Testing","value":"1","grantedOn":1504904801,"by":{"name":"Joyent Automation","username":"joyent-automation"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1504904904,"by":{"name":"Jared Morrow","email":"jm@joyent.com","username":"jaredmorrow"}},{"type":"SUBM","value":"1","grantedOn":1505142017,"by":{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"lib/server.js","type":"MODIFIED","insertions":14,"deletions":-1}],"sizeInsertions":14,"sizeDeletions":-1}],"allReviewers":[{"name":"Joyent Automation","username":"joyent-automation"},{"name":"David Pacheco","email":"dap@joyent.com","username":"davepacheco"},{"name":"Jared Morrow","email":"jm@joyent.com","username":"jaredmorrow"},{"name":"Joshua M. Clulow","email":"jmc@joyent.com","username":"jclulow"},{"name":"Kelly McLaughlin","email":"kelly.mclaughlin@joyent.com","username":"kellymclaughlin"}]}