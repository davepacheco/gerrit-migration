From c35048766456cd6340de9a3bf195e29195274a6d Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Mon, 29 May 2017 16:16:42 +0200
Subject: [PATCH] WORKFLOW-218 Update workflow to node-moray v3 Reviewed by:
 Marsell Kukuljevic <marsell@joyent.com> Approved by: Marsell Kukuljevic
 <marsell@joyent.com>

---
 README.md                     |  16 +++-
 lib/wf-buckets-definition.js  |   2 +-
 lib/workflow-moray-backend.js | 136 ++++++----------------------------
 package.json                  |  17 +++--
 test/config.json.sample       |   5 +-
 test/moray-backend.test.js    |   4 +-
 6 files changed, 52 insertions(+), 128 deletions(-)

diff --git a/README.md b/README.md
index b159f5d..05eb4d9 100644
--- a/README.md
+++ b/README.md
@@ -164,8 +164,12 @@ it's to say:
         "backend": {
             "module": "../lib/workflow-moray-backend",
             "opts": {
-                "url": "http://10.99.99.17:2222",
-                "connectTimeout": 1000,
+                "moray": {
+                    "srvDomain": "moray.coal.joyent.us",
+                    "cueballOptions": {
+                        "resolvers": [ "binder.coal.joyent.us" ]
+                    }
+                }
                 "extra_fields": {
                     "wf_workflows": {
                         "custom_object": {
@@ -242,8 +246,12 @@ Add the following to the config file of your application using wf:
       "backend": {
         "module": "wf-moray-backend",
         "opts": {
-          "url": "http://127.0.0.1:8080",
-          "connectTimeout": 1000,
+              "moray": {
+                    "srvDomain": "moray.coal.joyent.us",
+                    "cueballOptions": {
+                        "resolvers": [ "binder.coal.joyent.us" ]
+                    }
+              },
           "extra_fields": {}
         }
       }
diff --git a/lib/wf-buckets-definition.js b/lib/wf-buckets-definition.js
index 487a5d1..1c08594 100644
--- a/lib/wf-buckets-definition.js
+++ b/lib/wf-buckets-definition.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 // Attempt to:
diff --git a/lib/workflow-moray-backend.js b/lib/workflow-moray-backend.js
index f499b30..9cfec91 100644
--- a/lib/workflow-moray-backend.js
+++ b/lib/workflow-moray-backend.js
@@ -9,10 +9,12 @@
  */
 
 var util = require('util');
+var moray = require('moray');
 var vasync = require('vasync');
+var jsprim = require('jsprim');
 var Logger = require('bunyan');
 var wf = require('wf');
-var node_uuid = require('node-uuid');
+var uuidV4 = require('uuid/v4');
 var makeEmitter = wf.makeEmitter;
 var sprintf = util.format;
 
@@ -405,38 +407,18 @@ var WorkflowMorayBackend = module.exports = function (config) {
     }
 
 
-    // Attempt to connect the client to the backend.
+    // Connect the client to the backend.
     // On success, create required buckets when necessary.
     function init(createBuckets, callback) {
         if (typeof (createBuckets) === 'function') {
             callback = createBuckets;
             createBuckets = true;
         }
-        var url = config.url || 'http://127.0.0.1:2020';
-        var moray = require('moray');
-        var backoff = require('backoff');
-
-        var connected = false;
-
-        function makeClient() {
-            var _client = moray.createClient({
-                checkInterval: 10 * 1000,
-                connectTimeout: config.connectTimeout,
-                url: url,
-                log: log,
-                noCache: true,
-                reconnect: true,
-                maxConnections: 10,
-                maxIdleTime: 600 * 1000,
-                pingTimeout: 4000,
-                retry: { // try to reconnect forever
-                    maxTimeout: 2000,
-                    minTimeout: 100,
-                    retries: Infinity
-                }
-            });
-            return (_client);
-        }
+
+        var morayOptions = jsprim.deepCopy(config.moray);
+        morayOptions.log = log;
+        client = moray.createClient(morayOptions);
+        client.on('connect', connectCb);
 
         function connectCb() {
             backend.client = client;
@@ -451,83 +433,6 @@ var WorkflowMorayBackend = module.exports = function (config) {
                 return (callback) ? callback() : true;
             }
         }
-
-        function errorCb(err) {
-            log.error({
-                err: err
-            }, 'Moray client error');
-            backend.connected = false;
-            backend.emit('error', err);
-            backend.init(createBuckets, callback);
-        }
-
-        var retry = backoff.exponential({
-            maxTimeout: 30000,
-            maxDelay: Infinity
-        });
-
-        // retry operation about to get started with the given delay:
-        retry.on('backoff', function (number, delay, err) {
-            log.info({
-                attempt: number.toString(),
-                delay: delay,
-                err: err
-            }, 'ring: moray connection attempted: %s', number.toString());
-        });
-
-        // retry complete, check if we're connected, fire another attempt
-        // either if we are not connected or ping request fails:
-        retry.on('ready', function (number, delay) {
-            if (typeof (number) !== 'undefined') {
-                log.info({
-                    attempt: number,
-                    delay: delay
-                }, 'ring: moray connection attempt done');
-            }
-
-            function onError(err) {
-                log.error({err: err}, 'Moray connection error');
-            }
-
-            function onConnect() {
-                log.info('Moray client connected, sending ping request.');
-
-                // Assuming we're connected here, let's ping the client:
-                client.ping({
-                    log: log
-                }, function (err) {
-                    if (err) {
-                        log.error({
-                            err: err
-                        }, 'Ping moray error, retrying connection');
-                    } else {
-                        connected = true;
-                        client.removeListener('connect', onConnect);
-                    }
-                });
-            }
-
-            if (connected) {
-                log.info('Successfully connected to moray');
-                // Do real stuff here:
-                client.removeListener('error', onError);
-                client.on('error', errorCb);
-                retry.reset();
-                connectCb();
-            } else {
-                if (client) {
-                    client.close();
-                }
-                client = makeClient();
-                client.on('connect', onConnect);
-                client.on('error', onError);
-                retry.backoff();
-            }
-        });
-
-        // Init the connecte retries:
-        retry.emit('ready');
-
     }
 
     backend.init = init;
@@ -596,7 +501,8 @@ var WorkflowMorayBackend = module.exports = function (config) {
 
         client.getObject('wf_workflows', uuid, meta, function (err, obj) {
             if (err) {
-                if (err.name === 'ObjectNotFoundError') {
+                if (err.name === 'ObjectNotFoundError' ||
+                    err.message.indexOf('does not exist') !== -1) {
                     return callback(new wf.BackendResourceNotFoundError(sprintf(
                       'Workflow with uuid \'%s\' does not exist', uuid)));
                 } else {
@@ -674,7 +580,8 @@ var WorkflowMorayBackend = module.exports = function (config) {
                     log.error({err: err}, 'updateWorkflow error');
                     // Whatever the result, undo the delete(workflow.uuid) trick
                     workflow.uuid = uuid;
-                    if (err.name === 'ObjectNotFoundError') {
+                    if (err.name === 'ObjectNotFoundError'||
+                        err.message.indexOf('does not exist') !== -1) {
                         return cb(new wf.BackendResourceNotFoundError(sprintf(
                           'Workflow with uuid \'%s\' does not exist', uuid)));
                     } else {
@@ -777,7 +684,8 @@ var WorkflowMorayBackend = module.exports = function (config) {
         var job;
         return client.getObject('wf_jobs', uuid, meta, function (err, obj) {
             if (err) {
-                if (err.name === 'ObjectNotFoundError') {
+                if (err.name === 'ObjectNotFoundError'||
+                    err.message.indexOf('does not exist') !== -1) {
                     return callback(new wf.BackendResourceNotFoundError(sprintf(
                       'Job with uuid \'%s\' does not exist', uuid)));
                 } else {
@@ -1036,7 +944,8 @@ var WorkflowMorayBackend = module.exports = function (config) {
         return client.getObject('wf_jobs', uuid, meta, function (err, obj) {
             if (err) {
                 log.error({err: err}, 'getObject error');
-                if (err.name === 'ObjectNotFoundError') {
+                if (err.name === 'ObjectNotFoundError'||
+                    err.message.indexOf('does not exist') !== -1) {
                     return callback(new wf.BackendResourceNotFoundError(sprintf(
                       'Job with uuid \'%s\' does not exist', uuid)));
                 } else {
@@ -1336,7 +1245,8 @@ var WorkflowMorayBackend = module.exports = function (config) {
             var runner;
             if (err) {
                 log.error({err: err}, 'getRunner error');
-                if (err.name === 'ObjectNotFoundError') {
+                if (err.name === 'ObjectNotFoundError'||
+                    err.message.indexOf('does not exist') !== -1) {
                     return callback(new wf.BackendResourceNotFoundError(sprintf(
                       'Runner with id \'%s\' does not exist', runner_id)));
                 } else {
@@ -1386,7 +1296,8 @@ var WorkflowMorayBackend = module.exports = function (config) {
         client.getObject('wf_runners', runner_id, function (err, obj) {
             if (err) {
                 log.error({err: err}, 'idleRunner error');
-                if (err.name === 'ObjectNotFoundError') {
+                if (err.name === 'ObjectNotFoundError'||
+                    err.message.indexOf('does not exist') !== -1) {
                     return callback(new wf.BackendResourceNotFoundError(sprintf(
                       'Runner with id \'%s\' does not exist', runner_id)));
                 } else {
@@ -1856,7 +1767,8 @@ var WorkflowMorayBackend = module.exports = function (config) {
         client.getObject('wf_jobs', uuid, meta, function (err, obj) {
             if (err) {
                 log.error({err: err}, 'addInfo error');
-                if (err.name === 'ObjectNotFoundError') {
+                if (err.name === 'ObjectNotFoundError'||
+                    err.message.indexOf('does not exist') !== -1) {
                     return callback(new wf.BackendResourceNotFoundError(sprintf(
                       'Job with uuid \'%s\' does not exist', uuid)));
                 } else {
@@ -1870,7 +1782,7 @@ var WorkflowMorayBackend = module.exports = function (config) {
                 };
                 o = definitions.wf_jobs_info.encode(o);
 
-                return client.putObject('wf_jobs_info', node_uuid(), o, meta,
+                return client.putObject('wf_jobs_info', uuidV4(), o, meta,
                     function (err) {
                     if (err) {
                         log.error({err: err}, 'addInfo error');
diff --git a/package.json b/package.json
index 1ce01d7..481b395 100644
--- a/package.json
+++ b/package.json
@@ -2,7 +2,7 @@
   "author": "Pedro Palazón Candel <kusorbox@gmail.com> (http://www.joyent.com)",
   "name": "wf-moray-backend",
   "description": "A backend for wf built over Moray",
-  "version": "0.11.0",
+  "version": "1.0.0",
   "private": true,
   "homepage": "https://github.com/joyent/node-workflow-moray-backend",
   "repository": {
@@ -17,12 +17,15 @@
     "node": ">=0.8"
   },
   "dependencies": {
-    "bunyan": "0.23.1",
-    "moray": "git://github.com/joyent/node-moray.git#b84ef0e",
-    "node-uuid": "1.4.0",
-    "wf": "git://github.com/kusor/node-workflow.git#5cdc62",
-    "vasync": "1.6.1",
-    "backoff": "2.4.1"
+    "bunyan": "1.8.1",
+    "moray": "3.1.1",
+    "uuid": "3.0.1",
+    "wf": "git+https://github.com/joyent/node-workflow.git#aac927e4",
+    "vasync": "1.6.4",
+    "jsprim": "^1.3.1"
+  },
+  "optionalDependencies": {
+      "dtrace-provider": "0.8.2"
   },
   "devDependencies": {
     "tap": "~0.3"
diff --git a/test/config.json.sample b/test/config.json.sample
index f5688e4..aea56b4 100644
--- a/test/config.json.sample
+++ b/test/config.json.sample
@@ -2,8 +2,9 @@
     "backend": {
         "module": "../lib/workflow-moray-backend",
         "opts": {
-            "url": "http://10.99.99.17:2222",
-            "connectTimeout": 1000,
+            "moray": {
+                "url": "http://10.99.99.17:2222"
+            },
             "extra_fields": {
                 "wf_workflows": {},
                 "wf_jobs": {
diff --git a/test/moray-backend.test.js b/test/moray-backend.test.js
index 2bfc85c..d9a36ad 100644
--- a/test/moray-backend.test.js
+++ b/test/moray-backend.test.js
@@ -9,7 +9,7 @@
  */
 
 var test = require('tap').test,
-    uuid = require('node-uuid'),
+    uuid = require('uuid'),
     util = require('util'),
     vasync = require('vasync'),
     Factory = require('wf').Factory,
@@ -118,7 +118,7 @@ test('workflow name must be unique', function (t) {
                 return cb(null);
             },
             modules:  {
-                'uuid': 'node-uuid'
+                'uuid': 'uuid'
             }
         }],
         timeout: 180,
-- 
2.21.0

