commit a7be81eacc3788527ce0048df47e59364ee3904a (refs/changes/40/240/2)
Author: Trent Mick <trentm@gmail.com>
Date:   2016-08-05T22:07:36+00:00 (3 years, 2 months ago)
    
    TOOLS-1511 update contribution guidelines to reflect use of cr.joyent.us
    Reviewed by: Dave Pacheco <dap@joyent.com>

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000..c556364
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,73 @@
+<!--
+    This Source Code Form is subject to the terms of the Mozilla Public
+    License, v. 2.0. If a copy of the MPL was not distributed with this
+    file, You can obtain one at http://mozilla.org/MPL/2.0/.
+-->
+
+<!--
+    Copyright 2016 Joyent, Inc.
+-->
+
+# Triton Contribution Guidelines
+
+Thanks for using Triton and for considering contributing to it!
+
+tl;dr:
+- Triton repos do *not* use GitHub pull requests (PRs)! You'll be asked to
+  re-submit PRs to Gerrit. See below.
+- Triton repos use both GitHub issues and internal-to-Joyent Jira projects for
+  issue tracking.
+
+
+## Code
+
+The Triton project uses Gerrit at [cr.joyent.us](https://cr.joyent.us) for code
+review of all changes. Any registered GitHub user can submit changes through
+this system. If you want to contribute a change, please see the [Joyent Gerrit
+user
+guide](https://github.com/joyent/joyent-gerrit/blob/master/docs/user/README.md).
+If you're making a substantial change, you probably want to contact developers
+[on the mailing list or IRC](README.md#community) first. If you have any trouble
+with the contribution process, please feel free to contact developers [on the
+mailing list or IRC](README.md#community). Note that larger Triton project
+changes are typically designed and discussed via ["Requests for Discussion
+(RFDs)"](https://github.com/joyent/rfd).
+
+Triton repositories use the [Joyent Engineering
+Guidelines](https://github.com/joyent/eng/blob/master/docs/index.md). Notably:
+
+* The #master branch should be first-customer-ship (FCS) quality at all times.
+  Don't push anything until it's tested.
+* All repositories should be "make check" clean at all times.
+* All repositories should have tests that run cleanly at all times.
+
+"make check" checks both JavaScript style and lint.  Style is checked with
+[jsstyle](https://github.com/davepacheco/jsstyle).  The specific style rules are
+somewhat repo-specific.  See the jsstyle configuration file or `JSSTYLE_FLAGS`
+in Makefiles in each repo for exceptions to the default jsstyle rules.
+
+Lint is checked with
+[javascriptlint](https://github.com/davepacheco/javascriptlint). Repos sometimes
+have repo-specific lint rules, but this is less common -- look for
+"tools/jsl.node.conf" for per-repo exceptions to the default rules.
+
+
+## Issues
+
+There are two separate issue trackers that are relevant for Triton code:
+
+- An internal-to-Joyent JIRA instance.
+
+  A JIRA ticket has an ID like `IMGAPI-536`, where "IMGAPI" is the JIRA project
+  name -- in this case used by the
+  [sdc-imgapi](https://github.com/joyent/sdc-imgapi) and related repos. A
+  read-only view of most JIRA tickets is made available at
+  <https://smartos.org/bugview/> (e.g.
+  <https://smartos.org/bugview/IMGAPI-536>).
+
+- GitHub issues for the relevant repo, e.g.
+  <https://github.com/joyent/triton/issues>.
+
+Before Triton was open sourced, Joyent engineering used a private JIRA instance.
+While Joyent continues to use JIRA internally, we also use GitHub issues for
+tracking -- primarily to allow interaction with those without access to JIRA.
diff --git a/README.md b/README.md
index 0c1e945..4d810ce 100644
--- a/README.md
+++ b/README.md
@@ -5,20 +5,20 @@
 -->
 
 <!--
-    Copyright (c) 2015, Joyent, Inc.
+    Copyright (c) 2016, Joyent, Inc.
 -->
 
 
 # Triton DataCenter
 
-Triton DataCenter (just "Triton" for short, formerly "SmartDataCenter" and "SDC") is an open-source cloud management platform, optimized
-to deliver next generation, container-based, service-oriented infrastructure
-across one or more data centers. With an emphasis on ease of installation
-and operation, Triton is proven at scale: it is the software that runs
-the [Joyent public cloud](https://www.joyent.com/public-cloud)
-and powers
-[private clouds](https://www.joyent.com/products/private-cloud)
-at organizations of all size and industry.
+Triton DataCenter (just "Triton" for short, formerly "SmartDataCenter" and
+"SDC") is an open-source cloud management platform that delivers next
+generation, container-based, service-oriented infrastructure across one or more
+data centers. With an emphasis on ease of installation and operation, Triton is
+proven at scale: Triton powers the [Triton
+Cloud](https://www.joyent.com/datacenter/docs/cloud) and private data centers
+([Triton Enterprise]( https://www.joyent.com/datacenter/docs/enterprise)
+worldwide.
 
 This repository provides documentation for the overall Triton project and
 pointers to the other repositories that make up a complete Triton deployment.
@@ -34,7 +34,8 @@ For additional resources, you can visit the
 A Triton DataCenter installation consists of two or more servers. All servers run
 [SmartOS](http://smartos.org). One server acts as the management server, the
 headnode, which houses the initial set of core services that drive Triton. The
-remainder are compute nodes (CNs) which run instances (virtual machines).
+remainder are compute nodes (CNs) which run instances (containers and
+virtual machines).
 
 Triton features:
 
@@ -56,8 +57,7 @@ Triton consists of the following components:
 
 For more details, see:
 
-- The [Overview of Triton Elastic Container Infrastructure](https://docs.joyent.com/private-cloud)
-  in the Joyent customer documentation.
+- The [Triton Enterprise](https://docs.joyent.com/private-cloud) documentation.
 - [Triton DataCenter Architecture](./docs/developer-guide/architecture.md) for
   overall architecture.
 - [Triton DataCenter Reference](./docs/reference.md) for an
@@ -281,7 +281,7 @@ curl -C - -O https://us-east.manta.joyent.com/Joyent_Dev/public/SmartDataCenter/
 Once you have downloaded the latest release image, you will need to
 [write it to a USB key](https://docs.joyent.com/private-cloud/install/installation-media)
 boot the headnode server using the USB key, and follow the install prompts. All steps necessary
-to plan, install, and configure Triton DataCenter (Triton) are available in the Joyent 
+to plan, install, and configure Triton DataCenter (Triton) are available in the Joyent
 customer documenation [Installing Triton Elastic Container Infrastructure](https://docs.joyent.com/private-cloud/install).
 
 
@@ -317,38 +317,13 @@ for details on building each of the Triton components.
 ## Contributing
 
 To report bugs or request features, submit issues here on
-GitHub, [joyent/triton/issues](https://github.com/joyent/triton/issues).
-If you're contributing code, make pull requests to the appropriate
-repositories (see [the repo overview](./docs/developer-guide/repos.md)).
-If you're contributing something substantial, you should first contact
-developers on the [sdc-discuss mailing list](mailto:sdc-discuss@lists.smartdatacenter.org)
-([subscribe](https://www.listbox.com/subscribe/?list_id=247449),
-[archives](http://www.listbox.com/member/archive/247449/=now)).
-
+GitHub, [joyent/triton/issues](https://github.com/joyent/triton/issues)
+(or on the GitHub issue tracker for the relevant project).
 For support of Joyent products and services, please contact [Joyent customer
 support](https://help.joyent.com/home) instead.
 
-Triton repositories follow the [Joyent Engineering Guidelines](https://github.com/joyent/eng/blob/master/docs/index.md).
-Notably:
-
-- The #master branch should be first-customer-ship (FCS) quality at all times.
-  Don't push anything until it's tested.
-- All repositories should be `make check` clean at all times.
-- All repositories should have tests that run cleanly at all times.
-
-`make check` checks both JavaScript style and lint. Style is checked with
-[jsstyle](https://github.com/davepacheco/jsstyle). The specific style rules are
-somewhat repo-specific. Style is somewhat repo-specific. See the jsstyle
-configuration file or `JSSTYLE_FLAGS` in Makefiles in each repo for exceptions
-to the default jsstyle rules.
-
-Lint is checked with
-[javascriptlint](https://github.com/davepacheco/javascriptlint).
-([Don't conflate lint with style!](http://dtrace.org/blogs/dap/2011/08/23/javascriptlint/)
-There are gray areas, but generally speaking, style rules are arbitrary, while
-lint warnings identify potentially broken code. Repos sometimes have
-repo-specific lint rules -- look for "tools/jsl.web.conf" and
-"tools/jsl.node.conf" for per-repo exceptions to the default rules.
+See the [Contribution Guidelines](CONTRIBUTING.md) for information about
+contributing changes to the project.
 
 
 ## Design Principles
diff --git a/docs/developer-guide/repos.md b/docs/developer-guide/repos.md
index 3ca02f4..6ccd673 100644
--- a/docs/developer-guide/repos.md
+++ b/docs/developer-guide/repos.md
@@ -1,7 +1,7 @@
-# SmartDataCenter repos
+# Triton DataCenter repos
 
 This page holds an overview of the source repositories that make up
-SmartDataCenter (SDC). See also [the reference](../reference.md).
+Triton DataCenter. See also [the reference](../reference.md).
 
 
 The customer-facing self-service API:
diff --git a/docs/reference.md b/docs/reference.md
index 422f098..1480b06 100644
--- a/docs/reference.md
+++ b/docs/reference.md
@@ -1,9 +1,9 @@
-# SmartDataCenter Reference
+# Triton DataCenter Reference
 
-SmartDataCenter is a large and complex beast. Many of the components that make
-up SDC (REST APIs, agents, the SmartOS platform, important libraries) have their
-own reference documentation. This page links to those, with a brief description
-of each. See also the [overview of SDC repositories](./repos.md).
+Triton DataCenter is a large and complex beast. Many of the components that make
+up Triton (REST APIs, agents, the SmartOS platform, important libraries) have
+their own reference documentation. This page links to those, with a brief
+description of each. See also the [overview of Triton repositories](./repos.md).
 
 
 ## Services
