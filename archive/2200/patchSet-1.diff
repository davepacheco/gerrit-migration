From 73bf4ea5810537675dbe5a67072b2c061036051f Mon Sep 17 00:00:00 2001
From: Jerry Jelinek <jerry.jelinek@joyent.com>
Date: Mon, 10 Jul 2017 19:34:35 +0000
Subject: [PATCH] OS-5028 mount -t nfs4 not working

---
 usr/src/lib/brand/lx/lx_brand/common/mount.c     | 4 ++--
 usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c | 6 ++++--
 usr/src/uts/common/brand/lx/syscall/lx_mount.c   | 2 +-
 3 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/usr/src/lib/brand/lx/lx_brand/common/mount.c b/usr/src/lib/brand/lx/lx_brand/common/mount.c
index d06379555a..6ecd5cfc4f 100644
--- a/usr/src/lib/brand/lx/lx_brand/common/mount.c
+++ b/usr/src/lib/brand/lx/lx_brand/common/mount.c
@@ -22,7 +22,7 @@
 /*
  * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
  * Use is subject to license terms.
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 #include <assert.h>
@@ -405,7 +405,7 @@ lx_mount(uintptr_t p1, uintptr_t p2, uintptr_t p3, uintptr_t p4,
 	lx_debug("\tlinux mount fstype: %s", fstype);
 
 	/* The in-kernel mount code should only call us for an NFS mount. */
-	assert(strcmp(fstype, "nfs") == 0);
+	assert(strcmp(fstype, "nfs") == 0 || strcmp(fstype, "nfs4") == 0);
 
 	/*
 	 * While SunOS is picky about mount(2) target paths being absolute,
diff --git a/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c b/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c
index 9018afc12a..ca90a80e5f 100644
--- a/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c
+++ b/usr/src/lib/brand/lx/lx_brand/common/mount_nfs.c
@@ -1364,7 +1364,6 @@ convert_nfs_arg_str(char *srcp, char *mntopts, nfs_mnt_data_t *nmdp)
 	return (0);
 }
 
-/* ARGSUSED2 */
 int
 lx_nfs_mount(char *srcp, char *mntp, char *fst, int lx_flags, char *opts)
 {
@@ -1391,6 +1390,9 @@ lx_nfs_mount(char *srcp, char *mntp, char *fst, int lx_flags, char *opts)
 		return (r);
 	}
 
+	if (strcmp(fst, "nfs4") == 0)
+		nmdp->nmd_nfsvers = NFS_V4;
+
 	/* Linux seems to always allow overlay mounts */
 	il_flags |= MS_OVERLAY;
 
@@ -1443,7 +1445,7 @@ lx_nfs_mount(char *srcp, char *mntp, char *fst, int lx_flags, char *opts)
 	if ((r = set_args(&il_flags, argp, host, opts, nmdp)) != 0)
 		goto out;
 
-	if (nmdp->nmd_nfsvers == 4) {
+	if (nmdp->nmd_nfsvers == NFS_V4) {
 		/*
 		 * In the case of version 4 there is no MOUNT program, thus no
 		 * need for an RPC to get a file handle.
diff --git a/usr/src/uts/common/brand/lx/syscall/lx_mount.c b/usr/src/uts/common/brand/lx/syscall/lx_mount.c
index 254e8ec93a..46d16030d5 100644
--- a/usr/src/uts/common/brand/lx/syscall/lx_mount.c
+++ b/usr/src/uts/common/brand/lx/syscall/lx_mount.c
@@ -415,7 +415,7 @@ lx_mount(const char *sourcep, const char *targetp, const char *fstypep,
 	/*
 	 * Vector back out to userland emulation for NFS.
 	 */
-	if (strcmp(fstype, "nfs") == 0) {
+	if (strcmp(fstype, "nfs") == 0 || strcmp(fstype, "nfs4") == 0) {
 		uintptr_t uargs[5] = {(uintptr_t)sourcep, (uintptr_t)targetp,
 		    (uintptr_t)fstypep, (uintptr_t)flags, (uintptr_t)datap};
 
-- 
2.21.0

