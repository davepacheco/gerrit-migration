From 527b7145404220aebde8d5aa4ca352a219c80c88 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Mon, 30 Apr 2018 13:21:49 -0700
Subject: [PATCH] MANTA-3672 want support for cross-account RBAC role
 membership Reviewed by: Cody Peter Mello <cody.mello@joyent.com>

---
 lib/client.js | 39 +++++++++++++++++++++++++++------------
 package.json  |  3 +--
 2 files changed, 28 insertions(+), 14 deletions(-)

diff --git a/lib/client.js b/lib/client.js
index 126c6e5..b5279dd 100644
--- a/lib/client.js
+++ b/lib/client.js
@@ -447,8 +447,6 @@ MahiClient.prototype.authorize = function authorize(opts) {
             principal.account.isOperator) {
 
             return (true);
-        } else {
-            throw new errors.CrossAccountError();
         }
     }
 
@@ -472,22 +470,39 @@ MahiClient.prototype.authorize = function authorize(opts) {
      */
     for (i = 0; i < activeRoles.length; ++i) {
         // check if the principal is allowed to assume the role
-        if (!principal.roles[activeRoles[i]]) {
+        var role = principal.roles[activeRoles[i]];
+        if (!role) {
             throw new errors.InvalidRoleError(activeRoles[i]);
         }
 
         /*
-         * The isOperator check here means that admin users "inherit" operator
-         * privileges from the account.
+         * Having the "administrator" role on a given account means you can do
+         * anything to objects owned by that account.
          */
-        if (principal.roles[activeRoles[i]].name === ADMIN_ROLE_NAME) {
-            if (owner.account.uuid === principal.account.uuid ||
-                principal.account.isOperator) {
-
+        if (role.name === ADMIN_ROLE_NAME) {
+            if (owner.account.uuid === role.account) {
                 return (true);
             }
+            /*
+             * Sub-users on an operator account that have been added to that
+             * operator's "administrator" rule inherit operator access.
+             *
+             * We have to check the account is the same as the role here so that
+             * being on the admin role of a *different* account doesn't confer
+             * operator access.
+             */
+            if (principal.account.isOperator &&
+                principal.account.uuid === role.account) {
+                return (true);
+            }
+            /*
+             * Otherwise ignore this role membership -- admin roles can't have
+             * any attached policy.
+             */
+
         } else if (resourceTags.indexOf(activeRoles[i]) >= 0) {
-                roles.push(activeRoles[i]);
+            /* Ordinary non-admin roles are processed below. */
+            roles.push(activeRoles[i]);
         }
     }
 
@@ -495,8 +510,8 @@ MahiClient.prototype.authorize = function authorize(opts) {
         throw new errors.NoMatchingRoleTagError();
     }
 
-    roles.forEach(function (role) {
-        principal.roles[role].rules.forEach(function (rule) {
+    roles.forEach(function (thisRole) {
+        principal.roles[thisRole].rules.forEach(function (rule) {
             rules.push(rule[1]);
         });
     });
diff --git a/package.json b/package.json
index 9c816c9..9f863ff 100644
--- a/package.json
+++ b/package.json
@@ -1,9 +1,8 @@
 {
     "name": "mahi",
     "description": "Mahi client",
-    "version": "2.0.1",
+    "version": "2.1.0",
     "author": "Joyent (joyent.com)",
-    "private": true,
     "main": "index.js",
     "dependencies": {
         "aperture": "git://github.com/joyent/node-aperture.git#master",
-- 
2.21.0

