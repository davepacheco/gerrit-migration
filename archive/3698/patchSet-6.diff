commit 3da4fe60a7a5b3133ead67461cc5f9a4c7749ca9 (refs/changes/98/3698/6)
Author: Jordan Hendricks <jordan.hendricks@joyent.com>
Date:   2018-04-04T23:01:11+00:00 (1 year, 6 months ago)
    
    MANTA-3410 Audit job reports missing MPU parts
    MANTA-3608 update mola node-verror dependency
    MANTA-3613 update mola nodeunit dependency

diff --git a/lib/auditor.js b/lib/auditor.js
index 7b592f9..2b376a8 100644
--- a/lib/auditor.js
+++ b/lib/auditor.js
@@ -5,14 +5,29 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
-var util = require('util');
-var events = require('events');
+var assert = require('assert-plus');
 var carrier = require('carrier');
+var events = require('events');
+var util = require('util');
 
 
+///--- Helpers
+
+/*
+ * Returns true if the given key is under the directory structure
+ * "/:accountUuid/uploads/", and false otherwise.
+ */
+function uploadsDirChild(key) {
+        assert.string(key, 'key');
+
+        /* JSSTYLED */
+        var uploadsRegex = /^\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}\/uploads\//;
+        return (key.match(uploadsRegex));
+}
+
 
 ///--- API
 
@@ -62,7 +77,22 @@ function Auditor(opts, listener) {
                 } else {
                         if ((currMako.objectId !== objectId) ||
                             (currMako.storageNodes.indexOf(storageId) === -1)) {
-                                self.emit('problem', line);
+
+                            if (parts.length >= 4) {
+                                var key = parts[3];
+
+                               /*
+                                * Committed, non-garbage collected multipart
+                                * uploads may have parts with no backing mako
+                                * file, which are removed during normal MPU
+                                * commit operations.
+                                */
+                                if (uploadsDirChild(key)) {
+                                        return;
+                                }
+                            }
+
+                            self.emit('problem', line);
                         }
                 }
         });
diff --git a/package.json b/package.json
index 8d477f7..70b65c0 100644
--- a/package.json
+++ b/package.json
@@ -23,11 +23,11 @@
                 "posix-getopt": "1.0.0",
                 "sprintf-js": "0.0.7",
                 "vasync": "1.6.1",
-                "verror": "^1.9.0",
+                "verror": "^1.10.0",
                 "vstream": "0.1.0"
         },
         "devDependencies": {
-                "nodeunit": "0.7.4"
+                "nodeunit": "0.9.1"
         },
         "sdcDependencies": {
                 "config-agent": ">=1.2.0"
diff --git a/test/auditor.test.js b/test/auditor.test.js
index 8d491a5..6697684 100644
--- a/test/auditor.test.js
+++ b/test/auditor.test.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2018, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -110,6 +110,77 @@ test('test: no problem, links', function (t) {
         });
 });
 
+test('test: no problem, multipart upload parts', function (t) {
+        var p1 = [
+                '',
+                '61567b8a-980d-4260-ff3e-91ee1a6b01c2',
+                'uploads',
+                'b38',
+                'b385957d-ba86-4ea5-ee90-fbc6918fa842',
+                '0'
+        ].join('/');
+        var p2 = [
+                '',
+                '61567b8a-980d-4260-ff3e-91ee1a6b01c2',
+                'uploads',
+                'b38',
+                'b385957d-ba86-4ea5-ee90-fbc6918fa842',
+                '1'
+        ].join('/');
+        var p3 = [
+                '',
+                '34f89fa3-c63f-4d25-b00c-9d3ad2f148b3',
+                'uploads',
+                'b',
+                'b843370f-43a3-4579-808b-3e5d2d2e0632',
+                '0'
+        ].join('/');
+
+        var data = l('o1', 's1', 'moray', p1) +
+                l('o2', 's1', 'moray', p2) +
+                l('o3', 's2', 'moray', p3);
+        var stream = new MemoryStream(data);
+        var auditor = lib.createAuditor({ reader: stream });
+        var problem = false;
+
+        auditor.on('problem', function (p) {
+                problem = true;
+        });
+
+        auditor.on('end', function () {
+                t.ok(!problem);
+                t.end();
+        });
+
+        process.nextTick(function () {
+                stream.end();
+        });
+});
+
+test('test: no problem, non-MPU part items under top-level uploads dir',
+function (t) {
+        var data = l('o1', 's1', 'moray',
+                        '/61567b8a-980d-4260-ff3e-91ee1a6b01c2/uploads/foo') +
+                l('o2', 's1', 'moray',
+                        '/61567b8a-980d-4260-ff3e-91ee1a6b01c2/uploads/b3/foo');
+        var stream = new MemoryStream(data);
+        var auditor = lib.createAuditor({ reader: stream });
+        var problem = false;
+
+        auditor.on('problem', function (p) {
+                problem = true;
+        });
+
+        auditor.on('end', function () {
+                t.ok(!problem);
+                t.end();
+        });
+
+        process.nextTick(function () {
+                stream.end();
+        });
+});
+
 test('test: problem one missing', function (t) {
         var data = l('o1', 's1', 'mako') +
                 l('o1', 's1', 'moray', 'foo') +
@@ -186,6 +257,67 @@ test('test: missing at end', function (t) {
         });
 });
 
+test('test: problem, paths similar to multipart upload parts', function (t) {
+        // account not a uuid (one character missing)
+        var a1 = [
+                '',
+                '61567b8a-980d-4260-ff3e-91ee1a6b012',
+                'uploads',
+                'b38',
+                'b385957d-ba86-4ea5-ee90-fbc6918fa842',
+                '0'
+        ];
+        var p1 = a1.join('/');
+
+        // account not a uuid (account name)
+        var a2 = [
+                '',
+                'poseidon',
+                'uploads',
+                'b38',
+                'b385957-ba86-4ea5-ee90-fbc6918fa842',
+                '1'
+        ];
+        var p2 = a2.join('/');
+
+        // different top-level directory
+        var a3 = [
+                '',
+                '34f89fa3-c63f-4d25-b00c-9d3ad2f148b3',
+                'stor',
+                'uploads',
+                'b',
+                'b843370f-43a3-4579-808b-3e5d2d2e0632',
+                '0'
+        ];
+        var p3 = a3.join('/');
+
+        var data =
+                l('o1', 's1', 'moray', p1) +
+                l('o2', 's1', 'moray', p2) +
+                l('o3', 's2', 'moray', p3);
+
+        var stream = new MemoryStream(data);
+        var auditor = lib.createAuditor({ reader: stream });
+        var problem = false;
+        var problems = [];
+
+        auditor.on('problem', function (p) {
+                problem = true;
+                problems.push(p);
+        });
+
+        auditor.on('end', function () {
+                t.ok(problem);
+                assert.equal(3, problems.length);
+                t.end();
+        });
+
+        process.nextTick(function () {
+                stream.end();
+        });
+});
+
 test('test: multiple problems in stack', function (t) {
         var data = l('o1', 's1', 'mako') +
                 l('o1', 's1', 'moray', 'foo') +
