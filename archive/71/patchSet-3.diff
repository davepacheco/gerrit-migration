commit 6fcca2cff7b7c503afd6ede81d5ce8fe3b4c738e (refs/changes/71/71/3)
Author: Trent Mick <trent.mick@joyent.com>
Date:   2016-07-15T16:46:28-07:00 (3 years, 3 months ago)
    
    joyent/node-manta#265 `mfind --json,-j`
    Reviewed by: Dave Pacheco <dap@joyent.com>

diff --git a/CHANGES.md b/CHANGES.md
index ec21871..d9fb049 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -2,6 +2,14 @@
 
 ## not yet released
 
+## 3.1.0
+
+- joyent/node-manta#265 Add `--json, -j` option to `mfind`. E.g.:
+
+        $ mfind -j ~~/stor/tmp
+        {"name":"foo-file.gz","etag":"142ad91b-73d8-6cb4-9cd9-efacf7df7a9a","size":229535627,"type":"object","mtime":"2014-10-08T22:53:25.146Z","durability":2,"parent":"/trent.mick/stor/tmp","depth":0}
+        {"name":"foo.imgmanifest","etag":"88ac47b9-e53f-c065-b446-e2d0455c0c00","size":1052,"type":"object","mtime":"2014-10-08T22:52:44.298Z","durability":2,"parent":"/trent.mick/stor/tmp","depth":0}
+
 ## 3.0.0
 
 - joyent/node-manta#246 Update many dependencies to come up to the modern age.
diff --git a/README.md b/README.md
index 1041256..1d30d69 100644
--- a/README.md
+++ b/README.md
@@ -76,9 +76,11 @@ The set of test files run can be filtered:
 
     make test TEST_FILTER=muntar
 
-As well, you can get debug/trace logging:
+As well, you can get debug/trace logging (note that we intentionally avoid
+`LOG_LEVEL` because the `m*` tools use that and sharing the same envvar can
+break tests):
 
-    make test LOG_LEVEL=trace 2>&1 | bunyan
+    make test TEST_LOG_LEVEL=trace 2>&1 | bunyan
 
 
 There is a mechanism to re-build and test with a number of installed node
diff --git a/bin/mfind b/bin/mfind
index 8a6bfad..c213f2a 100755
--- a/bin/mfind
+++ b/bin/mfind
@@ -71,6 +71,11 @@ var OPTIONS_PARSER = dashdash.createParser({
             type: 'positiveInteger',
             help: 'only return items less than this depth',
             helpArg: 'DEPTH'
+        },
+        {
+            names: ['json', 'j'],
+            type: 'bool',
+            help: 'Output a newline-separated JSON stream of find results.'
         }
     ])
 });
@@ -118,9 +123,14 @@ function parseOptions() {
 
 
 function printEntry(opts, obj) {
-    console.log(obj.parent + (obj.name ? ('/' + obj.name) : ''));
-    if (opts.limit && (++TOTAL_ENTRIES >= opts.limit))
+    if (opts.json) {
+        console.log(JSON.stringify(obj));
+    } else {
+        console.log(obj.parent + (obj.name ? ('/' + obj.name) : ''));
+    }
+    if (opts.limit && (++TOTAL_ENTRIES >= opts.limit)) {
         process.exit(0);
+    }
 }
 
 
diff --git a/docs/man/mfind.md b/docs/man/mfind.md
index f1e44d9..d496ac1 100644
--- a/docs/man/mfind.md
+++ b/docs/man/mfind.md
@@ -1,4 +1,4 @@
-mfind 1 "May 2013" Manta "Manta Commands"
+mfind 1 "July 2016" Manta "Manta Commands"
 =======================================
 
 NAME
@@ -21,6 +21,16 @@ Unlike GNU/BSD find, `mfind` is not yet sophisticated enough to support full
 `expression` matching, but does (currently) allow a `--name` option that
 supports Regular Expression matching.
 
+With the `--json` option a stream of JSON objects is printed. Each JSON object
+contains the fields from the Manta [ListDirectory API
+endpoint](https://apidocs.joyent.com/manta/api.html#ListDirectory), plus the
+following client-side added fields:
+
+- `depth`: An integer directory depth under the given directory,
+  starting from 0.
+- `parent`: The full directory path of the entry.
+
+
 EXAMPLES
 --------
 
@@ -44,6 +54,9 @@ OPTIONS
   SSL connections are attempted to be made secure by using the CA certificate
   bundle installed by default.
 
+`-j, --json`
+  Output a newline-separated JSON stream of find results.
+
 `-k, --key fingerprint`
   Authenticate using the SSH key described by FINGERPRINT.  The key must
   either be in `~/.ssh` or loaded in the SSH agent via `ssh-add`.
diff --git a/man/man1/mfind.1 b/man/man1/mfind.1
index 0ebbdc5..0af9af6 100644
--- a/man/man1/mfind.1
+++ b/man/man1/mfind.1
@@ -1,4 +1,4 @@
-.TH mfind 1 "May 2013" Manta "Manta Commands"
+.TH mfind 1 "July 2016" Manta "Manta Commands"
 .SH NAME
 .PP
 mfind \- search for objects in a directory hierarchy.
@@ -13,6 +13,18 @@ listing names that are the specified \fB\fCtype\fR (or all if none is specified)
 Unlike GNU/BSD find, \fB\fCmfind\fR is not yet sophisticated enough to support full
 \fB\fCexpression\fR matching, but does (currently) allow a \fB\fC\-\-name\fR option that
 supports Regular Expression matching.
+.PP
+With the \fB\fC\-\-json\fR option a stream of JSON objects is printed. Each JSON object
+contains the fields from the Manta ListDirectory API
+endpoint \[la]https://apidocs.joyent.com/manta/api.html#ListDirectory\[ra], plus the
+following client\-side added fields:
+.RS
+.IP \(bu 2
+\fB\fCdepth\fR: An integer directory depth under the given directory,
+starting from 0.
+.IP \(bu 2
+\fB\fCparent\fR: The full directory path of the entry.
+.RE
 .SH EXAMPLES
 .PP
 .RS
@@ -37,6 +49,9 @@ This option explicitly allows "insecure" SSL connections and transfers.  All
 SSL connections are attempted to be made secure by using the CA certificate
 bundle installed by default.
 .TP
+\fB\fC\-j, \-\-json\fR
+Output a newline\-separated JSON stream of find results.
+.TP
 \fB\fC\-k, \-\-key fingerprint\fR
 Authenticate using the SSH key described by FINGERPRINT.  The key must
 either be in \fB\fC~/.ssh\fR or loaded in the SSH agent via \fB\fCssh\-add\fR\&.
@@ -112,5 +127,4 @@ $ mfind \-vv ~~/stor 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/man/man1/mjob.1 b/man/man1/mjob.1
index 319e1e9..c6086a1 100644
--- a/man/man1/mjob.1
+++ b/man/man1/mjob.1
@@ -325,7 +325,7 @@ Only list jobs in the given state.
 .PP
 Estimates the cost in USD of a job by creating a Manta job and adding as inputs
 compute usage reports from /:login/reports/usage/compute. Assets are pulled from
-/manta/public/jobs/jobcost. Note that usage reports are generated
+/manta/public/jobs/mjob\-cost. Note that usage reports are generated
 asynchronously, so mjob cost may fail when estimating the cost of jobs that
 were running recently.**
 .IP
@@ -370,5 +370,4 @@ $ mjob \-vv ~~/stor/foo 2>&1 | bunyan
 .PP
 DSA keys do not work when loaded via the SSH agent.
 .PP
-Report bugs at Github
-\[la]https://github.com/joyent/node-manta/issues\[ra]
+Report bugs at Github \[la]https://github.com/joyent/node-manta/issues\[ra]
diff --git a/package.json b/package.json
index 2307d24..0219f86 100644
--- a/package.json
+++ b/package.json
@@ -7,7 +7,7 @@
         "type": "git",
         "url": "git://github.com/joyent/node-manta.git"
     },
-    "version": "3.0.0",
+    "version": "3.1.0",
     "main": "./lib/index.js",
     "dependencies": {
         "assert-plus": "^1.0.0",
@@ -37,6 +37,7 @@
         "watershed": "^0.3.1"
     },
     "devDependencies": {
+        "forkexec": "^1.0.0",
         "nodeunit": "~0.9.1"
     },
     "directories": {
diff --git a/test/lib/logging.js b/test/lib/logging.js
index 62835a7..bd6c134 100644
--- a/test/lib/logging.js
+++ b/test/lib/logging.js
@@ -18,7 +18,7 @@ function createLogger() {
         src: true,
         streams: [
             {
-                level: (process.env.LOG_LEVEL || 'info'),
+                level: (process.env.TEST_LOG_LEVEL || 'info'),
                 stream: process.stderr
             }
         ]
diff --git a/test/mfind.test.js b/test/mfind.test.js
new file mode 100644
index 0000000..c54fbb9
--- /dev/null
+++ b/test/mfind.test.js
@@ -0,0 +1,148 @@
+/*
+ * Copyright 2016 Joyent, Inc.
+ */
+
+/*
+ * Test `mfind`.
+ */
+
+var assert = require('assert-plus');
+var forkExecWait = require('forkexec').forkExecWait;
+var format = require('util').format;
+var fs = require('fs');
+var libuuid = require('uuid');
+var path = require('path');
+var vasync = require('vasync');
+
+var logging = require('./lib/logging');
+
+
+// ---- globals
+
+var log = logging.createLogger();
+
+var BINDIR = path.resolve(__dirname, '../bin');
+var MFIND = path.resolve(BINDIR, 'mfind');
+var MMKDIR = path.resolve(BINDIR, 'mmkdir');
+var MPUT = path.resolve(BINDIR, 'mput');
+var MRM = path.resolve(BINDIR, 'mrm');
+
+var TESTDIR = format('/%s/stor/node-manta-test-mfind-%s',
+    process.env.MANTA_USER || 'admin',
+    libuuid.v4().split('-')[0]);
+var TESTTREE = [
+    {
+        path: TESTDIR,
+        type: 'directory'
+    },
+    {
+        path: TESTDIR + '/afile.txt',
+        type: 'object',
+        content: 'afile'
+    },
+    {
+        path: TESTDIR + '/adir',
+        type: 'directory'
+    },
+    {
+        path: TESTDIR + '/adir/bfile.txt',
+        type: 'object',
+        content: 'bfile'
+    }
+];
+
+
+// ---- helper functions
+
+function test(name, testfunc) {
+    module.exports[name] = testfunc;
+}
+
+
+// ---- tests
+
+test('setup: create test tree at ' + TESTDIR, function (t) {
+    var tmpFile = '/var/tmp/node-manta-test-tmp-file-' + process.pid;
+
+    vasync.forEachPipeline({
+        inputs: TESTTREE,
+        func: function createTreeItem(item, next) {
+            log.trace({item: item}, 'create test tree item');
+            if (item.type === 'directory') {
+                forkExecWait({argv: [MMKDIR, '-p', item.path]}, next);
+            } else {
+                /*
+                 * Would like a 'stdin' option to `forkExecWait`. For now I'll
+                 * quick hack with a local file. An alternative would be
+                 * to use the manta client.
+                 */
+                vasync.pipeline({funcs: [
+                    function mkTmpFile(_, next2) {
+                        fs.writeFile(tmpFile, item.content, next2);
+                    },
+                    function mputIt(_, next2) {
+                        forkExecWait({argv: [MPUT, '-f', tmpFile, item.path]},
+                            next2);
+                    },
+                    function rmTmpFile(_, next2) {
+                        fs.unlink(tmpFile, next2);
+                    }
+                ]}, next);
+            }
+        }
+    }, function (err) {
+        t.ifError(err, err);
+        t.done();
+    });
+});
+
+
+test('mfind TESTDIR', function (t) {
+    forkExecWait({
+        argv: [MFIND, TESTDIR]
+    }, function (err, info) {
+        t.ifError(err, err);
+        t.ok(/afile.txt$/m.test(info.stdout), 'afile.txt in stdout');
+        t.ok(/adir$/m.test(info.stdout), 'adir in stdout');
+        t.ok(/adir\/bfile.txt$/m.test(info.stdout), 'adir/bfile.txt in stdout');
+        t.done();
+    });
+});
+
+test('mfind -j TESTDIR', function (t) {
+    forkExecWait({
+        argv: [MFIND, '-j', TESTDIR]
+    }, function (err, info) {
+        t.ifError(err, err);
+        var hits = info.stdout.trim().split(/\n/g)
+            .map(function (line) { return JSON.parse(line); });
+        ['afile.txt', 'adir', 'bfile.txt'].forEach(function findHit(name) {
+            var match = hits.filter(
+                function (h) { return h.name === name; })[0];
+            t.ok(match, format('found a matching hit for name "%s": %j',
+                name, match));
+        });
+
+        // Assert fields on one of the hits.
+        var hit = hits[0];
+        t.equal(typeof (hit['name']), 'string', 'have "name" (string) field');
+        t.equal(typeof (hit['type']), 'string', 'have "type" (string) field');
+        t.equal(typeof (hit['mtime']), 'string', 'have "mtime" (string) field');
+        t.equal(typeof (hit['parent']), 'string',
+            'have "parent" (string) field');
+        t.equal(typeof (hit['depth']), 'number', 'have "depth" (string) field');
+        t.done();
+    });
+});
+
+
+test('cleanup: rm test tree ' + TESTDIR, function (t) {
+    // Sanity checks that we don't `mrm -r` a non-test dir.
+    assert.ok(TESTDIR);
+    assert.ok(TESTDIR.indexOf('node-manta-test') !== -1);
+
+    forkExecWait({argv: [MRM, '-r', TESTDIR]}, function (err) {
+        t.ifError(err, err);
+        t.done();
+    });
+});
