From 56ee3c4f5a0a6997df5c038ddd32dd06bdd2ff1e Mon Sep 17 00:00:00 2001
From: "Pedro P. Candel" <pedro@joyent.com>
Date: Sat, 6 Aug 2016 08:29:33 +0200
Subject: [PATCH] TOOLS-1503 sdcadm fails to print an error with "%j" Reviewed
 by: Trent Mick <trent.mick@joyent.com> Reviewed by: Joshua M. Clulow
 <jmc@joyent.com>

---
 lib/cli/index.js                      | 6 ++++--
 lib/common.js                         | 2 +-
 lib/default-fabric.js                 | 7 ++++---
 lib/post-setup/docker.js              | 4 ++--
 lib/post-setup/fabrics.js             | 2 +-
 lib/procedures/update-dockerlogger.js | 2 +-
 lib/sdcadm.js                         | 4 ++--
 7 files changed, 15 insertions(+), 12 deletions(-)

diff --git a/lib/cli/index.js b/lib/cli/index.js
index b72ffa5..f621180 100644
--- a/lib/cli/index.js
+++ b/lib/cli/index.js
@@ -22,6 +22,7 @@ var Cmdln = cmdln.Cmdln;
 var strsplit = require('strsplit');
 var vasync = require('vasync');
 var uuid = require('node-uuid');
+var extsprintf = require('extsprintf');
 
 var common = require('../common');
 var errors = require('../errors');
@@ -133,8 +134,9 @@ CLI.prototype.init = function init(opts, args, callback) {
      */
     this.progress = function progress() {
         var args_ = Array.prototype.slice.call(arguments);
-        self.log.debug.apply(self.log, [ {progress: true} ].concat(args_));
-        console.log.apply(null, args_);
+        var msg = extsprintf.sprintf.apply(null, args_);
+        self.log.debug({progress: true}, msg);
+        console.log(msg);
     };
 
     // Cmdln class handles `opts.help`.
diff --git a/lib/common.js b/lib/common.js
index 5f48816..8a0700d 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -1254,7 +1254,7 @@ function urDiscovery(opts, cb) {
                 'respond to discovery): %s', err.nodes_missing.length,
                 err.nodes_missing.join(', '));
         } else {
-            progress('Unexpected ur discovery failure:', err);
+            progress('Unexpected ur discovery failure: %r', err);
         }
         onceNext(err);
     });
diff --git a/lib/default-fabric.js b/lib/default-fabric.js
index 3a88ce3..97027e0 100644
--- a/lib/default-fabric.js
+++ b/lib/default-fabric.js
@@ -36,7 +36,7 @@ function defFabricAddVLAN(opts, cb) {
         }
         for (var i = 0; i < vlans.length; i++) {
             if (vlans[i].name === vlanCfg.name) {
-                opts.progress('Already have default fabric VLAN for account',
+                opts.progress('Already have default fabric VLAN for account %s',
                     opts.account);
                 return cb(null, vlans[i]);
             }
@@ -75,7 +75,8 @@ function defFabricAddNetwork(opts, cb) {
         }
         for (var i = 0; i < nets.length; i++) {
             if (nets[i].name === netCfg.name) {
-                opts.progress('Already have default fabric network for account',
+                opts.progress(
+                    'Already have default fabric network for account %s',
                     opts.account);
                 return cb(null, nets[i]);
             }
@@ -114,7 +115,7 @@ function addDefaultFabric(opts, cb) {
         if (err) {
             return cb(err);
         }
-        opts.progress('Successfully added default fabric for account',
+        opts.progress('Successfully added default fabric for account %s',
             opts.account);
         cb();
     });
diff --git a/lib/post-setup/docker.js b/lib/post-setup/docker.js
index 78c0351..b05834d 100644
--- a/lib/post-setup/docker.js
+++ b/lib/post-setup/docker.js
@@ -364,7 +364,7 @@ function do_docker(subcmd, opts, args, cb) {
                             ctx.cloudapiSvc.metadata.CLOUDAPI_SERVICES)
                     }));
                 }
-                self.progress('Update "docker" key in CLOUDAPI_SERVICES to',
+                self.progress('Update "docker" key in CLOUDAPI_SERVICES to %s',
                     dockerUrl);
                 if (!services) {
                     services = {};
@@ -534,7 +534,7 @@ function do_docker(subcmd, opts, args, cb) {
         // previous run, checksum included.
         function copyImgFileToAssets(ctx, next) {
             var assetsdir = '/usbkey/extra/dockerlogger';
-            self.progress('Copying dockerlogger to assets dir:', assetsdir);
+            self.progress('Copying dockerlogger to assets dir: %s', assetsdir);
             var argv = ['cp', ctx.filepath, assetsdir];
             mkdirp.sync(assetsdir);
             common.execFilePlus({
diff --git a/lib/post-setup/fabrics.js b/lib/post-setup/fabrics.js
index 504eb87..a93e821 100644
--- a/lib/post-setup/fabrics.js
+++ b/lib/post-setup/fabrics.js
@@ -713,7 +713,7 @@ Fabrics.prototype.updateFabricsSvcs = function updateFabricsSvcs(cb) {
     }
     var svcs = ['napi', 'vmapi', 'dhcpd'];
 
-    self.progress('Restarting config of services using "fabric_cfg":',
+    self.progress('Restarting config of services using "fabric_cfg": %s',
     svcs.join(', '));
 
     if (self.dockerSetup) {
diff --git a/lib/procedures/update-dockerlogger.js b/lib/procedures/update-dockerlogger.js
index d614ec1..f814b7d 100644
--- a/lib/procedures/update-dockerlogger.js
+++ b/lib/procedures/update-dockerlogger.js
@@ -304,7 +304,7 @@ UpdateDockerlogger.prototype.execute = function udExecute(opts, callback) {
             // previous run, checksum included.
             function copyImgFileToAssets(ctx, next) {
                 var assetsdir = '/usbkey/extra/dockerlogger';
-                progress('Copying dockerlogger to assets dir:', assetsdir);
+                progress('Copying dockerlogger to assets dir: %s', assetsdir);
                 var argv = ['cp', filepath, assetsdir];
                 mkdirp.sync(assetsdir);
                 common.execFilePlus({
diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index e74fc0d..4e3e4e5 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -1606,7 +1606,7 @@ SdcAdm.prototype.updateAgents = function updateAgents(options, callback) {
             if (path.dirname(filepath) === assetsdir) {
                 return next();
             }
-            progress('Copy agentsshar to assets dir:', assetsdir);
+            progress('Copy agentsshar to assets dir: %s', assetsdir);
             var argv = ['cp', filepath, assetsdir];
             mkdirp.sync(assetsdir);
             common.execFilePlus({
@@ -3972,7 +3972,7 @@ SdcAdm.prototype.execUpdatePlan = function execUpdatePlan(options, cb) {
         // Add error to history in case the update execution failed:
         if (err) {
             // TOOLS-879: sdcadm update should tell user about the error:
-            progress('Update error: %j', err);
+            progress('Update error: %r', err);
             if (!hist) {
                 self.log.warn('History not saved for update');
                 return cb(err);
-- 
2.21.0

