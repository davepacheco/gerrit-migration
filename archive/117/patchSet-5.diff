commit 761381b0bedb503e5913cadbc87a71c9bdd40de8 (refs/changes/17/117/5)
Author: Pedro P. Candel <pedro@joyent.com>
Date:   2016-08-01T13:18:06+02:00 (3 years, 2 months ago)
    
    TOOLS-1492 `sdcadm insts` exceptions on SAPI instances for removed servers
    Reviewed by: Joshua M. Clulow <jmc@joyent.com>

diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index e261af1..e33c8de 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -815,13 +815,28 @@ SdcAdm.prototype.listInsts = function listInsts(opts, cb) {
                             if (ins.params && ins.params.server_uuid) {
                                 var id = ins.params.server_uuid;
                                 d.server = id;
+                                /*
+                                 * If a compute node has been removed from
+                                 * CNAPI, there may still be a dangling
+                                 * SAPI instance -- if the server no
+                                 * longer exists, skip it.
+                                 */
+                                if (!ctx.serverFromUuid[id]) {
+                                    self.log.warn({
+                                        instance: ins
+                                    }, 'Skipping dockerlogger instance ' +
+                                    'for unknown server');
+                                    return null;
+                                }
                                 d.hostname = ctx.serverFromUuid[id].hostname;
                                 d.server_ip = ctx.serverAdminIpFromUuid[id];
                             }
                             return (d);
+                        }).filter(function (ins) {
+                            return (ins !== null);
                         });
                         ctx.insts = ctx.insts.concat(dlInsts);
-                        return next();
+                        next();
                     });
                 });
             });
diff --git a/test/instances.test.js b/test/instances.test.js
index 62307db..2576861 100644
--- a/test/instances.test.js
+++ b/test/instances.test.js
@@ -5,12 +5,14 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
 
 var test = require('tape').test;
 var exec = require('child_process').exec;
+var util = require('util');
+var format = util.format;
 var common = require('./common');
 
 
@@ -99,7 +101,6 @@ function checkInstancesDetails(t, instancesDetails) {
 
 // ---
 
-
 test('sdcadm instances --help', function (t) {
     checkHelp(t, 'instances');
 });
@@ -225,3 +226,50 @@ test('sdcadm instances -s', function (t) {
         t.end();
     });
 });
+
+
+test('dockerlogger insts of removed servers', function (t) {
+    var svcCmd = 'sdc-sapi /services?name=dockerlogger|json -H';
+    exec(svcCmd, function (err, stdout, stderr) {
+        t.ifError(err);
+        t.equal(stderr, '');
+        var services = JSON.parse(stdout.trim());
+        t.ok(Array.isArray(services));
+        t.ok(services[0].uuid);
+
+        var instCmd = 'sdc-sapi /instances -X POST -d \'{' +
+            '"uuid": "f189fd84-740d-4558-b2ea-36c62570e383",' +
+            format('"service_uuid": "%s",', services[0].uuid) +
+            '"params": {' +
+            '    "server_uuid": "44454c4c-4400-1057-804e-b5c04f383432"' +
+            '},' +
+            '"type": "agent"' +
+        '}\'';
+
+        exec(instCmd, function (err2, stdout2, stderr2) {
+            t.ifError(err2);
+            t.equal(stderr2, '');
+
+            // TOOLS-1492: Orphan server instances should not throw exceptions
+            // and sdcadm should just ignore them:
+            var listCmd = 'sdcadm insts svc=dockerlogger -j';
+            exec(listCmd, function (err3, stdout3, stderr3) {
+                t.ifError(err3);
+                t.equal(stderr3, '');
+
+                var listOfInsts = JSON.parse(stdout.trim());
+                t.ok(Array.isArray(listOfInsts));
+
+                var delCmd = 'sdc-sapi ' +
+                    '/instances/f189fd84-740d-4558-b2ea-36c62570e383 ' +
+                    '-X DELETE';
+                exec(delCmd, function (err4, stdout4, stderr4) {
+                    t.ifError(err4);
+                    t.equal(stderr4, '');
+
+                    t.end();
+                });
+            });
+        });
+    });
+});
