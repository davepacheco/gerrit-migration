commit 56d0f40660b17d6ff2c24d7f95080f9e2cee7e0c (refs/changes/71/2871/8)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-11-01T22:19:48+00:00 (1 year, 11 months ago)
    
    MANTA-3475 muskie should report 503 errors when moray hits its max queue length

diff --git a/lib/errors.js b/lib/errors.js
index 93be507..a1df31f 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -214,12 +214,25 @@ function InvocationError() {
 util.inherits(InvocationError, VError);
 
 
-function NoDatabasePeersError(msg) {
+/*
+ * If the NoDatabasePeersError is generated as a result of the Moray max queue
+ * limit being exceeded, Moray will create this error with a cause name and
+ * message that is used to communicate this fact to the client. This
+ * distinguishes a NoDatabasePeersError that arises because a postgres node is
+ * unreachable from a NoDatabasePeersError generated by request overload.
+ * */
+function NoDatabasePeersError(msg, causeName, causeMsg) {
     assert.string(msg, 'msg');
-    WError.call(this, msg);
+    assert.optionalString(causeName, 'causeName');
+    assert.optionalString(causeMsg, 'causeMsg');
+    VError.call(this, msg);
+    this.context = {
+        name: causeName,
+        message: causeMsg
+    };
     this.name = this.constructor.name;
 }
-util.inherits(NoDatabasePeersError, WError);
+util.inherits(NoDatabasePeersError, VError);
 
 
 function NotFunctionError(cause, name) {
diff --git a/lib/pg.js b/lib/pg.js
index 44c2ae6..521bde9 100644
--- a/lib/pg.js
+++ b/lib/pg.js
@@ -634,7 +634,8 @@ PGPool.prototype.checkout = function checkout(callback) {
     if (this.pool.queue.length >= this.maxQueueLength) {
         setImmediate(callback, new NoDatabasePeersError(
             'unable to acquire backend connection due to ' +
-            'service being overloaded'));
+            'service being overloaded', 'OverloadedError',
+                'maximum moray queue length reached'));
         return;
     }
 
