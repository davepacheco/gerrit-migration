commit 8cd77751f9c314d2f4ab164155a0cd1e1d804dbd (refs/changes/71/2871/6)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-10-30T17:34:59+00:00 (1 year, 11 months ago)
    
    MANTA-3475 muskie should report 503 errors when moray hits its max queue length

diff --git a/lib/errors.js b/lib/errors.js
index 93be507..4f3a224 100644
--- a/lib/errors.js
+++ b/lib/errors.js
@@ -214,12 +214,25 @@ function InvocationError() {
 util.inherits(InvocationError, VError);
 
 
-function NoDatabasePeersError(msg) {
+/*
+ * If the NoDatabasePeersError is generated as a result
+ * of the moray max queue limit being exceeded, moray will
+ * create this error with a cause name and message that
+ * is used to communicate this fact to muskie, which
+ * ensures the client receives an http status code 503
+ * in response.*/
+function NoDatabasePeersError(msg, causeName, causeMsg) {
     assert.string(msg, 'msg');
-    WError.call(this, msg);
+    assert.optionalString(causeName, 'causeName');
+    assert.optionalString(causeMsg, 'causeMsg');
+    VError.call(this, msg);
+    this.context = {
+        name: causeName,
+        msg: causeMsg
+    };
     this.name = this.constructor.name;
 }
-util.inherits(NoDatabasePeersError, WError);
+util.inherits(NoDatabasePeersError, VError);
 
 
 function NotFunctionError(cause, name) {
diff --git a/lib/pg.js b/lib/pg.js
index 44c2ae6..521bde9 100644
--- a/lib/pg.js
+++ b/lib/pg.js
@@ -634,7 +634,8 @@ PGPool.prototype.checkout = function checkout(callback) {
     if (this.pool.queue.length >= this.maxQueueLength) {
         setImmediate(callback, new NoDatabasePeersError(
             'unable to acquire backend connection due to ' +
-            'service being overloaded'));
+            'service being overloaded', 'OverloadedError',
+                'maximum moray queue length reached'));
         return;
     }
 
