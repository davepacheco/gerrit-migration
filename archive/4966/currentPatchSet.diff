From 8ed727f0d2dc2e9e7ff35d4441d2be042a48da73 Mon Sep 17 00:00:00 2001
From: Pedro Palazon Candel <pedro@joyent.com>
Date: Tue, 23 Oct 2018 18:44:03 +0200
Subject: [PATCH] TRITON-883 `sdcadm up SVC` should update image_uuid
 associated with the service Reviewed by: Trent Mick <trentm@gmail.com>
 Approved by: Trent Mick <trentm@gmail.com>

---
 lib/procedures/index.js           |  3 +++
 lib/procedures/update-agent-v1.js | 27 +++++++++++++++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/lib/procedures/index.js b/lib/procedures/index.js
index 5070756..2298c0b 100644
--- a/lib/procedures/index.js
+++ b/lib/procedures/index.js
@@ -742,6 +742,9 @@ function coordinatePlan(opts, cb) {
 
                 var svcInsts = [];
                 if (change.type === 'update-service') {
+                    if (opts.servers && opts.servers.length) {
+                        change.type = 'update-instances';
+                    }
                     svcInsts = instsFromSvcName[change.service.name] || [];
                     // If we have a given set of servers, just filter instances
                     // present on the given list:
diff --git a/lib/procedures/update-agent-v1.js b/lib/procedures/update-agent-v1.js
index e611040..95fda8f 100644
--- a/lib/procedures/update-agent-v1.js
+++ b/lib/procedures/update-agent-v1.js
@@ -26,6 +26,7 @@ var common = require('../common');
 var steps = require('../steps');
 
 var Procedure = require('./procedure').Procedure;
+var s = require('./shared');
 
 /**
  * Procedure for updating the different agent services.
@@ -49,6 +50,14 @@ UpdateAgentV1.prototype.summarize = function uaSummarize() {
             if (ch.insts.length) {
                 out.push(sprintf('on %d servers', ch.insts.length));
             }
+        } else if (ch.type === 'update-instances') {
+            out = [sprintf('update instances of service "%s" to image %s',
+                        ch.service.name, img.uuid),
+                        common.indent(sprintf('(%s@%s)',
+                        img.name, img.version))];
+            if (ch.insts.length) {
+                out.push(sprintf('on %d servers', ch.insts.length));
+            }
         } else if (ch.type === 'update-instance') {
             out = [sprintf('update "%s" instance of "%s" service',
                         ch.instance.instance, ch.service.name),
@@ -147,6 +156,24 @@ UpdateAgentV1.prototype.execute = function uaExecute(opts, callback) {
                     }
                 });
             },
+
+            /*
+             * We will bump Service Image only when a request to update the
+             * agent in all the servers have been made
+             */
+            function updateSapiSvcImage(_, next) {
+                if (change.type !== 'update-service') {
+                    next();
+                    return;
+                }
+                s.updateSapiSvc({
+                    change: change,
+                    opts: {
+                        sdcadm: sdcadm,
+                        progress: progress
+                    }
+                }, next);
+            },
             /*
              * Unless CNAPI has been updated to a version newer than
              * MIN_CNAPI_VERSION, tell the user about the CNAPI version
-- 
2.21.0

