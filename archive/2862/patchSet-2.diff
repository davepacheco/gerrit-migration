commit 30220e410c5cc0c449489f3d11ca91053ef41372 (refs/changes/62/2862/2)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2017-10-25T20:12:42+02:00 (1 year, 11 months ago)
    
    TOOLS-1895 sdcadm health should not hang forever when core services are down

diff --git a/lib/sdcadm.js b/lib/sdcadm.js
index 79a50ca..d803a36 100644
--- a/lib/sdcadm.js
+++ b/lib/sdcadm.js
@@ -12,26 +12,31 @@
  * Core SdcAdm class.
  */
 
-var assert = require('assert-plus');
 var child_process = require('child_process');
 var exec = child_process.exec;
-var util = require('util');
-var format = util.format;
 var fs = require('fs');
 var http  = require('http');
 var https = require('https');
-var path = require('path');
 var net = require('net');
+var path = require('path');
+var util = require('util');
+var format = util.format;
+
+
+var assert = require('assert-plus');
+var cueball = require('cueball');
 var mkdirp = require('mkdirp');
+var ProgressBar = require('progbar').ProgressBar;
 var sdcClients = require('sdc-clients');
 var semver = require('semver');
 var sprintf = require('extsprintf').sprintf;
+var uuid = require('node-uuid');
 var urclient = require('urclient');
 var vasync = require('vasync');
+var VError = require('verror').VError;
 var WfClient = require('wf-client');
-var uuid = require('node-uuid');
-var ProgressBar = require('progbar').ProgressBar;
-var cueball = require('cueball');
+
+
 
 var common = require('./common');
 var svcadm = require('./svcadm');
@@ -144,7 +149,8 @@ function SdcAdm(options) {
                             delay: 0,
                             maxDelay: 1000
                         }
-                    }
+                    },
+                    errorOnEmpty: true
                 });
             }
 
@@ -396,24 +402,22 @@ SdcAdm.prototype.init = function init(cb) {
         }
 
         self.history = new History({sdcadm: self});
-
         self.getApp({app: 'sdc'}, function (appErr, app) {
             if (appErr) {
                 // Couple known issues we can help operators with a friendly
-                // message instead of the default "ENO..." errors:
-                if (appErr.message) {
-                    if (appErr.message.match(/getaddrinfo ENOTFOUND/)) {
-                        console.log('Binder service seems to be down. ' +
+                // message instead of the default errors:
+                if (VError.hasCauseWithName(appErr, 'NoBackendsError')) {
+                    console.log('Binder service seems to be down. ' +
                                 'Please review it before proceeding');
-                    } else if (appErr.message.match(/connect ECONNREFUSED/)) {
-                        console.log('SAPI service seems to be down. ' +
+                } else if (VError.hasCauseWithName(appErr, 'PoolFailedError')) {
+                    console.log('SAPI service seems to be down. ' +
                                 'Please review it before proceeding');
-                    }
                 }
-                return cb(appErr);
+                cb(appErr);
+                return;
             }
             self.sdc = app;
-            return self.history.init(cb);
+            self.history.init(cb);
         });
     });
 };
