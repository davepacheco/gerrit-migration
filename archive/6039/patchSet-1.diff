From a5ddf54e727421e99b3c2ebd900697dcf340b3b6 Mon Sep 17 00:00:00 2001
From: Chris Burroughs <chris.burroughs@joyent.com>
Date: Tue, 2 Apr 2019 09:46:52 -0400
Subject: [PATCH] TRITON-1277 triton-origin-images could probably just use
 engbuild TRITON-1159 add new triton-origin-minimal-64-18.4.0 image

---
 .gitignore                                    |   2 +
 .gitmodules                                   |   3 +
 Makefile                                      |  76 ++----
 Makefile.origin.defs                          |  35 +++
 README.md                                     |   2 +
 deps/eng                                      |   1 +
 empty.tar.gz                                  | Bin 0 -> 55 bytes
 images.json                                   |  17 ++
 .../triton-origin-multiarch-15.4.1/Makefile   |  23 ++
 .../triton-origin-multiarch-18.1.0/Makefile   |  22 ++
 images/triton-origin-x86_64-18.4.0/Makefile   |  24 ++
 package.json                                  |   2 +-
 tools/build-image.sh                          | 227 ------------------
 tools/build-images.sh                         | 100 --------
 tools/publish-images.sh                       | 144 -----------
 15 files changed, 156 insertions(+), 522 deletions(-)
 create mode 100644 .gitmodules
 create mode 100644 Makefile.origin.defs
 create mode 160000 deps/eng
 create mode 100644 empty.tar.gz
 create mode 100644 images/triton-origin-multiarch-15.4.1/Makefile
 create mode 100644 images/triton-origin-multiarch-18.1.0/Makefile
 create mode 100644 images/triton-origin-x86_64-18.4.0/Makefile
 delete mode 100755 tools/build-image.sh
 delete mode 100755 tools/build-images.sh
 delete mode 100755 tools/publish-images.sh

diff --git a/.gitignore b/.gitignore
index 56d39c9..7b18ff8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,3 +2,5 @@
 /tmp
 /build
 /npm-debug.log
+/make_stamps
+/bits
diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..6cbac63
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "deps/eng"]
+	path = deps/eng
+	url = https://github.com/joyent/eng.git
diff --git a/Makefile b/Makefile
index 0e1f74c..e175c59 100644
--- a/Makefile
+++ b/Makefile
@@ -1,68 +1,34 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
 #
-# Copyright (c) 2017, Joyent, Inc.
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
 #
 # Makefile for triton-origin-image
 #
 
-NPM = npm
-JSON = ./node_modules/.bin/json
 
-# Gather build info (based on
-# https://github.com/joyent/eng/blob/master/tools/mk/Makefile.defs#L34-L48)
-_AWK := $(shell (which gawk >/dev/null && echo gawk) \
-	|| (which nawk >/dev/null && echo nawk) \
-	|| echo awk)
-BRANCH := $(shell git symbolic-ref HEAD | $(_AWK) -F/ '{print $$3}')
-ifeq ($(TIMESTAMP),)
-	TIMESTAMP := $(shell date -u "+%Y%m%dT%H%M%SZ")
-endif
-GITHASH := $(shell git log -1 --pretty='%H')
+NAME=triton-origin-image
+ENGBLD_REQUIRE	:= $(shell git submodule update --init deps/eng)
+include ./deps/eng/tools/mk/Makefile.defs
+TOP ?= $(error Unable to access eng.git submodule Makefiles.)
 
+CLEAN_FILES += ./build
+DIST_CLEAN_FILES += ./node_modules/ ./build ./bits
+NPM = npm
+JSON = ./node_modules/.bin/json
 
 #
 # Targets
 #
 
-.PHONY: all
-all: build/buildinfo.json build/image-0-stamp
-
 $(JSON):
 	$(NPM) install
 
-build/buildinfo.json: | $(JSON)
-	mkdir -p build/
-	echo '{}' \
-		| $(JSON) -e "this.branch='$(BRANCH)'" \
-			-e "this.timestamp='$(TIMESTAMP)'" \
-			-e "this.git='$(GITHASH)'" \
-		> $@
-
-.PHONY: buildinfo
-buildinfo: build/buildinfo.json
-
-.PHONY: images
-images: build/image-0-stamp
-
-# Build all images spec'd in images.json and upload to Manta builds area,
-# e.g. /Joyent_Dev/public/builds/triton-origin-image/...
-build/image-0-stamp: build/buildinfo.json images.json
-	./tools/build-images.sh -b build/buildinfo.json -i images.json
-	touch $@
-
-# Publish the built images (identified via "buildinfo.json") to
-# updates.joyent.com.
-publish: build/buildinfo.json
-	./tools/publish-images.sh -b build/buildinfo.json
-
-
-.PHONY: clean
-clean:
-	rm -rf build
-
-.PHONY: distclean
-distclean: clean
-	rm -rf node_modules
-
 .PHONY: check
 check:: check-version
 	@echo "check ok"
@@ -86,3 +52,13 @@ cutarelease: check-version
 	    date=$(shell date -u "+%Y-%m-%d") && \
 	    git tag -a "v$$ver" -m "version $$ver ($$date)" && \
 	    git push --tags origin
+
+
+all-%:
+	@echo '$*'
+	cd images/triton-origin-multiarch-15.4.1 && $(MAKE) $*
+	cd images/triton-origin-multiarch-18.1.0 && $(MAKE) $*
+	cd images/triton-origin-x86_64-18.4.0 && $(MAKE) $*
+
+
+include ./deps/eng/tools/mk/Makefile.targ
diff --git a/Makefile.origin.defs b/Makefile.origin.defs
new file mode 100644
index 0000000..849cda5
--- /dev/null
+++ b/Makefile.origin.defs
@@ -0,0 +1,35 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+ENGBLD_REQUIRE := $(shell git submodule update --init deps/eng)
+MAKE_STAMPS_DIR:=$(TOP)/make_stamps
+GITHASH := $(shell git log -1 --pretty='%H')
+ORIGIN_VERSION=$(shell cat $(TOP)/package.json | json version | cut -d '.' -f 1-2)
+ENGBLD_USE_BUILDIMAGE:=true
+
+# not actually "building" anything
+export ENGBLD_SKIP_VALIDATE_BUILDENV:=true
+
+BUILDIMAGE_PKG=$(TOP)/empty.tar.gz
+BUILDIMAGE_VERSION = $(ORIGIN_VERSION).$(TIMESTAMP)
+
+BUILDIMAGE_MF           = \
+    {"name": "$(BUILDIMAGE_NAME)",\
+    "description": "$(BUILDIMAGE_DESC)",\
+    "version": "$(BUILDIMAGE_VERSION)",\
+	"homepage": "https://github.com/joyent/triton-origin-image",\
+    "tags": {\
+      "branch": "$(BRANCH)",\
+      "timestamp": "$(TIMESTAMP)",\
+      "git": "$(GITHASH)"\
+    }\
+    }
+
+
+
diff --git a/README.md b/README.md
index b42a200..7905a77 100644
--- a/README.md
+++ b/README.md
@@ -113,6 +113,7 @@ files. We will try to keep this table up to date:
 
 | triton-origin image            | based on                     | sdcnode compatible build         | `NODE_PREBUILT_VERSION`              |
 | ------------------------------ | ---------------------------- | -------------------------------- | ------------------------------------ |
+| triton-origin-x86_64-18.4.0    | minimal-64-lts@18.4.0        | minimal-64-lts@18.4.0            | c2c31b00-1d60-11e9-9a77-ff9f06554b0f |
 | triton-origin-multiarch-18.1.0 | minimal-multiarch@18.1.0     | minimal-multiarch@18.1.0         | 1ad363ec-3b83-11e8-8521-2f68a4a34d5d |
 | triton-origin-multiarch-15.4.1 | minimal-multiarch-lts@15.4.1 | sdc-minimal-multiarch-lts@15.4.1 | 18b094b0-eb01-11e5-80c1-175dac7ddf02 |
 | -                              | -                            | sdc-base@14.2.0                  | de411e86-548d-11e4-a4b7-3bb60478632a |
@@ -134,6 +135,7 @@ files. We will try to keep this table up to date:
 
 | triton-origin image            | Jenkins agent labels                        |
 | ------------------------------ | ------------------------------------------- |
+| triton-origin-x86_64-18.4.0    | `image_ver:18.4.0 && pkgsrc_arch:x86_64`    |
 | triton-origin-multiarch-18.1.0 | `image_ver:18.1.0 && pkgsrc_arch:multiarch` |
 | triton-origin-multiarch-15.4.1 | `image_ver:15.4.1 && pkgsrc_arch:multiarch` |
 
diff --git a/deps/eng b/deps/eng
new file mode 160000
index 0000000..8dccea3
--- /dev/null
+++ b/deps/eng
@@ -0,0 +1 @@
+Subproject commit 8dccea34f933876e22a53ca8d8e0434f1ac178e9
diff --git a/empty.tar.gz b/empty.tar.gz
new file mode 100644
index 0000000..5ace74c
Binary files /dev/null and b/empty.tar.gz differ
diff --git a/images.json b/images.json
index 5c71a02..6da6b4d 100644
--- a/images.json
+++ b/images.json
@@ -32,5 +32,22 @@
             "sudo-1.8.22"
         ],
         "protoMinMemoryMb": "1024"
+    },
+    {
+        "namePrefix": "triton-origin-x86_64",
+        "desc": "Triton/Manta component origin image based on x86_64 18.4.0",
+        "origin": {
+            "uuid": "c2c31b00-1d60-11e9-9a77-ff9f06554b0f",
+            "name": "minimal-64-lts",
+            "version": "18.4.0"
+        },
+        "pkgsrc": [
+            "coreutils-8.29nb1",
+            "curl-7.63.0nb1",
+            "gsed-4.6",
+            "patch-2.7.6nb1",
+            "sudo-1.8.26"
+        ],
+        "protoMinMemoryMb": "1024"
     }
 ]
diff --git a/images/triton-origin-multiarch-15.4.1/Makefile b/images/triton-origin-multiarch-15.4.1/Makefile
new file mode 100644
index 0000000..0386284
--- /dev/null
+++ b/images/triton-origin-multiarch-15.4.1/Makefile
@@ -0,0 +1,23 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+NAME=triton-origin-multiarch-15.4.1
+TOP=$(shell git rev-parse --show-toplevel)
+
+include $(TOP)/Makefile.origin.defs
+include $(TOP)/deps/eng/tools/mk/Makefile.defs
+
+# minimal-multiarch-lts@15.4.1
+BASE_IMAGE_UUID = ede31770-e19c-11e5-bb6e-3b7de3cca9ce
+BUILDIMAGE_NAME = ${NAME}
+BUILDIMAGE_DESC = Triton/Manta component origin image based on multiarch 15.4.x
+BUILDIMAGE_PKGSRC = coreutils-8.23nb2 curl-7.51.0 gsed-4.2.2nb4 patch-2.7.5 sudo-1.8.15
+
+include $(TOP)/deps/eng/tools/mk/Makefile.targ
+
diff --git a/images/triton-origin-multiarch-18.1.0/Makefile b/images/triton-origin-multiarch-18.1.0/Makefile
new file mode 100644
index 0000000..ad2f370
--- /dev/null
+++ b/images/triton-origin-multiarch-18.1.0/Makefile
@@ -0,0 +1,22 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+NAME=triton-origin-multiarch-18.1.0
+TOP=$(shell git rev-parse --show-toplevel)
+
+include $(TOP)/Makefile.origin.defs
+include $(TOP)/deps/eng/tools/mk/Makefile.defs
+
+# minimal-multiarch@18.1.0
+BASE_IMAGE_UUID = 1ad363ec-3b83-11e8-8521-2f68a4a34d5d
+BUILDIMAGE_NAME = ${NAME}
+BUILDIMAGE_DESC = Triton/Manta component origin image based on multiarch 18.1.0
+BUILDIMAGE_PKGSRC = coreutils-8.26 curl-7.59.0 gsed-4.4 patch-2.7.6 sudo-1.8.22
+
+include $(TOP)/deps/eng/tools/mk/Makefile.targ
diff --git a/images/triton-origin-x86_64-18.4.0/Makefile b/images/triton-origin-x86_64-18.4.0/Makefile
new file mode 100644
index 0000000..d6ede06
--- /dev/null
+++ b/images/triton-origin-x86_64-18.4.0/Makefile
@@ -0,0 +1,24 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+NAME=triton-origin-x86_64-18.4.0
+TOP=$(shell git rev-parse --show-toplevel)
+
+include $(TOP)/Makefile.origin.defs
+include $(TOP)/deps/eng/tools/mk/Makefile.defs
+
+BUILDIMAGE_DO_PKGSRC_UPGRADE:=true
+
+# minimal-64-lts@18.4.0
+BASE_IMAGE_UUID = c2c31b00-1d60-11e9-9a77-ff9f06554b0f
+BUILDIMAGE_NAME = ${NAME}
+BUILDIMAGE_DESC = Triton/Manta component origin image based on x86_64 18.4.0
+BUILDIMAGE_PKGSRC = coreutils curl gsed patch sudo
+
+include $(TOP)/deps/eng/tools/mk/Makefile.targ
diff --git a/package.json b/package.json
index 028b320..ccc16bf 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "triton-origin-image",
   "description": "origin images for Triton DataCenter core components",
-  "version": "1.0.1",
+  "version": "1.1.0",
   "author": "Joyent (joyent.com)",
   "private": true,
   "homepage": "https://github.com/joyent/triton-origin-image",
diff --git a/tools/build-image.sh b/tools/build-image.sh
deleted file mode 100755
index 6643a48..0000000
--- a/tools/build-image.sh
+++ /dev/null
@@ -1,227 +0,0 @@
-#!/bin/bash
-# vi: expandtab sw=4 ts=4
-
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-# Copyright (c) 2017, Joyent, Inc.
-#
-
-#
-# Build a single triton-origin image with the given image config.
-#
-
-if [[ -n "$TRACE" ]]; then
-    if [[ -t 1 ]]; then
-        export PS4='\033[90m[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }\033[39m'
-    else
-        export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
-    fi
-    set -o xtrace
-fi
-set -o errexit
-set -o pipefail
-
-
-TOP=$(cd $(dirname $0)/../ > /dev/null; pwd)
-SCRIPT="$(basename $0)"
-
-export PATH="${TOP}/node_modules/.bin:${PATH}"
-
-
-# ---- support functions
-
-function fatal {
-    if [[ -n "$1" ]]; then
-        echo "$SCRIPT: error: $1" >&2
-    fi
-    cleanup 1
-}
-
-function cleanup() {
-    local exit_status=${1:-$?}
-
-    if [[ -n "$KEEP_INFRA_ON_FAILURE" ]]; then
-        echo "$0: NOT cleaning up (\$KEEP_INFRA_ON_FAILURE is set)" >&2
-    else
-        [[ -n "$protoName" ]] && triton instance rm $protoName || true
-        [[ -n "$imageUuid" ]] && triton image rm -f ${imageUuid} || true
-    fi
-
-
-    exit $exit_status
-}
-
-function usage() {
-    echo "Usage:"
-    echo "  $SCRIPT IMAGE-CONFIG-JSON BUILDINFO-FILE"
-    echo ""
-    echo "Options:"
-    echo "  -h       Print this help and exit."
-    echo ""
-    echo "Environment:"
-    echo "  KEEP_INFRA_ON_FAILURE=1     Set this to *not* remove the proto"
-    echo "                              instance and created image on script "
-    echo "                              failure. Useful for debugging."
-}
-
-function usageErr() {
-    if [[ -n "$1" ]]; then
-        echo "$SCRIPT: error: $1" >&2
-        echo ""
-    fi
-    usage
-    fatal
-}
-
-
-# ---- mainline
-
-while getopts h opt; do
-    case $opt in
-    h)
-        usage
-        exit 0
-        ;;
-    *)
-        usage
-        exit 1
-        ;;
-    esac
-done
-shift $(($OPTIND - 1))
-
-imageConfig="$1"
-[[ -n "$imageConfig" ]] || usageErr "missing IMAGE-CONFIG-JSON arg"
-buildinfoFile="$2"
-[[ -n "$buildinfoFile" ]] || usageErr "missing BUILDINFO-FILE arg"
-[[ -f "$buildinfoFile" ]] || usageErr "buildinfo file does not exist: $buildinfoFile"
-json -qnf "$buildinfoFile" || fatal "'$buildinfoFile' is not valid JSON"
-
-buildinfo=$(cat "$buildinfoFile")
-originUuid=$(echo "$imageConfig" | json origin.uuid)
-originName=$(echo "$imageConfig" | json origin.name)
-originVersion=$(echo "$imageConfig" | json origin.version)
-imageName=$(echo "$imageConfig" | json namePrefix)-$originVersion
-imageVersion=$(cat $TOP/package.json | json version)
-imageHomepage=$(cat $TOP/package.json | json homepage)
-imageDesc=$(echo "$imageConfig" | json desc)
-protoMinMemoryMb=$(echo "$imageConfig" | json protoMinMemoryMb)
-tritonAccount=$(triton profile get -j | json account)
-tritonKeyId=$(triton profile get -j | json keyId)
-branch=$(echo "$buildinfo" | json branch)
-[[ -n "$branch" ]] || fatal "buildinfo is missing 'branch'"
-timestamp=$(echo "$buildinfo" | json timestamp)
-[[ -n "$timestamp" ]] || fatal "buildinfo is missing 'timestamp'"
-mantaUploadDir=/$tritonAccount/public/builds/triton-origin-image/$branch-$timestamp/
-mantaLatestLink=/$tritonAccount/public/builds/triton-origin-image/$branch-latest
-
-
-# Validate that origin.uuid matches origin.{name,version} as a sanity check.
-originManifest=$(joyent-imgadm get $originUuid)
-[[ $(echo "$originManifest" | json name) == "$originName" ]] \
-    && [[ $(echo "$originManifest" | json version) == "$originVersion" ]] \
-    || fatal "origin.uuid, $originUuid, does not match name@version in image config: $originName@$originVersion"
-originMinPlatform=$(echo "$originManifest" | json 'requirements.min_platform["7.0"]')
-
-
-trap cleanup ERR
-
-# Hardcoded MANTA_URL b/c can't get from CloudAPI.
-export MANTA_URL=https://us-east.manta.joyent.com
-export MANTA_USER=$tritonAccount
-export MANTA_KEY_ID=$tritonKeyId
-unset MANTA_TLS_INSECURE  # not yet supported
-unset MANTA_SUBUSER  # not supported
-
-
-echo "Building $imageName@$imageVersion image"
-echo "Manta upload dir:"
-echo "    $mantaUploadDir"
-echo "Image config:"
-echo "$imageConfig" | json | sed -e 's/^/    /'
-echo "Triton CLI profile:"
-triton profile get | sed -e 's/^/    /'
-
-# Create the proto instance.
-echo ""
-
-# Find a package with sufficient RAM, but avoid crazy large packages.
-protoPkg=$(triton pkgs -j \
-    | json -gac "this.memory >= $protoMinMemoryMb
-        && this.memory <= 2 * $protoMinMemoryMb" name \
-    | head -1)
-protoName="TEMP-$imageName-proto-$(date +%s)"
-
-pkgsrcPkgs="$(echo "$imageConfig" \
-    | json -e 'this.flat = this.pkgsrc.join(" ")' flat)"
-userScript="/opt/local/bin/pkgin -f -y update"
-userScript="${userScript}; /opt/local/bin/pkgin -y in $pkgsrcPkgs"
-userScript="${userScript}; touch /.done"
-
-triton instance create -w -n $protoName \
-    -m "user-script=$userScript" \
-    "$originUuid" "$protoPkg"
-
-
-# Wait for the user-script to complete.
-ip=$(triton instance ip $protoName)
-ssh="ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@$ip"
-count=0
-set +o errexit
-while (( count < 60 )); do
-    $ssh "[[ -f /.done ]] || exit 42" >/dev/null && break
-    rc=$?
-    [[ $rc -ne 42 ]] && fatal "Error during ssh"
-
-    (( count = count + 1 ))
-    sleep 15
-done
-set -o errexit
-$ssh "rm /.done"
-
-
-# Stop the proto and create our image
-echo ""
-echo "Creating image from proto inst $protoName"
-triton instance stop -w $protoName
-
-output=$(triton image create -jw \
-    -d "$imageDesc" \
-    -t "$(json -f $buildinfoFile -o json-0 branch timestamp git)" \
-    --homepage "$imageHomepage" \
-    "$protoName" "${imageName}" "${imageVersion}")
-echo "$output"
-imageUuid=$(echo "$output" | head -1 | json id)
-echo "Image UUID: $imageUuid"
-
-
-# Export the image to our Manta build area
-echo ""
-mmkdir -p $mantaUploadDir
-triton image export $imageUuid $mantaUploadDir
-echo $mantaUploadDir | mput $mantaLatestLink   # create the `BRANCH-latest` file
-mput -f $buildinfoFile -H 'content-type: application/json' \
-    $mantaUploadDir/buildinfo.json
-# TODO: want sha256sums or md5sums files in there?
-
-# Tweaks to imgmanifest for publishing.
-# - Set requirements.min_platform to that of the origin, because we know we
-#   haven't added binary components that depend on the platform on which the
-#   proto instance was deployed.
-# - Set owner to the "not set" UUID (see IMGAPI-408), as is done by
-#   updates.joyent.com itself on import.
-imgmanifestName=$(mls $mantaUploadDir | grep '\.imgmanifest$')
-mget -o build/$imgmanifestName $mantaUploadDir/$imgmanifestName
-json -f build/$imgmanifestName -I \
-    -e "this.requirements.min_platform['7.0'] = '$originMinPlatform'" \
-    -e "this.owner = '00000000-0000-0000-0000-000000000000'"
-mput -f build/$imgmanifestName $mantaUploadDir/$imgmanifestName
-
-
-echo ""
-echo "Cleaning up"
-triton instance rm -w $protoName
-triton image rm -f $imageUuid
diff --git a/tools/build-images.sh b/tools/build-images.sh
deleted file mode 100755
index bdfdbdd..0000000
--- a/tools/build-images.sh
+++ /dev/null
@@ -1,100 +0,0 @@
-#!/bin/bash
-# vi: expandtab sw=4 ts=4
-
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-# Copyright (c) 2017, Joyent, Inc.
-#
-
-#
-# Build the triton-origin images per the given build info and images config.
-#
-
-if [[ -n "$TRACE" ]]; then
-    if [[ -t 1 ]]; then
-        export PS4='\033[90m[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }\033[39m'
-    else
-        export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
-    fi
-    set -o xtrace
-fi
-set -o errexit
-set -o pipefail
-
-
-TOP=$(cd $(dirname $0)/../ > /dev/null; pwd)
-SCRIPT="$(basename $0)"
-
-export PATH="${TOP}/node_modules/.bin:${PATH}"
-
-
-# ---- support functions
-
-function fatal {
-    if [[ -n "$1" ]]; then
-        echo "$SCRIPT: error: $1" >&2
-    fi
-    exit 1
-}
-
-function usage() {
-    echo "Usage:"
-    echo "  $SCRIPT -i IMAGES-CONFIG-FILE -b BUILDINFO-FILE"
-    echo ""
-    echo "Options:"
-    echo "  -h       Print this help and exit."
-    echo "  -i FILE  images config file, typically ./images.json"
-    echo "  -b FILE  buildinfo file, typically ./build/buildinfo.json"
-}
-
-function usageErr() {
-    if [[ -n "$1" ]]; then
-        echo "$SCRIPT: error: $1" >&2
-        echo ""
-    fi
-    usage
-    fatal
-}
-
-
-# ---- mainline
-
-imagesFile=
-buildinfoFile=
-while getopts hi:b: opt; do
-    case $opt in
-    h)
-        usage
-        exit 0
-        ;;
-    i)
-        [[ -n "$OPTARG" ]] && imagesFile="$OPTARG"
-        ;;
-    b)
-        [[ -n "$OPTARG" ]] && buildinfoFile="$OPTARG"
-        ;;
-    *)
-        usage
-        exit 1
-        ;;
-    esac
-done
-shift $(($OPTIND - 1))
-
-[[ -n "$imagesFile" ]] || usageErr "missing '-i FILE' option"
-[[ -f "$imagesFile" ]] || usageErr "images file does not exist: $imagesFile"
-json -qnf "$imagesFile" || fatal "'$imagesFile' is not valid JSON"
-[[ -n "$buildinfoFile" ]] || usageErr "missing '-b FILE' option"
-[[ -f "$buildinfoFile" ]] || usageErr "buildinfo file does not exist: $buildinfoFile"
-
-imagesConfig=$(cat $imagesFile)
-numImages=$(echo "$imagesConfig" | json length)
-for (( i=0; i<$numImages; i++ ))
-do
-    echo ""
-    imageConfig=$(echo "$imagesConfig" | json $i)
-    $TOP/tools/build-image.sh "$imageConfig" "$buildinfoFile"
-done
diff --git a/tools/publish-images.sh b/tools/publish-images.sh
deleted file mode 100755
index 7949828..0000000
--- a/tools/publish-images.sh
+++ /dev/null
@@ -1,144 +0,0 @@
-#!/bin/bash
-# vi: expandtab sw=4 ts=4
-
-#
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-#
-# Copyright (c) 2017, Joyent, Inc.
-#
-
-#
-# Publish the built images per the given build info.
-#
-
-if [[ -n "$TRACE" ]]; then
-    if [[ -t 1 ]]; then
-        export PS4='\033[90m[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }\033[39m'
-    else
-        export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
-    fi
-    set -o xtrace
-fi
-set -o errexit
-set -o pipefail
-
-
-TOP=$(cd $(dirname $0)/../ > /dev/null; pwd)
-SCRIPT="$(basename $0)"
-
-export PATH="${TOP}/node_modules/.bin:${PATH}"
-
-
-# ---- support functions
-
-function fatal {
-    if [[ -n "$1" ]]; then
-        echo "$SCRIPT: error: $1" >&2
-    fi
-    exit 1
-}
-
-function usage() {
-    echo "Usage:"
-    echo "  $SCRIPT -b BUILDINFO-FILE"
-    echo ""
-    echo "Options:"
-    echo "  -h       Print this help and exit."
-    echo "  -b FILE  buildinfo file, typically ./build/buildinfo.json"
-}
-
-function usageErr() {
-    if [[ -n "$1" ]]; then
-        echo "$SCRIPT: error: $1" >&2
-        echo ""
-    fi
-    usage
-    fatal
-}
-
-
-# ---- mainline
-
-buildinfoFile=
-while getopts hb: opt; do
-    case $opt in
-    h)
-        usage
-        exit 0
-        ;;
-    b)
-        [[ -n "$OPTARG" ]] && buildinfoFile="$OPTARG"
-        ;;
-    *)
-        usage
-        exit 1
-        ;;
-    esac
-done
-shift $(($OPTIND - 1))
-
-[[ -n "$buildinfoFile" ]] || usageErr "missing '-b FILE' option"
-[[ -f "$buildinfoFile" ]] || usageErr "buildinfo file does not exist: $buildinfoFile"
-json -qnf "$buildinfoFile" || fatal "'$buildinfoFile' is not valid JSON"
-
-
-buildinfo=$(cat "$buildinfoFile")
-tritonAccount=$(triton profile get -j | json account)
-tritonKeyId=$(triton profile get -j | json keyId)
-branch=$(echo "$buildinfo" | json branch)
-[[ -n "$branch" ]] || fatal "buildinfo is missing 'branch'"
-timestamp=$(echo "$buildinfo" | json timestamp)
-[[ -n "$timestamp" ]] || fatal "buildinfo is missing 'timestamp'"
-mantaUploadDir=/$tritonAccount/public/builds/triton-origin-image/$branch-$timestamp/
-
-
-# Hardcoded MANTA_URL b/c can't get from CloudAPI.
-export MANTA_URL=https://us-east.manta.joyent.com
-export MANTA_USER=$tritonAccount
-export MANTA_KEY_ID=$tritonKeyId
-unset MANTA_TLS_INSECURE  # not yet supported
-unset MANTA_SUBUSER  # not supported
-
-
-if [[ $branch == "master" ]]; then
-    channel=dev
-else
-    channel=experimental
-fi
-imgmanifests=$(mfind -t o -n '^triton-origin-.*\.imgmanifest$' $mantaUploadDir)
-
-for imgmanifestMpath in $imgmanifests; do
-    # Longer term: I'd like to support updates.joyent.com having a special
-    # "import an image from files in the same Manta I use". In which case we
-    # would not need to download the (largish) image file and then immediately
-    # upload it again.
-    #
-    # For now: Download the manifest and file and `updates-imgadm import` it.
-    base=$(basename $imgmanifestMpath .imgmanifest)
-    imgUuid=$(json -f build/$base.imgmanifest uuid)
-    imgName=$(json -f build/$base.imgmanifest name)
-    imgVer=$(json -f build/$base.imgmanifest version)
-    imgFileSha1=$(json -f build/$base.imgmanifest files.0.sha1)
-    echo ""
-    echo "Publishing image $imgUuid ($imgName@$imgVer)"
-    echo "    to https://updates.joyent.com (channel '$channel')"
-
-    # Download the bits to publish. If we already have the (large) file,
-    # try to avoid re-downloading it (e.g. from a failed earlier publish
-    # attempt).
-    mget -o build/$base.imgmanifest $imgmanifestMpath
-    if [[ -f build/$base.zfs.gz ]]; then
-        currSha1=$(openssl dgst -sha1 build/$base.zfs.gz | awk '{print $NF}')
-        if [[ $currSha1 != $imgFileSha1 ]]; then
-            rm build/$base.zfs.gz
-        fi
-    fi
-    if [[ ! -f build/$base.zfs.gz ]]; then
-        mget -o build/$base.zfs.gz $mantaUploadDir/$base.zfs.gz
-    fi
-
-    # Publish it.
-    updates-imgadm -C $channel import -m build/$base.imgmanifest -f build/$base.zfs.gz
-done
-- 
2.21.0

