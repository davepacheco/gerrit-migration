From ef476ce5697f91af77ddd077a6f3c2aec83fa7b2 Mon Sep 17 00:00:00 2001
From: Chris Burroughs <chris.burroughs@joyent.com>
Date: Wed, 23 Nov 2016 14:54:30 -0500
Subject: [PATCH] ./bin/triton datacenters

---
 lib/do_datacenters.js | 58 ++++++++++++++++++++++++-------------------
 1 file changed, 32 insertions(+), 26 deletions(-)

diff --git a/lib/do_datacenters.js b/lib/do_datacenters.js
index afb45b2..e6935fe 100644
--- a/lib/do_datacenters.js
+++ b/lib/do_datacenters.js
@@ -31,36 +31,42 @@ function do_datacenters(subcmd, opts, args, callback) {
 
     var columns = opts.o.split(',');
     var sort = opts.s.split(',');
+    var tritonapi = this.tritonapi;
 
-    this.tritonapi.cloudapi.listDatacenters(function (err, datacenters) {
-        if (err) {
-            callback(err);
-            return;
+    common.cliSetupTritonApi({cli: this}, function onSetup(setupErr) {
+        if (setupErr) {
+            callback(setupErr);
         }
+        tritonapi.cloudapi.listDatacenters(function (err, datacenters) {
+            if (err) {
+                callback(err);
+                return;
+            }
 
-        if (opts.json) {
-            console.log(JSON.stringify(datacenters));
-        } else {
-            /*
-             * datacenters are returned in the form of:
-             * {name: 'url', name2: 'url2', ...}
-             * we "normalize" them for use by tabula by making them an array
-             */
-            var dcs = [];
-            Object.keys(datacenters).forEach(function (key) {
-                dcs.push({
-                    name: key,
-                    url: datacenters[key]
+            if (opts.json) {
+                console.log(JSON.stringify(datacenters));
+            } else {
+                /*
+                 * datacenters are returned in the form of:
+                 * {name: 'url', name2: 'url2', ...}
+                 * we "normalize" them for use by tabula by making them an array
+                 */
+                var dcs = [];
+                Object.keys(datacenters).forEach(function (key) {
+                    dcs.push({
+                        name: key,
+                        url: datacenters[key]
+                    });
                 });
-            });
-            tabula(dcs, {
-                skipHeader: opts.H,
-                columns: columns,
-                sort: sort,
-                dottedLookup: true
-            });
-        }
-        callback();
+                tabula(dcs, {
+                    skipHeader: opts.H,
+                    columns: columns,
+                    sort: sort,
+                    dottedLookup: true
+                });
+            }
+            callback();
+        });
     });
 }
 
-- 
2.21.0

