From 4b97190482ec9d23a9b7130fa25024035edd3cda Mon Sep 17 00:00:00 2001
From: Josh Wilsdon <jwilsdon@joyent.com>
Date: Mon, 18 Mar 2019 22:27:40 -0700
Subject: [PATCH] TRITON-1322 last_heartbeat disappeared when using ServerList
 (include missing patchset, add tests)

---
 lib/models/server.js            |  4 +-
 package.json                    |  2 +-
 test/model/test-model-server.js |  6 +++
 test/test-servers.js            | 77 +++++++++++++++++++++++++++++++++
 4 files changed, 87 insertions(+), 2 deletions(-)

diff --git a/lib/models/server.js b/lib/models/server.js
index b153a03..a4aa450 100644
--- a/lib/models/server.js
+++ b/lib/models/server.js
@@ -866,7 +866,9 @@ ModelServer.initialValues = function (opts, callback) {
 
 ModelServer._addHeartbeatInfo = function _addHeartbeatInfo(serverObj) {
     assert.object(serverObj, 'serverObj');
-    assert.uuid(serverObj.uuid, 'serverObj.uuid');
+    if (serverObj.uuid !== 'default') {
+        assert.uuid(serverObj.uuid, 'serverObj.uuid');
+    }
 
     var uuid = serverObj.uuid;
     var heartbeatInfo = ModelServer.getApp().observedHeartbeats[uuid];
diff --git a/package.json b/package.json
index 4f216d0..324f915 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "cnapi",
   "description": "SmartDataCenter Compute Node API",
-  "version": "1.21.7",
+  "version": "1.21.8",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
diff --git a/test/model/test-model-server.js b/test/model/test-model-server.js
index c0b4d19..9e947a5 100644
--- a/test/model/test-model-server.js
+++ b/test/model/test-model-server.js
@@ -67,12 +67,14 @@ function testListServersAll(test) {
             test.equal(listError, null, 'should not encounter an error');
             var expected =  [
                 {
+                    last_heartbeat: null,
                     uuid: '372bdb58-f8dd-11e1-8038-0b6dbddc5e58',
                     ram: '12345',
                     sysinfo: { setup: true },
                     status: 'unknown'
                 },
                 {
+                    last_heartbeat: null,
                     uuid: '6e8eb888-f8e0-11e1-b1a8-5f74056f9365',
                     ram: '56789',
                     sysinfo: { setup: true },
@@ -129,12 +131,14 @@ function testListServersByUuids(test) {
 
             var expected =  [
                 {
+                    last_heartbeat: null,
                     uuid: '372bdb58-f8dd-11e1-8038-0b6dbddc5e58',
                     ram: '12345',
                     sysinfo: { setup: true },
                     status: 'unknown'
                 },
                 {
+                    last_heartbeat: null,
                     uuid: 'b31695ce-f8e6-11e1-b252-fb742866284b',
                     ram: '56789',
                     sysinfo: { setup: true },
@@ -208,12 +212,14 @@ function testListServersSetup(test) {
 
             var expected =  [
                 {
+                    last_heartbeat: null,
                     uuid: '372bdb58-f8dd-11e1-8038-0b6dbddc5e58',
                     ram: '12345',
                     sysinfo: { setup: true },
                     status: 'unknown'
                 },
                 {
+                    last_heartbeat: null,
                     uuid: '6e8eb888-f8e0-11e1-b1a8-5f74056f9365',
                     ram: '56789',
                     sysinfo: { setup: true },
diff --git a/test/test-servers.js b/test/test-servers.js
index 6e36543..e892747 100644
--- a/test/test-servers.js
+++ b/test/test-servers.js
@@ -20,6 +20,7 @@ var libuuid = require('libuuid');
 var jsprim = require('jsprim');
 var restify = require('restify');
 var sprintf = require('sprintf');
+var vasync = require('vasync');
 
 
 var CNAPI_URL = 'http://' + (process.env.CNAPI_IP || '10.99.99.22');
@@ -649,6 +650,81 @@ function testServerSysinfo(t) {
 }
 
 
+//
+// CNS currently depends on a bug in CNAPI where:
+//
+//  GET /servers?extras=status
+//
+// "works" to add last_heartbeat. In fact *any* extras= value will result in
+// last_heartbeat being added to resulting objects thanks to this bug.
+//
+// Since fixing this bug would break CNS, we have this test to ensure that this
+// bug doesn't get fixed accidentally even though last_heartbeat is not really a
+// field meant for anything other than debugging.
+//
+// This test will:
+//
+//  * list all servers with extras=status and expect that at least one
+//    of them has a non-null last_heartbeat.
+//
+//  * ensure that the only values we get for last_heartbeat are a timestamp or
+//    null.
+//
+function testListServersLastHeartbeat(t) {
+    var url = '/servers?extras=status';
+
+    t.expect(5);
+
+    function validLastHeartbeatDate(candidate) {
+        if (candidate === (new Date(candidate)).toISOString()) {
+            return true;
+        }
+        return false;
+    }
+
+    function _checkLastHeartbeatValues(endpoint, servers) {
+        var idx;
+        var results = {
+            _invalid: 0,
+            _null: 0,
+            _timestamp: 0
+        };
+        var server;
+
+        // Loop through the servers and check that they have a valid
+        // last_heartbeat.
+        for (idx = 0; idx < servers.length; idx++) {
+            server = servers[idx];
+            if (server.last_heartbeat === null) {
+                results._null++;
+            } else if (validLastHeartbeatDate(server.last_heartbeat)) {
+                results._timestamp++;
+            } else {
+                results._invalid++;
+            }
+        }
+
+        t.ok(results._timestamp >= 1, endpoint + ' should ' +
+            'have at least one server with a last_heartbeat (had ' +
+            results._timestamp + ')');
+        t.equal(0, results._invalid, endpoint + ' should ' +
+            'have no invalid last_heartbeats');
+        t.ok(results._null >= 0, endpoint + ' might have some "null" ' +
+            'last_heartbeats (had ' + results._null +  ')');
+
+        return;
+    }
+
+    client.get(url, function (err, req, res, body) {
+        t.ok(!err, 'should successfully load ' + url +
+            (err ? ': ' + err.message : ''));
+        t.equal(res.statusCode, 200, url + ' should return 200');
+        _checkLastHeartbeatValues(url, body);
+        t.done();
+    });
+}
+
+
 var UUID_RE = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
 var VALID_SERVER_OVERPROVISION_RESOURCES = ['cpu', 'ram', 'disk', 'io', 'net'];
 
@@ -806,6 +882,7 @@ module.exports = {
     setUp: setup,
     'create/modify server sysinfo': testServerSysinfo,
     'list servers': testListServers,
+    'list servers includes last_heartbeat': testListServersLastHeartbeat,
     'list servers with vms': testListServersWithVms,
     'list servers with memory': testListServersWithMemory,
     'list servers with disk': testListServersWithDisk,
-- 
2.21.0

