commit 2e51fe6992e10116aa021cfd6950c3eb0ccd4ceb (refs/changes/92/1392/2)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2017-02-03T13:19:24+01:00 (2 years, 8 months ago)
    
    TOOLS-1644 `sdcadm create portolan` should be used for portolan HA setup

diff --git a/README.md b/README.md
index c29435b..85cdbef 100644
--- a/README.md
+++ b/README.md
@@ -5,7 +5,7 @@
 -->
 
 <!--
-    Copyright (c) 2016, Joyent, Inc.
+    Copyright (c) 2017, Joyent, Inc.
 -->
 
 # sdcadm
@@ -157,7 +157,27 @@ instances for services "HA Ready", using the same procedure as for moray:
     sdcadm create mahi --server=CN1_UUID
     sdcadm create mahi --server=CN2_UUID
 
---
+## Setup fabrics
+
+You can setup "fabrics" (Triton's network virtualization system) using the
+command:
+
+    sdcadm post-setup fabrics -c /path/to/config.file
+
+where `conf` is a required configuration file. In order to understand the
+format of this configuration file there is detailed information about
+[fabrics setup in CoaL](https://github.com/joyent/triton/blob/master/docs/developer-guide/coal-post-setup-fabrics.md) and general purpose information on fabrics from the
+[Triton networking and fabric operations guide](https://docs.joyent.com/private-cloud/networks/sdn).
+
+### Create portolan HA instances
+
+Once `fabrics` setup has finished and the first `portolan0` instance
+has been created into the Headnode, additional HA instances can be
+created using `sdcadm create` subcommand:
+
+    sdcadm create portolan --server=CN1_UUID
+    sdcadm create portolan --server=CN2_UUID
+
 
 # Manage SDC upgrades with sdcadm
 
diff --git a/lib/cli/do_create.js b/lib/cli/do_create.js
index 4ca0c52..dbaa032 100644
--- a/lib/cli/do_create.js
+++ b/lib/cli/do_create.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 var p = console.log;
@@ -207,7 +207,7 @@ do_create.help = (
     'supposed to have more than one instance. There are also some services\n' +
     'which are not allowed to have more than one instance, or services\n' +
     'whose instances should not be created using this tool, like manatee or\n' +
-    'zookeeper. Finally, the first instance of some services should not be\n' +
+    'binder. Finally, the first instance of some services should not be\n' +
     'created using this tool when there is an alternate choice provided by\n' +
     'post-setup subcommand.\n' +
     '\n' +
diff --git a/lib/procedures/create-service-instance-v1.js b/lib/procedures/create-service-instance-v1.js
index c9edb5f..af80e47 100644
--- a/lib/procedures/create-service-instance-v1.js
+++ b/lib/procedures/create-service-instance-v1.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2016, Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -73,14 +73,20 @@ CreateServiceInstanceV1.prototype.execute = function csiv1Execute(opts, cb) {
                     return next();
                 });
             },
-            function avoidCloudAPIFirstInstance(_, next) {
-                if (instances.length === 0 &&
-                        change.service.name === 'cloudapi') {
-                    return next(new errors.UsageError(
-                        'First CloudAPI instance should be created using ' +
-                        '`sdcadm post-setup cloudapi`.'));
+            function avoidFirstInstances(_, next) {
+                var names = ['CloudAPI', 'CMON', 'Portolan'];
+                var svcs = ['cloudapi', 'cmon', 'portolan'];
+                var cmd = ['cloudapi', 'cmon', 'fabrics'];
+                var found = svcs.indexOf(change.service.name);
+                if (instances.length === 0 && found !== -1) {
+                    next(new errors.UsageError(util.format(
+                        'First %s instance should be created using ' +
+                        '`sdcadm post-setup %s`.', names[found], cmd[found])));
+                    return;
+
                 }
-                return next();
+                next();
+
             },
             function generateInstanceAlias(_, next) {
                 var n = change.service.name;
diff --git a/lib/procedures/index.js b/lib/procedures/index.js
index 3c5f554..0b84d94 100644
--- a/lib/procedures/index.js
+++ b/lib/procedures/index.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2017, Joyent, Inc.
+ * Copyright 2017 Joyent, Inc.
  */
 
 /*
@@ -22,7 +22,17 @@ var vasync = require('vasync');
 var common = require('../common');
 var errors = require('../errors');
 
-
+// --- HA ready services
+var HA_READY_SVCS = [
+    'cloudapi',
+    'cmon',
+    'mahi',
+    'moray',
+    'nat',
+    'papi',
+    'portolan',
+    'workflow'
+];
 
 //---- internal support stuff
 
@@ -598,8 +608,8 @@ function coordinatePlan(opts, cb) {
         /**
          * Create simple service instances. It's to say, do not create those
          * instances which require special configuration like 2nd manatee,
-         * (handled by post-setup ha-manatee) or zookeeper instances, (handled
-         * by post-setup zookeeper).
+         * (handled by post-setup ha-manatee) or binder instances, (handled
+         * by post-setup binder).
          *
          * Note that the nature of the create command makes it reach this
          * point with a single change, even when we keep this function using
@@ -609,11 +619,7 @@ function coordinatePlan(opts, cb) {
             // Any instance which should never be created using
             // this tool should be here:
             var avoid = ['binder', 'manatee', 'rabbitmq', 'sdc', 'zookeeper'];
-            // Anything which can be created w/o --skip-ha-check flag should
-            // be on this list:
-            var allow = ['moray', 'workflow', 'cloudapi', 'mahi', 'nat',
-                'cmon',
-                'papi'];
+
             var handle = [];
             var remaining = [];
             var err;
@@ -634,7 +640,7 @@ function coordinatePlan(opts, cb) {
 
                     var sName = change.service.name;
                     var allowed = ((avoid.indexOf(sName) === -1) &&
-                        (allow.indexOf(sName) !== -1 || change.force));
+                        (HA_READY_SVCS.indexOf(sName) !== -1 || change.force));
 
                     if (allowed) {
                         log.debug({
