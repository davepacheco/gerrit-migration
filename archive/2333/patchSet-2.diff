commit 75f9d62e69429824b13a20fed17a58ef7a1fba39 (refs/changes/33/2333/2)
Author: Tim Kordas <tim.kordas@joyent.com>
Date:   2017-08-09T15:07:04-07:00 (2 years, 2 months ago)
    
    joyent/node-checker#38 http checker never reads responses, resulting in leaks and failed checks

diff --git a/lib/checkers/http_checker.js b/lib/checkers/http_checker.js
index c34c82d..8e0adf9 100644
--- a/lib/checkers/http_checker.js
+++ b/lib/checkers/http_checker.js
@@ -60,8 +60,19 @@ HttpChecker.prototype.check = function (cb) {
                         error = new Error('status code is >= 300');
                         error.code = res.statusCode;
                 }
-                cb(error, {
-                        'httpStatusCode': res.statusCode
+                /*
+                 * There is an unfortunate side-effect here: without the
+                 * data listener, no data is consumed from the connection,
+                 * and the end-listener will never be called. The unconsumed
+                 * data is leaked, and the underlying TCP socket is left in
+                 * CLOSE_WAIT. So we add an "empty" data-listener: it consumes
+                 * inbound response-data, preventing the leak.
+                 */
+                res.on('data', function(d) { /* consume */});
+                res.on('end', function() {
+                       cb(error, {
+                               'httpStatusCode': res.statusCode
+                       });
                 });
         });
         req.once('error', function (err) {
