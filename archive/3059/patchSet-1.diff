From 7fc04df8812d86fbac2757f5f39d1efce8cad876 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Wed, 6 Dec 2017 14:54:00 -0800
Subject: [PATCH] joyent/node-cueball#134 fix for #116 broke moray

---
 CHANGES.adoc    | 10 ++++++++++
 lib/resolver.js | 52 ++++++++++++++++++++++++++++++++++++++++++++-----
 package.json    |  2 +-
 3 files changed, 58 insertions(+), 6 deletions(-)

diff --git a/CHANGES.adoc b/CHANGES.adoc
index e073492..0b8d612 100644
--- a/CHANGES.adoc
+++ b/CHANGES.adoc
@@ -6,6 +6,16 @@ toc::[]
 
 ## v2.x
 
+### v2.5.1
+
+Urgent maintenance release: node-moray, a notable consumer, was broken
+by v2.5.0 (by depending on undocumented behaviour in the API)
+
+Bugs fixed:
+
+ - #134 fix for #116 broke node-moray (SRV timeouts no longer leading to
+   fallback to A/AAAA records)
+
 ### v2.5.0
 
 New minor release, due to addition of new API.
diff --git a/lib/resolver.js b/lib/resolver.js
index dd6ebf6..5793006 100644
--- a/lib/resolver.js
+++ b/lib/resolver.js
@@ -383,6 +383,13 @@ function CueBallDNSResolver(options) {
 
 	this.r_stopping = false;
 
+	/*
+	 * Set to true if we've ever seen a successful SRV or A/AAAA response
+	 * before. Used for anti-flapping.
+	 */
+	this.r_haveSeenSRV = false;
+	this.r_haveSeenAddr = false;
+
 	FSM.call(this, 'init');
 
 	return (new CueBallResolver(this, options));
@@ -521,6 +528,7 @@ CueBallDNSResolver.prototype.state_srv_try = function (S) {
 		d.setTime(d.getTime() + 1000*ttl);
 		self.r_nextService = d;
 		self.r_lastSrvTtl = ttl;
+		self.r_haveSeenSRV = true;
 
 		var oldLookup = {};
 		self.r_srvs.forEach(function (srv) {
@@ -626,15 +634,45 @@ CueBallDNSResolver.prototype.state_srv_error = function (S) {
 			port: self.r_defport
 		} ];
 
-		/*
-		 * Retry in one TTL. Don't proceed to try A/AAAA lookups, to
-		 * avoid flapping back and forth between SRV and A/AAAA mode
-		 * on a service.
-		 */
 		var d = new Date();
 		d.setTime(d.getTime() + 1000*self.r_lastSrvTtl);
 		self.r_nextService = d;
 
+		/*
+		 * Anti-flapping measure: we avoid falling back to A/AAAA mode
+		 * unless this is the very first SRV lookup we ever tried and
+		 * it failed after all retries.
+		 *
+		 * We have to keep the fall back on initial SRV failure (even
+		 * though it can cause a nasty flap further into resolver
+		 * operation), because node-moray requires this to work (it
+		 * sets the SRV timeout to 1ms and expects this to result in
+		 * a fall-through to A record operation).
+		 *
+		 * This wasn't meant to be part of the promised API, but it
+		 * is now!
+		 */
+		if (!self.r_haveSeenSRV && !self.r_haveSeenAddr) {
+			self.r_log.trace('no SRV records found for service ' +
+			    '%s, trying as a plain name', self.r_service);
+
+			S.gotoState('aaaa');
+			return;
+
+		} else if (!self.r_haveSeenSRV) {
+			/*
+			 * We use 15 mins here so that if there's going to be
+			 * a flap back to SRV due to an initial timeout
+			 * (caused by e.g. a network glitch), it will happen in
+			 * the first hour or so of operation.
+			 */
+			d = new Date();
+			d.setTime(d.getTime() + 1000*60*15);
+			self.r_nextService = d;
+			S.gotoState('aaaa');
+			return;
+		}
+
 		/*
 		 * Make sure the next time we wake up is for SRV still, not
 		 * A or AAAA.
@@ -733,6 +771,8 @@ CueBallDNSResolver.prototype.state_aaaa_try = function (S) {
 			self.r_nextV6 = d;
 		}
 
+		self.r_haveSeenAddr = true;
+
 		srv.expiry_v6 = d;
 		srv.addresses_v6 = ans.map(function (v) {
 			return (v.address);
@@ -851,6 +891,8 @@ CueBallDNSResolver.prototype.state_a_try = function (S) {
 		if (self.r_nextV4 === undefined || d <= self.r_nextV4)
 			self.r_nextV4 = d;
 
+		self.r_haveSeenAddr = true;
+
 		srv.expiry_v4 = d;
 		srv.addresses_v4 = ans.map(function (v) {
 			return (v.address);
diff --git a/package.json b/package.json
index d6cdaf4..2dea6df 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "cueball",
-  "version": "2.5.0",
+  "version": "2.5.1",
   "description": "manage a pool of connections to a multi-node service where nodes are listed in DNS",
   "main": "lib/index.js",
   "dependencies": {
-- 
2.21.0

