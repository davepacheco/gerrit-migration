From 3a75b212cf8227f14f59c68a798aa3ef0f05c10a Mon Sep 17 00:00:00 2001
From: Rui Loura <rui@joyent.com>
Date: Tue, 8 Jan 2019 16:06:18 -0500
Subject: [PATCH] TRITON-1073 want adminIpFromNicsArray in
 node-triton-netconfig

---
 CHANGES.md              |  8 ++++
 lib/index.js            | 23 +++++++++---
 package.json            | 10 +++--
 test/unit/main.test.js  | 39 +++++++++++++++-----
 test/unit/testdata.json | 81 +++++++++++++++++++++++++++++++++++++++++
 5 files changed, 143 insertions(+), 18 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index b7a67e9..e710887 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -1,5 +1,13 @@
 # node-triton-netconfig Changelog
 
+## not yet released
+
+(nothing yet)
+
+## 1.1.0
+
+* TRITON-1073 adminIpFromNicsArray in node-triton-netconfig
+
 ## 1.0.0
 
 First release.
diff --git a/lib/index.js b/lib/index.js
index f0ae562..e1e0b68 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -19,13 +19,10 @@ var INTERNAL_NAME = 'internal';
 /*
  * TODO: prefer RFD 117 traits
  */
-function _fromVmMetadataCommon(vm, what, network) {
-    var re = new RegExp('^' + network + RACK_RE, 'i');
-    var nics = vm.nics;
-
+function _fromNicsArrayCommon(nics, what, network) {
     for (var i = 0; i < nics.length; i++) {
-        var nictag = nics[i].nic_tag;
-        if (re.test(nictag)) {
+        var nic = nics[i];
+        if (_isNetNicCommon(nic, network)) {
             return nics[i][what];
         }
     }
@@ -33,6 +30,13 @@ function _fromVmMetadataCommon(vm, what, network) {
     return null;
 }
 
+/*
+ * TODO: prefer RFD 117 traits
+ */
+function _fromVmMetadataCommon(vm, what, network) {
+    return _fromNicsArrayCommon(vm.nics, what, network);
+}
+
 /*
  * TODO: prefer RFD 117 traits
  */
@@ -113,6 +117,12 @@ function adminMacFromVmMetadata(vm) {
     return _fromVmMetadataCommon(vm, 'mac', ADMIN_NAME);
 }
 
+// ---- From NICs array (sdc:nics metadata)
+
+function adminIpFromNicsArray(nics) {
+    return _fromNicsArrayCommon(nics, 'ip', ADMIN_NAME);
+}
+
 // ---- isNic
 
 function isNicAdmin(nic) {
@@ -139,6 +149,7 @@ function isNetInternal(net) {
 
 module.exports = {
     adminNicFromSysinfo: adminNicFromSysinfo,
+    adminIpFromNicsArray: adminIpFromNicsArray,
     adminIpFromSysinfo: adminIpFromSysinfo,
     adminIpFromVmMetadata: adminIpFromVmMetadata,
     externalIpFromVmMetadata: externalIpFromVmMetadata,
diff --git a/package.json b/package.json
index 157d014..17e6138 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "triton-netconfig",
-  "version": "1.0.0",
+  "version": "1.1.0",
   "description": "Common methods for managing Triton network configuration",
   "repository": {
     "type": "git",
@@ -12,10 +12,14 @@
   ],
   "author": "Joyent (joyent.com)",
   "license": "MPL-2.0",
-  "engines": ["node >=4.0.0"],
+  "engines": [
+    "node >=4.0.0"
+  ],
   "homepage": "https://github.com/joyent/node-triton-netconfig",
   "main": "./lib",
-  "files": ["lib"],
+  "files": [
+    "lib"
+  ],
   "devDependencies": {
     "eslint": "4.13.1",
     "eslint-config-prettier": "^2.9.0",
diff --git a/test/unit/main.test.js b/test/unit/main.test.js
index c551369..a07d70d 100644
--- a/test/unit/main.test.js
+++ b/test/unit/main.test.js
@@ -17,6 +17,7 @@ const jsprim = require('jsprim');
 const VMS = data['vms'];
 const NETS = data['nets'];
 const SYSINFO = data['sysinfo'];
+const NICS = data['nics'];
 
 tap.test('nets', function (tt) {
     tt.test('main', function (t) {
@@ -41,8 +42,8 @@ tap.test('nets', function (tt) {
     tt.end();
 });
 
-tap.test('vms', function (tt)  {
-    tt.test('main',function (t)  {
+tap.test('vms', function (tt) {
+    tt.test('main', function (t) {
         const main_vm = VMS['main'];
         const external_ip = main_vm['nics'][0]['ip'];
         const manta_ip = main_vm['nics'][1]['ip'];
@@ -57,7 +58,7 @@ tap.test('vms', function (tt)  {
         t.end();
     });
 
-    tt.test('rack',function (t)  {
+    tt.test('rack', function (t) {
         const rack_vm = VMS['rack'];
         const external_ip = rack_vm['nics'][0]['ip'];
         const manta_ip = rack_vm['nics'][1]['ip'];
@@ -74,8 +75,8 @@ tap.test('vms', function (tt)  {
     tt.end();
 });
 
-tap.test('nics', function (tt)  {
-    tt.test('main',function (t)  {
+tap.test('nics', function (tt) {
+    tt.test('main', function (t) {
         const main_vm = VMS['rack'];
         const external_nic = main_vm['nics'][0];
         const manta_nic = main_vm['nics'][1];
@@ -89,7 +90,7 @@ tap.test('nics', function (tt)  {
 
         t.end();
     });
-    tt.test('rack',function (t)  {
+    tt.test('rack',function (t) {
         const rack_vm = VMS['rack'];
         const external_nic = rack_vm['nics'][0];
         const manta_nic = rack_vm['nics'][1];
@@ -106,8 +107,8 @@ tap.test('nics', function (tt)  {
     tt.end();
 });
 
-tap.test('sysinfo',function (tt)  {
-    tt.test('main',function (t)  {
+tap.test('sysinfo', function (tt) {
+    tt.test('main', function (t) {
         const sysinfo = SYSINFO['main'];
         const admin_if = sysinfo['Network Interfaces']['vioif0']; 
         const admin_ip = admin_if['ip4addr'];
@@ -129,7 +130,7 @@ tap.test('sysinfo',function (tt)  {
 
         t.end();
     });
-    tt.test('rack',function (t)  {
+    tt.test('rack',function (t) {
         const sysinfo = SYSINFO['rack'];
         const admin_if = sysinfo['Network Interfaces']['vioif0']; 
         const admin_ip = admin_if['ip4addr'];
@@ -153,3 +154,23 @@ tap.test('sysinfo',function (tt)  {
     });
     tt.end();
 });
+
+tap.test('nics', function (tt) {
+    tt.test('main', function (t) {
+        const nics = NICS['main'];
+        const admin_ip = nics[0].ip;
+
+        t.equal(netconf.adminIpFromNicsArray(nics), admin_ip);
+        t.end();
+    });
+
+    tt.test('rack', function (t) {
+        const nics = NICS['rack'];
+        const admin_ip = nics[2].ip;
+
+        t.equal(netconf.adminIpFromNicsArray(nics), admin_ip);
+        t.end();
+    });
+
+    tt.end();
+});
diff --git a/test/unit/testdata.json b/test/unit/testdata.json
index f16d158..e2a4c13 100644
--- a/test/unit/testdata.json
+++ b/test/unit/testdata.json
@@ -506,5 +506,86 @@
             "netmask": "255.255.255.0"
 
         }
+    },
+    "nics": {
+        "main": [
+          {
+            "interface": "net0",
+            "mac": "90:b8:d0:aa:e1:8b",
+            "vlan_id": 0,
+            "nic_tag": "admin",
+            "netmask": "255.255.255.0",
+            "ip": "10.99.99.54",
+            "ips": [
+              "10.99.99.54/24"
+            ],
+            "network_uuid": "0a4d08a1-8e7f-48aa-9a68-91bdf2edd93e",
+            "mtu": 1500
+          },
+          {
+            "interface": "net1",
+            "mac": "90:b8:d0:2a:35:c4",
+            "vlan_id": 0,
+            "nic_tag": "external",
+            "gateway": "172.26.19.1",
+            "gateways": [
+              "172.26.19.1"
+            ],
+            "netmask": "255.255.255.0",
+            "ip": "172.26.19.225",
+            "ips": [
+              "172.26.19.225/24"
+            ],
+            "network_uuid": "2c606372-fa8d-452d-a93c-e4e98b98bda5",
+            "mtu": 1500,
+            "primary": true
+          }
+        ],
+        "rack": [
+          {
+            "interface": "net0",
+            "mac": "90:b8:d0:e4:4d:8b",
+            "vlan_id": 0,
+            "nic_tag": "external_rack_e50",
+            "gateway": "172.26.19.1",
+            "gateways": [
+              "172.26.19.1"
+            ],
+            "netmask": "255.255.255.0",
+            "ip": "172.26.19.246",
+            "ips": [
+              "172.26.19.246/24"
+            ],
+            "network_uuid": "f769454f-31f1-4e4b-b191-c2876b6814bb",
+            "mtu": 1500,
+            "primary": true
+          },
+          {
+            "interface": "net1",
+            "mac": "90:b8:d0:39:bc:14",
+            "vlan_id": 0,
+            "nic_tag": "manta_rack_e50",
+            "netmask": "255.255.255.0",
+            "ip": "10.111.111.6",
+            "ips": [
+              "10.111.111.6/24"
+            ],
+            "network_uuid": "84fa6540-1218-41e8-ac19-06181c258495",
+            "mtu": 1500
+          },
+          {
+            "interface": "net2",
+            "mac": "90:b8:d0:13:af:09",
+            "vlan_id": 0,
+            "nic_tag": "admin_rack_e50",
+            "netmask": "255.255.255.0",
+            "ip": "10.222.222.13",
+            "ips": [
+              "10.222.222.13/24"
+            ],
+            "network_uuid": "ef5461db-7a70-4920-b6fb-e5c4b9918de2",
+            "mtu": 1500
+          }
+        ]
     }
 }
-- 
2.21.0

