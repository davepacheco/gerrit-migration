From ab78289345135aec7ffb10283002922f86d5eaad Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Mon, 30 Jul 2018 22:03:22 +0000
Subject: [PATCH] joyent/node-asn1#33 Use ESLint for linting and style checking
 joyent/node-asn1#32 Release v0.2.4

---
 .eslintrc                            |  19 ++
 .gitignore                           |   3 +-
 .gitmodules                          |   3 +
 .npmignore                           |  11 +
 CONTRIBUTING.md                      |  16 ++
 Makefile                             |  66 ++++++
 README.md                            |   2 +-
 deps/jsstyle                         |   1 +
 lib/ber/errors.js                    |   2 +-
 lib/ber/index.js                     |   2 +-
 lib/ber/reader.js                    |  34 +--
 lib/ber/writer.js                    |  88 ++++----
 lib/index.js                         |   2 +-
 package.json                         |  15 +-
 {tst => test}/ber/reader.test.js     |  44 ++--
 {tst => test}/ber/writer.test.js     |  48 ++--
 test/run.js                          |  16 ++
 tools/jsstyle.conf                   |  14 ++
 tools/mk/Makefile.defs               |  51 +++++
 tools/mk/Makefile.deps               |  54 +++++
 tools/mk/Makefile.node.defs          | 104 +++++++++
 tools/mk/Makefile.node.targ          |  42 ++++
 tools/mk/Makefile.node_deps.defs     |  43 ++++
 tools/mk/Makefile.node_deps.targ     |  24 ++
 tools/mk/Makefile.node_prebuilt.defs | 153 +++++++++++++
 tools/mk/Makefile.node_prebuilt.targ |  42 ++++
 tools/mk/Makefile.smf.defs           |  40 ++++
 tools/mk/Makefile.smf.targ           |  29 +++
 tools/mk/Makefile.targ               | 318 +++++++++++++++++++++++++++
 29 files changed, 1168 insertions(+), 118 deletions(-)
 create mode 100644 .eslintrc
 create mode 100644 .gitmodules
 create mode 100644 .npmignore
 create mode 100644 CONTRIBUTING.md
 create mode 100644 Makefile
 create mode 160000 deps/jsstyle
 rename {tst => test}/ber/reader.test.js (85%)
 rename {tst => test}/ber/writer.test.js (90%)
 create mode 100644 test/run.js
 create mode 100644 tools/jsstyle.conf
 create mode 100644 tools/mk/Makefile.defs
 create mode 100644 tools/mk/Makefile.deps
 create mode 100644 tools/mk/Makefile.node.defs
 create mode 100644 tools/mk/Makefile.node.targ
 create mode 100644 tools/mk/Makefile.node_deps.defs
 create mode 100644 tools/mk/Makefile.node_deps.targ
 create mode 100644 tools/mk/Makefile.node_prebuilt.defs
 create mode 100644 tools/mk/Makefile.node_prebuilt.targ
 create mode 100644 tools/mk/Makefile.smf.defs
 create mode 100644 tools/mk/Makefile.smf.targ
 create mode 100644 tools/mk/Makefile.targ

diff --git a/.eslintrc b/.eslintrc
new file mode 100644
index 0000000..ccc6f09
--- /dev/null
+++ b/.eslintrc
@@ -0,0 +1,19 @@
+{
+    "plugins": [ "joyent" ],
+    "extends": [
+        "eslint:recommended",
+        "plugin:joyent/style",
+        "plugin:joyent/lint"
+    ],
+    "parserOptions": {
+        "ecmaVersion": 5,
+        "sourceType": "script",
+        "ecmaFeatures": {
+        }
+    },
+    "env": {
+        "node": true
+    },
+    "rules": {
+    }
+}
diff --git a/.gitignore b/.gitignore
index eb03e3e..3492d23 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,3 @@
-node_modules
+/coverage
+/node_modules
 *.log
diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..6998f69
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "deps/jsstyle"]
+	path = deps/jsstyle
+	url = https://github.com/joyent/jsstyle.git
diff --git a/.npmignore b/.npmignore
new file mode 100644
index 0000000..299fbc0
--- /dev/null
+++ b/.npmignore
@@ -0,0 +1,11 @@
+*.log
+/Makefile
+/deps
+/test
+/tools
+/.gitmodules
+/.npmignore
+/.eslintrc
+/.travis.yml
+/CONTRIBUTING.md
+/coverage
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000..88ca0a5
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,16 @@
+# Contributing
+
+This repository uses [cr.joyent.us](https://cr.joyent.us) (Gerrit) for new
+changes. Anyone can submit changes. To get started, see the [cr.joyent.us user
+guide](https://github.com/joyent/joyent-gerrit/blob/master/docs/user/README.md).
+This repo does not use GitHub pull requests.
+
+See the [Joyent Engineering
+Guidelines](https://github.com/joyent/eng/blob/master/docs/index.md) for general
+best practices expected in this repository.
+
+Contributions should be "make prepush" clean. The "prepush" target runs the
+"check" target, which will check for linting and style errors.
+
+If you're changing something non-trivial or user-facing, you may want to submit
+an issue first.
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..f2ffb23
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,66 @@
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright 2018, Joyent, Inc.
+#
+
+#
+# node-asn1 Makefile
+#
+
+#
+# Tools
+#
+
+ISTANBUL	:= node_modules/.bin/istanbul
+FAUCET		:= node_modules/.bin/faucet
+NPM		:= npm
+
+#
+# Files
+#
+
+JS_FILES	:= $(shell find lib test -name '*.js')
+JSSTYLE_FILES	= $(JS_FILES)
+JSSTYLE_FLAGS	= -f tools/jsstyle.conf
+ESLINT		= ./node_modules/.bin/eslint
+ESLINT_FILES	= $(JS_FILES)
+
+include ./tools/mk/Makefile.defs
+include ./tools/mk/Makefile.smf.defs
+
+#
+# Repo-specific targets
+#
+
+.PHONY: all
+all: $(TAPE)
+	$(NPM) rebuild
+
+$(ESLINT): | $(NPM_EXEC)
+	$(NPM) install \
+	    eslint@`json -f package.json devDependencies.eslint` \
+	    eslint-plugin-joyent@`json -f package.json devDependencies.eslint-plugin-joyent`
+
+$(ISTANBUL): | $(NPM_EXEC)
+	$(NPM) install
+
+$(FAUCET): | $(NPM_EXEC)
+	$(NPM) install
+
+CLEAN_FILES += ./node_modules/
+
+.PHONY: test
+test: $(ISTANBUL) $(FAUCET)
+	$(ISTANBUL) cover --print none test/run.js | $(FAUCET)
+
+.PHONY: check
+check:: $(ESLINT)
+	$(ESLINT) $(ESLINT_FILES)
+
+include ./tools/mk/Makefile.deps
+include ./tools/mk/Makefile.targ
diff --git a/README.md b/README.md
index b501563..2208210 100644
--- a/README.md
+++ b/README.md
@@ -47,4 +47,4 @@ MIT.
 
 ## Bugs
 
-See <https://github.com/mcavage/node-asn1/issues>.
+See <https://github.com/joyent/node-asn1/issues>.
diff --git a/deps/jsstyle b/deps/jsstyle
new file mode 160000
index 0000000..52dc973
--- /dev/null
+++ b/deps/jsstyle
@@ -0,0 +1 @@
+Subproject commit 52dc973cf64da11834eca7cf46ebce8518e3ee88
diff --git a/lib/ber/errors.js b/lib/ber/errors.js
index ff21d4f..4557b8a 100644
--- a/lib/ber/errors.js
+++ b/lib/ber/errors.js
@@ -3,7 +3,7 @@
 
 module.exports = {
 
-  newInvalidAsn1Error: function(msg) {
+  newInvalidAsn1Error: function (msg) {
     var e = new Error();
     e.name = 'InvalidAsn1Error';
     e.message = msg || '';
diff --git a/lib/ber/index.js b/lib/ber/index.js
index 4fb90ae..387d132 100644
--- a/lib/ber/index.js
+++ b/lib/ber/index.js
@@ -7,7 +7,7 @@ var Reader = require('./reader');
 var Writer = require('./writer');
 
 
-///--- Exports
+// --- Exports
 
 module.exports = {
 
diff --git a/lib/ber/reader.js b/lib/ber/reader.js
index 1538279..8a7e4ca 100644
--- a/lib/ber/reader.js
+++ b/lib/ber/reader.js
@@ -7,13 +7,13 @@ var ASN1 = require('./types');
 var errors = require('./errors');
 
 
-///--- Globals
+// --- Globals
 
 var newInvalidAsn1Error = errors.newInvalidAsn1Error;
 
 
 
-///--- API
+// --- API
 
 function Reader(data) {
   if (!data || !Buffer.isBuffer(data))
@@ -53,7 +53,7 @@ Object.defineProperty(Reader.prototype, 'buffer', {
  * @param {Boolean} peek true means don't move offset.
  * @return {Number} the next byte, null if not enough data.
  */
-Reader.prototype.readByte = function(peek) {
+Reader.prototype.readByte = function (peek) {
   if (this._size - this._offset < 1)
     return null;
 
@@ -66,7 +66,7 @@ Reader.prototype.readByte = function(peek) {
 };
 
 
-Reader.prototype.peek = function() {
+Reader.prototype.peek = function () {
   return this.readByte(true);
 };
 
@@ -82,7 +82,7 @@ Reader.prototype.peek = function() {
  * @return {Number} the amount of offset to advance the buffer.
  * @throws {InvalidAsn1Error} on bad ASN.1
  */
-Reader.prototype.readLength = function(offset) {
+Reader.prototype.readLength = function (offset) {
   if (offset === undefined)
     offset = this._offset;
 
@@ -93,10 +93,10 @@ Reader.prototype.readLength = function(offset) {
   if (lenB === null)
     return null;
 
-  if ((lenB & 0x80) == 0x80) {
+  if ((lenB & 0x80) === 0x80) {
     lenB &= 0x7f;
 
-    if (lenB == 0)
+    if (lenB === 0)
       throw newInvalidAsn1Error('Indefinite length not supported');
 
     if (lenB > 4)
@@ -125,7 +125,7 @@ Reader.prototype.readLength = function(offset) {
  *
  * @return {Number} the sequence's tag.
  */
-Reader.prototype.readSequence = function(tag) {
+Reader.prototype.readSequence = function (tag) {
   var seq = this.peek();
   if (seq === null)
     return null;
@@ -142,22 +142,22 @@ Reader.prototype.readSequence = function(tag) {
 };
 
 
-Reader.prototype.readInt = function() {
+Reader.prototype.readInt = function () {
   return this._readTag(ASN1.Integer);
 };
 
 
-Reader.prototype.readBoolean = function() {
+Reader.prototype.readBoolean = function () {
   return (this._readTag(ASN1.Boolean) === 0 ? false : true);
 };
 
 
-Reader.prototype.readEnumeration = function() {
+Reader.prototype.readEnumeration = function () {
   return this._readTag(ASN1.Enumeration);
 };
 
 
-Reader.prototype.readString = function(tag, retbuf) {
+Reader.prototype.readString = function (tag, retbuf) {
   if (!tag)
     tag = ASN1.OctetString;
 
@@ -188,7 +188,7 @@ Reader.prototype.readString = function(tag, retbuf) {
   return retbuf ? str : str.toString('utf8');
 };
 
-Reader.prototype.readOID = function(tag) {
+Reader.prototype.readOID = function (tag) {
   if (!tag)
     tag = ASN1.OID;
 
@@ -204,7 +204,7 @@ Reader.prototype.readOID = function(tag) {
 
     value <<= 7;
     value += byte & 0x7f;
-    if ((byte & 0x80) == 0) {
+    if ((byte & 0x80) === 0) {
       values.push(value);
       value = 0;
     }
@@ -218,7 +218,7 @@ Reader.prototype.readOID = function(tag) {
 };
 
 
-Reader.prototype._readTag = function(tag) {
+Reader.prototype._readTag = function (tag) {
   assert.ok(tag !== undefined);
 
   var b = this.peek();
@@ -249,7 +249,7 @@ Reader.prototype._readTag = function(tag) {
     value |= (this._buf[this._offset++] & 0xff);
   }
 
-  if ((fb & 0x80) == 0x80 && i !== 4)
+  if ((fb & 0x80) === 0x80 && i !== 4)
     value -= (1 << (i * 8));
 
   return value >> 0;
@@ -257,6 +257,6 @@ Reader.prototype._readTag = function(tag) {
 
 
 
-///--- Exported API
+// --- Exported API
 
 module.exports = Reader;
diff --git a/lib/ber/writer.js b/lib/ber/writer.js
index e308dc4..3515acf 100644
--- a/lib/ber/writer.js
+++ b/lib/ber/writer.js
@@ -6,7 +6,7 @@ var ASN1 = require('./types');
 var errors = require('./errors');
 
 
-///--- Globals
+// --- Globals
 
 var newInvalidAsn1Error = errors.newInvalidAsn1Error;
 
@@ -16,16 +16,16 @@ var DEFAULT_OPTS = {
 };
 
 
-///--- Helpers
+// --- Helpers
 
 function merge(from, to) {
   assert.ok(from);
-  assert.equal(typeof(from), 'object');
+  assert.equal(typeof (from), 'object');
   assert.ok(to);
-  assert.equal(typeof(to), 'object');
+  assert.equal(typeof (to), 'object');
 
   var keys = Object.getOwnPropertyNames(from);
-  keys.forEach(function(key) {
+  keys.forEach(function (key) {
     if (to[key])
       return;
 
@@ -38,7 +38,7 @@ function merge(from, to) {
 
 
 
-///--- API
+// --- API
 
 function Writer(options) {
   options = merge(DEFAULT_OPTS, options || {});
@@ -56,14 +56,14 @@ function Writer(options) {
 Object.defineProperty(Writer.prototype, 'buffer', {
   get: function () {
     if (this._seq.length)
-      throw new InvalidAsn1Error(this._seq.length + ' unended sequence(s)');
+      throw newInvalidAsn1Error(this._seq.length + ' unended sequence(s)');
 
     return (this._buf.slice(0, this._offset));
   }
 });
 
-Writer.prototype.writeByte = function(b) {
-  if (typeof(b) !== 'number')
+Writer.prototype.writeByte = function (b) {
+  if (typeof (b) !== 'number')
     throw new TypeError('argument must be a Number');
 
   this._ensure(1);
@@ -71,22 +71,22 @@ Writer.prototype.writeByte = function(b) {
 };
 
 
-Writer.prototype.writeInt = function(i, tag) {
-  if (typeof(i) !== 'number')
+Writer.prototype.writeInt = function (i, tag) {
+  if (typeof (i) !== 'number')
     throw new TypeError('argument must be a Number');
-  if (typeof(tag) !== 'number')
+  if (typeof (tag) !== 'number')
     tag = ASN1.Integer;
 
   var sz = 4;
 
   while ((((i & 0xff800000) === 0) || ((i & 0xff800000) === 0xff800000 >> 0)) &&
-         (sz > 1)) {
+        (sz > 1)) {
     sz--;
     i <<= 8;
   }
 
   if (sz > 4)
-    throw new InvalidAsn1Error('BER ints cannot be > 0xffffffff');
+    throw newInvalidAsn1Error('BER ints cannot be > 0xffffffff');
 
   this._ensure(2 + sz);
   this._buf[this._offset++] = tag;
@@ -100,26 +100,26 @@ Writer.prototype.writeInt = function(i, tag) {
 };
 
 
-Writer.prototype.writeNull = function() {
+Writer.prototype.writeNull = function () {
   this.writeByte(ASN1.Null);
   this.writeByte(0x00);
 };
 
 
-Writer.prototype.writeEnumeration = function(i, tag) {
-  if (typeof(i) !== 'number')
+Writer.prototype.writeEnumeration = function (i, tag) {
+  if (typeof (i) !== 'number')
     throw new TypeError('argument must be a Number');
-  if (typeof(tag) !== 'number')
+  if (typeof (tag) !== 'number')
     tag = ASN1.Enumeration;
 
   return this.writeInt(i, tag);
 };
 
 
-Writer.prototype.writeBoolean = function(b, tag) {
-  if (typeof(b) !== 'boolean')
+Writer.prototype.writeBoolean = function (b, tag) {
+  if (typeof (b) !== 'boolean')
     throw new TypeError('argument must be a Boolean');
-  if (typeof(tag) !== 'number')
+  if (typeof (tag) !== 'number')
     tag = ASN1.Boolean;
 
   this._ensure(3);
@@ -129,10 +129,10 @@ Writer.prototype.writeBoolean = function(b, tag) {
 };
 
 
-Writer.prototype.writeString = function(s, tag) {
-  if (typeof(s) !== 'string')
-    throw new TypeError('argument must be a string (was: ' + typeof(s) + ')');
-  if (typeof(tag) !== 'number')
+Writer.prototype.writeString = function (s, tag) {
+  if (typeof (s) !== 'string')
+    throw new TypeError('argument must be a string (was: ' + typeof (s) + ')');
+  if (typeof (tag) !== 'number')
     tag = ASN1.OctetString;
 
   var len = Buffer.byteLength(s);
@@ -146,8 +146,8 @@ Writer.prototype.writeString = function(s, tag) {
 };
 
 
-Writer.prototype.writeBuffer = function(buf, tag) {
-  if (typeof(tag) !== 'number')
+Writer.prototype.writeBuffer = function (buf, tag) {
+  if (typeof (tag) !== 'number')
     throw new TypeError('tag must be a number');
   if (!Buffer.isBuffer(buf))
     throw new TypeError('argument must be a buffer');
@@ -160,21 +160,21 @@ Writer.prototype.writeBuffer = function(buf, tag) {
 };
 
 
-Writer.prototype.writeStringArray = function(strings) {
+Writer.prototype.writeStringArray = function (strings) {
   if ((!strings instanceof Array))
     throw new TypeError('argument must be an Array[String]');
 
   var self = this;
-  strings.forEach(function(s) {
+  strings.forEach(function (s) {
     self.writeString(s);
   });
 };
 
 // This is really to solve DER cases, but whatever for now
-Writer.prototype.writeOID = function(s, tag) {
-  if (typeof(s) !== 'string')
+Writer.prototype.writeOID = function (s, tag) {
+  if (typeof (s) !== 'string')
     throw new TypeError('argument must be a string');
-  if (typeof(tag) !== 'number')
+  if (typeof (tag) !== 'number')
     tag = ASN1.OID;
 
   if (!/^([0-9]+\.){3,}[0-9]+$/.test(s))
@@ -207,7 +207,7 @@ Writer.prototype.writeOID = function(s, tag) {
   var tmp = s.split('.');
   var bytes = [];
   bytes.push(parseInt(tmp[0], 10) * 40 + parseInt(tmp[1], 10));
-  tmp.slice(2).forEach(function(b) {
+  tmp.slice(2).forEach(function (b) {
     encodeOctet(bytes, parseInt(b, 10));
   });
 
@@ -215,14 +215,14 @@ Writer.prototype.writeOID = function(s, tag) {
   this._ensure(2 + bytes.length);
   this.writeByte(tag);
   this.writeLength(bytes.length);
-  bytes.forEach(function(b) {
+  bytes.forEach(function (b) {
     self.writeByte(b);
   });
 };
 
 
-Writer.prototype.writeLength = function(len) {
-  if (typeof(len) !== 'number')
+Writer.prototype.writeLength = function (len) {
+  if (typeof (len) !== 'number')
     throw new TypeError('argument must be a Number');
 
   this._ensure(4);
@@ -242,12 +242,12 @@ Writer.prototype.writeLength = function(len) {
     this._buf[this._offset++] = len >> 8;
     this._buf[this._offset++] = len;
   } else {
-    throw new InvalidAsn1ERror('Length too long (> 4 bytes)');
+    throw newInvalidAsn1Error('Length too long (> 4 bytes)');
   }
 };
 
-Writer.prototype.startSequence = function(tag) {
-  if (typeof(tag) !== 'number')
+Writer.prototype.startSequence = function (tag) {
+  if (typeof (tag) !== 'number')
     tag = ASN1.Sequence | ASN1.Constructor;
 
   this.writeByte(tag);
@@ -257,7 +257,7 @@ Writer.prototype.startSequence = function(tag) {
 };
 
 
-Writer.prototype.endSequence = function() {
+Writer.prototype.endSequence = function () {
   var seq = this._seq.pop();
   var start = seq + 3;
   var len = this._offset - start;
@@ -280,12 +280,12 @@ Writer.prototype.endSequence = function() {
     this._buf[seq + 2] = len >> 8;
     this._buf[seq + 3] = len;
   } else {
-    throw new InvalidAsn1Error('Sequence too long');
+    throw newInvalidAsn1Error('Sequence too long');
   }
 };
 
 
-Writer.prototype._shift = function(start, len, shift) {
+Writer.prototype._shift = function (start, len, shift) {
   assert.ok(start !== undefined);
   assert.ok(len !== undefined);
   assert.ok(shift);
@@ -294,7 +294,7 @@ Writer.prototype._shift = function(start, len, shift) {
   this._offset += shift;
 };
 
-Writer.prototype._ensure = function(len) {
+Writer.prototype._ensure = function (len) {
   assert.ok(len);
 
   if (this._size - this._offset < len) {
@@ -312,6 +312,6 @@ Writer.prototype._ensure = function(len) {
 
 
 
-///--- Exported API
+// --- Exported API
 
 module.exports = Writer;
diff --git a/lib/index.js b/lib/index.js
index d1766e7..ede3ab2 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -7,7 +7,7 @@ var Ber = require('./ber/index');
 
 
 
-///--- Exported API
+// --- Exported API
 
 module.exports = {
 
diff --git a/package.json b/package.json
index c66fe8b..2b51c75 100644
--- a/package.json
+++ b/package.json
@@ -1,26 +1,31 @@
 {
-  "author": "Mark Cavage <mcavage@gmail.com>",
+  "author": "Joyent (joyent.com)",
   "contributors": [
+    "Mark Cavage <mcavage@gmail.com>",
     "David Gwynne <loki@animata.net>",
     "Yunong Xiao <yunong@joyent.com>",
     "Alex Wilson <alex.wilson@joyent.com>"
   ],
   "name": "asn1",
   "description": "Contains parsers and serializers for ASN.1 (currently BER only)",
-  "version": "0.2.3",
+  "version": "0.2.4",
   "repository": {
     "type": "git",
-    "url": "git://github.com/mcavage/node-asn1.git"
+    "url": "git://github.com/joyent/node-asn1.git"
   },
   "main": "lib/index.js",
   "dependencies": {
     "safer-buffer": "~2.1.0"
   },
   "devDependencies": {
-    "tap": "0.4.8"
+    "istanbul": "^0.3.6",
+    "faucet": "0.0.1",
+    "tape": "^3.5.0",
+    "eslint": "2.13.1",
+    "eslint-plugin-joyent": "~1.3.0"
   },
   "scripts": {
-    "test": "./node_modules/.bin/tap ./tst"
+    "test": "./node_modules/.bin/tape ./test/ber/*.test.js"
   },
   "license": "MIT"
 }
diff --git a/tst/ber/reader.test.js b/test/ber/reader.test.js
similarity index 85%
rename from tst/ber/reader.test.js
rename to test/ber/reader.test.js
index 72b5dcc..95ac5a9 100644
--- a/tst/ber/reader.test.js
+++ b/test/ber/reader.test.js
@@ -1,23 +1,24 @@
 // Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.
 
-var test = require('tap').test;
+var test = require('tape');
 var Buffer = require('safer-buffer').Buffer;
 
 
 
-///--- Globals
+// --- Globals
 
 var BerReader;
 
 
 
-///--- Tests
+// --- Tests
 
-test('load library', function(t) {
+test('load library', function (t) {
   BerReader = require('../../lib/index').BerReader;
   t.ok(BerReader);
   try {
-    new BerReader();
+    var reader = new BerReader();
+    t.equal(reader, null, 'reader');
     t.fail('Should have thrown');
   } catch (e) {
     t.ok(e instanceof TypeError, 'Should have been a type error');
@@ -26,7 +27,7 @@ test('load library', function(t) {
 });
 
 
-test('read byte', function(t) {
+test('read byte', function (t) {
   var reader = new BerReader(Buffer.from([0xde]));
   t.ok(reader);
   t.equal(reader.readByte(), 0xde, 'wrong value');
@@ -34,7 +35,7 @@ test('read byte', function(t) {
 });
 
 
-test('read 1 byte int', function(t) {
+test('read 1 byte int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x01, 0x03]));
   t.ok(reader);
   t.equal(reader.readInt(), 0x03, 'wrong value');
@@ -43,7 +44,7 @@ test('read 1 byte int', function(t) {
 });
 
 
-test('read 2 byte int', function(t) {
+test('read 2 byte int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x02, 0x7e, 0xde]));
   t.ok(reader);
   t.equal(reader.readInt(), 0x7ede, 'wrong value');
@@ -52,7 +53,7 @@ test('read 2 byte int', function(t) {
 });
 
 
-test('read 3 byte int', function(t) {
+test('read 3 byte int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x03, 0x7e, 0xde, 0x03]));
   t.ok(reader);
   t.equal(reader.readInt(), 0x7ede03, 'wrong value');
@@ -61,7 +62,7 @@ test('read 3 byte int', function(t) {
 });
 
 
-test('read 4 byte int', function(t) {
+test('read 4 byte int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x04, 0x7e, 0xde, 0x03, 0x01]));
   t.ok(reader);
   t.equal(reader.readInt(), 0x7ede0301, 'wrong value');
@@ -70,7 +71,7 @@ test('read 4 byte int', function(t) {
 });
 
 
-test('read 1 byte negative int', function(t) {
+test('read 1 byte negative int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x01, 0xdc]));
   t.ok(reader);
   t.equal(reader.readInt(), -36, 'wrong value');
@@ -79,7 +80,7 @@ test('read 1 byte negative int', function(t) {
 });
 
 
-test('read 2 byte negative int', function(t) {
+test('read 2 byte negative int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x02, 0xc0, 0x4e]));
   t.ok(reader);
   t.equal(reader.readInt(), -16306, 'wrong value');
@@ -88,7 +89,7 @@ test('read 2 byte negative int', function(t) {
 });
 
 
-test('read 3 byte negative int', function(t) {
+test('read 3 byte negative int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x03, 0xff, 0x00, 0x19]));
   t.ok(reader);
   t.equal(reader.readInt(), -65511, 'wrong value');
@@ -97,7 +98,7 @@ test('read 3 byte negative int', function(t) {
 });
 
 
-test('read 4 byte negative int', function(t) {
+test('read 4 byte negative int', function (t) {
   var reader = new BerReader(Buffer.from([0x02, 0x04, 0x91, 0x7c, 0x22, 0x1f]));
   t.ok(reader);
   t.equal(reader.readInt(), -1854135777, 'wrong value');
@@ -106,7 +107,7 @@ test('read 4 byte negative int', function(t) {
 });
 
 
-test('read boolean true', function(t) {
+test('read boolean true', function (t) {
   var reader = new BerReader(Buffer.from([0x01, 0x01, 0xff]));
   t.ok(reader);
   t.equal(reader.readBoolean(), true, 'wrong value');
@@ -115,7 +116,7 @@ test('read boolean true', function(t) {
 });
 
 
-test('read boolean false', function(t) {
+test('read boolean false', function (t) {
   var reader = new BerReader(Buffer.from([0x01, 0x01, 0x00]));
   t.ok(reader);
   t.equal(reader.readBoolean(), false, 'wrong value');
@@ -124,7 +125,7 @@ test('read boolean false', function(t) {
 });
 
 
-test('read enumeration', function(t) {
+test('read enumeration', function (t) {
   var reader = new BerReader(Buffer.from([0x0a, 0x01, 0x20]));
   t.ok(reader);
   t.equal(reader.readEnumeration(), 0x20, 'wrong value');
@@ -133,7 +134,7 @@ test('read enumeration', function(t) {
 });
 
 
-test('read string', function(t) {
+test('read string', function (t) {
   var dn = 'cn=foo,ou=unit,o=test';
   var buf = Buffer.alloc(dn.length + 2);
   buf[0] = 0x04;
@@ -147,7 +148,7 @@ test('read string', function(t) {
 });
 
 
-test('read sequence', function(t) {
+test('read sequence', function (t) {
   var reader = new BerReader(Buffer.from([0x30, 0x03, 0x01, 0x01, 0xff]));
   t.ok(reader);
   t.equal(reader.readSequence(), 0x30, 'wrong value');
@@ -158,7 +159,7 @@ test('read sequence', function(t) {
 });
 
 
-test('anonymous LDAPv3 bind', function(t) {
+test('anonymous LDAPv3 bind', function (t) {
   var BIND = Buffer.alloc(14);
   BIND[0] = 0x30;  // Sequence
   BIND[1] = 12;    // len
@@ -192,9 +193,8 @@ test('anonymous LDAPv3 bind', function(t) {
 });
 
 
-test('long string', function(t) {
+test('long string', function (t) {
   var buf = Buffer.alloc(256);
-  var o;
   var s =
     '2;649;CN=Red Hat CS 71GA Demo,O=Red Hat CS 71GA Demo,C=US;' +
     'CN=RHCS Agent - admin01,UID=admin01,O=redhat,C=US [1] This is ' +
diff --git a/tst/ber/writer.test.js b/test/ber/writer.test.js
similarity index 90%
rename from tst/ber/writer.test.js
rename to test/ber/writer.test.js
index 5d5acf7..17c4671 100644
--- a/tst/ber/writer.test.js
+++ b/test/ber/writer.test.js
@@ -1,19 +1,17 @@
 // Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.
 
-var test = require('tap').test;
-var sys = require('sys');
+var test = require('tape');
 var Buffer = require('safer-buffer').Buffer;
 
-///--- Globals
+// --- Globals
 
 var BerWriter;
 
-var BerReader;
 
 
-///--- Tests
+// --- Tests
 
-test('load library', function(t) {
+test('load library', function (t) {
   BerWriter = require('../../lib/index').BerWriter;
   t.ok(BerWriter);
   t.ok(new BerWriter());
@@ -21,7 +19,7 @@ test('load library', function(t) {
 });
 
 
-test('write byte', function(t) {
+test('write byte', function (t) {
   var writer = new BerWriter();
 
   writer.writeByte(0xC2);
@@ -35,7 +33,7 @@ test('write byte', function(t) {
 });
 
 
-test('write 1 byte int', function(t) {
+test('write 1 byte int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(0x7f);
@@ -51,7 +49,7 @@ test('write 1 byte int', function(t) {
 });
 
 
-test('write 2 byte int', function(t) {
+test('write 2 byte int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(0x7ffe);
@@ -68,7 +66,7 @@ test('write 2 byte int', function(t) {
 });
 
 
-test('write 3 byte int', function(t) {
+test('write 3 byte int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(0x7ffffe);
@@ -86,7 +84,7 @@ test('write 3 byte int', function(t) {
 });
 
 
-test('write 4 byte int', function(t) {
+test('write 4 byte int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(0x7ffffffe);
@@ -106,7 +104,7 @@ test('write 4 byte int', function(t) {
 });
 
 
-test('write 1 byte negative int', function(t) {
+test('write 1 byte negative int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(-128);
@@ -123,7 +121,7 @@ test('write 1 byte negative int', function(t) {
 });
 
 
-test('write 2 byte negative int', function(t) {
+test('write 2 byte negative int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(-22400);
@@ -141,7 +139,7 @@ test('write 2 byte negative int', function(t) {
 });
 
 
-test('write 3 byte negative int', function(t) {
+test('write 3 byte negative int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(-481653);
@@ -160,7 +158,7 @@ test('write 3 byte negative int', function(t) {
 });
 
 
-test('write 4 byte negative int', function(t) {
+test('write 4 byte negative int', function (t) {
   var writer = new BerWriter();
 
   writer.writeInt(-1522904131);
@@ -180,7 +178,7 @@ test('write 4 byte negative int', function(t) {
 });
 
 
-test('write boolean', function(t) {
+test('write boolean', function (t) {
   var writer = new BerWriter();
 
   writer.writeBoolean(true);
@@ -200,7 +198,7 @@ test('write boolean', function(t) {
 });
 
 
-test('write string', function(t) {
+test('write string', function (t) {
   var writer = new BerWriter();
   writer.writeString('hello world');
   var ber = writer.buffer;
@@ -214,13 +212,13 @@ test('write string', function(t) {
   t.end();
 });
 
-test('write buffer', function(t) {
+test('write buffer', function (t) {
   var writer = new BerWriter();
   // write some stuff to start with
   writer.writeString('hello world');
   var ber = writer.buffer;
   var buf = Buffer.from([0x04, 0x0b, 0x30, 0x09, 0x02, 0x01, 0x0f, 0x01, 0x01,
-     0xff, 0x01, 0x01, 0xff]);
+    0xff, 0x01, 0x01, 0xff]);
   writer.writeBuffer(buf.slice(2, buf.length), 0x04);
   ber = writer.buffer;
 
@@ -237,7 +235,7 @@ test('write buffer', function(t) {
   t.end();
 });
 
-test('write string array', function(t) {
+test('write string array', function (t) {
   var writer = new BerWriter();
   writer.writeStringArray(['hello world', 'fubar!']);
   var ber = writer.buffer;
@@ -257,7 +255,7 @@ test('write string array', function(t) {
 });
 
 
-test('resize internal buffer', function(t) {
+test('resize internal buffer', function (t) {
   var writer = new BerWriter({size: 2});
   writer.writeString('hello world');
   var ber = writer.buffer;
@@ -272,7 +270,7 @@ test('resize internal buffer', function(t) {
 });
 
 
-test('sequence', function(t) {
+test('sequence', function (t) {
   var writer = new BerWriter({size: 25});
   writer.startSequence();
   writer.writeString('hello world');
@@ -292,7 +290,7 @@ test('sequence', function(t) {
 });
 
 
-test('nested sequence', function(t) {
+test('nested sequence', function (t) {
   var writer = new BerWriter({size: 25});
   writer.startSequence();
   writer.writeString('hello world');
@@ -319,7 +317,7 @@ test('nested sequence', function(t) {
 });
 
 
-test('LDAP bind message', function(t) {
+test('LDAP bind message', function (t) {
   var dn = 'cn=foo,ou=unit,o=test';
   var writer = new BerWriter();
   writer.startSequence();
@@ -355,7 +353,7 @@ test('LDAP bind message', function(t) {
 });
 
 
-test('Write OID', function(t) {
+test('Write OID', function (t) {
   var oid = '1.2.840.113549.1.1.1';
   var writer = new BerWriter();
   writer.writeOID(oid);
diff --git a/test/run.js b/test/run.js
new file mode 100644
index 0000000..c91d702
--- /dev/null
+++ b/test/run.js
@@ -0,0 +1,16 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright (c) 2015, Joyent, Inc.
+ */
+
+'use strict';
+
+// --- Run All Tests
+
+require('./ber/reader.test.js');
+require('./ber/writer.test.js');
diff --git a/tools/jsstyle.conf b/tools/jsstyle.conf
new file mode 100644
index 0000000..6f09704
--- /dev/null
+++ b/tools/jsstyle.conf
@@ -0,0 +1,14 @@
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2018, Joyent, Inc.
+#
+
+indent=2
+doxygen
+unparenthesized-return=0
+strict-indent=true
diff --git a/tools/mk/Makefile.defs b/tools/mk/Makefile.defs
new file mode 100644
index 0000000..85139d7
--- /dev/null
+++ b/tools/mk/Makefile.defs
@@ -0,0 +1,51 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.defs: common defines.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+# This makefile defines some useful defines. Include it at the top of
+# your Makefile.
+#
+# Definitions in this Makefile:
+#
+#	TOP 		The absolute path to the project directory. The top dir.
+#	BRANCH 		The current git branch.
+#	TIMESTAMP	The timestamp for the build. This can be set via
+#			the TIMESTAMP envvar (used by MG-based builds).
+#	STAMP		A build stamp to use in built package names.
+#
+
+TOP := $(shell pwd)
+
+#
+# Mountain Gorilla-spec'd versioning.
+# See "Package Versioning" in MG's README.md:
+# <https://mo.joyent.com/mountain-gorilla/blob/master/README.md#L139-200>
+#
+# Need GNU awk for multi-char arg to "-F".
+_AWK := $(shell (which gawk >/dev/null && echo gawk) \
+	|| (which nawk >/dev/null && echo nawk) \
+	|| echo awk)
+BRANCH := $(shell git symbolic-ref HEAD | $(_AWK) -F/ '{print $$3}')
+ifeq ($(TIMESTAMP),)
+	TIMESTAMP := $(shell date -u "+%Y%m%dT%H%M%SZ")
+endif
+_GITDESCRIBE := g$(shell git describe --all --long --dirty | $(_AWK) -F'-g' '{print $$NF}')
+STAMP := $(BRANCH)-$(TIMESTAMP)-$(_GITDESCRIBE)
+
+# node-gyp will print build info useful for debugging with V=1
+export V=1
diff --git a/tools/mk/Makefile.deps b/tools/mk/Makefile.deps
new file mode 100644
index 0000000..1cffbe7
--- /dev/null
+++ b/tools/mk/Makefile.deps
@@ -0,0 +1,54 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.deps: Makefile for including common tools as dependencies
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+# This file is separate from Makefile.targ so that teams can choose
+# independently whether to use the common targets in Makefile.targ and the
+# common tools here.
+#
+
+#
+# javascriptlint
+#
+JSL_EXEC	?= deps/javascriptlint/build/install/jsl
+JSL		?= $(JSL_EXEC)
+
+$(JSL_EXEC): | deps/javascriptlint/.git
+	cd deps/javascriptlint && make install
+
+distclean::
+	if [[ -f deps/javascriptlint/Makefile ]]; then \
+		cd deps/javascriptlint && make clean; \
+	fi
+
+#
+# jsstyle
+#
+JSSTYLE_EXEC	?= deps/jsstyle/jsstyle
+JSSTYLE		?= $(JSSTYLE_EXEC)
+
+$(JSSTYLE_EXEC): | deps/jsstyle/.git
+
+#
+# restdown
+#
+RESTDOWN_EXEC	?= deps/restdown/bin/restdown
+RESTDOWN	?= python $(RESTDOWN_EXEC)
+$(RESTDOWN_EXEC): | deps/restdown/.git
+
+EXTRA_DOC_DEPS	?=
diff --git a/tools/mk/Makefile.node.defs b/tools/mk/Makefile.node.defs
new file mode 100644
index 0000000..9376841
--- /dev/null
+++ b/tools/mk/Makefile.node.defs
@@ -0,0 +1,104 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.node.defs: Makefile for building and bundling your own Node.js.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+#
+# This Makefile facilitates building and bundling your own copy of Node.js in
+# your repo.  All it does is define variables for node, node-waf, and npm for
+# you to use elsewhere in your Makefile and rules to build these tools when
+# needed.
+#
+# To use this facility, include "Makefile.node.defs", use the variables as
+# described below to define targets, and then include "Makefile.node.targ".
+#
+# There are two use cases addressed here:
+#
+# (1) Invoking node, node-waf, or npm as part of the build process, as in "npm
+#     install" and "node-waf configure build".  To facilitate this, this
+#     Makefile defines Make variables NODE, NODE_WAF, and NPM that you can use
+#     to invoke these commands during the build process.  You MUST NOT assume
+#     that these variables just evaluate to the filenames themselves, as they
+#     may have environment variable definitions and other things that prevent
+#     you from using them directly as a filename.  If you want that, see (2).
+#
+#     Wherever you use one of these variables, you MUST include a dependency on
+#     the corresponding *_EXEC variable as well, like so:
+#
+#	node_modules/restify: deps/restify $(NPM_EXEC)
+#		$(NPM) install deps/restify
+#
+#     or better, use an order-only dependency to avoid spurious rebuilds:
+#
+#	node_modules/restify: deps/restify | $(NPM_EXEC)
+#		$(NPM) install deps/restify
+#
+#     Otherwise, the underlying file will not get built.  We don't
+#     automatically build them as part of "all" because that approach is
+#     brittle.
+#
+# (2) Specifying paths for invoking node, node-waf, or npm at RUNTIME, as in
+#     specifying the path to node used for the start method of your service's
+#     SMF manifest.  For this, this Makefile defines variables NODE_EXEC,
+#     NODE_WAF_EXEC, and NPM_EXEC, which represent the relative paths of these
+#     files from the root of the workspace.  You MUST NOT use these variables
+#     to invoke these commands during the build process.  See (1) instead.
+#
+#     However, in order to work at runtime, you must build the tool as well.
+#     That is, if you use NODE_EXEC to specify the path to node, you must
+#     depend on NODE_EXEC somewhere. This usually happens anyway because you
+#     usually need them during the build process too, but if you don't then
+#     you need to explicitly add NODE_EXEC (or whichever) to your "all"
+#     target.
+#
+# When including this Makefile, you MAY also specify:
+#
+#	BUILD			top-level directory for built binaries
+#				(default: "build")
+#
+#	NODE_INSTALL		where node should install its built items
+#				(default: "$BUILD/node")
+#
+#	NODE_CONFIG_FLAGS	extra flags to pass to Node's "configure"
+#				(default: "--with-dtrace" on SmartOS; empty
+#				otherwise.)
+#
+
+TOP ?= $(error You must include Makefile.defs before this makefile)
+
+BUILD		?= build
+NODE_INSTALL 	?= $(BUILD)/node
+DISTCLEAN_FILES	+= $(NODE_INSTALL)
+
+NODE_CONFIG_FLAGS += --prefix=$(TOP)/$(NODE_INSTALL)
+
+ifeq ($(shell uname -s),SunOS)
+	NODE_CONFIG_FLAGS += 	--with-dtrace \
+				--openssl-libpath=/opt/local/lib \
+				--openssl-includes=/opt/local/include
+endif
+
+NODE_EXEC	= $(NODE_INSTALL)/bin/node
+NODE_WAF_EXEC	= $(NODE_INSTALL)/bin/node-waf
+NPM_EXEC	= $(NODE_INSTALL)/bin/npm
+
+# Ensure these use absolute paths to the executables to allow running
+# from a dir other than the project top.
+NODE		:= $(TOP)/$(NODE_EXEC)
+NODE_WAF	:= $(TOP)/$(NODE_WAF_EXEC)
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NPM_EXEC)
diff --git a/tools/mk/Makefile.node.targ b/tools/mk/Makefile.node.targ
new file mode 100644
index 0000000..abdc616
--- /dev/null
+++ b/tools/mk/Makefile.node.targ
@@ -0,0 +1,42 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.node.targ: See Makefile.node.defs.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+ifneq ($(shell uname -s),SunOS)
+NODE_PREBUILT_VERSION ?= $(error You must define NODE_PREBUILT_VERSION to use Makefile.node.targ on non-SunOS)
+endif
+
+ifeq ($(shell uname -s),SunOS)
+$(NODE_EXEC) $(NPM_EXEC) $(NODE_WAF_EXEC): | deps/node/.git
+	(cd deps/node; ./configure $(NODE_CONFIG_FLAGS) && $(MAKE) && $(MAKE) install)
+else
+$(NODE_EXEC) $(NPM_EXEC) $(NODE_WAF_EXEC):
+	(mkdir -p $(BUILD) \
+		&& cd $(BUILD) \
+		&& [[ -d src-node ]] && (cd src-node && git checkout master && git pull) || git clone git://github.com/joyent/node.git src-node \
+		&& cd src-node \
+		&& git checkout $(NODE_PREBUILT_VERSION) \
+		&& ./configure $(NODE_CONFIG_FLAGS) \
+		&& $(MAKE) && $(MAKE) install)
+endif
+
+DISTCLEAN_FILES += $(NODE_INSTALL) $(BUILD)/src-node
+
+distclean::
+	-([[ ! -d deps/node ]] || (cd deps/node && $(MAKE) distclean))
diff --git a/tools/mk/Makefile.node_deps.defs b/tools/mk/Makefile.node_deps.defs
new file mode 100644
index 0000000..29a83f7
--- /dev/null
+++ b/tools/mk/Makefile.node_deps.defs
@@ -0,0 +1,43 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.node_deps.defs: Makefile for including npm modules whose sources
+# reside inside the repo.  This should NOT be used for modules in the npm
+# public repo or modules that could be specified with git SHAs.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+#
+# This Makefile takes as input the following make variable:
+#
+#    REPO_MODULES	List of relative paths to node modules (i.e., npm
+#    			packages) inside this repo.  For example:
+#    			src/node-canative, where there's a binary npm package
+#    			in src/node-canative.
+#
+# Based on the above, this Makefile defines the following new variables:
+#
+#    REPO_DEPS		List of relative paths to the installed modules.  For
+#    			example: "node_modules/canative".
+#
+# The accompanying Makefile.node_deps.targ defines a target that will install
+# each of REPO_MODULES into REPO_DEPS and remove REPO_DEPS with "make clean".
+# The top-level Makefile is responsible for depending on REPO_DEPS where
+# appropriate (usually the "deps" or "all" target).
+#
+
+REPO_DEPS    = $(REPO_MODULES:src/node-%=node_modules/%)
+CLEAN_FILES += $(REPO_DEPS)
diff --git a/tools/mk/Makefile.node_deps.targ b/tools/mk/Makefile.node_deps.targ
new file mode 100644
index 0000000..bb2ab4f
--- /dev/null
+++ b/tools/mk/Makefile.node_deps.targ
@@ -0,0 +1,24 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.node_deps.targ: targets for Makefile.node_deps.defs.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+NPM_EXEC  ?= $(error NPM_EXEC must be defined for Makefile.node_deps.targ)
+
+node_modules/%: src/node-% | $(NPM_EXEC)
+	$(NPM) install $<
diff --git a/tools/mk/Makefile.node_prebuilt.defs b/tools/mk/Makefile.node_prebuilt.defs
new file mode 100644
index 0000000..5744489
--- /dev/null
+++ b/tools/mk/Makefile.node_prebuilt.defs
@@ -0,0 +1,153 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.node_prebuilt.defs: Makefile for including a prebuilt Node.js build.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+
+#
+# This Makefile facilitates downloading and bundling a prebuilt node.js
+# build (using the 'sdcnode' distro builds). This is an alternative to
+# the "Makefile.node.*" makefiles for *building* a node from source.
+#
+# Usage:
+#
+# - Define `NODE_PREBUILT_VERSION` in your Makefile to choose a node version.
+#   E.g.: `NODE_PREBUILT_VERSION=v0.6.19`. See other optional variables
+#   below.
+# - `include tools/mk/Makefile.node_prebuilt.defs` after this in your Makefile.
+# - `include tools/mk/Makefile.node_prebuilt.targ` near the end of your
+#   Makefile.
+# - Have at least one of your Makefile targets depend on either `$(NODE_EXEC)`
+#   or `$(NPM_EXEC)`. E.g.:
+#
+#		node_modules/restify: deps/restify $(NPM_EXEC)
+#			$(NPM) install deps/restify
+#
+#   or better, use an order-only dependency to avoid spurious rebuilds:
+#
+#		node_modules/restify: deps/restify | $(NPM_EXEC)
+#			$(NPM) install deps/restify
+#
+# - Use `$(NPM)` or `$(NODE)` to use your node build.
+# - Include the "$(NODE_INSTALL)" tree in your release package.
+#
+#
+# When including this Makefile, you MUST also specify:
+#
+#	NODE_PREBUILT_VERSION 	The node version in the prebuilt 'sdcnode'
+#				package to use. Typically this is one of the
+#				node version tags, e.g. "v0.6.18" but it
+#				can be any commitish.
+#
+# When including this Makefile, you MAY also specify:
+#
+#	NODE_PREBUILT_DIR 	The dir in which to find sdcnode builds. This
+#				can either be a *local directory* or *a
+#				URL* dir (with trailing '/') which serves
+#				Apache/Nginx dir listing HTML.
+#				(default: sdcnode master build dir on stuff)
+#
+#	NODE_PREBUILT_TAG	The 'sdcnode' project supports special
+#				configuration builds of node, e.g. say a
+#				build configured `--without-ssl`. These
+#				special configurations are given a tag, e.g.
+#				'gz', that is used in the filename. Optionally
+#				specify a tag name here.
+#				(default: empty)
+#
+#	NODE_PREBUILT_BRANCH	Specify a particular branch of 'sdcnode' builds
+#				from which to pull. Generally one should stick
+#				with the default.
+#				(default: master)
+#
+#	NODE_PREBUILT_IMAGE		If you have a zone image that differs from that
+#				for an sdcnode build that you want to use (potential compat
+#				issues be damned), then set this to the UUID of the sdcnode
+#				build you want. See here for available build image uuids:
+#				<https://download.joyent.com/pub/build/sdcnode/master-latest/sdcnode/>
+#
+#	BUILD			top-level directory for built binaries
+#				(default: "build")
+#
+#	NODE_INSTALL		where node should install its built items
+#				(default: "$BUILD/node")
+#
+#
+# Dev Notes:
+#
+# This works by getting "NODE_PREBUILT_NAME" from the provided "NODE_PREBUILT_*"
+# vars and the image version (via 'mdata-get sdc:image_uuid'). The image uuid is
+# included to ensure an exact match with the build machine. This name (e.g.
+# "v0.6.18-zone-$uuid") is used to find a matching "sdcnode-$name-*.tgz" build
+# in "NODE_PREBUILT_DIR" (either a local directory or a URL). That tarball is
+# downloaded and extracted into "NODE_INSTALL".
+#
+# The "*_EXEC" vars are set to named symlinks, e.g.
+# "build/prebuilt-node-v0.6.18-$uuid", so that a change of selected node
+# build (say the developer changes NODE_PREBUILT_VERSION) will recreate the
+# node install.
+#
+# See <https://mo.joyent.com/docs/sdcnode/master/> for details on 'sdcnode-*'
+# package naming.
+#
+
+TOP ?= $(error You must include Makefile.defs before this makefile)
+NODE_PREBUILT_VERSION ?= $(error NODE_PREBUILT_VERSION is not set.)
+
+
+BUILD		?= build
+NODE_INSTALL	?= $(BUILD)/node
+DISTCLEAN_FILES	+= $(NODE_INSTALL) \
+	$(BUILD)/prebuilt-node-* $(BUILD)/prebuilt-npm-*
+
+NODE_PREBUILT_BRANCH ?= master
+NODE_PREBUILT_IMAGE ?= $(shell pfexec mdata-get sdc:image_uuid)
+ifeq ($(NODE_PREBUILT_TAG),)
+	NODE_PREBUILT_NAME := $(NODE_PREBUILT_VERSION)-$(NODE_PREBUILT_IMAGE)
+else
+	NODE_PREBUILT_NAME := $(NODE_PREBUILT_VERSION)-$(NODE_PREBUILT_TAG)-$(NODE_PREBUILT_IMAGE)
+endif
+NODE_PREBUILT_PATTERN := sdcnode-$(NODE_PREBUILT_NAME)-$(NODE_PREBUILT_BRANCH)-.*\.tgz
+NODE_PREBUILT_DIR ?= https://download.joyent.com/pub/build/sdcnode/$(NODE_PREBUILT_IMAGE)/$(NODE_PREBUILT_BRANCH)-latest/sdcnode/
+ifeq ($(shell echo $(NODE_PREBUILT_DIR) | cut -c 1-4),http)
+	NODE_PREBUILT_BASE := $(shell curl -ksS --fail --connect-timeout 30 $(NODE_PREBUILT_DIR) | grep 'href=' | cut -d'"' -f2 | grep "^$(NODE_PREBUILT_PATTERN)$$" | sort | tail -1)
+	ifneq ($(NODE_PREBUILT_BASE),)
+		NODE_PREBUILT_TARBALL := $(NODE_PREBUILT_DIR)$(NODE_PREBUILT_BASE)
+	endif
+else
+	NODE_PREBUILT_BASE := $(shell ls -1 $(NODE_PREBUILT_DIR)/ | grep "^$(NODE_PREBUILT_PATTERN)$$" 2>/dev/null | sort | tail -1)
+	ifneq ($(NODE_PREBUILT_BASE),)
+		NODE_PREBUILT_TARBALL := $(NODE_PREBUILT_DIR)/$(NODE_PREBUILT_BASE)
+	endif
+endif
+ifeq ($(NODE_PREBUILT_TARBALL),)
+	NODE_PREBUILT_TARBALL = $(error NODE_PREBUILT_TARBALL is empty: no '$(NODE_PREBUILT_DIR)/$(NODE_PREBUILT_PATTERN)' found)
+endif
+
+
+# Prebuild-specific paths for the "*_EXEC" vars to ensure that
+# a prebuild change (e.g. if master Makefile's NODE_PREBUILT_VERSION
+# choice changes) causes a install of the new node.
+NODE_EXEC	:= $(BUILD)/prebuilt-node-$(NODE_PREBUILT_NAME)
+NODE_WAF_EXEC	:= $(BUILD)/prebuilt-node-waf-$(NODE_PREBUILT_NAME)
+NPM_EXEC	:= $(BUILD)/prebuilt-npm-$(NODE_PREBUILT_NAME)
+
+# Ensure these use absolute paths to the executables to allow running
+# from a dir other than the project top.
+NODE		:= $(TOP)/$(NODE_INSTALL)/bin/node
+NODE_WAF	:= $(TOP)/$(NODE_INSTALL)/bin/node-waf
+NPM		:= PATH=$(TOP)/$(NODE_INSTALL)/bin:$(PATH) node $(TOP)/$(NODE_INSTALL)/bin/npm
diff --git a/tools/mk/Makefile.node_prebuilt.targ b/tools/mk/Makefile.node_prebuilt.targ
new file mode 100644
index 0000000..6877333
--- /dev/null
+++ b/tools/mk/Makefile.node_prebuilt.targ
@@ -0,0 +1,42 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.node_prebuilt.targ: Makefile for including a prebuilt Node.js
+# build.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+
+
+NODE_PREBUILT_TARBALL ?= $(error NODE_PREBUILT_TARBALL is not set: was Makefile.node_prebuilt.defs included?)
+
+
+# TODO: remove this limitation
+# Limitation: currently presuming that the NODE_INSTALL basename is
+# 'node' and that sdcnode tarballs have a 'node' top-level dir.
+$(NODE_EXEC) $(NPM_EXEC) $(NODE_WAF_EXEC):
+	[[ $(shell basename $(NODE_INSTALL)) == "node" ]] \
+		|| (echo "Limitation: 'basename NODE_INSTALL' is not 'node'" && exit 1)
+	rm -rf $(NODE_INSTALL) \
+		$(BUILD)/prebuilt-node-* $(BUILD)/prebuilt-npm-*
+	mkdir -p $(shell dirname $(NODE_INSTALL))
+	if [[ $(shell echo $(NODE_PREBUILT_TARBALL) | cut -c 1-4) == "http" ]]; then \
+		echo "Downloading '$(NODE_PREBUILT_BASE)'."; \
+		curl -ksS --fail --connect-timeout 30 -o $(shell dirname $(NODE_INSTALL))/$(NODE_PREBUILT_BASE) $(NODE_PREBUILT_TARBALL); \
+		(cd $(shell dirname $(NODE_INSTALL)) && $(TAR) xf $(NODE_PREBUILT_BASE)); \
+	else \
+		(cd $(shell dirname $(NODE_INSTALL)) && $(TAR) xf $(NODE_PREBUILT_TARBALL)); \
+	fi
+	ln -s $(TOP)/$(NODE_INSTALL)/bin/node $(NODE_EXEC)
+	ln -s $(TOP)/$(NODE_INSTALL)/bin/npm $(NPM_EXEC)
diff --git a/tools/mk/Makefile.smf.defs b/tools/mk/Makefile.smf.defs
new file mode 100644
index 0000000..b988bbe
--- /dev/null
+++ b/tools/mk/Makefile.smf.defs
@@ -0,0 +1,40 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.smf.defs: common targets for SMF manifests
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+# This Makefile uses the following definitions:
+#
+#	SMF_MANIFESTS_IN	Source files for SMF manifests.  The following
+#				substitutions will be made on these files:
+#
+#		@@NODE@@	path to installed node
+#
+# It updates SMF_MANIFESTS with the set of files generated by SMF_MANIFESTS_IN.
+# It also updates the "check" target to check the XML syntax of all manifests,
+# generated or otherwise.
+#
+# To use this file, be sure to also include Makefile.smf.targ after defining
+# targets.
+#
+
+SED 		?= sed
+SMF_DTD		?= tools/service_bundle.dtd.1
+XMLLINT		?= xmllint --noout
+
+SMF_MANIFESTS	+= $(SMF_MANIFESTS_IN:%.in=%)
+CLEAN_FILES	+= $(SMF_MANIFESTS_IN:%.in=%)
diff --git a/tools/mk/Makefile.smf.targ b/tools/mk/Makefile.smf.targ
new file mode 100644
index 0000000..f78de96
--- /dev/null
+++ b/tools/mk/Makefile.smf.targ
@@ -0,0 +1,29 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.smf.targ: see Makefile.smf.defs.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+.PHONY: check-manifests
+check-manifests: $(SMF_MANIFESTS:%=%.smfchk)
+
+%.smfchk: %
+	$(XMLLINT) --path $(dir $(SMF_DTD)) --dtdvalid $(SMF_DTD) $^
+
+check:: check-manifests
+
+$(SMF_MANIFESTS): %: %.in
+	$(SED) -e 's#@@NODE@@#@@PREFIX@@/$(NODE_INSTALL)/bin/node#' $< > $@
diff --git a/tools/mk/Makefile.targ b/tools/mk/Makefile.targ
new file mode 100644
index 0000000..16b15aa
--- /dev/null
+++ b/tools/mk/Makefile.targ
@@ -0,0 +1,318 @@
+# -*- mode: makefile -*-
+#
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+#
+
+#
+# Copyright (c) 2014, Joyent, Inc.
+#
+
+#
+# Makefile.targ: common targets.
+#
+# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
+# into other repos as-is without requiring any modifications. If you find
+# yourself changing this file, you should instead update the original copy in
+# eng.git and then update your repo to use the new version.
+#
+# This Makefile defines several useful targets and rules. You can use it by
+# including it from a Makefile that specifies some of the variables below.
+#
+# Targets defined in this Makefile:
+#
+#	check	Checks JavaScript files for lint and style
+#		Checks bash scripts for syntax
+#		Checks SMF manifests for validity against the SMF DTD
+#
+#	clean	Removes built files
+#
+#	docs	Builds restdown documentation in docs/
+#
+#	prepush	Depends on "check" and "test"
+#
+#	test	Does nothing (you should override this)
+#
+#	xref	Generates cscope (source cross-reference index)
+#
+# For details on what these targets are supposed to do, see the Joyent
+# Engineering Guide.
+#
+# To make use of these targets, you'll need to set some of these variables. Any
+# variables left unset will simply not be used.
+#
+#	BASH_FILES	Bash scripts to check for syntax
+#			(paths relative to top-level Makefile)
+#
+#	CLEAN_FILES	Files to remove as part of the "clean" target.  Note
+#			that files generated by targets in this Makefile are
+#			automatically included in CLEAN_FILES.  These include
+#			restdown-generated HTML and JSON files.
+#
+#	DOC_FILES	Restdown (documentation source) files. These are
+#			assumed to be contained in "docs/", and must NOT
+#			contain the "docs/" prefix.
+#
+#	JSL_CONF_NODE	Specify JavaScriptLint configuration files
+#	JSL_CONF_WEB	(paths relative to top-level Makefile)
+#
+#			Node.js and Web configuration files are separate
+#			because you'll usually want different global variable
+#			configurations.  If no file is specified, none is given
+#			to jsl, which causes it to use a default configuration,
+#			which probably isn't what you want.
+#
+#	JSL_FILES_NODE	JavaScript files to check with Node config file.
+#	JSL_FILES_WEB	JavaScript files to check with Web config file.
+#
+#	JSON_FILES	JSON files to be validated
+#
+#	JSSTYLE_FILES	JavaScript files to be style-checked
+#
+# You can also override these variables:
+#
+#	BASH		Path to bash (default: "bash")
+#
+#	CSCOPE_DIRS	Directories to search for source files for the cscope
+#			index. (default: ".")
+#
+#	JSL		Path to JavaScriptLint (default: "jsl")
+#
+#	JSL_FLAGS_NODE	Additional flags to pass through to JSL
+#	JSL_FLAGS_WEB
+#	JSL_FLAGS
+#
+#	JSON		Path to json tool (default: "json")
+#
+#	JSSTYLE		Path to jsstyle (default: "jsstyle")
+#
+#	JSSTYLE_FLAGS	Additional flags to pass through to jsstyle
+#
+#	RESTDOWN_EXT	By default '.md' is required for DOC_FILES (see above).
+#			If you want to use, say, '.restdown' instead, then set
+#			'RESTDOWN_EXT=.restdown' in your Makefile.
+#
+
+#
+# Defaults for the various tools we use.
+#
+BASH		?= bash
+BASHSTYLE	?= tools/bashstyle
+CP		?= cp
+CSCOPE		?= cscope
+CSCOPE_DIRS	?= .
+JSL		?= jsl
+JSON		?= json
+JSSTYLE		?= jsstyle
+MKDIR		?= mkdir -p
+MV		?= mv
+RESTDOWN_FLAGS	?=
+RESTDOWN_EXT	?= .md
+RMTREE		?= rm -rf
+JSL_FLAGS  	?= --nologo --nosummary
+
+ifeq ($(shell uname -s),SunOS)
+	TAR	?= gtar
+else
+	TAR	?= tar
+endif
+
+
+#
+# Defaults for other fixed values.
+#
+BUILD		= build
+DISTCLEAN_FILES += $(BUILD)
+DOC_BUILD	= $(BUILD)/docs/public
+
+#
+# Configure JSL_FLAGS_{NODE,WEB} based on JSL_CONF_{NODE,WEB}.
+#
+ifneq ($(origin JSL_CONF_NODE), undefined)
+	JSL_FLAGS_NODE += --conf=$(JSL_CONF_NODE)
+endif
+
+ifneq ($(origin JSL_CONF_WEB), undefined)
+	JSL_FLAGS_WEB += --conf=$(JSL_CONF_WEB)
+endif
+
+#
+# Targets. For descriptions on what these are supposed to do, see the
+# Joyent Engineering Guide.
+#
+
+#
+# Instruct make to keep around temporary files. We have rules below that
+# automatically update git submodules as needed, but they employ a deps/*/.git
+# temporary file. Without this directive, make tries to remove these .git
+# directories after the build has completed.
+#
+.SECONDARY: $($(wildcard deps/*):%=%/.git)
+
+#
+# This rule enables other rules that use files from a git submodule to have
+# those files depend on deps/module/.git and have "make" automatically check
+# out the submodule as needed.
+#
+deps/%/.git:
+	git submodule update --init deps/$*
+
+#
+# These recipes make heavy use of dynamically-created phony targets. The parent
+# Makefile defines a list of input files like BASH_FILES. We then say that each
+# of these files depends on a fake target called filename.bashchk, and then we
+# define a pattern rule for those targets that runs bash in check-syntax-only
+# mode. This mechanism has the nice properties that if you specify zero files,
+# the rule becomes a noop (unlike a single rule to check all bash files, which
+# would invoke bash with zero files), and you can check individual files from
+# the command line with "make filename.bashchk".
+#
+.PHONY: check-bash
+check-bash: $(BASH_FILES:%=%.bashchk) $(BASH_FILES:%=%.bashstyle)
+
+%.bashchk: %
+	$(BASH) -n $^
+
+%.bashstyle: %
+	$(BASHSTYLE) $^
+
+.PHONY: check-json
+check-json: $(JSON_FILES:%=%.jsonchk)
+
+%.jsonchk: %
+	$(JSON) --validate -f $^
+
+#
+# The above approach can be slow when there are many files to check because it
+# requires that "make" invoke the check tool once for each file, rather than
+# passing in several files at once.  For the JavaScript check targets, we define
+# a variable for the target itself *only if* the list of input files is
+# non-empty.  This avoids invoking the tool if there are no files to check.
+#
+JSL_NODE_TARGET = $(if $(JSL_FILES_NODE), check-jsl-node)
+.PHONY: check-jsl-node
+check-jsl-node: $(JSL_EXEC)
+	$(JSL) $(JSL_FLAGS) $(JSL_FLAGS_NODE) $(JSL_FILES_NODE)
+
+JSL_WEB_TARGET = $(if $(JSL_FILES_WEB), check-jsl-web)
+.PHONY: check-jsl-web
+check-jsl-web: $(JSL_EXEC)
+	$(JSL) $(JSL_FLAGS) $(JSL_FLAGS_WEB) $(JSL_FILES_WEB)
+
+.PHONY: check-jsl
+check-jsl: $(JSL_NODE_TARGET) $(JSL_WEB_TARGET)
+
+JSSTYLE_TARGET = $(if $(JSSTYLE_FILES), check-jsstyle)
+.PHONY: check-jsstyle
+check-jsstyle:  $(JSSTYLE_EXEC)
+	$(JSSTYLE) $(JSSTYLE_FLAGS) $(JSSTYLE_FILES)
+
+.PHONY: check
+check:: check-jsl check-json $(JSSTYLE_TARGET) check-bash
+	@echo check ok
+
+.PHONY: clean
+clean::
+	-$(RMTREE) $(CLEAN_FILES)
+
+.PHONY: distclean
+distclean:: clean
+	-$(RMTREE) $(DISTCLEAN_FILES)
+
+CSCOPE_FILES = cscope.in.out cscope.out cscope.po.out
+CLEAN_FILES += $(CSCOPE_FILES)
+
+.PHONY: xref
+xref: cscope.files
+	$(CSCOPE) -bqR
+
+.PHONY: cscope.files
+cscope.files:
+	find $(CSCOPE_DIRS) -name '*.c' -o -name '*.h' -o -name '*.cc' \
+	    -o -name '*.js' -o -name '*.s' -o -name '*.cpp' > $@
+
+#
+# The "docs" target is complicated because we do several things here:
+#
+#    (1) Use restdown to build HTML and JSON files from each of DOC_FILES.
+#
+#    (2) Copy these files into $(DOC_BUILD) (build/docs/public), which
+#        functions as a complete copy of the documentation that could be
+#        mirrored or served over HTTP.
+#
+#    (3) Then copy any directories and media from docs/media into
+#        $(DOC_BUILD)/media. This allows projects to include their own media,
+#        including files that will override same-named files provided by
+#        restdown.
+#
+# Step (3) is the surprisingly complex part: in order to do this, we need to
+# identify the subdirectories in docs/media, recreate them in
+# $(DOC_BUILD)/media, then do the same with the files.
+#
+DOC_MEDIA_DIRS := $(shell find docs/media -type d 2>/dev/null | grep -v "^docs/media$$")
+DOC_MEDIA_DIRS := $(DOC_MEDIA_DIRS:docs/media/%=%)
+DOC_MEDIA_DIRS_BUILD := $(DOC_MEDIA_DIRS:%=$(DOC_BUILD)/media/%)
+
+DOC_MEDIA_FILES := $(shell find docs/media -type f 2>/dev/null)
+DOC_MEDIA_FILES := $(DOC_MEDIA_FILES:docs/media/%=%)
+DOC_MEDIA_FILES_BUILD := $(DOC_MEDIA_FILES:%=$(DOC_BUILD)/media/%)
+
+#
+# Like the other targets, "docs" just depends on the final files we want to
+# create in $(DOC_BUILD), leveraging other targets and recipes to define how
+# to get there.
+#
+.PHONY: docs
+docs:							\
+	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.html)		\
+	$(DOC_FILES:%$(RESTDOWN_EXT)=$(DOC_BUILD)/%.json)		\
+	$(DOC_MEDIA_FILES_BUILD)
+
+#
+# We keep the intermediate files so that the next build can see whether the
+# files in DOC_BUILD are up to date.
+#
+.PRECIOUS:					\
+	$(DOC_FILES:%$(RESTDOWN_EXT)=docs/%.html)		\
+	$(DOC_FILES:%$(RESTDOWN_EXT)=docs/%json)
+
+#
+# We do clean those intermediate files, as well as all of DOC_BUILD.
+#
+CLEAN_FILES +=					\
+	$(DOC_BUILD)				\
+	$(DOC_FILES:%$(RESTDOWN_EXT)=docs/%.html)		\
+	$(DOC_FILES:%$(RESTDOWN_EXT)=docs/%.json)
+
+#
+# Before installing the files, we must make sure the directories exist. The |
+# syntax tells make that the dependency need only exist, not be up to date.
+# Otherwise, it might try to rebuild spuriously because the directory itself
+# appears out of date.
+#
+$(DOC_MEDIA_FILES_BUILD): | $(DOC_MEDIA_DIRS_BUILD)
+
+$(DOC_BUILD)/%: docs/% | $(DOC_BUILD)
+	$(CP) $< $@
+
+docs/%.json docs/%.html: docs/%$(RESTDOWN_EXT) | $(DOC_BUILD) $(RESTDOWN_EXEC) \
+    $(EXTRA_DOC_DEPS)
+	$(RESTDOWN) $(RESTDOWN_FLAGS) -m $(DOC_BUILD) $<
+
+$(DOC_BUILD):
+	$(MKDIR) $@
+
+$(DOC_MEDIA_DIRS_BUILD):
+	$(MKDIR) $@
+
+#
+# The default "test" target does nothing. This should usually be overridden by
+# the parent Makefile. It's included here so we can define "prepush" without
+# requiring the repo to define "test".
+#
+.PHONY: test
+test:
+
+.PHONY: prepush
+prepush: check test
-- 
2.21.0

