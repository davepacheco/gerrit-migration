commit fbac869afb8babf5713dc552c59ea67393b29774 (refs/changes/41/3641/1)
Author: Pedro Palazon Candel <pedro@joyent.com>
Date:   2018-03-15T16:34:49+01:00 (1 year, 7 months ago)
    
    TOOLS-1387 sdcadm platform install should fail early if there's not enough free space on the USB

diff --git a/lib/platform.js b/lib/platform.js
index dbbb9a4..336b392 100644
--- a/lib/platform.js
+++ b/lib/platform.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright 2016 Joyent, Inc.
+ * Copyright 2018 Joyent, Inc.
  */
 
 /*
@@ -582,7 +582,7 @@ Platform.prototype.install = function install(opts, callback) {
         });
     }
 
-    vasync.pipeline({funcs: [
+    vasync.pipeline({arg: {}, funcs: [
         function getChannel(_, next) {
             self.sdcadm.getDefaultChannel(function (err, channel) {
                 // Will not fail the whole operation due to channel not found
@@ -707,6 +707,58 @@ Platform.prototype.install = function install(opts, callback) {
                 downloadPlatformImage(next);
             }
         },
+        // TOOLS-1387: Check PI size vs available disk space before we try
+        // to run the installer in order to fail early when possible.
+        function checkPIUncompressedSize(ctx, next) {
+            common.execFilePlus({
+                argv: ['/usr/bin/gzip', '-lq', filepath],
+                log: self.log
+            }, function gzipCb(err, stdout) {
+                if (err) {
+                    next(err);
+                    return;
+                }
+                stdout = stdout.trim().split('\n');
+                stdout = stdout[0].split(/\s+/);
+                var uncompressed = stdout[1];
+                if (!uncompressed) {
+                    next(new Error('Unexpected gzip output'));
+                    return;
+                }
+                ctx.platformImageSize = (uncompressed / 1024);
+                next();
+            });
+        },
+        function mountUsbKey(_, next) {
+            common.mountUsbKey(self.log, next);
+        },
+        function checkAvailableDiskSpace(ctx, next) {
+            common.execFilePlus({
+                argv: ['/usr/bin/df', '-k', '/mnt/usbkey/os'],
+                log: self.log
+            }, function dfCb(err, stdout) {
+                if (err) {
+                    next(err);
+                    return;
+                }
+                stdout = stdout.trim().split('\n');
+                stdout = stdout[1].split(/\s+/);
+                var avail = stdout[3];
+                if (!avail) {
+                    next(new Error('Unexpected df output'));
+                    return;
+                }
+                if (avail < ctx.platformImageSize) {
+                    self.progress('Available disk space in USB key is %d ' +
+                            'MiB', (avail / 1024).toFixed(0));
+                    self.progress('Required disk space for PI setup is %d ' +
+                            'MiB', (ctx.platformImageSize / 1024).toFixed(0));
+                    next(new Error('Not enough disk space available'));
+                    return;
+                }
+                next();
+            });
+        },
         function execInstaller(_, next) {
             executeInstallerFile(next);
         },
