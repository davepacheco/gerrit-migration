From 28490d007d6b591757bf177d69b70efd5657acb4 Mon Sep 17 00:00:00 2001
From: Marsell Kukuljevic <marsell@joyent.com>
Date: Fri, 3 Feb 2017 22:35:34 +0800
Subject: [PATCH] CNAPI-692: cnapi is profoundly broken by a prior merge

---
 lib/designation.js           | 6 +++---
 lib/endpoints/allocations.js | 6 +++---
 lib/endpoints/index.js       | 4 ++--
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/lib/designation.js b/lib/designation.js
index 0d0d7c1..8ad4977 100644
--- a/lib/designation.js
+++ b/lib/designation.js
@@ -45,7 +45,7 @@ Designation.init = function init(app) {
     }
 
     var opts = {
-        log: config.log
+        log: app.log
     };
 
     if (config.useVmapi) {
@@ -81,7 +81,7 @@ Designation.init = function init(app) {
     // unreserved_* attributes. When dapi does support disabling the above per
     // request, this second instance should be removed
     Designation.allocCapacity = new dapiAlloc({
-        log: config.log
+        log: app.log
     }, config.allocationDescription, Designation.defaults);
 
     Designation.filterHeadnode = Designation.defaults.filter_headnode;
@@ -164,4 +164,4 @@ function getDefaults(changeDefaults) {
     return defaults;
 }
 
-exports.Designation = Designation;
+module.exports = Designation;
diff --git a/lib/endpoints/allocations.js b/lib/endpoints/allocations.js
index 9ab65bf..695daac 100644
--- a/lib/endpoints/allocations.js
+++ b/lib/endpoints/allocations.js
@@ -96,14 +96,14 @@ Allocations.allocate = function handlerAllocationsAllocate(req, res, next) {
     var vm      = params.vm;
     var tags    = params.nic_tags;
 
-    err = allocator.validateImage(img);
+    err = Designation.validations.validateImage(img);
     if (err) {
         invalid('image', err, res, next);
         return;
     }
 
     if (pkg) {
-        err = allocator.validatePackage(pkg);
+        err = Designation.validations.validatePackage(pkg);
         if (err) {
             invalid('package', err, res, next);
             return;
@@ -111,7 +111,7 @@ Allocations.allocate = function handlerAllocationsAllocate(req, res, next) {
     }
 
     var requirements = params.image.requirements;
-    err = allocator.validateVmPayload(vm, requirements);
+    err = Designation.validations.validateVmPayload(vm, requirements);
     if (err) {
         invalid('vm', err, res, next);
         return;
diff --git a/lib/endpoints/index.js b/lib/endpoints/index.js
index 5cf1f09..7628e57 100644
--- a/lib/endpoints/index.js
+++ b/lib/endpoints/index.js
@@ -19,7 +19,7 @@ var assert = require('assert-plus');
 var ModelImage = require('../models/image');
 var ModelServer = require('../models/server');
 
-var allocator = require('./allocator');
+var allocations = require('./allocations');
 var boot_params = require('./boot_params');
 var images = require('./images');
 var nics = require('./nics');
@@ -315,7 +315,7 @@ function attachTo(http, app) {
     waitlist.attachTo(http, app);
     vms.attachTo(http, app);
     tasks.attachTo(http, app);
-    allocator.attachTo(http, app);
+    allocations.attachTo(http, app);
     boot_params.attachTo(http, app);
     ur.attachTo(http, app);
     zfs.attachTo(http, app);
-- 
2.21.0

