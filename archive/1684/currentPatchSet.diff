commit ed0ce357bc6a591b1c98c5aa90cce510f8161f01 (refs/changes/84/1684/2)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-03-17T20:59:31+00:00 (2 years, 7 months ago)
    
    CNS-197 CNS needs to downcase names before lookup
    Reviewed by: Richard Kiene <richard.kiene@joyent.com>

diff --git a/lib/dns-server.js b/lib/dns-server.js
index 03510b1..72e790d 100644
--- a/lib/dns-server.js
+++ b/lib/dns-server.js
@@ -206,7 +206,7 @@ DNSServer.prototype.handleQuery = function (q, cb) {
 
 	q.log.trace('begin query');
 
-	var name = q.name();
+	var name = q.name().toLowerCase();
 	var type = q.type();
 	var addr = q.src.address;
 	var self = this;
@@ -427,7 +427,7 @@ DNSServer.prototype.addAdditionals = function (recs, z, q, cb) {
  */
 DNSServer.prototype.findZone = function (q, cb) {
 	assert.object(q, 'query');
-	var name = q.name();
+	var name = q.name().toLowerCase();
 	assert.string(name, 'name');
 	assert.func(cb, 'callback');
 
@@ -939,7 +939,7 @@ DNSServer.prototype.getPeerSerials = function (r, cb) {
  * Handles meta-queries for server status information.
  */
 DNSServer.prototype.handleMeta = function (q, meta, cb) {
-	var name = q.name();
+	var name = q.name().toLowerCase();
 	var rec;
 
 	if (meta === 'version') {
diff --git a/test/unit/dns-server.test.js b/test/unit/dns-server.test.js
index fa5c650..931f424 100644
--- a/test/unit/dns-server.test.js
+++ b/test/unit/dns-server.test.js
@@ -311,6 +311,37 @@ test('serves cmon CNAME records', function (t) {
 	req.send();
 });
 
+test('is not case sensitive', function (t) {
+	var q = dns.Question({
+		name: 'AbC123.InSt.DeF432.fOo',
+		type: 'A'
+	});
+	var req = dns.Request({
+		question: q,
+		server: { address: '127.0.0.1', port: 9953, type: 'udp' },
+		timeout: 1000
+	});
+	req.once('timeout', function () {
+		t.fail('timeout');
+		t.end();
+	});
+	req.on('message', function (err, answer) {
+		t.error(err);
+		t.equal(answer.answer.length, 1);
+		t.equal(answer.answer[0].ttl, 30);
+		t.strictEqual(answer.answer[0].address, '1.2.3.4');
+		t.equal(answer.authority.length, 1);
+		t.equal(answer.authority[0].type,
+		    dns.consts.NAME_TO_QTYPE['NS']);
+		t.strictEqual(answer.authority[0].name, 'foo');
+		t.strictEqual(answer.authority[0].data, 'foobar');
+	});
+	req.once('end', function () {
+		t.end();
+	});
+	req.send();
+});
+
 test('generate some services', function (t) {
 	++currentSerial;
 
