From 837dad5b79b088c48815e7c0d61d04c80cde5811 Mon Sep 17 00:00:00 2001
From: Trent Mick <trentm@gmail.com>
Date: Wed, 14 Dec 2016 16:00:44 -0800
Subject: [PATCH] IMGAPI-606 imgapi-cli commit 2aef5b0 broke feature that
 'identity' can be a *path to a key file*

---
 CHANGES.md    |  7 +++++++
 lib/imgapi.js | 38 ++++++++++++++++++++++++++++++++++++--
 package.json  |  3 ++-
 3 files changed, 45 insertions(+), 3 deletions(-)

diff --git a/CHANGES.md b/CHANGES.md
index 4ea0b31..c584e17 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -12,6 +12,13 @@
 
 ## not yet released
 
+## 10.0.4
+
+- IMGAPI-606 Restore support to `imgapi.cliSigner` that the given keyId is
+  a *path to a private SSH key*. That feature had been dropped in v9.0.0
+  which meant sdc-imgapi-cli.git (which exposed the feature) could not
+  update.
+
 ## 10.0.3
 
 - IMGAPI-599 IMGAPI client broken since 10.0.0.
diff --git a/lib/imgapi.js b/lib/imgapi.js
index eef28e7..8d362a1 100644
--- a/lib/imgapi.js
+++ b/lib/imgapi.js
@@ -69,6 +69,7 @@ var restifyClients = require('restify-clients');
 var mod_url = require('url');
 var backoff = require('backoff');
 var auth = require('smartdc-auth');
+var sshpk = require('sshpk');
 
 
 // ---- globals
@@ -2604,7 +2605,9 @@ module.exports.createClient = function createClient(options) {
     return new IMGAPI(options);
 };
 
-module.exports.cliSigner = function (opts, cb) {
+module.exports.cliSigner = function (opts_) {
+    var opts = objCopy(opts_);
+
     /* API backwards compatibility */
     if (opts.keyIds !== undefined) {
         if (!Array.isArray(opts.keyIds) || opts.keyIds.length !== 1)
@@ -2613,7 +2616,38 @@ module.exports.cliSigner = function (opts, cb) {
         opts.keyId = opts.keyIds[0];
         delete (opts.keyIds);
     }
-    return (auth.cliSigner(opts, cb));
+
+    /*
+     * Support for 'keyId' being a path to a private key, which was otherwise
+     * dropped in node-sdc-clients@9.0.0.
+     *
+     * This is somewhat of a hack. This client's usage of smartdc-auth should
+     * move away from its "legacy" cliSigner, privateKeySigner, etc.
+     */
+    var key;
+    try {
+        sshpk.parseFingerprint(opts.keyId);
+    } catch (parseErr) {
+        try {
+            // Until smartdc-auth#11, this needs to be a string.
+            key = fs.readFileSync(opts.keyId, {encoding: 'ascii'});
+        } catch (readErr) {
+            /*
+             * Ignore this error, a rely on later code mentioning that the
+             * given `keyId` is not a valid fingerprint.
+             */
+        }
+    }
+
+    var signer;
+    if (key) {
+        delete (opts.keyId);
+        opts.key = key;
+        signer = auth.privateKeySigner(opts);
+    } else {
+        signer = auth.cliSigner(opts);
+    }
+    return (signer);
 };
 
 // A useful utility that must be used on a stream passed into the
diff --git a/package.json b/package.json
index 2e118ae..afa8a26 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdc-clients",
   "description": "node.js client libraries for Triton core REST APIs.",
-  "version": "10.0.3",
+  "version": "10.0.4",
   "homepage": "http://www.joyent.com",
   "repository": {
     "type": "git",
@@ -21,6 +21,7 @@
     "restify-errors": "^3.0.0",
     "vasync": "^1.6.2",
     "verror": "^1.6.0",
+    "sshpk": "^1.10.1",
     "smartdc-auth": "2.5.2"
   },
   "devDependencies": {
-- 
2.21.0

