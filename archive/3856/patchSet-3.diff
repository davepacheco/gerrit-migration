From d55a65500aace737ab1517865f28e51c03f702fd Mon Sep 17 00:00:00 2001
From: Cody Peter Mello <cody.mello@joyent.com>
Date: Wed, 28 Mar 2018 19:16:13 +0000
Subject: [PATCH] NAPI-352 Want unit tests for fabrics

---
 test/integration/fabrics-invalid.test.js |   4 +-
 test/integration/helpers.js              |   8 +-
 test/lib/portolan.js                     |   4 +
 test/lib/server.js                       |   5 +-
 test/unit/fabrics.test.js                | 122 +++++++++++++++++++++++
 5 files changed, 137 insertions(+), 6 deletions(-)
 create mode 100644 test/unit/fabrics.test.js

diff --git a/test/integration/fabrics-invalid.test.js b/test/integration/fabrics-invalid.test.js
index 7f4c764..d1d9fc7 100644
--- a/test/integration/fabrics-invalid.test.js
+++ b/test/integration/fabrics-invalid.test.js
@@ -35,7 +35,7 @@ var extend = mod_jsprim.mergeObjects;
 // 65 character string:
 var LONG_STR =
     'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx';
-var NAPI = h.createNAPIclient();
+var NAPI;
 var OWNERS = [
     mod_uuid.v4(),
     mod_uuid.v4()
@@ -68,6 +68,7 @@ var VLANS = [
 
 
 test('setup', function (tt) {
+    NAPI = h.createNAPIclient();
 
     tt.test('create vlan 0', function (t) {
         mod_vlan.createAndGet(t, {
@@ -75,7 +76,6 @@ test('setup', function (tt) {
             exp: VLANS[0]
         });
     });
-
 });
 
 
diff --git a/test/integration/helpers.js b/test/integration/helpers.js
index eadfc04..e995061 100644
--- a/test/integration/helpers.js
+++ b/test/integration/helpers.js
@@ -85,11 +85,13 @@ function timestampsAdvance(t, desc, oldTs, newTs) {
  * specified by them.  Otherwise, use the local zone's NAPI.
  */
 function createNAPIclient(t) {
-    var client = common.createClient(config.napi.host, t);
-    if (!mod_client.initialized()) {
-        mod_client.set(client);
+    if (mod_client.initialized()) {
+        return mod_client.get();
     }
 
+    var client = common.createClient(config.napi.host, t);
+    mod_client.set(client);
+
     return client;
 }
 
diff --git a/test/lib/portolan.js b/test/lib/portolan.js
index 1d4a925..809f494 100644
--- a/test/lib/portolan.js
+++ b/test/lib/portolan.js
@@ -346,3 +346,7 @@ module.exports = {
     overlayMapping: overlayMapping,
     underlayMapping: underlayMapping
 };
+
+Object.defineProperty(module.exports, 'moray_client', {
+    set: function (val) { MORAY_CLIENT = val; }
+});
diff --git a/test/lib/server.js b/test/lib/server.js
index d05f05c..04d856a 100644
--- a/test/lib/server.js
+++ b/test/lib/server.js
@@ -16,6 +16,7 @@
 
 var common = require('./common');
 var config = require('./config');
+var extend = require('jsprim').mergeObjects;
 var mod_log = require('./log');
 var moray_sandbox = require('moray-sandbox');
 var mod_client = require('./client');
@@ -144,6 +145,8 @@ function createTestServer(opts, callback) {
         component: 'test-server'
     });
 
+    var napi_config = extend(config.server, opts.config || {});
+
     function startWithMoray(err, moray) {
         if (err) {
             callback(err);
@@ -151,7 +154,7 @@ function createTestServer(opts, callback) {
         }
 
         var server = new NAPI({
-            config: config.server,
+            config: napi_config,
             log: log_child
         });
         SERVER = server;
diff --git a/test/unit/fabrics.test.js b/test/unit/fabrics.test.js
new file mode 100644
index 0000000..547f867
--- /dev/null
+++ b/test/unit/fabrics.test.js
@@ -0,0 +1,122 @@
+/*
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+/*
+ * Copyright 2016, Joyent, Inc.
+ */
+
+/*
+ * Fabric unit tests
+ */
+
+'use strict';
+
+var config = require('../lib/config');
+var h = require('./helpers');
+var mod_uuid = require('node-uuid');
+var mod_nic_tag = require('../lib/nic-tag');
+var mod_portolan = require('../lib/portolan');
+var mod_portolan_moray = require('portolan-moray');
+var mod_server = require('../lib/server');
+var test = require('tape');
+
+// --- Globals
+
+
+
+var MORAY;
+var NAPI;
+var UNDERLAY_NIC_TAG = config.server.overlay.underlayNicTag;
+
+
+// --- Internals
+
+
+function runFabricTest(file) {
+    var desc = '"' + file + '"';
+    var moray_clone;
+
+    test('Set up for ' + desc, function (t) {
+        moray_clone = MORAY.clone();
+        t.ok(moray_clone, 'Cloned Moray client');
+        mod_portolan.moray_client = moray_clone;
+        t.end();
+    });
+
+    require('../integration/' + file);
+
+    test('Tear down for ' + desc, function (t) {
+        moray_clone.close();
+        t.end();
+    });
+}
+
+
+
+// --- Setup
+
+
+test('Initial setup', function (t) {
+    h.reset();
+
+    t.test('create client and server', function (t2) {
+        h.createClientAndServer({
+            config: {
+                initialNetworks: {
+                    'admin': {
+                        'vlan': 0,
+                        'uuid': mod_uuid.v4(),
+                        'network': '10.0.0.0',
+                        'netmask': '255.255.255.0',
+                        'owner_uuids': [ config.server.ufdsAdminUuid ],
+                        'gateway': '10.0.0.1',
+                        'startIP': '10.0.0.38',
+                        'endIP': '10.0.0.253',
+                        'resolvers': [ '8.8.8.8', '8.8.4.4' ]
+                    }
+                }
+            }
+        }, function (err, res, moray) {
+            NAPI = res;
+            MORAY = moray;
+            t2.ifError(err, 'server creation');
+            t2.ok(NAPI, 'client');
+            t2.ok(MORAY, 'moray');
+            t2.end();
+        });
+    });
+
+    t.test('initialize portolan consumer', function (t2) {
+        mod_portolan_moray.initConsumer({}, t2.end.bind(t2));
+    });
+
+    t.test('create nic tag', function (t2) {
+        mod_nic_tag.create(t2, {
+            name: 'nic_tag'
+        });
+    });
+
+    t.test('create underlay nic tag', function (t2) {
+        mod_nic_tag.create(t2, {
+            name: UNDERLAY_NIC_TAG
+        });
+    });
+});
+
+
+
+// --- Tests
+
+
+runFabricTest('fabrics.test.js');
+runFabricTest('fabrics-invalid.test.js');
+
+
+
+// --- Teardown
+
+
+test('Stop server', mod_server.close);
-- 
2.21.0

