commit dc7f08045a391c17f52ace1a58232ff0331714de
Author: Russell Brown <russell.brown@joyent.com>
Date:   2019-04-03T16:07:59+01:00 (6 months ago)
    
    MANTA-4186 Beef up the muskie test README a little
    Reviewed by: Jon Anderson <jon.anderson@joyent.com>
    Approved by: Jon Anderson <jon.anderson@joyent.com>

diff --git a/README.md b/README.md
index 58f95b8..aa989b7 100644
--- a/README.md
+++ b/README.md
@@ -26,31 +26,54 @@ Developer notes are in this README.
 
 ## Testing
 
-muskie comes with its own set of unit tests.  You typically test muskie by
-starting up a local instance of the server that's configured to point to the
-rest of your existing SDC/Manta deployment.  This setup depends on several
-prerequisites in your development environment:
+muskie comes with its own set of unit tests.  You typically test
+muskie by starting up a local instance of the server that's configured
+to point to the rest of your existing SDC/Manta deployment.  This
+setup depends on several prerequisites in your development
+environment, (not the least of which IS a development environment, see
+[here](https://mo.joyent.com/docs/engdoc/master/engnotes/buildzoneconfig/manta-triton.html)
+to set up a dev zone (NOTE: internal documentation))
 
 1. You should set up a **non-operator** SDC account that will also have access
    to Manta.  The manta-deployment zone includes a tool called add-dev-user that
    can be used to do this.  You can find it at
-   /opt/smartdc/manta-deployment/tools/add-dev-user.
+   /opt/smartdc/manta-deployment/tools/add-dev-user. `add-dev-user` must be run
+   on a zone with `sdc-ldap` available. Copy the script to your CoaL/lab
+   headnode and run it from there. The second argument to `add-dev-user` is the
+   quoted string of the public key from step 2 below. For example:
+
+        add-dev-user muskie_test_user "ssh-rsa AAAAB3NzaC1..."
+
 2. The ssh key that you use to authenticate as this account should be
-   passwordless.  It must also be stored locally, with the private key in
-   file `$HOME/.ssh/id_rsa`.  You can override this path by setting
-   `MUSKIETEST_REGULAR_KEYFILE` in the environment to the location of the
-   private key.  The public key path will be generated by appending `.pub` to
-   the private key path; e.g., `$HOME/.ssh/id_rsa.pub`.
+   passwordless.  It must also be stored locally to the muskie dev zone that is
+   running the tests, with the private key in file `$HOME/.ssh/id_rsa`.  You can
+   override this path by setting `MUSKIETEST_REGULAR_KEYFILE` in the environment
+   to the location of the private key.  The public key path will be generated by
+   appending `.pub` to the private key path; e.g., `$HOME/.ssh/id_rsa.pub`.
 3. Some tests also require an operator account to test with.  By default, the
    tests will use the "poseidon" account, but you must provide a valid private
-   key for the poseidon account at `$HOME/.ssh/id_rsa_poseidon`.
-   Optionally, you can provide a separate operator SDC account by setting
-   `MUSKIETEST_OPERATOR_USER` and the location of its private key at
+   key for the poseidon account at `$HOME/.ssh/id_rsa_poseidon`. One way to do
+   this is to copy the private key from a deployed CoaL/lab muskie zone in your
+   set up. You can find a muskie zone by running `vmadm list | grep webapi` on
+   your headnode. Optionally, you can provide a separate operator SDC account by
+   setting `MUSKIETEST_OPERATOR_USER` and the location of its private key at
    `MUSKIETEST_OPERATOR_KEYFILE` in your environment.
 4. Your SDC and Manta environment variables should point at the SDC and Manta
-   instances that you're testing with.  The SDC and Manta variables should refer
-   to the same user account, and they should both refer to the ssh key stored in
-   $HOME/.ssh/id\_rsa.pub mentioned above.
+   instances that you're testing with. If you're running tests against a muskie
+   devzone then `localhost:8080` is probably the `MANTA_URL`. If you're running
+   against a deployed CoaL/lab Muskie, running
+
+        $ vmadm get <webapi_zone_uuid> | json -a nics | json -a nic_tag ip
+
+    will get you the `MANTA_URL`. Either way, running
+
+        $ vmadm lookup -j alias=cloudapi0 | json -a nics | json -a ip
+
+    will get you the `SDC_URL`. NOTE/GOTCHA: you must remember to have
+    set up cloudapi on your CoaL/lab with `sdcadm post-setup
+    cloudapi`. The SDC and Manta variables should refer to the same
+    user account, and they should both refer to the ssh key stored in
+    `$HOME/.ssh/id\_rsa.pub` mentioned above.
 5. Before running the tests, you must set the `MUSKIE_SALT`, `MUSKIE_KEY`, and
    `MUSKIE_IV` environment variables to the same values being used for the muskie
    instances in your existing Manta installation.  You can find these values in
@@ -111,7 +134,7 @@ On a test system called "emy-10.joyent.us", these may look like this:
     SDC_KEY_ID=43:7b:f1:98:41:9c:37:90:18:b9:07:92:07:ac:a9:eb
     SDC_TESTING=1
 
-To run the tests against changes in a repository:
+To run the tests against changes in this repository:
 
 1. Run `make` to build muskie.  This will pull down the correct Node executable
    for your platform and your version of muskie and then `npm install` dependent
@@ -129,6 +152,8 @@ To run the tests against changes in a repository:
 
 4. Run `make test`.
 
+## Deploying a Muskie Image
+
 If you're changing anything about the way muskie is deployed, configured, or
 started, you should definitely test creating a muskie image and deploying that
 into your Manta.  This is always a good idea anyway.  To run tests against an
@@ -140,6 +165,13 @@ the cloudapi0 zone.  You can find both of these IPs with the commands:
     $ vmadm get <webapi_zone_uuid> | json -a nics | json -a nic_tag ip
     $ vmadm lookup -j alias=cloudapi0 | json -a nics | json -a ip
 
+There are various documents about deploying/updating a muskie image in
+Manta. If you're doing this for the first time, and not sure what to
+do, I had success with `make buildimage` which leaves you with an
+image and manifest in `./bits`. You can then import this image and
+follow this guide to upgrading manta components:
+https://github.com/joyent/manta/blob/master/docs/operator-guide.md#upgrading-manta-components
+
 If you run into any problems when following this procedure against the latest
 version of #master, please let us know.  There are are a couple of things to
 check first before reporting problems:
