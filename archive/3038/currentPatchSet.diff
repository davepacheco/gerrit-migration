commit a93708eab1f608d77175e1655b648e9b905fbfe5 (refs/changes/38/3038/1)
Author: Jonathan Perkin <jperkin@joyent.com>
Date:   2017-12-05T15:52:16+00:00 (1 year, 10 months ago)
    
    OS-6488 ctfconvert should handle empty dies

diff --git a/usr/src/lib/libctf/common/ctf_convert.c b/usr/src/lib/libctf/common/ctf_convert.c
index 1a433d17db..47ba9c9347 100644
--- a/usr/src/lib/libctf/common/ctf_convert.c
+++ b/usr/src/lib/libctf/common/ctf_convert.c
@@ -142,7 +142,7 @@ ctf_elfconvert(int fd, Elf *elf, const char *label, uint_t nthrs, uint_t flags,
 		ctf_conv_status_t cs;
 
 		fp = NULL;
-		cs = ctf_converters[i](fd, elf, nthrs, errp, &fp, errbuf,
+		cs = ctf_converters[i](fd, elf, nthrs, flags, errp, &fp, errbuf,
 		    errlen);
 		if (cs == CTF_CONV_SUCCESS) {
 			notsup = B_FALSE;
diff --git a/usr/src/lib/libctf/common/ctf_dwarf.c b/usr/src/lib/libctf/common/ctf_dwarf.c
index 811a55bc64..0413bd7d20 100644
--- a/usr/src/lib/libctf/common/ctf_dwarf.c
+++ b/usr/src/lib/libctf/common/ctf_dwarf.c
@@ -271,6 +271,7 @@ typedef struct ctf_die {
 	uint_t		cd_mach;	/* machine type */
 	ctf_id_t	cd_voidtid;	/* void pointer */
 	ctf_id_t	cd_longtid;	/* id for a 'long' */
+	uint_t		cd_flags;	/* ctfconvert flags */
 } ctf_die_t;
 
 static int ctf_dwarf_offset(ctf_die_t *, Dwarf_Die, Dwarf_Off *);
@@ -2700,8 +2701,8 @@ ctf_dwarf_count_dies(Dwarf_Debug dw, Dwarf_Error *derr, int *ndies,
  * No merge needed and only a single Dwarf_Debug as well.
  */
 static int
-ctf_dwarf_init_die(int fd, Elf *elf, ctf_die_t *cdp, int ndie, char *errbuf,
-    size_t errlen)
+ctf_dwarf_init_die(int fd, Elf *elf, ctf_die_t *cdp, int ndie, uint_t flags,
+    char *errbuf, size_t errlen)
 {
 	int ret;
 	Dwarf_Unsigned hdrlen, abboff, nexthdr;
@@ -2731,6 +2732,7 @@ ctf_dwarf_init_die(int fd, Elf *elf, ctf_die_t *cdp, int ndie, char *errbuf,
 		cdp->cd_elf = elf;
 		cdp->cd_maxoff = nexthdr - 1;
 		cdp->cd_ctfp = ctf_fdcreate(fd, &ret);
+		cdp->cd_flags = flags;
 		if (cdp->cd_ctfp == NULL) {
 			ctf_free(cdp, sizeof (ctf_die_t));
 			return (ret);
@@ -2768,7 +2770,8 @@ ctf_dwarf_init_die(int fd, Elf *elf, ctf_die_t *cdp, int ndie, char *errbuf,
 			ctf_free(cdp, sizeof (ctf_die_t));
 			return (ret);
 		}
-		if (child == NULL) {
+		if (child == NULL &&
+		    (!(cdp->cd_flags & CTF_CONVERT_F_IGNNONC))) {
 			(void) snprintf(errbuf, errlen,
 			    "file does not contain DWARF data\n");
 			avl_destroy(&cdp->cd_map);
@@ -2799,8 +2802,8 @@ ctf_dwarf_init_die(int fd, Elf *elf, ctf_die_t *cdp, int ndie, char *errbuf,
 
 
 ctf_conv_status_t
-ctf_dwarf_convert(int fd, Elf *elf, uint_t nthrs, int *errp, ctf_file_t **fpp,
-    char *errmsg, size_t errlen)
+ctf_dwarf_convert(int fd, Elf *elf, uint_t nthrs, uint_t flags, int *errp,
+    ctf_file_t **fpp, char *errmsg, size_t errlen)
 {
 	int err, ret, ndies, i;
 	Dwarf_Debug dw;
@@ -2861,7 +2864,8 @@ ctf_dwarf_convert(int fd, Elf *elf, uint_t nthrs, int *errp, ctf_file_t **fpp,
 			return (CTF_CONV_ERROR);
 		}
 
-		ret = ctf_dwarf_init_die(fd, elf, &cdies[i], i, errmsg, errlen);
+		ret = ctf_dwarf_init_die(fd, elf, &cdies[i], i, flags, errmsg,
+		    errlen);
 		if (ret != 0) {
 			*errp = ret;
 			goto out;
diff --git a/usr/src/lib/libctf/common/libctf_impl.h b/usr/src/lib/libctf/common/libctf_impl.h
index 11193e97d0..8a9fdd3013 100644
--- a/usr/src/lib/libctf/common/libctf_impl.h
+++ b/usr/src/lib/libctf/common/libctf_impl.h
@@ -35,9 +35,9 @@ typedef enum ctf_conv_status {
 	CTF_CONV_NOTSUP		= 2
 } ctf_conv_status_t;
 
-typedef ctf_conv_status_t (*ctf_convert_f)(int, Elf *, uint_t, int *,
+typedef ctf_conv_status_t (*ctf_convert_f)(int, Elf *, uint_t, uint_t, int *,
     ctf_file_t **, char *, size_t);
-extern ctf_conv_status_t ctf_dwarf_convert(int, Elf *, uint_t, int *,
+extern ctf_conv_status_t ctf_dwarf_convert(int, Elf *, uint_t, uint_t, int *,
     ctf_file_t **, char *, size_t);
 
 /*
