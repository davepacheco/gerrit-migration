commit 1e0bbf5dd240099195f23c75351b89a38d576729 (refs/changes/51/4751/2)
Author: Trent Mick <trentm@gmail.com>
Date:   2018-08-27T09:42:38-07:00 (1 year, 1 month ago)
    
    TRITON-724 sdcadm's flushLogs can fail to callback resulting in exit status 0 when there is an error to report

diff --git a/CHANGES.md b/CHANGES.md
index 6bb98b3..e3efbc0 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -10,6 +10,11 @@
 
 # sdcadm Changelog
 
+## 1.21.1
+
+- TRITON-724 Fix a case where some sdcadm commands can exit with a `0` status
+  when there is an error to report.
+
 ## 1.21.0
 
 - TRITON-696 sdcadm want info subcommand, adds `sdcadm experimental info`
diff --git a/lib/cli/index.js b/lib/cli/index.js
index cdf896a..f7cb0cf 100644
--- a/lib/cli/index.js
+++ b/lib/cli/index.js
@@ -223,11 +223,9 @@ CLI.prototype.fini = function fini(subcmd, err, cb) {
         }
         this.log[logLevel]({subcmd: subcmd, exitStatus: exitStatus, cli: true},
             'cli exit');
-
-        logging.flushLogs([this.log], cb);
-    } else {
-        cb();
     }
+
+    cb();
 };
 
 CLI.prototype.do_self_update = require('./do_self_update').do_self_update;
diff --git a/lib/logging.js b/lib/logging.js
index 72ebdd6..8a14a09 100644
--- a/lib/logging.js
+++ b/lib/logging.js
@@ -161,7 +161,7 @@ OpenOnErrorFileStream.prototype.write1 = function (rec) {
 // Used when writing to file.
 OpenOnErrorFileStream.prototype.write2 = function (rec) {
     var str = JSON.stringify(rec, bunyan.safeCycles()) + '\n';
-    this.stream.write(str);
+    return this.stream.write(str);
 };
 
 
@@ -221,63 +221,6 @@ function createLogger(opts) {
 
 
 
-/**
- * Flush all open log streams
- */
-function flushLogs(logs, callback) {
-    if (!logs) {
-        callback();
-        return;
-    }
-
-    var streams = [];
-    if (!util.isArray(logs)) {
-        logs = [ logs ];
-    }
-
-    if (logs.length === 0) {
-        callback();
-        return;
-    }
-
-    logs.forEach(function (log) {
-        if (!log || !log.streams || log.streams.length === 0) {
-            return;
-        }
-
-        streams = streams.concat(log.streams);
-    });
-
-    var toClose = streams.length;
-    var closed = 0;
-
-    function _doneClose() {
-        closed++;
-        if (closed === toClose) {
-            callback();
-            return;
-        }
-    }
-
-    streams.forEach(function (str) {
-        if (!str || !str.stream) {
-            _doneClose();
-            return;
-        }
-
-        str.stream.once('drain', function () {
-            _doneClose();
-        });
-
-        if (str.stream.write('')) {
-            _doneClose();
-        }
-    });
-}
-
-
-
 module.exports = {
-    createLogger: createLogger,
-    flushLogs: flushLogs
+    createLogger: createLogger
 };
diff --git a/package.json b/package.json
index f3fe66d..881bdbf 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
   "name": "sdcadm",
   "description": "Administer a SmartDataCenter (SDC) standup",
-  "version": "1.21.0",
+  "version": "1.21.1",
   "author": "Joyent (joyent.com)",
   "private": true,
   "dependencies": {
