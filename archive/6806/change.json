{"project":"joyent/illumos-joyent","branch":"master","id":"I2055152641c139b9f477f9e777cc7d86acff4a95","number":"6806","subject":"OS-7955 CKM_AES_CBC_PAD multi-part updates w/ multiple full blocks incorrectly Reviewed by: Dan McDonald \u003cdanmcd@joyent.com\u003e Approved by: Tim Foster \u003ctim.foster@joyent.com\u003e","owner":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"url":"https://cr.joyent.us/6806","commitMessage":"OS-7955 CKM_AES_CBC_PAD multi-part updates w/ multiple full blocks incorrectly\nReviewed by: Dan McDonald \u003cdanmcd@joyent.com\u003e\nApproved by: Tim Foster \u003ctim.foster@joyent.com\u003e\n","createdOn":1566225468,"lastUpdated":1568227856,"open":false,"status":"MERGED","comments":[{"timestamp":1566225468,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 1."},{"timestamp":1566246368,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 1:\n\n(7 comments)"},{"timestamp":1566265523,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 2: Patch Set 1 was rebased."},{"timestamp":1566265526,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 1:\n\n(7 comments)"},{"timestamp":1566330094,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 3."},{"timestamp":1567177442,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Patch Set 3:\n\n(6 comments)"},{"timestamp":1567182309,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 3:\n\n(6 comments)"},{"timestamp":1567182316,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 4."},{"timestamp":1568039341,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 4:\n\n(3 comments)"},{"timestamp":1568041391,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Patch Set 4:\n\n(3 comments)"},{"timestamp":1568041479,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 5."},{"timestamp":1568041734,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"Patch Set 5: Code-Review+1"},{"timestamp":1568216276,"reviewer":{"name":"Tim Foster","email":"tim.foster@joyent.com","username":"timfoster"},"message":"Patch Set 5: Integration-Approval+1"},{"timestamp":1568216338,"reviewer":{"name":"Tim Foster","email":"tim.foster@joyent.com","username":"timfoster"},"message":"Patch Set 5:\n\nI chatted to jbk about these changes, and am happy that they were run through a gauntlet of tests before and during this review, and that the ticket indicates the customer also confirmed it fixed the problem."},{"timestamp":1568216453,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 6: Patch Set 5 was rebased."},{"timestamp":1568216677,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Uploaded patch set 7: Commit message was updated."},{"timestamp":1568227856,"reviewer":{"name":"Gerrit Code Review","email":"no-reply@cr.joyent.us"},"message":"Change has been successfully merged by Jason King"}],"currentPatchSet":{"number":"7","revision":"2055152641c139b9f477f9e777cc7d86acff4a95","parents":["526bf199ed8900945f9dffc3041ec322a758285c"],"ref":"refs/changes/06/6806/7","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1568216677,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1568041734,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1568216276,"by":{"name":"Tim Foster","email":"tim.foster@joyent.com","username":"timfoster"}},{"type":"SUBM","value":"1","grantedOn":1568227856,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":199,"deletions":-13}],"sizeInsertions":199,"sizeDeletions":-13},"patchSets":[{"number":"1","revision":"56c79d7e13b1ee163ac82cba042135336363fd6d","parents":["289a9bb49771505b864985403334d2f94f0ca3ec"],"ref":"refs/changes/06/6806/1","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1566225468,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":926,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"block?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":926,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":928,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Can this indicate why we need to do this? It\u0027s not clear at all. Does it have something to do with the fact that this is used for pads or something else?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":928,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"It\u0027s due to the situation described in L904-909.  Let me take a stab at rewriting the comments there and here to try to make it more obvious they tie together. Unfortunately the intersection of PKCS#11 requires and PKCS#7 padding make this overly complex.\n\nUntil C_DecryptFinal() is called, we never know which block is the final block of ciphertext.  We must also support writing to an output buffer that is exactly the size of the plain text after the padding has been removed, which due to the definition of PKCS7 padding is always 1..AES_BLOCK_LEN bytes smaller than the plaintext.  So whenever we having nothing but full blocks (i.e. exact multiples of AES_BLOCK_LEN), we need to defer decrypting the final block until we either have more blocks (in which case we know it wasn\u0027t the final block), or C_DecryptFinal() is called (in which case we know we need to decrypt and remove padding)."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":930,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"What guarantees this property? It\u0027s not really clear to me from the surrounding code right now."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":930,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"L911-L921 will accumulate (in aes_ctx-\u003eac_remainder) any data until we have at least 1 full block (at which point aes_decrypt_contiguous_blocks will decrypt the block)."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":931,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I\u0027m not sure we should be asserting this. This seems to be a property of the user input value based on how I\u0027ve tracked it. Therefore this can lead to a DOS. Shouldn\u0027t we actually be returning an error if this is the case?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":931,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"The output length (out_len) is the sum of any buffered data (in aes_ctx-\u003eac_remainder, amount is aes_ctx-\u003eac_remainder_len) combined with the amount of input (ulEncryptedDataLen) provided in this call.  If the test at L923-924 is true, we know the sum of those two is \u003e AES_BLOCK_LEN, but the remainder is also zero (so we have at least 2* AES_BLOCK_LEN data total).  Since aex_ctx-\u003eac_remainder_len can at most be AES_BLOCK_LEN bytes long (once we have AES_BLOCK_LEN+1 bytes available, we know that buffered block cannot be the last block and proceed to decrypt it) so ulEncryptedDataLen must also be at least AES_BLOCK_LEN bytes long."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":936,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"What makes sure that in_len doesn\u0027t underflow?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":936,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"It\u0027s initialized to ulEncryptedDataLen, and the VERIFY at line 931 should guarantee there is no underflow (that was part of the reasoning behind adding the VERIFY -- I can add a comment explaining that here)."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":939,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"What guarantees that we actually have enough space for any of these different operations? It\u0027s not clear what\u0027ll happen if we get garbage values for pulDataLen in this case."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":939,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"For L937, because out_len \u003d aes_ctx-\u003eac_remainder_len + ulEncryptedDataLen, and ulEncryptedLen is verified to be \u003e\u003d AES_BLOCK_LEN at L931, we know out_len \u003e AES_BLOCK_LEN (maybe an IMPLY check to make that clearer?)\n\nFor the other two, those can be removed upon further reflection.  They were holdovers from an earlier iteration."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":950,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"Why doesn\u0027t this case have to set the buffer_block? I suspect it has to do with the broader machinations and how this works. Would you mind expanding the comment? It just seems like if we had left over bytes of the next block we\u0027d have to save it like in the first case."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":950,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":58,"deletions":-3}],"sizeInsertions":58,"sizeDeletions":-3},{"number":"2","revision":"99633b02a758f3fc2773fc27aa8dd636bb51681e","parents":["fae35450c961f8c5a41382adf0e202906b2c4584"],"ref":"refs/changes/06/6806/2","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1566265523,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"TRIVIAL_REBASE","files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":58,"deletions":-3}],"sizeInsertions":58,"sizeDeletions":-3},{"number":"3","revision":"77cab2b2f7917af5b62ae573d519503a66c7fb76","parents":["9a27e9327a9c5764a2fd7bc4f5f9ce7bddc512b9"],"ref":"refs/changes/06/6806/3","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1566330094,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":891,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"I\u0027ve found it confusing that sometimes we use in_len for checks and sometimes we use ulEncryptedDataLen particularly when this is before in_len has been modified in any way."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":891,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"I\u0027ll go through and try to make this more consistent"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":992,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"What stops us from overflowing with this arithmetic by passing bad values for ulEncryptedDataLen?\n\nWhy doesn\u0027t this use in_len?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":992,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":993,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"If we\u0027re going to assert this, shouldn\u0027t we do it before we use it above?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":993,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1036,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"At this point aren\u0027t in_len and ulEncryptedDataLen the same thing?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1036,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Heh yeah.  I\u0027ll remove the first one."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1056,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"size to reflect?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1056,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Done"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1071,"reviewer":{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},"message":"For what it\u0027s worth. I spot checked the code and there are several other paths to soft_decyrpt_common() that don\u0027t involve C_DecryptUpdae() at all. These include C_Decrypt(), C_UnwrapKey(), etc."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1071,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Let me try to reword it -- the only path where an external caller passes a value of pulDataLen to here is through C_Decrypt and C_DecryptUpdate which both return CKR_ARGUMENTS_BAD is pulDataLen is NULL prior to calling soft_aes_decrypt_update.  The other callers are internal and always pass in an address -- it could also be turned into a VERIFY if that might be more obvious."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":196,"deletions":-10}],"sizeInsertions":196,"sizeDeletions":-10},{"number":"4","revision":"3d2db855889a52cf38f025a7294ad5e526995dff","parents":["9a27e9327a9c5764a2fd7bc4f5f9ce7bddc512b9"],"ref":"refs/changes/06/6806/4","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1567182316,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","comments":[{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1017,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"I don\u0027t think you need this half of the check.  You\u0027re already guaranteed this by the first check being false.  i.e. Of course out_len \u003e AES_BLOCK_LEN.  (And I wonder if compilers are smart enough to detect this?!)"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1017,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"Hmm yeah.. I\u0027ll remove that bit."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1018,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"My toy programs suggest the compiler will properly peephole-optimize here.  Please check:\n\n   dis -F soft_aes_decrypt_update \u003cobjfile\u003e | grep -i div\n\nShould be quiet.  If it\u0027s NOT, let\u0027s do the compiler\u0027s work for it and make it (out_len \u0026 (AES_BLOCK_LEN - 1))."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1018,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"The compiler _is optimizing_ that as expected."},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1054,"reviewer":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},"message":"You\u0027re checking for the output len being an exact multiple of AES_BLOCK_LEN.  Is the 1018 check wrong?  Or this comment?"},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","line":1054,"reviewer":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"message":"The initial output size is the total amount of buffered input from the previous call + amount of new input (line 996).  The whole if block is adjusting the sizing depending on the scenarios based on scenarios detailed in the comments on line 901 (which depend on the total amount of input available, and not on the amount of new input)."}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":200,"deletions":-13}],"sizeInsertions":200,"sizeDeletions":-13},{"number":"5","revision":"f0b72aa646364a26e85e3a6c817f32df9bef3884","parents":["9a27e9327a9c5764a2fd7bc4f5f9ce7bddc512b9"],"ref":"refs/changes/06/6806/5","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1568041479,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"REWORK","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1568041734,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1568216276,"by":{"name":"Tim Foster","email":"tim.foster@joyent.com","username":"timfoster"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":199,"deletions":-13}],"sizeInsertions":199,"sizeDeletions":-13},{"number":"6","revision":"b24c1e6041d01983d0a249587cfb46d101d8ed1a","parents":["526bf199ed8900945f9dffc3041ec322a758285c"],"ref":"refs/changes/06/6806/6","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1568216453,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"TRIVIAL_REBASE","approvals":[{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1568041734,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1568216276,"by":{"name":"Tim Foster","email":"tim.foster@joyent.com","username":"timfoster"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":7,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":199,"deletions":-13}],"sizeInsertions":199,"sizeDeletions":-13},{"number":"7","revision":"2055152641c139b9f477f9e777cc7d86acff4a95","parents":["526bf199ed8900945f9dffc3041ec322a758285c"],"ref":"refs/changes/06/6806/7","uploader":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"createdOn":1568216677,"author":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"},"isDraft":false,"kind":"NO_CODE_CHANGE","approvals":[{"type":"SUBM","value":"1","grantedOn":1568227856,"by":{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}},{"type":"Code-Review","description":"Code-Review","value":"1","grantedOn":1568041734,"by":{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"}},{"type":"Integration-Approval","description":"Integration-Approval","value":"1","grantedOn":1568216276,"by":{"name":"Tim Foster","email":"tim.foster@joyent.com","username":"timfoster"}}],"files":[{"file":"/COMMIT_MSG","type":"ADDED","insertions":9,"deletions":0},{"file":"usr/src/lib/pkcs11/pkcs11_softtoken/common/softAESCrypt.c","type":"MODIFIED","insertions":199,"deletions":-13}],"sizeInsertions":199,"sizeDeletions":-13}],"allReviewers":[{"name":"Robert Mustacchi","email":"rm+illumos@fingolfin.org","username":"rmustacc"},{"name":"Dan McDonald","email":"danmcd@joyent.com","username":"danmcd"},{"name":"Tim Foster","email":"tim.foster@joyent.com","username":"timfoster"},{"name":"Jason King","email":"jason.king@joyent.com","username":"jasonbking"}]}