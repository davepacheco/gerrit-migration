commit 56bc6da1ffaf1e0ecfe3061f0230654a5581e2af (refs/changes/65/2565/6)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-09-14T22:53:58+00:00 (2 years, 1 month ago)
    
    MORAY-351 moray missing DTrace probes for many RPC operations

diff --git a/lib/buckets/creat.js b/lib/buckets/creat.js
index 9a4c6b6..aefa463 100644
--- a/lib/buckets/creat.js
+++ b/lib/buckets/creat.js
@@ -14,6 +14,7 @@ var once = require('once');
 
 var common = require('./common');
 var control = require('../control');
+var dtrace = require('../dtrace');
 var BucketConflictError = require('../errors').BucketConflictError;
 var InternalError = require('../errors').InternalError;
 
@@ -242,10 +243,16 @@ function creat(options) {
             cfg: cfg,
             opts: opts
         }, 'createBucket: entered');
+        dtrace['createbucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
-            funcs: PIPELINE
+            funcs: PIPELINE,
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/buckets/del.js b/lib/buckets/del.js
index 44e5c14..9405ca9 100644
--- a/lib/buckets/del.js
+++ b/lib/buckets/del.js
@@ -14,6 +14,7 @@ var once = require('once');
 
 var common = require('./common');
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 var mod_errors = require('../errors');
 var InvalidBucketNameError = mod_errors.InvalidBucketNameError;
@@ -208,10 +209,16 @@ function del(options) {
             bucket: bucket,
             opts: opts
         }, 'delBucket: entered');
+        dtrace['delbucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
-            funcs: PIPELINE
+            funcs: PIPELINE,
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/buckets/get.js b/lib/buckets/get.js
index 76e79e4..ed6ac35 100644
--- a/lib/buckets/get.js
+++ b/lib/buckets/get.js
@@ -12,6 +12,7 @@ var util = require('util');
 
 var BucketNotFoundError = require('../errors').BucketNotFoundError;
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 
 ///--- Globals
@@ -92,11 +93,17 @@ function get(options) {
             bucket: bucket,
             opts: opts
         }, 'getBucket: entered');
+        dtrace['getbucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
             funcs: PIPELINE,
-            cbOutput: function () { return req.bucket; }
+            cbOutput: function () { return req.bucket; },
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/buckets/list.js b/lib/buckets/list.js
index 84cdf70..ed3794c 100644
--- a/lib/buckets/list.js
+++ b/lib/buckets/list.js
@@ -9,6 +9,7 @@
  */
 
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 
 ///--- Globals
@@ -72,10 +73,16 @@ function list(options) {
         req.log.debug({
             opts: opts
         }, 'listBuckets: entered');
+        dtrace['listbuckets-start'].fire(function () {
+            return ([req.msgid, req.req_id]);
+        });
 
         control.handlerPipeline({
             req: req,
-            funcs: PIPELINE
+            funcs: PIPELINE,
+            cbProbe: function () {
+                return ([req.msgid, req.req_id]);
+            }
         });
     }
 
diff --git a/lib/buckets/update.js b/lib/buckets/update.js
index 65ba175..ab297a2 100644
--- a/lib/buckets/update.js
+++ b/lib/buckets/update.js
@@ -17,6 +17,7 @@ var clone = require('clone');
 
 var common = require('./common');
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 var mod_errors = require('../errors');
 var BucketNotFoundError = mod_errors.BucketNotFoundError;
@@ -499,10 +500,16 @@ function update(options) {
             cfg: cfg,
             opts: opts
         }, 'updateBucket: entered');
+        dtrace['updatebucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
-            funcs: PIPELINE
+            funcs: PIPELINE,
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/control.js b/lib/control.js
index fe22eb3..b2ab87d 100644
--- a/lib/control.js
+++ b/lib/control.js
@@ -139,6 +139,12 @@ function handlerPipeline(options) {
                 return [req.msgid, route, handler.name, req.req_id];
             });
             handler(options.req, function (err) {
+                if (err) {
+                    dtrace.fire('handler-error', function () {
+                        return ([req.msgid, req.req_id, route, handler.name,
+                            err.toString]);
+                    });
+                }
                 dtrace.fire('handler-done', function () {
                     return [req.msgid, route, handler.name];
                 });
diff --git a/lib/dtrace.js b/lib/dtrace.js
index c5cec2e..d9d417b 100644
--- a/lib/dtrace.js
+++ b/lib/dtrace.js
@@ -85,8 +85,41 @@ var PROBES = {
     // msgid, request_type, handler_name, req_id
     'handler-start': ['int', 'char *', 'char *', 'char *'],
 
+    // msgid, req_id, route, handler_name, error message
+    'handler-error': ['int', 'char *', 'char *', 'char *', 'char *'],
+
     // msgid, request_type, handler_name
-    'handler-done': ['int', 'char *', 'char *']
+    'handler-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'getbucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket, found
+    'getbucket-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'createbucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'createbucket-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'delbucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'delbucket-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id
+    'listbuckets-start': ['int', 'char *'],
+
+    // msgid, req_id
+    'listbuckets-done': ['int', 'char *'],
+
+    // msgid, req_id, bucket
+    'updatebucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'updatebucket-done': ['int', 'char *', 'char *']
 };
 var PROVIDER;
 
