commit 4146296b89d604ddf8442840d6e43c92cc5d8c75 (refs/changes/65/2565/12)
Author: Jan Wyszynski <jan.wyszynski@joyent.com>
Date:   2017-09-21T17:04:07+00:00 (2 years, 1 month ago)
    
    MORAY-351 moray missing DTrace probes for many RPC operations
    Reviewed by: Cody Peter Mello <cody.mello@joyent.com>
    Approved by: Cody Peter Mello <cody.mello@joyent.com>

diff --git a/lib/buckets/creat.js b/lib/buckets/creat.js
index 9a4c6b6..aefa463 100644
--- a/lib/buckets/creat.js
+++ b/lib/buckets/creat.js
@@ -14,6 +14,7 @@ var once = require('once');
 
 var common = require('./common');
 var control = require('../control');
+var dtrace = require('../dtrace');
 var BucketConflictError = require('../errors').BucketConflictError;
 var InternalError = require('../errors').InternalError;
 
@@ -242,10 +243,16 @@ function creat(options) {
             cfg: cfg,
             opts: opts
         }, 'createBucket: entered');
+        dtrace['createbucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
-            funcs: PIPELINE
+            funcs: PIPELINE,
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/buckets/del.js b/lib/buckets/del.js
index 44e5c14..9405ca9 100644
--- a/lib/buckets/del.js
+++ b/lib/buckets/del.js
@@ -14,6 +14,7 @@ var once = require('once');
 
 var common = require('./common');
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 var mod_errors = require('../errors');
 var InvalidBucketNameError = mod_errors.InvalidBucketNameError;
@@ -208,10 +209,16 @@ function del(options) {
             bucket: bucket,
             opts: opts
         }, 'delBucket: entered');
+        dtrace['delbucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
-            funcs: PIPELINE
+            funcs: PIPELINE,
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/buckets/get.js b/lib/buckets/get.js
index 76e79e4..ed6ac35 100644
--- a/lib/buckets/get.js
+++ b/lib/buckets/get.js
@@ -12,6 +12,7 @@ var util = require('util');
 
 var BucketNotFoundError = require('../errors').BucketNotFoundError;
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 
 ///--- Globals
@@ -92,11 +93,17 @@ function get(options) {
             bucket: bucket,
             opts: opts
         }, 'getBucket: entered');
+        dtrace['getbucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
             funcs: PIPELINE,
-            cbOutput: function () { return req.bucket; }
+            cbOutput: function () { return req.bucket; },
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/buckets/list.js b/lib/buckets/list.js
index 84cdf70..bde0500 100644
--- a/lib/buckets/list.js
+++ b/lib/buckets/list.js
@@ -9,6 +9,7 @@
  */
 
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 
 ///--- Globals
@@ -72,6 +73,9 @@ function list(options) {
         req.log.debug({
             opts: opts
         }, 'listBuckets: entered');
+        dtrace['listbuckets-start'].fire(function () {
+            return ([req.msgid, req.req_id]);
+        });
 
         control.handlerPipeline({
             req: req,
diff --git a/lib/buckets/update.js b/lib/buckets/update.js
index 65ba175..ab297a2 100644
--- a/lib/buckets/update.js
+++ b/lib/buckets/update.js
@@ -17,6 +17,7 @@ var clone = require('clone');
 
 var common = require('./common');
 var control = require('../control');
+var dtrace = require('../dtrace');
 
 var mod_errors = require('../errors');
 var BucketNotFoundError = mod_errors.BucketNotFoundError;
@@ -499,10 +500,16 @@ function update(options) {
             cfg: cfg,
             opts: opts
         }, 'updateBucket: entered');
+        dtrace['updatebucket-start'].fire(function () {
+            return ([req.msgid, req.req_id, req.bucket.name]);
+        });
 
         control.handlerPipeline({
             req: req,
-            funcs: PIPELINE
+            funcs: PIPELINE,
+            cbProbe: function () {
+                return ([req.msgid, req.req_id, req.bucket.name]);
+            }
         });
     }
 
diff --git a/lib/control.js b/lib/control.js
index fe22eb3..61f9534 100644
--- a/lib/control.js
+++ b/lib/control.js
@@ -88,7 +88,9 @@ function handlerPipeline(options) {
     var log = req.log;
 
     var cbOutput = options.cbOutput || function () { return null; };
-    var cbProbe = options.cbProbe || function () { return ([req.msgid]); };
+    var cbProbe = options.cbProbe || function () {
+        return ([req.msgid, req.req_id]);
+    };
 
     function pipelineCallback(err) {
         var probe = route.toLowerCase() + '-done';
@@ -139,6 +141,12 @@ function handlerPipeline(options) {
                 return [req.msgid, route, handler.name, req.req_id];
             });
             handler(options.req, function (err) {
+                if (err) {
+                    dtrace.fire('handler-error', function () {
+                        return ([req.msgid, req.req_id, route, handler.name,
+                            err.toString]);
+                    });
+                }
                 dtrace.fire('handler-done', function () {
                     return [req.msgid, route, handler.name];
                 });
diff --git a/lib/dtrace.js b/lib/dtrace.js
index 005acc5..b3636ce 100644
--- a/lib/dtrace.js
+++ b/lib/dtrace.js
@@ -21,26 +21,26 @@ var PROBES = {
     'putobject-start': ['int', 'char *', 'char *', 'char *', 'char *'],
 
     // msgid, req_id
-    'putobject-done': ['int'],
+    'putobject-done': ['int', 'char *'],
 
     // msgid, req_id, bucket, fields, filter
     'update-start': ['int', 'char *', 'char *', 'char *', 'char *'],
 
-    // msgid
-    'update-done': ['int'],
+    // msgid, req_id
+    'update-done': ['int', 'char *'],
 
     // msgid, req_id, bucket, filter
     'delmany-start': ['int', 'char *', 'char *', 'char *'],
 
-    // msgid
-    'delmany-done': ['int'],
+    // msgid, req_id
+    'delmany-done': ['int', 'char *'],
 
     // msgid, req_id
     'batch-start': ['int', 'char *'],
     // msgid, req_id, bucket, op, (key || filter)
     'batch-op-start': ['int', 'char *', 'char *', 'char *', 'char *'],
-    'batch-op-done': ['int'],
-    'batch-done': ['int'],
+    'batch-op-done': ['int', 'char *'],
+    'batch-done': ['int', 'char *'],
 
     // msgid, req_id, bucket, key
     'getobject-start': ['int', 'char *', 'char *', 'char *'],
@@ -51,8 +51,8 @@ var PROBES = {
     // msgid, req_id, bucket, key
     'delobject-start': ['int', 'char *', 'char *', 'char *'],
 
-    // msgid
-    'delobject-done': ['int'],
+    // msgid, req_id
+    'delobject-done': ['int', 'char *'],
 
     // msgid, req_id, bucket, filter
     'findobjects-start': ['int', 'char *', 'char *', 'char *'],
@@ -67,8 +67,8 @@ var PROBES = {
     'reindexobjects-start': ['int', 'char *', 'char *', 'char *'],
     // msgid, bucket, key
     'reindexobjects-record': ['int', 'char *', 'char *'],
-    // msgid
-    'reindexobjects-done': ['int'],
+    // msgid, req_id
+    'reindexobjects-done': ['int', 'char *'],
 
     // reqid, sql
     'query-start': ['char *', 'char *'],
@@ -88,8 +88,47 @@ var PROBES = {
     // msgid, request_type, handler_name, req_id
     'handler-start': ['int', 'char *', 'char *', 'char *'],
 
+    // msgid, req_id, route, handler_name, error message
+    'handler-error': ['int', 'char *', 'char *', 'char *', 'char *'],
+
     // msgid, request_type, handler_name
-    'handler-done': ['int', 'char *', 'char *']
+    'handler-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'getbucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket, found
+    'getbucket-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'createbucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'createbucket-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'delbucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'delbucket-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id
+    'listbuckets-start': ['int', 'char *'],
+
+    // msgid, req_id
+    'listbuckets-done': ['int', 'char *'],
+
+    // msgid, req_id, bucket
+    'updatebucket-start': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, bucket
+    'updatebucket-done': ['int', 'char *', 'char *'],
+
+    // msgid, req_id, deep
+    'ping-start': ['int', 'char *', 'int'],
+
+    // msgid, req_id, deep
+    'ping-done': ['int', 'char *', 'int']
 };
 var PROVIDER;
 
diff --git a/lib/objects/batch.js b/lib/objects/batch.js
index 4e72832..1348cb3 100644
--- a/lib/objects/batch.js
+++ b/lib/objects/batch.js
@@ -106,7 +106,7 @@ function processRequests(req, cb) {
                 arg: subReq
             }, function (err) {
                 dtrace['batch-op-done'].fire(function () {
-                    return ([req.msgid]);
+                    return ([req.msgid, req.req_id]);
                 });
 
                 if (err) {
diff --git a/lib/ping.js b/lib/ping.js
index dc292ab..8407350 100644
--- a/lib/ping.js
+++ b/lib/ping.js
@@ -12,6 +12,7 @@ var util = require('util');
 
 var assert = require('assert-plus');
 var control = require('./control');
+var dtrace = require('./dtrace');
 var libuuid = require('libuuid');
 
 
@@ -39,17 +40,25 @@ function ping(options) {
         }
 
         var opts = argv[0];
+        var req_id = opts.req_id || libuuid.create();
         var log = options.log.child({
-            req_id: opts.req_id || libuuid.create()
+            req_id: req_id
         });
 
         log.debug({
             opts: opts
         }, 'ping: entered');
 
+        dtrace['ping-start'].fire(function () {
+            return ([rpc.requestId(), req_id, opts.deep]);
+        });
+
         if (!opts.deep) {
             log.debug('ping: done');
             rpc.end();
+            dtrace['ping-done'].fire(function () {
+                return ([rpc.requestId(), req_id, opts.deep]);
+            });
             return;
         }
 
@@ -81,6 +90,9 @@ function ping(options) {
                 req.removeAllListeners('row');
                 pg.release();
                 rpc.end();
+                dtrace['ping-done'].fire(function () {
+                    return ([rpc.requestId(), req_id, opts.deep]);
+                });
             });
         });
 
diff --git a/package.json b/package.json
index f150d9b..c14e125 100644
--- a/package.json
+++ b/package.json
@@ -12,7 +12,7 @@
         "bunyan-syslog": "0.2.2",
         "clone": "0.1.11",
         "crc": "0.2.1",
-        "dtrace-provider": "0.2.8",
+        "dtrace-provider": "~0.8",
         "deep-equal": "0.0.0",
         "fast": "2.2.4",
         "ip6addr": "0.1.1",
