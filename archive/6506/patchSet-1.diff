From 4acec817e833c7329eb0bcf23be3f7f42cce4343 Mon Sep 17 00:00:00 2001
From: Jason King <jason.king@joyent.com>
Date: Sun, 16 Sep 2018 01:10:39 +0000
Subject: [PATCH] OS-7858 Allow a range of bytes to be removed from custr_t's

---
 usr/src/lib/libcustr/common/custr.c           | 45 +++++++++++
 usr/src/lib/libcustr/common/libcustr.h        | 26 ++++++-
 usr/src/lib/libcustr/common/mapfile-vers      |  3 +-
 usr/src/test/util-tests/runfiles/default.run  |  4 +-
 usr/src/test/util-tests/tests/Makefile        |  2 +-
 .../test/util-tests/tests/libcustr/Makefile   | 50 +++++++++++++
 .../util-tests/tests/libcustr/custr_delete.c  | 75 +++++++++++++++++++
 7 files changed, 201 insertions(+), 4 deletions(-)
 create mode 100644 usr/src/test/util-tests/tests/libcustr/Makefile
 create mode 100644 usr/src/test/util-tests/tests/libcustr/custr_delete.c

diff --git a/usr/src/lib/libcustr/common/custr.c b/usr/src/lib/libcustr/common/custr.c
index 6d3a003e6b..8765f2ba27 100644
--- a/usr/src/lib/libcustr/common/custr.c
+++ b/usr/src/lib/libcustr/common/custr.c
@@ -85,6 +85,51 @@ custr_reset(custr_t *cus)
 	cus->cus_data[0] = '\0';
 }
 
+void
+custr_delete(custr_t *cus, ssize_t idx, size_t len)
+{
+	/*
+	 * Deleting 0 bytes is always a no-op.
+	 */
+	if (len == 0)
+		return;
+
+	/*
+	 * Convert an index relative to the end of the string to one relative
+	 * to the start of the string.
+	 */
+	if (idx < 0)
+		idx += cus->cus_strlen;
+
+	/*
+	 * Now that idx is relative to the start of the string, make sure
+	 * it is still in range.
+	 */
+	if (idx < 0 || idx > cus->cus_strlen)
+		return;
+
+	/*
+	 * If range to delete goes to the end of the string or beyond, just
+	 * truncate at idx.
+	 */
+	if (idx + len > cus->cus_strlen) {
+		cus->cus_data[idx] = '\0';
+		cus->cus_strlen = idx;
+		return;
+	}
+
+	/*
+	 * Shift the remaining characters (including the terminating NUL)
+	 * after the deleted range left.
+	 */
+	(void) memmove(cus->cus_data + idx, cus->cus_data + idx + len,
+	    cus->cus_strlen - idx - len + 1);
+	cus->cus_strlen -= len;
+
+	/* The result should still be NUL terminated */
+	VERIFY0(cus->cus_data[cus->cus_strlen]);
+}
+
 size_t
 custr_len(custr_t *cus)
 {
diff --git a/usr/src/lib/libcustr/common/libcustr.h b/usr/src/lib/libcustr/common/libcustr.h
index 8fe5fee1b7..bce27d2e20 100644
--- a/usr/src/lib/libcustr/common/libcustr.h
+++ b/usr/src/lib/libcustr/common/libcustr.h
@@ -10,7 +10,7 @@
  */
 
 /*
- * Copyright 2019, Joyent, Inc.
+ * Copyright 2019 Joyent, Inc.
  */
 
 #ifndef _LIBCUSTR_H
@@ -141,6 +141,30 @@ size_t custr_len(custr_t *);
  */
 void custr_reset(custr_t *);
 
+/*
+ * custr_delete(cu, ridx, len)
+ *
+ * Starting from a relative index 'ridx', remove a 'len' bytes from the string.
+ *
+ * If ridx is less than zero, the index is from the end of the string
+ * (i.e. an index of -1 is the last character of the string, -2 is the second
+ * to last, etc).
+ *
+ * If ridx refers to an index outside the valid range of the string, that is
+ * ridx refers to an index beyond the end of the string (ridx > custr_len(cu))
+ * or before the start of the string (ridx + custr_len(cu) < 0), no changes
+ * are made.
+ *
+ * If the amount to remove is larger than the remaining bytes in the string,
+ * the remainder of the string after the given index is removed.  This allows
+ * for usage such as custr_delete(cu, idx, SSIZE_MAX) to truncate a string
+ * from the given index without concern to the actual size.  For example,
+ * custr_delete(cu, -2, SSIZE_MAX) would delete the last two bytes of cu.
+ *
+ * If 'len' is zero, no change occurs.
+ */
+void custr_delete(custr_t *, ssize_t, size_t);
+
 /*
  * Retrieve a const pointer to a NUL-terminated string version of the contents
  * of the dynamic string.  Storage for this string should not be freed, and
diff --git a/usr/src/lib/libcustr/common/mapfile-vers b/usr/src/lib/libcustr/common/mapfile-vers
index f94636b6f5..350bb1c5a5 100644
--- a/usr/src/lib/libcustr/common/mapfile-vers
+++ b/usr/src/lib/libcustr/common/mapfile-vers
@@ -10,7 +10,7 @@
 #
 
 #
-# Copyright 2019, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 #
@@ -40,6 +40,7 @@ SYMBOL_VERSION ILLUMOSprivate {
 	custr_append_printf;
 	custr_append_vprintf;
 	custr_cstr;
+	custr_delete;
 	custr_free;
 	custr_len;
 	custr_reset;
diff --git a/usr/src/test/util-tests/runfiles/default.run b/usr/src/test/util-tests/runfiles/default.run
index f8569b1423..4e3d3390ea 100644
--- a/usr/src/test/util-tests/runfiles/default.run
+++ b/usr/src/test/util-tests/runfiles/default.run
@@ -13,7 +13,7 @@
 # Copyright (c) 2012 by Delphix. All rights reserved.
 # Copyright 2014 Garrett D'Amore <garrett@damore.org>
 # Copyright 2014 Nexenta Systems, Inc. All rights reserved.
-# Copyright 2019, Joyent, Inc.
+# Copyright 2019 Joyent, Inc.
 #
 
 [DEFAULT]
@@ -60,3 +60,5 @@ tests = ['afl-fast', 'gcc-libstdc++', 'llvm-stdcxxabi']
 [/opt/util-tests/tests/ctf]
 pre = precheck
 tests = [ 'ctftest' ]
+
+[/opt/util-tests/tests/custr_delete]
diff --git a/usr/src/test/util-tests/tests/Makefile b/usr/src/test/util-tests/tests/Makefile
index cb2d3028da..cb687ecdf6 100644
--- a/usr/src/test/util-tests/tests/Makefile
+++ b/usr/src/test/util-tests/tests/Makefile
@@ -19,6 +19,6 @@
 
 SUBDIRS = date dis dladm iconv libnvpair_json libsff printf xargs grep_xpg4
 SUBDIRS += demangle mergeq workq chown
-SUBDIRS += bunyan awk smbios libjedec ctf
+SUBDIRS += bunyan awk smbios libjedec ctf libcustr
 
 include $(SRC)/test/Makefile.com
diff --git a/usr/src/test/util-tests/tests/libcustr/Makefile b/usr/src/test/util-tests/tests/libcustr/Makefile
new file mode 100644
index 0000000000..fe7eb2956f
--- /dev/null
+++ b/usr/src/test/util-tests/tests/libcustr/Makefile
@@ -0,0 +1,50 @@
+#
+# This file and its contents are supplied under the terms of the
+# Common Development and Distribution License ("CDDL"), version 1.0.
+# You may only use this file in accordance with the terms of version
+# 1.0 of the CDDL.
+#
+# A full copy of the text of the CDDL should have accompanied this
+# source.  A copy of the CDDL is also available via the Internet at
+# http://www.illumos.org/license/CDDL.
+#
+
+#
+# Copyright 2019 Joyent, Inc.
+#
+
+include $(SRC)/Makefile.master
+
+ROOTOPTPKG = $(ROOT)/opt/util-tests
+TESTDIR = $(ROOTOPTPKG)/tests/
+
+PROGS = custr_delete
+
+include $(SRC)/cmd/Makefile.cmd
+include $(SRC)/test/Makefile.com
+
+CMDS = $(PROGS:%=$(TESTDIR)/%)
+$(CMDS) := FILEMODE = 0555
+
+LDLIBS += -lcustr
+
+all: $(PROGS)
+
+install: all $(CMDS) $(OUTFILES)
+
+clobber: clean
+	-$(RM) $(PROGS)
+
+clean:
+
+$(CMDS): $(TESTDIR) $(PROG)
+
+$(TESTDIR):
+	$(INS.dir)
+
+$(TESTDIR)/%: %
+	$(INS.file)
+
+%: %.c
+	$(LINK.c) -o $@ $< $(LDLIBS)
+	$(POST_PROCESS)
diff --git a/usr/src/test/util-tests/tests/libcustr/custr_delete.c b/usr/src/test/util-tests/tests/libcustr/custr_delete.c
new file mode 100644
index 0000000000..871551def2
--- /dev/null
+++ b/usr/src/test/util-tests/tests/libcustr/custr_delete.c
@@ -0,0 +1,75 @@
+/*
+ * This file and its contents are supplied under the terms of the
+ * Common Development and Distribution License ("CDDL"), version 1.0.
+ * You may only use this file in accordance with the terms of version
+ * 1.0 of the CDDL.
+ *
+ * A full copy of the text of the CDDL should have accompanied this
+ * source.  A copy of the CDDL is also available via the Internet at
+ * http://www.illumos.org/license/CDDL.
+ */
+
+/*
+ * Copyright 2019 Joyent, Inc.
+ */
+
+#include <libcustr.h>
+#include <limits.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <sys/debug.h>
+
+static void
+expect(custr_t *cu, const char *str, const char *file, size_t line)
+{
+	if (strcmp(custr_cstr(cu), str) == 0)
+		return;
+
+	(void) fprintf(stderr, "FAIL: expected '%s', actual value was '%s' "
+	    "at %s:%zu\n",
+	    str, custr_cstr(cu), file, line);
+	abort();
+}
+
+#define	EXPECT(_cu, _str) expect(_cu, _str, __FILE__, __LINE__)
+
+int
+main(void)
+{
+	custr_t *cu;
+
+	VERIFY0(custr_alloc(&cu));
+
+	VERIFY0(custr_append(cu, "12345"));
+	EXPECT(cu, "12345");
+
+	/* 0-length deletes should be no-ops */
+	custr_delete(cu, 0, 0);
+	EXPECT(cu, "12345");
+	custr_delete(cu, 2, 0);
+	EXPECT(cu, "12345");
+	custr_delete(cu, -1, 0);
+	EXPECT(cu, "12345");
+	custr_delete(cu, -2, 0);
+	EXPECT(cu, "12345");
+
+	custr_delete(cu, 0, 1);
+	EXPECT(cu, "2345");
+	custr_delete(cu, -2, 2);
+	EXPECT(cu, "23");
+
+	VERIFY0(custr_append(cu, "456"));
+	EXPECT(cu, "23456");
+
+	custr_delete(cu, 1, 2);
+	EXPECT(cu, "256");
+
+	custr_delete(cu, 1, SSIZE_MAX);
+	EXPECT(cu, "2");
+
+	custr_delete(cu, -1, SSIZE_MAX);
+	VERIFY0(custr_len(cu));
+
+	return (0);
+}
-- 
2.21.0

