From 3d61f3184614228844374e099c5d6dd0ad419681 Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Fri, 16 Jun 2017 15:46:40 +0000
Subject: [PATCH] MANTA-3295 audit job should not use an unbounded number of
 reducers

---
 bin/audit.js                 | 15 +++---
 bin/audit_sweep.js           | 17 ++++---
 bin/audit_transform.js       | 17 ++++---
 bin/cruft.js                 | 15 +++---
 bin/cruft_transform.js       | 17 ++++---
 bin/cruft_verify_and_link.js | 13 +++--
 bin/gc.js                    | 12 +++--
 bin/gc_create_links.js       | 10 ++--
 bin/gc_pg_transform.js       | 15 ++++--
 bin/jext.js                  | 15 +++---
 bin/kick_off_audit.js        | 57 +++++++++++++++------
 bin/kick_off_cruft.js        | 64 ++++++++++++++++-------
 bin/kick_off_gc.js           | 27 +++++-----
 bin/kick_off_pg_job.js       | 15 ++++--
 bin/kick_off_pg_transform.js | 15 ++++--
 bin/kick_off_rebalance.js    |  6 +--
 bin/mdemux.js                | 11 ++--
 bin/pg_transform.js          | 15 +++---
 bin/rebalance.js             | 14 +++---
 lib/audit_row_transformer.js |  1 -
 lib/audit_sweeper.js         |  2 -
 lib/common.js                | 98 +++++++++++++++++++++++++++++++++++-
 lib/cruft_row_transformer.js |  2 -
 package.json                 |  4 +-
 sapi_manifests/mola/template |  6 ++-
 25 files changed, 339 insertions(+), 144 deletions(-)

diff --git a/bin/audit.js b/bin/audit.js
index 657e951..80daf9d 100755
--- a/bin/audit.js
+++ b/bin/audit.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,13 +6,12 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var path = require('path');
-var util = require('util');
 
 
 
@@ -22,15 +20,20 @@ var util = require('util');
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 default:
                         usage('Unknown option: ' + option.option);
                         break;
                 }
         }
+
         return (opts);
 }
 
diff --git a/bin/audit_sweep.js b/bin/audit_sweep.js
index 0b85d94..206f504 100755
--- a/bin/audit_sweep.js
+++ b/bin/audit_sweep.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,16 +6,14 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var bunyan = require('bunyan');
-var carrier = require('carrier');
 var fs = require('fs');
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var path = require('path');
-var util = require('util');
 
 
 
@@ -36,9 +33,13 @@ var LOG = bunyan.createLogger({
 function parseOptions() {
         var option;
         var opts = { log: LOG };
-        var parser = new getopt.BasicParser('e:f:s:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('e:f:s:', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'e':
                         opts.errorFile = option.optarg;
@@ -54,6 +55,7 @@ function parseOptions() {
                         break;
                 }
         }
+
         if (!opts.errorFile) {
                 usage('-e [file] is a required argument');
         }
@@ -63,6 +65,7 @@ function parseOptions() {
         if (!opts.storageListFile) {
                 usage('-s [storage_list_file] is a required argument');
         }
+
         return (opts);
 }
 
diff --git a/bin/audit_transform.js b/bin/audit_transform.js
index 621e831..22242bd 100755
--- a/bin/audit_transform.js
+++ b/bin/audit_transform.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,14 +6,12 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
-var carrier = require('carrier');
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var path = require('path');
-var util = require('util');
 
 
 
@@ -23,9 +20,13 @@ var util = require('util');
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('k:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('k:', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'k':
                         opts.mantaKey = option.optarg;
@@ -35,9 +36,11 @@ function parseOptions() {
                         break;
                 }
         }
+
         if (!opts.mantaKey) {
                 usage('-k [manta_key] is a required argument');
         }
+
         return (opts);
 }
 
diff --git a/bin/cruft.js b/bin/cruft.js
index 21b457b..21cfa08 100755
--- a/bin/cruft.js
+++ b/bin/cruft.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,13 +6,12 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var path = require('path');
-var util = require('util');
 
 
 
@@ -22,15 +20,20 @@ var util = require('util');
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 default:
                         usage('Unknown option: ' + option.option);
                         break;
                 }
         }
+
         return (opts);
 }
 
diff --git a/bin/cruft_transform.js b/bin/cruft_transform.js
index fc32d17..9d7eb6f 100755
--- a/bin/cruft_transform.js
+++ b/bin/cruft_transform.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,14 +6,12 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
-var carrier = require('carrier');
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var path = require('path');
-var util = require('util');
 
 
 
@@ -23,9 +20,13 @@ var util = require('util');
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('f:k:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('f:k:', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'f':
                         opts.filterTimestamp = parseInt(option.optarg, 10);
@@ -38,12 +39,14 @@ function parseOptions() {
                         break;
                 }
         }
+
         if (!opts.mantaKey) {
                 usage('-k [manta_key] is a required argument');
         }
         if (!opts.filterTimestamp) {
                 usage('-f [filter_timestamp] is a required argument');
         }
+
         return (opts);
 }
 
diff --git a/bin/cruft_verify_and_link.js b/bin/cruft_verify_and_link.js
index 848ec6a..9ed5f81 100755
--- a/bin/cruft_verify_and_link.js
+++ b/bin/cruft_verify_and_link.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -59,9 +58,13 @@ function parseOptions() {
         var option;
         var jsonOpts = fs.readFileSync(MOLA_CONFIG);
         var opts = JSON.parse(jsonOpts);
-        var parser = new getopt.BasicParser('L',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('L', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'L':
                         opts.noLink = true;
diff --git a/bin/gc.js b/bin/gc.js
index 67533f6..8fbc313 100755
--- a/bin/gc.js
+++ b/bin/gc.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var getopt = require('posix-getopt');
@@ -21,9 +20,12 @@ var path = require('path');
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('g:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('g:', process.argv);
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'g':
                         opts.gracePeriodSeconds = parseInt(option.optarg, 10);
diff --git a/bin/gc_create_links.js b/bin/gc_create_links.js
index df596e5..19f6120 100755
--- a/bin/gc_create_links.js
+++ b/bin/gc_create_links.js
@@ -54,9 +54,13 @@ var DIR_CACHE = {};
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('d:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('d:', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'd':
                         opts.mantaDir = option.optarg;
diff --git a/bin/gc_pg_transform.js b/bin/gc_pg_transform.js
index 3fbb55e..dc92679 100755
--- a/bin/gc_pg_transform.js
+++ b/bin/gc_pg_transform.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var getopt = require('posix-getopt');
@@ -44,9 +43,13 @@ function parseDate(dateString) {
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('d:e:m:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('d:e:m:', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'd':
                         opts.dumpDate = parseDate(option.optarg);
@@ -62,6 +65,7 @@ function parseOptions() {
                         break;
                 }
         }
+
         if (!opts.dumpDate) {
                 usage('-d [dump_date] is a required argument');
         }
@@ -71,6 +75,7 @@ function parseOptions() {
         if (!opts.morayHostname) {
                 usage('-m [moray_hostname] is a required argument');
         }
+
         return (opts);
 }
 
diff --git a/bin/jext.js b/bin/jext.js
index 3c69557..981d71a 100755
--- a/bin/jext.js
+++ b/bin/jext.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var carrier = require('carrier');
@@ -26,8 +25,6 @@ var path = require('path');
  *
  * When run with the -x (exclude) flag, it will not include the line if any
  * one of the fields is null or undefined.
- *
- * TODO: Add a delimiter other than space.
  */
 
 ///--- Helpers
@@ -38,9 +35,13 @@ function parseOptions() {
         opts.fields = [];
         opts.reverse = false;
         opts.exclude = false;
-        var parser = new getopt.BasicParser('f:rx',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('f:rx', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'f':
                         opts.fields.push(option.optarg);
diff --git a/bin/kick_off_audit.js b/bin/kick_off_audit.js
index c739bb2..e67660b 100755
--- a/bin/kick_off_audit.js
+++ b/bin/kick_off_audit.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,16 +6,16 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
+var assert = require('assert-plus');
 var bunyan = require('bunyan');
 var fs = require('fs');
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var manta = require('manta');
 var path = require('path');
-var sprintf = require('sprintf-js').sprintf;
 
 
 
@@ -45,30 +44,35 @@ var MANTA_DUMP_NAME_PREFIX = 'manta-';
 
 ///--- Helpers
 
-/* BEGIN JSSTYLED */
 function getEnvCommon(opts) {
+        assert.string(opts.marlinPathToAsset, 'opts.marlinPathToAsset');
+
+/* BEGIN JSSTYLED */
         return (' \
 set -o pipefail && \
 cd /assets/ && gtar -xzf ' + opts.marlinPathToAsset + ' && cd mola && \
 ');
-}
 /* END JSSTYLED */
+}
 
 
-/* BEGIN JSSTYLED */
 function getTransformCmd(opts) {
+        assert.number(opts.auditReducerCount, 'opts.auditReducerCount');
+
         var grepForStorageNode = '';
         if (opts.mantaStorageId) {
                 grepForStorageNode = ' | grep ' + opts.mantaStorageId + ' | ';
         }
+
+/* BEGIN JSSTYLED */
         return (getEnvCommon(opts) + ' \
 gzcat -f | \
   ./build/node/bin/node ./bin/audit_transform.js -k $MANTA_INPUT_OBJECT \
     ' + grepForStorageNode + ' | \
-  msplit -n ' + opts.numberReducers + ' \
+  msplit -n ' + opts.auditReducerCount + ' \
 ');
-}
 /* END JSSTYLED */
+}
 
 
 /* BEGIN JSSTYLED */
@@ -86,15 +90,24 @@ function parseOptions() {
         // command line, and use the defaults if all else fails.
         var opts = MOLA_AUDIT_CONFIG_OBJ;
         opts.shards = opts.shards || [];
-        var parser = new getopt.BasicParser('a:d:m:np:r:s:t',
+        var parser = new getopt.BasicParser('a:c:d:m:np:r:s:t',
                                             process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'a':
                         opts.assetFile = option.optarg;
                         break;
+                case 'c':
+                        opts.auditReducerCount = lib.common.parseNumberOption(
+                            option.optarg, '-c', 1, null, usage);
+                        break;
                 case 'd':
-                        opts.auditReduceDisk = parseInt(option.optarg, 10);
+                        opts.auditReduceDisk = lib.common.parseNumberOption(
+                            option.optarg, '-d', 1, null, usage);
                         break;
                 case 'm':
                         opts.shards.push(option.optarg);
@@ -103,10 +116,12 @@ function parseOptions() {
                         opts.noJobStart = true;
                         break;
                 case 'p':
-                        opts.auditMapDisk = parseInt(option.optarg, 10);
+                        opts.auditMapDisk = lib.common.parseNumberOption(
+                            option.optarg, '-p', 1, null, usage);
                         break;
                 case 'r':
-                        opts.auditReduceMemory = parseInt(option.optarg, 10);
+                        opts.auditReduceMemory = lib.common.parseNumberOption(
+                            option.optarg, '-r', 1, null, usage);
                         break;
                 case 's':
                         opts.mantaStorageId = option.optarg;
@@ -156,8 +171,18 @@ function usage(msg) {
 
 
 function getAuditJob(opts, cb) {
-        //Use the same number of reducers as input files.
-        opts.numberReducers = opts.objects.length;
+        /*
+         * There is at least one input file for each Moray shard and each Mako
+         * storage zone.  Scale the number of reducers based on the number of
+         * input files without exceeding the reducer count cap.  If needed,
+         * this value can be overridden by setting the "AUDIT_REDUCER_COUNT"
+         * property in the Manta SAPI application metadata, or by passing the
+         * "-c" option to this program.
+         */
+        if (!opts.hasOwnProperty('auditReducerCount')) {
+                opts.auditReducerCount = lib.common.reducerCurve(
+                    opts.objects.length);
+        }
 
         var pgCmd = getTransformCmd(opts);
         var auditCmd = getAuditCmd(opts);
@@ -169,7 +194,7 @@ function getAuditJob(opts, cb) {
                         disk: opts.auditMapDisk
                 }, {
                         type: 'reduce',
-                        count: opts.numberReducers,
+                        count: opts.auditReducerCount,
                         memory: opts.auditReduceMemory,
                         disk: opts.auditReduceDisk,
                         exec: auditCmd
diff --git a/bin/kick_off_cruft.js b/bin/kick_off_cruft.js
index 2a2e239..1d9b240 100755
--- a/bin/kick_off_cruft.js
+++ b/bin/kick_off_cruft.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,16 +6,16 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
+var assert = require('assert-plus');
 var bunyan = require('bunyan');
 var fs = require('fs');
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var manta = require('manta');
 var path = require('path');
-var sprintf = require('sprintf-js').sprintf;
 
 
 
@@ -47,20 +46,25 @@ var DEFAULT_TOO_NEW_SECONDS = 60 * 60 * 24 * 2; // 2 days
 
 ///--- Helpers
 
-/* BEGIN JSSTYLED */
 function getEnvCommon(opts) {
+        assert.string(opts.jobName, 'opts.jobName');
+        assert.string(opts.marlinPathToAsset, 'opts.marlinPathToAsset');
+
+/* BEGIN JSSTYLED */
         return (' \
 set -o pipefail && \
 export MANTA_CRUFT=' + opts.jobName + ' && \
 export MARLIN_JOB=$(echo $MANTA_OUTPUT_BASE | cut -d "/" -f 4) && \
 cd /assets/ && gtar -xzf ' + opts.marlinPathToAsset + ' && cd mola && \
 ');
-}
 /* END JSSTYLED */
+}
 
 
-/* BEGIN JSSTYLED */
 function getTransformCmd(opts) {
+        assert.number(opts.tooNewSeconds, 'opts.tooNewSeconds');
+        assert.number(opts.cruftReducerCount, 'opts.cruftReducerCount');
+
         var grepForStorageNode = '';
         var filterTimestamp =
                 Math.floor(opts.earliestMorayDump.getTime() / 1000) -
@@ -68,15 +72,17 @@ function getTransformCmd(opts) {
         if (opts.mantaStorageId) {
                 grepForStorageNode = ' | grep ' + opts.mantaStorageId + ' | ';
         }
+
+/* BEGIN JSSTYLED */
         return (getEnvCommon(opts) + ' \
 gzcat -f | \
   ./build/node/bin/node ./bin/cruft_transform.js -k $MANTA_INPUT_OBJECT \
     -f ' + filterTimestamp + ' \
     ' + grepForStorageNode + ' | \
-  msplit -n ' + opts.numberReducers + ' \
+  msplit -n ' + opts.cruftReducerCount + ' \
 ');
-}
 /* END JSSTYLED */
+}
 
 
 /* BEGIN JSSTYLED */
@@ -105,15 +111,24 @@ function parseOptions() {
         // command line, and use the defaults if all else fails.
         var opts = MOLA_CRUFT_CONFIG_OBJ;
         opts.shards = opts.shards || [];
-        var parser = new getopt.BasicParser('a:d:m:np:r:s:tx:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('a:c:d:m:np:r:s:tx:', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'a':
                         opts.assetFile = option.optarg;
                         break;
+                case 'c':
+                        opts.cruftReducerCount = lib.common.parseNumberOption(
+                            option.optarg, '-c', 1, null, usage);
+                        break;
                 case 'd':
-                        opts.cruftReduceDisk = parseInt(option.optarg, 10);
+                        opts.cruftReduceDisk = lib.common.parseNumberOption(
+                            option.optarg, '-d', 1, null, usage);
                         break;
                 case 'm':
                         opts.shards.push(option.optarg);
@@ -122,10 +137,12 @@ function parseOptions() {
                         opts.noJobStart = true;
                         break;
                 case 'p':
-                        opts.cruftMapDisk = parseInt(option.optarg, 10);
+                        opts.cruftMapDisk = lib.common.parseNumberOption(
+                            option.optarg, '-p', 1, null, usage);
                         break;
                 case 'r':
-                        opts.cruftReduceMemory = parseInt(option.optarg, 10);
+                        opts.cruftReduceMemory = lib.common.parseNumberOption(
+                            option.optarg, '-r', 1, null, usage);
                         break;
                 case 's':
                         opts.mantaStorageId = option.optarg;
@@ -135,7 +152,8 @@ function parseOptions() {
                         opts.jobRoot = MP + '/manta_cruft_test';
                         break;
                 case 'x':
-                        opts.tooNewSeconds = parseInt(option.optarg, 10);
+                        opts.tooNewSeconds = lib.common.parseNumberOption(
+                            option.optarg, '-x', 1, null, usage);
                         break;
                 default:
                         usage('Unknown option: ' + option.option);
@@ -184,8 +202,18 @@ function usage(msg) {
 
 
 function getCruftJob(opts, cb) {
-        //Use the same number of reducers as input files.
-        opts.numberReducers = opts.objects.length;
+        /*
+         * There is at least one input file for each Moray shard and each Mako
+         * storage zone.  Scale the number of reducers based on the number of
+         * input files without exceeding the reducer count cap.  If needed,
+         * this value can be overridden by setting the "CRUFT_REDUCER_COUNT"
+         * property in the Manta SAPI application metadata, or by passing the
+         * "-c" option to this program.
+         */
+        if (!opts.hasOwnProperty('cruftReducerCount')) {
+                opts.cruftReducerCount = lib.common.reducerCurve(
+                    opts.objects.length);
+        }
 
         var pgCmd = getTransformCmd(opts);
         var cruftCmd = getCruftCmd(opts);
@@ -197,7 +225,7 @@ function getCruftJob(opts, cb) {
                         disk: opts.cruftMapDisk
                 }, {
                         type: 'reduce',
-                        count: opts.numberReducers,
+                        count: opts.cruftReducerCount,
                         memory: opts.cruftReduceMemory,
                         disk: opts.cruftReduceDisk,
                         exec: cruftCmd
diff --git a/bin/kick_off_gc.js b/bin/kick_off_gc.js
index dda7224..b9e6c3c 100755
--- a/bin/kick_off_gc.js
+++ b/bin/kick_off_gc.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var bunyan = require('bunyan');
@@ -32,12 +31,6 @@ var MOLA_CONFIG = (process.env.MOLA_CONFIG ||
 var MOLA_CONFIG_OBJ = JSON.parse(fs.readFileSync(MOLA_CONFIG));
 var MANTA_CLIENT = manta.createClientFromFileSync(MOLA_CONFIG, LOG);
 var MANTA_USER = MANTA_CLIENT.user;
-var AUDIT = {
-        'audit': true,
-        'startedJob': 0,
-        'cronFailed': 1,
-        'startTime': new Date()
-};
 
 
 
@@ -118,16 +111,22 @@ function parseOptions() {
         opts.shards = opts.shards || [];
         var parser = new getopt.BasicParser('a:d:g:m:no:p:r:t',
                                             process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'a':
                         opts.assetFile = option.optarg;
                         break;
                 case 'd':
-                        opts.gcReduceDisk = parseInt(option.optarg, 10);
+                        opts.gcReduceDisk = lib.common.parseNumberOption(
+                            option.optarg, '-d', 1, null, usage);
                         break;
                 case 'g':
-                        opts.gracePeriodSeconds = parseInt(option.optarg, 10);
+                        opts.gracePeriodSeconds = lib.common.parseNumberOption(
+                            option.optarg, '-g', 1, null, usage);
                         break;
                 case 'm':
                         opts.shards.push(option.optarg);
@@ -139,10 +138,12 @@ function parseOptions() {
                         opts.objectId = option.optarg;
                         break;
                 case 'p':
-                        opts.gcMapDisk = parseInt(option.optarg, 10);
+                        opts.gcMapDisk = lib.common.parseNumberOption(
+                            option.optarg, '-p', 1, null, usage);
                         break;
                 case 'r':
-                        opts.gcReduceMemory = parseInt(option.optarg, 10);
+                        opts.gcReduceMemory = lib.common.parseNumberOption(
+                            option.optarg, '-r', 1, null, usage);
                         break;
                 case 't':
                         opts.jobName = 'manta_gc_test';
diff --git a/bin/kick_off_pg_job.js b/bin/kick_off_pg_job.js
index 12f94d8..951ee1c 100755
--- a/bin/kick_off_pg_job.js
+++ b/bin/kick_off_pg_job.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var bunyan = require('bunyan');
@@ -84,7 +83,11 @@ function parseOptions() {
         opts.tablePrefixes = opts.tablePrefixes || [];
         var parser = new getopt.BasicParser('a:c:e:m:np:r:st:',
                                             process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'a':
                         opts.assetFile = option.optarg;
@@ -93,7 +96,8 @@ function parseOptions() {
                         opts.reduces.push(option.optarg);
                         break;
                 case 'e':
-                        opts.numberReducers = parseInt(option.optarg, 10);
+                        opts.numberReducers = lib.common.parseNumberOption(
+                            option.optarg, '-e', 1, null, usage);
                         break;
                 case 'm':
                         opts.shards.push(option.optarg);
@@ -105,7 +109,8 @@ function parseOptions() {
                         opts.map = option.optarg;
                         break;
                 case 'r':
-                        opts.pgJobReduceMemory = parseInt(option.optarg, 10);
+                        opts.pgJobReduceMemory = lib.common.parseNumberOption(
+                            option.optarg, '-r', 1, null, usage);
                         break;
                 case 's':
                         opts.readFromStdin = true;
diff --git a/bin/kick_off_pg_transform.js b/bin/kick_off_pg_transform.js
index 467eb21..a438722 100755
--- a/bin/kick_off_pg_transform.js
+++ b/bin/kick_off_pg_transform.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -84,7 +83,11 @@ function parseOptions() {
         opts.shards = opts.shards || [];
         var parser = new getopt.BasicParser('a:b:m:no:p:y:',
                                             process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'a':
                         opts.assetFile = option.optarg;
@@ -102,10 +105,12 @@ function parseOptions() {
                         opts.outputDirectory = option.optarg;
                         break;
                 case 'p':
-                        opts.pgMapDisk = parseInt(option.optarg, 10);
+                        opts.pgMapDisk = lib.common.parseNumberOption(
+                            option.optarg, '-p', 1, null, usage);
                         break;
                 case 'y':
-                        opts.pgMapMemory = parseInt(option.optarg, 10);
+                        opts.pgMapMemory = lib.common.parseNumberOption(
+                            option.optarg, '-y', 1, null, usage);
                         break;
                 default:
                         usage('Unknown option: ' + option.option);
diff --git a/bin/kick_off_rebalance.js b/bin/kick_off_rebalance.js
index c9c6910..cf58738 100755
--- a/bin/kick_off_rebalance.js
+++ b/bin/kick_off_rebalance.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -200,7 +199,8 @@ function parseOptions() {
                         opts.noJobStart = true;
                         break;
                 case 'r':
-                        opts.rebalanceMemory = parseInt(option.optarg, 10);
+                        opts.rebalanceMemory = lib.common.parseNumberOption(
+                            option.optarg, '-r', 1, null, usage);
                         break;
                 case 's':
                         opts.storageShard = option.optarg;
diff --git a/bin/mdemux.js b/bin/mdemux.js
index 286fc0b..311947d 100755
--- a/bin/mdemux.js
+++ b/bin/mdemux.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -46,10 +45,13 @@ var DEFAULT_DELIMITER = '\t';
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('d:p:vn',
-                                            process.argv);
+        var parser = new getopt.BasicParser('d:p:vn', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
 
-        while ((option = parser.getopt()) !== undefined && !option.error) {
                 switch (option.option) {
                 case 'd':
                         opts.delimiter = option.optarg;
@@ -69,6 +71,7 @@ function parseOptions() {
                 }
 
         }
+
         if (!opts.pattern) {
                 usage('-p [pattern] is a required argument');
         }
diff --git a/bin/pg_transform.js b/bin/pg_transform.js
index aa32dc1..470e962 100755
--- a/bin/pg_transform.js
+++ b/bin/pg_transform.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,13 +6,12 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var getopt = require('posix-getopt');
 var lib = require('../lib');
 var path = require('path');
-var util = require('util');
 
 
 
@@ -22,15 +20,20 @@ var util = require('util');
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 default:
                         usage('Unknown option: ' + option.option);
                         break;
                 }
         }
+
         return (opts);
 }
 
diff --git a/bin/rebalance.js b/bin/rebalance.js
index 43a1874..574fb16 100755
--- a/bin/rebalance.js
+++ b/bin/rebalance.js
@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-// -*- mode: js -*-
 /*
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
@@ -7,7 +6,7 @@
  */
 
 /*
- * Copyright (c) 2015, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 /*
@@ -43,7 +42,6 @@ var getopt = require('posix-getopt');
 var fs = require('fs');
 var lib = require('../lib');
 var path = require('path');
-var util = require('util');
 
 
 
@@ -52,9 +50,13 @@ var util = require('util');
 function parseOptions() {
         var option;
         var opts = {};
-        var parser = new getopt.BasicParser('d:h:s:',
-                                            process.argv);
-        while ((option = parser.getopt()) !== undefined && !option.error) {
+        var parser = new getopt.BasicParser('d:h:s:', process.argv);
+
+        while ((option = parser.getopt()) !== undefined) {
+                if (option.error) {
+                        usage();
+                }
+
                 switch (option.option) {
                 case 'd':
                         opts.tmpDirectory = option.optarg;
diff --git a/lib/audit_row_transformer.js b/lib/audit_row_transformer.js
index 3327c15..4858b80 100644
--- a/lib/audit_row_transformer.js
+++ b/lib/audit_row_transformer.js
@@ -9,7 +9,6 @@
  */
 
 var carrier = require('carrier');
-var assert = require('assert-plus');
 var events = require('events');
 var SchemaReader = require('./schema_reader');
 var path = require('path');
diff --git a/lib/audit_sweeper.js b/lib/audit_sweeper.js
index 4418ca5..d0da757 100644
--- a/lib/audit_sweeper.js
+++ b/lib/audit_sweeper.js
@@ -10,10 +10,8 @@
 
 var assert = require('assert-plus');
 var carrier = require('carrier');
-var events = require('events');
 var http = require('http');
 var moray = require('moray');
-var util = require('util');
 var vasync = require('vasync');
 
 
diff --git a/lib/common.js b/lib/common.js
index e309943..7a68875 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -5,11 +5,13 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
 var fs = require('fs');
+var jsprim = require('jsprim');
+var sprintf = require('sprintf-js').sprintf;
 var vasync = require('vasync');
 
 
@@ -18,6 +20,21 @@ var MAX_HOURS_IN_PAST = 24;
 // If the mako dumps are more than 3 days in the past we should fatal.
 var MAX_MILLIS_MAKO_DUMPS_IN_PAST = 1000 * 60 * 60 * 24 * 3; // 3 days
 
+/*
+ * There is presently no way to discover the maximum number of reducers that
+ * Manta will allow in job single phase.  The value is essentially hard-coded
+ * for now, and the value below was correct at the time this comment was
+ * written.
+ */
+var MAX_REDUCER_COUNT = 128;
+
+/*
+ * To make sure that software which _can_ use multiple reducers does not
+ * accidentally depend on having only a single reducer, the minimum reducer
+ * count should be small but greater than 1.
+ */
+var MIN_REDUCER_COUNT = 2;
+
 
 // --- Functions
 
@@ -444,6 +461,83 @@ function findMorayMakoObjects(opts, cb) {
 }
 
 
+/*
+ * Parse a numeric option value and check whether it is within a particular
+ * range.
+ */
+function parseNumberOption(value, argname, minval, maxval, errorfunc) {
+        assert.string(value, 'value');
+        assert.string(argname, 'argname');
+        assert.optionalNumber(minval, 'minval');
+        assert.optionalNumber(maxval, 'maxval');
+        assert.func(errorfunc, 'errorfunc');
+
+        var parsed = jsprim.parseInteger(value);
+
+        if (typeof (parsed) !== 'number' ||
+            (minval !== null && parsed < minval) ||
+            (maxval !== null && parsed > maxval)) {
+                var msg = sprintf('%s requires an integer argument', argname);
+
+                if (minval !== null && maxval !== null) {
+                        msg += sprintf(' between %d and %d (inclusive)',
+                            minval, maxval);
+                } else if (minval !== null) {
+                        msg += sprintf(' with a minimum value of %d',
+                            minval);
+                } else if (maxval !== null) {
+                        msg += sprintf(' with a maximum value of %d',
+                            maxval);
+                }
+
+                if (parsed instanceof Error) {
+                        msg += sprintf(': %s', parsed.message);
+                }
+
+                errorfunc(msg);
+                return (null);
+        }
+
+        assert.number(parsed, 'parsed');
+        return (parsed);
+}
+
+
+/*
+ * The reducer phases of some of the maintenance jobs can be scaled with the
+ * size of the input.  This function implements a heuristic for determining a
+ * reasonable reducer count based on the number of input objects to the job.
+ */
+function reducerCurve(n) {
+        assert.number(n, 'n');
+
+        var result;
+
+        /*
+         * For small input counts (up to 16 objects), each additional input
+         * will result in an additional reducer.  This mimics the original
+         * heuristic which was appropriate for smaller Manta deployments.  For
+         * larger input counts the curve is shallower; we add an additional
+         * reducer for every 16 extra input objects, up to the reducer cap.
+         */
+        if (n <= 16) {
+                result = n;
+        } else {
+                result = 16 + n / 16;
+        }
+
+        result = Math.floor(result);
+
+        if (result < MIN_REDUCER_COUNT) {
+                result = MIN_REDUCER_COUNT;
+        } else if (result > MAX_REDUCER_COUNT) {
+                result = MAX_REDUCER_COUNT;
+        }
+
+        return (result);
+}
+
+
 module.exports = {
         endsWith: endsWith,
         findLatestMakoObjects: findLatestMakoObjects,
@@ -454,5 +548,7 @@ module.exports = {
         getObject: getObject,
         getObjectsInDir: getObjectsInDir,
         getObjectToFile: getObjectToFile,
+        parseNumberOption: parseNumberOption,
+        reducerCurve: reducerCurve,
         startsWith: startsWith
 };
diff --git a/lib/cruft_row_transformer.js b/lib/cruft_row_transformer.js
index 87f9904..38a1632 100644
--- a/lib/cruft_row_transformer.js
+++ b/lib/cruft_row_transformer.js
@@ -9,10 +9,8 @@
  */
 
 var carrier = require('carrier');
-var assert = require('assert-plus');
 var events = require('events');
 var SchemaReader = require('./schema_reader');
-var path = require('path');
 var util = require('util');
 
 
diff --git a/package.json b/package.json
index b9d7f0e..3b153a9 100644
--- a/package.json
+++ b/package.json
@@ -6,12 +6,12 @@
         "license": "MPL-2.0",
         "private": true,
         "dependencies": {
-                "assert-plus": "0.1.5",
+                "assert-plus": "^1.0.0",
                 "bunyan": "1.2.1",
                 "carrier": "0.1.14",
                 "dashdash": "1.7.0",
                 "forkexec": "^1.1.0",
-                "hist": "1.0.0",
+                "jsprim": "^1.4.0",
                 "lstream": "0.0.4",
                 "once": "1.3.1",
                 "manta-hk": "git+ssh://git@github.com:joyent/manta-hk.git#master",
diff --git a/sapi_manifests/mola/template b/sapi_manifests/mola/template
index bc39555..c12a616 100644
--- a/sapi_manifests/mola/template
+++ b/sapi_manifests/mola/template
@@ -23,10 +23,12 @@
     }{{#AUDIT_MAP_DISK}},
     "auditMapDisk": {{AUDIT_MAP_DISK}}{{/AUDIT_MAP_DISK}}{{#AUDIT_REDUCE_DISK}},
     "auditReduceDisk": {{AUDIT_REDUCE_DISK}}{{/AUDIT_REDUCE_DISK}}{{#AUDIT_REDUCE_MEMORY}},
-    "auditReduceMemory": {{AUDIT_REDUCE_MEMORY}}{{/AUDIT_REDUCE_MEMORY}}{{#CRUFT_MAP_DISK}},
+    "auditReduceMemory": {{AUDIT_REDUCE_MEMORY}}{{/AUDIT_REDUCE_MEMORY}}{{#AUDIT_REDUCER_COUNT}},
+    "auditReducerCount": {{AUDIT_REDUCER_COUNT}}{{/AUDIT_REDUCER_COUNT}}{{#CRUFT_MAP_DISK}},
     "cruftMapDisk": {{CRUFT_MAP_DISK}}{{/CRUFT_MAP_DISK}}{{#CRUFT_REDUCE_DISK}},
     "cruftReduceDisk": {{CRUFT_REDUCE_DISK}}{{/CRUFT_REDUCE_DISK}}{{#CRUFT_REDUCE_MEMORY}},
-    "cruftReduceMemory": {{CRUFT_REDUCE_MEMORY}}{{/CRUFT_REDUCE_MEMORY}}{{#GC_MAP_DISK}},
+    "cruftReduceMemory": {{CRUFT_REDUCE_MEMORY}}{{/CRUFT_REDUCE_MEMORY}}{{#CRUFT_REDUCER_COUNT}},
+    "cruftReducerCount": {{CRUFT_REDUCER_COUNT}}{{/CRUFT_REDUCER_COUNT}}{{#GC_MAP_DISK}},
     "gcMapDisk": {{GC_MAP_DISK}}{{/GC_MAP_DISK}}{{#GC_REDUCE_DISK}},
     "gcReduceDisk": {{GC_REDUCE_DISK}}{{/GC_REDUCE_DISK}}{{#GC_REDUCE_MEMORY}},
     "gcReduceMemory": {{GC_REDUCE_MEMORY}}{{/GC_REDUCE_MEMORY}}{{#PG_JOB_REDUCE_MEMORY}},
-- 
2.21.0

