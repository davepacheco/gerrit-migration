From cb9df22da7b5c30547067339aabd849806c36e62 Mon Sep 17 00:00:00 2001
From: "Joshua M. Clulow" <jmc@joyent.com>
Date: Wed, 14 Jun 2017 14:43:05 +0000
Subject: [PATCH] MANTA-3295 audit job should not use an unbounded number of
 reducers

---
 bin/kick_off_audit.js        | 33 +++++++++++++++++++++++-------
 bin/kick_off_cruft.js        | 33 +++++++++++++++++++++++-------
 lib/common.js                | 39 +++++++++++++++++++++++++++++++++++-
 sapi_manifests/mola/template |  6 ++++--
 4 files changed, 94 insertions(+), 17 deletions(-)

diff --git a/bin/kick_off_audit.js b/bin/kick_off_audit.js
index c739bb2..c2c0997 100755
--- a/bin/kick_off_audit.js
+++ b/bin/kick_off_audit.js
@@ -7,7 +7,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var bunyan = require('bunyan');
@@ -16,7 +16,6 @@ var getopt = require('posix-getopt');
 var lib = require('../lib');
 var manta = require('manta');
 var path = require('path');
-var sprintf = require('sprintf-js').sprintf;
 
 
 
@@ -65,7 +64,7 @@ function getTransformCmd(opts) {
 gzcat -f | \
   ./build/node/bin/node ./bin/audit_transform.js -k $MANTA_INPUT_OBJECT \
     ' + grepForStorageNode + ' | \
-  msplit -n ' + opts.numberReducers + ' \
+  msplit -n ' + opts.auditReducerCount + ' \
 ');
 }
 /* END JSSTYLED */
@@ -82,17 +81,27 @@ sort | ./build/node/bin/node ./bin/audit.js \
 
 function parseOptions() {
         var option;
+        var t;
         //First take what's in the config file, override what's on the
         // command line, and use the defaults if all else fails.
         var opts = MOLA_AUDIT_CONFIG_OBJ;
         opts.shards = opts.shards || [];
-        var parser = new getopt.BasicParser('a:d:m:np:r:s:t',
+        var parser = new getopt.BasicParser('a:c:d:m:np:r:s:t',
                                             process.argv);
         while ((option = parser.getopt()) !== undefined && !option.error) {
                 switch (option.option) {
                 case 'a':
                         opts.assetFile = option.optarg;
                         break;
+                case 'c':
+                        t = parseInt(option.optarg, 10);
+                        if (isNaN(t) || t < 1 || t > 128) {
+                                usage('-c requires a positive integer ' +
+                                    'between 1 and 128');
+                                break;
+                        }
+                        opts.auditReducerCount = t;
+                        break;
                 case 'd':
                         opts.auditReduceDisk = parseInt(option.optarg, 10);
                         break;
@@ -156,8 +165,18 @@ function usage(msg) {
 
 
 function getAuditJob(opts, cb) {
-        //Use the same number of reducers as input files.
-        opts.numberReducers = opts.objects.length;
+        /*
+         * There is at least one input file for each Moray shard and each Mako
+         * storage zone.  Scale the number of reducers based on the number of
+         * input files without exceeding the reducer count cap.  If needed,
+         * this value can be overridden by setting the "AUDIT_REDUCER_COUNT"
+         * property in the Manta SAPI application metadata, or by passing the
+         * "-c" option to this program.
+         */
+        if (!opts.hasOwnProperty('auditReducerCount')) {
+                opts.auditReducerCount = lib.common.reducerCurve(
+                    opts.objects.length);
+        }
 
         var pgCmd = getTransformCmd(opts);
         var auditCmd = getAuditCmd(opts);
@@ -169,7 +188,7 @@ function getAuditJob(opts, cb) {
                         disk: opts.auditMapDisk
                 }, {
                         type: 'reduce',
-                        count: opts.numberReducers,
+                        count: opts.auditReducerCount,
                         memory: opts.auditReduceMemory,
                         disk: opts.auditReduceDisk,
                         exec: auditCmd
diff --git a/bin/kick_off_cruft.js b/bin/kick_off_cruft.js
index 2a2e239..5e49360 100755
--- a/bin/kick_off_cruft.js
+++ b/bin/kick_off_cruft.js
@@ -7,7 +7,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var bunyan = require('bunyan');
@@ -16,7 +16,6 @@ var getopt = require('posix-getopt');
 var lib = require('../lib');
 var manta = require('manta');
 var path = require('path');
-var sprintf = require('sprintf-js').sprintf;
 
 
 
@@ -73,7 +72,7 @@ gzcat -f | \
   ./build/node/bin/node ./bin/cruft_transform.js -k $MANTA_INPUT_OBJECT \
     -f ' + filterTimestamp + ' \
     ' + grepForStorageNode + ' | \
-  msplit -n ' + opts.numberReducers + ' \
+  msplit -n ' + opts.cruftReducerCount + ' \
 ');
 }
 /* END JSSTYLED */
@@ -101,17 +100,27 @@ sort -r | ./build/node/bin/node ./bin/cruft.js | \
 
 function parseOptions() {
         var option;
+        var t;
         //First take what's in the config file, override what's on the
         // command line, and use the defaults if all else fails.
         var opts = MOLA_CRUFT_CONFIG_OBJ;
         opts.shards = opts.shards || [];
-        var parser = new getopt.BasicParser('a:d:m:np:r:s:tx:',
+        var parser = new getopt.BasicParser('a:c:d:m:np:r:s:tx:',
                                             process.argv);
         while ((option = parser.getopt()) !== undefined && !option.error) {
                 switch (option.option) {
                 case 'a':
                         opts.assetFile = option.optarg;
                         break;
+                case 'c':
+                        t = parseInt(option.optarg, 10);
+                        if (isNaN(t) || t < 1 || t > 128) {
+                                usage('-c requires a positive integer ' +
+                                    'between 1 and 128');
+                                break;
+                        }
+                        opts.cruftReducerCount = t;
+                        break;
                 case 'd':
                         opts.cruftReduceDisk = parseInt(option.optarg, 10);
                         break;
@@ -184,8 +193,18 @@ function usage(msg) {
 
 
 function getCruftJob(opts, cb) {
-        //Use the same number of reducers as input files.
-        opts.numberReducers = opts.objects.length;
+        /*
+         * There is at least one input file for each Moray shard and each Mako
+         * storage zone.  Scale the number of reducers based on the number of
+         * input files without exceeding the reducer count cap.  If needed,
+         * this value can be overridden by setting the "CRUFT_REDUCER_COUNT"
+         * property in the Manta SAPI application metadata, or by passing the
+         * "-c" option to this program.
+         */
+        if (!opts.hasOwnProperty('cruftReducerCount')) {
+                opts.cruftReducerCount = lib.common.reducerCurve(
+                    opts.objects.length);
+        }
 
         var pgCmd = getTransformCmd(opts);
         var cruftCmd = getCruftCmd(opts);
@@ -197,7 +216,7 @@ function getCruftJob(opts, cb) {
                         disk: opts.cruftMapDisk
                 }, {
                         type: 'reduce',
-                        count: opts.numberReducers,
+                        count: opts.cruftReducerCount,
                         memory: opts.cruftReduceMemory,
                         disk: opts.cruftReduceDisk,
                         exec: cruftCmd
diff --git a/lib/common.js b/lib/common.js
index e309943..dd9e191 100644
--- a/lib/common.js
+++ b/lib/common.js
@@ -5,7 +5,7 @@
  */
 
 /*
- * Copyright (c) 2014, Joyent, Inc.
+ * Copyright (c) 2017, Joyent, Inc.
  */
 
 var assert = require('assert-plus');
@@ -18,6 +18,21 @@ var MAX_HOURS_IN_PAST = 24;
 // If the mako dumps are more than 3 days in the past we should fatal.
 var MAX_MILLIS_MAKO_DUMPS_IN_PAST = 1000 * 60 * 60 * 24 * 3; // 3 days
 
+/*
+ * There is presently no way to discover the maximum number of reducers that
+ * Manta will allow in job single phase.  The value is essentially hard-coded
+ * for now, and the value below was correct at the time this comment was
+ * written.
+ */
+var MAX_REDUCER_COUNT = 128;
+
+/*
+ * To make sure that software which _can_ use multiple reducers does not
+ * accidentally depend on having only a single reducer, the minimum reducer
+ * count should be small but greater than 1.
+ */
+var MIN_REDUCER_COUNT = 2;
+
 
 // --- Functions
 
@@ -444,6 +459,27 @@ function findMorayMakoObjects(opts, cb) {
 }
 
 
+function reducerCurve(n) {
+        var result;
+
+        if (n <= 16) {
+                result = n;
+        } else {
+                result = 16 + n / 16;
+        }
+
+        result = Math.floor(result);
+
+        if (result < MIN_REDUCER_COUNT) {
+                result = MIN_REDUCER_COUNT;
+        } else if (result > MAX_REDUCER_COUNT) {
+                result = MAX_REDUCER_COUNT;
+        }
+
+        return (result);
+}
+
+
 module.exports = {
         endsWith: endsWith,
         findLatestMakoObjects: findLatestMakoObjects,
@@ -454,5 +490,6 @@ module.exports = {
         getObject: getObject,
         getObjectsInDir: getObjectsInDir,
         getObjectToFile: getObjectToFile,
+        reducerCurve: reducerCurve,
         startsWith: startsWith
 };
diff --git a/sapi_manifests/mola/template b/sapi_manifests/mola/template
index bc39555..c12a616 100644
--- a/sapi_manifests/mola/template
+++ b/sapi_manifests/mola/template
@@ -23,10 +23,12 @@
     }{{#AUDIT_MAP_DISK}},
     "auditMapDisk": {{AUDIT_MAP_DISK}}{{/AUDIT_MAP_DISK}}{{#AUDIT_REDUCE_DISK}},
     "auditReduceDisk": {{AUDIT_REDUCE_DISK}}{{/AUDIT_REDUCE_DISK}}{{#AUDIT_REDUCE_MEMORY}},
-    "auditReduceMemory": {{AUDIT_REDUCE_MEMORY}}{{/AUDIT_REDUCE_MEMORY}}{{#CRUFT_MAP_DISK}},
+    "auditReduceMemory": {{AUDIT_REDUCE_MEMORY}}{{/AUDIT_REDUCE_MEMORY}}{{#AUDIT_REDUCER_COUNT}},
+    "auditReducerCount": {{AUDIT_REDUCER_COUNT}}{{/AUDIT_REDUCER_COUNT}}{{#CRUFT_MAP_DISK}},
     "cruftMapDisk": {{CRUFT_MAP_DISK}}{{/CRUFT_MAP_DISK}}{{#CRUFT_REDUCE_DISK}},
     "cruftReduceDisk": {{CRUFT_REDUCE_DISK}}{{/CRUFT_REDUCE_DISK}}{{#CRUFT_REDUCE_MEMORY}},
-    "cruftReduceMemory": {{CRUFT_REDUCE_MEMORY}}{{/CRUFT_REDUCE_MEMORY}}{{#GC_MAP_DISK}},
+    "cruftReduceMemory": {{CRUFT_REDUCE_MEMORY}}{{/CRUFT_REDUCE_MEMORY}}{{#CRUFT_REDUCER_COUNT}},
+    "cruftReducerCount": {{CRUFT_REDUCER_COUNT}}{{/CRUFT_REDUCER_COUNT}}{{#GC_MAP_DISK}},
     "gcMapDisk": {{GC_MAP_DISK}}{{/GC_MAP_DISK}}{{#GC_REDUCE_DISK}},
     "gcReduceDisk": {{GC_REDUCE_DISK}}{{/GC_REDUCE_DISK}}{{#GC_REDUCE_MEMORY}},
     "gcReduceMemory": {{GC_REDUCE_MEMORY}}{{/GC_REDUCE_MEMORY}}{{#PG_JOB_REDUCE_MEMORY}},
-- 
2.21.0

