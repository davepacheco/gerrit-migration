commit 3cbdd00d1f1243c1ca576cfe609df6fa94110a5f (refs/changes/35/2435/1)
Author: Alex Wilson <alex.wilson@joyent.com>
Date:   2017-08-18T19:02:31-07:00 (2 years, 2 months ago)
    
    joyent/node-sshpk#35 joyent/node-sshpk#32 broke node <5.x by using Buffer.from

diff --git a/lib/formats/dnssec.js b/lib/formats/dnssec.js
index e077d73..1eb4b5b 100644
--- a/lib/formats/dnssec.js
+++ b/lib/formats/dnssec.js
@@ -66,7 +66,7 @@ function readRFC3110(keyString) {
 	if (!supportedAlgosById[algorithm])
 		throw (new Error('Unsupported algorithm: ' + algorithm));
 	var base64key = elems.slice(6, elems.length).join();
-	var keyBuffer = Buffer.from(base64key, 'base64');
+	var keyBuffer = new Buffer(base64key, 'base64');
 	if (supportedAlgosById[algorithm].match(/^RSA-/)) {
 		// join the rest of the body into a single base64-blob
 		var publicExponentLen = keyBuffer.readUInt8(0);
@@ -101,7 +101,7 @@ function readRFC3110(keyString) {
 			curve: curve,
 			size: size,
 			parts: [
-				{name: 'curve', data: Buffer.from(curve) },
+				{name: 'curve', data: new Buffer(curve) },
 				{name: 'Q', data: utils.ecNormalize(keyBuffer) }
 			]
 		};
@@ -112,7 +112,7 @@ function readRFC3110(keyString) {
 }
 
 function elementToBuf(e) {
-	return (Buffer.from(e.split(' ')[1], 'base64'));
+	return (new Buffer(e.split(' ')[1], 'base64'));
 }
 
 function readDNSSECRSAPrivateKey(elements) {
@@ -161,7 +161,7 @@ function readDNSSECPrivateKey(alg, elements) {
 	}
 	if (supportedAlgosById[alg] === 'ECDSA-P384-SHA384' ||
 	    supportedAlgosById[alg] === 'ECDSA-P256-SHA256') {
-		var d = Buffer.from(elements[0].split(' ')[1], 'base64');
+		var d = new Buffer(elements[0].split(' ')[1], 'base64');
 		var curve = 'nistp384';
 		var size = 384;
 		if (supportedAlgosById[alg] === 'ECDSA-P256-SHA256') {
@@ -176,7 +176,7 @@ function readDNSSECPrivateKey(alg, elements) {
 			curve: curve,
 			size: size,
 			parts: [
-				{name: 'curve', data: Buffer.from(curve) },
+				{name: 'curve', data: new Buffer(curve) },
 				{name: 'd', data: d },
 				{name: 'Q', data: Q }
 			]
@@ -237,7 +237,7 @@ function writeRSA(key, options) {
 	out += 'Created: ' + dnssecTimestamp(timestamp) + '\n';
 	out += 'Publish: ' + dnssecTimestamp(timestamp) + '\n';
 	out += 'Activate: ' + dnssecTimestamp(timestamp) + '\n';
-	return (Buffer.from(out, 'ascii'));
+	return (new Buffer(out, 'ascii'));
 }
 
 function writeECDSA(key, options) {
@@ -260,7 +260,7 @@ function writeECDSA(key, options) {
 	out += 'Publish: ' + dnssecTimestamp(timestamp) + '\n';
 	out += 'Activate: ' + dnssecTimestamp(timestamp) + '\n';
 
-	return (Buffer.from(out, 'ascii'));
+	return (new Buffer(out, 'ascii'));
 }
 
 function write(key, options) {
